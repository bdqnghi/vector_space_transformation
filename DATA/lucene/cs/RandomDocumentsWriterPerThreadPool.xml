Lucene.Net.Index System using System.Diagnostics using System.Threading using class Lucene.Net.Index.RandomDocumentsWriterPerThreadPool super super DocumentsWriterPerThreadPool decl ThreadState Random int int ThreadState ThreadState public override public override decl_stmt ThreadState = if == lock if == = = return > for = < ++ decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) lock = != if call ThreadState.TryLock() call ThreadState.TryLock() call ThreadState.TryLock() call ThreadState.TryLock() call ThreadState.TryLock() return if call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) == break lock decl_stmt ThreadState = if != = - = return != call ThreadState.Lock() call ThreadState.Lock() call ThreadState.Lock() call ThreadState.Lock() call ThreadState.Lock() return