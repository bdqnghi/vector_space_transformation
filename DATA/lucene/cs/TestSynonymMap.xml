org.apache.lucene.analysis.synonym System using System.Collections.Generic using org.apache.lucene.analysis.ngram.NGramTokenizerFactory org.apache.lucene.analysis.util.AbstractAnalysisFactory org.apache.lucene.analysis.util.TokenizerFactory org.apache.lucene.util.LuceneTestCase org.apache.lucene.analysis.util.ResourceLoader class attribute org.apache.lucene.analysis.synonym.TestSynonymMap super super LuceneTestCase decl IList SlowSynonymMap public virtual public virtual decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap = new decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() try catch decl IList SlowSynonymMap public virtual public virtual decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() decl IList SlowSynonymMap public virtual public virtual decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() decl IList SlowSynonymMap public virtual public virtual decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() TokenizerFactory decl IList SlowSynonymMap decl IDictionary public virtual public virtual decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < = = = decl_stmt Lucene.Net.Analysis.Util.TokenizerFactory = new decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = new call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() SlowSynonymMap decl IDictionary SlowSynonymFilterFactory public virtual public virtual decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < = decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory = new call Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory.inform(ResourceLoader) call Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory.inform(ResourceLoader) call Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory.inform(ResourceLoader) call Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory.inform(ResourceLoader) call Lucene.Net.Analysis.Synonym.SlowSynonymFilterFactory.inform(ResourceLoader) new decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap = call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() public override public override public override < < throw new public override public override if ! throw new else return new decl Token bool private private decl_stmt Lucene.Net.Analysis.Token = decl_stmt bool = foreach in if new = private private return