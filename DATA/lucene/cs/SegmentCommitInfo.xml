Lucene.Net.Index System.Collections.Generic using Lucene.Net.Support using Lucene.Net.Store.Directory class Lucene.Net.Index.SegmentCommitInfo SegmentInfo long long long int long long decl IDictionary long return internal virtual internal virtual = = + = - internal virtual internal virtual ++ internal virtual internal virtual = = + = - internal virtual internal virtual ++ long public virtual public virtual if == - decl_stmt long = foreach in += call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() call SegmentInfo.Dir() = return decl ISet public virtual < public virtual < decl_stmt System.Collections.Generic.ISet < = new < call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() call SegmentInfo.Codec() foreach < in return return = = - public virtual public virtual return != - public virtual public virtual return != - return return return return return if < || || throw new + + + + = string public virtual public virtual decl_stmt string = call Lucene.Net.Index.SegmentInfo.ToString() call Lucene.Net.Index.SegmentInfo.ToString() call Lucene.Net.Index.SegmentInfo.ToString() call Lucene.Net.Index.SegmentInfo.ToString() call Lucene.Net.Index.SegmentInfo.ToString() + if != - += + if != - += + return public override public override return SegmentCommitInfo public virtual public virtual decl_stmt Lucene.Net.Index.SegmentCommitInfo = new = = foreach < < in = new < return