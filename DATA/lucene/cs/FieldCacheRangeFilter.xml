Lucene.Net.Search System using System.Diagnostics using System.Text using Lucene.Net.Index.AtomicReader Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Util.NumericUtils Lucene.Net.Index.SortedDocValues class Lucene.Net.Search.FieldCacheRangeFilter int protected internal override protected internal override decl_stmt int = return >= && <= int int SortedDocValues int public override public override decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt int = == - : call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) new decl_stmt int = == - : call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) new decl_stmt int if == - && == = else if && >= = else if >= = + else = - - if == - && == = else if && >= = else if >= = - else = - - if < || || return > && > return new int protected internal override protected internal override decl_stmt int = return >= && <= int int SortedDocValues int public override public override decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt int = == - : call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) decl_stmt int = == - : call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) call Lucene.Net.Index.SortedDocValues.LookupTerm(BytesRef) decl_stmt int if == - && == = else if && >= = else if >= = + else = - - if == - && == = else if && >= = else if >= = - else = - - if < || || return return new sbyte protected internal override protected internal override decl_stmt sbyte = return >= && <= var sbyte sbyte public override public override decl_stmt sbyte if != decl_stmt sbyte = sbyte if ! && == return = : + else = if != decl_stmt sbyte = sbyte if ! && == return = : - else = if > return decl_stmt var = return new short protected internal override protected internal override decl_stmt short = return >= && <= decl FieldCache short decl Shorts short public override public override decl_stmt short if != decl_stmt short = short if ! && == return = : + else = if != decl_stmt short = short if ! && == return = : - else = if > return decl_stmt Shorts = return new int protected internal override protected internal override decl_stmt int = return >= && <= decl FieldCache int decl Ints int public override public override decl_stmt int if != decl_stmt int = int if ! && == return = : + else = if != decl_stmt int = int if ! && == return = : - else = if > return decl_stmt Ints = return new long protected internal override protected internal override decl_stmt long = return >= && <= decl FieldCache long decl Longs long public override public override decl_stmt long if != decl_stmt long = long if ! && == return = : + else = if != decl_stmt long = long if ! && == return = : - else = if > return decl_stmt Longs = return new float protected internal override protected internal override decl_stmt float = return >= && <= int float decl FieldCache float float public override public override decl_stmt float decl_stmt float if != decl_stmt float = float if ! && > && return decl_stmt int = = : + else = if != decl_stmt float = float if ! && < && return decl_stmt int = = : - else = if > return decl_stmt Floats = return new double protected internal override protected internal override decl_stmt double = return >= && <= long double decl FieldCache double double public override public override decl_stmt double decl_stmt double if != decl_stmt double = double if ! && > && return decl_stmt long = = : + else = if != decl_stmt double = double if ! && < && return decl_stmt long = = : - else = if > return decl_stmt Doubles = return new public static < public static < return new public static < public static < return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new public static < ? public static < ? ? ? return public static < ? public static < ? ? ? return new