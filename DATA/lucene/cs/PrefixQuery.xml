Lucene.Net.Search System.Text using Lucene.Net.Util.AttributeSource Lucene.Net.Index.Term Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.PrefixQuery super super MultiTermQuery Term return TermsEnum public override public override decl_stmt Lucene.Net.Index.TermsEnum = if == return return new StringBuilder public override public override decl_stmt System.Text.StringBuilder = new if ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int int public override public override decl_stmt int const const = decl_stmt int = = * + == : call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() return PrefixQuery public override public override if == return if ! return if != return decl_stmt Lucene.Net.Search.PrefixQuery = if == if != return else if ! call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) return return