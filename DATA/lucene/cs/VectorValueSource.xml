Lucene.Net.Queries.Function.ValueSources System.Collections using System.Collections.Generic using System.Text using Lucene.Net.Index using Lucene.Net.Search using class Lucene.Net.Queries.Function.ValueSources.VectorValueSource super super MultiValueSource decl IList return return return var var var var public override public override decl_stmt var = if == decl_stmt var = decl_stmt var = return new decl_stmt var = new for = < ++ = return new public override public override = = public override public override = = public override public override = = public override public override = = public override public override = = public override public override = = public override public override = = public override public override return + + + + + public override public override for = < ++ = public override public override for = < ++ = public override public override for = < ++ = public override public override for = < ++ = public override public override for = < ++ = public override public override for = < ++ = public override public override for = < ++ = var bool public override public override decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() decl_stmt bool = foreach in if = else call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() public override public override foreach in var bool decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() decl_stmt bool = foreach in if = else call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() var public override public override if == return if ! is return decl_stmt var = return call decl IList.Equals() call decl IList.Equals() call decl IList.Equals() call decl IList.Equals() call decl IList.Equals() public override public override return call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode()