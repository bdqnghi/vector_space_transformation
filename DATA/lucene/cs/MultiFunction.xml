Lucene.Net.Queries.Function.ValueSources System.Collections using System.Collections.Generic using System.Text using Lucene.Net.Index using Lucene.Net.Search using class Lucene.Net.Queries.Function.ValueSources.MultiFunction super super ValueSource decl IList return var bool public static public static < decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() decl_stmt bool = foreach in if = else call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() object call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() int var public static public static < decl_stmt var = new decl_stmt int = foreach in ++ = return public override public override return var bool public static public static decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() decl_stmt bool = foreach in if = else call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() public override public override foreach in public override public override return call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode() call decl IList.GetHashCode() + var public override public override if != return decl_stmt var = return