Lucene.Net.Search System using System.Threading using Lucene.Net.Support using Lucene.Net.Index.IndexWriter Lucene.Net.Index.TrackingIndexWriter class super super ThreadClass super IDisposable where bool bool ManualResetEvent long long TrackingIndexWriter long decl ReferenceManager long ReentrantLock long public public public public private private lock = public public lock = call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() try call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() finally call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() try catch throw new = public virtual public virtual - long long long public virtual public virtual lock decl_stmt long = if > throw new + + + + if > call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() = try call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() finally call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() decl_stmt long = while > if < else decl_stmt long = + - if <= return else return long long long bool public override public override decl_stmt long = * while ! while ! call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() try decl_stmt bool = > decl_stmt long = + : decl_stmt long = - * if > call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() new / else break catch return finally call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() if break = * = try call decl ReferenceManager.MaybeRefreshBlocking() call decl ReferenceManager.MaybeRefreshBlocking() call decl ReferenceManager.MaybeRefreshBlocking() call decl ReferenceManager.MaybeRefreshBlocking() call decl ReferenceManager.MaybeRefreshBlocking() catch throw new