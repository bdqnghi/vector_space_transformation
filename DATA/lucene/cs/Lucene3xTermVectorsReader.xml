Lucene.Net.Codecs.Lucene3x System using System.Collections.Generic using System.Diagnostics using System.Collections using Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Store.CompoundFileDirectory Lucene.Net.Store.Directory Lucene.Net.Index.DocsAndPositionsEnum Lucene.Net.Index.DocsEnum Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.Fields Lucene.Net.Index.IndexFileNames Lucene.Net.Index.IndexFormatTooNewException Lucene.Net.Index.IndexFormatTooOldException Lucene.Net.Store.IndexInput Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Index.SegmentInfo Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum class attribute Lucene.Net.Codecs.Lucene3x.Lucene3xTermVectorsReader super super TermVectorsReader string int int IndexInput string int CompoundFileDirectory int sbyte int int string sbyte int FieldInfos IndexInput IndexInput int internal virtual internal virtual call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + * + int private private decl_stmt int = if < throw new if > throw new return protected override protected override if internal virtual internal virtual return public override < public override < return new public public if != && < = ++ return return return return public public throw new public public FieldInfo int public override public override decl_stmt Lucene.Net.Index.FieldInfo = if == return decl_stmt int if ! out return return new if == return else return TVTermsEnum public override public override decl_stmt TVTermsEnum if is = if ! call TVTermsEnum.CanReuse() call TVTermsEnum.CanReuse() call TVTermsEnum.CanReuse() call TVTermsEnum.CanReuse() call TVTermsEnum.CanReuse() = new else = new call TVTermsEnum.Reset() call TVTermsEnum.Reset() call TVTermsEnum.Reset() call TVTermsEnum.Reset() call TVTermsEnum.Reset() return public override public override return return - return return if return else return public override public override return public override public override return public override public override return public override public override return public virtual public virtual return == public virtual public virtual = = = = - call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = if new public virtual public virtual return BytesRef int decl int decl int int int BytesRef int decl int TermAndPostings int int internal virtual internal virtual = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ decl_stmt TermAndPostings = new decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = + call Lucene.Net.Util.BytesRef.Grow(int) call Lucene.Net.Util.BytesRef.Grow(int) call Lucene.Net.Util.BytesRef.Grow(int) call Lucene.Net.Util.BytesRef.Grow(int) call Lucene.Net.Util.BytesRef.Grow(int) call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = if decl_stmt int = new decl_stmt int = for = < ++ decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if == - = += = = if decl_stmt int = new decl_stmt int = new decl_stmt int = for = < ++ = + call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = = + call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = = call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) = decl IComparer int public override public override decl_stmt System.Collections.Generic.IComparer < = for = < ++ decl_stmt int = call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() if < = return else if == = return = return public override public override throw new public override public override if ++ >= return return public override public override return public override public override throw new public override public override return public override public override return TVDocsEnum public override public override decl_stmt TVDocsEnum if != && is = else = new call TVDocsEnum.Reset() call TVDocsEnum.Reset() call TVDocsEnum.Reset() call TVDocsEnum.Reset() call TVDocsEnum.Reset() return TVDocsAndPositionsEnum public override public override if ! && ! return decl_stmt TVDocsAndPositionsEnum if != && is = else = new call TVDocsAndPositionsEnum.Reset() call TVDocsAndPositionsEnum.Reset() call TVDocsAndPositionsEnum.Reset() call TVDocsAndPositionsEnum.Reset() call TVDocsAndPositionsEnum.Reset() return if return else return public override public override return public override public override return public override public override if ! && == || = return = else return = public override public override if ! && == return else return = public virtual public virtual = = = - = public override public override return public override public override if != return else != return public override public override return public override public override if ! && == || = return = else return = public override public override if ! && == return else return = public virtual public virtual = = = = = - = = return public override public override != && < || != && < if != return ++ else ++ return - public override public override if != return - else return - public override public override if != return - else return - public override public override return Fields public override public override if != decl_stmt Lucene.Net.Index.Fields = new if == return else return else return IndexInput IndexInput IndexInput public override public override decl_stmt Lucene.Net.Store.IndexInput = decl_stmt Lucene.Net.Store.IndexInput = decl_stmt Lucene.Net.Store.IndexInput = if != && != && != = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() return new protected internal virtual protected internal virtual return public override public override return public override public override