Lucene.Net.Search Apache.NMS.Util using Lucene.Net.Documents using Lucene.Net.Support using System using NUnit.Framework using Lucene.Net.Util.Automaton.Automaton Lucene.Net.Util.Automaton.AutomatonTestUtil Lucene.Net.Util.Automaton.BasicAutomata Lucene.Net.Util.Automaton.BasicOperations Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Index.MultiFields Lucene.Net.Index.RandomIndexWriter Lucene.Net.Index.SingleTermsEnum Lucene.Net.Index.Term Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.TestAutomatonQuery super super LuceneTestCase Directory IndexSearcher string IndexReader Document Field RandomIndexWriter Field Field public override public override = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = + call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() private private return new private private if + return call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) AutomatonQuery private private decl_stmt Lucene.Net.Search.AutomatonQuery = new call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() call AutomatonQuery.SetRewriteMethod() public virtual public virtual Automaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.Automaton = AutomatonQuery AutomatonQuery AutomatonQuery AutomatonQuery AutomatonQuery AutomatonQuery AutomatonQuery public virtual public virtual decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Search.AutomatonQuery = decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Search.AutomatonQuery = new call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() call Lucene.Net.Search.AutomatonQuery.GetHashCode() decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Search.AutomatonQuery = new call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() call AutomatonQuery.Equals() AutomatonQuery Terms public virtual public virtual decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Index.Terms = call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) is AutomatonQuery Automaton var Terms Automaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.Automaton = call Lucene.Net.Util.Automaton.Automaton.ExpandSingleton() call Lucene.Net.Util.Automaton.Automaton.ExpandSingleton() call Lucene.Net.Util.Automaton.Automaton.ExpandSingleton() call Lucene.Net.Util.Automaton.Automaton.ExpandSingleton() call Lucene.Net.Util.Automaton.Automaton.ExpandSingleton() decl_stmt Lucene.Net.Util.Automaton.Automaton = decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Index.Terms = decl_stmt var = call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) is call var.GetType() call var.GetType() call var.GetType() call var.GetType() call var.GetType() AutomatonQuery Terms public virtual public virtual decl_stmt Lucene.Net.Search.AutomatonQuery = new decl_stmt Lucene.Net.Index.Terms = call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) call Lucene.Net.Search.AutomatonQuery.GetTermsEnum(Terms,AttributeSource) int CountDownLatch decl ThreadClass ThreadClass decl AutomatonQuery public virtual public virtual decl_stmt Lucene.Net.Search.AutomatonQuery = new for = < ++ = new new decl_stmt CountDownLatch = new decl_stmt int = decl_stmt Lucene.Net.Support.ThreadClass = new for = < ++ decl_stmt Lucene.Net.Support.ThreadClass = new = call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() foreach in call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) public override public override for = < ++