Lucene.Net.Randomized Lucene.Net.Support using System using System.Threading using class Lucene.Net.Randomized.RandomizedContext super super IDisposable Boolean decl IdentityHashMap ThreadGroup Type RandomizedRunner decl WeakDictionary object object return return var lock decl_stmt var = return return var var var RandomizedContext private static private static decl_stmt var = decl_stmt Lucene.Net.Randomized.RandomizedContext lock while = group if == && group != = group else break if == = group = new group if == decl_stmt var = + + + + typeof + throw new lock if ! call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() decl_stmt var = new call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() call RandomizedContext.threadResources() return private private if throw new + + var private static private static lock decl_stmt var = new call decl IdentityHashMap.Add() call decl IdentityHashMap.Add() call decl IdentityHashMap.Add() call decl IdentityHashMap.Add() call decl IdentityHashMap.Add() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() call var.threadResources() new return public public