Lucene.Net.Index System using Lucene.Net.Documents using Lucene.Net.Randomized.Generators using Lucene.Net.Search using NUnit.Framework using Lucene.Net.Store.Directory Documents.Document Lucene.Net.Search.IndexSearcher Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Store.RAMDirectory Lucene.Net.Search.ReferenceManager Lucene.Net.Search.SearcherFactory Lucene.Net.Search.SearcherManager Field.Store StringField Lucene.Net.Search.TermQuery Lucene.Net.Search.TopDocs class attribute Lucene.Net.Index.TestTryDelete super super LuceneTestCase MergePolicy IndexWriter IndexWriterConfig private static private static decl_stmt Lucene.Net.Index.MergePolicy = new decl_stmt Lucene.Net.Index.IndexWriterConfig = new new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetOpenMode(OpenMode_e) call Lucene.Net.Index.IndexWriterConfig.SetOpenMode(OpenMode_e) call Lucene.Net.Index.IndexWriterConfig.SetOpenMode(OpenMode_e) call Lucene.Net.Index.IndexWriterConfig.SetOpenMode(OpenMode_e) call Lucene.Net.Index.IndexWriterConfig.SetOpenMode(OpenMode_e) decl_stmt Lucene.Net.Index.IndexWriter = new return Directory Document IndexWriter private static private static decl_stmt Lucene.Net.Store.Directory = new decl_stmt Lucene.Net.Index.IndexWriter = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) return IndexSearcher TopDocs IndexWriter decl ReferenceManager IndexReader long Directory TrackingIndexWriter public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = decl_stmt Lucene.Net.Search.ReferenceManager < = new new decl_stmt Lucene.Net.Index.TrackingIndexWriter = new decl_stmt Lucene.Net.Search.IndexSearcher = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt long if decl_stmt Lucene.Net.Index.IndexReader = = call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() else = call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) != - call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() if call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new IndexSearcher TopDocs IndexWriter decl ReferenceManager long Directory TrackingIndexWriter public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = decl_stmt Lucene.Net.Search.ReferenceManager < = new new decl_stmt Lucene.Net.Search.IndexSearcher = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt Lucene.Net.Index.TrackingIndexWriter = new decl_stmt long = call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.TrackingIndexWriter.TryDeleteDocument(IndexReader,int) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new IndexSearcher TopDocs IndexWriter decl ReferenceManager long Directory TrackingIndexWriter public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = decl_stmt Lucene.Net.Search.ReferenceManager < = new new decl_stmt Lucene.Net.Search.IndexSearcher = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt Lucene.Net.Index.TrackingIndexWriter = new decl_stmt long = call Lucene.Net.Index.TrackingIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.TrackingIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.TrackingIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.TrackingIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.TrackingIndexWriter.DeleteDocuments(Query) new new call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call Lucene.Net.Index.IndexWriter.HasDeletions() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() call decl ReferenceManager.MaybeRefresh() = call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() call decl ReferenceManager.Acquire() = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new