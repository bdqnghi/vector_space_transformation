Lucene.Net.Search Lucene.Net.Documents using NUnit.Framework using System using System.Collections.Generic using Lucene.Net.Randomized.Generators using Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Analysis.MockTokenizer Lucene.Net.Index.RandomIndexWriter SortedSetDocValuesField Lucene.Net.Index.Term Lucene.Net.Util.TestUtil Lucene.Net.Util.UnicodeUtil class attribute Lucene.Net.Search.TestDocTermOrdsRangeFilter super super LuceneTestCase IndexSearcher IndexSearcher string Directory IndexReader decl List Document RandomIndexWriter string int int int public override public override = = : decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt System.Collections.Generic.List < = new < decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int = for = < ++ decl_stmt string = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) if call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() foreach in + decl_stmt int = / for = < ++ call Lucene.Net.Index.RandomIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.RandomIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.RandomIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.RandomIndexWriter.DeleteDocuments(Query) call Lucene.Net.Index.RandomIndexWriter.DeleteDocuments(Query) new = = = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BytesRef int BytesRef public virtual public virtual decl_stmt int = for = < ++ decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new if call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) < else TopDocs TopDocs Query MultiTermQuery protected internal virtual protected internal virtual decl_stmt Lucene.Net.Search.Query = new decl_stmt Lucene.Net.Search.MultiTermQuery = new call Lucene.Net.Search.MultiTermQuery.SetRewriteMethod(RewriteMethod) call Lucene.Net.Search.MultiTermQuery.SetRewriteMethod(RewriteMethod) call Lucene.Net.Search.MultiTermQuery.SetRewriteMethod(RewriteMethod) call Lucene.Net.Search.MultiTermQuery.SetRewriteMethod(RewriteMethod) call Lucene.Net.Search.MultiTermQuery.SetRewriteMethod(RewriteMethod) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector)