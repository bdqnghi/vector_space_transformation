Lucene.Net.Analysis.Shingle System using System.IO using Lucene.Net.Analysis.Standard using Lucene.Net.Util.Version class Lucene.Net.Analysis.Shingle.ShingleAnalyzerWrapper super super Analyzer int Analyzer bool return = return = TokenStream ShingleFilter public override public override decl_stmt Lucene.Net.Analysis.TokenStream try = call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() catch = call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) decl_stmt Lucene.Net.Analysis.Shingle.ShingleFilter = new call Lucene.Net.Analysis.Shingle.ShingleFilter.SetMaxShingleSize(int) call Lucene.Net.Analysis.Shingle.ShingleFilter.SetMaxShingleSize(int) call Lucene.Net.Analysis.Shingle.ShingleFilter.SetMaxShingleSize(int) call Lucene.Net.Analysis.Shingle.ShingleFilter.SetMaxShingleSize(int) call Lucene.Net.Analysis.Shingle.ShingleFilter.SetMaxShingleSize(int) call ShingleFilter.SetOutputUnigrams() call ShingleFilter.SetOutputUnigrams() call ShingleFilter.SetOutputUnigrams() call ShingleFilter.SetOutputUnigrams() call ShingleFilter.SetOutputUnigrams() return SavedStreams TokenStream public override public override if return decl_stmt SavedStreams = if == = new = call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() = new = else decl_stmt Lucene.Net.Analysis.TokenStream = call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() call Analyzer.ReusableTokenStream() if == call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() else = = new call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() call SavedStreams.shingle() return