Lucene.Net.Spatial.Prefix System using System.Collections.Generic using System.Diagnostics using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Spatial.Prefix.Tree using Lucene.Net.Spatial.Queries using Lucene.Net.Util using Spatial4n.Core.Context using Spatial4n.Core.Distance using Spatial4n.Core.Shapes using class Lucene.Net.Spatial.Prefix.WithinPrefixTreeFilter super super AbstractVisitingPrefixTreeFilter Shape double SpatialContext double double Rectangle var double double protected internal virtual protected internal virtual if <= throw new decl_stmt SpatialContext = if is return call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() else if is decl_stmt var = decl_stmt double = call var.GetRadius() call var.GetRadius() call var.GetRadius() call var.GetRadius() call var.GetRadius() + if call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() && > = return call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call SpatialContext.MakeCircle() call var.GetCenter() call var.GetCenter() call var.GetCenter() call var.GetCenter() call var.GetCenter() else decl_stmt Rectangle = decl_stmt double = call Rectangle.GetMinX() call Rectangle.GetMinX() call Rectangle.GetMinX() call Rectangle.GetMinX() call Rectangle.GetMinX() - decl_stmt double = call Rectangle.GetMaxX() call Rectangle.GetMaxX() call Rectangle.GetMaxX() call Rectangle.GetMaxX() call Rectangle.GetMaxX() + decl_stmt double = call Rectangle.GetMinY() call Rectangle.GetMinY() call Rectangle.GetMinY() call Rectangle.GetMinY() call Rectangle.GetMinY() - decl_stmt double = call Rectangle.GetMaxY() call Rectangle.GetMaxY() call Rectangle.GetMaxY() call Rectangle.GetMaxY() call Rectangle.GetMaxY() + if call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() if < - = - if > = if == - || == || call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() + * > = - = else = = else = call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() = call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() = call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() = call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() return call SpatialContext.MakeRectangle() call SpatialContext.MakeRectangle() call SpatialContext.MakeRectangle() call SpatialContext.MakeRectangle() call SpatialContext.MakeRectangle() public override public override return new protected internal override protected internal override = new = new protected internal override protected internal override return protected internal override < protected internal override < return protected internal override protected internal override = if == return else if == return else if == return return protected internal override protected internal override != == if else decl ICollection private private if == = if == return if == return if == return decl_stmt System.Collections.Generic.ICollection < = foreach in if ! return return protected internal override protected internal override if else