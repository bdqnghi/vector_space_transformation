Lucene.Net.Store Lucene.Net.Support using System.Diagnostics using class Lucene.Net.Store.RAMOutputStream super super IndexOutput int int long BufferedChecksum decl byte RAMFile int int int long int long long public virtual public virtual decl_stmt long = decl_stmt long = decl_stmt int = while < decl_stmt int = decl_stmt long = + if > = - call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() ++ = long long int long int int public virtual public virtual decl_stmt long = decl_stmt long = decl_stmt int = decl_stmt int = while < decl_stmt int = decl_stmt long = + if > = - call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() ++ += = public virtual public virtual = = - = = = = call Lucene.Net.Store.BufferedChecksum.Reset() call Lucene.Net.Store.BufferedChecksum.Reset() call Lucene.Net.Store.BufferedChecksum.Reset() call Lucene.Net.Store.BufferedChecksum.Reset() call Lucene.Net.Store.BufferedChecksum.Reset() public override public override public override public override if < || >= + = / = return public override public override if == ++ call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) ++ = int int public override public override != call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) call Lucene.Net.Store.BufferedChecksum.Update(int) while > if == ++ decl_stmt int = - decl_stmt int = < : += -= += private private if == call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() = call Lucene.Net.Store.RAMFile.AddBuffer(int) call Lucene.Net.Store.RAMFile.AddBuffer(int) call Lucene.Net.Store.RAMFile.AddBuffer(int) call Lucene.Net.Store.RAMFile.AddBuffer(int) call Lucene.Net.Store.RAMFile.AddBuffer(int) else = call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() call RAMFile.GetBuffer() = = long * long = long private private decl_stmt long = + if > = public override public override return < : + public virtual public virtual return long call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() call Lucene.Net.Store.RAMFile.NumBuffers() * long return