org.apache.lucene.analysis.charfilter System using System.Diagnostics using System.Collections.Generic using System.Text using org.apache.lucene.util.TestUtil org.apache.lucene.util.UnicodeUtil class org.apache.lucene.analysis.charfilter.TestMappingCharFilter super super BaseTokenStreamTestCase NormalizeCharMap decl NormalizeCharMap public override public override decl_stmt Lucene.Net.Util.Fst.Builder = new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() CharFilter decl char int public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt char = new decl_stmt int = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() - call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter TokenStream public virtual public virtual decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter string TokenStream public virtual public virtual decl_stmt string = decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new CharFilter string TokenStream public virtual public virtual decl_stmt string = decl_stmt Lucene.Net.Analysis.CharFilter = new new new decl_stmt Lucene.Net.Analysis.TokenStream = new new new new int Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt int = * Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new protected internal override protected internal override return new decl Builder decl NormalizeCharMap NormalizeCharMap Analyzer public virtual public virtual decl_stmt Lucene.Net.Util.Fst.Builder = new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() decl_stmt Lucene.Net.Analysis.CharFilters.NormalizeCharMap = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt string = Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new protected internal override protected internal override return new int int Analyzer NormalizeCharMap public virtual public virtual decl_stmt int = for = < ++ decl_stmt Lucene.Net.Analysis.CharFilters.NormalizeCharMap = decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt int = Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new protected internal override protected internal override return new decl Builder decl NormalizeCharMap Random string decl ISet int private private decl_stmt System.Random = decl_stmt Lucene.Net.Util.Fst.Builder = new decl_stmt System.Collections.Generic.ISet < = new < decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) for = < ++ decl_stmt string = if ! call decl Builder.Contains() call decl Builder.Contains() call decl Builder.Contains() call decl Builder.Contains() call decl Builder.Contains() && != decl_stmt string = call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl Builder.Add() call decl Builder.Add() call decl Builder.Add() call decl Builder.Add() call decl Builder.Add() return call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() decl IList decl IDictionary Random StringBuilder string MappingCharFilter string string NormalizeCharMap int int int string int decl Builder int int int bool int int StringBuilder decl char decl NormalizeCharMap int string string char string decl IList public virtual public virtual decl_stmt System.Random = decl_stmt int = for = < ++ if + decl_stmt char = char decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < decl_stmt Lucene.Net.Util.Fst.Builder = new decl_stmt int = if while < decl_stmt string = if != && ! call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() decl_stmt string = = call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() if + + + decl_stmt Lucene.Net.Analysis.CharFilters.NormalizeCharMap = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() if for = < ++ decl_stmt string = if + decl_stmt System.Text.StringBuilder = new decl_stmt System.Collections.Generic.IList < ? = new < ? decl_stmt int = decl_stmt int = while < decl_stmt int = - decl_stmt string = foreach < in call decl IDictionary.SetOfKeyValuePairs() call decl IDictionary.SetOfKeyValuePairs() call decl IDictionary.SetOfKeyValuePairs() call decl IDictionary.SetOfKeyValuePairs() call decl IDictionary.SetOfKeyValuePairs() decl_stmt string = if + <= decl_stmt int = + decl_stmt bool = for = < ++ if - != = break if decl_stmt string = if > = = if != - if + call NormalizeCharMap.Substring() call NormalizeCharMap.Substring() call NormalizeCharMap.Substring() call NormalizeCharMap.Substring() call NormalizeCharMap.Substring() + + + + call string.Append() call string.Append() call string.Append() call string.Append() call string.Append() decl_stmt int = for = < ++ call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() - + + += - += if < else if > for = < ++ call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() + - else == + + + else call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() + call string.Append() call string.Append() call string.Append() call string.Append() call string.Append() ++ decl_stmt string = call string.ToString() call string.ToString() call string.ToString() call string.ToString() call string.ToString() if for = < ++ + + + decl_stmt Lucene.Net.Analysis.CharFilters.MappingCharFilter = new new decl_stmt System.Text.StringBuilder = new decl_stmt System.Collections.Generic.IList < ? = new < ? while if call Random.nextBoolean() call Random.nextBoolean() call Random.nextBoolean() call Random.nextBoolean() call Random.nextBoolean() decl_stmt int = call string.read() call string.read() call string.read() call string.read() call string.read() if == - break call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() char else decl_stmt char = new decl_stmt int = == : call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) - decl_stmt int = call string.read() call string.read() call string.read() call string.read() call string.read() - if == - break else call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() call MappingCharFilter.Append() if call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) == while < call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call string.correctOffset() call string.correctOffset() call string.correctOffset() call string.correctOffset() call string.correctOffset() while < call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call StringBuilder.Add() call string.correctOffset() call string.correctOffset() call string.correctOffset() call string.correctOffset() call string.correctOffset() decl_stmt string = call MappingCharFilter.ToString() call MappingCharFilter.ToString() call MappingCharFilter.ToString() call MappingCharFilter.ToString() call MappingCharFilter.ToString()