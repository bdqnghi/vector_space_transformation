Lucene.Net.Util.Packed System.Diagnostics using Lucene.Net.Support using System using Lucene.Net.Store.DataOutput class Lucene.Net.Util.Packed.AbstractBlockPackedWriter DataOutput long decl byte int bool decl long int int int int internal static internal static return >> ^ << int internal static internal static decl_stmt int = while & ~ != && ++ < call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() unchecked sbyte & | = ulong >> call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() call DataOutput.WriteByte() byte sbyte public virtual public virtual != = = = = private private if throw new public virtual public virtual if == ++ = ++ public virtual public virtual if != && != throw new + if == = += public virtual public virtual if > = public virtual public virtual return int int decl Encoder decl PackedInts protected internal protected internal decl_stmt System.Text.Encoder = decl_stmt int = / call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() decl_stmt int = call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() * if == || < = new if < call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() decl_stmt int = int call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int)