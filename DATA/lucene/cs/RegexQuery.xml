Contrib.Regex System using System.Text using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Util using class Contrib.Regex.RegexQuery super super MultiTermQuery super IRegexQueryCapable IRegexCapabilities protected override protected override return new = return StringBuilder public override public override decl_stmt System.Text.StringBuilder = new if ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public public if == return if == return if ! return return call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() public override public override if == || as == return if == return return public override public override return * + call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode()