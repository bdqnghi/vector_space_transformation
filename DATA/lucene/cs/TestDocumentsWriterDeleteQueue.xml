Lucene.Net.Index System.Threading using Apache.NMS.Util using Lucene.Net.Search using System using System.Collections using System.Collections.Generic using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Util.BytesRef Lucene.Net.Index.DocumentsWriterDeleteQueue.DeleteSlice Lucene.Net.Util.LuceneTestCase Lucene.Net.Search.TermQuery class attribute Lucene.Net.Index.TestDocumentsWriterDeleteQueue super super LuceneTestCase decl Term DeleteSlice DeleteSlice int int decl int DocumentsWriterDeleteQueue decl HashSet BufferedUpdates var BufferedUpdates int BytesRef int public virtual public virtual decl_stmt Lucene.Net.Index.DocumentsWriterDeleteQueue = new decl_stmt int = + * decl_stmt int ? = new int for = < ++ = decl_stmt DeleteSlice = call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() decl_stmt DeleteSlice = call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NewSlice() decl_stmt Lucene.Net.Index.BufferedUpdates = new decl_stmt Lucene.Net.Index.BufferedUpdates = new decl_stmt int = decl_stmt int = decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ decl_stmt int ? = decl_stmt Lucene.Net.Index.Term = new new call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) if == || == - call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() = + if == || == - call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.IsTailItem() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() = + + call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() new < new < decl_stmt var = new < foreach in call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() private private ? for = <= ++ new DocumentsWriterDeleteQueue int Term int int public virtual public virtual decl_stmt Lucene.Net.Index.DocumentsWriterDeleteQueue = new call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() decl_stmt int = + * decl_stmt int = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.Term = new + if == call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) new ++ else call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) ++ call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() if == call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.Clear() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() Term FrozenBufferedUpdates DocumentsWriterDeleteQueue int int int public virtual public virtual decl_stmt Lucene.Net.Index.DocumentsWriterDeleteQueue = new decl_stmt int = + * decl_stmt int = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.Term = new + if == call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) new ++ else call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) call Lucene.Net.Index.DocumentsWriterDeleteQueue.AddDelete(Term) ++ call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() if == decl_stmt Lucene.Net.Index.FrozenBufferedUpdates = call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.FrozenBufferedUpdates.Queries_Nunit() call Lucene.Net.Index.FrozenBufferedUpdates.Queries_Nunit() call Lucene.Net.Index.FrozenBufferedUpdates.Queries_Nunit() call Lucene.Net.Index.FrozenBufferedUpdates.Queries_Nunit() call Lucene.Net.Index.FrozenBufferedUpdates.Queries_Nunit() = = call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() call Lucene.Net.Index.DocumentsWriterDeleteQueue.AnyChanges() public override public override new AtomicInteger DeleteSlice int decl int DocumentsWriterDeleteQueue decl HashSet decl UpdateThread decl HashSet BytesRef CountDownLatch BufferedUpdates int public virtual public virtual decl_stmt Lucene.Net.Index.DocumentsWriterDeleteQueue = new decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = + * decl_stmt int ? = new int for = < ++ = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() new decl_stmt CountDownLatch = new decl_stmt Lucene.Net.Support.AtomicInteger = new decl_stmt int = + decl_stmt UpdateThread = new for = < ++ = new call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() for = < ++ foreach in decl_stmt DeleteSlice = call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.UpdateSlice(DeleteSlice) decl_stmt Lucene.Net.Index.BufferedUpdates = call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() call DeleteSlice.Apply() new < call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() call Lucene.Net.Index.DocumentsWriterDeleteQueue.TryApplyGlobalSlice() decl_stmt System.Collections.Generic.HashSet < = new < foreach in call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) call Lucene.Net.Index.DocumentsWriterDeleteQueue.FreezeGlobalBuffer(DeleteSlice) decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() new call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() call Lucene.Net.Index.DocumentsWriterDeleteQueue.NumGlobalTermDeletes() int Term public override public override try catch throw new decl_stmt int = while = < decl_stmt Lucene.Net.Index.Term = new