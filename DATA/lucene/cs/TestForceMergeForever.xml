Lucene.Net.Index System using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Store.Directory Lucene.Net.Util.LineFileDocs Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestForceMergeForever super super LuceneTestCase public override public override if != - && || == = if Directory LineFileDocs int int MockAnalyzer ThreadClass MergePolicy MyIndexWriter AtomicBoolean public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Analysis.MockAnalyzer = new = decl_stmt MyIndexWriter = new call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() decl_stmt int = decl_stmt Lucene.Net.Util.LineFileDocs = new for = < ++ call MyIndexWriter.AddDocument() call MyIndexWriter.AddDocument() call MyIndexWriter.AddDocument() call MyIndexWriter.AddDocument() call MyIndexWriter.AddDocument() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() decl_stmt Lucene.Net.Index.MergePolicy = decl_stmt int = + call MyIndexWriter.GetSegmentInfosSize_Nunit() call MyIndexWriter.GetSegmentInfosSize_Nunit() call MyIndexWriter.GetSegmentInfosSize_Nunit() call MyIndexWriter.GetSegmentInfosSize_Nunit() call MyIndexWriter.GetSegmentInfosSize_Nunit() if is = else if is = else call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() return decl_stmt Lucene.Net.Support.AtomicBoolean = new call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() call MyIndexWriter.Config() decl_stmt Lucene.Net.Support.ThreadClass = new call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call MyIndexWriter.ForceMerge() call MyIndexWriter.ForceMerge() call MyIndexWriter.ForceMerge() call MyIndexWriter.ForceMerge() call MyIndexWriter.ForceMerge() call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() <= + call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.MergeCount() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call MyIndexWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() public override public override try while ! new + catch throw new