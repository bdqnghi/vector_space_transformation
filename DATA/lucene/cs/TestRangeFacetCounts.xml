Lucene.Net.Facet.Range System using System.Diagnostics using System.Collections using System.Collections.Generic using Lucene.Net.Facet.Range using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Documents.Document Lucene.Net.Documents.DoubleDocValuesField Lucene.Net.Documents.DoubleField Lucene.Net.Documents.Field Lucene.Net.Documents.FloatDocValuesField Lucene.Net.Documents.FloatField Lucene.Net.Documents.LongField Lucene.Net.Documents.NumericDocValuesField Lucene.Net.Facet.DrillSideways.DrillSidewaysResult Lucene.Net.Facet.Taxonomy.TaxonomyReader Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter Lucene.Net.Index.AtomicReader Lucene.Net.Index.AtomicReaderContext Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexWriterConfig Lucene.Net.Index.RandomIndexWriter Lucene.Net.Queries.Function.FunctionValues Lucene.Net.Queries.Function.ValueSource Lucene.Net.Queries.Function.DocValues.DoubleDocValues Lucene.Net.Queries.Function.ValueSources.DoubleFieldSource Lucene.Net.Queries.Function.ValueSources.FloatFieldSource Lucene.Net.Queries.Function.ValueSources.LongFieldSource Lucene.Net.Search.CachingWrapperFilter Lucene.Net.Search.DocIdSet Lucene.Net.Search.DocIdSetIterator Lucene.Net.Search.Filter Lucene.Net.Search.IndexSearcher Lucene.Net.Search.MatchAllDocsQuery Lucene.Net.Search using Lucene.Net.Search.QueryWrapperFilter Lucene.Net.Store.Directory Lucene.Net.Util.FixedBitSet Lucene.Net.Util.IOUtils Lucene.Net.Util.TestUtil class attribute Lucene.Net.Facet.Range.TestRangeFacetCounts super super FacetTestCase Directory Document Facets NumericDocValuesField IndexSearcher FacetsCollector FacetResult RandomIndexWriter IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt NumericDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public virtual public virtual try new catch try new catch try new catch try new catch Directory Document Facets NumericDocValuesField IndexSearcher FacetsCollector FacetResult RandomIndexWriter IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt NumericDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new new new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory Document Facets NumericDocValuesField IndexSearcher FacetsCollector FacetResult var IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt NumericDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() = call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() decl_stmt Lucene.Net.Index.IndexReader = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call FacetResult.ToString() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DrillSidewaysResult Directory DirectoryTaxonomyWriter DrillDownQuery var IndexSearcher IndexReader RandomIndexWriter Document Directory FacetsConfig DrillSideways public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt Lucene.Net.Facet.FacetsConfig = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new if & == call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new else call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = if + decl_stmt Lucene.Net.Facet.DrillSideways = new decl_stmt Lucene.Net.Facet.DrillDownQuery = new decl_stmt DrillSidewaysResult = call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() = new call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) = call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() = new call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) = call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() string FacetsCollector decl IDictionary FacetsCollector protected override protected override decl_stmt Lucene.Net.Facet.FacetsCollector = decl_stmt Lucene.Net.Facet.FacetsCollector = if != for = < ++ decl_stmt string = if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() = else = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < = new new new new new new = return new protected override protected override return Directory Document Facets DoubleDocValuesField IndexSearcher FacetsCollector RandomIndexWriter IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.DoubleDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new new call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() Directory Document Facets FloatDocValuesField IndexSearcher FacetsCollector RandomIndexWriter IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.FloatDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new new new call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() bool long ValueSource FacetResult long DrillDownQuery LongRange Filter FacetsConfig LabelAndValue decl int long bool long long bool decl LongRange int long FacetsCollector Document Facets LongRange int IndexSearcher IndexReader decl long int var long long Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new decl_stmt int = if + decl_stmt long = new decl_stmt long = decl_stmt long = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt long = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() = = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt int = for = < ++ if + decl_stmt int = decl_stmt Lucene.Net.Facet.Range.LongRange = new decl_stmt int = new decl_stmt long = decl_stmt long = for = < ++ decl_stmt long if > && == decl_stmt Lucene.Net.Facet.Range.LongRange = if = else = else = decl_stmt long if > && == decl_stmt Lucene.Net.Facet.Range.LongRange = if = else = else = if > decl_stmt long = = = decl_stmt bool decl_stmt bool if == = = else = = = new + if + + + for = < ++ decl_stmt bool = if &= >= else &= > if &= <= else &= < if ++ = = decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt MS.Internal.Xml.XPath.Filter if if = else = else = decl_stmt Lucene.Net.Queries.Function.ValueSource = new decl_stmt Facets = new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() for = < ++ if + + + decl_stmt Lucene.Net.Facet.LabelAndValue = + int decl_stmt Lucene.Net.Facet.Range.LongRange = decl_stmt Lucene.Net.Facet.DrillDownQuery = new if if call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.Range.LongRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.LongRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.LongRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.LongRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.LongRange.GetFilter(Filter,ValueSource) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) bool float ValueSource FacetResult double DrillDownQuery DoubleRange Filter FacetsConfig LabelAndValue decl int double bool float float bool decl DoubleRange int float FacetsCollector Document Facets DoubleRange int IndexSearcher IndexReader decl float int RandomIndexWriter float double Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt float = new decl_stmt float = decl_stmt float = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt float = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt int = for = < ++ if + decl_stmt int = decl_stmt Lucene.Net.Facet.Range.DoubleRange = new decl_stmt int = new decl_stmt float = decl_stmt float = if + + for = < ++ decl_stmt double if > && == decl_stmt Lucene.Net.Facet.Range.DoubleRange = if = else = else = decl_stmt double if > && == decl_stmt Lucene.Net.Facet.Range.DoubleRange = if = else = else = if > decl_stmt double = = = = float = float decl_stmt bool decl_stmt bool if == = = else = = = new + if + + + for = < ++ decl_stmt bool = if &= >= else &= > if &= <= else &= < if + + + + + if ++ = = decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt MS.Internal.Xml.XPath.Filter if if = else = else = decl_stmt Lucene.Net.Queries.Function.ValueSource = new decl_stmt Facets = new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() for = < ++ if + + + decl_stmt Lucene.Net.Facet.LabelAndValue = + int decl_stmt Lucene.Net.Facet.Range.DoubleRange = decl_stmt Lucene.Net.Facet.DrillDownQuery = new if if call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) float float else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) float float else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) bool double ValueSource FacetResult double DrillDownQuery DoubleRange Filter FacetsConfig LabelAndValue decl int double bool double double bool decl DoubleRange int double FacetsCollector Document Facets DoubleRange int IndexSearcher IndexReader decl double int RandomIndexWriter double double Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt double = new decl_stmt double = decl_stmt double = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt double = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt int = for = < ++ if + decl_stmt int = decl_stmt Lucene.Net.Facet.Range.DoubleRange = new decl_stmt int = new decl_stmt double = decl_stmt double = for = < ++ decl_stmt double if > && == decl_stmt Lucene.Net.Facet.Range.DoubleRange = if = else = else = decl_stmt double if > && == decl_stmt Lucene.Net.Facet.Range.DoubleRange = if = else = else = if > decl_stmt double = = = decl_stmt bool decl_stmt bool if == = = else = = = new + for = < ++ decl_stmt bool = if &= >= else &= > if &= <= else &= < if ++ = = decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt MS.Internal.Xml.XPath.Filter if if = else = else = decl_stmt Lucene.Net.Queries.Function.ValueSource = new decl_stmt Facets = new decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() for = < ++ if + + + decl_stmt Lucene.Net.Facet.LabelAndValue = + int decl_stmt Lucene.Net.Facet.Range.DoubleRange = decl_stmt Lucene.Net.Facet.DrillDownQuery = new if if call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) else call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Facet.Range.DoubleRange.GetFilter(Filter,ValueSource) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) Directory Document Facets NumericDocValuesField IndexSearcher FacetsCollector RandomIndexWriter IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt NumericDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ if == call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) new continue = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = new new new new new new call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() AtomicBoolean Document Facets RandomIndexWriter DrillSidewaysResult FacetsCollector DrillSideways decl DoubleRange IndexSearcher var Filter IndexReader FacetsConfig DrillDownQuery Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt var = new decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Lucene.Net.Facet.Range.DoubleRange = new new new new new new new decl_stmt MS.Internal.Xml.XPath.Filter decl_stmt Lucene.Net.Support.AtomicBoolean = new if = new new new else = if + decl_stmt Facets = new call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() == || call Lucene.Net.Support.AtomicBoolean.Get() call Lucene.Net.Support.AtomicBoolean.Get() call Lucene.Net.Support.AtomicBoolean.Get() call Lucene.Net.Support.AtomicBoolean.Get() call Lucene.Net.Support.AtomicBoolean.Get() decl_stmt Lucene.Net.Facet.DrillDownQuery = new call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Facet.DrillDownQuery.Add(string,string) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Facet.DrillSideways = new decl_stmt DrillSidewaysResult = call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call Lucene.Net.Facet.DrillSideways.Search(DrillDownQuery,Filter,FieldDoc,int,Sort,bool,bool) call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() call DrillSidewaysResult.Facets() public override public override return new public override public override return + public override public override throw new public override public override throw new throw new var protected override protected override decl_stmt var = new call var.Or() call var.Or() call var.Or() call var.Or() call var.Or() return protected override protected override == return new protected override protected override return