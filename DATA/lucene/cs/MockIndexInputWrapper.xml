Lucene.Net.Store System using System.Collections.Generic using class Lucene.Net.Store.MockIndexInputWrapper super super IndexInput bool bool IndexInput string MockDirectoryWrapper public override public override try call Lucene.Net.Store.MockDirectoryWrapper.MaybeThrowDeterministicException() call Lucene.Net.Store.MockDirectoryWrapper.MaybeThrowDeterministicException() call Lucene.Net.Store.MockDirectoryWrapper.MaybeThrowDeterministicException() call Lucene.Net.Store.MockDirectoryWrapper.MaybeThrowDeterministicException() call Lucene.Net.Store.MockDirectoryWrapper.MaybeThrowDeterministicException() finally = call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() if ! call Lucene.Net.Store.MockDirectoryWrapper.RemoveIndexInput(IndexInput,string) call Lucene.Net.Store.MockDirectoryWrapper.RemoveIndexInput(IndexInput,string) call Lucene.Net.Store.MockDirectoryWrapper.RemoveIndexInput(IndexInput,string) call Lucene.Net.Store.MockDirectoryWrapper.RemoveIndexInput(IndexInput,string) call Lucene.Net.Store.MockDirectoryWrapper.RemoveIndexInput(IndexInput,string) else private private if throw new MockIndexInputWrapper IndexInput public override public override call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() call MockDirectoryWrapper.InputCloneCount_Renamed() decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() decl_stmt Lucene.Net.Store.MockIndexInputWrapper = new = return return public override public override call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() public override public override return call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() public override public override return call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() public override public override call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() public override public override call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() public override public override return call IndexInput.ReadShort() call IndexInput.ReadShort() call IndexInput.ReadShort() call IndexInput.ReadShort() call IndexInput.ReadShort() public override public override return call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() public override public override return call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() public override public override return call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() public override < public override < return call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() public override public override return call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() public override public override return call IndexInput.ReadVLong() call IndexInput.ReadVLong() call IndexInput.ReadVLong() call IndexInput.ReadVLong() call IndexInput.ReadVLong() public override public override return + +