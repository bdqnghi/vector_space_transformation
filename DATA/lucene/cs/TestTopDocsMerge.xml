Lucene.Net.Search System using System.Collections.Generic using System.Text using Lucene.Net.Documents using Lucene.Net.Util using Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Index.CompositeReaderContext Lucene.Net.Store.Directory Documents.Document Field FloatField Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexReaderContext IntField Lucene.Net.Util.LuceneTestCase Lucene.Net.Index.RandomIndexWriter Lucene.Net.Index.ReaderUtil Lucene.Net.Index.Term Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.TestTopDocsMerge super super LuceneTestCaseWithReducedFloatPrecision public virtual public virtual public virtual public virtual return public override public override return + + public virtual public virtual public virtual public virtual int int TopDocs TopDocs Query int decl ShardSearcher int decl string CompositeReaderContext Sort decl SortField int decl TopDocs ShardSearcher IndexReader TopDocs decl string int decl int decl IList int IndexSearcher TopFieldCollector Document IndexReaderContext decl ScoreDoc AtomicReaderContext TopDocs Weight StringBuilder Directory ScoreDoc internal virtual internal virtual decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Store.Directory = decl_stmt int = decl_stmt string = new if = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt string = new for = < ++ decl_stmt System.Text.StringBuilder = new decl_stmt int = for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new float decl_stmt int if == = else if == = else = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new if + call Weight.AddDocument() call Weight.AddDocument() call Weight.AddDocument() call Weight.AddDocument() call Weight.AddDocument() = call Weight.Dispose() call Weight.Dispose() call Weight.Dispose() call Weight.Dispose() call Weight.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt IndexReaderContext = decl_stmt ShardSearcher decl_stmt int if is = new = new = new = else decl_stmt Lucene.Net.Index.CompositeReaderContext = decl_stmt int = = new = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.AtomicReaderContext = = new = += decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new for = < * ++ decl_stmt Lucene.Net.Search.Query = new new decl_stmt Lucene.Net.Search.Sort if == = else decl_stmt Lucene.Net.Search.SortField = new for = < ++ = = new decl_stmt int = + if + + + + + decl_stmt int = - decl_stmt int = - decl_stmt Lucene.Net.Search.TopDocs if == if decl_stmt Lucene.Net.Search.TopScoreDocCollector = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) = - = - from decl_stmt Lucene.Net.Search.TopDocs = call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() if from < decl_stmt Lucene.Net.Search.ScoreDoc = new - from = = else = new new else = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) else decl_stmt Lucene.Net.Search.TopFieldCollector = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) if = - = - from decl_stmt Lucene.Net.Search.TopDocs = call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() if from < decl_stmt Lucene.Net.Search.ScoreDoc = new - from = = else = new new else = call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() if if + from + + + + + == : + + if != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + + decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) decl_stmt Lucene.Net.Search.TopDocs = new for = < ++ decl_stmt Lucene.Net.Search.TopDocs decl_stmt ShardSearcher = if == = call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() else decl_stmt Lucene.Net.Search.TopFieldCollector = call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() call ShardSearcher.Search() = call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() call TopFieldCollector.TopDocs() = if + + + + + == : call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() call TopDocs.ScoreDocs() if != foreach in + + + decl_stmt Lucene.Net.Search.TopDocs if = from else = if != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()