Lucene.Net.Classification Lucene.Net.Analysis using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Util using System using System.Collections.Generic using System.IO using class Lucene.Net.Classification.SimpleNaiveBayesClassifier super AtomicReader Query Analyzer decl String IndexSearcher String int public public public public new public public = = new = = = = = BooleanQuery TotalHitCountCollector int private private decl_stmt int = if == - decl_stmt Lucene.Net.Search.TotalHitCountCollector = new decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new new if != call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) = return TokenStream decl ICollection var ICharTermAttribute private private decl_stmt System.Collections.Generic.ICollection < = new < foreach in decl_stmt Lucene.Net.Analysis.TokenStream = call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new try decl_stmt Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute = < call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() while call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() finally decl_stmt var = new call decl ICollection.CopyTo() call decl ICollection.CopyTo() call decl ICollection.CopyTo() call decl ICollection.CopyTo() call decl ICollection.CopyTo() return Terms TermsEnum double double BytesRef BytesRef double decl String public < public < if == throw new decl_stmt double = - decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Index.Terms = decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() decl_stmt Lucene.Net.Util.BytesRef decl_stmt System.String = while = call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() != decl_stmt double = + if > = = decl_stmt double = / return new < int double double double double private private decl_stmt double = foreach in decl_stmt int = decl_stmt double = + decl_stmt double = + decl_stmt double = / += return Terms double int long private private decl_stmt double = foreach in decl_stmt Lucene.Net.Index.Terms = decl_stmt long = += / double decl_stmt int = call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) new return * BooleanQuery BooleanQuery TotalHitCountCollector private private decl_stmt Lucene.Net.Search.BooleanQuery = new decl_stmt Lucene.Net.Search.BooleanQuery = new foreach in call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new new if != call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) decl_stmt Lucene.Net.Search.TotalHitCountCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) return private private return double - private private return call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) call Lucene.Net.Index.AtomicReader.DocFreq(Term) new