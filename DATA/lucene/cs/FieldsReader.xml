Lucene.Net.Index System using System.IO using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Analysis.TokenStream Lucene.Net.Documents using Lucene.Net.Store.AlreadyClosedException Lucene.Net.Store.BufferedIndexInput Lucene.Net.Store.Directory Lucene.Net.Store.IndexInput class Lucene.Net.Index.FieldsReader super super ICloneable super IDisposable int FieldInfos bool IndexInput IndexInput int IndexInput bool IndexInput decl CloseableThreadLocal int int int public public return new internal internal if throw new public public if ! if != call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() if if != call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() if != call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() if != call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call decl CloseableThreadLocal.Close() call decl CloseableThreadLocal.Close() call decl CloseableThreadLocal.Close() call decl CloseableThreadLocal.Close() call decl CloseableThreadLocal.Close() = public public return private private call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + + * internal internal return >= bool FieldSelectorResult var bool int bool int FieldInfo long byte public public decl_stmt long = call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() decl_stmt var = new decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() for = < ++ decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) decl_stmt FieldSelectorResult = == : decl_stmt byte = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() <= + + decl_stmt bool = & != ! || < decl_stmt bool = & != decl_stmt bool = & != if call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() else if call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() break else if call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() else if call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() else if call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() call FieldSelectorResult.Equals() break else return int long int long long internal internal decl_stmt long = call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() decl_stmt long = decl_stmt int = while < decl_stmt long decl_stmt int = + + + <= if < = call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() else = call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() ++ = - = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() return private private call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() private private if >= || || call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + else call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() decl Store decl Field decl Index decl Field AbstractField int decl Field private private if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt long = new call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + else decl_stmt Store const const const const const = decl_stmt System.Data.Index = decl_stmt TermVector = decl_stmt Lucene.Net.Documents.AbstractField if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt long = = new call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + = = else decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt long = if >= call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + else call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() call IndexInput.SkipChars() = new = = decl Store decl TermVector decl Field decl Index decl Field decl Field private private if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt var = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() new : new else decl_stmt Store const const const const const = decl_stmt System.Data.Index = decl_stmt TermVector = decl_stmt Lucene.Net.Documents.AbstractField if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt var = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = new = = else = new call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() = = var int private private decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = || : * decl_stmt var = new = = = = byte new return private private = IndexInput private private decl_stmt Lucene.Net.Store.IndexInput = if == = return return return var var var IndexInput if return if == decl_stmt Lucene.Net.Store.IndexInput = try call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() if decl_stmt var = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = else if >= decl_stmt var = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = else decl_stmt var = new call IndexInput.ReadChars() call IndexInput.ReadChars() call IndexInput.ReadChars() call IndexInput.ReadChars() call IndexInput.ReadChars() = new catch throw new return return = return = decl byte IndexInput public override public override if if == decl_stmt byte if == || < = new else = decl_stmt Lucene.Net.Store.IndexInput = try call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = : catch throw new = = return return private private try return catch throw new +