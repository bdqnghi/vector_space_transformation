Lucene.Net.Codecs.Lucene41 Lucene.Net.Index using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using System using System.Diagnostics using class Lucene.Net.Codecs.Lucene41.Lucene41PostingsReader super super PostingsReaderBase IndexInput int ForUtil IndexInput IndexInput int public override public override decl_stmt int = if != throw new + + + + int internal static internal static if for = < ++ decl_stmt int = = uint >> if & != = else = else for = < ++ = public override public override return new protected override protected override if bool bool decl Lucene41PostingsWriter decl IntBlockTermState public override public override decl_stmt IntBlockTermState = decl_stmt bool = >= decl_stmt bool = >= decl_stmt bool = if = = = if < return += if += if || += if == = else = - if if > = else = - if > = else = - bool bool bool private private decl_stmt bool = >= decl_stmt bool = >= decl_stmt bool = if == = else = - += if += if > = else = - if || && >= += if > = else = - BlockDocsEnum public override public override decl_stmt BlockDocsEnum if is = if ! call BlockDocsEnum.CanReuse() call BlockDocsEnum.CanReuse() call BlockDocsEnum.CanReuse() call BlockDocsEnum.CanReuse() call BlockDocsEnum.CanReuse() = new else = new return call BlockDocsEnum.Reset() call BlockDocsEnum.Reset() call BlockDocsEnum.Reset() call BlockDocsEnum.Reset() call BlockDocsEnum.Reset() bool EverythingEnum bool BlockDocsAndPositionsEnum public override public override decl_stmt bool = >= decl_stmt bool = if ! || & == && ! || & == decl_stmt BlockDocsAndPositionsEnum if is = if ! call BlockDocsAndPositionsEnum.CanReuse() call BlockDocsAndPositionsEnum.CanReuse() call BlockDocsAndPositionsEnum.CanReuse() call BlockDocsAndPositionsEnum.CanReuse() call BlockDocsAndPositionsEnum.CanReuse() = new else = new return call BlockDocsAndPositionsEnum.Reset() call BlockDocsAndPositionsEnum.Reset() call BlockDocsAndPositionsEnum.Reset() call BlockDocsAndPositionsEnum.Reset() call BlockDocsAndPositionsEnum.Reset() else decl_stmt EverythingEnum if is = if ! call EverythingEnum.CanReuse() call EverythingEnum.CanReuse() call EverythingEnum.CanReuse() call EverythingEnum.CanReuse() call EverythingEnum.CanReuse() = new else = new return call EverythingEnum.Reset() call EverythingEnum.Reset() call EverythingEnum.Reset() call EverythingEnum.Reset() call EverythingEnum.Reset() public public return == && == >= && == >= && == public public = = = : = = = if > if == = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = - = & != if ! = = = - = = return public override public override return public override public override return int internal internal decl_stmt int = - > if >= if if else else if == = = int else = public override public override while if == return = if == += ++ if == || = = ++ return ++ int public override public override if > && > if == = new call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() if ! != - + = decl_stmt int = + if > == + = = = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = if == return = if == while += ++ if >= break ++ if == return = if == || = ++ return = else ++ return public override public override return public public return == && == >= && == public public = = = = = = = = if > if == = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = = if < = else if == = - else = + = - = = = - = = return public override public override return public override public override return int internal internal decl_stmt int = - > if >= else if == = = int else = int int int internal internal if == decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if if & != = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = uint >> if != call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + else = if if call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() & != call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() else public override public override while if == return = if == += = += ++ ++ if == || = = return int public override public override if > && > if == = new call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() if ! != - + = decl_stmt int = + if > == + = = = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = = = if == return = if == while += = += ++ ++ if >= break if == return = if == || = return = else return int int internal internal decl_stmt int = - decl_stmt int = - if < += else -= while >= != -= = = public override public override if != - call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = - = if > = if == = += ++ -- return public override public override return - public override public override return - return public override public override return public public return == && == >= && == public public = = = = = = = = if > if == = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = = = if < = else if == = - else = + = & != = & != = - = = = - = = return public override public override return public override public override return int internal internal decl_stmt int = - > if >= else if == = = int else = int int int int int int internal internal if == decl_stmt int = decl_stmt int = decl_stmt int = = for = < ++ decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if if & != = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = = uint >> if != if + > = + call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() += else = if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if & != = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() = uint >> = = else if if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if > = call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() else decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + = if if else public override public override while if == return = if == += = += ++ ++ if == || = = = return int public override public override if > && > if == = new call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() if ! != - + = decl_stmt int = + if > == + = = = call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = = = = = = if == return = if == while += = += ++ ++ if >= break if == return = if == || = = return = else return int int int int internal internal decl_stmt int = - decl_stmt int = - if < decl_stmt int = + while < if += ++ else -= while >= != if decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + if -= = = while < if += ++ = = public override public override if != - call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = - if != - call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = - = if > = if == = += if = = = = += if = + = + = ++ -- return public override public override return public override public override return if == return else return public override public override return public override public override return public override public override if >= if != if != if !=