Lucene.Net.Support System using System.Collections using System.Collections.Generic using class super decl List var public static < public static < < < if == || == throw new decl_stmt var = new < + call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() call var._baseHeap() for = / - >= -- call var.HeapifyFromBeginningToEnd() call var.HeapifyFromBeginningToEnd() call var.HeapifyFromBeginningToEnd() call var.HeapifyFromBeginningToEnd() call var.HeapifyFromBeginningToEnd() return public public var public public if ! decl_stmt var = return else throw new public public if ! return else throw new public public try return catch return default public public return return == var private private decl_stmt var = = = private private call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() - var private private if >= return - while > decl_stmt var = - / if < = else break return private private if <= call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() return = - call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() - var var var private private if >= return while decl_stmt var = decl_stmt var = * + decl_stmt var = * + if < && < = if < && < = if != = else break public public public public call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() public public return call decl List.Contains() call decl List.Contains() call decl List.Contains() call decl List.Contains() call decl List.Contains() return public public call decl List.CopyTo() call decl List.CopyTo() call decl List.CopyTo() call decl List.CopyTo() call decl List.CopyTo() return var var public public decl_stmt var = call decl List.IndexOf() call decl List.IndexOf() call decl List.IndexOf() call decl List.IndexOf() call decl List.IndexOf() if < return = - call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() - decl_stmt var = if == return public < public < return call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() return