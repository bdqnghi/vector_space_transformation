Lucene.Net.Util.Mutable class Lucene.Net.Util.Mutable.MutableValueStr super super MutableValue BytesRef public override public override return call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() : MutableValueStr public override public override decl_stmt Lucene.Net.Util.Mutable.MutableValueStr = = call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) call Lucene.Net.Util.BytesRef.CopyBytes(BytesRef) MutableValueStr public override public override decl_stmt Lucene.Net.Util.Mutable.MutableValueStr = new call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() call MutableValueStr.Value() = return MutableValueStr public override public override decl_stmt Lucene.Net.Util.Mutable.MutableValueStr = return call Lucene.Net.Util.BytesRef.Equals(object) call Lucene.Net.Util.BytesRef.Equals(object) call Lucene.Net.Util.BytesRef.Equals(object) call Lucene.Net.Util.BytesRef.Equals(object) call Lucene.Net.Util.BytesRef.Equals(object) && == int MutableValueStr public override public override decl_stmt Lucene.Net.Util.Mutable.MutableValueStr = decl_stmt int = call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) call Lucene.Net.Util.BytesRef.CompareTo(object) if != return if == return return : - public override public override return call Lucene.Net.Util.BytesRef.GetHashCode() call Lucene.Net.Util.BytesRef.GetHashCode() call Lucene.Net.Util.BytesRef.GetHashCode() call Lucene.Net.Util.BytesRef.GetHashCode() call Lucene.Net.Util.BytesRef.GetHashCode()