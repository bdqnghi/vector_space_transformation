Lucene.Net.Index System.Collections.Generic using System.Diagnostics using System.Linq using System using Lucene.Net.Util.Bits Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Lucene.Net.Codecs.DocValuesConsumer Lucene.Net.Index.FieldInfo.DocValuesType_e Lucene.Net.Codecs.FieldInfosWriter Lucene.Net.Codecs.FieldsConsumer Lucene.Net.Util.InfoStream Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Codecs.StoredFieldsWriter Lucene.Net.Codecs.TermVectorsWriter class Lucene.Net.Index.SegmentMerger int MergeState Codec decl FieldInfos IOContext Directory internal internal return > int FieldInfosWriter SegmentWriteState long long public public if ! throw new decl_stmt long = if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() = / decl_stmt int = if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() decl_stmt long = / call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() - / + + + == decl_stmt SegmentWriteState = new if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() = / if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() decl_stmt long = / call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() - / + + + if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() = / if call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() decl_stmt long = / call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() - / + + + if call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() = / if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() decl_stmt long = / call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() - / + + + if call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() = / = if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() decl_stmt long = / call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() - / + + + == decl_stmt FieldInfosWriter = call Codec.FieldInfosFormat() call Codec.FieldInfosFormat() call Codec.FieldInfosFormat() call Codec.FieldInfosFormat() call Codec.FieldInfosFormat() call FieldInfosWriter.Write() call FieldInfosWriter.Write() call FieldInfosWriter.Write() call FieldInfosWriter.Write() call FieldInfosWriter.Write() return decl IList decl IList Bits DocValuesConsumer bool SortedSetDocValues DocValuesType_e private private decl_stmt Lucene.Net.Codecs.DocValuesConsumer = call Codec.DocValuesFormat() call Codec.DocValuesFormat() call Codec.DocValuesFormat() call Codec.DocValuesFormat() call Codec.DocValuesFormat() decl_stmt bool = try foreach in decl_stmt DocValuesType_e ? = if != if == decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt NumericDocValues = decl_stmt Lucene.Net.Spatial.Util.Bits = if == = = new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) else if == decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt BinaryDocValues = decl_stmt Lucene.Net.Spatial.Util.Bits = if == = = new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call Lucene.Net.Codecs.DocValuesConsumer.MergeBinaryField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeBinaryField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeBinaryField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeBinaryField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeBinaryField(FieldInfo,MergeState,IList,IList) else if == decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt Lucene.Net.Index.SortedDocValues = if == = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedField(FieldInfo,MergeState,IList) else if == decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt Lucene.Net.Index.SortedSetDocValues = if == = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedSetField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedSetField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedSetField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedSetField(FieldInfo,MergeState,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeSortedSetField(FieldInfo,MergeState,IList) else throw new + = finally if else decl IList NumericDocValues DocValuesConsumer decl IList bool private private decl_stmt Lucene.Net.Codecs.DocValuesConsumer = call Codec.NormsFormat() call Codec.NormsFormat() call Codec.NormsFormat() call Codec.NormsFormat() call Codec.NormsFormat() decl_stmt bool = try foreach in if decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt NumericDocValues = if == = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) call Lucene.Net.Codecs.DocValuesConsumer.MergeNumericField(FieldInfo,MergeState,IList,IList) = finally if else FieldInfos bool FieldInfo AtomicReader int SegmentReader private private decl_stmt int = = new for = < ++ decl_stmt Lucene.Net.Index.AtomicReader = if is decl_stmt Lucene.Net.Index.SegmentReader = decl_stmt bool = decl_stmt Lucene.Net.Index.FieldInfos = foreach in decl_stmt Lucene.Net.Index.FieldInfo = call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() call MergeState.FieldInfos() if == || ! call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() = break if = ++ if call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() + + + if != call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() call MergeState.InfoStream() + - + FieldInfos public public foreach in decl_stmt Lucene.Net.Index.FieldInfos = foreach in call decl FieldInfos.Add() call decl FieldInfos.Add() call decl FieldInfos.Add() call decl FieldInfos.Add() call decl FieldInfos.Add() = call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() StoredFieldsWriter private private decl_stmt Lucene.Net.Index.StoredFieldsWriter = call Codec.StoredFieldsFormat() call Codec.StoredFieldsFormat() call Codec.StoredFieldsFormat() call Codec.StoredFieldsFormat() call Codec.StoredFieldsFormat() try return call StoredFieldsWriter.Merge() call StoredFieldsWriter.Merge() call StoredFieldsWriter.Merge() call StoredFieldsWriter.Merge() call StoredFieldsWriter.Merge() finally call Lucene.Net.Index.StoredFieldsWriter.Dispose() call Lucene.Net.Index.StoredFieldsWriter.Dispose() call Lucene.Net.Index.StoredFieldsWriter.Dispose() call Lucene.Net.Index.StoredFieldsWriter.Dispose() call Lucene.Net.Index.StoredFieldsWriter.Dispose() TermVectorsWriter private private decl_stmt Lucene.Net.Index.TermVectorsWriter = call Codec.TermVectorsFormat() call Codec.TermVectorsFormat() call Codec.TermVectorsFormat() call Codec.TermVectorsFormat() call Codec.TermVectorsFormat() try return call Lucene.Net.Index.TermVectorsWriter.Merge(MergeState) call Lucene.Net.Index.TermVectorsWriter.Merge(MergeState) call Lucene.Net.Index.TermVectorsWriter.Merge(MergeState) call Lucene.Net.Index.TermVectorsWriter.Merge(MergeState) call Lucene.Net.Index.TermVectorsWriter.Merge(MergeState) finally call Lucene.Net.Index.TermVectorsWriter.Dispose() call Lucene.Net.Index.TermVectorsWriter.Dispose() call Lucene.Net.Index.TermVectorsWriter.Dispose() call Lucene.Net.Index.TermVectorsWriter.Dispose() call Lucene.Net.Index.TermVectorsWriter.Dispose() int int decl MergeState int AtomicReader private private decl_stmt int = = new = new decl_stmt int = decl_stmt int = while < decl_stmt Lucene.Net.Index.AtomicReader = = decl_stmt DocMap = call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() call MergeState.DocMap() = += ++ return int int Fields decl IList decl IList bool AtomicReader FieldsConsumer private private decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Index.Fields = decl_stmt int = if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() += decl_stmt Lucene.Net.Codecs.FieldsConsumer = call Codec.PostingsFormat() call Codec.PostingsFormat() call Codec.PostingsFormat() call Codec.PostingsFormat() call Codec.PostingsFormat() decl_stmt bool = try call FieldsConsumer.Merge() call FieldsConsumer.Merge() call FieldsConsumer.Merge() call FieldsConsumer.Merge() call FieldsConsumer.Merge() new call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() = finally if else