Lucene.Net.Index Lucene.Net.Documents using Lucene.Net.Support using System using System.Collections.Generic using NUnit.Framework using Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Index.IndexWriterConfig.OpenMode_e class attribute Lucene.Net.Index.TestIndexFileDeleter super super LuceneTestCase decl string decl string int MergePolicy decl HashSet IndexWriter string Term decl string Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = if is = decl_stmt Lucene.Net.Index.MergePolicy = = = decl_stmt Lucene.Net.Index.IndexWriter = new new decl_stmt int for = < ++ = call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() for < ++ call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = new new decl_stmt Lucene.Net.Index.Term = new call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt string = call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() decl_stmt string = : + + + + + + || ! decl_stmt string = call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() = new new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt string = call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl_stmt System.Collections.Generic.HashSet < = if ! + - + + - + + + + + + decl HashSet decl IEnumerator decl IEnumerator string decl HashSet decl HashSet private static < private static < decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() for = < ++ call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt System.Collections.Generic.IEnumerator < = call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt string = if ! call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt System.Collections.Generic.IEnumerator < = call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() call decl HashSet.GetEnumerator() while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt string = if ! call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() return string private private decl_stmt string = for = < ++ if > += += return IndexOutput var long int IndexInput public virtual public virtual decl_stmt Lucene.Net.Store.IndexInput = decl_stmt IndexOutput = decl_stmt var = new decl_stmt long = call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() while > decl_stmt int = int call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() -= call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() Document private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField)