Lucene.Net.Codecs.Lucene41 Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Store.Directory Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Store.IOContext Lucene.Net.Util.LuceneTestCase Lucene.Net.Util.Packed.PackedInts Lucene.Net.Store.RAMDirectory class attribute Lucene.Net.Codecs.Lucene41.TestForUtil super super LuceneTestCase Directory IndexInput int float decl int decl int int int IndexOutput long ForUtil public virtual public virtual decl_stmt int = decl_stmt float = float decl_stmt int = new - * + for = < ++ decl_stmt int = if == decl_stmt int = for = < ++ * + = else for = < ++ * + = int decl_stmt Lucene.Net.Store.Directory = new decl_stmt long decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() decl_stmt Lucene.Net.Codecs.Lucene41.ForUtil = new for = < ++ call ForUtil.WriteBlock() call ForUtil.WriteBlock() call ForUtil.WriteBlock() call ForUtil.WriteBlock() call ForUtil.WriteBlock() * new = call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() decl_stmt Lucene.Net.Codecs.Lucene41.ForUtil = new for = < ++ if call Lucene.Net.Codecs.Lucene41.ForUtil.SkipBlock(IndexInput) call Lucene.Net.Codecs.Lucene41.ForUtil.SkipBlock(IndexInput) call Lucene.Net.Codecs.Lucene41.ForUtil.SkipBlock(IndexInput) call Lucene.Net.Codecs.Lucene41.ForUtil.SkipBlock(IndexInput) call Lucene.Net.Codecs.Lucene41.ForUtil.SkipBlock(IndexInput) continue decl_stmt int = new call Lucene.Net.Codecs.Lucene41.ForUtil.ReadBlock(IndexInput,byte,int) call Lucene.Net.Codecs.Lucene41.ForUtil.ReadBlock(IndexInput,byte,int) call Lucene.Net.Codecs.Lucene41.ForUtil.ReadBlock(IndexInput,byte,int) call Lucene.Net.Codecs.Lucene41.ForUtil.ReadBlock(IndexInput,byte,int) call Lucene.Net.Codecs.Lucene41.ForUtil.ReadBlock(IndexInput,byte,int) new * + * call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose()