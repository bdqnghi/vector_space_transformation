Lucene.Net.Codecs.Memory System.IO using Lucene.Net.Util.Fst using System using System.Collections.Generic using Index.FieldInfo.IndexOptions Index.FieldInfo Index.FieldInfos Index.IndexFileNames Index.SegmentWriteState Store.DataOutput Store.IndexOutput Store.RAMOutputStream Util.BytesRef Util.IOUtils Util.IntsRef Util.Fst.Builder<<long FST Util.Fst.PositiveIntOutputs Util.Fst.Util class Lucene.Net.Codecs.Memory.FSTOrdTermsWriter super super FieldsConsumer string string string int int IndexOutput FieldInfos int int IndexOutput decl IList PostingsWriterBase public override public override return new var IOException public override public override if == return decl_stmt IOException = try decl_stmt var = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() foreach in call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() if != call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() catch = finally = private static private static private static private static return public override public override return var var long public override public override if > && == decl_stmt var = new decl_stmt long = - if > if == << | else << | - else decl_stmt var = = = for = < ++ - = - ++ = var public override public override if <= return decl_stmt var = new = = = = = = = = = = = internal internal - - - for = < ++ - = = =