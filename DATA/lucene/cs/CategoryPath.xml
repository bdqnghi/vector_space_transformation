Lucene.Net.Facet.Taxonomy System using System.Diagnostics using System.Text using Lucene.Net.Support using class Lucene.Net.Facet.Taxonomy.CategoryPath super int decl string CategoryPath int public virtual public virtual if == return decl_stmt int = for = < ++ += += - return int int public virtual public virtual decl_stmt int = < : for = = < ++ , ++ decl_stmt int = if < return - if > return return - private private throw new + + + + + + private private for = < ++ if + == new int int int public virtual public virtual if == return decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int = - += ++ = - return + - CategoryPath public override public override if ! is return decl_stmt Lucene.Net.Facet.Taxonomy.CategoryPath = if != return for = - >= -- if ! return return int public override public override if == return decl_stmt int = for = < ++ = * + return long public virtual public virtual if == return decl_stmt long = for = < ++ = * + return public virtual public virtual if >= || < return else if == return else return new public override public override return StringBuilder public virtual public virtual if == return decl_stmt System.Text.StringBuilder = new for = < ++ if != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = - return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)