Lucene.Net.Facet.Taxonomy.Directory System using System.Collections.Generic using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Facet.Taxonomy.TaxonomyReader.ChildrenIterator Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Index.LogByteSizeMergePolicy Lucene.Net.Index.LogMergePolicy Lucene.Net.Store.AlreadyClosedException Lucene.Net.Store.Directory Lucene.Net.Store.RAMDirectory Lucene.Net.Util.IOUtils class Lucene.Net.Facet.Taxonomy.Directory.TestDirectoryTaxonomyReader super super FacetTestCase DirectoryTaxonomyReader var var Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = new call DirectoryTaxonomyReader.IncRef() call DirectoryTaxonomyReader.IncRef() call DirectoryTaxonomyReader.IncRef() call DirectoryTaxonomyReader.IncRef() call DirectoryTaxonomyReader.IncRef() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.Dispose() decl_stmt var = call DirectoryTaxonomyReader.DecRef() call DirectoryTaxonomyReader.DecRef() call DirectoryTaxonomyReader.DecRef() call DirectoryTaxonomyReader.DecRef() call DirectoryTaxonomyReader.DecRef() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var var Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt var = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyReader DirectoryTaxonomyWriter Directory DirectoryTaxonomyReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = try = = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = finally var var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt var = new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() try decl_stmt var = catch call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public virtual public virtual public virtual public virtual int TaxonomyWriter int TaxonomyReader int var decl FacetLabel Directory private private decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.TaxonomyWriter = decl_stmt Lucene.Net.Facet.Taxonomy.TaxonomyReader = decl_stmt int = decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new for = < ++ = new try = = new call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) new call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() = new decl_stmt int = for = < ++ decl_stmt int = = new for = <= ++ call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.TaxonomyWriter.AddCategory(FacetLabel) call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() call TaxonomyWriter.Dispose() if call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() = new else decl_stmt var = call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() call TaxonomyReader.Dispose() = + + + + + + finally as var var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() decl_stmt var = new call var.IncRef() call var.IncRef() call var.IncRef() call var.IncRef() call var.IncRef() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() decl_stmt var = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int int int int DirectoryTaxonomyWriter decl int var var int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt var = new decl_stmt int = + decl_stmt int = for = < ++ decl_stmt int = + for = < ++ call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new += + decl_stmt var = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = decl_stmt int = call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() new decl_stmt int = call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() for = < ++ decl_stmt int = call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() call var.GetOrdinal() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() LogMergePolicy IndexWriterConfig protected override protected override decl_stmt Lucene.Net.Index.IndexWriterConfig = decl_stmt Lucene.Net.Index.LogMergePolicy = = return var var IndexWriter Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new new new decl_stmt var = new as decl_stmt var = new call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) decl_stmt var = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() protected override protected override return var DirectoryTaxonomyWriter var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new new new new decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new decl_stmt var = new call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ForceMerge() call var.ForceMerge() call var.ForceMerge() call var.ForceMerge() call var.ForceMerge() decl_stmt var = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.ParallelTaxonomyArrays() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() protected override protected override return DirectoryTaxonomyReader DirectoryTaxonomyReader DirectoryTaxonomyWriter FacetLabel FacetLabel Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyReader DirectoryTaxonomyReader DirectoryTaxonomyWriter FacetLabel FacetLabel Directory public virtual public virtual foreach in new decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) if ! call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = new : new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) if ! call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory DirectoryTaxonomyReader DirectoryTaxonomyReader var DirectoryTaxonomyWriter FacetLabel FacetLabel Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() foreach in new decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() if ! call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = new : new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() if ! call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetPath(int) call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int int var var decl ChildrenIterator int FacetLabel int Random int int decl TaxonomyReader var FacetLabel FacetLabel Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new decl_stmt int = decl_stmt int = = decl_stmt System.Random = call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new for = < ++ if call var.NextBoolean() call var.NextBoolean() call var.NextBoolean() call var.NextBoolean() call var.NextBoolean() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new ++ else call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new ++ call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt var = new decl_stmt ChildrenIterator = call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() new call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() = call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() new call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() = call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() - call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() decl_stmt var = new < = call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() while > decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call var.Remove() call var.Remove() call var.Remove() call var.Remove() call var.Remove() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() for = < ++ decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = == new : new decl_stmt int = call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() call decl TaxonomyReader.GetOrdinal() = call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() call decl TaxonomyReader.GetChildren() decl_stmt int = decl_stmt int while = call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() call decl ChildrenIterator.Next() != decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() call decl TaxonomyReader.GetPath() == : ++ decl_stmt int = == : call decl TaxonomyReader.Dispose() call decl TaxonomyReader.Dispose() call decl TaxonomyReader.Dispose() call decl TaxonomyReader.Dispose() call decl TaxonomyReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()