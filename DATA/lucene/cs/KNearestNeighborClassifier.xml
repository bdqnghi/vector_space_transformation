Lucene.Net.Classification Lucene.Net.Analysis using Lucene.Net.Index using Lucene.Net.Queries.Mlt using Lucene.Net.Search using Lucene.Net.Util using System using System.Collections.Generic using System.IO using class Lucene.Net.Classification.KNearestNeighborClassifier super MoreLikeThis int Query int int decl String IndexSearcher String Query TopDocs BooleanQuery public < public < if == throw new decl_stmt Lucene.Net.Search.BooleanQuery = new foreach in call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new call Lucene.Net.Queries.Mlt.MoreLikeThis.Like(Reader,string) call Lucene.Net.Queries.Mlt.MoreLikeThis.Like(Reader,string) call Lucene.Net.Queries.Mlt.MoreLikeThis.Like(Reader,string) call Lucene.Net.Queries.Mlt.MoreLikeThis.Like(Reader,string) call Lucene.Net.Queries.Mlt.MoreLikeThis.Like(Reader,string) new decl_stmt Lucene.Net.Search.Query = new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new if != call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) return int BytesRef double double BytesRef decl Dictionary private < private < decl_stmt org.apache.lucene.analysis.hunspell.Dictionary < = new < foreach in decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() = + else call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() decl_stmt double = decl_stmt Lucene.Net.Util.BytesRef = new foreach < in decl_stmt int = if > = = decl_stmt double = / double return new < public public public public new public public = = = new = = = new if > = if > = =