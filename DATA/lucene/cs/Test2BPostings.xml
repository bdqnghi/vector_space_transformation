Lucene.Net.Index Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Attributes using Lucene.Net.Documents using NUnit.Framework using System using Lucene.Net.Store.BaseDirectoryWrapper Lucene.Net.Analysis.Tokenattributes.CharTermAttribute Documents.Document Field FieldType Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper TextField Lucene.Net.Analysis.TokenStream class attribute attribute Lucene.Net.Index.Test2BPostings super super LuceneTestCase FieldType Document Field MergePolicy IndexWriter IndexWriterConfig int BaseDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.BaseDirectoryWrapper = if is = decl_stmt Lucene.Net.Index.IndexWriterConfig = new new new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Index.MergePolicy = if is = * * decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.FieldType = new = = decl_stmt Lucene.Net.Documents.Field = new new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int = / + for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if && == + + + call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() public override public override if <= = = char ++ return return public override public override =