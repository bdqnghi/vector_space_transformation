Lucene.Net.Search System using System.Collections.Concurrent using System.Collections.Generic using System.Linq using Lucene.Net.Store.AlreadyClosedException Lucene.Net.Index.DirectoryReader Lucene.Net.Util.IOUtils class Lucene.Net.Search.SearcherLifetimeManager super super IDisposable bool double decl ConcurrentDictionary public public return public public lock private private if throw new var var var public virtual public virtual decl_stmt var = decl_stmt var = decl_stmt var = call decl ConcurrentDictionary.GetOrAdd() call decl ConcurrentDictionary.GetOrAdd() call decl ConcurrentDictionary.GetOrAdd() call decl ConcurrentDictionary.GetOrAdd() call decl ConcurrentDictionary.GetOrAdd() = return new if ! && != throw new + + + return SearcherTracker public virtual public virtual decl_stmt SearcherTracker = if != && call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() call SearcherTracker.Searcher() return return public virtual public virtual public public return > var var double SearcherTracker var public virtual public virtual lock decl_stmt var = call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call decl ConcurrentDictionary.Values() call var.Sort() call var.Sort() call var.Sort() call var.Sort() call var.Sort() decl_stmt var = decl_stmt var = / / foreach in decl_stmt double if == = else = - if decl_stmt SearcherTracker call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() out = decl IList SearcherTracker public public lock = decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt SearcherTracker call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() call decl ConcurrentDictionary.TryRemove() out if != throw new