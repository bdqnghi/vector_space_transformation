Lucene.Net.Search System.Collections.Generic using System.Diagnostics using class Lucene.Net.Search.DisjunctionScorer super super Scorer int int decl Scorer protected internal protected internal for = >> - >= -- int int int int Scorer int Scorer Scorer protected internal protected internal decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() decl_stmt int = while <= >> - decl_stmt int = << + decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() decl_stmt int = = << + decl_stmt Lucene.Net.Search.Scorer = if < = = if < if < = = = else = = = else if < = = = else return protected internal protected internal if == = = else = - - = -- decl List decl_stmt System.Collections.Generic.List < = new < for = < ++ call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new return long public override public override decl_stmt long = for = < ++ += return public override public override return public override public override != while if != else if == return = if != return public override public override != while if != else if == return = if >= return