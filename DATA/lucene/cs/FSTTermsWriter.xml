Lucene.Net.Codecs.Memory System.Collections.Generic using System.IO using Index.FieldInfo.IndexOptions Index.FieldInfo Index.FieldInfos Index.IndexFileNames Index.SegmentWriteState Store.DataOutput Store.IndexOutput Store.RAMOutputStream Util.BytesRef Util.IOUtils Util.IntsRef Util.Fst.FST Util.Fst using Util.Fst.Util class Lucene.Net.Codecs.Memory.FSTTermsWriter super super FieldsConsumer string PostingsWriterBase int IndexOutput int int FieldInfos decl IList string private private private static private static public override public override return new IOException var public override public override if == return decl_stmt IOException = try decl_stmt var = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() foreach in call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() if != call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() catch = finally = return public override public override return var var var public override public override decl_stmt var = decl_stmt var = new = new = = = = = decl_stmt var = int if > = new ++ var public override public override if <= return decl_stmt var = new