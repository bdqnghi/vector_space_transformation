Lucene.Net.Queries Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Util using class Lucene.Net.Queries.TermFilter super super Filter Term return Terms TermsEnum public override public override decl_stmt Lucene.Net.Index.Terms = if == return decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() if ! call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) return return new public override public override return TermFilter public override public override if == return if == || != return decl_stmt Lucene.Net.Queries.TermFilter = if != ! call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) : != return return public override public override return != call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() : public override public override return + + call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text()