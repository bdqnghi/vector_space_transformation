Lucene.Net.Store Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using System using System.IO using Lucene.Net.Util.LuceneTestCase Lucene.Net.Util.TestUtil class attribute Lucene.Net.Store.TestCopyBytes super super LuceneTestCase private private return unchecked * + / int int var int int int IndexInput IndexInput var IndexOutput Directory int public virtual public virtual decl_stmt int = for = < ++ decl_stmt Lucene.Net.Store.Directory = if + + + decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() decl_stmt var = new decl_stmt int = decl_stmt int = decl_stmt int = while < ++ = ++ if == call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() = call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() decl_stmt Lucene.Net.Store.IndexInput = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() = while < if call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() ++ else decl_stmt int = - call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() += call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() = while < if decl_stmt var = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() ++ else decl_stmt int = - call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() for = < ++ ++ call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Directory.DeleteFile() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexOutput Directory decl CopyThread int IndexInput IndexOutput decl byte IndexInput decl byte public virtual public virtual decl_stmt int = decl_stmt byte = new decl_stmt Lucene.Net.Store.Directory = decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt CopyThread = new for = < ++ = new call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() + for = < ++ for = < ++ for = < ++ decl_stmt Lucene.Net.Store.IndexInput = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() + decl_stmt byte = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() - call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override try - catch throw new