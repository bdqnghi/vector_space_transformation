Lucene.Net.Search.Suggest.Jaspell System using System.Collections.Generic using System.IO using System.Text using Lucene.Net.Support using Lucene.Net.Util using class Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie Locale int TSTNode int long public public decl_stmt long = + foreach in if != += return private static private static return - = return private private if == return = while != = int bool int bool TSTNode TSTNode int int private private if == return if != || != return decl_stmt TSTNode = decl_stmt bool = == decl_stmt bool = == decl_stmt int if == = else if == = else if == = else = return if && = return if = = return if = = return decl_stmt int = - decl_stmt int = - decl_stmt int decl_stmt TSTNode if == if new < ++ else ++ if > = = else = = while != = = = = if ! = if ! = return TSTNode public virtual public virtual decl_stmt TSTNode = if == return return TSTNode string float public virtual ? public virtual ? decl_stmt string = decl_stmt TSTNode = if == return decl_stmt float ? = float if == = new float else = new float int + return TSTNode TSTNode StringBuilder protected internal virtual protected internal virtual decl_stmt System.Text.StringBuilder = new = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + decl_stmt TSTNode decl_stmt TSTNode = = while != if == call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + = = call StringBuilder.Reverse() call StringBuilder.Reverse() call StringBuilder.Reverse() call StringBuilder.Reverse() call StringBuilder.Reverse() return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public virtual public virtual return int TSTNode int protected internal virtual protected internal virtual if == || == || == return decl_stmt TSTNode = decl_stmt int = while if == return decl_stmt int = if == ++ if == return = else if < = else = int TSTNode int protected internal virtual protected internal virtual if == throw new if == throw new if == = new decl_stmt TSTNode = decl_stmt int = while decl_stmt int = if == ++ if == return if == = new = else if < if == = new = else if == = new = public virtual < public virtual < return public virtual < public virtual < return < - : new < int int bool decl IList private < private < < if == || != - && >= || < || >= return decl_stmt int = decl_stmt System.Collections.Generic.IList < = if > || < = decl_stmt int = == : - decl_stmt bool = >= : == if == + && && != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = + if > || > = return public virtual < public virtual < return TSTNode decl List public virtual < public virtual < decl_stmt System.Collections.Generic.List < = new < decl_stmt TSTNode = if == return if != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return < - : public virtual public virtual return protected internal virtual protected internal virtual return public virtual public virtual return protected internal virtual protected internal virtual return public virtual public virtual = int private private if == return decl_stmt int = = = if if != ++ else ++ return public virtual public virtual if < = else if > = else = = < - : protected internal virtual < protected internal virtual < return < - : new < decl IList private < private < < if == return decl_stmt System.Collections.Generic.IList < = if != - && >= return if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = return long TSTNode public virtual public virtual decl_stmt long = decl_stmt TSTNode = if != += call TSTNode.SizeInBytes() call TSTNode.SizeInBytes() call TSTNode.SizeInBytes() call TSTNode.SizeInBytes() call TSTNode.SizeInBytes() return