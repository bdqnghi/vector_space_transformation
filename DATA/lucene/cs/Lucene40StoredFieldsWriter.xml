Lucene.Net.Codecs.Lucene40 System using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Index.AtomicReader Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Documents.Document Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.IndexableField Lucene.Net.Index.IndexFileNames Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Index.MergeState Lucene.Net.Index.SegmentReader class Lucene.Net.Codecs.Lucene40.Lucene40StoredFieldsWriter super super StoredFieldsWriter int int int string int int string int int string IndexOutput long IndexOutput Directory int long string int int string public override public override call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() protected override protected override if try finally = = public override public override try catch BytesRef int object string public override public override call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt int = decl_stmt Lucene.Net.Util.BytesRef decl_stmt string decl_stmt object = object if != if is sbyte || is short || is int |= else if is long |= else if is float |= else if is double |= else throw new + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() = = else = if != |= = else = if == throw new + + call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() byte sbyte if != call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() else if != call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() else if is sbyte || is short || is int call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() int else if is long call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() long else if is float call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() float else if is double call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() double else throw new long long public public decl_stmt long = decl_stmt long = for = < ++ call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() += call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() - == public override public override if + long * != throw new + + + + + call IndexOutput.ToString() call IndexOutput.ToString() call IndexOutput.ToString() call IndexOutput.ToString() call IndexOutput.ToString() + SegmentReader int int StoredFieldsReader Lucene40StoredFieldsReader decl int public override public override decl_stmt int = decl_stmt int = new decl_stmt int = foreach in decl_stmt Lucene.Net.Index.SegmentReader = ++ decl_stmt Lucene.Net.Codecs.Lucene40.Lucene40StoredFieldsReader = if != decl_stmt Lucene.Net.Codecs.StoredFieldsReader = if != && is = if != += else += return int Document Bits int int IndexInput private private decl_stmt int = decl_stmt int = decl_stmt Lucene.Net.Spatial.Util.Bits = != if != for = < if ! call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() ++ continue decl_stmt int = = do ++ ++ if >= break if ! call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() ++ break < decl_stmt Lucene.Net.Store.IndexInput = += * else for = < ++ if ! call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() continue decl_stmt Lucene.Net.Documents.Document = ++ return IndexInput Document int int int private private decl_stmt int = decl_stmt int = if != while < decl_stmt int = - decl_stmt Lucene.Net.Store.IndexInput = += * else for < ++ decl_stmt Lucene.Net.Documents.Document = return