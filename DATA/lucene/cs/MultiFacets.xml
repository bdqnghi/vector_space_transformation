Lucene.Net.Facet System.Collections.Generic using Lucene.Net.Facet using Lucene.Net.Support using class Lucene.Net.Facet.MultiFacets super super Facets decl IDictionary Facets Facets public override public override params params params decl_stmt Facets if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out if == throw new + + = return call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() Facets public override public override params params params decl_stmt Facets if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out if == throw new + + = return call Facets.GetSpecificValue() call Facets.GetSpecificValue() call Facets.GetSpecificValue() call Facets.GetSpecificValue() call Facets.GetSpecificValue() decl IList public override < public override < decl_stmt System.Collections.Generic.IList < = new < foreach < in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() if != foreach in call Facets.GetAllDims() call Facets.GetAllDims() call Facets.GetAllDims() call Facets.GetAllDims() call Facets.GetAllDims() if call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() == call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return