Lucene.Net.Index Lucene.Net.Randomized.Generators using Lucene.Net.Support using System using NUnit.Framework using Lucene.Net.Store.Directory Documents.Document Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Util.TestUtil class Lucene.Net.Index.BaseMergePolicyTestCase super super LuceneTestCase int IndexWriter AtomicBoolean int int int MergeScheduler Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Support.AtomicBoolean = new decl_stmt Lucene.Net.Index.MergeScheduler = new decl_stmt Lucene.Net.Index.IndexWriter = new new = : decl_stmt int = for = < ++ decl_stmt int = for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) new call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() call IndexWriter.Reader() for = >= -- decl_stmt int = decl_stmt int = == : call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) call Lucene.Net.Support.AtomicBoolean.Set(bool) > call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override lock if ! && != throw new