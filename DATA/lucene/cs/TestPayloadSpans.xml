Lucene.Net.Search.Spans Lucene.Net.Analysis.Tokenattributes using System using System.Collections.Generic using System.Text using Lucene.Net.Documents using NUnit.Framework using System.IO using Lucene.Net.Analysis.Analyzer Lucene.Net.Util.BytesRef Lucene.Net.Search.Similarities.DefaultSimilarity Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockTokenizer Lucene.Net.Search.Payloads.PayloadHelper Lucene.Net.Search.Payloads.PayloadSpanUtil Lucene.Net.Index.RandomIndexWriter Lucene.Net.Search.Similarities.Similarity Lucene.Net.Index.Term TextField Lucene.Net.Analysis.TokenFilter Lucene.Net.Analysis.Tokenizer Lucene.Net.Analysis.TokenStream class attribute Lucene.Net.Search.Spans.TestPayloadSpans super super LuceneTestCase Directory IndexReader IndexSearcher IndexReader Similarity PayloadHelper public override public override decl_stmt Lucene.Net.Search.Payloads.PayloadHelper = new = call Lucene.Net.Search.Payloads.PayloadHelper.SetUp(Random,Similarity,int) call Lucene.Net.Search.Payloads.PayloadHelper.SetUp(Random,Similarity,int) call Lucene.Net.Search.Payloads.PayloadHelper.SetUp(Random,Similarity,int) call Lucene.Net.Search.Payloads.PayloadHelper.SetUp(Random,Similarity,int) call Lucene.Net.Search.Payloads.PayloadHelper.SetUp(Random,Similarity,int) = SpanTermQuery Spans public virtual public virtual decl_stmt Lucene.Net.Search.Spans.SpanTermQuery decl_stmt Spans = new new = != = new new = != decl SpanQuery Spans SpanQuery SpanFirstQuery public virtual public virtual decl_stmt Lucene.Net.Search.Spans.SpanQuery decl_stmt Lucene.Net.Search.Spans.SpanFirstQuery = new new = new decl_stmt Spans = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new = new = new = new = new SpanQuery Document RandomIndexWriter IndexReader SpanNotQuery Directory decl SpanQuery public virtual public virtual decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanNotQuery = new new new decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery SpanTermQuery Spans decl SpanQuery public virtual public virtual decl_stmt Lucene.Net.Search.Spans.SpanTermQuery decl_stmt Spans decl_stmt Lucene.Net.Search.IndexSearcher = = new new = != decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = != new = new new = new new = new new = new = != new = new = new new = new new = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = != new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery Spans SpanNearQuery decl SpanQuery decl SpanQuery public virtual public virtual decl_stmt Spans decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = != new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery SpanNearQuery SpanNearQuery Spans decl SpanQuery decl SpanQuery public virtual public virtual decl_stmt Spans decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = new = = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = new new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = new new = = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = != new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() RandomIndexWriter SpanNearQuery decl SpanQuery Document IndexSearcher IndexReader decl HashSet SpanTermQuery var Spans SpanTermQuery Directory TopDocs public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Spans = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() decl_stmt var = foreach in call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() RandomIndexWriter SpanNearQuery decl SpanQuery Document IndexSearcher IndexReader decl HashSet SpanTermQuery var Spans SpanTermQuery Directory TopDocs public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanQuery = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Spans = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() decl_stmt var = foreach in call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() RandomIndexWriter SpanNearQuery decl SpanQuery Document IndexSearcher IndexReader decl HashSet SpanTermQuery var Spans SpanTermQuery Directory TopDocs public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new decl_stmt Spans = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() decl_stmt var = foreach in call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() if foreach in + call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexSearcher Document RandomIndexWriter var IndexReader Directory PayloadSpanUtil public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.Payloads.PayloadSpanUtil = new decl_stmt var = call Lucene.Net.Search.Payloads.PayloadSpanUtil.GetPayloadsForQuery(Query) call Lucene.Net.Search.Payloads.PayloadSpanUtil.GetPayloadsForQuery(Query) call Lucene.Net.Search.Payloads.PayloadSpanUtil.GetPayloadsForQuery(Query) call Lucene.Net.Search.Payloads.PayloadSpanUtil.GetPayloadsForQuery(Query) call Lucene.Net.Search.Payloads.PayloadSpanUtil.GetPayloadsForQuery(Query) new new if + foreach in call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int var private private != decl_stmt int = while == if > == + + + > else == if decl_stmt var = == + + + foreach in == + + + == + + ++ == + + string decl string RandomIndexWriter IndexSearcher Document = decl_stmt string = new decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = for = < ++ = new decl_stmt string = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = return int var private private decl_stmt int = while == if if decl_stmt var = if + foreach in + + + + + + + else > && > + + ++ Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new new string public override public override if decl_stmt string = if ! if = new + + else = new + + += return return public override public override = Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new new