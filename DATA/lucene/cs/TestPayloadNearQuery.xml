Lucene.Net.Search.Payloads System.Text.RegularExpressions using Lucene.Net.Analysis.Tokenattributes using System using Lucene.Net.Documents using Lucene.Net.Analysis using NUnit.Framework using System.IO using Lucene.Net.Util.BytesRef Lucene.Net.Search.Similarities.DefaultSimilarity Lucene.Net.Store.Directory Documents.Document Lucene.Net.Util.English Field Lucene.Net.Index.FieldInvertState Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Index.RandomIndexWriter Lucene.Net.Search.Spans.SpanNearQuery Lucene.Net.Search.Spans.SpanQuery Lucene.Net.Search.Spans.SpanTermQuery Lucene.Net.Index.Term class attribute Lucene.Net.Search.Payloads.TestPayloadNearQuery super super LuceneTestCase IndexSearcher BoostingSimilarity Regex decl byte decl byte IndexReader Directory Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new new bool public sealed override public sealed override decl_stmt bool = if if == = new else = new ++ = return public override public override = var var private private decl_stmt var = call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) decl_stmt var = new for = < ++ = new new return new string Document RandomIndexWriter public static public static = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt string = + + + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() = = public static public static = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() = PayloadNearQuery TopDocs ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + for = < ++ = + new if + = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + SpanNearQuery decl SpanQuery PayloadNearQuery public virtual public virtual decl_stmt Lucene.Net.Search.Spans.SpanNearQuery decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery = = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = = = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) PayloadNearQuery TopDocs Explanation string ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + decl_stmt Lucene.Net.Search.Explanation = call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) decl_stmt string = call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() > - + + PayloadNearQuery TopDocs Explanation string ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + decl_stmt Lucene.Net.Search.Explanation = call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) decl_stmt string = call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() > - + + PayloadNearQuery TopDocs Explanation string ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + decl_stmt Lucene.Net.Search.Explanation = call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) decl_stmt string = call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() > - + + SpanNearQuery decl SpanQuery decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new = = return var var private private decl_stmt var = call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) call System.Text.RegularExpressions.Regex.Split(string,int) decl_stmt var = new for = < ++ = new new new return new PayloadNearQuery TopDocs ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != decl_stmt Lucene.Net.Search.ScoreDoc = == + + SpanQuery TopDocs SpanQuery SpanQuery ScoreDoc SpanQuery decl SpanQuery PayloadNearQuery public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadNearQuery decl_stmt Lucene.Net.Search.TopDocs decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new decl_stmt Lucene.Net.Search.Spans.SpanQuery = new new new new new = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == decl_stmt Lucene.Net.Search.ScoreDoc = == + + public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return new