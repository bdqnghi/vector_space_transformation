Contrib.Regex System using System.Collections.Generic using System.Text using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Search.Spans using Lucene.Net.Util using class Contrib.Regex.SpanRegexQuery super super SpanQuery super IRegexQueryCapable IRegexCapabilities Term return StringBuilder public override public override decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) decl SpanQuery BooleanClause TermQuery BooleanQuery SpanOrQuery decl BooleanClause RegexQuery public override public override decl_stmt Contrib.Regex.RegexQuery = new = = decl_stmt Lucene.Net.Search.BooleanQuery = call RegexQuery.Rewrite() call RegexQuery.Rewrite() call RegexQuery.Rewrite() call RegexQuery.Rewrite() call RegexQuery.Rewrite() decl_stmt Lucene.Net.Search.BooleanClause = call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() decl_stmt Lucene.Net.Search.Spans.SpanQuery = new for = < ++ decl_stmt Lucene.Net.Search.BooleanClause = decl_stmt Lucene.Net.Search.TermQuery = = new = decl_stmt Lucene.Net.Search.Spans.SpanOrQuery = new = return public override public override throw new return decl ICollection public < public < decl_stmt System.Collections.Generic.ICollection < = new < return = return public public if == return if return if ! call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() call IRegexCapabilities.Equals() return if ! call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) return return public override public override if as == return return public override public override return * call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() call IRegexCapabilities.GetHashCode() + call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode()