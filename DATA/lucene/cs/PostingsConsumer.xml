Lucene.Net.Codecs System.Diagnostics using Lucene.Net.Index using Lucene.Net.Util.BytesRef Lucene.Net.Search.DocIdSetIterator Lucene.Net.Index.DocsAndPositionsEnum Lucene.Net.Index.DocsEnum Lucene.Net.Util.FixedBitSet Lucene.Net.Index.MergeState class Lucene.Net.Codecs.PostingsConsumer int int BytesRef int long int var public virtual public virtual ? decl_stmt int = decl_stmt long = if == while decl_stmt int = if == break - ++ = - else if == while decl_stmt int = if == break decl_stmt int = ++ += else if == decl_stmt var = while decl_stmt int = call var.NextDoc() call var.NextDoc() call var.NextDoc() call var.NextDoc() call var.NextDoc() if == break decl_stmt int = call var.Freq() call var.Freq() call var.Freq() call var.Freq() call var.Freq() += for = < ++ decl_stmt int = call var.NextPosition() call var.NextPosition() call var.NextPosition() call var.NextPosition() call var.NextPosition() decl_stmt Lucene.Net.Util.BytesRef = - - ++ else == decl_stmt var = while decl_stmt int = call var.NextDoc() call var.NextDoc() call var.NextDoc() call var.NextDoc() call var.NextDoc() if == break decl_stmt int = call var.Freq() call var.Freq() call var.Freq() call var.Freq() call var.Freq() += for = < ++ decl_stmt int = call var.NextPosition() call var.NextPosition() call var.NextPosition() call var.NextPosition() call var.NextPosition() decl_stmt Lucene.Net.Util.BytesRef = call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() ++ return new == - :