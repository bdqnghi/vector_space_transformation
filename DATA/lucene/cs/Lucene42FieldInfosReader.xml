Lucene.Net.Codecs.Lucene42 System using System.Collections.Generic using Lucene.Net.Support using Lucene.Net.Index.CorruptIndexException Lucene.Net.Store.Directory Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.IndexFileNames Lucene.Net.Store.IndexInput Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils class attribute Lucene.Net.Codecs.Lucene42.Lucene42FieldInfosReader super super FieldInfosReader string bool bool decl DocValuesType_e decl FieldInfo bool string decl FieldInfo decl IndexOptions int byte decl FieldInfo IndexInput decl FieldInfo bool byte bool int public override public override decl_stmt string = decl_stmt Lucene.Net.Store.IndexInput = decl_stmt bool = try decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt Lucene.Net.Index.FieldInfo = new for = < ++ decl_stmt string = call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt byte = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() decl_stmt bool = & != decl_stmt bool = & != decl_stmt bool = & != decl_stmt bool = & != decl_stmt IndexOptions if ! = default else if & != = else if & != = else if & != = else = decl_stmt byte = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() decl_stmt DocValuesType_e ? = & decl_stmt DocValuesType_e ? = uint >> & decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() call IndexInput.ReadStringStringMap() = new decl_stmt Lucene.Net.Index.FieldInfos = new = return finally if call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() else private static ? private static ? if == return else if == return else if == return else if == return else if == return else throw new + + + +