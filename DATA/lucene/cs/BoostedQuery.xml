Lucene.Net.Queries.Function System using System.Collections using System.Collections.Generic using System.Text using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Support using Lucene.Net.Util using class Lucene.Net.Queries.Function.BoostedQuery super super Query Query ValueSource return return var var public override public override decl_stmt var = call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) if return decl_stmt var = = return public override public override < call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) public override public override return new return float decl_stmt float = *= * return public override public override *= Scorer public override public override decl_stmt Lucene.Net.Search.Scorer = if == return return new FunctionValues Explanation float Explanation public override public override decl_stmt Lucene.Net.Search.Explanation = if ! return decl_stmt Lucene.Net.Queries.Function.FunctionValues = decl_stmt float = * call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) decl_stmt Lucene.Net.Search.Explanation = new + call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Lucene.Net.Queries.Function.FunctionValues.Explain(int) call Lucene.Net.Queries.Function.FunctionValues.Explain(int) call Lucene.Net.Queries.Function.FunctionValues.Explain(int) call Lucene.Net.Queries.Function.FunctionValues.Explain(int) call Lucene.Net.Queries.Function.FunctionValues.Explain(int) return public override public override return public override public override return public override public override return float public override public override decl_stmt float = * * return > : - public override public override return return new float var Explanation public public decl_stmt var = if ! return decl_stmt float = * decl_stmt Lucene.Net.Search.Explanation = new + call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() return public override public override return var public override public override decl_stmt var = new call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() var public override public override if ! return decl_stmt var = return && int public override public override decl_stmt int = call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() ^= << | uint >> += call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() ^= << | uint >> += return