Lucene.Net.Expressions System using System.Collections.Generic using Lucene.Net.Queries.Function using Lucene.Net.Queries.Function.ValueSources using Lucene.Net.Search using class Lucene.Net.Expressions.SimpleBindings super super Bindings decl IDictionary public public = public public = SortField var object public override public override decl_stmt object if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out throw new + + decl_stmt var = as if != return call var.GetValueSource() call var.GetValueSource() call var.GetValueSource() call var.GetValueSource() call var.GetValueSource() decl_stmt Lucene.Net.Search.SortField = switch case return new case return new case return new case return new case return default: throw new Expression public public foreach in if is decl_stmt Lucene.Net.Expressions.Expression = try call Lucene.Net.Expressions.Expression.GetValueSource(Bindings) call Lucene.Net.Expressions.Expression.GetValueSource(Bindings) call Lucene.Net.Expressions.Expression.GetValueSource(Bindings) call Lucene.Net.Expressions.Expression.GetValueSource(Bindings) call Lucene.Net.Expressions.Expression.GetValueSource(Bindings) catch throw new + +