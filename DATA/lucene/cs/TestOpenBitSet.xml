Lucene.Net.Util System using Lucene.Net.Attributes using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using System.Collections using Lucene.Net.Search.DocIdSetIterator class attribute Lucene.Net.Util.TestOpenBitSet super OpenBitSet public override public override decl_stmt Lucene.Net.Util.OpenBitSet = new for = != - = + call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) return int internal virtual internal virtual decl_stmt int = for = < ++ if != + + + if != long + + + internal virtual internal virtual for = < ++ if != + + + if != long + + + int internal virtual internal virtual decl_stmt int = - = - do = + = + >= int internal virtual internal virtual decl_stmt int = - = - do = + = int + >= int int internal virtual internal virtual decl_stmt int = + decl_stmt int = do -- while >= && ! -- = - >= int int internal virtual internal virtual decl_stmt int = + decl_stmt int = do -- while >= && ! -- = int - >= internal virtual internal virtual if == if == int OpenBitSetIterator internal virtual internal virtual decl_stmt int = - = - decl_stmt Lucene.Net.Util.OpenBitSetIterator = new do = + = : + == - : >= int OpenBitSetIterator internal virtual internal virtual decl_stmt int = - = - decl_stmt Lucene.Net.Util.OpenBitSetIterator = new do = + = : + == - : >= OpenBitSet OpenBitSet BitArray bool bool BitArray OpenBitSet int BitArray OpenBitSet int BitArray BitArray BitArray BitArray int BitArray OpenBitSet int int OpenBitSet OpenBitSet internal virtual internal virtual decl_stmt System.Collections.System.Collections.Generic.BitArray = decl_stmt Lucene.Net.Util.OpenBitSet = for = < ++ decl_stmt int = decl_stmt System.Collections.System.Collections.Generic.BitArray = new decl_stmt Lucene.Net.Util.OpenBitSet = new if > decl_stmt int = for = < ++ decl_stmt int = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) long = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) long = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() ! call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) decl_stmt bool = call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) decl_stmt bool = call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) != = call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() ! call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call BitArray.SafeGet() call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) long = call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) long = call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) call Lucene.Net.Util.OpenBitSet.FlipAndGet(int) long != = call Lucene.Net.Util.OpenBitSet.GetAndSet(int) call Lucene.Net.Util.OpenBitSet.GetAndSet(int) call Lucene.Net.Util.OpenBitSet.GetAndSet(int) call Lucene.Net.Util.OpenBitSet.GetAndSet(int) call Lucene.Net.Util.OpenBitSet.GetAndSet(int) == call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) if ! call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) call Lucene.Net.Util.OpenBitSet.Get(long) == decl_stmt int = + = + >> + decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() if > = call Lucene.Net.Util.OpenBitSet.Flip(long,long) call Lucene.Net.Util.OpenBitSet.Flip(long,long) call Lucene.Net.Util.OpenBitSet.Flip(long,long) call Lucene.Net.Util.OpenBitSet.Flip(long,long) call Lucene.Net.Util.OpenBitSet.Flip(long,long) decl_stmt Lucene.Net.Util.OpenBitSet = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call BitArray.Flip() call BitArray.Flip() call BitArray.Flip() call BitArray.Flip() call BitArray.Flip() = + = + >> + = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() if > = call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call BitArray.Clear() call BitArray.Clear() call BitArray.Clear() call BitArray.Clear() call BitArray.Clear() = + = + >> + = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() if > = call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call System.Collections.System.Collections.Generic.BitArray.Set(int,bool) call System.Collections.System.Collections.Generic.BitArray.Set(int,bool) call System.Collections.System.Collections.Generic.BitArray.Set(int,bool) call System.Collections.System.Collections.Generic.BitArray.Set(int,bool) call System.Collections.System.Collections.Generic.BitArray.Set(int,bool) if != = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() decl_stmt int = = = call OpenBitSet.BitWiseEquals() call OpenBitSet.BitWiseEquals() call OpenBitSet.BitWiseEquals() call OpenBitSet.BitWiseEquals() call OpenBitSet.BitWiseEquals() call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() = call BitArray.And_UnequalLengths() call BitArray.And_UnequalLengths() call BitArray.And_UnequalLengths() call BitArray.And_UnequalLengths() call BitArray.And_UnequalLengths() decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() = call BitArray.Or_UnequalLengths() call BitArray.Or_UnequalLengths() call BitArray.Or_UnequalLengths() call BitArray.Or_UnequalLengths() call BitArray.Or_UnequalLengths() decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() = call BitArray.Xor_UnequalLengths() call BitArray.Xor_UnequalLengths() call BitArray.Xor_UnequalLengths() call BitArray.Xor_UnequalLengths() call BitArray.Xor_UnequalLengths() decl_stmt System.Collections.System.Collections.Generic.BitArray = call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call System.Collections.System.Collections.Generic.BitArray.Clone() call Lucene.Net.Util.OpenBitSet.AndNot(OpenBitSet) call Lucene.Net.Util.OpenBitSet.AndNot(OpenBitSet) call Lucene.Net.Util.OpenBitSet.AndNot(OpenBitSet) call Lucene.Net.Util.OpenBitSet.AndNot(OpenBitSet) call Lucene.Net.Util.OpenBitSet.AndNot(OpenBitSet) decl_stmt Lucene.Net.Util.OpenBitSet = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.And(OpenBitSet) call Lucene.Net.Util.OpenBitSet.And(OpenBitSet) call Lucene.Net.Util.OpenBitSet.And(OpenBitSet) call Lucene.Net.Util.OpenBitSet.And(OpenBitSet) call Lucene.Net.Util.OpenBitSet.And(OpenBitSet) decl_stmt Lucene.Net.Util.OpenBitSet = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Or(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Or(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Or(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Or(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Or(OpenBitSet) decl_stmt Lucene.Net.Util.OpenBitSet = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Xor(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Xor(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Xor(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Xor(OpenBitSet) call Lucene.Net.Util.OpenBitSet.Xor(OpenBitSet) decl_stmt Lucene.Net.Util.OpenBitSet = call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call Lucene.Net.Util.OpenBitSet.Clone() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call BitArray.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() call Lucene.Net.Util.OpenBitSet.Cardinality() = = public virtual public virtual OpenBitSet decl int decl int OpenBitSet public public decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt int = for = < call decl int.size() call decl int.size() call decl int.size() call decl int.size() call decl int.size() ++ call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt int = for = < call decl int.size() call decl int.size() call decl int.size() call decl int.size() call decl int.size() ++ call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) OpenBitSet int OpenBitSet int int int Random int public public decl_stmt int = for = < ++ decl_stmt System.Random = new decl_stmt int = decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) - decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) from for = < / ++ decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) - call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) if < from || >= call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) from call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) OpenBitSet OpenBitSet public virtual public virtual decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt Lucene.Net.Util.OpenBitSet = new call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) call Lucene.Net.Util.OpenBitSet.Equals(object) new OpenBitSet OpenBitSet public virtual public virtual decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt Lucene.Net.Util.OpenBitSet = new call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() call Lucene.Net.Util.OpenBitSet.GetHashCode() OpenBitSet private private decl_stmt Lucene.Net.Util.OpenBitSet = new foreach in call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) return BitArray private private decl_stmt System.Collections.System.Collections.Generic.BitArray = new foreach in call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() return OpenBitSet BitArray private private decl_stmt Lucene.Net.Util.OpenBitSet = decl_stmt System.Collections.System.Collections.Generic.BitArray = public virtual public virtual new new new int int OpenBitSet public virtual public virtual decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt int = + call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) - call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) - call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) + call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacity(long) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) - call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) - decl_stmt int = + call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) = << - call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastClear(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastFlip(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.EnsureCapacityWords(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) call Lucene.Net.Util.OpenBitSet.FastSet(int) - call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) call Lucene.Net.Util.OpenBitSet.FastGet(long) -