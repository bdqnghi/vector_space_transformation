Lucene.Net.Analysis.Cn System using System.Collections.Generic using System.IO using System.Collections using System.Globalization using Lucene.Net.Analysis using Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Analysis.Cn.ChineseFilter super super TokenFilter ITermAttribute decl String CharArraySet int decl char public override public override while decl_stmt char = call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() decl_stmt int = call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() if ! call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) switch case case if > return break case return return