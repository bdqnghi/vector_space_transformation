Lucene.Net.Store Lucene.Net.Documents using NUnit.Framework using System using System.IO using Lucene.Net.Util.BytesRef Documents.Document Field Lucene.Net.Store.Directory.IndexInputSlicer Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Index.RandomIndexWriter Lucene.Net.Util.TestUtil class attribute Lucene.Net.Store.TestMultiMMap super super LuceneTestCase public override public override IndexInput IndexInput MMapDirectory IndexOutput IndexInput public virtual public virtual decl_stmt Lucene.Net.Store.MMapDirectory = new decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() try call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() catch try call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() catch try call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() catch call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInput IndexInput MMapDirectory IndexOutput IndexInput public virtual public virtual decl_stmt Lucene.Net.Store.MMapDirectory = new decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() try call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() catch call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInputSlicer IndexInput IndexInput IndexInput MMapDirectory IndexOutput IndexInput public virtual public virtual decl_stmt Lucene.Net.Store.MMapDirectory = new decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt IndexInputSlicer = call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() decl_stmt Lucene.Net.Store.IndexInput = call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() try call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() catch try call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() catch try call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() catch try call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() catch call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInput IndexInputSlicer MMapDirectory IndexOutput IndexInput public virtual public virtual decl_stmt Lucene.Net.Store.MMapDirectory = new decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.WriteInt() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt IndexInputSlicer = call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() try call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() catch call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInput MMapDirectory IndexOutput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInput IndexInputSlicer MMapDirectory IndexOutput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt IndexInputSlicer = call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) IndexInput var var MMapDirectory IndexOutput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() decl_stmt var = new << call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) decl_stmt var = new << call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() new new call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() << call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) var IndexInputSlicer var IndexInput MMapDirectory IndexOutput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() decl_stmt var = new << call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt IndexInputSlicer = call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() decl_stmt var = new << call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() new new call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() << call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) var var var IndexInput MMapDirectory IndexOutput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() decl_stmt var = new << + call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) decl_stmt var = new << + call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() new new for = < ++ for = < - ++ decl_stmt var = new call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() new new call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) var var IndexInputSlicer var IndexInput MMapDirectory IndexOutput IndexInput public virtual public virtual for = < ++ decl_stmt Lucene.Net.Store.MMapDirectory = new << decl_stmt IndexOutput = call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() call MMapDirectory.CreateOutput() decl_stmt var = new << + call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.MMapDirectory.OpenInput(string,IOContext) decl_stmt var = new << + call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() new new decl_stmt IndexInputSlicer = call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) call Lucene.Net.Store.MMapDirectory.CreateSlicer(string,IOContext) for = < ++ for = < - ++ decl_stmt var = new decl_stmt Lucene.Net.Store.IndexInput = call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInputSlicer.OpenSlice() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() new new call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call IndexInputSlicer.Dispose() call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) call Lucene.Net.Store.MMapDirectory.Dispose(bool) int public virtual public virtual decl_stmt int = for = < ++ Field int Field Document RandomIndexWriter int MMapDirectory IndexReader DirectoryInfo int MockDirectoryWrapper private private decl_stmt System.IO.DirectoryInfo = + decl_stmt Lucene.Net.Store.MMapDirectory = new if = decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int = for = < ++ = + = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt int = for = < ++ decl_stmt int = + call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose()