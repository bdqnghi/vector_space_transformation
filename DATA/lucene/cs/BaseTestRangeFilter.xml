Lucene.Net.Search System using System.Text using Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Index.RandomIndexWriter Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.BaseTestRangeFilter super super LuceneTestCase IndexReader IndexReader TestIndex bool TestIndex int bool int int string string StringBuilder public static public static decl_stmt System.Text.StringBuilder = new decl_stmt string = if < = = + + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt string = for = <= ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public static public static = = new = new = = public static public static call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() call TestIndex.Index() = = = = Field IndexReader Document RandomIndexWriter Field int int Field int private static private static decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Index.RandomIndexWriter = new new while decl_stmt int = decl_stmt int = for = <= ++ = decl_stmt int = : if < = = else if == ++ if < = = else if == ++ = = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == && == decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() return call RandomIndexWriter.DeleteAll() call RandomIndexWriter.DeleteAll() call RandomIndexWriter.DeleteAll() call RandomIndexWriter.DeleteAll() call RandomIndexWriter.DeleteAll() int string decl int int string string public virtual public virtual decl_stmt int = new - - - - - for = < - ++ decl_stmt int = decl_stmt int = + decl_stmt string = decl_stmt string = decl_stmt string = + + + + + + + + + < + + +