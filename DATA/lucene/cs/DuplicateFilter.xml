Lucene.Net.Search System using System.Collections.Generic using System.Linq using System.Text using Lucene.Net.Search using Lucene.Net.Index using Lucene.Net.Util using class Lucene.Net.Search.DuplicateFilter super super Filter int int int int int int String public override public override if == return else return Term int Term TermDocs TermEnum OpenBitSet private private decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt Lucene.Net.Index.Term = new decl_stmt Lucene.Net.Index.TermEnum = if != decl_stmt Lucene.Net.Index.Term = while != && == decl_stmt int = - decl_stmt Lucene.Net.Index.TermDocs = if call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() if == call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) else do = call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) if ! call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() break = return Term int Term TermDocs TermEnum OpenBitSet private private decl_stmt Lucene.Net.Util.OpenBitSet = new call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) decl_stmt Lucene.Net.Index.Term = new decl_stmt Lucene.Net.Index.TermEnum = if != decl_stmt Lucene.Net.Index.Term = while != && == if call TermEnum.DocFreq() call TermEnum.DocFreq() call TermEnum.DocFreq() call TermEnum.DocFreq() call TermEnum.DocFreq() > decl_stmt int = - decl_stmt Lucene.Net.Index.TermDocs = call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() if == call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() do = call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Util.OpenBitSet.Clear(int,int) call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() call Lucene.Net.Index.TermDocs.Next() if == call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) if ! call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() call TermEnum.Next() break = return return = return = DuplicateFilter public override public override if == return if == || != return decl_stmt Lucene.Net.Search.DuplicateFilter = return == && == && == || != && call System.String.Equals(String,StringComparison) call System.String.Equals(String,StringComparison) call System.String.Equals(String,StringComparison) call System.String.Equals(String,StringComparison) call System.String.Equals(String,StringComparison) int public override public override decl_stmt int = = * + = * + = * + call System.String.GetHashCode() call System.String.GetHashCode() call System.String.GetHashCode() call System.String.GetHashCode() call System.String.GetHashCode() return return =