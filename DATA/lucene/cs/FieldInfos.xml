Lucene.Net.Index System using System.Collections.Generic using System.Diagnostics using System.Linq using Lucene.Net.Index.FieldInfo.DocValuesType_e class Lucene.Net.Index.FieldInfos super bool decl Dictionary bool decl SortedDictionary bool decl ICollection bool bool bool bool public virtual public virtual return public virtual public virtual return public virtual public virtual return public virtual public virtual return public virtual public virtual return public virtual public virtual return public virtual public virtual return public virtual public virtual == return public virtual < public virtual < return call decl ICollection.GetEnumerator() call decl ICollection.GetEnumerator() call decl ICollection.GetEnumerator() call decl ICollection.GetEnumerator() call decl ICollection.GetEnumerator() return FieldInfo public virtual public virtual decl_stmt Lucene.Net.Index.FieldInfo call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out return decl Index public virtual public virtual if < throw new + decl_stmt Lucene.Net.Index.FieldInfo call decl SortedDictionary.TryGetValue() call decl SortedDictionary.TryGetValue() call decl SortedDictionary.TryGetValue() call decl SortedDictionary.TryGetValue() call decl SortedDictionary.TryGetValue() out return DocValuesType_e int int internal internal ? lock if != decl_stmt DocValuesType_e ? out if == = else if != && != throw new + + + + + + decl_stmt int ? out if == decl_stmt int ? = if != - && ! = else while ++ = = = return int string DocValuesType_e int internal internal ? ? lock decl_stmt string decl_stmt int ? decl_stmt DocValuesType_e ? out out out return && && == || == || == DocValuesType_e internal internal ? lock if ! return else decl_stmt DocValuesType_e ? out return == internal internal lock internal internal ? lock = public public foreach in public public return - FieldInfo bool int internal internal ? ? ? decl_stmt Lucene.Net.Index.FieldInfo = if == decl_stmt int = = new ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() = else call FieldInfo.Update() call FieldInfo.Update() call FieldInfo.Update() call FieldInfo.Update() call FieldInfo.Update() if != decl_stmt bool = ! call FieldInfo.HasDocValues() call FieldInfo.HasDocValues() call FieldInfo.HasDocValues() call FieldInfo.HasDocValues() call FieldInfo.HasDocValues() = if if ! call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() && != = return public public return FieldInfo public public decl_stmt Lucene.Net.Index.FieldInfo call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out return public public return new call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values() call decl Dictionary.Values()