org.apache.lucene.analysis.charfilter System using System.Collections.Generic using System.Text using org.apache.lucene.util.TestUtil class org.apache.lucene.analysis.charfilter.HTMLStripCharFilterTest super super BaseTokenStreamTestCase private static private static return new Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new protected internal override protected internal override return new string string public virtual public virtual decl_stmt string = + + decl_stmt string = + + decl Stream HTMLStripCharFilter StringBuilder decl System decl IO public virtual public virtual decl_stmt System.IO.Stream = decl_stmt HTMLStripCharFilter = new new decl_stmt System.Text.StringBuilder = new decl_stmt int = - while = call decl IO.read() call decl IO.read() call decl IO.read() call decl IO.read() call decl IO.read() != - call decl Stream.Append() call decl Stream.Append() call decl Stream.Append() call decl Stream.Append() call decl Stream.Append() char decl_stmt string = call decl Stream.ToString() call decl Stream.ToString() call decl Stream.ToString() call decl Stream.ToString() call decl Stream.ToString() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() == - call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() == - && call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() call StringBuilder.IndexOf() == - call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() call StringBuilder.Trim() HTMLStripCharFilter string decl Stream decl System decl IO public virtual public virtual decl_stmt System.IO.Stream = decl_stmt HTMLStripCharFilter = new new decl_stmt string = decl_stmt System.Text.StringBuilder = new decl_stmt int = while = call decl IO.read() call decl IO.read() call decl IO.read() call decl IO.read() call decl IO.read() != - call HTMLStripCharFilter.Append() call HTMLStripCharFilter.Append() call HTMLStripCharFilter.Append() call HTMLStripCharFilter.Append() call HTMLStripCharFilter.Append() char + call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() + + + call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() call HTMLStripCharFilter.ToString() public virtual public virtual new <> string string public virtual public virtual decl_stmt string = decl_stmt string = new <> string string public virtual public virtual decl_stmt string = decl_stmt string = new <> decl ISet StringBuilder int string Reader string public virtual public virtual decl_stmt string = decl_stmt System.Collections.Generic.ISet < = new < call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() decl_stmt Reader = new new decl_stmt System.Text.StringBuilder = new decl_stmt int = while = call Reader.read() call Reader.read() call Reader.read() call Reader.read() call Reader.read() != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) char decl_stmt string = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) + call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() == + call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() == + call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() == call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() == - decl string public virtual public virtual decl_stmt string = new for = < += + StringBuilder string Reader public virtual public virtual decl_stmt System.Text.StringBuilder = new + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + decl_stmt Reader = new new new call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) * + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt string = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int private private decl_stmt int = / for = < ++ string StringBuilder string public virtual public virtual decl_stmt string = decl_stmt string = = = decl_stmt System.Text.StringBuilder = new = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int int int int HTMLStripCharFilter public virtual public virtual decl_stmt HTMLStripCharFilter = new new new decl_stmt int = decl_stmt int = decl_stmt int = - while = call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() != - decl_stmt int = call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() if == = + ++ public virtual public virtual int int int int HTMLStripCharFilter internal static internal static decl_stmt int = decl_stmt HTMLStripCharFilter = new new new decl_stmt int = decl_stmt int = while = call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() != - decl_stmt int = call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() + + + + + <= ++ public virtual public virtual int public virtual public virtual decl_stmt int = * int public virtual public virtual decl_stmt int = * public virtual public virtual string string public virtual public virtual decl_stmt string = + + decl_stmt string = = = string string public virtual public virtual decl_stmt string = decl_stmt string = = = string decl ISet string public virtual public virtual decl_stmt string = decl_stmt string = decl_stmt System.Collections.Generic.ISet < = new < string string public virtual public virtual decl_stmt string = + + + + decl_stmt string = string decl ISet string public virtual public virtual decl_stmt string = decl_stmt string = decl_stmt System.Collections.Generic.ISet < = new < decl string public virtual public virtual decl_stmt string = new for = < += + string decl ISet string public virtual public virtual decl_stmt string = decl_stmt string = decl_stmt System.Collections.Generic.ISet < = new < string string public virtual public virtual decl_stmt string = decl_stmt string = string int decl string string string string public virtual public virtual decl_stmt int = decl_stmt string = decl_stmt string = + + decl_stmt string = decl_stmt string = + + decl_stmt string = new for = < += + public virtual public virtual string string public virtual public virtual decl_stmt string = decl_stmt string = string string public virtual public virtual decl_stmt string = decl_stmt string = string string public virtual public virtual decl_stmt string = decl_stmt string = string int public virtual public virtual decl_stmt int = decl_stmt string = int StringBuilder int Reader int int int public virtual public virtual decl_stmt System.Text.StringBuilder = new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = switch case for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) break case for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) break default: for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) break decl_stmt Reader = new new call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) while call Reader.read() call Reader.read() call Reader.read() call Reader.read() call Reader.read() != - Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new new new new new new new new new new new new new new new new new new new new public static public static < new StringBuilder int HTMLStripCharFilter public static public static < decl_stmt HTMLStripCharFilter if == = new else = new decl_stmt int = decl_stmt System.Text.StringBuilder = new try while = call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() call HTMLStripCharFilter.read() != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) char catch if call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) throw throw new + call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) + + + + + call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) + + + call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)