Lucene.Net.Util Lucene.Net.Documents using Lucene.Net.Support using System using System.IO using System.IO.Compression using System.Text using Lucene.Net.Randomized.Generators using System.Threading using Documents.Document Field FieldType SortedDocValuesField StringField TextField class Lucene.Net.Util.LineFileDocs super super IDisposable bool decl ThreadLocal char TextReader string int AtomicInteger public public lock if != call System.IO.TextReader.Close() call System.IO.TextReader.Close() call System.IO.TextReader.Close() call System.IO.TextReader.Close() call System.IO.TextReader.Close() = private private if == || <= return return & / bool MemoryStream decl byte Stream long var FileStream int FileInfo private private lock decl_stmt System.IO.Stream decl_stmt bool = = decl_stmt long = = try = new catch = decl_stmt System.IO.FileInfo = new = if call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() = new else = decl_stmt FileStream = new if + + = = new call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() = if ! = if call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() using = new decl_stmt var = new call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() = = * if = if + + = if > decl_stmt int decl_stmt byte = new sizeof int do call System.IO.Stream.Read(byte,int,int) call System.IO.Stream.Read(byte,int,int) call System.IO.Stream.Read(byte,int,int) call System.IO.Stream.Read(byte,int,int) call System.IO.Stream.Read(byte,int,int) sizeof int = >= && != && != decl_stmt System.IO.MemoryStream = new call System.IO.Stream.CopyTo(Stream,int) call System.IO.Stream.CopyTo(Stream,int) call System.IO.Stream.CopyTo(Stream,int) call System.IO.Stream.CopyTo(Stream,int) call System.IO.Stream.CopyTo(Stream,int) = new if > call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() public virtual public virtual lock call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) DocState string string int int public virtual public virtual decl_stmt string lock = call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() if == if = call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() call System.IO.TextReader.ReadLine() decl_stmt DocState = if == = new = decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() if == - throw new + + decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() + if == - throw new + + = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + - + decl_stmt string = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() = if != = new = = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + - + = call Lucene.Net.Support.AtomicInteger.GetAndIncrement() call Lucene.Net.Support.AtomicInteger.GetAndIncrement() call Lucene.Net.Support.AtomicInteger.GetAndIncrement() call Lucene.Net.Support.AtomicInteger.GetAndIncrement() call Lucene.Net.Support.AtomicInteger.GetAndIncrement() return