Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Support using Lucene.Net.Store.IndexOutput Lucene.Net.Search.Similarity class Lucene.Net.Index.NormsWriter super super InvertedDocEndConsumer FieldInfos byte public override public override return new public override public override internal internal < internal override internal override = decl IList decl IDictionary decl System int FieldInfo int decl int int int var decl String IndexOutput decl IList decl IEnumerator int int decl NormsWriterPerField NormsWriterPerField int public override public override < < decl_stmt SpellChecker.Net.Search.Spell.IDictionary < < = new < < foreach in decl_stmt System.Collections.Generic.ICollection < = decl_stmt System.Collections.Generic.IEnumerator < = call int.GetEnumerator() call int.GetEnumerator() call int.GetEnumerator() call int.GetEnumerator() call int.GetEnumerator() decl_stmt var = new < while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt Lucene.Net.Index.NormsWriterPerField = if > decl_stmt System.Collections.Generic.IList < = if == = new < = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() foreach in call int.Remove() call int.Remove() call int.Remove() call int.Remove() call int.Remove() decl_stmt System.String = + + decl_stmt IndexOutput = try call decl String.WriteBytes() call decl String.WriteBytes() call decl String.WriteBytes() call decl String.WriteBytes() call decl String.WriteBytes() decl_stmt int = call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) decl_stmt System.Collections.Generic.IList < = decl_stmt int = if != decl_stmt int = ++ decl_stmt Lucene.Net.Index.NormsWriterPerField = new decl_stmt int = new for = < ++ = decl_stmt int = while > < + + + decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = if < = = < for < ++ call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() ++ ++ if == if != - = - = - -- for < ++ call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() else if && ! ++ for < ++ call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() call decl String.WriteByte() + * == + + * + + finally call decl String.Close() call decl String.Close() call decl String.Close() call decl String.Close() call decl String.Close() internal override internal override