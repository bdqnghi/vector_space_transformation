Lucene.Net.Codecs.Lucene40 System using System.Collections.Generic using System.Diagnostics using System.Linq using Lucene.Net.Util.BytesRef Lucene.Net.Store.CompoundFileDirectory Lucene.Net.Store.Directory Lucene.Net.Index.FieldInfo Lucene.Net.Index.IndexFileNames Lucene.Net.Store.IndexOutput Lucene.Net.Util.IOUtils Lucene.Net.Codecs.Lucene40.Lucene40FieldInfosReader.LegacyDocValuesType Lucene.Net.Util.Packed.PackedInts Lucene.Net.Index.SegmentWriteState class Lucene.Net.Codecs.Lucene40.Lucene40DocValuesWriter super super DocValuesConsumer SegmentWriteState string string Directory bool long string long long IndexOutput public override public override < ? decl_stmt long = decl_stmt long = foreach ? in decl_stmt long = == : long = = decl_stmt string = + + decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() decl_stmt bool = try if >= && <= && - > else if >= && <= && - > else if >= && <= && - > else = finally if else private private < ? foreach ? in == byte : byte private private < ? foreach ? in == short : short private private < ? foreach ? in == : int decl PackedInts decl Writer long private private < ? decl_stmt long = - if < byte foreach ? in == : else byte - decl_stmt Writer = foreach ? in decl_stmt long = == : long call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() - call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() IndexOutput var string bool int string int bool string bool decl HashSet int var IndexOutput public override public override < decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = decl_stmt int = decl_stmt var = for = < ++ decl_stmt var = if == = = new if > throw new + + + = = if != if call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() if > = decl_stmt int = decl_stmt bool = == decl_stmt bool = != && * < if decl_stmt bool = decl_stmt IndexOutput = decl_stmt IndexOutput = decl_stmt string = + + decl_stmt string = + + try = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() if else = finally if else else if decl_stmt string = + + decl_stmt IndexOutput = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() decl_stmt bool = try = finally if else else decl_stmt bool = decl_stmt IndexOutput = decl_stmt IndexOutput = decl_stmt string = + + decl_stmt string = + + try = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() = finally if else private private < foreach in if != long decl Writer long decl PackedInts int private private < decl_stmt long = foreach in if != decl_stmt long = - decl_stmt int = != decl_stmt Writer = + decl_stmt long = foreach in call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() if != += == call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() decl Writer decl SortedSet int int decl PackedInts BytesRef private private < decl_stmt System.Collections.Generic.SortedSet < = new < foreach in call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() == new : foreach in decl_stmt int = > decl_stmt int = decl_stmt Writer = - decl_stmt Lucene.Net.Util.BytesRef foreach in = if == = new decl_stmt int = call decl SortedSet.Count() call decl SortedSet.Count() call decl SortedSet.Count() call decl SortedSet.Count() call decl SortedSet.Count() < call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() decl SortedSet int long long decl Dictionary decl PackedInts long private private < decl_stmt System.Collections.Generic.SortedSet < = new < foreach in call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() == new : decl_stmt long = decl_stmt long = decl_stmt org.apache.lucene.analysis.hunspell.Dictionary < = new < foreach in = - = decl_stmt long = - decl_stmt int = decl_stmt Writer = foreach in call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() == new : call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() private static private static >= && <= if < byte sbyte else byte unchecked | >> byte unchecked & bool IndexOutput string bool int string int IndexOutput public override public override < < ? decl_stmt int = decl_stmt int = foreach in = = decl_stmt bool = foreach in if long == - = break decl_stmt bool = decl_stmt IndexOutput = decl_stmt IndexOutput = decl_stmt string = + + decl_stmt string = + + try = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() if == && ! else if ! else if == else = finally if else int decl PackedInts int private private < < ? decl_stmt int = foreach in ++ decl_stmt int = > decl_stmt Writer = - foreach in call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() long call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() long long decl Writer int decl PackedInts long int private private < < ? decl_stmt long = decl_stmt int = foreach in ++ decl_stmt long = - != decl_stmt Writer = + decl_stmt long = foreach in call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() += == call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() decl_stmt int = > decl_stmt Writer = - foreach in call int.Add() call int.Add() call int.Add() call int.Add() call int.Add() long call int.Finish() call int.Finish() call int.Finish() call int.Finish() call int.Finish() public override public override < < ? < ? throw new protected override protected override call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()