Lucene.Net.Search Lucene.Net.Documents using Lucene.Net.Support using System using System.Collections.Generic using System.Linq using Lucene.Net.Index using Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Util.FixedBitSet Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase NumericDocValuesField Lucene.Net.Search.BooleanClause.Occur Lucene.Net.Index.RandomIndexWriter SortedDocValuesField StoredField Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.TestSortRandom super super LuceneTestCase int Random decl HashSet int RandomIndexWriter IndexSearcher int var Sort BytesRef bool int decl IList BytesRef int bool bool TopFieldDocs bool RandomFilter int Document string IndexReader FieldDoc SortField Directory BooleanQuery public virtual public virtual decl_stmt System.Random = new decl_stmt int = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt bool = call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = if + + + + + decl_stmt int = decl_stmt System.Collections.Generic.IList < = new < while < decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Util.BytesRef if != decl_stmt string if call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() = else = if ! if call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() continue call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() if + + + = new if call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new else call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else = if + + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() if call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new else call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) ++ if call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) == call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() call RandomIndexWriter.Reader() decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() if + decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt int = for = < ++ decl_stmt bool = call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() decl_stmt TopFieldDocs decl_stmt Lucene.Net.Search.SortField decl_stmt bool decl_stmt bool if && call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() = new = && = else = new = = if = decl_stmt Lucene.Net.Search.Sort if call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() = new else = new decl_stmt int = + decl_stmt RandomFilter = new float call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) if == decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new = = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() else if == = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() else = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() if + + + + + + + + + + + decl_stmt var = call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call RandomFilter.MatchValues() call var.Sort() call var.Sort() call var.Sort() call var.Sort() call var.Sort() new if call var.Reverse() call var.Reverse() call var.Reverse() call var.Reverse() call var.Reverse() if for = < ++ decl_stmt Lucene.Net.Util.BytesRef = if == && == = new + + + == : call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() if == - break if for = < ++ decl_stmt Lucene.Net.Search.FieldDoc = decl_stmt Lucene.Net.Util.BytesRef = + + + == : call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() + + call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) for = < ++ decl_stmt Lucene.Net.Search.FieldDoc = decl_stmt Lucene.Net.Util.BytesRef = if == && == = new decl_stmt Lucene.Net.Util.BytesRef = if == && == = new + + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public virtual public virtual if == if == return if return else return - else if == if return - else return else return decl FieldCache decl Ints int public override public override decl_stmt int = decl_stmt Ints = decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = new for = < ++ if float <= && == || call decl Ints.Set() call decl Ints.Set() call decl Ints.Set() call decl Ints.Set() call decl Ints.Set() call decl FieldCache.Get() call decl FieldCache.Get() call decl FieldCache.Get() call decl FieldCache.Get() call decl FieldCache.Get() return