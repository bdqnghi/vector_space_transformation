Lucene.Net.Codecs.Sep System.Diagnostics using Index using Store using Util using class Lucene.Net.Codecs.Sep.SepPostingsReader super super PostingsReaderBase IndexInput int IntIndexInput IndexInput IntIndexInput IntIndexInput int int public override public override = = = protected override protected override if return var public override public override decl_stmt var = new = call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() if != = call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() if != = call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() call IntIndexInput.Index() return var public override public override decl_stmt var = call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() if != call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() if == call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() if if = else += if >= if = else += else if = SepDocsEnum var public override public override decl_stmt var = decl_stmt SepDocsEnum if ! is = new else = if != = new return call SepDocsEnum.Init() call SepDocsEnum.Init() call SepDocsEnum.Init() call SepDocsEnum.Init() call SepDocsEnum.Init() var SepDocsAndPositionsEnum public override public override == decl_stmt var = decl_stmt SepDocsAndPositionsEnum if ! is = new else = if != = new return call SepDocsAndPositionsEnum.Init() call SepDocsAndPositionsEnum.Init() call SepDocsAndPositionsEnum.Init() call SepDocsAndPositionsEnum.Init() call SepDocsAndPositionsEnum.Init() public override public override return public override public override var public override public override decl_stmt var = new call var.CopyFrom() call var.CopyFrom() call var.CopyFrom() call var.CopyFrom() call var.CopyFrom() return var public override public override decl_stmt var = if == = call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() call var.DOC_INDEX() else if != if == = call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() call var.FREQ_INDEX() else else = if != if == = call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() call var.POS_INDEX() else else = = = public override public override return + + + + + + + + + + internal virtual internal virtual = if = = == = if ! = = = = - = = = return public override public override while if == return = ++ += if ! = if == || break return = public override public override return public override public override return int public override public override if - >= && >= if == = new if ! = = decl_stmt int = if > if ! = = = do if == return > return public override public override return internal virtual internal virtual = = = = = = = = = - = = = = return public override public override while if == return = ++ += = += if == || break = return = public override public override return public override public override return int public override public override if - >= && >= if == = new if ! = = decl_stmt int = if > = = = = = = = = = do if == return > return int public override public override if call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = decl_stmt int while > = if && & != = >= -- = += = if if & != = >= += uint >> += = > else += -- >= return public override public override return - public override public override return - if ! return if == return >= if > call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + - if == = new = new else if < call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() = = return public override public override return