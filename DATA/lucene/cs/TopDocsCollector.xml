Lucene.Net.Search System using Lucene.Net.Util using class super super Collector where TopDocs decl PriorityQueue int protected internal virtual protected internal virtual for = - >= -- = call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() protected internal virtual protected internal virtual return == : new return = protected internal virtual protected internal virtual return < call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() : call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() public virtual public virtual return public virtual public virtual return decl ScoreDoc int public virtual public virtual decl_stmt int = if < || >= || <= return = - decl_stmt Lucene.Net.Search.ScoreDoc = new for = call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() call decl PriorityQueue.Size() - - > -- call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() return