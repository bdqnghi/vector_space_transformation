Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Documents using NUnit.Framework using System.IO using Lucene.Net.Store.BaseDirectory Lucene.Net.Store.BufferedIndexInput Lucene.Net.Store.Directory Documents.Document DocumentStoredFieldVisitor Field Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Store.IOContext Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestFieldsReader super super LuceneTestCase Document Directory decl FieldInfos IndexWriter IndexWriterConfig public static public static = new = new call decl FieldInfos.Builder() call decl FieldInfos.Builder() call decl FieldInfos.Builder() call decl FieldInfos.Builder() call decl FieldInfos.Builder() foreach in call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() = decl_stmt Lucene.Net.Index.IndexWriterConfig = new = decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = public static public static call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() = = = Document DocumentStoredFieldVisitor Field decl IList IndexReader public virtual public virtual != != decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) != call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) != decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) != call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() == = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) != call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() == = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) != call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() call Lucene.Net.Documents.Field.FieldType() == decl_stmt Lucene.Net.Documents.DocumentStoredFieldVisitor = new call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) decl_stmt System.Collections.Generic.IList < = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() public override public override return new public override public override return public override public override return public override public override public override public override return public override public override return public override public override < public override public override internal virtual internal virtual if && ++ == throw new protected override protected override protected override protected override public override public override return public override public override FaultyIndexInput public override public override decl_stmt FaultyIndexInput = new try call FaultyIndexInput.Seek() call FaultyIndexInput.Seek() call FaultyIndexInput.Seek() call FaultyIndexInput.Seek() call FaultyIndexInput.Seek() catch throw new return IndexWriterConfig bool DirectoryInfo IndexWriter IndexReader Directory public virtual public virtual decl_stmt System.IO.DirectoryInfo = try decl_stmt Lucene.Net.Store.Directory = new decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.IndexReader = = decl_stmt bool = for = < ++ try call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) catch = try call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) catch = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() finally