Lucene.Net.Codecs.Lucene3x System using System.Collections.Generic using System.Diagnostics using System.Linq using Lucene.Net.Support using Lucene.Net.Index.BinaryDocValues Lucene.Net.Util.Bits Lucene.Net.Store.Directory Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.IndexFileNames Lucene.Net.Store.IndexInput Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Index.NumericDocValues Lucene.Net.Util.RamUsageEstimator Lucene.Net.Index.SegmentInfo Lucene.Net.Index.SortedDocValues Lucene.Net.Index.SortedSetDocValues Lucene.Net.Util.StringHelper class attribute Lucene.Net.Codecs.Lucene3x.Lucene3xNormsProducer super super DocValuesProducer decl sbyte decl ISet int decl IDictionary string string AtomicLong IndexInput protected override protected override if try call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() finally call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl ISet.Clear() call decl ISet.Clear() call decl ISet.Clear() call decl ISet.Clear() call decl ISet.Clear() long private static private static if decl_stmt long = + return + else return string private static private static decl_stmt string = + if == return else != return var lock if == decl_stmt var = new lock if != = new return public override public override return var public override public override decl_stmt var = != return public override public override throw new public override public override throw new public override public override throw new public override public override throw new public override public override return call Lucene.Net.Support.AtomicLong.Get() call Lucene.Net.Support.AtomicLong.Get() call Lucene.Net.Support.AtomicLong.Get() call Lucene.Net.Support.AtomicLong.Get() call Lucene.Net.Support.AtomicLong.Get() public override public override