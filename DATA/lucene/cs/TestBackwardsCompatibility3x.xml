Lucene.Net.Index System using System.Diagnostics using System.Collections.Generic using System.IO using Lucene.Net.Util using System.IO.FileInfo Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Document.BinaryDocValuesField Lucene.Net.Document.Document Lucene.Net.Document.DoubleDocValuesField Lucene.Net.Document.Field Lucene.Net.Document.FieldType Lucene.Net.Document.FloatDocValuesField Lucene.Net.Document.IntField Lucene.Net.Document.LongField Lucene.Net.Document.NumericDocValuesField Lucene.Net.Document.SortedDocValuesField Lucene.Net.Document.StringField Lucene.Net.Document.TextField Lucene.Net.Index.FieldInfo.IndexOptions_e Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Search.DocIdSetIterator Lucene.Net.Search.FieldCache_Fields Lucene.Net.Search.IndexSearcher Lucene.Net.Search.NumericRangeQuery Lucene.Net.Search.PhraseQuery Lucene.Net.Search.ScoreDoc Lucene.Net.Search.TermQuery Lucene.Net.Search.TopDocs Lucene.Net.Store.BaseDirectoryWrapper Lucene.Net.Store.Directory Lucene.Net.Store.RAMDirectory Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Util.Constants Lucene.Net.Util.StringHelper Lucene.Net.Util.LuceneTestCase.SuppressCodecs Lucene.Net.Util.LuceneTestCase Lucene.Net.Util.TestUtil Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Support using class attribute Lucene.Net.Index.TestBackwardsCompatibility3x super super LuceneTestCase string string decl string decl IDictionary decl string decl string FileInfo decl IList DirectoryInfo public static public static decl_stmt System.Collections.Generic.IList < = new < + call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() = new < foreach in decl_stmt System.IO.DirectoryInfo = decl_stmt System.IO.FileInfo = new typeof + + = public static public static foreach in = IndexWriter DirectoryInfo decl CheckIndex MemoryStream CheckIndex IndexReader BaseDirectoryWrapper public virtual public virtual for = < ++ if + decl_stmt System.IO.DirectoryInfo = + + decl_stmt Lucene.Net.Store.BaseDirectoryWrapper = = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Index.IndexWriter = try = + catch finally if != call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = try = new new + catch if != - + finally if != call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = decl_stmt System.IO.MemoryStream = new decl_stmt Lucene.Net.Index.CheckIndex = new = new call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() decl_stmt System.IdentityModel.Protocols.WSTrust.Status = call Lucene.Net.Index.CheckIndex.DoCheckIndex() call Lucene.Net.Index.CheckIndex.DoCheckIndex() call Lucene.Net.Index.CheckIndex.DoCheckIndex() call Lucene.Net.Index.CheckIndex.DoCheckIndex() call Lucene.Net.Index.CheckIndex.DoCheckIndex() call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() call MemoryStream.ToString() typeof call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() IndexWriter Directory public virtual public virtual foreach in if + decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory IndexWriter public virtual public virtual foreach in if + decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory IndexWriter IndexReader public virtual public virtual foreach in decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public virtual public virtual foreach in Directory public virtual public virtual foreach in decl_stmt Lucene.Net.Store.Directory = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory public virtual public virtual foreach in if + decl_stmt Lucene.Net.Store.Directory = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexReader IndexWriter Directory public virtual public virtual foreach in if + decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexReader = call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = new new for = < ++ call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new + = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() call IndexReader.NumDocs() + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int private private decl_stmt int = for = < ++ SortedDocValues BytesRef NumericDocValues bool NumericDocValues BinaryDocValues int bool BinaryDocValues int IndexReader NumericDocValues NumericDocValues NumericDocValues BytesRef BinaryDocValues Terms NumericDocValues IndexSearcher decl ScoreDoc SortedDocValues Document Bits decl IList IndexableField decl sbyte Fields BinaryDocValues Document NumericDocValues public virtual public virtual decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt bool = != decl_stmt Lucene.Net.Spatial.Util.Bits = for = < ++ if call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) decl_stmt System.Collections.Generic.IList < = decl_stmt bool = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) == if decl_stmt int = : decl_stmt Lucene.Net.Index.IndexableField = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) + = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) = call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) decl_stmt Lucene.Net.Index.Fields = call IndexReader.GetTermVectors() call IndexReader.GetTermVectors() call IndexReader.GetTermVectors() call IndexReader.GetTermVectors() call IndexReader.GetTermVectors() + decl_stmt Lucene.Net.Index.Terms = call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() + + + else if decl_stmt NumericDocValues = decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = for = < ++ decl_stmt int = call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() decl_stmt sbyte = new uint >> uint >> uint >> sbyte decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() double call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() float int call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt Lucene.Net.Documents.Document = call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) if = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() int int private private decl_stmt int = decl_stmt int = return - IndexSearcher decl ScoreDoc Document IndexWriter IndexReader int public virtual public virtual decl_stmt Lucene.Net.Index.IndexWriter = new new for = < ++ + decl_stmt int if < = else = call Lucene.Net.Index.IndexWriter.NumDocs() call Lucene.Net.Index.IndexWriter.NumDocs() call Lucene.Net.Index.IndexWriter.NumDocs() call Lucene.Net.Index.IndexWriter.NumDocs() call Lucene.Net.Index.IndexWriter.NumDocs() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt Lucene.Net.Documents.Document = call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = new new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() IndexSearcher decl ScoreDoc IndexWriter Document DirectoryReader public virtual public virtual decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = = new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() DirectoryInfo IndexWriter LogByteSizeMergePolicy IndexWriterConfig Term Directory public virtual public virtual decl_stmt System.IO.DirectoryInfo = new decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.LogByteSizeMergePolicy = new = : = decl_stmt Lucene.Net.Index.IndexWriterConfig = new new decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ call IndexWriter.MaxDoc() call IndexWriter.MaxDoc() call IndexWriter.MaxDoc() call IndexWriter.MaxDoc() call IndexWriter.MaxDoc() if call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) if ! = new = : = new new = new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) : decl_stmt Lucene.Net.Index.Term = new call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() return FieldType Document decl sbyte FieldType BytesRef FieldType private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new decl_stmt Lucene.Net.Documents.FieldType = new = = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new long call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new sbyte decl_stmt sbyte = new uint >> uint >> uint >> sbyte decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new double call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new float call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new short decl_stmt Lucene.Net.Documents.FieldType = new = = = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new decl_stmt Lucene.Net.Documents.FieldType = new = = = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new Document FieldType FieldType Field private private decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.FieldType = new = decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Documents.FieldType = new = = = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) int private private decl_stmt int = while != ++ return BytesRef IndexReader TermsEnum BytesRef Directory public virtual public virtual foreach in decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Index.TermsEnum = decl_stmt Lucene.Net.Util.BytesRef = call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() decl_stmt Lucene.Net.Util.BytesRef = new call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) new call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) new call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() Directory decl IComparer string RandomIndexWriter DirectoryReader SegmentReader string DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) new call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.SegmentReader = call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() decl_stmt string = call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl_stmt System.Collections.Generic.IComparer < = foreach in decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.DirectoryReader = foreach in call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() call DirectoryReader.Leaves() = decl_stmt string = == || call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() call decl IComparer.Compare() < call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() IndexSearcher decl ScoreDoc Document decl Ints decl ScoreDoc decl FieldCache_Fields IndexReader decl FieldCache_Fields int Directory public virtual public virtual foreach in decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = new for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Ints = decl_stmt int = call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() call IndexSearcher.IndexReader() for = < ++ decl_stmt int = call decl FieldCache_Fields.Get() call decl FieldCache_Fields.Get() call decl FieldCache_Fields.Get() call decl FieldCache_Fields.Get() call decl FieldCache_Fields.Get() >= && < decl_stmt Longs = for = < ++ decl_stmt long = call int.Get() call int.Get() call int.Get() call int.Get() call int.Get() >= && < call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() SegmentInfos private private decl_stmt Lucene.Net.Index.SegmentInfos = new call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) if + foreach in return call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() SegmentInfos private private decl_stmt Lucene.Net.Index.SegmentInfos = new call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) return call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() call Lucene.Net.Index.SegmentInfos.Size() decl IList Directory public virtual public virtual decl_stmt System.Collections.Generic.IList < = new < + call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() foreach in if + decl_stmt Lucene.Net.Store.Directory = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() RAMDirectory IndexWriterConfig int IndexWriterConfig int MergePolicy IndexWriter IndexWriter MergePolicy int Directory public virtual public virtual foreach in if + decl_stmt Lucene.Net.Store.Directory = decl_stmt int = decl_stmt Lucene.Net.Store.RAMDirectory = new for = < ++ decl_stmt Lucene.Net.Index.MergePolicy = : decl_stmt Lucene.Net.Index.IndexWriterConfig = new new decl_stmt Lucene.Net.Index.IndexWriter = new for = < * ++ ++ call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.MergePolicy = : decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt int = new decl_stmt int = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryInfo Directory public virtual public virtual decl_stmt System.IO.DirectoryInfo = decl_stmt Lucene.Net.Store.Directory = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() PhraseQuery DirectoryInfo IndexSearcher AtomicReader DocsAndPositionsEnum TopDocs DirectoryReader Directory public virtual public virtual decl_stmt System.IO.DirectoryInfo = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt Lucene.Net.Search.PhraseQuery = new call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) new call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt DocsAndPositionsEnum = call Lucene.Net.Index.AtomicReader.TermPositionsEnum(Term) call Lucene.Net.Index.AtomicReader.TermPositionsEnum(Term) call Lucene.Net.Index.AtomicReader.TermPositionsEnum(Term) call Lucene.Net.Index.AtomicReader.TermPositionsEnum(Term) call Lucene.Net.Index.AtomicReader.TermPositionsEnum(Term) new != call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()