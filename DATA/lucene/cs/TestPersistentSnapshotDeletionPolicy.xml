Lucene.Net.Index System.Diagnostics using NUnit.Framework using System using System.IO using Lucene.Net.Store.Directory Documents.Document Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Index.IndexWriterConfig.OpenMode_e class attribute Lucene.Net.Index.TestPersistentSnapshotDeletionPolicy super super TestSnapshotDeletionPolicy public override public override public override public override private private return new new int IndexWriter PersistentSnapshotDeletionPolicy int MockDirectoryWrapper public virtual public virtual decl_stmt int = decl_stmt Lucene.Net.Store.MockDirectoryWrapper = decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Index.PersistentSnapshotDeletionPolicy = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt int = foreach in call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() if ++ call MockDirectoryWrapper.Crash() call MockDirectoryWrapper.Crash() call MockDirectoryWrapper.Crash() call MockDirectoryWrapper.Crash() call MockDirectoryWrapper.Crash() call MockDirectoryWrapper.ClearCrash() call MockDirectoryWrapper.ClearCrash() call MockDirectoryWrapper.ClearCrash() call MockDirectoryWrapper.ClearCrash() call MockDirectoryWrapper.ClearCrash() = new new = new = call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() + + + call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = try new new catch call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() PersistentSnapshotDeletionPolicy IndexWriter MockDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.MockDirectoryWrapper = call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) new decl_stmt Lucene.Net.Index.IndexWriter = new new new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt Lucene.Net.Index.PersistentSnapshotDeletionPolicy = try call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Snapshot() catch if else throw call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() var var public override public override decl_stmt var = new foreach in call var.GetFrames() call var.GetFrames() call var.GetFrames() call var.GetFrames() call var.GetFrames() decl_stmt var = if throw new PersistentSnapshotDeletionPolicy IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Index.PersistentSnapshotDeletionPolicy = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() PersistentSnapshotDeletionPolicy IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Index.PersistentSnapshotDeletionPolicy = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) call Lucene.Net.Index.PersistentSnapshotDeletionPolicy.Release(long) = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()