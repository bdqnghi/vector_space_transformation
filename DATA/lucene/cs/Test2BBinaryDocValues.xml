Lucene.Net.Index System using Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Store.BaseDirectoryWrapper BinaryDocValuesField Lucene.Net.Store.ByteArrayDataInput Lucene.Net.Store.ByteArrayDataOutput Lucene.Net.Util.BytesRef Documents.Document Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper class attribute attribute Lucene.Net.Index.Test2BBinaryDocValues super super LuceneTestCase int BinaryDocValuesField AtomicReader var DirectoryReader BytesRef IndexWriter Document BinaryDocValues BytesRef BaseDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.BaseDirectoryWrapper = if is = decl_stmt Lucene.Net.Index.IndexWriter = new new new new decl_stmt Lucene.Net.Documents.Document = new decl_stmt var = new decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt BinaryDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = >> = >> = >> = byte call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if == + call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt int = foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ = >> = >> = >> = byte call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() int Document AtomicReader var ByteArrayDataOutput DirectoryReader BytesRef IndexWriter BinaryDocValuesField BinaryDocValues ByteArrayDataInput BytesRef BaseDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.BaseDirectoryWrapper = if is = decl_stmt Lucene.Net.Index.IndexWriter = new new new new decl_stmt Lucene.Net.Documents.Document = new decl_stmt var = new decl_stmt Lucene.Net.Store.ByteArrayDataOutput = new decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt BinaryDocValuesField = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ call Lucene.Net.Store.ByteArrayDataOutput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataOutput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataOutput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataOutput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataOutput.Reset(byte,int,int) call ByteArrayDataOutput.WriteVInt() call ByteArrayDataOutput.WriteVInt() call ByteArrayDataOutput.WriteVInt() call ByteArrayDataOutput.WriteVInt() call ByteArrayDataOutput.WriteVInt() = call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if == + call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt int = decl_stmt Lucene.Net.Store.ByteArrayDataInput = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call Lucene.Net.Store.ByteArrayDataInput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataInput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataInput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataInput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataInput.Reset(byte,int,int) call Lucene.Net.Store.ByteArrayDataInput.ReadVInt() call Lucene.Net.Store.ByteArrayDataInput.ReadVInt() call Lucene.Net.Store.ByteArrayDataInput.ReadVInt() call Lucene.Net.Store.ByteArrayDataInput.ReadVInt() call Lucene.Net.Store.ByteArrayDataInput.ReadVInt() call Lucene.Net.Store.ByteArrayDataInput.Eof() call Lucene.Net.Store.ByteArrayDataInput.Eof() call Lucene.Net.Store.ByteArrayDataInput.Eof() call Lucene.Net.Store.ByteArrayDataInput.Eof() call Lucene.Net.Store.ByteArrayDataInput.Eof() ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose() call Lucene.Net.Store.BaseDirectoryWrapper.Dispose()