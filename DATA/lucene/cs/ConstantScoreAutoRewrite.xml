Lucene.Net.Search System using System.Diagnostics using Lucene.Net.Util.ArrayUtil Lucene.Net.Util.ByteBlockPool Lucene.Net.Util.BytesRef Lucene.Net.Util.BytesRefHash Lucene.Net.Index.IndexReader Lucene.Net.Util.RamUsageEstimator Lucene.Net.Index.Term Lucene.Net.Index.TermContext Lucene.Net.Index.TermsEnum Lucene.Net.Index.TermState class Lucene.Net.Search.ConstantScoreAutoRewrite super int double int double = return = return return new protected internal override protected internal override new decl int Query int int int BooleanQuery BytesRefHash CutOffTermCollector int public override public override decl_stmt int = / * decl_stmt int = decl_stmt CutOffTermCollector = new decl_stmt int = call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() call CutOffTermCollector.PendingTerms() if return else decl_stmt Lucene.Net.Search.BooleanQuery = if > decl_stmt Lucene.Net.Util.BytesRefHash = decl_stmt int = call Lucene.Net.Util.BytesRefHash.Sort(IComparer) call Lucene.Net.Util.BytesRefHash.Sort(IComparer) call Lucene.Net.Util.BytesRefHash.Sort(IComparer) call Lucene.Net.Util.BytesRefHash.Sort(IComparer) call Lucene.Net.Util.BytesRefHash.Sort(IComparer) for = < ++ decl_stmt int = new call BytesRefHash.Get() call BytesRefHash.Get() call BytesRefHash.Get() call BytesRefHash.Get() call BytesRefHash.Get() new decl_stmt Lucene.Net.Search.Query = new = return internal internal = new new new = TermState int public override public override decl_stmt int = += if >= || >= = return decl_stmt Lucene.Net.Index.TermState = != if < = - - else = new return int public override public override decl_stmt int const const = return * + ConstantScoreAutoRewrite public override public override if == return if == return if != return decl_stmt Lucene.Net.Search.ConstantScoreAutoRewrite = if != return if != return return decl int public override public override decl_stmt int = = new >= return decl TermContext decl int public override public override decl_stmt int = if < decl_stmt Lucene.Net.Index.TermContext = new = >= return public override public override = return