Lucene.Net.Codecs.Memory System using System.Diagnostics using System.Collections using System.Collections.Generic using System.Linq using Lucene.Net.Index using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Util.Automaton using Lucene.Net.Util.Fst using class Lucene.Net.Codecs.Memory.FSTOrdTermsReader super super FieldsProducer decl SortedDictionary int int PostingsReaderBase private private return private private if >= - - else - private static private static if < || || || || || throw new + + + + + + + + if < throw new + + + + + + + + if != - && < throw new + + + + + + + + if != throw new + + + + + + public override < public override < return public override public override != return return public override public override try finally call decl SortedDictionary.Clear() call decl SortedDictionary.Clear() call decl SortedDictionary.Clear() call decl SortedDictionary.Clear() call decl SortedDictionary.Clear() return public override public override return >= public override public override return >= public override public override return >= public override public override return public override public override return return return return public override public override return new public override public override return new return int int internal virtual internal virtual decl_stmt int = int decl_stmt int = = int / if != = = int int internal virtual internal virtual decl_stmt int = int decl_stmt int = = int / if != = var int var internal internal decl_stmt var = * decl_stmt var = int = for = < && ! ++ decl_stmt int = if = uint >> if & == = else = + else = var var var internal internal decl_stmt var = * decl_stmt var = int + decl_stmt var = int + = for = < ++ = + + + = = int for = < && ! ++ for = < ++ = - + = - + - = int public override public override return public override public override return public override public override return public override public override return public override public override return public override public override if ! return return public override public override throw new public override public override throw new internal override internal override if ! && ! = private private < ? < ? < ? < ? if == = else = = = = var public override public override if = decl_stmt var = == return public override public override return != public override public override if == return else return : public override public override if ! = = public override public override return + + + internal override internal override if ! = var internal override internal override decl_stmt var = == = public override public override throw new Frame public override public override if = return = while > decl_stmt Frame = if != if break continue = while > if != if goto goto goto goto = return return Frame int private private decl_stmt Frame = decl_stmt int = = while < = = & = if == || != break ++ if == return if != return : while > = while > && ! = if != return : return private private = = = - return private private = = return private private if ! return = = if == - return return private private if ! return while ! = = if != - break if == - return return var private private decl_stmt var = = if == return = if == - return return private private return && private private return != - private private return != - && < ? < ? private private return ! var private private decl_stmt var = = = ++ == private private = return -- var private private if + == decl_stmt var = new + for = < ++ = new = return + private private return private private if == = new new else if == + ++ = byte return private private if == = else -- return long var var var var var internal static internal static internal static < < decl_stmt var = new < < decl_stmt var = new decl_stmt var = decl_stmt var = new < call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() while > decl_stmt var = call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() decl_stmt long = if < < && ! call var.SafeGet() call var.SafeGet() call var.SafeGet() call var.SafeGet() call var.SafeGet() int call var.SafeSet() call var.SafeSet() call var.SafeSet() call var.SafeSet() call var.SafeSet() int while call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new < if break else long public override public override decl_stmt long = foreach in if != += += += += += return public override public override call PostingsReaderBase.CheckIntegrity() call PostingsReaderBase.CheckIntegrity() call PostingsReaderBase.CheckIntegrity() call PostingsReaderBase.CheckIntegrity() call PostingsReaderBase.CheckIntegrity()