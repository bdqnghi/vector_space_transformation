Lucene.Net.Search.Suggest.Fst System using System.Collections using System.Collections.Generic using System.Diagnostics using System.IO using System.Linq using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Util.Fst using class Lucene.Net.Search.Suggest.Fst.FSTCompletion int bool decl FST bool decl FST decl List public override public override return + + public public return decl FST decl IList decl FST private static < private static < < try decl_stmt System.Collections.Generic.IList < < = new < < decl_stmt Lucene.Net.Util.Fst.FST < = call decl FST.GetFirstArc() call decl FST.GetFirstArc() call decl FST.GetFirstArc() call decl FST.GetFirstArc() call decl FST.GetFirstArc() new < decl_stmt BytesReader = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() while call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new <> if break call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl IList.Reverse() call decl IList.Reverse() call decl IList.Reverse() call decl IList.Reverse() call decl IList.Reverse() return call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() catch throw new decl FST decl FST decl FST decl BytesReader private private try decl_stmt Lucene.Net.Util.Fst.FST < = new < decl_stmt BytesReader = for < ++ decl_stmt Lucene.Net.Util.Fst.FST < = decl_stmt Lucene.Net.Util.Fst.FST < = call decl FST.CopyFrom() call decl FST.CopyFrom() call decl FST.CopyFrom() call decl FST.CopyFrom() call decl FST.CopyFrom() if call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() if == return catch throw new return - var public virtual < public virtual < if == || == return try decl_stmt var = new if ! && > return else return catch throw new var private < private < decl_stmt var = call var.Sort() call var.Sort() call var.Sort() call var.Sort() call var.Sort() if > = call var.SubList() call var.SubList() call var.SubList() call var.SubList() call var.SubList() return decl List decl FST decl FST int BytesRef private < private < decl_stmt System.Collections.Generic.List < = new < decl_stmt Lucene.Net.Util.BytesRef = for = < ++ decl_stmt Lucene.Net.Util.Fst.FST < = decl_stmt Lucene.Net.Util.Fst.FST < = new < if = - if && ! if if ! decl_stmt int = if != - while >= call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() - call decl List.Insert() call decl List.Insert() call decl List.Insert() call decl List.Insert() call decl List.Insert() new break return private private < for = -- >= if return return int decl FST private private < decl_stmt int = + decl_stmt BytesReader = for = < ++ if call decl FST.FindTargetArc() call decl FST.FindTargetArc() call decl FST.FindTargetArc() call decl FST.FindTargetArc() call decl FST.FindTargetArc() & == return return decl BytesReader decl FST private private < < if == = == ++ = sbyte decl_stmt BytesReader = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() while if == new if >= return else decl_stmt int = if new <> return = if break call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() return return public virtual public virtual return new return