Lucene.Net.Search System using System.Collections.Generic using System.Diagnostics using System.Linq using Lucene.Net.Support using Lucene.Net.Util.ArrayUtil class Lucene.Net.Search.MinShouldMatchSumScorer super super Scorer int int int decl Scorer int double decl Scorer int int decl Scorer public virtual public virtual return - decl List decl_stmt System.Collections.Generic.List < = new < for = < ++ call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new return public override public override != while while == if != else -- if < return = if >= break return private private = if == = return = = for = - >= -- if >= || != if == ++ += else if + < return else -- if < = = return if - - > + - - while ! ++ - = - if + < return private private if < && == ++ += << + << + public override public override return float public override public override return public override public override return public override public override if < return = while < if != else -- if < return = if >= return else return float long public override public override decl_stmt long = for = < ++ += decl_stmt float const const = = return * + * * - protected internal protected internal for = >> - >= -- int int int int Scorer int Scorer Scorer protected internal protected internal decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() decl_stmt int = while <= >> - decl_stmt int = << + decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() decl_stmt int = = << + decl_stmt Lucene.Net.Search.Scorer = if < = = if < if < = = = else = = = else if < = = = else return int int int Scorer Scorer protected internal protected internal decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() while > decl_stmt int = - >> decl_stmt Lucene.Net.Search.Scorer = decl_stmt int = call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() if > = = else break = protected internal protected internal if == = else -- = protected internal protected internal for = < ++ if == = -- return return internal virtual internal virtual return int int private private if >= return decl_stmt int = << + decl_stmt int = << + if < && > return if < && > return return &&