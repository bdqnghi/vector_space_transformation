Lucene.Net.Codecs.Pulsing System using System.Collections.Generic using System.Diagnostics using Index using Store using Util using class Lucene.Net.Codecs.Pulsing.PulsingPostingsWriter super super PostingsWriterBase IndexOutput decl Position int decl long PostingsWriterBase decl IndexOptions bool SegmentWriteState int String decl FieldInfo String Position bool decl List int int int public override public override if != return return + public override public override = call Position.Init() call Position.Init() call Position.Init() call Position.Init() call Position.Init() var public override public override decl_stmt var = new = call Position.NewTermState() call Position.NewTermState() call Position.NewTermState() call Position.NewTermState() call Position.NewTermState() return public override public override == public override public override = = = = call Position.SetField() call Position.SetField() call Position.SetField() call Position.SetField() call Position.SetField() = new call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new return public override public override >= + if == call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() if != - < = = if == ++ else if == ++ = else = else call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() Position public override public override if == if == - call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() else decl_stmt Position = ++ = = = = if != && > if == = else call Position.payload() call Position.payload() call Position.payload() call Position.payload() call Position.payload() call Position.payload() call Position.payload() call Position.payload() call Position.payload() else if != = public override public override if == - call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() var var var var var var var var var var var var var var var public override public override decl_stmt var = > || == - if == - = = = call Position.FinishTerm() call Position.FinishTerm() call Position.FinishTerm() call Position.FinishTerm() call Position.FinishTerm() else if >= decl_stmt var = decl_stmt var = decl_stmt var = - decl_stmt var = - while < decl_stmt var = decl_stmt var = - = if == call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << | else call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() decl_stmt var = decl_stmt var = for = < ++ decl_stmt var = ++ == decl_stmt var = - = decl_stmt var = == : if if != call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << | call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() = else call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << else call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() if >= decl_stmt var = - decl_stmt var = - if != call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << | call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() else call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << = = if > call PostingsWriterBase.WriteBytes() call PostingsWriterBase.WriteBytes() call PostingsWriterBase.WriteBytes() call PostingsWriterBase.WriteBytes() call PostingsWriterBase.WriteBytes() else switch case decl_stmt var = for = < ++ decl_stmt var = decl_stmt var = - != if == call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << | else call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() << call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() = break case decl_stmt var = for = < ++ decl_stmt var = call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() call PostingsWriterBase.WriteVInt() - = break = new int call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() = var public override public override decl_stmt var = == = || if == call Position.EncodeTerm() call Position.EncodeTerm() call Position.EncodeTerm() call Position.EncodeTerm() call Position.EncodeTerm() for = < ++ call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.WriteTo() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() call PostingsWriterBase.Reset() = else = || var IndexOutput protected override protected override call Position.Dispose() call Position.Dispose() call Position.Dispose() call Position.Dispose() call Position.Dispose() if is || < return decl_stmt var = decl_stmt IndexOutput = try = call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call SegmentWriteState.Directory() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() foreach in call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() finally Position private private == call Position.StartTerm() call Position.StartTerm() call Position.StartTerm() call Position.StartTerm() call Position.StartTerm() if >= decl_stmt Position = foreach in if == = call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() else if != > call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() call Position.FinishDoc() = call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() call Position.AddPosition() else foreach in call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() call Position.StartDoc() == : = -