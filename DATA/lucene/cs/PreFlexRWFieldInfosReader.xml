Lucene.Net.Codecs.Lucene3x System.Collections.Generic using Lucene.Net.Index.CorruptIndexException Lucene.Net.Store.Directory Lucene.Net.Index.FieldInfo.DocValuesType_e Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.IndexFileNames Lucene.Net.Index.IndexFormatTooNewException Lucene.Net.Index.IndexFormatTooOldException Lucene.Net.Store.IndexInput Lucene.Net.Store.IOContext Lucene.Net.Index.SegmentInfo class Lucene.Net.Codecs.Lucene3x.PreFlexRWFieldInfosReader super super FieldInfosReader int string int bool bool string decl IndexOptions int decl FieldInfo IndexInput decl FieldInfo bool byte bool int public override public override decl_stmt string = decl_stmt Lucene.Net.Store.IndexInput = try decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() if > throw new if < && != throw new decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt Lucene.Net.Index.FieldInfo = new for = < ++ decl_stmt string = call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() call IndexInput.ReadString() decl_stmt int = == call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() : decl_stmt byte = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() decl_stmt bool = & != decl_stmt bool = & != decl_stmt bool = & != decl_stmt bool = & != decl_stmt IndexOptions ? if ! = else if & != = else if & != if <= = else throw new + + + + else = if != = decl_stmt DocValuesType_e ? = && ! : if == && != = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() != : = new if != call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() throw new + + + + + call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() + + + return new finally call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() public static public static <