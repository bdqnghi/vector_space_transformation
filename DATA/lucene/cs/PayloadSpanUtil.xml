Lucene.Net.Search.Payloads System.Collections.Generic using System.IO using System.Linq using Lucene.Net.Index using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Index.IndexReaderContext Lucene.Net.Search.Spans.SpanNearQuery Lucene.Net.Search.Spans.SpanOrQuery Lucene.Net.Search.Spans.SpanQuery Lucene.Net.Search.Spans.Spans Lucene.Net.Search.Spans.SpanTermQuery Lucene.Net.Index.Term Lucene.Net.Index.TermContext class Lucene.Net.Search.Payloads.PayloadSpanUtil IndexReaderContext var public virtual < public virtual < decl_stmt var = new < return int bool decl SpanQuery int decl int decl IList SpanNearQuery decl IEnumerator decl Term SpanTermQuery decl BooleanClause MultiPhraseQuery decl IList decl IList decl Term SpanNearQuery int int private private < if is decl_stmt Lucene.Net.Search.BooleanClause = for = < ++ if ! else if is decl_stmt Lucene.Net.Index.Term = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new for = < ++ = new decl_stmt int = decl_stmt bool = if == = decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new = else if is decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new = else if is else if is else if is decl_stmt System.Collections.Generic.IEnumerator < = while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() else if is decl_stmt Lucene.Net.Search.MultiPhraseQuery = decl_stmt System.Collections.Generic.IList < = decl_stmt int = if > decl_stmt int = - for = < - ++ if > = decl_stmt int = - for = < - ++ if > = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.Term = decl_stmt System.Collections.Generic.IList < = if == = = new < ++ foreach in call int.Add() call int.Add() call int.Add() call int.Add() call int.Add() new decl_stmt int = decl_stmt int = decl_stmt Lucene.Net.Search.Spans.SpanQuery = new for = < ++ decl_stmt System.Collections.Generic.IList < = if != ++ = new < else ++ decl_stmt int = decl_stmt bool = == decl_stmt Lucene.Net.Search.Spans.SpanNearQuery = new + = decl IDictionary var var Spans private private < decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < decl_stmt var = new < foreach in = foreach in decl_stmt Spans = while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() == if decl_stmt var = foreach in