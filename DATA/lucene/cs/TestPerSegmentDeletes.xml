Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Util.ArrayUtil Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Lucene.Net.Search.DocIdSetIterator Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Store.RAMDirectory Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestPerSegmentDeletes super super LuceneTestCase IndexWriterConfig IndexReader IndexReader decl int IndexWriter Directory RangeMergePolicy public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new new new decl_stmt Lucene.Net.Index.IndexWriterConfig = new new call Lucene.Net.Index.IndexWriterConfig.SetMergeScheduler(MergeScheduler) call Lucene.Net.Index.IndexWriterConfig.SetMergeScheduler(MergeScheduler) call Lucene.Net.Index.IndexWriterConfig.SetMergeScheduler(MergeScheduler) call Lucene.Net.Index.IndexWriterConfig.SetMergeScheduler(MergeScheduler) call Lucene.Net.Index.IndexWriterConfig.SetMergeScheduler(MergeScheduler) new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) decl_stmt RangeMergePolicy = new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) call Lucene.Net.Index.IndexWriter.Flush(bool,bool) = = = = call Lucene.Net.Index.IndexWriter.MaybeMerge() call Lucene.Net.Index.IndexWriter.MaybeMerge() call Lucene.Net.Index.IndexWriter.MaybeMerge() call Lucene.Net.Index.IndexWriter.MaybeMerge() call Lucene.Net.Index.IndexWriter.MaybeMerge() decl_stmt Lucene.Net.Index.IndexReader = decl_stmt int = new == call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Term internal virtual internal virtual for = < ++ for = < ++ decl_stmt Lucene.Net.Index.Term = new = = = internal virtual internal virtual foreach in if return return public static public static if == return for = < ++ + + Fields DocsEnum TermsEnum Terms public virtual public virtual decl_stmt Lucene.Net.Index.Fields = decl_stmt Lucene.Net.Index.Terms = call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() if call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) new decl_stmt Lucene.Net.Index.DocsEnum = return return decl IList int public static public static decl_stmt System.Collections.Generic.IList < ? = new < ? while != decl_stmt int = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return public override public override OneMerge MergeSpecification public override public override ? decl_stmt MergeSpecification = new if decl_stmt OneMerge = new + call MergeSpecification.Add() call MergeSpecification.Add() call MergeSpecification.Add() call MergeSpecification.Add() call MergeSpecification.Add() = return return public override public override < ? return public override public override return public override public override return