Lucene.Net.Join System.Collections.Generic using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Util using class Lucene.Net.Join.TermsIncludingScoreQuery super super Query string BytesRefHash bool Query decl int Query decl float public override public override return public override public override < call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) Query Query public override public override decl_stmt Lucene.Net.Search.Query = call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) if != decl_stmt Lucene.Net.Search.Query = new = return return protected protected return && && public override public override if return if return if != return return int public override public override unchecked decl_stmt int = = * ^ != call string.GetHashCode() call string.GetHashCode() call string.GetHashCode() call string.GetHashCode() call string.GetHashCode() : = * ^ != call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() : return Weight public override public override decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) return new SVInnerScorer public override public override decl_stmt SVInnerScorer = if != return call SVInnerScorer.Explain() call SVInnerScorer.Explain() call SVInnerScorer.Explain() call SVInnerScorer.Explain() call SVInnerScorer.Explain() return new public override public override return return return * * public override public override * long Terms public override public override decl_stmt Lucene.Net.Index.Terms = if == return decl_stmt long = * call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() if return new return new long Terms public override public override if return decl_stmt Lucene.Net.Index.Terms = if == return decl_stmt long = * call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() if return new return new FakeScorer public override public override decl_stmt Lucene.Net.Search.FakeScorer = new = if == - = while < = = = return != int private private while if != decl_stmt int = if == = else return = if == return = = if ++ = = protected virtual protected virtual return int int internal internal decl_stmt int do = if < decl_stmt int = if == = break else if == break = != return new + int protected override protected override while decl_stmt int = if == return if ! return DocsEnum float BytesRef protected virtual protected virtual decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Index.DocsEnum = for = < ++ if = decl_stmt float = for = call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() != = call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() = public override public override return public override public override return public override public override return public override public override return = public override public override return = public override public override return DocsEnum float BytesRef protected override protected override decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Index.DocsEnum = for = < ++ if = decl_stmt float = for = call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() != = call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() if ! =