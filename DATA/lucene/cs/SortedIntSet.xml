Lucene.Net.Util.Automaton System using System.Collections.Generic using System.Diagnostics using System.Text using class Lucene.Net.Util.Automaton.SortedIntSet super int decl IDictionary int bool State decl int decl int int int int int public public if decl_stmt int = decl_stmt int if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = else = + return if == = + = + for = < ++ if == ++ return else if < decl_stmt int = - while >= + = + = -- = = ++ return = = ++ if == = for = < ++ = int int public public if decl_stmt int = if == call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() else = - if == = = return for = < ++ if == -- if == decl_stmt int = - while < = + = + ++ = return int public public if if > decl_stmt int = = new = new = = foreach in = * + ++ = else = for = < ++ = * + decl int public public decl_stmt int = new return new decl int public public decl_stmt int = new return new public override public override return FrozenIntSet public override public override throw new if == return if ! is return decl_stmt FrozenIntSet = if != return if != return for = < ++ if != return return public public throw new public public if == return if != return if != return for = < ++ if != return return StringBuilder public override public override decl_stmt System.Text.StringBuilder = new for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public override public override return SortedIntSet public override public override throw new if == return if is decl_stmt FrozenIntSet = if != return if != return for = < ++ if != return return else if is decl_stmt Lucene.Net.Util.Automaton.SortedIntSet = if != return if != return for = < ++ if != return return return public public if == return if != return if != return for = < ++ if != return return public public if == return if != return if != return for = < ++ if != return return StringBuilder public override public override decl_stmt System.Text.StringBuilder = new for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)