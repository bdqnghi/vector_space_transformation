org.apache.lucene.index System using System.Collections.Generic using org.apache.lucene.store.FSDirectory class org.apache.lucene.index.IndexSplitter decl sbyte SegmentInfos FSDirectory File File IndexSplitter decl IList File public static public static if < return decl_stmt System.IO.File = new decl_stmt org.apache.lucene.index.IndexSplitter = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + + if call IndexSplitter.listSegments() call IndexSplitter.listSegments() call IndexSplitter.listSegments() call IndexSplitter.listSegments() call IndexSplitter.listSegments() else if decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call org.apache.lucene.index.IndexSplitter.remove(string) call org.apache.lucene.index.IndexSplitter.remove(string) call org.apache.lucene.index.IndexSplitter.remove(string) call org.apache.lucene.index.IndexSplitter.remove(string) call org.apache.lucene.index.IndexSplitter.remove(string) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() else decl_stmt System.IO.File = new decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call org.apache.lucene.index.IndexSplitter.Split(File,string) call org.apache.lucene.index.IndexSplitter.Split(File,string) call org.apache.lucene.index.IndexSplitter.Split(File,string) call org.apache.lucene.index.IndexSplitter.Split(File,string) call org.apache.lucene.index.IndexSplitter.Split(File,string) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() SegmentCommitInfo DecimalFormat string public virtual public virtual decl_stmt DecimalFormat = new for = < call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() ++ decl_stmt Lucene.Net.Index.SegmentCommitInfo = call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() decl_stmt string = call DecimalFormat.format() call DecimalFormat.format() call DecimalFormat.format() call DecimalFormat.format() call DecimalFormat.format() call SegmentCommitInfo.sizeInBytes() call SegmentCommitInfo.sizeInBytes() call SegmentCommitInfo.sizeInBytes() call SegmentCommitInfo.sizeInBytes() call SegmentCommitInfo.sizeInBytes() + + private private for = < call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() ++ if call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() return return - private private for = < call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() call SegmentInfos.size() ++ if call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() return call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() call SegmentInfos.info() return int public virtual public virtual foreach in decl_stmt int = call SegmentInfos.remove() call SegmentInfos.remove() call SegmentInfos.remove() call SegmentInfos.remove() call SegmentInfos.remove() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() SegmentInfo decl ICollection FSDirectory File SegmentInfo File SegmentInfos SegmentCommitInfo public virtual public virtual decl_stmt Lucene.Net.Store.FSDirectory = decl_stmt Lucene.Net.Index.SegmentInfos = new = foreach in decl_stmt Lucene.Net.Index.SegmentCommitInfo = decl_stmt Lucene.Net.Index.SegmentInfo = decl_stmt Lucene.Net.Index.SegmentInfo = new call SegmentInfos.add() call SegmentInfos.add() call SegmentInfos.add() call SegmentInfos.add() call SegmentInfos.add() new decl_stmt System.Collections.Generic.ICollection < = call SegmentCommitInfo.files() call SegmentCommitInfo.files() call SegmentCommitInfo.files() call SegmentCommitInfo.files() call SegmentCommitInfo.files() foreach in decl_stmt System.IO.File = new decl_stmt System.IO.File = new call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.changed() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() call SegmentInfos.commit() OutputStream int InputStream private static private static decl_stmt InputStream = new decl_stmt OutputStream = new decl_stmt int while = call InputStream.read() call InputStream.read() call InputStream.read() call InputStream.read() call InputStream.read() > call OutputStream.write() call OutputStream.write() call OutputStream.write() call OutputStream.write() call OutputStream.write() call InputStream.close() call InputStream.close() call InputStream.close() call InputStream.close() call InputStream.close() call OutputStream.close() call OutputStream.close() call OutputStream.close() call OutputStream.close() call OutputStream.close()