org.apache.lucene.index.sorter System.Diagnostics using System.Collections.Generic using org.apache.lucene.analysis.Analyzer org.apache.lucene.search.Sort org.apache.lucene.store.Directory org.apache.lucene.util.Bits org.apache.lucene.util.packed.MonotonicAppendingLongBuffer class org.apache.lucene.index.sorter.SortingMergePolicy super super MergePolicy Sort Sorter MergePolicy string IndexReader AtomicReader if == = decl_stmt Lucene.Net.Index.AtomicReader if == = else decl_stmt Lucene.Net.Index.IndexReader = new = = = return == : decl IDictionary decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = = = Bits int int MonotonicAppendingLongBuffer internal virtual internal virtual < decl_stmt Lucene.Net.Util.Packed.MonotonicAppendingLongBuffer = new decl_stmt int = foreach in decl_stmt int = decl_stmt Lucene.Net.Spatial.Util.Bits = for = < ++ if != && ! call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() ++ else call MonotonicAppendingLongBuffer.add() call MonotonicAppendingLongBuffer.add() call MonotonicAppendingLongBuffer.add() call MonotonicAppendingLongBuffer.add() call MonotonicAppendingLongBuffer.add() call MonotonicAppendingLongBuffer.freeze() call MonotonicAppendingLongBuffer.freeze() call MonotonicAppendingLongBuffer.freeze() call MonotonicAppendingLongBuffer.freeze() call MonotonicAppendingLongBuffer.freeze() return MonotonicAppendingLongBuffer public override public override if == throw new if == return == decl_stmt Lucene.Net.Util.Packed.MonotonicAppendingLongBuffer = return new int int public override public override decl_stmt int = + int decl_stmt int = return public override public override new public override public override return + + + + decl IDictionary SegmentReader public static public static if is decl_stmt Lucene.Net.Index.SegmentReader = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = if != && call Lucene.Net.Search.Sort.ToString() call Lucene.Net.Search.Sort.ToString() call Lucene.Net.Search.Sort.ToString() call Lucene.Net.Search.Sort.ToString() call Lucene.Net.Search.Sort.ToString() return return MergeSpecification private private if == return decl_stmt MergeSpecification = new foreach in call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() return public override public override return call MergePolicy.findMerges() call MergePolicy.findMerges() call MergePolicy.findMerges() call MergePolicy.findMerges() call MergePolicy.findMerges() public override public override < ? return call MergePolicy.findForcedMerges() call MergePolicy.findForcedMerges() call MergePolicy.findForcedMerges() call MergePolicy.findForcedMerges() call MergePolicy.findForcedMerges() public override public override return call MergePolicy.findForcedDeletesMerges() call MergePolicy.findForcedDeletesMerges() call MergePolicy.findForcedDeletesMerges() call MergePolicy.findForcedDeletesMerges() call MergePolicy.findForcedDeletesMerges() public override public override return new call MergePolicy.clone() call MergePolicy.clone() call MergePolicy.clone() call MergePolicy.clone() call MergePolicy.clone() public override public override call MergePolicy.close() call MergePolicy.close() call MergePolicy.close() call MergePolicy.close() call MergePolicy.close() public override public override return call MergePolicy.useCompoundFile() call MergePolicy.useCompoundFile() call MergePolicy.useCompoundFile() call MergePolicy.useCompoundFile() call MergePolicy.useCompoundFile() = public override public override return + + + +