Lucene.Net.Util Lucene.Net.Support using NUnit.Framework using System using System.Text using class attribute Lucene.Net.Util.TestCharsRef super super LuceneTestCase int decl BytesRef string decl CharsRef public virtual public virtual decl_stmt int = decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.CharsRef = new for = < ++ decl_stmt string = = new = new for = < ++ int StringBuilder decl char int int CharsRef public virtual public virtual decl_stmt Lucene.Net.Util.CharsRef = new decl_stmt System.Text.StringBuilder = new decl_stmt int = for = < ++ decl_stmt char = decl_stmt int = decl_stmt int = - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() decl char int int string int CharsRef public virtual public virtual decl_stmt int = for = < ++ decl_stmt Lucene.Net.Util.CharsRef = new decl_stmt char = decl_stmt int = decl_stmt int = - decl_stmt string = new call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() decl char CharsRef public virtual public virtual decl_stmt char = new decl_stmt Lucene.Net.Util.CharsRef = new call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) call Lucene.Net.Util.CharsRef.Append(char,int,int) new call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() decl char CharsRef decl char public virtual public virtual decl_stmt char = new decl_stmt Lucene.Net.Util.CharsRef = new decl_stmt char = new call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() decl char CharsRef decl char public virtual public virtual decl_stmt char = new decl_stmt Lucene.Net.Util.CharsRef = new decl_stmt char = new call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) new call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() call Lucene.Net.Util.CharsRef.ToString() CharsRef public virtual public virtual decl_stmt Lucene.Net.Util.CharsRef = new call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) try call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) - catch try call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) call Lucene.Net.Util.CharsRef.CharAt(int) catch decl ICharSequence public virtual public virtual decl_stmt Lucene.Net.Support.ICharSequence = new new new new foreach in private private try - catch try - catch try catch try catch