Lucene.Net.Index NUnit.Framework using Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Lucene.Net.Codecs.FieldInfosReader Lucene.Net.Codecs.FieldInfosWriter Lucene.Net.Store.IndexOutput Lucene.Net.Store.IOContext Lucene.Net.Util.LuceneTestCase class attribute Lucene.Net.Index.TestFieldInfos super super LuceneTestCase Document public override public override decl Builder decl FieldInfos IndexOutput FieldInfos public virtual public virtual != decl_stmt Lucene.Net.Util.Fst.Builder = new foreach in call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() call decl FieldInfos.AddOrUpdate() decl_stmt Lucene.Net.Index.FieldInfos = call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl FieldInfos.Finish() call decl Builder.Size() call decl Builder.Size() call decl Builder.Size() call decl Builder.Size() call decl Builder.Size() == decl_stmt IndexOutput = != decl_stmt FieldInfosWriter = call IndexOutput.Write() call IndexOutput.Write() call IndexOutput.Write() call IndexOutput.Write() call IndexOutput.Write() call FieldInfos.Dispose() call FieldInfos.Dispose() call FieldInfos.Dispose() call FieldInfos.Dispose() call FieldInfos.Dispose() return FieldInfosReader public virtual public virtual decl_stmt FieldInfosReader = return call FieldInfosReader.Read() call FieldInfosReader.Read() call FieldInfosReader.Read() call FieldInfosReader.Read() call FieldInfosReader.Read() FieldInfo FieldInfos string Directory FieldInfos public virtual public virtual decl_stmt string = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.FieldInfos = decl_stmt Lucene.Net.Index.FieldInfos = call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() == call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() call Lucene.Net.Index.FieldInfos.Size() decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) != call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() == call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() == = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) != call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() == = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) != call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() == call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() == = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) != call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() call FieldInfo.HasVectors() == call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() call FieldInfo.OmitsNorms() == call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() FieldInfos FieldInfos string Directory public virtual public virtual decl_stmt string = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.FieldInfos = decl_stmt Lucene.Net.Index.FieldInfos = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() private private foreach in