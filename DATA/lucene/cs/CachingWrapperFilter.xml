Lucene.Net.Search System.Collections.Generic using System.Diagnostics using System.Linq using Lucene.Net.Support using Lucene.Net.Index.AtomicReader Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Util.RamUsageEstimator Lucene.Net.Util.WAH8DocIdSet class Lucene.Net.Search.CachingWrapperFilter super super Filter decl IDictionary Filter int DocIdSet return DocIdSetIterator protected internal virtual protected internal virtual if == return else if return else decl_stmt Lucene.Net.Search.DocIdSetIterator = if == return else return var protected virtual protected virtual decl_stmt var = new call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() return call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() DocIdSet object var public override public override decl_stmt var = decl_stmt object = decl_stmt Lucene.Net.Search.DocIdSet = if != ++ else ++ = call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() = return == : public override public override return + + + var public override public override decl_stmt var = as if == return return call Filter.Equals() call Filter.Equals() call Filter.Equals() call Filter.Equals() call Filter.Equals() public override public override return call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() ^ public override public override return return public override public override return decl IList public virtual public virtual decl_stmt System.Collections.Generic.IList < = new < return call decl IList.Sum() call decl IList.Sum() call decl IList.Sum() call decl IList.Sum() call decl IList.Sum()