Lucene.Net.Codecs.Compressing System using System.Diagnostics using Lucene.Net.Store.IndexOutput Lucene.Net.Util.Packed.PackedInts class Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter super super IDisposable long int long int decl long IndexOutput int decl int int internal static internal static return >> ^ << private private = = = - long int long decl PackedInts long int int int long private private > call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt int if == = else = int - - / - call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() - call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt int = decl_stmt long = for = < ++ decl_stmt int = - * |= += decl_stmt int = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt Writer = = for = < ++ decl_stmt long = - * <= call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() += call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() decl_stmt long if == = else = - / - call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() decl_stmt long = = for = < ++ += decl_stmt long = - * |= decl_stmt int = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() = = for = < ++ += decl_stmt long = - * <= call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.BitsPerValue() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() internal internal if == if == - = = > && >= = = - ++ += += = internal internal if != throw new + + + if > call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() public public call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose()