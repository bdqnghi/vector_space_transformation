Lucene.Net.Search System using System.Collections.Generic using Lucene.Net.Index.IndexReader Lucene.Net.Util.OpenBitSet Lucene.Net.Search.Spans.SpanQuery class attribute Lucene.Net.Search.SpanQueryFilter super super SpanFilter SpanQuery SpanFilterResult public override public override decl_stmt Lucene.Net.Search.SpanFilterResult = return decl Net decl Spans decl Spans decl Search decl Lucene OpenBitSet public override public override decl_stmt Lucene.Net.Util.OpenBitSet = new decl_stmt Spans = call SpanQuery.GetSpans() call SpanQuery.GetSpans() call SpanQuery.GetSpans() call SpanQuery.GetSpans() call SpanQuery.GetSpans() decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = - decl_stmt System.Xml.PositionInfo = while call decl Lucene.Next() call decl Lucene.Next() call decl Lucene.Next() call decl Lucene.Next() call decl Lucene.Next() decl_stmt int = call decl Lucene.Doc() call decl Lucene.Doc() call decl Lucene.Doc() call decl Lucene.Doc() call decl Lucene.Doc() call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) call Lucene.Net.Util.OpenBitSet.Set(long,long) if != = new call decl Net.Add() call decl Net.Add() call decl Net.Add() call decl Net.Add() call decl Net.Add() = call decl Spans.AddPosition() call decl Spans.AddPosition() call decl Spans.AddPosition() call decl Spans.AddPosition() call decl Spans.AddPosition() call decl Lucene.Start() call decl Lucene.Start() call decl Lucene.Start() call decl Lucene.Start() call decl Lucene.Start() call decl Lucene.End() call decl Lucene.End() call decl Lucene.End() call decl Lucene.End() call decl Lucene.End() return new return public override public override return + + public override public override return is && public override public override return call SpanQuery.GetHashCode() call SpanQuery.GetHashCode() call SpanQuery.GetHashCode() call SpanQuery.GetHashCode() call SpanQuery.GetHashCode() ^ unchecked int