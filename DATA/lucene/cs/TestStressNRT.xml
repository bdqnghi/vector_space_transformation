Lucene.Net.Index System using System.Collections.Concurrent using System.Collections.Generic using System.Diagnostics using System.Threading using Lucene.Net.Documents using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Store.Directory Documents.Document FieldType Lucene.Net.Search.IndexSearcher Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Search.Query Lucene.Net.Search.ScoreDoc Lucene.Net.Search.TermQuery Lucene.Net.Util.TestUtil Lucene.Net.Search.TopDocs class attribute Lucene.Net.Index.TestStressNRT super super LuceneTestCase decl object decl IDictionary string long long DirectoryReader int decl ConcurrentDictionary private private = = = = new for = < ++ = - = new call decl IDictionary.PutAll() call decl IDictionary.PutAll() call decl IDictionary.PutAll() call decl IDictionary.PutAll() call decl IDictionary.PutAll() AtomicLong RandomIndexWriter int ThreadClass int int bool int int decl IList FieldType AtomicInteger int int Directory int public virtual public virtual decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = : decl_stmt int = : decl_stmt bool = decl_stmt Lucene.Net.Support.AtomicLong = new decl_stmt int = : decl_stmt Lucene.Net.Documents.FieldType = new = if + + + + + + + + + + decl_stmt Lucene.Net.Support.AtomicInteger = new decl_stmt System.Collections.Generic.IList < = new < decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new = call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() = for = < ++ decl_stmt Lucene.Net.Support.ThreadClass = new + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() for = < ++ decl_stmt Lucene.Net.Support.ThreadClass = new + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() foreach in call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() foreach in call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() if + call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int DirectoryReader Document long long decl IDictionary object long DirectoryReader int bool public override public override try while > decl_stmt int = if < if <= decl_stmt SpellChecker.Net.Search.Spell.IDictionary < decl_stmt long decl_stmt Lucene.Net.Index.DirectoryReader lock = new < = ++ = call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() decl_stmt Lucene.Net.Index.DirectoryReader if < if if + + = else if + + + + + = else if + + + + + if + + = if == call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() = call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() lock > > if > if + + + = call DirectoryReader.ToString() call DirectoryReader.ToString() call DirectoryReader.ToString() call DirectoryReader.ToString() call DirectoryReader.ToString() if >= if + + + = = else if + + + else if + + + call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() else decl_stmt int = decl_stmt object = decl_stmt bool = if = lock decl_stmt long = decl_stmt long = + if < + if decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + if + + + + + new = - else if < + + if decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + if + + + + + new new = - else decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) if + + + + + new if new + = if ! = catch + throw new IndexSearcher IndexSearcher long Document TopDocs Query long DirectoryReader IndexReader int Document public override public override try decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = while >= decl_stmt int = < : decl_stmt long decl_stmt Lucene.Net.Index.DirectoryReader lock = = call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() call DirectoryReader.IncRef() if + + + + + + + decl_stmt Lucene.Net.Search.IndexSearcher if == = else = = = decl_stmt Lucene.Net.Search.Query = new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) if == && = new new + = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) if == if == - call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() continue + + + + + if == && ! else if != + + + foreach in decl_stmt Lucene.Net.Documents.Document = call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() + + + call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) + + call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) + + + + + decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) decl_stmt long = call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) if < + + + + + + + call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() call DirectoryReader.DecRef() catch int - + throw new