Lucene.Net.Search System using System.Threading using Lucene.Net.Support using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Counter class Lucene.Net.Search.TimeLimitingCollector super super Collector int Counter bool long long Collector long return return return = = + public virtual public virtual = call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() return = long public override public override decl_stmt long = call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() if < if call Collector.Collect() call Collector.Collect() call Collector.Collect() call Collector.Collect() call Collector.Collect() throw new - - + call Collector.Collect() call Collector.Collect() call Collector.Collect() call Collector.Collect() call Collector.Collect() = = if == = public override public override return call Collector.AcceptsDocsOutOfOrder() call Collector.AcceptsDocsOutOfOrder() call Collector.AcceptsDocsOutOfOrder() call Collector.AcceptsDocsOutOfOrder() call Collector.AcceptsDocsOutOfOrder() = return return public override public override while ! try ref catch throw new return public public = return =