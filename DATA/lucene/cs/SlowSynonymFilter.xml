Lucene.Net.Analysis.Synonym System using System.Collections.Generic using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Util using class attribute Lucene.Net.Analysis.Synonym.SlowSynonymFilter super super TokenFilter decl LinkedList SlowSynonymMap bool decl LinkedList decl IEnumerator AttributeSource PositionIncrementAttribute OffsetAttribute AttributeSource Token bool int AttributeSource int decl List CharTermAttribute var SlowSynonymMap PositionIncrementAttribute PositionIncrementAttribute int OffsetAttribute AttributeSource public override public override while if != && call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() return decl_stmt Lucene.Net.Util.AttributeSource = if == return decl_stmt var = < decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap = != call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() : if == return if == = = new <> = if == return decl_stmt System.Collections.Generic.List < = new < + + decl_stmt Lucene.Net.Util.AttributeSource = == : decl_stmt bool = decl_stmt Lucene.Net.Util.AttributeSource = : decl_stmt Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof decl_stmt int = decl_stmt int = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Analysis.Token = decl_stmt Lucene.Net.Util.AttributeSource = call AttributeSource.cloneAttributes() call AttributeSource.cloneAttributes() call AttributeSource.cloneAttributes() call AttributeSource.cloneAttributes() call AttributeSource.cloneAttributes() decl_stmt Lucene.Net.Analysis.Tokenattributes.CharTermAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof decl_stmt Lucene.Net.Analysis.Tokenattributes.OffsetAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof decl_stmt Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof decl_stmt Lucene.Net.Analysis.Tokenattributes.OffsetAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof call OffsetAttribute.setOffset() call OffsetAttribute.setOffset() call OffsetAttribute.setOffset() call OffsetAttribute.setOffset() call OffsetAttribute.setOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.endOffset() call OffsetAttribute.endOffset() call OffsetAttribute.endOffset() call OffsetAttribute.endOffset() call OffsetAttribute.endOffset() call CharTermAttribute.copyBuffer() call CharTermAttribute.copyBuffer() call CharTermAttribute.copyBuffer() call CharTermAttribute.copyBuffer() call CharTermAttribute.copyBuffer() call Token.buffer() call Token.buffer() call Token.buffer() call Token.buffer() call Token.buffer() call Token.length() call Token.length() call Token.length() call Token.length() call Token.length() += if == = while != && <= decl_stmt Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof = - call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() += = == : call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() if != = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof += = - call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() += while != decl_stmt Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof = - call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() += = == : call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() if != = call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() call AttributeSource.addAttribute() typeof += = call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() call decl List.GetEnumerator() private private if != && > return call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() else if ! && return else = return private private if == = new <> call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() AttributeSource SlowSynonymMap var SlowSynonymMap private private decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap = if != decl_stmt Lucene.Net.Util.AttributeSource = if != if == = decl_stmt var = < decl_stmt Lucene.Net.Analysis.Synonym.SlowSynonymMap = call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call SlowSynonymMap.submap() call var.buffer() call var.buffer() call var.buffer() call var.buffer() call var.buffer() call var.length() call var.length() call var.length() call var.length() call var.length() if != = if != call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() call decl LinkedList.AddFirst() else if == && != = return private private if != public override public override = =