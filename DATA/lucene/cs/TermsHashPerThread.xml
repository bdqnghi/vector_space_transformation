Lucene.Net.Index System using class Lucene.Net.Index.TermsHashPerThread super super InvertedDocConsumerPerThread decl RawPostingList bool CharBlockPool ByteBlockPool decl DocState TermsHash decl DocumentsWriter IntBlockPool TermsHashConsumerPerThread TermsHashPerThread internal override internal override return new public override public override lock call TermsHashConsumerPerThread.Abort() call TermsHashConsumerPerThread.Abort() call TermsHashConsumerPerThread.Abort() call TermsHashConsumerPerThread.Abort() call TermsHashConsumerPerThread.Abort() if != call Lucene.Net.Index.TermsHashPerThread.Abort() call Lucene.Net.Index.TermsHashPerThread.Abort() call Lucene.Net.Index.TermsHashPerThread.Abort() call Lucene.Net.Index.TermsHashPerThread.Abort() call Lucene.Net.Index.TermsHashPerThread.Abort() internal internal == call TermsHash.GetPostings() call TermsHash.GetPostings() call TermsHash.GetPostings() call TermsHash.GetPostings() call TermsHash.GetPostings() = + private static private static for = < ++ != + + + + + return public override public override call TermsHashConsumerPerThread.StartDocument() call TermsHashConsumerPerThread.StartDocument() call TermsHashConsumerPerThread.StartDocument() call TermsHashConsumerPerThread.StartDocument() call TermsHashConsumerPerThread.StartDocument() if != call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() decl DocWriter decl DocumentsWriter public override public override decl_stmt DocWriter = call TermsHashConsumerPerThread.FinishDocument() call TermsHashConsumerPerThread.FinishDocument() call TermsHashConsumerPerThread.FinishDocument() call TermsHashConsumerPerThread.FinishDocument() call TermsHashConsumerPerThread.FinishDocument() decl_stmt DocWriter if != = call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() call TermsHashPerThread.consumer() else = if == return else call decl DocumentsWriter.SetNext() call decl DocumentsWriter.SetNext() call decl DocumentsWriter.SetNext() call decl DocumentsWriter.SetNext() call decl DocumentsWriter.SetNext() return internal internal call Lucene.Net.Index.IntBlockPool.Reset() call Lucene.Net.Index.IntBlockPool.Reset() call Lucene.Net.Index.IntBlockPool.Reset() call Lucene.Net.Index.IntBlockPool.Reset() call Lucene.Net.Index.IntBlockPool.Reset() call Lucene.Net.Index.ByteBlockPool.Reset() call Lucene.Net.Index.ByteBlockPool.Reset() call Lucene.Net.Index.ByteBlockPool.Reset() call Lucene.Net.Index.ByteBlockPool.Reset() call Lucene.Net.Index.ByteBlockPool.Reset() if call Lucene.Net.Index.CharBlockPool.Reset() call Lucene.Net.Index.CharBlockPool.Reset() call Lucene.Net.Index.CharBlockPool.Reset() call Lucene.Net.Index.CharBlockPool.Reset() call Lucene.Net.Index.CharBlockPool.Reset() if call TermsHash.RecyclePostings() call TermsHash.RecyclePostings() call TermsHash.RecyclePostings() call TermsHash.RecyclePostings() call TermsHash.RecyclePostings() =