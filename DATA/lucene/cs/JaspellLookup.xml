Lucene.Net.Search.Suggest.Jaspell System using System.Collections.Generic using Lucene.Net.Store using Lucene.Net.Util using class Lucene.Net.Search.Suggest.Jaspell.JaspellLookup super super Lookup long sbyte JaspellTernarySearchTrie int sbyte sbyte sbyte bool var BytesRef long public override public override if throw new if != = new if throw new = = new = decl_stmt Lucene.Net.Util.BytesRef decl_stmt var = new while = != decl_stmt long = if == continue call var.Grow() call var.Grow() call var.Grow() call var.Grow() call var.Grow() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() public virtual public virtual call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() call JaspellTernarySearchTrie.Put() return public virtual public virtual return call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) int decl IList decl IList LookupPriorityQueue string int long public override < public override < < if != throw new decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < decl_stmt int = * : if = call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchPrefix(string,int) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchPrefix(string,int) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchPrefix(string,int) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchPrefix(string,int) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchPrefix(string,int) else = call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchAlmost(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchAlmost(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchAlmost(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchAlmost(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.MatchAlmost(string) if == || == return decl_stmt int = if decl_stmt LookupPriorityQueue = new foreach in decl_stmt long = call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call LookupPriorityQueue.InsertWithOverflow() call LookupPriorityQueue.InsertWithOverflow() call LookupPriorityQueue.InsertWithOverflow() call LookupPriorityQueue.InsertWithOverflow() call LookupPriorityQueue.InsertWithOverflow() new foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else for = < ++ decl_stmt string = decl_stmt long = call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.Get(string) call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new return sbyte var private private = decl_stmt sbyte = sbyte if & != = if & != decl_stmt var = new = if & != decl_stmt var = new = if & != decl_stmt var = new = sbyte private private if == return new new decl_stmt sbyte = if != |= if != |= if != |= if != |= if != decl JaspellTernarySearchTrie public override public override decl_stmt TSTNode = if == return return var public override public override = decl_stmt var = new = return public override public override return call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.SizeInBytes() call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.SizeInBytes() call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.SizeInBytes() call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.SizeInBytes() call Lucene.Net.Search.Suggest.Jaspell.JaspellTernarySearchTrie.SizeInBytes() return