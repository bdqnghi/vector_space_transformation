Lucene.Net.Search Apache.NMS.Util using Lucene.Net.Documents using Lucene.Net.Support using System using System.Collections.Generic using System.Globalization using NUnit.Framework using Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig IntField Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer StringField Lucene.Net.Index.Term Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.TestLiveFieldValues super super LuceneTestCase decl LiveFieldValues Random int IndexWriterConfig ThreadClass int int int double int SearcherManager decl IList double IndexWriter CountDownLatch double Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Search.SearcherManager = new new decl_stmt int const const = - decl_stmt Lucene.Net.Search.LiveFieldValues < ? = new decl_stmt int = if + decl_stmt CountDownLatch = new decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = decl_stmt int = decl_stmt double = * decl_stmt double = * decl_stmt double = * for = < ++ decl_stmt int = decl_stmt System.Random = new decl_stmt Lucene.Net.Support.ThreadClass = new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call Lucene.Net.Support.ThreadClass.Start() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() foreach in call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call Lucene.Net.Support.ThreadClass.Join(long,int) call SearcherManager.MaybeRefresh() call SearcherManager.MaybeRefresh() call SearcherManager.MaybeRefresh() call SearcherManager.MaybeRefresh() call SearcherManager.MaybeRefresh() call decl LiveFieldValues.Size() call decl LiveFieldValues.Size() call decl LiveFieldValues.Size() call decl LiveFieldValues.Size() call decl LiveFieldValues.Size() call decl LiveFieldValues.Dispose() call decl LiveFieldValues.Dispose() call decl LiveFieldValues.Dispose() call decl LiveFieldValues.Dispose() call decl LiveFieldValues.Dispose() call SearcherManager.Dispose() call SearcherManager.Dispose() call SearcherManager.Dispose() call SearcherManager.Dispose() call SearcherManager.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new Document TopDocs TermQuery protected override ? protected override ? decl_stmt Lucene.Net.Search.TermQuery = new new decl_stmt Lucene.Net.Search.TopDocs = <= if == return else decl_stmt Lucene.Net.Documents.Document = return int call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) string Document int IndexSearcher decl IDictionary int decl IList string public override public override try decl_stmt SpellChecker.Net.Search.Spell.IDictionary < ? = new < ? decl_stmt System.Collections.Generic.IList < = new < for = < ++ decl_stmt Lucene.Net.Documents.Document = new if <= decl_stmt string = decl_stmt int = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new int new if ! call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = if > && <= decl_stmt string = new = if <= || > if decl_stmt Lucene.Net.Search.IndexSearcher = try + finally + + if == if > decl_stmt string = decl_stmt int ? = if == = + catch throw new