Lucene.Net.Index Lucene.Net.Documents using Lucene.Net.Randomized.Generators using System using System.Collections.Generic using Lucene.Net.Analysis using Lucene.Net.Store using Lucene.Net.Util using NUnit.Framework using Lucene.Net.Search.DocIdSetIterator class attribute Lucene.Net.Index.TestMultiFields super super LuceneTestCase int Bits IndexReader decl IList BytesRef decl Document decl HashSet decl IDictionary decl List BytesRef Field BytesRef int bool IndexWriter decl Documents int Field Directory public virtual public virtual decl_stmt int = for = < ++ if + decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < < ? = new < < ? decl_stmt System.Collections.Generic.HashSet < ? = new < ? decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = * decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() decl_stmt Lucene.Net.Documents.Field = call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() decl_stmt bool = if + + + decl_stmt System.Collections.Generic.HashSet < = new < for = < ++ if ! && && > decl_stmt Lucene.Net.Util.BytesRef = = call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() else decl_stmt string = decl_stmt Lucene.Net.Util.BytesRef = new if ! call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() = new < ? call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call bool.Add() call bool.Add() call bool.Add() call bool.Add() call bool.Add() = = + call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if == call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) if > && == decl_stmt int = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new + if + if decl_stmt System.Collections.Generic.List < = new < call int.Sort() call int.Sort() call int.Sort() call int.Sort() call int.Sort() foreach in + + + foreach in if call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() + + else + decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) if + decl_stmt Lucene.Net.Spatial.Util.Bits = foreach in call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() for = < ++ decl_stmt Lucene.Net.Util.BytesRef = if + call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() call Bits.Utf8ToString() + + decl_stmt Lucene.Net.Index.DocsEnum = foreach in if ! call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call BytesRef.NextDoc() call decl List.Dispose() call decl List.Dispose() call decl List.Dispose() call decl List.Dispose() call decl List.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl Documents decl Document IndexWriter DocsEnum Directory IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DocsEnum = new decl_stmt Lucene.Net.Index.DocsEnum = new call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexReader decl Document IndexWriter Directory decl Documents public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DocsEnum = new call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call IndexReader.NextDoc() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call decl Document.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()