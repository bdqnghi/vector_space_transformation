Lucene.Net.Util NUnit.Framework using System using System.Collections.Generic using System.Linq using class attribute Lucene.Net.Util.TestRecyclingIntBlockAllocator super super LuceneTestCase public override public override private private return new << + decl HashSet int decl int RecyclingIntBlockAllocator int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingIntBlockAllocator = decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt int = decl_stmt int = for = < ++ = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() * * + call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() int decl int int RecyclingIntBlockAllocator decl IList int int decl HashSet decl int decl int int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingIntBlockAllocator = decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = + for = < ++ = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() * * + call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() decl_stmt int = call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() decl_stmt int = decl_stmt int = + - decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() for = < ++ decl_stmt int = call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() RecyclingIntBlockAllocator decl int int int int int int int int decl HashSet decl int decl int int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingIntBlockAllocator = decl_stmt System.Collections.Generic.HashSet < = new < decl_stmt int = decl_stmt int = call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = + for = < ++ = = - call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() * * + call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() + * * + call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() - call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingIntBlockAllocator.BytesUsed() decl_stmt int = call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() call decl HashSet.ToArray() decl_stmt int = decl_stmt int = + - for = < ++ decl_stmt int = call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call decl HashSet.Remove() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() call RecyclingIntBlockAllocator.RecycleIntBlocks() for = < ++ decl_stmt int = call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() decl_stmt int = call Lucene.Net.Util.RecyclingIntBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingIntBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingIntBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingIntBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingIntBlockAllocator.FreeBlocks(int) + call Lucene.Net.Util.RecyclingIntBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingIntBlockAllocator.NumBufferedBlocks() -