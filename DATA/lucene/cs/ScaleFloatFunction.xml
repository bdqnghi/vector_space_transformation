Lucene.Net.Queries.Function.ValueSources System.Collections using System.Collections.Generic using Lucene.Net.Index using Lucene.Net.Queries.Function.DocValues using Lucene.Net.Search using Lucene.Net.Support using class Lucene.Net.Queries.Function.ValueSources.ScaleFloatFunction super super ValueSource ValueSource float float return + + + + + + float int float float var var FunctionValues private private decl_stmt var = decl_stmt float = decl_stmt float = foreach in decl_stmt int = decl_stmt Lucene.Net.Queries.Function.FunctionValues = call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() for = < ++ decl_stmt float = call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) call Lucene.Net.Queries.Function.FunctionValues.FloatVal(int) if & << == << continue if < = if > = if == = = decl_stmt var = new = = = return float var float float var public override public override decl_stmt var = if == = decl_stmt float = - == : - / - decl_stmt float = decl_stmt float = decl_stmt var = call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() call ValueSource.GetValues() return new public override public override return - * + public override public override return + + + + + + + + + + public override public override call ValueSource.CreateWeight() call ValueSource.CreateWeight() call ValueSource.CreateWeight() call ValueSource.CreateWeight() call ValueSource.CreateWeight() int public override public override decl_stmt int = = * += = * += call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() call ValueSource.GetHashCode() return var public override public override decl_stmt var = as if == return return == && == &&