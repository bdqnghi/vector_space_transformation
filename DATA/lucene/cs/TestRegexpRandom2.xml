Lucene.Net.Search System using System.Collections.Generic using Lucene.Net.Documents using Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Util.AttributeSource Lucene.Net.Util.Automaton.Automaton Lucene.Net.Util.Automaton.AutomatonTestUtil Lucene.Net.Util.BytesRef Lucene.Net.Util.Automaton.CharacterRunAutomaton Lucene.Net.Util.CharsRef Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.FilteredTermsEnum Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Analysis.MockTokenizer Lucene.Net.Index.RandomIndexWriter Lucene.Net.Util.Automaton.RegExp Lucene.Net.Index.Term Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.TestUtil Lucene.Net.Util.UnicodeUtil class attribute Lucene.Net.Search.TestRegexpRandom2 super super LuceneTestCase IndexSearcher IndexSearcher string Directory IndexReader decl List Document RandomIndexWriter Field string int public override public override = = : decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt System.Collections.Generic.List < = new < decl_stmt int = for = < ++ decl_stmt string = = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() foreach in + = = = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new private private = new protected override protected override return : public override public override return + int string public virtual public virtual decl_stmt int = * : for = < ++ decl_stmt string = if + TopDocs DumbRegexpQuery TopDocs RegexpQuery protected internal virtual protected internal virtual decl_stmt Lucene.Net.Search.RegexpQuery = new new decl_stmt DumbRegexpQuery = new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector)