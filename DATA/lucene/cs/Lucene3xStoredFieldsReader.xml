Lucene.Net.Codecs.Lucene3x System using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Store.AlreadyClosedException Lucene.Net.Store.CompoundFileDirectory Lucene.Net.Index.CorruptIndexException Lucene.Net.Store.Directory Lucene.Net.Index.FieldInfo Lucene.Net.Index.FieldInfos Lucene.Net.Index.IndexFileNames Lucene.Net.Index.IndexFormatTooNewException Lucene.Net.Index.IndexFormatTooOldException Lucene.Net.Store.IndexInput Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Index.SegmentInfo Lucene.Net.Index.StoredFieldVisitor class attribute Lucene.Net.Codecs.Lucene3x.Lucene3xStoredFieldsReader super super StoredFieldsReader super ICloneable super IDisposable int int int int bool int int int int int FieldInfos string int int IndexInput int int string CompoundFileDirectory int int IndexInput int public override public override return new call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() call IndexInput.Clone() IndexInput string int public static public static decl_stmt string = decl_stmt Lucene.Net.Store.IndexInput = try decl_stmt int = call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() if < throw new if > throw new finally call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() private private if throw new protected override protected override if if ! = private private call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + + * FieldInfo int int int public override public override call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() for = < ++ decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) decl_stmt int = call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() call IndexInput.ReadByte() & <= | + call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() switch case break case break case return int var int private private decl_stmt int = & if != switch case call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() return case call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() return case call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() return case call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() return default: throw new + call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() else decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() decl_stmt var = new call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() if & != else int int private private decl_stmt int = & if != switch case case call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() call IndexInput.ReadInt() return case case call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() call IndexInput.ReadLong() return default: throw new + call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() else decl_stmt int = call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.ReadVInt() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() + public override public override return public override public override