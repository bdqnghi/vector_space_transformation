Lucene.Net.Index System using Lucene.Net.Documents using Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Util.BytesRef Documents.Document Field FieldType Lucene.Net.Util.LuceneTestCase Lucene.Net.Store.MMapDirectory Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper class attribute attribute Lucene.Net.Index.Test4GBStoredFields super super LuceneTestCase FieldType Field Document var DirectoryReader MergePolicy IndexWriter int bool int long BytesRef MockDirectoryWrapper Document public virtual public virtual decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new = decl_stmt Lucene.Net.Index.IndexWriter = new new new new decl_stmt Lucene.Net.Index.MergePolicy = if is = * * decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.FieldType = new = = call Lucene.Net.Documents.FieldType.Freeze() call Lucene.Net.Documents.FieldType.Freeze() call Lucene.Net.Documents.FieldType.Freeze() call Lucene.Net.Documents.FieldType.Freeze() call Lucene.Net.Documents.FieldType.Freeze() decl_stmt int = << << decl_stmt var = new for = < ++ = byte decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int = << / + for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if && / == + + + call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) if decl_stmt bool = foreach in call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() call Lucene.Net.Store.MockDirectoryWrapper.ListAll() if decl_stmt long = call Lucene.Net.Store.MockDirectoryWrapper.FileLength(string) call Lucene.Net.Store.MockDirectoryWrapper.FileLength(string) call Lucene.Net.Store.MockDirectoryWrapper.FileLength(string) call Lucene.Net.Store.MockDirectoryWrapper.FileLength(string) call Lucene.Net.Store.MockDirectoryWrapper.FileLength(string) if >= << = + + + if ! decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Documents.Document = call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() call DirectoryReader.Document() - decl_stmt Lucene.Net.Util.BytesRef = call Lucene.Net.Documents.Document.GetBinaryValue(string) call Lucene.Net.Documents.Document.GetBinaryValue(string) call Lucene.Net.Documents.Document.GetBinaryValue(string) call Lucene.Net.Documents.Document.GetBinaryValue(string) call Lucene.Net.Documents.Document.GetBinaryValue(string) new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose()