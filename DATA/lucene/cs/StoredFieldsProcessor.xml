Lucene.Net.Index System using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Util.ArrayUtil Lucene.Net.Codecs.Codec Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Util.RamUsageEstimator Lucene.Net.Codecs.StoredFieldsWriter class Lucene.Net.Index.StoredFieldsProcessor super super StoredFieldsConsumer int decl IndexableField Codec DocumentsWriterPerThread decl DocState decl DocumentsWriterPerThread StoredFieldsWriter int public public = public override public override int bool public override public override decl_stmt int = if > if != decl_stmt bool = try call Lucene.Net.Index.StoredFieldsWriter.Finish() call Lucene.Net.Index.StoredFieldsWriter.Finish() call Lucene.Net.Index.StoredFieldsWriter.Finish() call Lucene.Net.Index.StoredFieldsWriter.Finish() call Lucene.Net.Index.StoredFieldsWriter.Finish() = finally if else private private lock if == = call decl DocState.StoredFieldsFormat() call decl DocState.StoredFieldsFormat() call decl DocState.StoredFieldsFormat() call decl DocState.StoredFieldsFormat() call decl DocState.StoredFieldsFormat() = public override public override if != call Lucene.Net.Index.StoredFieldsWriter.Abort() call Lucene.Net.Index.StoredFieldsWriter.Abort() call Lucene.Net.Index.StoredFieldsWriter.Abort() call Lucene.Net.Index.StoredFieldsWriter.Abort() call Lucene.Net.Index.StoredFieldsWriter.Abort() = = internal internal while < call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() ++ call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) public override public override call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) if != && > call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() call StoredFieldsWriter.StartDocument() for = < ++ call StoredFieldsWriter.WriteField() call StoredFieldsWriter.WriteField() call StoredFieldsWriter.WriteField() call StoredFieldsWriter.WriteField() call StoredFieldsWriter.WriteField() call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) call Lucene.Net.Index.StoredFieldsWriter.FinishDocument(PerDoc) ++ call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) call Lucene.Net.Index.DocumentsWriterPerThread.TestPoint(string) decl FieldInfo int decl IndexableField public override public override if if == decl_stmt int = + decl_stmt Lucene.Net.Index.IndexableField = new = decl_stmt Lucene.Net.Index.FieldInfo = new = = = ++ call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint()