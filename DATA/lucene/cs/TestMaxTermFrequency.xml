Lucene.Net.Index System using System.Collections.Generic using System.Linq using Lucene.Net.Documents using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Analysis.MockTokenizer Lucene.Net.Util.TestUtil Lucene.Net.Search.Similarities.TFIDFSimilarity class attribute Lucene.Net.Index.TestMaxTermFrequency super super LuceneTestCase decl List Directory IndexReader Document RandomIndexWriter IndexWriterConfig Field public override public override = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) new decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() NumericDocValues public virtual public virtual decl_stmt NumericDocValues = for = < ++ int call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() & int int decl IList int private private decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = decl_stmt int = for = <= ++ decl_stmt int = for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = return call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() public override public override return public override public override return sbyte public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return