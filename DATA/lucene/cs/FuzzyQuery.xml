Lucene.Net.Search System using System.Text using Lucene.Net.Util.AttributeSource Lucene.Net.Util.Automaton.LevenshteinAutomata Lucene.Net.Index.SingleTermsEnum Lucene.Net.Index.Term Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.FuzzyQuery super super MultiTermQuery Term int int float bool int int int int bool return return return public override public override if == || >= call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() return new return new return var public override public override decl_stmt var = new if ! call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() int int public override public override decl_stmt int const const = decl_stmt int = = * + = * + = * + = * + : = * + == : call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() return FuzzyQuery public override public override if == return if ! return if != return decl_stmt Lucene.Net.Search.FuzzyQuery = if != return if != return if != return if != return if == if != return else if ! call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) return return public static public static if >= return int else if == return else return - *