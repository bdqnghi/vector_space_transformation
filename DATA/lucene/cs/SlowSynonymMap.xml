Lucene.Net.Analysis.Synonym System using System.Collections.Generic using System.Linq using System.Text using org.apache.lucene.analysis.util using class attribute Lucene.Net.Analysis.Synonym.SlowSynonymMap int decl CharArrayMap int int decl Token return & != return & != var decl IList var public virtual public virtual < < decl_stmt var = foreach in if == = new < decl_stmt var = call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() if == = new |= & call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() call var.submap() = if != && ! throw new + decl_stmt System.Collections.Generic.IList < = == : = call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() if |= var public override public override decl_stmt var = new if != call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() for = < ++ if != call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() if & != call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() Token decl IList public static < public static < < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt Lucene.Net.Analysis.Token = new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return var var var var int var var int int public static < public static < < < decl_stmt var = new < if == || == if != call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() if != call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() call var.AddRange() return decl_stmt int = decl_stmt var = decl_stmt var = decl_stmt var = call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() : decl_stmt var = call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() : decl_stmt int = != : decl_stmt int = != : while != || != while != && <= || == decl_stmt var = new call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() = - call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() = = call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() : += != : while != && <= || == decl_stmt var = new call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.StartOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.EndOffset() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.CopyBuffer() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() call var.Buffer() = - call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() = = call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() : += != : return