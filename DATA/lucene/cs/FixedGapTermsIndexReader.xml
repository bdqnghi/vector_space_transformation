Lucene.Net.Codecs.BlockTerms System using System.Collections.Generic using System.Diagnostics using System.Linq using Index using Store using Util using Util.Packed using class Lucene.Net.Codecs.BlockTerms.FixedGapTermsIndexReader super super TermsIndexReaderBase int int PagedBytes long IndexInput bool decl Dictionary decl IComparer long decl PagedBytes decl Reader int return var private private decl_stmt var = if < = return return FieldIndexData public override public override decl_stmt FieldIndexData = return == : new public override public override if != && ! call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() private private if >= - - = else if >= - = var decl_stmt var = != call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() : + != call decl PagedBytes.RamBytesUsed() call decl PagedBytes.RamBytesUsed() call decl PagedBytes.RamBytesUsed() call decl PagedBytes.RamBytesUsed() call decl PagedBytes.RamBytesUsed() : return call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() call decl Reader.Values() + var long var int var int public override ? public override ? decl_stmt var = decl_stmt var = - > decl_stmt long decl_stmt int while >= decl_stmt var = + >> = = + - + decl_stmt int = if < = - else if > = + else >= = * return + if < == - = = = + - + = * return + var var var decl_stmt var = + / if >= return - += decl_stmt var = decl_stmt var = + - + return + var var var public override ? public override ? decl_stmt var = / < decl_stmt var = decl_stmt var = + - + = * return + private private if == = new return != : + != :