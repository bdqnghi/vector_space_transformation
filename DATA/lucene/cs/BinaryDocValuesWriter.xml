Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer Lucene.Net.Util.ArrayUtil Lucene.Net.Util.BytesRef Lucene.Net.Util.Counter Lucene.Net.Store.DataInput Lucene.Net.Store.DataOutput Lucene.Net.Codecs.DocValuesConsumer Lucene.Net.Util.FixedBitSet Lucene.Net.Util.Packed.PackedInts Lucene.Net.Util.PagedBytes Lucene.Net.Util.RamUsageEstimator class Lucene.Net.Index.BinaryDocValuesWriter super super DocValuesWriter Counter FixedBitSet DataOutput AppendingDeltaPackedLongBuffer int long PagedBytes int FieldInfo int DataInput public virtual public virtual if < throw new + + if == throw new + + if > throw new + + + while < ++ call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() ++ call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() call AppendingDeltaPackedLongBuffer.Add() try call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) call Lucene.Net.Store.DataOutput.WriteBytes(byte,int) catch throw new = call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) private private return + long private private decl_stmt long = call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.RamBytesUsed() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.RamBytesUsed() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.RamBytesUsed() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.RamBytesUsed() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.RamBytesUsed() + call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() call Lucene.Net.Util.PagedBytes.RamBytesUsed() + call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) - = internal override internal override int internal override internal override decl_stmt int = call Lucene.Net.Util.PagedBytes.Freeze(bool) call Lucene.Net.Util.PagedBytes.Freeze(bool) call Lucene.Net.Util.PagedBytes.Freeze(bool) call Lucene.Net.Util.PagedBytes.Freeze(bool) call Lucene.Net.Util.PagedBytes.Freeze(bool) internal override internal override int DataInput BytesRef int decl AppendingDeltaPackedLongBuffer int int decl Iterator private < private < decl_stmt System.IO.Iterator = call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.GetIterator() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.GetIterator() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.GetIterator() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.GetIterator() call Lucene.Net.Util.Packed.AppendingDeltaPackedLongBuffer.GetIterator() decl_stmt int = int call AppendingDeltaPackedLongBuffer.Size() call AppendingDeltaPackedLongBuffer.Size() call AppendingDeltaPackedLongBuffer.Size() call AppendingDeltaPackedLongBuffer.Size() call AppendingDeltaPackedLongBuffer.Size() decl_stmt Lucene.Net.Store.DataInput = decl_stmt int = decl_stmt int = while < decl_stmt Lucene.Net.Util.BytesRef = if < decl_stmt int = int call decl AppendingDeltaPackedLongBuffer.Next() call decl AppendingDeltaPackedLongBuffer.Next() call decl AppendingDeltaPackedLongBuffer.Next() call decl AppendingDeltaPackedLongBuffer.Next() call decl AppendingDeltaPackedLongBuffer.Next() decl_stmt var = new call int.Grow() call int.Grow() call int.Grow() call int.Grow() call int.Grow() = call int.ReadBytes() call int.ReadBytes() call int.ReadBytes() call int.ReadBytes() call int.ReadBytes() if call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) = ++ yield