Lucene.Net.Search Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Util.AttributeSource Lucene.Net.Util.BytesRef Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Index.FilteredTermsEnum Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Analysis.MockTokenizer Lucene.Net.Index.RandomIndexWriter Lucene.Net.Util.StringHelper Lucene.Net.Index.Term Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.TestUtil class attribute Lucene.Net.Search.TestPrefixRandom super super LuceneTestCase IndexSearcher Directory IndexReader var RandomIndexWriter int string Field public override public override = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt var = new decl_stmt Lucene.Net.Documents.Field = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() decl_stmt string = decl_stmt int = call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() * : for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new protected override protected override return : public override public override return + + int public virtual public virtual decl_stmt int = for = < ++ TopDocs DumbPrefixQuery TopDocs PrefixQuery private private decl_stmt Lucene.Net.Search.PrefixQuery = new new decl_stmt DumbPrefixQuery = new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector)