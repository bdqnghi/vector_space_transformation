Lucene.Net.Facet System using System.Diagnostics using System.Collections.Generic using System.Linq using Lucene.Net.Facet using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Facet.Taxonomy.CachedOrdinalsReader Lucene.Net.Facet.Taxonomy.DocValuesOrdinalsReader Lucene.Net.Facet.Taxonomy.FastTaxonomyFacetCounts Lucene.Net.Facet.Taxonomy.OrdinalsReader Lucene.Net.Facet.Taxonomy.TaxonomyFacetCounts Lucene.Net.Facet.Taxonomy.TaxonomyReader Lucene.Net.Util.BytesRef Lucene.Net.Util.LuceneTestCase.SuppressCodecs Lucene.Net.Util.LuceneTestCase Lucene.Net.Util.TestUtil class attribute Lucene.Net.Facet.FacetTestCase super super LuceneTestCase public virtual public virtual return Facets OrdinalsReader public virtual public virtual decl_stmt Facets if = new else decl_stmt OrdinalsReader = new if = new = new return decl string protected internal virtual protected internal virtual decl_stmt string = new for = < ++ = return protected internal virtual protected internal virtual for = < ++ if return return decl IList TestDoc protected internal virtual < protected internal virtual < decl_stmt System.Collections.Generic.IList < = new < for = < ++ decl_stmt Lucene.Net.Index.TestDoc = new call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() = = new for = < ++ = if < break if + + + for = < ++ if != + + + return protected internal virtual protected internal virtual < foreach in int double int protected internal virtual protected internal virtual decl_stmt double = - decl_stmt int = decl_stmt int = while <= if < && double == ++ else if > - new = if < = double ++ public virtual public virtual double == double return new new var protected internal virtual protected internal virtual < decl_stmt var = new = call var.ToList() call var.ToList() call var.ToList() call var.ToList() call var.ToList() public virtual public virtual if double > double return - else if double < double return else return new new var protected internal virtual protected internal virtual < decl_stmt var = new = call var.ToList() call var.ToList() call var.ToList() call var.ToList() call var.ToList() public virtual public virtual if double > double return - else if double > double return else return float decl IDictionary decl IDictionary protected internal virtual protected internal virtual < < decl_stmt float = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < for = < ++ float <= = float = = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < for = < ++ = float <= = float foreach in protected internal virtual protected internal virtual float float float / for = < ++ float float float /