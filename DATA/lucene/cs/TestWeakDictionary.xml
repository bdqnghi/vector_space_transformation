Lucene.Net.Support System using System.Collections using System.Collections.Generic using NUnit.Framework using class attribute Lucene.Net.Support.TestWeakDictionary ICollection ICollection ICollection decl IDictionary Hashtable SmallObject ICollection decl SmallObject SmallObject public public decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = decl_stmt System.Collections.Hashtable = new decl_stmt SmallObject = new for = < ++ decl_stmt SmallObject = new decl_stmt SmallObject = / = call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() decl_stmt System.Collections.Generic.ICollection = foreach in decl_stmt System.Collections.Generic.ICollection = decl_stmt System.Collections.Generic.ICollection = call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) new call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() new for = < ++ call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() - - - - decl_stmt System.Collections.Generic.ICollection = foreach in var int public public decl_stmt var = decl_stmt int = for = < * + ++ try call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new if == + + = catch if ++ > throw new + + -- continue private private return / var int int int public public decl_stmt var = decl_stmt int = + for = < ++ call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new if == decl_stmt int = + + decl_stmt int = > * +