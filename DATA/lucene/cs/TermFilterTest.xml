Lucene.Net.Tests.Queries System using System.Collections.Generic using Lucene.Net.Documents using Lucene.Net.Index using Lucene.Net.JavaCompatibility using Lucene.Net.Queries using Lucene.Net.Search using Lucene.Net.Store using Lucene.Net.Util using NUnit.Framework using class Lucene.Net.Tests.Queries.TermFilterTest super super LuceneTestCase TermFilter var public public decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt var = new < call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() RandomIndexWriter Document DocIdSetIterator Directory string var IndexReader DocIdSet public public decl_stmt string = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = is decl_stmt var = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.DocIdSet = decl_stmt Lucene.Net.Search.DocIdSetIterator = call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() = = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexSearcher Term var RandomIndexWriter decl ScoreDoc Document int MatchAllDocsQuery string int string IndexReader TopDocs TermFilter Directory TopDocs public public decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt var = new < for = < ++ decl_stmt string = + decl_stmt string = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Index.Term = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Lucene.Net.Search.MatchAllDocsQuery = new decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.ScoreDoc = for = < ++ call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() TermFilter TermFilter string var string TermFilter TermFilter int TermFilter string string TermFilter TermFilter public public decl_stmt int = for = < ++ decl_stmt string = + decl_stmt string = + + decl_stmt string = decl_stmt string = + decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt Lucene.Net.Queries.TermFilter = decl_stmt var = new for = < ++ decl_stmt Lucene.Net.Queries.TermFilter = for = < ++ decl_stmt Lucene.Net.Queries.TermFilter = if == call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) else call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) decl_stmt Lucene.Net.Queries.TermFilter = call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.GetHashCode() call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) call Lucene.Net.Queries.TermFilter.Equals(object) public public try new catch try new new catch var public public decl_stmt var = new new call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() private private return new private private return new