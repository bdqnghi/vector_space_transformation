Lucene.Net.Index Lucene.Net.Documents using Lucene.Net.Randomized.Generators using System.Collections.Generic using NUnit.Framework using BinaryDocValuesField Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Util.LuceneTestCase NumericDocValuesField SortedDocValuesField SortedSetDocValuesField Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestMultiDocValues super super LuceneTestCase NumericDocValues IndexWriterConfig Document DirectoryReader DirectoryReader RandomIndexWriter Field NumericDocValues AtomicReader int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt NumericDocValues = decl_stmt NumericDocValues = call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() for = < ++ call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues IndexWriterConfig Document DirectoryReader DirectoryReader RandomIndexWriter Field BinaryDocValues AtomicReader BytesRef BytesRef int BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() SortedDocValues IndexWriterConfig Document DirectoryReader DirectoryReader RandomIndexWriter Field SortedDocValues AtomicReader BytesRef BytesRef int BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) if && == call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt Lucene.Net.Index.SortedDocValues = call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() SortedDocValues IndexWriterConfig Document DirectoryReader DirectoryReader RandomIndexWriter Field SortedDocValues AtomicReader BytesRef BytesRef int BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Util.BytesRef.CopyChars(CharsRef) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt Lucene.Net.Index.SortedDocValues = call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.GetOrd() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int SortedSetDocValues DirectoryReader IndexWriterConfig Document DirectoryReader int RandomIndexWriter SortedSetDocValues decl List AtomicReader BytesRef BytesRef int long Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = for = < ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Index.SortedSetDocValues = decl_stmt Lucene.Net.Index.SortedSetDocValues = call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() if == else decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() for = < ++ = decl_stmt System.Collections.Generic.List < = new < decl_stmt long while = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = decl_stmt int = while = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() != ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int SortedSetDocValues DirectoryReader IndexWriterConfig Document DirectoryReader int RandomIndexWriter SortedSetDocValues decl List AtomicReader BytesRef BytesRef int long Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = for = < ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Index.SortedSetDocValues = decl_stmt Lucene.Net.Index.SortedSetDocValues = call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() if == else decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() for = < ++ = decl_stmt System.Collections.Generic.List < ? = new < ? decl_stmt long while = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = decl_stmt int = while = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() != long ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Bits IndexWriterConfig Document DirectoryReader DirectoryReader RandomIndexWriter Bits AtomicReader int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new if >= call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) if == call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Spatial.Util.Bits = decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() if == else call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() for = < ++ call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() = = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() call Lucene.Net.Spatial.Util.Bits.Length() for = < ++ call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()