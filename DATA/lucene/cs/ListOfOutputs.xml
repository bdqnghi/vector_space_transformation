org.apache.lucene.util.fst System.Diagnostics using System.Collections using System.Collections.Generic using System.Text using org.apache.lucene.store.DataInput org.apache.lucene.store.DataOutput class super decl Outputs public override public override return call decl Outputs.common() call decl Outputs.common() call decl Outputs.common() call decl Outputs.common() call decl Outputs.common() public override public override return call decl Outputs.subtract() call decl Outputs.subtract() call decl Outputs.subtract() call decl Outputs.subtract() call decl Outputs.subtract() decl IList decl IList public override public override ! is if ! is return call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() else decl_stmt System.Collections.Generic.IList < = < decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() call decl Outputs.add() return public override public override ! is call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() decl IList public override public override if ! is call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() else decl_stmt System.Collections.Generic.IList < = < foreach in call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() call decl Outputs.write() public override public override return call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() int decl IList public override public override decl_stmt int = if == return call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() else decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() call decl Outputs.read() return return decl IList StringBuilder public override public override if ! is return call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() else decl_stmt System.Collections.Generic.IList < = < decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() call decl Outputs.outputToString() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) decl IList public override public override decl_stmt System.Collections.Generic.IList < = new < if ! is call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() < if ! is call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() < return public override public override return + + decl IList public < public < if ! is decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return else return <