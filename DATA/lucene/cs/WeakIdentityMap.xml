Lucene.Net.Util Lucene.Net.Support using System using System.Collections.Concurrent using System.Collections.Generic using System.Runtime.CompilerServices using class bool object decl IDictionary public static < public static < return public static < public static < return new < new < public static < public static < return public static < public static < return new < new < public public call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() public public if return call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() new V public public if decl_stmt V if call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() new out return else return default public public return new = var foreach in decl_stmt var = if == continue else if == yield else yield if return return == public public return call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() new public public if == return if return public < public < if return call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() call decl IDictionary.Values() decl List public public decl_stmt System.Collections.Generic.List < = new < foreach in if ! call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() foreach in call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() public override public override return IdentityWeakReference public override public override if == return if is decl_stmt Lucene.Net.Support.IdentityWeakReference = if == return return