Lucene.Net.Index Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Util.IOUtils Lucene.Net.Analysis.TokenStream class Lucene.Net.Index.DocInverterPerField super super DocFieldConsumerPerField InvertedDocEndConsumerPerField FieldInfo InvertedDocConsumerPerField decl DocState decl DocumentsWriterPerThread public override public override try call InvertedDocConsumerPerField.Abort() call InvertedDocConsumerPerField.Abort() call InvertedDocConsumerPerField.Abort() call InvertedDocConsumerPerField.Abort() call InvertedDocConsumerPerField.Abort() finally call InvertedDocEndConsumerPerField.Abort() call InvertedDocEndConsumerPerField.Abort() call InvertedDocEndConsumerPerField.Abort() call InvertedDocEndConsumerPerField.Abort() call InvertedDocEndConsumerPerField.Abort() IPositionIncrementAttribute bool TokenStream int IOffsetAttribute bool IndexableField int bool IndexableFieldType int int bool int bool string bool public override public override call decl DocState.Reset() call decl DocState.Reset() call decl DocState.Reset() call decl DocState.Reset() call decl DocState.Reset() decl_stmt bool = call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() for = < ++ decl_stmt Lucene.Net.Index.IndexableField = decl_stmt Lucene.Net.Index.IndexableFieldType = call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() if && decl_stmt bool = && != if && call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() != throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + decl_stmt bool = == decl_stmt int = if > += call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() : decl_stmt bool = decl_stmt Lucene.Net.Analysis.TokenStream = call IndexableField.GetTokenStream() call IndexableField.GetTokenStream() call IndexableField.GetTokenStream() call IndexableField.GetTokenStream() call IndexableField.GetTokenStream() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() try decl_stmt bool = call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() = decl_stmt Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute = call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() < decl_stmt Lucene.Net.Analysis.Tokenattributes.IPositionIncrementAttribute = call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() < if call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() call InvertedDocConsumerPerField.Start() do decl_stmt int = if < throw new + + + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if == && == throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + decl_stmt int = + if > -- else if < throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + = if == ++ if decl_stmt int = + call IOffsetAttribute.StartOffset() call IOffsetAttribute.StartOffset() call IOffsetAttribute.StartOffset() call IOffsetAttribute.StartOffset() call IOffsetAttribute.StartOffset() decl_stmt int = + call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() if < || < throw new + + + + + + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if < throw new + + + + + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + = decl_stmt bool = try call InvertedDocConsumerPerField.Add() call InvertedDocConsumerPerField.Add() call InvertedDocConsumerPerField.Add() call InvertedDocConsumerPerField.Add() call InvertedDocConsumerPerField.Add() = finally if ! call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() call decl DocumentsWriterPerThread.DocWriter() ++ ++ call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() += += call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.EndOffset() if != decl_stmt string = + + + + + + if call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() + = throw new = finally if ! else call TokenStream.Dispose() call TokenStream.Dispose() call TokenStream.Dispose() call TokenStream.Dispose() call TokenStream.Dispose() if ! && call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() call decl DocumentsWriterPerThread.InfoStream() + += call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() call decl DocumentsWriterPerThread.Analyzer() : *= call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() call Lucene.Net.Index.IndexableField.GetBoost() = call InvertedDocConsumerPerField.Finish() call InvertedDocConsumerPerField.Finish() call InvertedDocConsumerPerField.Finish() call InvertedDocConsumerPerField.Finish() call InvertedDocConsumerPerField.Finish() call InvertedDocEndConsumerPerField.Finish() call InvertedDocEndConsumerPerField.Finish() call InvertedDocEndConsumerPerField.Finish() call InvertedDocEndConsumerPerField.Finish() call InvertedDocEndConsumerPerField.Finish() return