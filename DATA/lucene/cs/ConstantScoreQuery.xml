Lucene.Net.Search System.Collections.Generic using System.Diagnostics using System.Text using Lucene.Net.Index using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Index.IndexReader Lucene.Net.Index.Term Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.ConstantScoreQuery super super Query Filter Query return return QueryWrapperFilter Query public override public override if != decl_stmt Lucene.Net.Search.Query = call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) if != = new = return else != if is decl_stmt Lucene.Net.Search.QueryWrapperFilter = decl_stmt Lucene.Net.Search.Query = new call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() call QueryWrapperFilter.Query() = return return public override public override < if != call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) return = return * public override public override = * *= if != BulkScorer public override public override if != == return else != && != decl_stmt Lucene.Net.Search.BulkScorer = if == return return new DocIdSetIterator DocIdSet public override public override decl_stmt Lucene.Net.Search.DocIdSetIterator if != == decl_stmt Lucene.Net.Search.DocIdSet = if == return = call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() else != && != = if == return return new public override public override return != : Scorer ComplexExplanation bool public override public override decl_stmt Lucene.Net.Search.Scorer = decl_stmt bool = != && call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() == decl_stmt Lucene.Net.Search.ComplexExplanation = new if = + = = call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() new call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() new else = + + = = return public override public override return internal virtual internal virtual return new = new public override public override = public override public override return public public return public override public override return public override public override return public override public override != return public override public override return public override public override return public override public override return if != return new new else return new < public override public override return new public override public override return new == call Filter.ToString() call Filter.ToString() call Filter.ToString() call Filter.ToString() call Filter.ToString() : call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() ConstantScoreQuery public override public override if == return if ! return if is decl_stmt Lucene.Net.Search.ConstantScoreQuery = return == == : && == == : return public override public override return * + == object :