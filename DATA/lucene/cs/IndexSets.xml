Lucene.Net.Distributed.Indexing System using System.Collections using System.Collections.Generic using System.Collections.Specialized using System.Configuration using System.IO using System.Xml using Lucene.Net.Distributed using Lucene.Net.Distributed.Configuration using class Lucene.Net.Distributed.Indexing.IndexSets bool decl IndexSet string return int IndexSet XmlAttributeCollection public public decl_stmt System.Xml.XmlAttributeCollection = try = catch throw new + + try = catch throw new + + if == throw new + + = new decl_stmt int = foreach in if == decl_stmt Lucene.Net.Distributed.Indexing.IndexSet = new = ++ return return return IndexSet public public decl_stmt Lucene.Net.Distributed.Indexing.IndexSet = foreach in if >= && <= = return IndexSet IndexDocument FileStream IndexDocument decl FileInfo DirectoryInfo public public decl_stmt System.IO.DirectoryInfo = new decl_stmt System.IO.FileInfo = call System.IO.DirectoryInfo.GetFiles(String,SearchOption) call System.IO.DirectoryInfo.GetFiles(String,SearchOption) call System.IO.DirectoryInfo.GetFiles(String,SearchOption) call System.IO.DirectoryInfo.GetFiles(String,SearchOption) call System.IO.DirectoryInfo.GetFiles(String,SearchOption) new decl_stmt Lucene.Net.Distributed.Indexing.IndexSet foreach in decl_stmt FileStream = new decl_stmt Lucene.Net.Distributed.Indexing.IndexDocument = = if != call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() call IndexSet.FileSystemDocuments() if call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() decl_stmt Lucene.Net.Distributed.Indexing.IndexDocument = call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() else call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() call IndexSet.IndexDocuments() else if != call Lucene.Net.Distributed.Indexing.IndexDocument.Save(string) call Lucene.Net.Distributed.Indexing.IndexDocument.Save(string) call Lucene.Net.Distributed.Indexing.IndexDocument.Save(string) call Lucene.Net.Distributed.Indexing.IndexDocument.Save(string) call Lucene.Net.Distributed.Indexing.IndexDocument.Save(string) call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() = = public public foreach in if > CurrentIndex string bool Hashtable public public decl_stmt System.Collections.Hashtable = new decl_stmt bool = foreach in = if != && = if && ! call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) foreach in decl_stmt string = decl_stmt CurrentIndex = call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() CurrentIndex string bool Hashtable public public decl_stmt System.Collections.Hashtable = new decl_stmt bool = foreach in = if != && = if && ! call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) foreach in decl_stmt string = decl_stmt CurrentIndex = call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() call CurrentIndex.UpdateRefresh() return public public foreach in FileInfo public public foreach in if > foreach in decl_stmt System.IO.FileInfo = new call System.IO.FileInfo.Delete() call System.IO.FileInfo.Delete() call System.IO.FileInfo.Delete() call System.IO.FileInfo.Delete() call System.IO.FileInfo.Delete()