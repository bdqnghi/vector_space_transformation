Lucene.Net.Analysis.Miscellaneous System using System.Collections.Generic using System.IO using System.Text.RegularExpressions using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Util.Version class Lucene.Net.Analysis.Miscellaneous.PatternAnalyzer super super Analyzer CharArraySet Regex PatternAnalyzer bool Regex Regex decl ISet PatternAnalyzer Version TokenStream public public if == throw new decl_stmt Lucene.Net.Analysis.TokenStream if == = new else if == = new else = new if != = new return String public override public override if is return try decl_stmt System.String = return catch throw new PatternAnalyzer public override public override if == return if == && == return if == && == return if is decl_stmt Lucene.Net.Analysis.Miscellaneous.PatternAnalyzer = return == && && return int public override public override if == return - if == return decl_stmt int = = * + call Regex.GetHashCode() call Regex.GetHashCode() call Regex.GetHashCode() call Regex.GetHashCode() call Regex.GetHashCode() = * + int = * + : = * + != call decl ISet.GetHashCode() call decl ISet.GetHashCode() call decl ISet.GetHashCode() call decl ISet.GetHashCode() call decl ISet.GetHashCode() : return private static private static return == || != : private static private static return == || == && == decl char decl char decl char int int private static private static try decl_stmt int = decl_stmt char = new decl_stmt char = new = decl_stmt int while = != if + > decl_stmt char = new << + = = else += return new finally if != bool int int String public sealed override public sealed override if == return while decl_stmt int = decl_stmt int decl_stmt bool = if = = + = else = = if != decl_stmt System.String = - if = call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() return return int public override sealed public override sealed decl_stmt int = protected override protected override int String int int String bool public override public override decl_stmt System.String = decl_stmt int = decl_stmt int = decl_stmt bool = decl_stmt int = decl_stmt System.String do = while < && ! ++ if < = while < && ++ = call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) - if = call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() call System.String.ToLower() != && = if == return return int public override sealed public override sealed decl_stmt int = protected override protected override private private return : ! private private return != && call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() internal internal return