Lucene.Net.Index System.Collections.Generic using System.Diagnostics using System using Lucene.Net.Store.Directory class Lucene.Net.Index.SnapshotDeletionPolicy super super IndexDeletionPolicy bool IndexCommit decl IDictionary decl IDictionary IndexDeletionPolicy public override public override public override < < lock call IndexDeletionPolicy.OnCommit() call IndexDeletionPolicy.OnCommit() call IndexDeletionPolicy.OnCommit() call IndexDeletionPolicy.OnCommit() call IndexDeletionPolicy.OnCommit() = - public override public override public override < < lock = call IndexDeletionPolicy.OnInit() call IndexDeletionPolicy.OnInit() call IndexDeletionPolicy.OnInit() call IndexDeletionPolicy.OnInit() call IndexDeletionPolicy.OnInit() foreach in if call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() = if > = - long public virtual public virtual lock decl_stmt long = int int protected internal virtual protected internal virtual if ! throw new decl_stmt int ? = if == throw new + + decl_stmt int = int > -- if == call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() else = int int long protected internal virtual protected internal virtual lock decl_stmt long = decl_stmt int decl_stmt int if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = = else = int = + public virtual public virtual lock if ! throw new if == throw new return lock return new < int lock decl_stmt int = foreach ? in += int return public virtual public virtual lock return SnapshotDeletionPolicy public public lock decl_stmt Lucene.Net.Index.SnapshotDeletionPolicy = = = = new < = new < ? return decl IList private < private < private < < < where where decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new return public override public override return + + public override public override lock if ! return return return return return return return