Lucene.Net.Analysis System.Diagnostics using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Documents using Lucene.Net.Search using Lucene.Net.Util using System using class Lucene.Net.Analysis.NumericTokenStream super super TokenStream string bool IPositionIncrementAttribute INumericTermAttribute int string ITypeAttribute int private private = < = < = < var public override public override public override < decl_stmt var = typeof if typeof throw new return < return public public == || == if == else int public public return += return & ~ << - public public = = = = public override public override public override public override typeof typeof typeof typeof var public override public override decl_stmt var = call var.Init() call var.Init() call var.Init() call var.Init() call var.Init() public public call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) = - return public public call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) = - return public public call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) = - return public public call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) call Lucene.Net.Analysis.INumericTermAttribute.Init(long,int,int,int) = - return public override public override if == throw new = - int public override public override if == throw new decl_stmt int = call Lucene.Net.Analysis.INumericTermAttribute.IncShift() call Lucene.Net.Analysis.INumericTermAttribute.IncShift() call Lucene.Net.Analysis.INumericTermAttribute.IncShift() call Lucene.Net.Analysis.INumericTermAttribute.IncShift() call Lucene.Net.Analysis.INumericTermAttribute.IncShift() = == : = == : return < return