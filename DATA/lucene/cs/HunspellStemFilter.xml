Lucene.Net.Analysis.Hunspell System using System.Collections.Generic using System.Linq using Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Analysis.Hunspell.HunspellStemFilter super super TokenFilter State decl Queue IPositionIncrementAttribute Boolean HunspellStemmer ITermAttribute var var var public override public override if call decl Queue.Any() call decl Queue.Any() call decl Queue.Any() call decl Queue.Any() call decl Queue.Any() decl_stmt var = call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() = call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) return if ! return decl_stmt var = call Lucene.Net.Analysis.Hunspell.HunspellStemmer.UniqueStems(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.UniqueStems(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.UniqueStems(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.UniqueStems(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.UniqueStems(String) : call Lucene.Net.Analysis.Hunspell.HunspellStemmer.Stem(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.Stem(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.Stem(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.Stem(String) call Lucene.Net.Analysis.Hunspell.HunspellStemmer.Stem(String) foreach in call decl Queue.Enqueue() call decl Queue.Enqueue() call decl Queue.Enqueue() call decl Queue.Enqueue() call decl Queue.Enqueue() if == return decl_stmt var = call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() call decl Queue.Dequeue() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) if > = return public override public override call decl Queue.Clear() call decl Queue.Clear() call decl Queue.Clear() call decl Queue.Clear() call decl Queue.Clear()