Lucene.Net.Spatial.Prefix System using System.Collections using System.Collections.Generic using System.Diagnostics using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Spatial.Prefix.Tree using Lucene.Net.Spatial.Util using Lucene.Net.Util using Spatial4n.Core.Shapes using class Lucene.Net.Spatial.Prefix.AbstractVisitingPrefixTreeFilter super super AbstractPrefixTreeFilter int var public override public override if ! return decl_stmt var = if != return return int public override public override decl_stmt int = = * + return internal virtual internal virtual != = == VNode int decl TermsEnum decl SeekStatus public virtual public virtual == if == return if = == return = new while != if != = else decl_stmt VNode = while if == goto goto if call VNode.children() call VNode.children() call VNode.children() call VNode.children() call VNode.children() call VNode.children() call VNode.children() call VNode.children() call VNode.children() = break else = = = = decl_stmt int = if > ! else if < decl_stmt SeekStatus = if == break = if == continue decl_stmt bool = if = == break if return Cell decl IEnumerator bool private private != decl_stmt Lucene.Net.Spatial.Prefix.Tree.Cell = if >= throw new if && != = if == && if = == return decl_stmt bool = >= if ! decl_stmt System.Collections.Generic.IEnumerator < = if ! call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() return = new new else protected internal virtual < protected internal virtual < return int protected internal virtual protected internal virtual for != && = = decl_stmt int = if > continue if == || protected internal virtual protected internal virtual protected internal virtual protected internal virtual public public public public return public public != return return