Lucene.Net.Facet.Taxonomy System using System.IO using System.Threading using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Documents.Document Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter Lucene.Net.Index.AtomicReaderContext Lucene.Net.Index.DirectoryReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Store.Directory Lucene.Net.Util.IOUtils class attribute Lucene.Net.Facet.Taxonomy.TestCachedOrdinalsReader super super FacetTestCase Document decl Store decl Directory FacetsConfig var var decl Store IndexWriterConfig decl Directory CachedOrdinalsReader IndexWriter public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt var = new decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt Lucene.Net.Documents.Document = new call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() = new call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call decl Directory.AddDocument() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() call IndexWriter.Build() decl_stmt var = decl_stmt Lucene.Net.Facet.Taxonomy.CachedOrdinalsReader = new new decl_stmt Lucene.Net.Support.ThreadClass = new for = < ++ = new + decl_stmt long = foreach in if == = call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() else call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() call Document.RamBytesUsed() public override public override foreach in try catch throw new