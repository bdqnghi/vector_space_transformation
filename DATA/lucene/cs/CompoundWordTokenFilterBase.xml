Lucene.Net.Analysis.Compound System using System.Collections.Generic using Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Analysis.Compound.CompoundWordTokenFilterBase super super TokenFilter int int int CharArraySet IPositionIncrementAttribute int Token int decl LinkedList int ITermAttribute IPayloadAttribute IFlagsAttribute IOffsetAttribute ITypeAttribute bool CharArraySet public static < public static < decl_stmt Lucene.Net.Analysis.CharArraySet = new return private private call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.SetTermBuffer(System,String,int,int) = = call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.IOffsetAttribute.SetOffset(int,int) = = public sealed override public sealed override if > call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() return if == return call Token.SetTermBuffer() call Token.SetTermBuffer() call Token.SetTermBuffer() call Token.SetTermBuffer() call Token.SetTermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermBuffer() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() call Lucene.Net.Analysis.Tokenattributes.ITermAttribute.TermLength() = = = = = = if > call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() return else return protected static protected static < < foreach in decl char protected static protected static decl_stmt char = new for = < ++ = return int Token protected protected decl_stmt int = + decl_stmt Lucene.Net.Analysis.Token = + = return protected protected call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() if < return public override public override call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear()