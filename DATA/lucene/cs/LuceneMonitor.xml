Lucene.Net.Distributed.Operations System using System.Collections using System.ComponentModel using System.Configuration using System.Data using System.Diagnostics using System.Net using System.Net.Sockets using System.Runtime.Remoting using System.Runtime.Remoting.Channels using System.ServiceProcess using System.Threading using log4net.Core using class Lucene.Net.Distributed.Operations.LuceneMonitor super decl Container ServiceController decl ComponentModel string Thread decl System int bool decl System static static decl_stmt System.ServiceProcess.ServiceBase = new new private private = new = protected override protected override if if != call decl System.Dispose() call decl System.Dispose() call decl System.Dispose() call decl System.Dispose() call decl System.Dispose() ThreadStart protected override protected override decl_stmt ThreadStart = new = new call decl Container.Start() call decl Container.Start() call decl Container.Start() call decl Container.Start() call decl Container.Start() private private private private if == if call string.Info() call string.Info() call string.Info() call string.Info() call string.Info() else if == if call string.Warn() call string.Warn() call string.Warn() call string.Warn() call string.Warn() private private if == if call string.Error() call string.Error() call string.Error() call string.Error() call string.Error() private private + = = != : = != : = != : + + + + + while private private try call decl ComponentModel.Refresh() call decl ComponentModel.Refresh() call decl ComponentModel.Refresh() call decl ComponentModel.Refresh() call decl ComponentModel.Refresh() if call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.WaitForStatus() call decl ComponentModel.WaitForStatus() call decl ComponentModel.WaitForStatus() call decl ComponentModel.WaitForStatus() call decl ComponentModel.WaitForStatus() if call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() call decl ComponentModel.Status() foreach in call decl ComponentModel.Start() call decl ComponentModel.Start() call decl ComponentModel.Start() call decl ComponentModel.Start() call decl ComponentModel.Start() + catch + + + protected override protected override =