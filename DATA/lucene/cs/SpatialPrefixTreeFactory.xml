Lucene.Net.Spatial.Prefix.Tree System using System.Collections.Generic using Spatial4n.Core.Context using Spatial4n.Core.Distance using class Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory int string double decl IDictionary SpatialContext string string SpatialPrefixTreeFactory Type string public static public static < decl_stmt Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory decl_stmt string = if == = call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() : if = new else if = new else try decl_stmt System.Type = = catch throw new call Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.Init(IDictionary,SpatialContext) call Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.Init(IDictionary,SpatialContext) call Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.Init(IDictionary,SpatialContext) call Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.Init(IDictionary,SpatialContext) call Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTreeFactory.Init(IDictionary,SpatialContext) return call SpatialPrefixTreeFactory.NewSPT() call SpatialPrefixTreeFactory.NewSPT() call SpatialPrefixTreeFactory.NewSPT() call SpatialPrefixTreeFactory.NewSPT() call SpatialPrefixTreeFactory.NewSPT() protected internal virtual protected internal virtual < = = string string double protected internal virtual protected internal virtual decl_stmt string = if != = return decl_stmt double decl_stmt string = if == if ! call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() call SpatialContext.IsGeo() return = else = =