Lucene.Net.Analysis System using Lucene.Net.Attributes using Lucene.Net.Documents using Lucene.Net.Index using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using System.IO using Lucene.Net.Index.AtomicReader Lucene.Net.Util.Automaton.Automaton Lucene.Net.Util.Automaton.AutomatonTestUtil Lucene.Net.Util.Automaton.BasicAutomata Lucene.Net.Util.Automaton.BasicOperations Lucene.Net.Util.BytesRef Lucene.Net.Util.Automaton.CharacterRunAutomaton Lucene.Net.Index.DocsAndPositionsEnum Documents.Document Field Lucene.Net.Index.Fields FieldType Lucene.Net.Util.IOUtils Lucene.Net.Index.RandomIndexWriter Lucene.Net.Util.Automaton.RegExp Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.TestUtil class attribute Lucene.Net.Analysis.TestMockAnalyzer super super BaseTokenStreamTestCase Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new new new new Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new new new new Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new new new new new Analyzer var public virtual public virtual decl_stmt var = new new decl_stmt Lucene.Net.Analysis.Analyzer = new new new new Analyzer CharacterRunAutomaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new new decl_stmt Lucene.Net.Analysis.Analyzer = new new new new call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new new new new new new int Analyzer CharacterRunAutomaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new new decl_stmt Lucene.Net.Analysis.Analyzer = new new new new call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new new new new new new int Analyzer CharacterRunAutomaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new new decl_stmt Lucene.Net.Analysis.Analyzer = new new new new new new new Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new new new Analyzer CharacterRunAutomaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new decl_stmt Lucene.Net.Analysis.Analyzer = new new new Analyzer CharacterRunAutomaton public virtual public virtual decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new new decl_stmt Lucene.Net.Analysis.Analyzer = new new new Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new new new new new int call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new new new new new int Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new Exception TokenStream string Analyzer public virtual public virtual decl_stmt string = decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt System.Exception = decl_stmt Lucene.Net.Analysis.TokenStream = call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) call Lucene.Net.Analysis.Analyzer.TokenStream(string,TextReader) new try call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() while call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() catch = finally new public virtual public virtual new int int bool CharacterRunAutomaton Analyzer public virtual public virtual decl_stmt int = for = < ++ decl_stmt Lucene.Net.Util.Automaton.CharacterRunAutomaton = new decl_stmt bool = decl_stmt int = decl_stmt Lucene.Net.Analysis.Analyzer = new call Lucene.Net.Analysis.Analyzer.Dispose() call Lucene.Net.Analysis.Analyzer.Dispose() call Lucene.Net.Analysis.Analyzer.Dispose() call Lucene.Net.Analysis.Analyzer.Dispose() call Lucene.Net.Analysis.Analyzer.Dispose() Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new TokenStream MockAnalyzer MockCharFilter Exception string int StringReader public virtual public virtual decl_stmt int = for = < ++ decl_stmt string = decl_stmt System.IO.StringReader = new decl_stmt Lucene.Net.Analysis.MockCharFilter = new decl_stmt Lucene.Net.Analysis.MockAnalyzer = new decl_stmt System.Exception = decl_stmt Lucene.Net.Analysis.TokenStream = call MockAnalyzer.TokenStream() call MockAnalyzer.TokenStream() call MockAnalyzer.TokenStream() call MockAnalyzer.TokenStream() call MockAnalyzer.TokenStream() try call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() while call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() call Lucene.Net.Analysis.TokenStream.End() catch = finally Analyzer Random Analyzer public virtual public virtual decl_stmt System.Random = decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt Lucene.Net.Analysis.Analyzer = new protected override protected override return new protected override protected override return protected override protected override return Analyzer FieldType Fields int Document RandomIndexWriter int int DocsAndPositionsEnum Analyzer AtomicReader Terms TermsEnum public virtual public virtual decl_stmt int = decl_stmt int = decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt Lucene.Net.Analysis.Analyzer = new decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.FieldType = new = = = = = = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Index.Fields = call AtomicReader.GetTermVectors() call AtomicReader.GetTermVectors() call AtomicReader.GetTermVectors() call AtomicReader.GetTermVectors() call AtomicReader.GetTermVectors() decl_stmt Lucene.Net.Index.Terms = call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() new call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() decl_stmt DocsAndPositionsEnum = call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.StartOffset() call DocsAndPositionsEnum.StartOffset() call DocsAndPositionsEnum.StartOffset() call DocsAndPositionsEnum.StartOffset() call DocsAndPositionsEnum.StartOffset() decl_stmt int = call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() + call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() + + call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call DocsAndPositionsEnum.EndOffset() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() protected override protected override return public override public override return public override public override return