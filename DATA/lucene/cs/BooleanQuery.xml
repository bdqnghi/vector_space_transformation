Lucene.Net.Search System using System.Collections.Generic using System.Linq using System.Text using Lucene.Net.Index using Lucene.Net.Support using System.Collections using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Index.IndexReader Lucene.Net.Search.BooleanClause.Occur Lucene.Net.Search.Similarities.Similarity Lucene.Net.Index.Term Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.BooleanQuery super super Query super ICloneable int decl EquatableList int bool return if < throw new = return = return public virtual public virtual new public virtual public virtual if >= throw new call decl EquatableList.Add() call decl EquatableList.Add() call decl EquatableList.Add() call decl EquatableList.Add() call decl EquatableList.Add() return call decl EquatableList.ToArray() call decl EquatableList.ToArray() call decl EquatableList.ToArray() call decl EquatableList.ToArray() call decl EquatableList.ToArray() public virtual < public virtual < return public < public < return return return return return float float decl_stmt float = for = < ++ decl_stmt float = if ! += *= * return public virtual public virtual return == : public override public override *= foreach in BooleanClause Explanation float ComplexExplanation float int int Explanation int Weight bool decl IEnumerator ComplexExplanation public override public override decl_stmt int = decl_stmt Lucene.Net.Search.ComplexExplanation = new = decl_stmt int = decl_stmt float = decl_stmt bool = decl_stmt int = decl_stmt System.Collections.Generic.IEnumerator < = for < = decl_stmt Lucene.Net.Search.Weight = call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt Lucene.Net.Search.BooleanClause = if call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() == if = decl_stmt Lucene.Net.Search.Explanation = new + call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() + call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() continue decl_stmt Lucene.Net.Search.Explanation = call Weight.Explain() call Weight.Explain() call Weight.Explain() call Weight.Explain() call Weight.Explain() if if ! call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() += ++ else decl_stmt Lucene.Net.Search.Explanation = new + call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() + call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() = if == ++ else if decl_stmt Lucene.Net.Search.Explanation = new + call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() + call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() = if = = = return else if < = = = + + return = < : = decl_stmt float = : if == return else decl_stmt Lucene.Net.Search.ComplexExplanation = new * call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() call ComplexExplanation.AddDetail() new + + + + return decl IList BooleanClause BulkScorer decl IList decl IEnumerator public override public override if || > return decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IEnumerator < = foreach in call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt Lucene.Net.Search.BooleanClause = decl_stmt Lucene.Net.Search.BulkScorer = if == if return else if return else if call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return new BooleanClause decl IEnumerator decl IList var Scorer decl IList decl IList public override public override decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IEnumerator < = foreach in call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt Lucene.Net.Search.BooleanClause = decl_stmt Lucene.Net.Search.Scorer = if == if return else if call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else if call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() if == && == return else if < return if == && == decl_stmt float = : return new call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() if == && == && <= && > decl_stmt var = new + for = < ++ = : return new call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() return new public override public override if > return foreach in if return return public override public override return new Query BooleanClause BooleanQuery public override public override if == && == decl_stmt Lucene.Net.Search.BooleanClause = if ! decl_stmt Lucene.Net.Search.Query = call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() if != if == = call Lucene.Net.Search.Query.Clone() call Lucene.Net.Search.Query.Clone() call Lucene.Net.Search.Query.Clone() call Lucene.Net.Search.Query.Clone() call Lucene.Net.Search.Query.Clone() = * return decl_stmt Lucene.Net.Search.BooleanQuery = for = < ++ decl_stmt Lucene.Net.Search.BooleanClause = decl_stmt Lucene.Net.Search.Query = call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() call BooleanClause.Query() if != if == = = new if != return else return public override public override < foreach in if != BooleanQuery public override public override decl_stmt Lucene.Net.Search.BooleanQuery = = < return StringBuilder bool BooleanClause Query public override public override decl_stmt System.Text.StringBuilder = new decl_stmt bool = != || > if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) for = < ++ decl_stmt Lucene.Net.Search.BooleanClause = if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt Lucene.Net.Search.Query = if != if is call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) BooleanQuery public override public override if ! is return decl_stmt Lucene.Net.Search.BooleanQuery = return == && && == && == public override public override return ^ == : call decl EquatableList.First() call decl EquatableList.First() call decl EquatableList.First() call decl EquatableList.First() call decl EquatableList.First() call decl EquatableList.Last() call decl EquatableList.Last() call decl EquatableList.Last() call decl EquatableList.Last() call decl EquatableList.Last() + + :