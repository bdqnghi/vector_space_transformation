Lucene.Net.Util Lucene.Net.Analysis.Tokenattributes using System using System.Collections.Generic using System.Diagnostics using System.Linq using System.IO using Lucene.Net.Analysis.Analyzer Lucene.Net.Search.BooleanClause Lucene.Net.Search.BooleanQuery Lucene.Net.Analysis.CachingTokenFilter Lucene.Net.Search.MultiPhraseQuery Lucene.Net.Search.PhraseQuery Lucene.Net.Search.Query Lucene.Net.Index.Term Lucene.Net.Search.TermQuery Lucene.Net.Analysis.TokenStream class Lucene.Net.Util.QueryBuilder Analyzer bool public virtual public virtual return public virtual public virtual if != && != throw new return public virtual public virtual return public virtual public virtual return Query BooleanQuery public virtual public virtual if || < || || throw new if == return decl_stmt Lucene.Net.Search.Query = if is decl_stmt Lucene.Net.Search.BooleanQuery = = * call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() call Lucene.Net.Search.BooleanQuery.GetClauses() return return = return = int PhraseQuery bool CachingTokenFilter IPositionIncrementAttribute BytesRef Query int bool TokenStream ITermToBytesRefAttribute BooleanQuery MultiPhraseQuery int int bool decl IList Query protected internal protected internal == || == decl_stmt Lucene.Net.Analysis.CachingTokenFilter = decl_stmt Lucene.Net.Analysis.Tokenattributes.ITermToBytesRefAttribute = decl_stmt Lucene.Net.Analysis.Tokenattributes.IPositionIncrementAttribute = decl_stmt int = decl_stmt int = decl_stmt bool = decl_stmt bool = decl_stmt Lucene.Net.Analysis.TokenStream = try = new call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() call Lucene.Net.Analysis.TokenStream.Reset() = new call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() if < = < if < = < if != try = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() while ++ decl_stmt int = != : if != += else = = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() catch catch throw new finally call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() call CachingTokenFilter.Reset() decl_stmt Lucene.Net.Util.BytesRef = == : if == return else if == try decl_stmt bool = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() == call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() catch return new else if || ! if == || ! if == decl_stmt Lucene.Net.Search.BooleanQuery = for = < ++ try decl_stmt bool = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() == call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() catch decl_stmt Lucene.Net.Search.Query = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) return else decl_stmt Lucene.Net.Search.BooleanQuery = decl_stmt Lucene.Net.Search.Query = for = < ++ try decl_stmt bool = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() == call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() catch if != && == if ! is decl_stmt Lucene.Net.Search.Query = = new else if != call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) return else decl_stmt Lucene.Net.Search.MultiPhraseQuery = = decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = - for = < ++ decl_stmt int = try decl_stmt bool = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() == call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() if != = catch if > && > if call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() else call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() call decl IList.Clear() += call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new if call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() else call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() return else decl_stmt Lucene.Net.Search.PhraseQuery = = decl_stmt int = - for = < ++ decl_stmt int = try decl_stmt bool = call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() call Lucene.Net.Analysis.CachingTokenFilter.IncrementToken() == call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() call ITermToBytesRefAttribute.FillBytesRef() if != = catch if += call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) new else call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) new return protected internal virtual protected internal virtual return new protected internal virtual protected internal virtual return new protected internal virtual protected internal virtual return new protected internal virtual protected internal virtual return new