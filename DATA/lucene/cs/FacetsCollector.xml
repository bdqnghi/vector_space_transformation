Lucene.Net.Facet System using System.Collections.Generic using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Util using class Lucene.Net.Facet.FacetsCollector super super Collector int AtomicReaderContext Docs bool decl IList Scorer decl float protected virtual protected virtual return new public override public override return return if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new = = = return public override sealed public override sealed return == decl float public override sealed public override sealed call Docs.AddDoc() call Docs.AddDoc() call Docs.AddDoc() call Docs.AddDoc() call Docs.AddDoc() if if >= decl_stmt float = new + = = call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() ++ = if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new = = if = new = public static public static return public static public static return public static public static if == throw new return public static public static if == throw new return public virtual public virtual return public static public static return public static public static if == throw new return public static public static if == throw new return bool int var private static private static if != = new decl_stmt int = if == = = if != && >= throw new + + + if != if != && ! is throw new + decl_stmt bool const const = decl_stmt var = return call var.TopDocs() call var.TopDocs() call var.TopDocs() call var.TopDocs() call var.TopDocs() else decl_stmt var = return call var.TopDocs() call var.TopDocs() call var.TopDocs() call var.TopDocs() call var.TopDocs()