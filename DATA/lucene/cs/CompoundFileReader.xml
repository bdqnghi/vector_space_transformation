Lucene.Net.Index System.Linq using Lucene.Net.Support using Lucene.Net.Store.BufferedIndexInput Lucene.Net.Store.Directory Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Store.Lock class Lucene.Net.Index.CompoundFileReader super super Directory decl String bool int decl System IndexInput Directory return return protected override protected override lock if return if if != call IndexInput.Clear() call IndexInput.Clear() call IndexInput.Clear() call IndexInput.Clear() call IndexInput.Clear() if != call decl String.Close() call decl String.Close() call decl String.Close() call decl String.Close() call decl String.Close() = = = public override public override lock return FileEntry public override public override lock if == throw new decl_stmt FileEntry = if == throw new + + return new public override public override return call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() call IndexInput.Keys() public override public override return call IndexInput.ContainsKey() call IndexInput.ContainsKey() call IndexInput.ContainsKey() call IndexInput.ContainsKey() call IndexInput.ContainsKey() public override public override return call Directory.FileModified() call Directory.FileModified() call Directory.FileModified() call Directory.FileModified() call Directory.FileModified() public override public override call Directory.TouchFile() call Directory.TouchFile() call Directory.TouchFile() call Directory.TouchFile() call Directory.TouchFile() public override public override throw new public public throw new FileEntry public override public override decl_stmt FileEntry = if == throw new + + return public override public override throw new public override public override throw new var public override public override decl_stmt var = = = = return long public override public override decl_stmt long = if + > throw new + public override public override protected override protected override if return if if != = public override public override return return