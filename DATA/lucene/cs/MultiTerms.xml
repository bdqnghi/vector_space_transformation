Lucene.Net.Index System.Collections.Generic using System.Diagnostics using System.Linq using System using Lucene.Net.Util.BytesRef Lucene.Net.Util.Automaton.CompiledAutomaton class Lucene.Net.Index.MultiTerms super super Terms decl IComparer decl ReaderSlice decl Terms bool bool bool bool decl IList TermsEnum public override public override decl_stmt System.Collections.Generic.IList < = new < for = < ++ decl_stmt Lucene.Net.Index.TermsEnum = if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new if > return new call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() else return decl IList TermsEnum public override public override decl_stmt System.Collections.Generic.IList < = new < for = < ++ decl_stmt Lucene.Net.Index.TermsEnum = if != call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new if > return new call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() else return public override public override return - long long decl_stmt long = foreach in decl_stmt long = if == - return - += return long long decl_stmt long = foreach in decl_stmt long = if == - return - += return int int decl_stmt int = foreach in decl_stmt int = if == - return - += return return public override public override return public override public override return public override public override return public override public override return