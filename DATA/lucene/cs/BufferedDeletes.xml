Lucene.Net.Index System.Collections.Generic using Lucene.Net.Search using Lucene.Net.Support using class Lucene.Net.Index.BufferedDeletes decl IDictionary long bool decl List decl IDictionary int internal internal return internal internal if > = internal virtual internal virtual return + + internal virtual internal virtual += += foreach < in = foreach < in = call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() internal virtual internal virtual call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() = = internal virtual internal virtual += internal virtual internal virtual return > || > || > decl List int decl HashMap decl IDictionary internal virtual internal virtual lock decl_stmt SpellChecker.Net.Search.Spell.IDictionary < if > if = new < else = new < foreach in decl_stmt Num = = new call int.GetNum() call int.GetNum() call int.GetNum() call int.GetNum() call int.GetNum() else = decl_stmt System.Collections.Generic.List < if > = new < foreach in call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else = decl_stmt Lucene.Net.Support.HashMap < if > = new < foreach in decl_stmt int = = else = if != = if != = if != =