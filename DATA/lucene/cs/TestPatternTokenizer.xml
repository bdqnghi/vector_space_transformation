org.apache.lucene.analysis.pattern System.Collections.Generic using System.Text using org.apache.lucene.analysis.Analyzer.TokenStreamComponents org.apache.lucene.analysis.charfilter.MappingCharFilter org.apache.lucene.analysis.charfilter.NormalizeCharMap org.apache.lucene.analysis.path.PathHierarchyTokenizer org.apache.lucene.analysis.tokenattributes.CharTermAttribute class org.apache.lucene.analysis.pattern.TestPatternTokenizer super super BaseTokenStreamTestCase string string decl string TokenStream public virtual public virtual decl_stmt string = decl_stmt string = new new new new new new new new new foreach in decl_stmt Lucene.Net.Analysis.TokenStream = new new decl_stmt string = + + + NormalizeCharMap CharFilter decl NormalizeCharMap decl Builder decl IList string public virtual public virtual decl_stmt string const const = decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl_stmt Lucene.Net.Util.Fst.Builder = new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() decl_stmt Lucene.Net.Analysis.CharFilters.NormalizeCharMap = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() decl_stmt Lucene.Net.Analysis.CharFilter = new new decl_stmt Lucene.Net.Analysis.TokenStream = new - new new new = new new = new new new new StringBuilder CharTermAttribute private static private static decl_stmt System.Text.StringBuilder = new decl_stmt Lucene.Net.Analysis.Tokenattributes.CharTermAttribute = typeof call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() while if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.ToString() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.ToString() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.ToString() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.ToString() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.ToString() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() call CharTermAttribute.setEmpty() return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) Analyzer Analyzer public virtual public virtual decl_stmt Lucene.Net.Analysis.Analyzer = new * decl_stmt Lucene.Net.Analysis.Analyzer = new * Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new - return new Tokenizer protected internal override protected internal override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new