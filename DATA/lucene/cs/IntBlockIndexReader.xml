Lucene.Net.Codecs.Intblock Sep using Store using System.Diagnostics using class Lucene.Net.Codecs.Intblock.IntBlockIndexReader super super IntIndexInputReader IndexInput long IBlockReader bool int int int long decl int internal virtual internal virtual = = >= + = internal internal if ! return if != call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() = call IBlockReader.Seek() call IBlockReader.Seek() call IBlockReader.Seek() call IBlockReader.Seek() call IBlockReader.Seek() = call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() = while >= -= = = call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() = public override public override if == = = call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() call Lucene.Net.Codecs.Intblock.IBlockReader.ReadBlock() = return ++