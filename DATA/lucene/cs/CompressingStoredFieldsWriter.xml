Lucene.Net.Codecs.Compressing Lucene.Net.Codecs.Lucene40 using Lucene.Net.Index using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Util.Packed using System using System.Diagnostics using Documents.Document class Lucene.Net.Codecs.Compressing.CompressingStoredFieldsWriter super super StoredFieldsWriter int int int decl int int CompressionMode int Compressor decl int int string string GrowableByteArrayDataOutput int int CompressingStoredFieldsIndexWriter IndexOutput Directory int int string int int int int int int string protected override protected override if try finally = = int public override public override if == decl_stmt int = + = = = ++ public override public override - = if long bool decl PackedInts int private static private static > if == else decl_stmt bool = for = < ++ if != = break if else decl_stmt long = for = < ++ |= uint decl_stmt int = decl_stmt Writer = for = < ++ call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Add() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() call decl PackedInts.Finish() private private call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() private private return >= || >= decl int private private call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) decl_stmt int = for = - > -- = - - >= if >= * for = < += call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() - else call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() call Compressor.Compress() += = = float double string string sbyte long BytesRef object short int long int public override public override decl_stmt int = decl_stmt Lucene.Net.Util.BytesRef decl_stmt string decl_stmt object = object if != if is string decl_stmt string = call object.ToString() call object.ToString() call object.ToString() call object.ToString() call object.ToString() decl_stmt sbyte decl_stmt short decl_stmt int decl_stmt long decl_stmt float decl_stmt double if out || out || out = else if out = else if out = else if out = else throw new + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() else if is sbyte || is short || is int = else if is long = else if is float = else if is double = else throw new + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() = = else = if != = = else = = if == throw new + + decl_stmt long = long << | call GrowableByteArrayDataOutput.WriteVLong() call GrowableByteArrayDataOutput.WriteVLong() call GrowableByteArrayDataOutput.WriteVLong() call GrowableByteArrayDataOutput.WriteVLong() call GrowableByteArrayDataOutput.WriteVLong() if != call GrowableByteArrayDataOutput.WriteVInt() call GrowableByteArrayDataOutput.WriteVInt() call GrowableByteArrayDataOutput.WriteVInt() call GrowableByteArrayDataOutput.WriteVInt() call GrowableByteArrayDataOutput.WriteVInt() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() else if != call GrowableByteArrayDataOutput.WriteString() call GrowableByteArrayDataOutput.WriteString() call GrowableByteArrayDataOutput.WriteString() call GrowableByteArrayDataOutput.WriteString() call GrowableByteArrayDataOutput.WriteString() else if is string decl_stmt string = call object.ToString() call object.ToString() call object.ToString() call object.ToString() call object.ToString() decl_stmt sbyte decl_stmt short decl_stmt int decl_stmt long decl_stmt float decl_stmt double if out || out || out = else if out = else if out = else if out = else throw new + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() else if is sbyte || is short || is int call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() int else if is long call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() long else if is float call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() call GrowableByteArrayDataOutput.WriteInt() float else if is double call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() call GrowableByteArrayDataOutput.WriteLong() double else throw new public override public override public override public override if > else == if != throw new + + + call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.Finish(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.Finish(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.Finish(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.Finish(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.Finish(int,long) == SegmentReader int int Bits decl ChunkIterator Document int decl CompressingStoredFieldsReader StoredFieldsReader CompressingStoredFieldsReader int decl int public override public override decl_stmt int = decl_stmt int = foreach in decl_stmt Lucene.Net.Index.SegmentReader = ++ decl_stmt Lucene.Net.Codecs.Compressing.CompressingStoredFieldsReader = if != decl_stmt Lucene.Net.Codecs.StoredFieldsReader = if != && is = decl_stmt int = decl_stmt Lucene.Net.Spatial.Util.Bits = if == || != || != || != for = < = + decl_stmt Lucene.Net.Documents.Document = ++ else decl_stmt int = if < decl_stmt ChunkIterator = call CompressingStoredFieldsReader.GetChunkIterator() call CompressingStoredFieldsReader.GetChunkIterator() call CompressingStoredFieldsReader.GetChunkIterator() call CompressingStoredFieldsReader.GetChunkIterator() call CompressingStoredFieldsReader.GetChunkIterator() decl_stmt int = new do call decl CompressingStoredFieldsReader.Next() call decl CompressingStoredFieldsReader.Next() call decl CompressingStoredFieldsReader.Next() call decl CompressingStoredFieldsReader.Next() call decl CompressingStoredFieldsReader.Next() if < = new for = < ++ = - + - if == && - < && - + - >= && + == + == call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call Lucene.Net.Codecs.Compressing.CompressingStoredFieldsIndexWriter.WriteIndex(int,long) call decl CompressingStoredFieldsReader.CopyCompressedData() call decl CompressingStoredFieldsReader.CopyCompressedData() call decl CompressingStoredFieldsReader.CopyCompressedData() call decl CompressingStoredFieldsReader.CopyCompressedData() call decl CompressingStoredFieldsReader.CopyCompressedData() += = + += * else call decl CompressingStoredFieldsReader.Decompress() call decl CompressingStoredFieldsReader.Decompress() call decl CompressingStoredFieldsReader.Decompress() call decl CompressingStoredFieldsReader.Decompress() call decl CompressingStoredFieldsReader.Decompress() if - + - != throw new + - + - + + for < + = + decl_stmt int = - call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() call GrowableByteArrayDataOutput.WriteBytes() + ++ < call decl CompressingStoredFieldsReader.CheckIntegrity() call decl CompressingStoredFieldsReader.CheckIntegrity() call decl CompressingStoredFieldsReader.CheckIntegrity() call decl CompressingStoredFieldsReader.CheckIntegrity() call decl CompressingStoredFieldsReader.CheckIntegrity() return private static private static if == return while < && ! ++ return private static private static if == return while < && ++ return