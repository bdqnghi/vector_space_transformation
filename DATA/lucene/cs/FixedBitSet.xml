Lucene.Net.Util System using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Search.DocIdSet Lucene.Net.Search.DocIdSetIterator class Lucene.Net.Util.FixedBitSet super super DocIdSet super Bits int decl long int int int long public override public override if == || ++ >= return = decl_stmt int = >> decl_stmt int = & decl_stmt long = >> if != return = + while ++ < = if != return = << + return = public override public override return public override public override return int int long public override public override if == || >= return = decl_stmt int = >> decl_stmt int = & decl_stmt long = >> if != return = + while ++ < = if != return = << + return = decl long int public static public static if < call decl long.Length() call decl long.Length() call decl long.Length() call decl long.Length() call decl long.Length() return else decl_stmt int = decl_stmt long = if >= = + return new << int public static public static decl_stmt int = uint >> if & != ++ return public static public static return long public static public static decl_stmt long = if < += - else if > += - return long public static public static decl_stmt long = if > += - return public override public override return new public override public override return public public return return return public public return int int int long public public >= && < + + + decl_stmt int = >> decl_stmt int = & decl_stmt long = << return & != int long int public public >= && < + + + decl_stmt int = >> decl_stmt int = & decl_stmt long = << |= int long bool int public public >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << decl_stmt bool = & != |= return int long int public public >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << &= ~ int long bool int public public >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << decl_stmt bool = & != &= ~ return int int long public public >= && < + + + decl_stmt int = >> decl_stmt int = & decl_stmt long = >> if != return + while ++ < = if != return << + return - int int long public public >= && < + + + decl_stmt int = >> decl_stmt int = & decl_stmt long = << - if != return << + - while -- >= = if != return << + - return - FixedBitSetIterator int OpenBitSetIterator public public if is && == - decl_stmt Lucene.Net.Util.OpenBitSetIterator = call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) else if is && == - decl_stmt FixedBitSetIterator = call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() else decl_stmt int while = < public public decl long int private private <= + + + decl_stmt long = decl_stmt int = while -- >= |= decl long int decl long public public <= + + + decl_stmt long = decl_stmt long = decl_stmt int = while -- >= ^= int public public decl_stmt int while = < + FixedBitSetIterator OpenBitSetIterator int public public if is && == - decl_stmt Lucene.Net.Util.OpenBitSetIterator = call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) else if is && == - decl_stmt FixedBitSetIterator = call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() else if == return decl_stmt int = while != - && = < ++ = < : - if != - int public public decl_stmt int = while -- >= if & != return return public public decl long int private private decl_stmt long = decl_stmt int = while -- >= &= if > FixedBitSetIterator int OpenBitSetIterator public public if is && == - decl_stmt Lucene.Net.Util.OpenBitSetIterator = call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) call Lucene.Net.Util.OpenBitSetIterator.Advance(int) else if is && == - decl_stmt FixedBitSetIterator = call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() call FixedBitSetIterator.Advance() else decl_stmt int while = < public public decl long int private private decl_stmt long = decl_stmt int = while -- >= &= ~ int long int long public public >= && < >= && <= if <= return decl_stmt int = >> decl_stmt int = - >> decl_stmt long = - << decl_stmt long = unchecked ulong - >> - if == ^= & return ^= for = + < ++ = ~ ^= int long int long public public >= && < >= && <= if <= return decl_stmt int = >> decl_stmt int = - >> decl_stmt long = - << decl_stmt long = unchecked ulong - >> - if == |= & return |= + - |= int long int long public public >= && < + + + >= && <= + + + if <= return decl_stmt int = >> decl_stmt int = - >> decl_stmt long = - << decl_stmt long = - << if & == = = ~ if == &= | return &= + &= decl long public public decl_stmt long = new return new var public override public override if == return if ! is return decl_stmt var = if != call var.Length() call var.Length() call var.Length() call var.Length() call var.Length() return return long public override public override decl_stmt long = for = -- >= ^= = << | ulong >> return >> ^ + unchecked int