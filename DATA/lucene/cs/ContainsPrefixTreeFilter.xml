Lucene.Net.Spatial.Prefix System using System.Collections.Generic using Lucene.Net.Spatial.Queries using Lucene.Net.Spatial.Util using Spatial4n.Core.Shapes using Lucene.Net.Index using Lucene.Net.Search using Lucene.Net.Spatial.Prefix using Lucene.Net.Spatial.Prefix.Tree using Lucene.Net.Util using class Lucene.Net.Spatial.Prefix.ContainsPrefixTreeFilter super super AbstractPrefixTreeFilter public override public override return new decl ICollection SmallDocSet SmallDocSet internal internal if == return decl_stmt SmallDocSet = decl_stmt SmallDocSet = decl_stmt System.Collections.Generic.ICollection < = foreach in if ! = else if == = else if == = else = if == break = if != if == return return call SmallDocSet.Union() call SmallDocSet.Union() call SmallDocSet.Union() call SmallDocSet.Union() call SmallDocSet.Union() return private private new > = = return <= private private new return BytesRef private private new decl_stmt Lucene.Net.Util.BytesRef = if == = return = call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() call BytesRef.bytes() if == && return else return decl ContainsPrefixTreeFilter decl SmallDocSet int private private decl_stmt SmallDocSet = = decl_stmt int while = != if == decl_stmt int = if <= = = new call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() return public virtual public virtual if > = return public virtual public virtual return decl SmallDocSet decl ContainsPrefixTreeFilter public virtual public virtual decl_stmt SmallDocSet decl_stmt SmallDocSet if > = = else = = foreach in if == continue call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() call decl ContainsPrefixTreeFilter.Set() return return > : decl int int int public override public override if == return decl_stmt int = decl_stmt int = new foreach in if == continue ++ = == decl_stmt int = return new if >= && < return else return - public override public override if ++ < return return public override public override return return return