Lucene.Net.Index System using Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Util.BytesRef Lucene.Net.Search.CollectionStatistics Lucene.Net.Search.Similarities.DefaultSimilarity Lucene.Net.Store.Directory Documents.Document Field Lucene.Net.Util.LineFileDocs Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Search.Similarities.PerFieldSimilarityWrapper Lucene.Net.Search.Similarities.Similarity Lucene.Net.Search.TermStatistics Lucene.Net.Util.TestUtil TextField Lucene.Net.Search.Similarities.TFIDFSimilarity class attribute Lucene.Net.Index.TestNorms super super LuceneTestCase string public override public override return long public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return Field Document RandomIndexWriter MockAnalyzer IndexReader NumericDocValues Field IndexWriterConfig NumericDocValues Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Analysis.MockAnalyzer = new decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) new decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) for = < ++ = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt NumericDocValues = for = < ++ call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() decl_stmt NumericDocValues = for = < ++ call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int Document AtomicReader NumericDocValues Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt NumericDocValues = call AtomicReader.GetNormValues() call AtomicReader.GetNormValues() call AtomicReader.GetNormValues() call AtomicReader.GetNormValues() call AtomicReader.GetNormValues() for = < ++ decl_stmt Lucene.Net.Documents.Document = call AtomicReader.Document() call AtomicReader.Document() call AtomicReader.Document() call AtomicReader.Document() call AtomicReader.Document() decl_stmt int = call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call Lucene.Net.Documents.Document.Get(string) call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() & call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call AtomicReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int Random Field LineFileDocs RandomIndexWriter MockAnalyzer Document int Similarity IndexWriterConfig public virtual public virtual decl_stmt System.Random = decl_stmt Lucene.Net.Analysis.MockAnalyzer = new = decl_stmt Lucene.Net.Index.IndexWriterConfig = decl_stmt Lucene.Net.Search.Similarity = new call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) call Lucene.Net.Index.IndexWriterConfig.SetSimilarity(Similarity) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Util.LineFileDocs = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() call Lucene.Net.Util.LineFileDocs.NextDoc() decl_stmt int = decl_stmt Lucene.Net.Documents.Field = new + = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) if call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Commit() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() call Lucene.Net.Util.LineFileDocs.Dispose() public override public override return public override public override if return new else return public override public override return int public override public override decl_stmt int = int return sbyte public override public override params params params throw new public override public override throw new