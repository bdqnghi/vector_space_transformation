Lucene.Net.Support System using System.Collections using System.Collections.Generic using class attribute super super ICloneable int public public if == throw new = + foreach in decl Generic decl Collections decl Collections decl System decl Generic decl System private static ? private static ? < < decl_stmt Generic < = as < decl_stmt Generic < = as < decl_stmt System.Collections.Generic.ICollection = as decl_stmt System.Collections.Generic.ICollection = as decl_stmt int ? = != : != : int decl_stmt int ? = != : != : int if == || == return return == decl System bool decl Collections decl Generic private static private static < < if == && == return if == || == return decl_stmt bool ? = if != && ! return decl_stmt Generic < = < < decl_stmt Generic < = using as foreach in if ! call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() return decl_stmt bool = call decl System.Equals() call decl System.Equals() call decl System.Equals() call decl System.Equals() call decl System.Equals() if ! return if ! call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() call decl Collections.MoveNext() return return public public < return public override public override return as < public override public override return public public return new <