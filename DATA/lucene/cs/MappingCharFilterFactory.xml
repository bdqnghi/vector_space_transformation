Lucene.Net.Analysis.CharFilters System.Collections.Generic using System.IO using Lucene.Net.Analysis.Util using Lucene.Net.Support using org.apache.lucene.analysis.charfilter using org.apache.lucene.analysis.util using class Lucene.Net.Analysis.CharFilters.MappingCharFilterFactory super super CharFilterFactory super ResourceLoaderAware super MultiTermAwareComponent decl char Pattern string NormalizeCharMap decl IList decl NormalizeCharMap File decl IList decl IList public virtual public virtual if != decl_stmt System.Collections.Generic.IList < = decl_stmt System.IO.File = new if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() = else decl_stmt System.Collections.Generic.IList < = = new <> foreach in decl_stmt System.Collections.Generic.IList < = call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() decl_stmt Lucene.Net.Util.Fst.Builder = new = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() if == = public override public override return == : new Matcher protected internal virtual protected internal virtual < foreach in decl_stmt Matcher = call Pattern.matcher() call Pattern.matcher() call Pattern.matcher() call Pattern.matcher() call Pattern.matcher() if ! call Matcher.find() call Matcher.find() call Matcher.find() call Matcher.find() call Matcher.find() throw new + + + call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() call Matcher.group() char int int int protected internal virtual protected internal virtual decl_stmt int = decl_stmt int = decl_stmt int = while < decl_stmt char = ++ if == if >= throw new + + = ++ switch case = break case = break case = break case = break case = break case = break case = break case if + >= throw new + + = char += break ++ = return new return