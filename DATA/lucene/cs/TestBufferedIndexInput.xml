Lucene.Net.Store Lucene.Net.Documents using Lucene.Net.Support using NUnit.Framework using System using System.Collections.Generic using System.IO using Lucene.Net.Util.ArrayUtil Lucene.Net.Index.DirectoryReader Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Search.IndexSearcher Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Search.ScoreDoc Lucene.Net.Index.Term Lucene.Net.Search.TermQuery Lucene.Net.Util.TestUtil class attribute Lucene.Net.Store.TestBufferedIndexInput super super LuceneTestCase decl byte long Stream private static private static decl_stmt System.IO.Stream = try = new for = < ++ call System.IO.Stream.WriteByte(byte) call System.IO.Stream.WriteByte(byte) call System.IO.Stream.WriteByte(byte) call System.IO.Stream.WriteByte(byte) call System.IO.Stream.WriteByte(byte) call System.IO.Stream.Flush() call System.IO.Stream.Flush() call System.IO.Stream.Flush() call System.IO.Stream.Flush() call System.IO.Stream.Flush() finally if != call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() MyBufferedIndexInput public virtual public virtual decl_stmt MyBufferedIndexInput = new for = < * ++ call MyBufferedIndexInput.ReadByte() call MyBufferedIndexInput.ReadByte() call MyBufferedIndexInput.ReadByte() call MyBufferedIndexInput.ReadByte() call MyBufferedIndexInput.ReadByte() MyBufferedIndexInput public virtual public virtual decl_stmt MyBufferedIndexInput = new private private try finally int int private private decl_stmt int = for = < * = + / + += if >= = for = < ++ decl_stmt int = + += + if >= = for = < ++ += if >= = long int private private decl_stmt int = = + decl_stmt long = - if <= return else if < = int + for = < ++ + byte + + + + + MyBufferedIndexInput int public virtual public virtual decl_stmt MyBufferedIndexInput = new int call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() decl_stmt int = int call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() call MyBufferedIndexInput.Length() - call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() try catch call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() try catch call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() call MyBufferedIndexInput.Seek() try catch private static private static return * protected override protected override for = < + ++ = ++ protected override protected override = public override public override public override public override return var var var var var var var IndexReader var public virtual public virtual decl_stmt var = decl_stmt var = new try decl_stmt var = new new new for = < ++ decl_stmt var = new call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() + call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() + call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() call var.AllIndexInputs() decl_stmt Lucene.Net.Index.IndexReader = decl_stmt var = new decl_stmt var = new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() new = decl_stmt var = decl_stmt var = call var.Search() call var.Search() call var.Search() call var.Search() call var.Search() new call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() call var.DeleteDocuments() new = = = call var.Search() call var.Search() call var.Search() call var.Search() call var.Search() new call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() = call var.Search() call var.Search() call var.Search() call var.Search() call var.Search() new new call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() = call var.Search() call var.Search() call var.Search() call var.Search() call var.Search() new call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.TweakBufferSizes() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() finally call var.Delete() call var.Delete() call var.Delete() call var.Delete() call var.Delete() int BufferedIndexInput public virtual public virtual foreach in decl_stmt Lucene.Net.Store.BufferedIndexInput = decl_stmt int = + = IndexInput public override public override decl_stmt Lucene.Net.Store.IndexInput = return public override public override return public override public override public override public override public override public override return public override public override return public override public override < public override public override return