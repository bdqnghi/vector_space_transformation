Lucene.Net.Index Apache.NMS.Util using System using System.Collections.Generic using Lucene.Net.Attributes using Lucene.Net.Documents using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using System.IO using Lucene.Net.Codecs.asserting.AssertingDocValuesFormat BinaryDocValuesField Lucene.Net.Util.Bits Lucene.Net.Util.BytesRef Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Lucene.Net.Codecs.DocValuesFormat Lucene.Net.Util.IOUtils Lucene.Net.Codecs.Lucene40.Lucene40RWCodec Lucene.Net.Codecs.Lucene41.Lucene41RWCodec Lucene.Net.Codecs.Lucene42.Lucene42RWCodec Lucene.Net.Codecs.Lucene45.Lucene45DocValuesFormat Lucene.Net.Codecs.Lucene45.Lucene45RWCodec Lucene.Net.Codecs.Lucene46.Lucene46Codec Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Analysis.MockTokenizer NumericDocValuesField SortedDocValuesField SortedSetDocValuesField Field.Store StringField Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestBinaryDocValuesUpdates super super LuceneTestCase var long internal static internal static = decl_stmt var = ++ decl_stmt long = & for = & != += = ++ |= & << return BytesRef internal static internal static decl_stmt Lucene.Net.Util.BytesRef = new while & ~ != ++ = unchecked & | = ulong >> ++ = byte return Document private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + return IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BytesRef IndexWriter BinaryDocValues IndexWriterConfig DirectoryReader AtomicReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new decl_stmt Lucene.Net.Index.DirectoryReader if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = else = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() long BinaryDocValues BytesRef IndexWriter decl long long AtomicReader IndexWriterConfig DirectoryReader long int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt int = decl_stmt long = new for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) = + call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) for = < ++ if < decl_stmt long = + * call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new + = decl_stmt Lucene.Net.Index.DirectoryReader if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = else = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ decl_stmt long = + decl_stmt long = call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() bool DirectoryReader DirectoryReader BytesRef IndexWriter BinaryDocValues IndexWriterConfig Directory BinaryDocValues public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt bool = decl_stmt Lucene.Net.Index.DirectoryReader if = else call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) = call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new if ! call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt Lucene.Net.Index.DirectoryReader = != decl_stmt Lucene.Net.Util.BytesRef = new decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = AtomicReader Bits BytesRef IndexWriter decl long decl bool BinaryDocValues IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if == call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new decl_stmt Lucene.Net.Index.DirectoryReader if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = else = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Spatial.Util.Bits = decl_stmt bool = new for = < ++ call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() decl_stmt long = new decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() AtomicReader IndexWriter IndexWriterConfig Directory DirectoryReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new decl_stmt Lucene.Net.Index.DirectoryReader if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = else = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.AtomicReader = call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() AtomicReader IndexWriter IndexWriterConfig Directory DirectoryReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new decl_stmt Lucene.Net.Index.DirectoryReader if call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = else = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.AtomicReader = call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.LiveDocs() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() SortedDocValues BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader long SortedSetDocValues Directory NumericDocValues public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new * call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt NumericDocValues = call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() call AtomicReader.GetNumericDocValues() decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Index.SortedDocValues = call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() decl_stmt Lucene.Net.Index.SortedSetDocValues = call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() call AtomicReader.GetSortedSetDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call NumericDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() new = decl_stmt long = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() if != = call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() call SortedSetDocValues.LookupOrd() * call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call BytesRef.Utf8ToString() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call SortedSetDocValues.NextOrd() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new if == call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues Bits Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ if == call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() else decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues Bits Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexWriter IndexWriterConfig Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) try call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new catch try call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new catch call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() SortedDocValues BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Index.SortedDocValues = call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() call AtomicReader.GetSortedDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() call SortedDocValues.Get() new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int Random int BinaryDocValues Document IndexWriter long AtomicReader BytesRef IndexWriterConfig DirectoryReader int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt System.Random = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() decl_stmt int = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new - decl_stmt int = for = < ++ call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.RemoveField(string) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt long = + call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) else if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = new call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) decl_stmt Lucene.Net.Index.DirectoryReader if call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) = else = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryReader BytesRef Random string IndexWriterConfig bool int IndexWriter BinaryDocValues int DirectoryReader Bits int LogMergePolicy decl bool int int decl long int int string Document Bits AtomicReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt System.Random = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.LogMergePolicy = = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt bool = call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() decl_stmt Lucene.Net.Index.DirectoryReader if = else call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) = decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) + decl_stmt long = new decl_stmt bool = new for = < ++ = decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new for = < ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) ++ for = < ++ if ! call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new + decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) decl_stmt string = + if call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() = call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new else = call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new ++ if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new + if ! call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt Lucene.Net.Index.DirectoryReader = call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() = > decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Spatial.Util.Bits = for = < ++ decl_stmt string = + decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() decl_stmt int = for = < ++ if == || call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() if call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() + + + + + else call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() BinaryDocValues Bits Document IndexWriter DirectoryReader AtomicReader IndexWriterConfig BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call BinaryDocValues.Get() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues Document IndexWriter DirectoryReader AtomicReader IndexWriterConfig BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexWriter BinaryDocValues IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt BinaryDocValues = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() bool Document IndexWriter decl Codec IndexWriterConfig Directory public virtual public virtual decl_stmt Lucene.Net.Codecs.Codec = new new new new new decl_stmt Lucene.Net.Store.Directory = decl_stmt bool = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) = decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) = new = new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new = try call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) catch call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() finally = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues int string CountDownLatch IndexWriterConfig double IndexWriter BinaryDocValues BytesRef Bits DirectoryReader decl ThreadClass Bits int string Bits AtomicInteger Document string long AtomicReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt int = decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + decl_stmt double = decl_stmt string if group < = else if group < = else if group < = else = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new for = < ++ decl_stmt long = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + * call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt CountDownLatch = new decl_stmt Lucene.Net.Support.AtomicInteger = new decl_stmt Lucene.Net.Support.ThreadClass = new for = < ++ decl_stmt string = + decl_stmt string = + = new + foreach in call CountDownLatch.await() call CountDownLatch.await() call CountDownLatch.await() call CountDownLatch.await() call CountDownLatch.await() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = for = < ++ decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() + decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() + decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() + decl_stmt Lucene.Net.Spatial.Util.Bits = call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() call AtomicReader.GetDocsWithField() + decl_stmt Lucene.Net.Spatial.Util.Bits = for = < ++ if == || call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() if call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() * call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() long double DirectoryReader bool int Random Term DirectoryReader public override public override decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt bool = try decl_stmt System.Random = while > decl_stmt double = call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() decl_stmt Lucene.Net.Index.Term if group < = new else if group < = new else if group < = new else = new if call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() else decl_stmt long = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) * if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) new + if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < if call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() call Random.NextDouble() < if == = else decl_stmt Lucene.Net.Index.DirectoryReader = if != call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() = = catch throw new finally if != try call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() catch if throw new BinaryDocValues int IndexWriter BinaryDocValues DirectoryReader long AtomicReader int IndexWriterConfig BytesRef int Directory Term public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call int.Add() call int.Add() call int.Add() call int.Add() call int.Add() new + decl_stmt long = call int.Add() call int.Add() call int.Add() call int.Add() call int.Add() new call int.Add() call int.Add() call int.Add() call int.Add() call int.Add() new * call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt int = decl_stmt Lucene.Net.Util.BytesRef = new for = < ++ decl_stmt int = decl_stmt Lucene.Net.Index.Term = new + decl_stmt long = call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) * decl_stmt Lucene.Net.Index.DirectoryReader = foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ * call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() BinaryDocValues BinaryDocValues Document IndexWriter AtomicReader BytesRef IndexWriterConfig DirectoryReader Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) new decl_stmt Lucene.Net.Index.IndexWriter = new call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) call Lucene.Net.Index.IndexWriterConfig.SetCodec(Codec) new = new call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() call Lucene.Net.Index.IndexWriterConfig.Clone() = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt Lucene.Net.Util.BytesRef = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new public override public override return new BinaryDocValues Directory Directory DirectoryReader decl HashSet Document IndexWriter Term long AtomicReader BytesRef IndexWriterConfig DirectoryReader BinaryDocValues int int public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt int = decl_stmt int = / decl_stmt System.Collections.Generic.HashSet < = new < while < call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) if call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt long = decl_stmt Lucene.Net.Index.Term = new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) * call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Store.Directory = = new = new if call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) else decl_stmt Lucene.Net.Index.DirectoryReader = call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call Lucene.Net.Index.IndexWriter.AddIndexes(IndexReader) call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new foreach in decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() for = < ++ * call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() Document IndexWriter DirectoryReader IndexWriterConfig BytesRef int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt int = call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() call Directory.ListAll() = call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() AtomicReader Random long int BinaryDocValues int Document IndexWriter BinaryDocValues long Term int decl HashSet BytesRef IndexWriterConfig DirectoryReader int int int Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt System.Random = decl_stmt Lucene.Net.Index.IndexWriterConfig = new call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetRAMBufferSizeMB(double) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) call Lucene.Net.Index.IndexWriterConfig.SetMaxBufferedDocs(int) decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt System.Collections.Generic.HashSet < = new < while < call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = / for = < ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new for = < ++ decl_stmt long = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new + * call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() call IndexWriter.Config() / / decl_stmt int = for = < ++ decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) decl_stmt Lucene.Net.Index.Term = new decl_stmt long = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) + call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) + * call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new foreach in for = < ++ decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() + decl_stmt BinaryDocValues = call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() call AtomicReader.GetBinaryDocValues() + for = < ++ * + + + + + call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexWriter DirectoryReader IndexWriterConfig BytesRef Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt Lucene.Net.Util.BytesRef = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexWriter IndexWriterConfig Directory DirectoryReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) call Lucene.Net.Index.IndexWriter.DeleteDocuments(Term) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexWriter IndexWriterConfig Directory DirectoryReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) call Lucene.Net.Index.IndexWriter.UpdateBinaryDocValue(Term,string,BytesRef) new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = new call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call DirectoryReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()