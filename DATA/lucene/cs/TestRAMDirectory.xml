Lucene.Net.Store Lucene.Net.Documents using Lucene.Net.Support using NUnit.Framework using System using System.IO using Lucene.Net.Index.DirectoryReader Documents.Document Lucene.Net.Util.English Field Lucene.Net.Index.IndexReader Lucene.Net.Search.IndexSearcher Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer class attribute Lucene.Net.Store.TestRAMDirectory super super LuceneTestCase DirectoryInfo int int int string Document IndexWriter Directory public override public override decl_stmt string = if == throw new = new decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new new decl_stmt Lucene.Net.Documents.Document = for = < ++ = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document IndexSearcher MockDirectoryWrapper Directory IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = for = < ++ decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Search.IndexSearcher.Doc(int,StoredFieldVisitor) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) call Lucene.Net.Documents.Document.GetField(string) != call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() IndexWriter int MockDirectoryWrapper decl ThreadClass Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl_stmt Lucene.Net.Index.IndexWriter = new new new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() decl_stmt Lucene.Net.Support.ThreadClass = new for = < ++ decl_stmt int = = new for = < ++ for = < ++ call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call MockDirectoryWrapper.SizeInBytes() call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) Document public override public override for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) * + try catch throw new public override public override if != && IndexInput var IndexOutput RAMDirectory public virtual public virtual decl_stmt Lucene.Net.Store.RAMDirectory = new decl_stmt IndexOutput = call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) decl_stmt var = new call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() decl FileInfo private private decl_stmt System.IO.FileInfo = for = < ++ IndexInput var IndexOutput RAMDirectory public virtual public virtual decl_stmt Lucene.Net.Store.RAMDirectory = new decl_stmt IndexOutput = call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) call Lucene.Net.Store.RAMDirectory.CreateOutput(string,IOContext) decl_stmt var = new * call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() call IndexOutput.Dispose() decl_stmt Lucene.Net.Store.IndexInput = call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call Lucene.Net.Store.RAMDirectory.OpenInput(string,IOContext) call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() * - call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() * call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.Seek() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() * call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call IndexInput.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose() call Lucene.Net.Store.RAMDirectory.Dispose()