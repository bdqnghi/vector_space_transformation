Lucene.Net.Search.Payloads Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Documents using Lucene.Net.Analysis using NUnit.Framework using System.IO using Lucene.Net.Util.BytesRef Lucene.Net.Search.Similarities.DefaultSimilarity Lucene.Net.Store.Directory Lucene.Net.Index.DirectoryReader Documents.Document Lucene.Net.Util.English Field Lucene.Net.Index.FieldInvertState Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase Lucene.Net.Search.Spans.MultiSpansWrapper Lucene.Net.Index.RandomIndexWriter Lucene.Net.Search.Similarities.Similarity Lucene.Net.Search.Spans.Spans Lucene.Net.Search.Spans.SpanTermQuery Lucene.Net.Index.Term class attribute Lucene.Net.Search.Payloads.TestPayloadTermQuery super super LuceneTestCase IndexSearcher decl byte Similarity decl byte decl byte IndexReader Directory Tokenizer public override public override decl_stmt Lucene.Net.Analysis.Tokenizer = new return new new bool public sealed override public sealed override decl_stmt bool = if if = new else if if == = new else = new ++ return else return public override public override = Document RandomIndexWriter Field public static public static = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) + + call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() = = public static public static = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() = PayloadTermQuery TopDocs Spans ScoreDoc public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == + + + == + + for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = == + + decl_stmt Spans = != PayloadTermQuery PayloadTermQuery SpanTermQuery public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = new new call Lucene.Net.Search.Payloads.PayloadTermQuery.Equals(object) call Lucene.Net.Search.Payloads.PayloadTermQuery.Equals(object) call Lucene.Net.Search.Payloads.PayloadTermQuery.Equals(object) call Lucene.Net.Search.Payloads.PayloadTermQuery.Equals(object) call Lucene.Net.Search.Payloads.PayloadTermQuery.Equals(object) == call Lucene.Net.Search.Spans.SpanTermQuery.Equals(object) call Lucene.Net.Search.Spans.SpanTermQuery.Equals(object) call Lucene.Net.Search.Spans.SpanTermQuery.Equals(object) call Lucene.Net.Search.Spans.SpanTermQuery.Equals(object) call Lucene.Net.Search.Spans.SpanTermQuery.Equals(object) decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new int TopDocs ScoreDoc int Spans PayloadTermQuery public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == + + + == + + decl_stmt int = for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = if == ++ == + + else == + + == + + decl_stmt Spans = != decl_stmt int = while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() ++ == + + int TopDocs IndexSearcher ScoreDoc int Spans IndexReader PayloadTermQuery public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = = new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == + + + == + + decl_stmt int = for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = if == ++ == + + else == + + == + + decl_stmt Spans = != decl_stmt int = while call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() call Spans.Next() ++ call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() PayloadTermQuery TopDocs public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == + + + PayloadTermQuery TopDocs PayloadTermQuery decl int BooleanQuery BooleanClause BooleanClause public virtual public virtual decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.Payloads.PayloadTermQuery = new new new decl_stmt Lucene.Net.Search.BooleanClause = new decl_stmt Lucene.Net.Search.BooleanClause = new decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) != == + + + decl_stmt int = new = public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return public override public override return == : public virtual public virtual return