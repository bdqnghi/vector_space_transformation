Lucene.Net.Search.Spans System.Collections.Generic using System.Text using System using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Index.DocsAndPositionsEnum Lucene.Net.Index.Fields Lucene.Net.Index.Term Lucene.Net.Index.TermContext Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Index.TermState Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.Spans.SpanTermQuery super super SpanQuery Term return return public override public override < StringBuilder public override public override decl_stmt System.Text.StringBuilder = new if call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call Term.Field() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Lucene.Net.Index.Term.ToString() call Lucene.Net.Index.Term.ToString() call Lucene.Net.Index.Term.ToString() call Lucene.Net.Index.Term.ToString() call Lucene.Net.Index.Term.ToString() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int int public override public override decl_stmt int const const = decl_stmt int = = * + == : call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() call Lucene.Net.Index.Term.GetHashCode() return SpanTermQuery public override public override if == return if ! return if != return decl_stmt Lucene.Net.Search.Spans.SpanTermQuery = if == if != return else if ! call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) call Lucene.Net.Index.Term.Equals(Term) return return Terms TermsEnum Fields TermState TermContext DocsAndPositionsEnum TermsEnum public override public override < decl_stmt Lucene.Net.Index.TermContext out decl_stmt Lucene.Net.Index.TermState if == decl_stmt Lucene.Net.Index.Fields = if != decl_stmt Lucene.Net.Index.Terms = call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() call Fields.Terms() if != decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() if call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) = call Lucene.Net.Index.TermsEnum.TermState() call Lucene.Net.Index.TermsEnum.TermState() call Lucene.Net.Index.TermsEnum.TermState() call Lucene.Net.Index.TermsEnum.TermState() call Lucene.Net.Index.TermsEnum.TermState() else = else = else = else = call Lucene.Net.Index.TermContext.Get(int) call Lucene.Net.Index.TermContext.Get(int) call Lucene.Net.Index.TermContext.Get(int) call Lucene.Net.Index.TermContext.Get(int) call Lucene.Net.Index.TermContext.Get(int) if == return decl_stmt Lucene.Net.Index.TermsEnum = call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) call Lucene.Net.Index.TermsEnum.SeekExact(long) decl_stmt DocsAndPositionsEnum = call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) call Lucene.Net.Index.TermsEnum.DocsAndPositions(Bits,DocsAndPositionsEnum,int) if != return new else throw new + + + call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() +