Lucene.Net.Index System using System.Collections.Generic using System.Diagnostics using System.Globalization using Lucene.Net.Search using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Util.Bits Lucene.Net.Codecs.Codec Lucene.Net.Store.CompoundFileDirectory Lucene.Net.Store.Directory Lucene.Net.Codecs.DocValuesFormat Lucene.Net.Codecs.DocValuesProducer Lucene.Net.Index.FieldInfo.DocValuesType_e Lucene.Net.Store.IOContext Lucene.Net.Util.IOUtils Lucene.Net.Codecs.StoredFieldsReader Lucene.Net.Codecs.TermVectorsReader class Lucene.Net.Index.SegmentReader super super AtomicReader SegmentCoreReaders decl IList FieldInfos decl IDisposableThreadLocal decl IDisposableThreadLocal SegmentDocValues SegmentCommitInfo Bits decl ISet int decl IDictionary protected internal override < protected internal override < return new < protected internal override < protected internal override < return new < decl IDictionary long DocValuesFormat decl IList DocValuesProducer Directory private private decl_stmt Lucene.Net.Store.Directory = != : decl_stmt Lucene.Net.Codecs.DocValuesFormat = decl_stmt SpellChecker.Net.Search.Spell.IDictionary < ? < = foreach < ? < in decl_stmt long ? = decl_stmt System.Collections.Generic.IList < = decl_stmt Lucene.Net.Codecs.DocValuesProducer = call Lucene.Net.Index.SegmentDocValues.GetDocValuesProducer(long,SegmentCommitInfo,IOContext,Directory,DocValuesFormat,IList,int) call Lucene.Net.Index.SegmentDocValues.GetDocValuesProducer(long,SegmentCommitInfo,IOContext,Directory,DocValuesFormat,IList,int) call Lucene.Net.Index.SegmentDocValues.GetDocValuesProducer(long,SegmentCommitInfo,IOContext,Directory,DocValuesFormat,IList,int) call Lucene.Net.Index.SegmentDocValues.GetDocValuesProducer(long,SegmentCommitInfo,IOContext,Directory,DocValuesFormat,IList,int) call Lucene.Net.Index.SegmentDocValues.GetDocValuesProducer(long,SegmentCommitInfo,IOContext,Directory,DocValuesFormat,IList,int) foreach in = call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() call decl ISet.Add() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() call decl IList.AddRange() bool string Directory public static public static decl_stmt Lucene.Net.Store.Directory decl_stmt bool if == - && = new = else = = try decl_stmt string = == - : return finally if call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl IDictionary decl IList long decl_stmt SpellChecker.Net.Search.Spell.IDictionary < ? < = new < ? < foreach in if == continue decl_stmt long = decl_stmt System.Collections.Generic.IList < call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out if == = new < = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return return protected internal override protected internal override try call Lucene.Net.Index.SegmentCoreReaders.DecRef() call Lucene.Net.Index.SegmentCoreReaders.DecRef() call Lucene.Net.Index.SegmentCoreReaders.DecRef() call Lucene.Net.Index.SegmentCoreReaders.DecRef() call Lucene.Net.Index.SegmentCoreReaders.DecRef() finally call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() call decl IDictionary.Clear() try finally call SegmentDocValues.DecRef() call SegmentDocValues.DecRef() call SegmentDocValues.DecRef() call SegmentDocValues.DecRef() call SegmentDocValues.DecRef() return return call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() call SegmentCoreReaders.fieldsReaderLocal() public override public override return return return return call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() call SegmentCoreReaders.termVectorsLocal() TermVectorsReader public override public override decl_stmt Lucene.Net.Index.TermVectorsReader = if == return return call Lucene.Net.Index.TermVectorsReader.Get(int,System,String,TermVectorMapper) call Lucene.Net.Index.TermVectorsReader.Get(int,System,String,TermVectorMapper) call Lucene.Net.Index.TermVectorsReader.Get(int,System,String,TermVectorMapper) call Lucene.Net.Index.TermVectorsReader.Get(int,System,String,TermVectorMapper) call Lucene.Net.Index.TermVectorsReader.Get(int,System,String,TermVectorMapper) private private if < || >= throw new + + + + public override public override return call Lucene.Net.Index.SegmentCommitInfo.ToString() call Lucene.Net.Index.SegmentCommitInfo.ToString() call Lucene.Net.Index.SegmentCommitInfo.ToString() call Lucene.Net.Index.SegmentCommitInfo.ToString() call Lucene.Net.Index.SegmentCommitInfo.ToString() - - return return public public return return return return FieldInfo private private decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) if == return if == return if != return return FieldInfo DocValuesProducer object NumericDocValues decl IDictionary public override public override decl_stmt Lucene.Net.Index.FieldInfo = if == return decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() decl_stmt NumericDocValues decl_stmt object call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = if == decl_stmt Lucene.Net.Codecs.DocValuesProducer call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out != = call DocValuesProducer.GetNumeric() call DocValuesProducer.GetNumeric() call DocValuesProducer.GetNumeric() call DocValuesProducer.GetNumeric() call DocValuesProducer.GetNumeric() = return FieldInfo DocValuesProducer Bits decl IDictionary public override public override decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) if == return if == return decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() decl_stmt Lucene.Net.Spatial.Util.Bits call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out if == decl_stmt Lucene.Net.Codecs.DocValuesProducer call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out != = call DocValuesProducer.GetDocsWithField() call DocValuesProducer.GetDocsWithField() call DocValuesProducer.GetDocsWithField() call DocValuesProducer.GetDocsWithField() call DocValuesProducer.GetDocsWithField() = return FieldInfo DocValuesProducer BinaryDocValues object decl IDictionary public override public override decl_stmt Lucene.Net.Index.FieldInfo = if == return decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() decl_stmt object decl_stmt BinaryDocValues call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = if == decl_stmt Lucene.Net.Codecs.DocValuesProducer call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out != = call DocValuesProducer.GetBinary() call DocValuesProducer.GetBinary() call DocValuesProducer.GetBinary() call DocValuesProducer.GetBinary() call DocValuesProducer.GetBinary() = return FieldInfo DocValuesProducer object SortedDocValues decl IDictionary public override public override decl_stmt Lucene.Net.Index.FieldInfo = if == return decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() decl_stmt Lucene.Net.Index.SortedDocValues decl_stmt object call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = if == decl_stmt Lucene.Net.Codecs.DocValuesProducer call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out != = call DocValuesProducer.GetSorted() call DocValuesProducer.GetSorted() call DocValuesProducer.GetSorted() call DocValuesProducer.GetSorted() call DocValuesProducer.GetSorted() = return FieldInfo DocValuesProducer SortedSetDocValues object decl IDictionary public override public override decl_stmt Lucene.Net.Index.FieldInfo = if == return decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() call decl IDisposableThreadLocal.Get() decl_stmt object decl_stmt Lucene.Net.Index.SortedSetDocValues call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = if == decl_stmt Lucene.Net.Codecs.DocValuesProducer call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out != = call DocValuesProducer.GetSortedSet() call DocValuesProducer.GetSortedSet() call DocValuesProducer.GetSortedSet() call DocValuesProducer.GetSortedSet() call DocValuesProducer.GetSortedSet() = return FieldInfo public override public override decl_stmt Lucene.Net.Index.FieldInfo = call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) if == || ! call FieldInfo.HasNorms() call FieldInfo.HasNorms() call FieldInfo.HasNorms() call FieldInfo.HasNorms() call FieldInfo.HasNorms() return return call Lucene.Net.Index.SegmentCoreReaders.GetNormValues(FieldInfo) call Lucene.Net.Index.SegmentCoreReaders.GetNormValues(FieldInfo) call Lucene.Net.Index.SegmentCoreReaders.GetNormValues(FieldInfo) call Lucene.Net.Index.SegmentCoreReaders.GetNormValues(FieldInfo) call Lucene.Net.Index.SegmentCoreReaders.GetNormValues(FieldInfo) public public call Lucene.Net.Index.SegmentCoreReaders.AddCoreClosedListener(CoreClosedListener) call Lucene.Net.Index.SegmentCoreReaders.AddCoreClosedListener(CoreClosedListener) call Lucene.Net.Index.SegmentCoreReaders.AddCoreClosedListener(CoreClosedListener) call Lucene.Net.Index.SegmentCoreReaders.AddCoreClosedListener(CoreClosedListener) call Lucene.Net.Index.SegmentCoreReaders.AddCoreClosedListener(CoreClosedListener) public public call SegmentCoreReaders.RemoveCoreClosedListener() call SegmentCoreReaders.RemoveCoreClosedListener() call SegmentCoreReaders.RemoveCoreClosedListener() call SegmentCoreReaders.RemoveCoreClosedListener() call SegmentCoreReaders.RemoveCoreClosedListener() long public public decl_stmt long = if != foreach in += if != += call Lucene.Net.Index.SegmentCoreReaders.RamBytesUsed() call Lucene.Net.Index.SegmentCoreReaders.RamBytesUsed() call Lucene.Net.Index.SegmentCoreReaders.RamBytesUsed() call Lucene.Net.Index.SegmentCoreReaders.RamBytesUsed() call Lucene.Net.Index.SegmentCoreReaders.RamBytesUsed() return TermVectorsReader public override public override decl_stmt Lucene.Net.Index.TermVectorsReader = if != call TermVectorsReader.CheckIntegrity() call TermVectorsReader.CheckIntegrity() call TermVectorsReader.CheckIntegrity() call TermVectorsReader.CheckIntegrity() call TermVectorsReader.CheckIntegrity() if != call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() call SegmentCoreReaders.Fields() if != call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() call SegmentCoreReaders.NormsProducer() if != foreach in