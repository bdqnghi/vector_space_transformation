Lucene.Net.Index System.Text using Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Util.BytesRef Documents.Document Field Lucene.Net.Search.IndexSearcher Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Search.TermRangeQuery Lucene.Net.Util.TestUtil TextField Lucene.Net.Search.TopDocs class attribute Lucene.Net.Index.TestForTooMuchCloning super super LuceneTestCase TieredMergePolicy TopDocs Document IndexSearcher IndexReader int RandomIndexWriter StringBuilder int MockDirectoryWrapper int public virtual public virtual decl_stmt Lucene.Net.Store.MockDirectoryWrapper = decl_stmt Lucene.Net.Index.TieredMergePolicy = new = decl_stmt Lucene.Net.Index.RandomIndexWriter = new new decl_stmt int const const = for = < ++ decl_stmt System.Text.StringBuilder = new for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt int = < + decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new new > decl_stmt int = - < + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose()