Lucene.Net.Analysis.Miscellaneous System using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Analysis.Util using Lucene.Net.Util using class Lucene.Net.Analysis.Miscellaneous.RemoveDuplicatesTokenFilter super super TokenFilter CharArraySet PositionIncrementAttribute CharTermAttribute decl char bool decl char int int public override public override while decl_stmt char = call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.CharTermAttribute.Buffer() decl_stmt int = decl_stmt int = if > call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() decl_stmt bool = == && call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) call Lucene.Net.Analysis.CharArraySet.Contains(string) decl_stmt char = new call Lucene.Net.Analysis.CharArraySet.Add(object) call Lucene.Net.Analysis.CharArraySet.Add(object) call Lucene.Net.Analysis.CharArraySet.Add(object) call Lucene.Net.Analysis.CharArraySet.Add(object) call Lucene.Net.Analysis.CharArraySet.Add(object) if ! return return public override public override call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear() call Lucene.Net.Analysis.CharArraySet.Clear()