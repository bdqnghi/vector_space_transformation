Lucene.Net.Analysis.Miscellaneous System.Collections.Generic using System.IO using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Util.Fst using class Lucene.Net.Analysis.Miscellaneous.StemmerOverrideFilter super super TokenFilter StemmerOverrideMap IKeywordAttribute decl FST decl BytesReader ICharTermAttribute decl FST decl char BytesRef public override public override if if == return if ! decl_stmt Lucene.Net.Util.BytesRef = call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() if != decl_stmt char = = call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Buffer() if != call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() = = return else return if == return else return int BytesRef int BytesRef public public < decl_stmt Lucene.Net.Util.BytesRef = decl_stmt Lucene.Net.Util.BytesRef = decl_stmt int = while < decl_stmt int = if : == return = += if = return decl char int public virtual public virtual decl_stmt int = if decl_stmt char = for = < += else if >= return return decl apache ByteSequenceOutputs decl org decl int decl fst decl lucene decl util public virtual public virtual decl_stmt Lucene.Net.Util.Fst.ByteSequenceOutputs = decl_stmt fst < = new < decl_stmt int = decl_stmt Lucene.Net.Util.IntsRef = new decl_stmt int = for = < ++ decl_stmt int = decl_stmt Lucene.Net.Util.BytesRef = call decl org.add() call decl org.add() call decl org.add() call decl org.add() call decl org.add() new return new call decl org.finish() call decl org.finish() call decl org.finish() call decl org.finish() call decl org.finish()