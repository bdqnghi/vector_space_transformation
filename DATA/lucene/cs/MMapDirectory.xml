Lucene.Net.Store System using System.Diagnostics using Lucene.Net.Support using System.IO using System.IO.MemoryMappedFiles using Lucene.Net.Util.Constants class Lucene.Net.Store.MMapDirectory super super FSDirectory int int bool bool if && ! throw new = return return << var var public override public override decl_stmt var = new decl_stmt var = new | return new + + var public override public override decl_stmt var = return new public override public override return public override public override return public override public override public override sealed public override sealed if != = var protected internal override protected internal override decl_stmt var = as if != call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() int int long decl ByteBuffer long internal virtual internal virtual if >= throw new + decl_stmt long = << decl_stmt int = ulong >> + decl_stmt Lucene.Net.Support.ByteBuffer = new if == = == : decl_stmt long = for = < ++ decl_stmt int = > + : - = new + - += return