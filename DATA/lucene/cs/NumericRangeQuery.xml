Lucene.Net.Search System using System.Collections.Generic using System.Diagnostics using System.Text using Lucene.Net.Documents using Lucene.Net.Util.AttributeSource Lucene.Net.Util.BytesRef Lucene.Net.Index.FilteredTermsEnum FieldType.NumericType Lucene.Net.Util.NumericUtils Lucene.Net.Index.Terms Lucene.Net.Index.TermsEnum Lucene.Net.Util.ToStringUtils class super super MultiTermQuery where comment int T NumericType bool int long long int public override public override if && && > return return new public public return public public return return return return StringBuilder public override public override decl_stmt System.Text.StringBuilder = new if ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) : == : call T.ToString() call T.ToString() call T.ToString() call T.ToString() call T.ToString() == : call bool.ToString() call bool.ToString() call bool.ToString() call bool.ToString() call bool.ToString() : var public override public override if == return if ! return if is < decl_stmt var = < return == == : call var.min() call var.min() call var.min() call var.min() call var.min() call var.min() call var.min() call var.min() call var.min() && == == : call var.max() call var.max() call var.max() call var.max() call var.max() call var.max() call var.max() call var.max() call var.max() && == && == && == return int public override public override decl_stmt int = += ^ if != += call T.GetHashCode() call T.GetHashCode() call T.GetHashCode() call T.GetHashCode() call T.GetHashCode() ^ if != += call bool.GetHashCode() call bool.GetHashCode() call bool.GetHashCode() call bool.GetHashCode() call bool.GetHashCode() ^ return + ^ + ^ public override sealed public override sealed public override sealed public override sealed internal internal == = == || <= = protected internal override protected internal override while >= if != && > continue return != && > : == = = return protected internal override protected internal override while == || > if == return if < return return