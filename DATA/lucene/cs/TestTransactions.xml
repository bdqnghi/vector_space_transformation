Lucene.Net.Index System using System.Threading using Lucene.Net.Documents using Lucene.Net.Support using NUnit.Framework using System.IO using Lucene.Net.Store.Directory Documents.Document Lucene.Net.Util.English Field FieldType Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Store.RAMDirectory StringField class attribute Lucene.Net.Index.TestTransactions super super LuceneTestCase bool public override public override if && <= throw new long public override public override decl_stmt long = + try do if break < catch + = internal virtual internal virtual for = < ++ if != && return return IndexWriter IndexWriter public override public override decl_stmt Lucene.Net.Index.IndexWriter = new new new decl_stmt Lucene.Net.Index.IndexWriter = new new new = try lock try call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() catch call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() return try call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() call Lucene.Net.Index.IndexWriter.PrepareCommit() catch call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() call Lucene.Net.Index.IndexWriter.Rollback() return call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) finally = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) int FieldType Document int public virtual public virtual decl_stmt Lucene.Net.Documents.FieldType = new = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) ++ call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int = - for = < ++ new + -= IndexReader public override public override decl_stmt Lucene.Net.Index.IndexReader = = lock try = = catch if ! throw if != call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() if != return if != throw new + + + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() IndexWriter Document int public virtual public virtual decl_stmt Lucene.Net.Index.IndexWriter = new new for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) MockDirectoryWrapper MockDirectoryWrapper IndexerThread decl TimedThread int SearcherThread SearcherThread public virtual public virtual decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new = = call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) new call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) call Lucene.Net.Store.MockDirectoryWrapper.FailOn(Failure) new = = = = decl_stmt TimedThread = new decl_stmt int = decl_stmt IndexerThread = new ++ = call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() decl_stmt SearcherThread = new ++ = call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() decl_stmt SearcherThread = new ++ = call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() for = < ++ for = < ++ ! call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose() call Lucene.Net.Store.MockDirectoryWrapper.Dispose()