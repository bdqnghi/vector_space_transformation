Lucene.Net.Util Lucene.Net.Documents using Lucene.Net.Search using Lucene.Net.Support using System using Lucene.Net.Index.FilteredTermsEnum FloatField IntField LongField Lucene.Net.Analysis.NumericTokenStream Lucene.Net.Index.TermsEnum class Lucene.Net.Util.NumericUtils sbyte int int char int public static public static public static public static ulong int public static public static if & ~ != throw new decl_stmt int = - * >> + = = + if < = new = + decl_stmt ulong = ^ = >> while > -- = & = >> int int public static public static if & ~ != throw new decl_stmt int = - * >> + = = + if < = new = + decl_stmt int = ^ unchecked int = while > -- = & = uint >> int public static public static decl_stmt int = - if > || < throw new + + return int public static public static decl_stmt int = - if > || < throw new return long var public static public static decl_stmt long = for = + = + < ++ <<= decl_stmt var = if < throw new + & + + - + |= byte return << ^ long var public static public static decl_stmt long = for = = + < ++ <<= decl_stmt var = if < throw new + & + + - + |= sbyte return << ^ long public static public static decl_stmt long = if < ^= return public static public static if < ^= return int public static public static decl_stmt int = if < ^= return public static public static if < ^= return public static public static public static public static bool long bool long private static private static if < throw new if > return for = += decl_stmt long = << + = << - << decl_stmt bool = & != = & != decl_stmt long = + : & ~ = - : & ~ decl_stmt bool = < = = if + >= || > || || break if | if & ~ = = private static private static |= << - switch case break case int int break default: throw new public virtual public virtual throw new BytesRef public virtual public virtual decl_stmt Lucene.Net.Util.BytesRef = new = new public virtual public virtual throw new BytesRef public virtual public virtual decl_stmt Lucene.Net.Util.BytesRef = new = new public static public static return new protected internal override protected internal override return == : public static public static return new protected internal override protected internal override return == :