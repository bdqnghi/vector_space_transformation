Lucene.Net.Index System.Collections using System.Collections.Generic using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Index.DocumentsWriterPerThread.FlushedSegment class Lucene.Net.Index.DocumentsWriterFlushQueue decl LinkedList AtomicInteger ReentrantLock bool internal virtual internal virtual lock decl_stmt bool = try call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() new = finally if ! int private private decl_stmt int = call AtomicInteger.IncrementAndGet() call AtomicInteger.IncrementAndGet() call AtomicInteger.IncrementAndGet() call AtomicInteger.IncrementAndGet() call AtomicInteger.IncrementAndGet() > int private private decl_stmt int = call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() >= SegmentFlushTicket bool internal virtual internal virtual lock decl_stmt bool = try decl_stmt SegmentFlushTicket = new call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() = return finally if ! internal virtual internal virtual lock = internal virtual internal virtual lock internal virtual internal virtual call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() >= + call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() return call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() != bool int FlushTicket FlushTicket private private decl_stmt int = while decl_stmt FlushTicket decl_stmt bool lock = <= : = != && call FlushTicket.CanPublish() call FlushTicket.CanPublish() call FlushTicket.CanPublish() call FlushTicket.CanPublish() call FlushTicket.CanPublish() if ++ try call FlushTicket.Publish() call FlushTicket.Publish() call FlushTicket.Publish() call FlushTicket.Publish() call FlushTicket.Publish() finally lock decl_stmt FlushTicket = call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() call Lucene.Net.Support.AtomicInteger.DecrementAndGet() == else break return internal virtual internal virtual call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() call ReentrantLock.Lock() try return finally call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() internal virtual internal virtual if call Lucene.Net.Support.ReentrantLock.TryLock() call Lucene.Net.Support.ReentrantLock.TryLock() call Lucene.Net.Support.ReentrantLock.TryLock() call Lucene.Net.Support.ReentrantLock.TryLock() call Lucene.Net.Support.ReentrantLock.TryLock() try return finally call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() call Lucene.Net.Support.ReentrantLock.Unlock() return return call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() call Lucene.Net.Support.AtomicInteger.Get() internal virtual internal virtual lock call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) call Lucene.Net.Support.AtomicInteger.Set(int) FrozenBufferedUpdates protected internal protected internal != != decl_stmt Lucene.Net.Index.FrozenBufferedUpdates = if + if != && + protected internal protected internal if == != if != && if + else protected internal override protected internal override ! = protected internal override protected internal override return protected internal override protected internal override ! = ! = protected internal protected internal == = protected internal override protected internal override return != ||