Lucene.Net.Search System using System.Collections.Generic using System.Diagnostics using System.Text using NUnit.Framework using System.IO using Lucene.Net.Index.AllDeletedFilterReader Lucene.Net.Index.AtomicReader Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Store.Directory Lucene.Net.Index.DirectoryReader Documents.Document Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Store.MockDirectoryWrapper Lucene.Net.Index.MultiReader Lucene.Net.Store.RAMDirectory Lucene.Net.Index.SlowCompositeReaderWrapper class Lucene.Net.Search.QueryUtils decl IndexReader public static public static Query Query Query public static public static decl_stmt Lucene.Net.Search.Query = decl_stmt Lucene.Net.Search.Query = = decl_stmt Lucene.Net.Search.Query = new = public override public override return public static public static public static public static + + + + != public static public static public static public static Query public static public static try if != if - + decl_stmt Lucene.Net.Search.Query = catch throw new public static public static return return IndexSearcher IndexReader decl IndexReader public static public static decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Index.IndexReader = new < : new < : == : < : new < : < : decl_stmt Lucene.Net.Search.IndexSearcher = new = return Directory IndexWriter DirectoryReader private static private static > decl_stmt Lucene.Net.Store.Directory = new new decl_stmt Lucene.Net.Index.IndexWriter = new new new for = < ++ call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) new call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.ForceMerge(int,bool) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Index.DirectoryReader = return new int Scorer decl int int AtomicReaderContext decl IList AtomicReader decl int decl int IndexSearcher Weight float decl AtomicReader decl int bool public static public static decl_stmt System.Collections.Generic.IList < = if return decl_stmt int const const = decl_stmt int const const = decl_stmt int = new new new new new new new new for = < ++ decl_stmt int = decl_stmt int = new decl_stmt int = new - decl_stmt float const const = decl_stmt Lucene.Net.Index.AtomicReader = new new if != decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Search.IndexSearcher = = decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) decl_stmt Lucene.Net.Index.AtomicReaderContext = decl_stmt Lucene.Net.Search.Scorer = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() if != decl_stmt bool = call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() + != + + + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() = float float float float float Weight int AtomicReaderContext StringBuilder int bool public override public override decl_stmt float = = try if == decl_stmt Lucene.Net.Search.Weight = decl_stmt Lucene.Net.Index.AtomicReaderContext = = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() decl_stmt int = ++ decl_stmt bool = == + != : != decl_stmt int = decl_stmt float = decl_stmt float = decl_stmt float = - decl_stmt float = - if ! || != || > || > decl_stmt System.Text.StringBuilder = new for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) == : throw new + + != : + + + + + + ! : + + + + > : + + + + + + + + > : + + + + + + + + + + + + + + + + + + + + == : catch throw new Weight AtomicReader AtomicReaderContext IndexSearcher Scorer bool if != decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Search.IndexSearcher = = decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) decl_stmt Lucene.Net.Index.AtomicReaderContext = decl_stmt Lucene.Net.Search.Scorer = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() if != decl_stmt bool = call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() + != + + + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() ++ = == = = - public override public override return Scorer Weight AtomicReader decl int IndexSearcher decl IList float decl AtomicReader bool public static public static decl_stmt float const const = decl_stmt int = new - decl_stmt Lucene.Net.Index.AtomicReader = new decl_stmt System.Collections.Generic.IList < = new if != decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Search.IndexSearcher = = decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) decl_stmt Lucene.Net.Search.Scorer = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() if != decl_stmt bool = call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() + != + + + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() = Scorer float float Weight long public override public override decl_stmt float = try decl_stmt long = for = + <= ++ decl_stmt Lucene.Net.Search.Weight = decl_stmt Lucene.Net.Search.Scorer = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() != + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() + + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() decl_stmt float = call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() call Scorer.Score() + + + + + + + + + + if < && && && && && - && && && && && - = - = catch throw new IndexSearcher AtomicReader Scorer Weight bool if != decl_stmt Lucene.Net.Index.AtomicReader = decl_stmt Lucene.Net.Search.IndexSearcher = = decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) call Lucene.Net.Search.IndexSearcher.CreateNormalizedWeight(Query) decl_stmt Lucene.Net.Search.Scorer = call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() call Weight.Scorer() if != decl_stmt bool = call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() call Scorer.Advance() + != + + + + + + call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() call Scorer.DocID() ++ = = - = public override public override return