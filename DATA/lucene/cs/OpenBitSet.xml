Lucene.Net.Util System using System.Diagnostics using Lucene.Net.Support using Lucene.Net.Search.DocIdSet Lucene.Net.Search.DocIdSetIterator class Lucene.Net.Util.OpenBitSet super super DocIdSet super Bits super ICloneable int decl long long public override public override return new public override public override return return public virtual public virtual return << public virtual public virtual return public virtual public virtual return << return == return return int int long public virtual public virtual decl_stmt int = >> if >= return decl_stmt int = & decl_stmt long = << return & != int int long public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << return & != int int long public virtual public virtual decl_stmt int = >> if >= return decl_stmt int = int & decl_stmt long = << return & != int int long public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << return & != int int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & return ulong >> & int long int public virtual public virtual decl_stmt int = decl_stmt int = int & decl_stmt long = << |= int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << |= int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << |= int long int long public virtual public virtual if <= return decl_stmt int = >> decl_stmt int = - decl_stmt long = - << int decl_stmt long = >> int - if == |= & return |= + - |= int protected internal virtual protected internal virtual decl_stmt int = >> if >= + return int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << &= ~ int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << &= ~ int long int public virtual public virtual decl_stmt int = >> if >= return decl_stmt int = int & decl_stmt long = << &= ~ int int long int long public virtual public virtual if <= return decl_stmt int = >> if >= return decl_stmt int = - >> decl_stmt long = - << decl_stmt long = - << if & == = = ~ if == &= | return &= decl_stmt int = + if < &= int int long int long public virtual public virtual if <= return decl_stmt int = >> if >= return decl_stmt int = - >> decl_stmt long = - << int decl_stmt long = - uint >> int - = ~ = ~ if == &= | return &= decl_stmt int = + if < &= int long bool int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << decl_stmt bool = & != |= return int long bool int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << decl_stmt bool = & != |= return int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << ^= int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << ^= int long int public virtual public virtual decl_stmt int = decl_stmt int = int & decl_stmt long = << ^= int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = & decl_stmt long = << ^= return & != int long int public virtual public virtual >= && < decl_stmt int = >> decl_stmt int = int & decl_stmt long = << ^= return & != int long int long public virtual public virtual if <= return decl_stmt int = >> decl_stmt int = - decl_stmt long = - << int decl_stmt long = >> int - if == ^= & return ^= for = + < ++ = ~ ^= public virtual public virtual return public static public static return long public static public static decl_stmt long = if < += - else if > += - return long public static public static decl_stmt long = if > += - return long public static public static decl_stmt long = if < += - else if > += - return int int long public virtual public virtual decl_stmt int = >> if >= return - decl_stmt int = & decl_stmt long = >> if != return << + + while ++ < = if != return << + return - int int long public virtual public virtual decl_stmt int = ulong >> if >= return - decl_stmt int = int & decl_stmt long = ulong >> if != return long << + + while ++ < = if != return long << + return - int int long public virtual public virtual decl_stmt int = >> decl_stmt int decl_stmt long if >= = - if < return - = = else if < return - = & = << - if != return << + - while -- >= = if != return << + - return - int int long public virtual public virtual decl_stmt int = >> decl_stmt int decl_stmt long if >= = - if < return - = = else if < return - = int & = << - if != return long << + - while -- >= = if != return long << + - return - OpenBitSet public public try decl_stmt Lucene.Net.Util.OpenBitSet = new call decl long.Clone() call decl long.Clone() call decl long.Clone() call decl long.Clone() call decl long.Clone() return catch throw new int decl long decl long int public virtual public virtual decl_stmt int = decl_stmt long = decl_stmt long = decl_stmt int = while -- >= &= if > = int decl long decl long int public virtual public virtual decl_stmt int = = >= decl_stmt long = decl_stmt long = decl_stmt int = while -- >= |= if < - = decl long decl long int public virtual public virtual decl_stmt int = decl_stmt long = decl_stmt long = while -- >= &= ~ int decl long decl long int public virtual public virtual decl_stmt int = = >= decl_stmt long = decl_stmt long = decl_stmt int = while -- >= ^= if < - = public virtual public virtual public virtual public virtual public virtual public virtual decl long decl long int public virtual public virtual decl_stmt int = decl_stmt long = decl_stmt long = while -- >= if & != return return public virtual public virtual = = = << >= public virtual public virtual = >= int public virtual public virtual decl_stmt int = - while >= && == -- = + public static public static return - >> + OpenBitSet OpenBitSet public override public override if == return if ! is return decl_stmt Lucene.Net.Util.OpenBitSet decl_stmt Lucene.Net.Util.OpenBitSet = if > = = else = for = - >= -- if != return for = - >= -- if != return return long public override public override decl_stmt long = for = -- >= ^= = << | ulong >> return >> ^ + unchecked int