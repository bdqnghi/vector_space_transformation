Lucene.Net.Facet.Taxonomy.Directory System using System.Diagnostics using Lucene.Net.Index.CorruptIndexException Lucene.Net.Index.DocsAndPositionsEnum Lucene.Net.Index.IndexReader Lucene.Net.Index.MultiFields Lucene.Net.Search.DocIdSetIterator Lucene.Net.Util.ArrayUtil class Lucene.Net.Facet.Taxonomy.Directory.TaxonomyIndexArrays super super ParallelTaxonomyArrays bool decl int decl int private private lock if ! = new = new if != else = private private for = < ++ = if == = = for = < ++ = = DocsAndPositionsEnum int private private if == return decl_stmt DocsAndPositionsEnum = if == || call DocsAndPositionsEnum.Advance() call DocsAndPositionsEnum.Advance() call DocsAndPositionsEnum.Advance() call DocsAndPositionsEnum.Advance() call DocsAndPositionsEnum.Advance() == throw new + decl_stmt int = for = < ++ if call DocsAndPositionsEnum.DocID() call DocsAndPositionsEnum.DocID() call DocsAndPositionsEnum.DocID() call DocsAndPositionsEnum.DocID() call DocsAndPositionsEnum.DocID() == if call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() call DocsAndPositionsEnum.Freq() == throw new + = call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() call DocsAndPositionsEnum.NextPosition() if call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() call DocsAndPositionsEnum.NextDoc() == if + < throw new + + break else throw new + decl int internal virtual internal virtual if >= decl_stmt int = + = return new = return public override public override return public override public override if ! return public override public override if ! return