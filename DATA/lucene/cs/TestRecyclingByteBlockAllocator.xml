Lucene.Net.Util NUnit.Framework using System using System.Collections.Generic using System.Linq using class attribute Lucene.Net.Util.TestRecyclingByteBlockAllocator super super LuceneTestCase public override public override private private return new << + var int var RecyclingByteBlockAllocator int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingByteBlockAllocator = decl_stmt var = new < decl_stmt var = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() decl_stmt int = decl_stmt int = for = < ++ = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() * + call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() int var int RecyclingByteBlockAllocator var int int var var var int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingByteBlockAllocator = decl_stmt var = new < decl_stmt var = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = + for = < ++ = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() * + call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() decl_stmt var = call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() decl_stmt int = decl_stmt int = + - decl_stmt var = new < for = < ++ call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) for = < ++ decl_stmt var = call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() call var.RemoveAt() call var.Remove() call var.Remove() call var.Remove() call var.Remove() call var.Remove() RecyclingByteBlockAllocator var int int int int int int int var var var int public virtual public virtual decl_stmt Lucene.Net.Util.RecyclingByteBlockAllocator = decl_stmt var = new < decl_stmt int = decl_stmt var = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() decl_stmt int = decl_stmt int = for = < ++ decl_stmt int = + for = < ++ = = - call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() * + call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() call Lucene.Net.Util.RecyclingByteBlockAllocator.BytesUsed() decl_stmt var = call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() decl_stmt int = decl_stmt int = + - for = < ++ decl_stmt var = call var.Remove() call var.Remove() call var.Remove() call var.Remove() call var.Remove() call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) call Lucene.Net.Util.RecyclingByteBlockAllocator.RecycleByteBlocks(byte,int,int) for = < ++ decl_stmt int = call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() decl_stmt int = call Lucene.Net.Util.RecyclingByteBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingByteBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingByteBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingByteBlockAllocator.FreeBlocks(int) call Lucene.Net.Util.RecyclingByteBlockAllocator.FreeBlocks(int) + call Lucene.Net.Util.RecyclingByteBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.MaxBufferedBlocks() call Lucene.Net.Util.RecyclingByteBlockAllocator.MaxBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() call RecyclingByteBlockAllocator.NumBufferedBlocks() -