Lucene.Net.Analysis System using System.Collections.Generic using Lucene.Net.Util.Attribute Lucene.Net.Util.AttributeSource class Lucene.Net.Analysis.TeeSinkTokenFilter super super TokenFilter SinkFilter decl LinkedList public override public override return public public return var public public decl_stmt var = new call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() new return public public if ! throw new foreach in call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() new public public while State var public override public override if decl_stmt Lucene.Net.Util.Automaton.State = foreach in decl_stmt var = if != if call var.Accept() call var.Accept() call var.Accept() call var.Accept() call var.Accept() if == = call var.AddState() call var.AddState() call var.AddState() call var.AddState() call var.AddState() return return State var public override public override decl_stmt Lucene.Net.Util.Automaton.State = foreach in decl_stmt var = if != call var.SetFinalState() call var.SetFinalState() call var.SetFinalState() call var.SetFinalState() call var.SetFinalState() public virtual public virtual internal internal return internal internal if != throw new internal internal = State public override public override if == = if ! return decl_stmt Lucene.Net.Util.Automaton.State = return public override public override if != public override public override = protected override protected override