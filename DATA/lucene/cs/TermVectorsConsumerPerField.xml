Lucene.Net.Index Lucene.Net.Analysis.Tokenattributes using System using System.Diagnostics using Lucene.Net.Util.ByteBlockPool Lucene.Net.Util.BytesRef Lucene.Net.Analysis.Tokenattributes.OffsetAttribute Lucene.Net.Analysis.Tokenattributes.PayloadAttribute Lucene.Net.Util.RamUsageEstimator Lucene.Net.Codecs.TermVectorsWriter class Lucene.Net.Index.TermVectorsConsumerPerField super super TermsHashConsumerPerField TermsHashPerField bool int bool IOffsetAttribute TermVectorsConsumer decl DocState bool IPayloadAttribute decl DocumentsWriterPerThread FieldInfo FieldInvertState bool return IndexableField internal override internal override = = = = = for = < ++ decl_stmt Lucene.Net.Index.IndexableField = if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() = |= call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() |= call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() if |= call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() else if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + else if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + else if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() call Lucene.Net.Index.IndexableField.FieldType() throw new + call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() call Lucene.Net.Index.IndexableField.Name() + if = if call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() != call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() return public public internal override internal override if ! || call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() == return call Lucene.Net.Index.TermVectorsConsumer.AddFieldToFlush(TermVectorsConsumerPerField) call Lucene.Net.Index.TermVectorsConsumer.AddFieldToFlush(TermVectorsConsumerPerField) call Lucene.Net.Index.TermVectorsConsumer.AddFieldToFlush(TermVectorsConsumerPerField) call Lucene.Net.Index.TermVectorsConsumer.AddFieldToFlush(TermVectorsConsumerPerField) call Lucene.Net.Index.TermVectorsConsumer.AddFieldToFlush(TermVectorsConsumerPerField) TermVectorsWriter decl int ByteSliceReader int BytesRef int ByteSliceReader TermVectorsPostingsArray ByteBlockPool int internal internal call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() decl_stmt int = call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() decl_stmt Lucene.Net.Util.BytesRef = >= if > = call Lucene.Net.Index.TermVectorsConsumer.VectorFieldsInOrder(FieldInfo) call Lucene.Net.Index.TermVectorsConsumer.VectorFieldsInOrder(FieldInfo) call Lucene.Net.Index.TermVectorsConsumer.VectorFieldsInOrder(FieldInfo) call Lucene.Net.Index.TermVectorsConsumer.VectorFieldsInOrder(FieldInfo) call Lucene.Net.Index.TermVectorsConsumer.VectorFieldsInOrder(FieldInfo) decl_stmt TermVectorsPostingsArray = decl_stmt Lucene.Net.Index.TermVectorsWriter = decl_stmt int = call Lucene.Net.Index.TermsHashPerField.SortPostings(IComparer) call Lucene.Net.Index.TermsHashPerField.SortPostings(IComparer) call Lucene.Net.Index.TermsHashPerField.SortPostings(IComparer) call Lucene.Net.Index.TermsHashPerField.SortPostings(IComparer) call Lucene.Net.Index.TermsHashPerField.SortPostings(IComparer) call TermVectorsWriter.StartField() call TermVectorsWriter.StartField() call TermVectorsWriter.StartField() call TermVectorsWriter.StartField() call TermVectorsWriter.StartField() decl_stmt Lucene.Net.Index.ByteSliceReader = : decl_stmt Lucene.Net.Index.ByteSliceReader = : decl_stmt Lucene.Net.Index.ByteBlockPool = for = < ++ decl_stmt int = decl_stmt int = call Lucene.Net.Index.ByteBlockPool.SetBytesRef(BytesRef,int) call Lucene.Net.Index.ByteBlockPool.SetBytesRef(BytesRef,int) call Lucene.Net.Index.ByteBlockPool.SetBytesRef(BytesRef,int) call Lucene.Net.Index.ByteBlockPool.SetBytesRef(BytesRef,int) call Lucene.Net.Index.ByteBlockPool.SetBytesRef(BytesRef,int) call TermVectorsWriter.StartTerm() call TermVectorsWriter.StartTerm() call TermVectorsWriter.StartTerm() call TermVectorsWriter.StartTerm() call TermVectorsWriter.StartTerm() if || if != call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) if != call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermsHashPerField.InitReader(ByteSliceReader,int,int) call Lucene.Net.Index.TermVectorsWriter.AddProx(int,DataInput,DataInput) call Lucene.Net.Index.TermVectorsWriter.AddProx(int,DataInput,DataInput) call Lucene.Net.Index.TermVectorsWriter.AddProx(int,DataInput,DataInput) call Lucene.Net.Index.TermVectorsWriter.AddProx(int,DataInput,DataInput) call Lucene.Net.Index.TermVectorsWriter.AddProx(int,DataInput,DataInput) call Lucene.Net.Index.TermVectorsWriter.FinishTerm() call Lucene.Net.Index.TermVectorsWriter.FinishTerm() call Lucene.Net.Index.TermVectorsWriter.FinishTerm() call Lucene.Net.Index.TermVectorsWriter.FinishTerm() call Lucene.Net.Index.TermVectorsWriter.FinishTerm() call TermVectorsWriter.FinishField() call TermVectorsWriter.FinishField() call TermVectorsWriter.FinishField() call TermVectorsWriter.FinishField() call TermVectorsWriter.FinishField() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call FieldInfo.SetStoreTermVectors() call FieldInfo.SetStoreTermVectors() call FieldInfo.SetStoreTermVectors() call FieldInfo.SetStoreTermVectors() call FieldInfo.SetStoreTermVectors() internal internal call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) = internal override internal override if = call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() < else = if && call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() < = call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() call decl DocState.AttributeSource_Renamed() < else = int BytesRef int int internal internal if decl_stmt int = + call int.StartOffset() call int.StartOffset() call int.StartOffset() call int.StartOffset() call int.StartOffset() decl_stmt int = + call int.EndOffset() call int.EndOffset() call int.EndOffset() call int.EndOffset() call int.EndOffset() call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) - call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) - = if decl_stmt Lucene.Net.Util.BytesRef if == = else = decl_stmt int = - if != && > call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) << | call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteBytes(int,byte,int,int) call Lucene.Net.Index.TermsHashPerField.WriteBytes(int,byte,int,int) call Lucene.Net.Index.TermsHashPerField.WriteBytes(int,byte,int,int) call Lucene.Net.Index.TermsHashPerField.WriteBytes(int,byte,int,int) call Lucene.Net.Index.TermsHashPerField.WriteBytes(int,byte,int,int) = else call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) call Lucene.Net.Index.TermsHashPerField.WriteVInt(int,int) << = TermVectorsPostingsArray internal override internal override call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() decl_stmt TermVectorsPostingsArray = = = = TermVectorsPostingsArray internal override internal override call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() call decl DocumentsWriterPerThread.TestPoint() decl_stmt TermVectorsPostingsArray = ++ internal override internal override internal override internal override return new internal override internal override return new TermVectorsPostingsArray internal override internal override is decl_stmt TermVectorsPostingsArray = internal override internal override return + *