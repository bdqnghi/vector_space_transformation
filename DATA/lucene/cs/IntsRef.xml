Lucene.Net.Util System using System.Diagnostics using System.Text using class Lucene.Net.Util.IntsRef super super ICloneable decl int int decl int int public public return new int int int public override public override decl_stmt int const const = decl_stmt int = decl_stmt int = + for = < ++ = * + return public override public override if == return if is return return decl int int int public public if == decl_stmt int = decl_stmt int = decl_stmt int = + for = < ++ , ++ if != return return else return int decl int int int int decl int int public public if == return decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = + while < decl_stmt int = ++ decl_stmt int = ++ if > return else if < return - return - public public if - < = new = = public public == if < = StringBuilder int public override public override decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt int = + for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) IntsRef public static public static decl_stmt Lucene.Net.Util.IntsRef = new call Lucene.Net.Util.IntsRef.CopyInts(IntsRef) call Lucene.Net.Util.IntsRef.CopyInts(IntsRef) call Lucene.Net.Util.IntsRef.CopyInts(IntsRef) call Lucene.Net.Util.IntsRef.CopyInts(IntsRef) call Lucene.Net.Util.IntsRef.CopyInts(IntsRef) return if == throw new if < throw new + if > throw new + + + if < throw new + if > throw new + + + if + < throw new + + + if + > throw new + + + + + return