Lucene.Net.Index System using System.Collections.Generic using System.Linq using class super super CompositeReader where decl IList decl int int decl R int int public override sealed public override sealed decl_stmt int = return - return return int public override sealed public override sealed decl_stmt int = - int public override sealed public override sealed decl_stmt int = for = < ++ += return long long public override sealed public override sealed decl_stmt long = for = < ++ decl_stmt long = if == - return - += return long long public override sealed public override sealed decl_stmt long = foreach in decl_stmt long = if == - return - += return int int public override sealed public override sealed decl_stmt int = foreach in decl_stmt int = if == - return - += return long long public override sealed public override sealed decl_stmt long = foreach in decl_stmt long = if == - return - += return protected internal protected internal if < || >= throw new + + + + return protected internal protected internal if < || >= throw new return public override < public override < return <