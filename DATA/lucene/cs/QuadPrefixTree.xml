Lucene.Net.Spatial.Prefix.Tree System using System.Collections.Generic using System.Diagnostics using System.IO using System.Text using Spatial4n.Core.Context using Spatial4n.Core.Shapes using class Lucene.Net.Spatial.Prefix.Tree.QuadPrefixTree super super SpatialPrefixTree double double decl double int decl double decl int double double decl int double int double double double string public virtual public virtual decl_stmt string const const = for = < ++ + + + + + + + + * public override public override if == return for = < - ++ if > && > return + return decl IList protected internal override protected internal override decl_stmt System.Collections.Generic.IList < = new < new return public override public override return new public override public override return new double double private private < == decl_stmt double = / decl_stmt double = / - + + + - - + - double double SpatialRelation int int Rectangle private private < == decl_stmt double = / decl_stmt double = / decl_stmt int = decl_stmt Rectangle = - + - + decl_stmt SpatialRelation = if == new call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() else if == else decl_stmt int = + if >= new call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() call SpatialRelation.Transpose() else = var protected internal override protected internal override decl_stmt var = new return call var.GetLevelForDistance() call var.GetLevelForDistance() call var.GetLevelForDistance() call var.GetLevelForDistance() call var.GetLevelForDistance() protected internal override protected internal override return new : public override public override = decl IList protected internal override < protected internal override < decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new + call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new + return public override public override return public override public override return + public override public override if == = return char int double double string double double private private decl_stmt string = decl_stmt double = decl_stmt double = for = < ++ decl_stmt char = if == || == += else if == || == += += else if == || == else if == || == += else throw new + decl_stmt int = decl_stmt double decl_stmt double if > = - = - else = = return + +