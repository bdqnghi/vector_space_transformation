org.apache.lucene.index System using org.apache.lucene.store.CompoundFileDirectory org.apache.lucene.store.Directory org.apache.lucene.store.FSDirectory org.apache.lucene.store.IOContext org.apache.lucene.store.IndexInput org.apache.lucene.util.ArrayUtil org.apache.lucene.util.CommandLineUtil class org.apache.lucene.index.CompoundFileExtractor decl string File FileOutputStream decl sbyte CompoundFileDirectory int int long string IndexInput string IOContext string string bool int Directory public static public static decl_stmt string = decl_stmt bool = decl_stmt string = decl_stmt int = while < decl_stmt string = if = else if if == - ++ = else if == = ++ if == return decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.CompoundFileDirectory = decl_stmt Lucene.Net.Store.IOContext = try decl_stmt System.IO.File = new decl_stmt string = = if == = new else = new = new decl_stmt string = call CompoundFileDirectory.listAll() call CompoundFileDirectory.listAll() call CompoundFileDirectory.listAll() call CompoundFileDirectory.listAll() call CompoundFileDirectory.listAll() for = < ++ decl_stmt long = call CompoundFileDirectory.fileLength() call CompoundFileDirectory.fileLength() call CompoundFileDirectory.fileLength() call CompoundFileDirectory.fileLength() call CompoundFileDirectory.fileLength() if + + + + decl_stmt Lucene.Net.Store.IndexInput = call CompoundFileDirectory.openInput() call CompoundFileDirectory.openInput() call CompoundFileDirectory.openInput() call CompoundFileDirectory.openInput() call CompoundFileDirectory.openInput() decl_stmt FileOutputStream = new decl_stmt sbyte = new decl_stmt int = while > decl_stmt int = int call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call FileOutputStream.write() call FileOutputStream.write() call FileOutputStream.write() call FileOutputStream.write() call FileOutputStream.write() -= call FileOutputStream.close() call FileOutputStream.close() call FileOutputStream.close() call FileOutputStream.close() call FileOutputStream.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() else + + + catch finally try if != call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() if != call CompoundFileDirectory.close() call CompoundFileDirectory.close() call CompoundFileDirectory.close() call CompoundFileDirectory.close() call CompoundFileDirectory.close() catch