Lucene.Net.Util Lucene.Net.Support using System using System.Collections.Generic using class Lucene.Net.Util.StringHelper decl IComparer int var int int int var public static public static decl_stmt int = < : decl_stmt var = decl_stmt int = decl_stmt var = decl_stmt int = for = < ++ if + != + return return return int var int var public public decl_stmt var = new decl_stmt var = new while call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() decl_stmt int = call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() if call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() decl_stmt int = call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() if != return < - : else if != return while call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() call var.HasMoreTokens() if call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() call var.NextToken() != return - return public static public static if == return == else return public static public static return public static public static return - int int int private static private static if < || - < return decl_stmt int = + decl_stmt int = decl_stmt int = + while < if ++ != ++ return return var if == decl_stmt var = if != if > = call var.Substring() call var.Substring() call var.Substring() call var.Substring() call var.Substring() - = int else = int return int int int int int int public static public static decl_stmt int const const = unchecked int decl_stmt int const const = decl_stmt int = decl_stmt int = + & unchecked int for = < += decl_stmt int = sbyte & | sbyte + & << | sbyte + & << | sbyte + << *= = *= ^= = = * + unchecked int decl_stmt int = switch & case = sbyte + & << goto goto case |= sbyte + & << goto goto case |= sbyte & *= = *= ^= break ^= ^= uint >> *= unchecked int ^= uint >> *= unchecked int ^= uint >> return public static public static return