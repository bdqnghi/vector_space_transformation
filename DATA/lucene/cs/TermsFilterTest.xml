Lucene.Net.Tests.Queries System using System.Collections.Generic using System.Linq using Lucene.Net.Documents using Lucene.Net.Index using Lucene.Net.Queries using Lucene.Net.Randomized.Generators using Lucene.Net.Search using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using NUnit.Framework using class Lucene.Net.Tests.Queries.TermsFilterTest super super LuceneTestCase TermsFilter decl HashSet TermsFilter public public decl_stmt Lucene.Net.Queries.TermsFilter = new new decl_stmt System.Collections.Generic.HashSet < = new < call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() decl_stmt Lucene.Net.Queries.TermsFilter = new new call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() new new new call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() new new new new int decl IList AtomicReaderContext Document Directory string RandomIndexWriter IndexReader FixedBitSet public public decl_stmt string = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = * call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) + call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = is decl_stmt Lucene.Net.Index.AtomicReaderContext = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt System.Collections.Generic.IList < = new < call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new = call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new = call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new = call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiReader DocIdSet Directory IndexReader IndexReader Directory Document string RandomIndexWriter RandomIndexWriter TermsFilter FixedBitSet public public decl_stmt string = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Queries.TermsFilter = new new decl_stmt Lucene.Net.Index.MultiReader = new foreach in decl_stmt Lucene.Net.Search.DocIdSet = call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) if new == else decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() >= call MultiReader.Dispose() call MultiReader.Dispose() call MultiReader.Dispose() call MultiReader.Dispose() call MultiReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var AtomicReaderContext int IndexReader int RandomIndexWriter Document TermsFilter FixedBitSet Directory public public decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt int = decl_stmt var = new < for = < ++ call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new + decl_stmt Lucene.Net.Documents.Document = new if == continue call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) + call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() decl_stmt Lucene.Net.Index.AtomicReaderContext = call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() decl_stmt Lucene.Net.Queries.TermsFilter = new decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) - call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var AtomicReaderContext int Document string int Term RandomIndexWriter IndexReader TermsFilter FixedBitSet Directory public public decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt var = new < for = < ++ decl_stmt string = + call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt int = for = < ++ while decl_stmt string = + decl_stmt Lucene.Net.Index.Term = new if ! call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() break call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) call Lucene.Net.Index.RandomIndexWriter.ForceMerge(int) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() decl_stmt Lucene.Net.Index.AtomicReaderContext = call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() call IndexReader.Leaves() decl_stmt Lucene.Net.Queries.TermsFilter = new call var.ToList() call var.ToList() call var.ToList() call var.ToList() call var.ToList() decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Queries.TermsFilter.GetDocIdSet(IndexReader) call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexSearcher decl IList TopDocs decl ScoreDoc Document int TermsFilter MatchAllDocsQuery string int BooleanQuery RandomIndexWriter IndexReader TopDocs string bool int Directory public public decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt int = decl_stmt bool = decl_stmt System.Collections.Generic.IList < = new < for = < ++ decl_stmt string = + : decl_stmt string = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt int = for = < ++ decl_stmt int = + decl_stmt Lucene.Net.Search.BooleanQuery = new for = < ++ call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Lucene.Net.Search.MatchAllDocsQuery = new decl_stmt Lucene.Net.Queries.TermsFilter = call decl IList.SubList() call decl IList.SubList() call decl IList.SubList() call decl IList.SubList() call decl IList.SubList() decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.ScoreDoc = for = < ++ call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() private private params params params return TermsFilter string var private private < if ! return new decl_stmt Lucene.Net.Queries.TermsFilter decl_stmt var = new < decl_stmt string = foreach in call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() if != = = new return TermsFilter TermsFilter decl IList string int var string bool decl IList TermsFilter public public decl_stmt int = decl_stmt bool = decl_stmt System.Collections.Generic.IList < = new < decl_stmt var = new < for = < ++ decl_stmt string = + : decl_stmt string = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() new call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new decl_stmt Lucene.Net.Queries.TermsFilter = && decl_stmt Lucene.Net.Queries.TermsFilter = && call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() call Lucene.Net.Queries.TermsFilter.GetHashCode() if > decl_stmt System.Collections.Generic.IList < = new < call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() call decl IList.RemoveAt() decl_stmt Lucene.Net.Queries.TermsFilter = && call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) TermsFilter TermsFilter public public decl_stmt Lucene.Net.Queries.TermsFilter = new new decl_stmt Lucene.Net.Queries.TermsFilter = new new call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) call Lucene.Net.Queries.TermsFilter.Equals(object) var var public public decl_stmt var = new < decl_stmt var = new < < new < new call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() < new call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() < new TermsFilter public public decl_stmt Lucene.Net.Queries.TermsFilter = new new new new call Lucene.Net.Queries.TermsFilter.ToString() call Lucene.Net.Queries.TermsFilter.ToString() call Lucene.Net.Queries.TermsFilter.ToString() call Lucene.Net.Queries.TermsFilter.ToString() call Lucene.Net.Queries.TermsFilter.ToString()