Lucene.Net.Analysis.Pattern System.Diagnostics using Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Analysis.Pattern.PatternCaptureGroupTokenFilter super super TokenFilter int decl int decl Matcher State CharsRef decl int PositionIncrementAttribute ICharTermAttribute bool int Matcher int int private private decl_stmt int = = - decl_stmt Matcher for = < ++ = if == - = call Matcher.find() call Matcher.find() call Matcher.find() call Matcher.find() call Matcher.find() : if != while < + decl_stmt int = call Matcher.start() call Matcher.start() call Matcher.start() call Matcher.start() call Matcher.start() decl_stmt int = call Matcher.end() call Matcher.end() call Matcher.end() call Matcher.end() call Matcher.end() if == || && == && == ++ continue if < = = break if == + = - -- return != - decl char int int int public override public override if != - && != decl_stmt int = decl_stmt int = = call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() - ++ return if ! return decl_stmt char = call ICharTermAttribute.buffer() call ICharTermAttribute.buffer() call ICharTermAttribute.buffer() call ICharTermAttribute.buffer() call ICharTermAttribute.buffer() decl_stmt int = call ICharTermAttribute.length() call ICharTermAttribute.length() call ICharTermAttribute.length() call ICharTermAttribute.length() call ICharTermAttribute.length() call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) call Lucene.Net.Util.CharsRef.CopyChars(char,int,int) = for = < ++ = - if = else if decl_stmt int = decl_stmt int = if == = else call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() call ICharTermAttribute.copyBuffer() - ++ return public override public override = = -