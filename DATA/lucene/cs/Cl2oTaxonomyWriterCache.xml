Lucene.Net.Facet.Taxonomy.WriterCache System.Threading using class Lucene.Net.Facet.Taxonomy.WriterCache.Cl2oTaxonomyWriterCache super super TaxonomyWriterCache ReaderWriterLock float CompactLabelToOrdinal int int public virtual public virtual call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) try = new finally call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() public virtual public virtual lock = return public virtual public virtual call System.Threading.ReaderWriterLock.AcquireReaderLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireReaderLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireReaderLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireReaderLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireReaderLock(TimeSpan) try return finally call System.Threading.ReaderWriterLock.ReleaseReaderLock() call System.Threading.ReaderWriterLock.ReleaseReaderLock() call System.Threading.ReaderWriterLock.ReleaseReaderLock() call System.Threading.ReaderWriterLock.ReleaseReaderLock() call System.Threading.ReaderWriterLock.ReleaseReaderLock() public virtual public virtual call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) call System.Threading.ReaderWriterLock.AcquireWriterLock(TimeSpan) try return finally call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() call System.Threading.ReaderWriterLock.ReleaseWriterLock() return == :