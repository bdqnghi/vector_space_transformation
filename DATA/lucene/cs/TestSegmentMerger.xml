Lucene.Net.Index Lucene.Net.Support using NUnit.Framework using Lucene.Net.Util.BytesRef Lucene.Net.Codecs.Codec Lucene.Net.Util.Constants Lucene.Net.Store.Directory Lucene.Net.Search.DocIdSetIterator Documents.Document Lucene.Net.Util.FixedBitSet Lucene.Net.Util.InfoStream Lucene.Net.Util.LuceneTestCase Lucene.Net.Util.TestUtil class attribute Lucene.Net.Index.TestSegmentMerger super super LuceneTestCase SegmentReader SegmentReader Document Document string Directory Directory Directory SegmentCommitInfo SegmentCommitInfo public override public override = new = new = = = decl_stmt Lucene.Net.Index.SegmentCommitInfo = decl_stmt Lucene.Net.Index.SegmentCommitInfo = = new = new public override public override call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public virtual public virtual != != != != != Terms string int SegmentReader Document TermsEnum SegmentMerger int MergeState SegmentInfo Codec DocsEnum int int Document public virtual public virtual decl_stmt Lucene.Net.Codecs.Codec = decl_stmt Lucene.Net.Index.SegmentInfo = new - decl_stmt Lucene.Net.Index.SegmentMerger = new < new decl_stmt Lucene.Net.Index.MergeState = call Lucene.Net.Index.SegmentMerger.Merge() call Lucene.Net.Index.SegmentMerger.Merge() call Lucene.Net.Index.SegmentMerger.Merge() call Lucene.Net.Index.SegmentMerger.Merge() call Lucene.Net.Index.SegmentMerger.Merge() decl_stmt int = == decl_stmt Lucene.Net.Index.SegmentReader = new new new - - != == decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) != == - decl_stmt Lucene.Net.Documents.Document = call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) call Lucene.Net.Index.SegmentReader.Document(int,StoredFieldVisitor) != == - decl_stmt Lucene.Net.Index.DocsEnum = new != call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() call DocsEnum.NextDoc() != decl_stmt int = foreach in if ++ decl_stmt Lucene.Net.Index.Terms = call Lucene.Net.Index.SegmentReader.GetTermVectors(int) call Lucene.Net.Index.SegmentReader.GetTermVectors(int) call Lucene.Net.Index.SegmentReader.GetTermVectors(int) call Lucene.Net.Index.SegmentReader.GetTermVectors(int) call Lucene.Net.Index.SegmentReader.GetTermVectors(int) call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() call Terms.Size() decl_stmt Lucene.Net.Index.TermsEnum = call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() call Terms.Iterator() decl_stmt int = while call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() != decl_stmt string = call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() decl_stmt int = int call Lucene.Net.Index.TermsEnum.TotalTermFreq() call Lucene.Net.Index.TermsEnum.TotalTermFreq() call Lucene.Net.Index.TermsEnum.TotalTermFreq() call Lucene.Net.Index.TermsEnum.TotalTermFreq() call Lucene.Net.Index.TermsEnum.TotalTermFreq() != - == ++ call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() call SegmentReader.Dispose() private static private static if != return for = < ++ if != return return int int FixedBitSet int int decl MergeState public virtual public virtual decl_stmt int = decl_stmt int = decl_stmt int = - decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = new for = < ++ while decl_stmt int = if ! call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) call Lucene.Net.Spatial.Util.FixedBitSet.Set(int) break decl_stmt DocMap = for = = < ++ if ! call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) - call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get() ++ else - call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get() call decl MergeState.Get()