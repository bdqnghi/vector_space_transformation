Lucene.Net.Util.Fst System using System.Diagnostics using class decl BytesReader decl T int int decl FST T int int protected internal protected internal if == = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() return decl_stmt int = = while < && <= + decl_stmt int = - if < break else if > call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() - break ++ protected internal virtual protected internal virtual if == = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() else while -- if == return call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() int bool decl BytesReader int int int int int protected internal virtual protected internal virtual decl_stmt int = while if != && != - decl_stmt BytesReader < < = decl_stmt int = decl_stmt int = - decl_stmt int = decl_stmt bool = while <= = + >> = call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() * + decl_stmt int = call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() decl_stmt int = - if < = + else if > = - else = break if = - call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() == == + + + + + = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < return = = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() = continue else if == = - call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() -- while if == return if == return if ! call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() return -- else = > : - call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() > return else if == = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < return = = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() = else if > return else if -- while if == return if == return if ! call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() return -- else call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() int bool decl BytesReader int int int int int protected internal virtual protected internal virtual decl_stmt int = while if != && != < < decl_stmt BytesReader < < = decl_stmt int = decl_stmt int = - decl_stmt int = decl_stmt bool = while <= = + >> = call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() call int.SkipBytes() * + decl_stmt int = call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() call decl FST.ReadLabel() decl_stmt int = - if < = + else if > = - else = break if = - call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() == == + + + + + = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < return = = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() = continue else if == - while call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() - if < while ! && call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() < call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() return -- if == return = = else = > : - call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() call decl FST.ReadNextRealArc() || call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() > < + + + return else if == = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < return = = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() = else if > while call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() - if < while ! && call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() < call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() return -- if == return = = else if ! if call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() call decl FST.ReadNextArcLabel() > return else call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() call decl FST.ReadNextArc() else return decl BytesReader int protected internal virtual protected internal virtual decl_stmt int = decl_stmt BytesReader < < = while if == call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() return = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < return = = = decl T private private ++ if <= = if <= decl_stmt T = new + = private private != while = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < break = = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < break = call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() call decl FST.ReadFirstTargetArc() = private private != while = = call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() call decl FST.Outputs() - if == < < break = call decl FST.ReadLastTargetArc() call decl FST.ReadLastTargetArc() call decl FST.ReadLastTargetArc() call decl FST.ReadLastTargetArc() call decl FST.ReadLastTargetArc() private < < < < private < < < < if == = new < < < < return