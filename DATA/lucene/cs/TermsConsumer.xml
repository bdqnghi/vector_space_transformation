Lucene.Net.Codecs System.Collections.Generic using System.Diagnostics using Lucene.Net.Util.BytesRef Lucene.Net.Index.DocsAndPositionsEnum Lucene.Net.Index.DocsEnum Lucene.Net.Index.FieldInfo Lucene.Net.Util.FixedBitSet Lucene.Net.Index.MergeState Lucene.Net.Index.MultiDocsAndPositionsEnum Lucene.Net.Index.MultiDocsEnum Lucene.Net.Index.TermsEnum class Lucene.Net.Codecs.TermsConsumer MappingMultiDocsEnum MappingMultiDocsAndPositionsEnum MappingMultiDocsEnum MultiDocsEnum BytesRef TermStats long FixedBitSet MultiDocsEnum MultiDocsAndPositionsEnum long long PostingsConsumer public virtual public virtual ? decl_stmt Lucene.Net.Util.BytesRef != decl_stmt long = decl_stmt long = decl_stmt long = decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = new if == if == = new = decl_stmt Lucene.Net.Index.MultiDocsEnum = while = != = if != call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) decl_stmt Lucene.Net.Codecs.PostingsConsumer = decl_stmt org.apache.lucene.misc.TermStats = call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() if > += += += if > / = else if == if == = new = decl_stmt Lucene.Net.Index.MultiDocsEnum = while = != = != call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) call Lucene.Net.Codecs.MappingMultiDocsEnum.Reset(MultiDocsEnum) decl_stmt Lucene.Net.Codecs.PostingsConsumer = decl_stmt org.apache.lucene.misc.TermStats = call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() if > += += += if > / = else if == if == = new = decl_stmt Lucene.Net.Index.MultiDocsAndPositionsEnum = while = != = != call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) decl_stmt Lucene.Net.Codecs.PostingsConsumer = decl_stmt org.apache.lucene.misc.TermStats = call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() if > += += += if > / = else == if == = new = decl_stmt Lucene.Net.Index.MultiDocsAndPositionsEnum = while = != = != call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) call Lucene.Net.Codecs.MappingMultiDocsAndPositionsEnum.Reset(MultiDocsAndPositionsEnum) decl_stmt Lucene.Net.Codecs.PostingsConsumer = decl_stmt org.apache.lucene.misc.TermStats = call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() call PostingsConsumer.Merge() if > += += += if > / = == - : call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality() call Lucene.Net.Spatial.Util.FixedBitSet.Cardinality()