Lucene.Net.Index System using System.Linq using Lucene.Net.Documents using Lucene.Net.Documents.Document Lucene.Net.Store.Directory Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput Lucene.Net.Store.RAMOutputStream class Lucene.Net.Index.FieldsWriter super super IDisposable byte int FieldInfos bool int IndexOutput int IndexOutput byte byte int internal internal = internal internal call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() internal internal call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() internal internal call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() call IndexOutput.Flush() public public if try if != try call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() finally = catch try if != try call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() finally = catch throw finally if != try call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() finally = decl byte byte int int internal internal call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt byte = if |= if |= call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() call IndexOutput.WriteByte() if decl_stmt byte = decl_stmt int = decl_stmt int = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() call IndexOutput.WriteBytes() else call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() long long internal internal decl_stmt long = decl_stmt long = for = < ++ call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() += call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() call IndexOutput.CopyBytes() - == decl System decl Collections internal internal call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() decl_stmt Generic < = decl_stmt int = call decl System.Count() call decl System.Count() call decl System.Count() call decl System.Count() call decl System.Count() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() foreach in if call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int) call Lucene.Net.Index.FieldInfos.FieldInfo(int)