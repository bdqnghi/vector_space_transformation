Lucene.Net.Facet.Taxonomy System using System.Collections.Generic using System.Linq using Lucene.Net.Randomized.Generators using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Documents.Document Lucene.Net.Documents.Field.Store Lucene.Net.Documents.StringField Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter Lucene.Net.Index.DirectoryReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Index.NoMergePolicy Lucene.Net.Index.Term Lucene.Net.Search.IndexSearcher Lucene.Net.Search.MatchAllDocsQuery Lucene.Net.Search.TermQuery Lucene.Net.Store.Directory Lucene.Net.Util.IOUtils class attribute Lucene.Net.Facet.Taxonomy.TestTaxonomyFacetCounts2 super super FacetTestCase Term decl Net decl Directory decl IDictionary decl Store decl FacetField string string int int decl FacetField public static public static decl List decl List int decl List int private static < private static < decl_stmt int = + decl_stmt int = + decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() = = decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.SubList() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return private static private static new call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() call Lucene.Net.Index.Term.Text() string decl IList private static private static decl_stmt System.Collections.Generic.IList < = foreach in decl_stmt string = + + = + if = + = + = + = + if = + = + = + FacetsConfig decl_stmt Lucene.Net.Facet.FacetsConfig = new call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetMultiValued(string,bool) call Lucene.Net.Facet.FacetsConfig.SetRequireDimCount(string,bool) call Lucene.Net.Facet.FacetsConfig.SetRequireDimCount(string,bool) call Lucene.Net.Facet.FacetsConfig.SetRequireDimCount(string,bool) call Lucene.Net.Facet.FacetsConfig.SetRequireDimCount(string,bool) call Lucene.Net.Facet.FacetsConfig.SetRequireDimCount(string,bool) call Lucene.Net.Facet.FacetsConfig.SetHierarchical(string,bool) call Lucene.Net.Facet.FacetsConfig.SetHierarchical(string,bool) call Lucene.Net.Facet.FacetsConfig.SetHierarchical(string,bool) call Lucene.Net.Facet.FacetsConfig.SetHierarchical(string,bool) call Lucene.Net.Facet.FacetsConfig.SetHierarchical(string,bool) return Document int private static private static decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new Document int Random FacetsConfig private static private static < ? decl_stmt System.Random = decl_stmt int = decl_stmt Lucene.Net.Facet.FacetsConfig = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) Document int Random FacetsConfig private static private static < ? decl_stmt System.Random = decl_stmt int = decl_stmt Lucene.Net.Facet.FacetsConfig = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) Document int Random FacetsConfig bool private static private static < ? decl_stmt System.Random = decl_stmt int = decl_stmt Lucene.Net.Facet.FacetsConfig = for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt bool = call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() call Random.NextBoolean() if call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) decl IDictionary private static < ? private static < ? decl_stmt SpellChecker.Net.Search.Spell.IDictionary < ? = new < ? = = = = foreach in + + = foreach in + + = foreach in + + = foreach in + + = return TaxonomyWriter IndexWriter IndexWriterConfig public static public static = = decl_stmt Lucene.Net.Index.IndexWriterConfig = new decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Facet.Taxonomy.TaxonomyWriter = new = = IndexSearcher DirectoryReader Facets TermQuery FacetResult var FacetsCollector public virtual public virtual decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsCollector = new decl_stmt Lucene.Net.Search.TermQuery = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Facets = decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() - int foreach in + + = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() foreach in + + IndexSearcher DirectoryReader Facets FacetResult var FacetsCollector int public virtual public virtual decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() - int decl_stmt int = foreach in + + int <= + + + = int = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() = foreach in + + int <= + + + = int IndexSearcher DirectoryReader Facets FacetResult var FacetsCollector public virtual public virtual decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() - int foreach in + + = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() foreach in + + IndexSearcher DirectoryReader Facets FacetResult var var public virtual public virtual decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt var = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new decl_stmt Facets = decl_stmt Lucene.Net.Facet.FacetResult = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() foreach in + + = call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() call Facets.GetTopChildren() foreach in + +