Lucene.Net.Facet.Range System.Collections.Generic using Lucene.Net.Facet using Lucene.Net.Support using Lucene.Net.Documents.DoubleDocValuesField Lucene.Net.Documents.FloatDocValuesField FacetsCollector.MatchingDocs Lucene.Net.Queries.Function.FunctionValues Lucene.Net.Queries.Function.ValueSource Lucene.Net.Queries.Function.ValueSources.DoubleFieldSource Lucene.Net.Queries.Function.ValueSources.FloatFieldSource Lucene.Net.Search.DocIdSet Lucene.Net.Search.Filter Lucene.Net.Util.Bits Lucene.Net.Search.DocIdSetIterator Lucene.Net.Util.NumericUtils class Lucene.Net.Facet.Range.DoubleRangeFacetCounts super super RangeFacetCounts decl LongRange FunctionValues int LongRangeCounter decl DoubleRange DoubleRange int DocIdSetIterator Bits DocIdSet private private < decl_stmt Lucene.Net.Facet.Range.DoubleRange = decl_stmt Lucene.Net.Facet.Range.LongRange = new for = < ++ decl_stmt Lucene.Net.Facet.Range.DoubleRange = = new decl_stmt Lucene.Net.Facet.Range.LongRangeCounter = new decl_stmt int = foreach in decl_stmt Lucene.Net.Queries.Function.FunctionValues = new < += decl_stmt Lucene.Net.Spatial.Util.Bits if != decl_stmt Lucene.Net.Search.DocIdSet = if == continue = call DocIdSet.GetBits() call DocIdSet.GetBits() call DocIdSet.GetBits() call DocIdSet.GetBits() call DocIdSet.GetBits() if == throw new else = decl_stmt Lucene.Net.Search.DocIdSetIterator = decl_stmt int while = call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() != if != && call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() call Bits.Get() == ++ continue if call Lucene.Net.Queries.Function.FunctionValues.Exists(int) call Lucene.Net.Queries.Function.FunctionValues.Exists(int) call Lucene.Net.Queries.Function.FunctionValues.Exists(int) call Lucene.Net.Queries.Function.FunctionValues.Exists(int) call Lucene.Net.Queries.Function.FunctionValues.Exists(int) call Lucene.Net.Facet.Range.LongRangeCounter.add(long) call Lucene.Net.Facet.Range.LongRangeCounter.add(long) call Lucene.Net.Facet.Range.LongRangeCounter.add(long) call Lucene.Net.Facet.Range.LongRangeCounter.add(long) call Lucene.Net.Facet.Range.LongRangeCounter.add(long) call Lucene.Net.Queries.Function.FunctionValues.DoubleVal(int) call Lucene.Net.Queries.Function.FunctionValues.DoubleVal(int) call Lucene.Net.Queries.Function.FunctionValues.DoubleVal(int) call Lucene.Net.Queries.Function.FunctionValues.DoubleVal(int) call Lucene.Net.Queries.Function.FunctionValues.DoubleVal(int) else ++ += call Lucene.Net.Facet.Range.LongRangeCounter.fillCounts(int) call Lucene.Net.Facet.Range.LongRangeCounter.fillCounts(int) call Lucene.Net.Facet.Range.LongRangeCounter.fillCounts(int) call Lucene.Net.Facet.Range.LongRangeCounter.fillCounts(int) call Lucene.Net.Facet.Range.LongRangeCounter.fillCounts(int) -=