Lucene.Net.Index System.Collections.Generic using System.Diagnostics using Lucene.Net.Util.Bits Lucene.Net.Index.FieldInfo.DocValuesType_e Lucene.Net.Index.MultiDocValues.MultiSortedDocValues Lucene.Net.Index.MultiDocValues.MultiSortedSetDocValues Lucene.Net.Index.MultiDocValues.OrdinalMap class Lucene.Net.Index.SlowCompositeReaderWrapper super super AtomicReader Fields decl IDictionary CompositeReader Bits CompositeReader public static public static decl_stmt Lucene.Net.Index.CompositeReader = as if != return new else is return public override public override return + + return public override public override return public override public override return public override public override return OrdinalMap decl int decl SortedDocValues MultiSortedDocValues AtomicReaderContext SortedDocValues SortedDocValues int public override public override decl_stmt Lucene.Net.Facet.Taxonomy.Directory.OrdinalMap = lock if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out decl_stmt Lucene.Net.Index.SortedDocValues = decl_stmt MultiSortedDocValues = as if != = if == = return if != return decl_stmt int = decl_stmt Lucene.Net.Index.SortedDocValues = new decl_stmt int = new + for = < ++ decl_stmt Lucene.Net.Index.AtomicReaderContext = decl_stmt Lucene.Net.Index.SortedDocValues = call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() ?? = = = return new OrdinalMap decl int var MultiSortedSetDocValues AtomicReaderContext SortedSetDocValues SortedSetDocValues int public override public override decl_stmt Lucene.Net.Facet.Taxonomy.Directory.OrdinalMap = lock if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out decl_stmt Lucene.Net.Index.SortedSetDocValues = decl_stmt MultiSortedSetDocValues = as if != = if == = return if != return != decl_stmt int = decl_stmt var = new decl_stmt int = new + for = < ++ decl_stmt Lucene.Net.Index.AtomicReaderContext = decl_stmt Lucene.Net.Index.SortedSetDocValues = call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() call AtomicReaderContext.AtomicReader() ?? = = = return new public override public override return public override public override return call CompositeReader.GetTermVectors() call CompositeReader.GetTermVectors() call CompositeReader.GetTermVectors() call CompositeReader.GetTermVectors() call CompositeReader.GetTermVectors() return return public override public override call CompositeReader.Document() call CompositeReader.Document() call CompositeReader.Document() call CompositeReader.Document() call CompositeReader.Document() return return return return protected internal override protected internal override call CompositeReader.Dispose() call CompositeReader.Dispose() call CompositeReader.Dispose() call CompositeReader.Dispose() call CompositeReader.Dispose() public override public override foreach in