Lucene.Net.Index System.Collections.Generic using System.Diagnostics using System.IO using Lucene.Net.Store.Directory Lucene.Net.Store.NoSuchDirectoryException class Lucene.Net.Index.DirectoryReader super int Directory public static public static return public static public static return public static public static return public static public static return public static public static return DirectoryReader public static public static decl_stmt Lucene.Net.Index.DirectoryReader = != return DirectoryReader public static public static decl_stmt Lucene.Net.Index.DirectoryReader = != return DirectoryReader public static public static decl_stmt Lucene.Net.Index.DirectoryReader = != return decl string SegmentInfos decl List long string SegmentInfos public static < public static < decl_stmt string = decl_stmt System.Collections.Generic.List < = new < decl_stmt Lucene.Net.Index.SegmentInfos = new call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) decl_stmt long = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() && ! call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() && < decl_stmt Lucene.Net.Index.SegmentInfos = new try call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) catch = if != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() new call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() return decl string string public static public static decl_stmt string try = catch return if != decl_stmt string = + foreach in if || return return public public return