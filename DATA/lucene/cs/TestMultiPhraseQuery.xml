Lucene.Net.Search System using System.Collections.Generic using System.Linq using Lucene.Net.Documents using NUnit.Framework using Lucene.Net.Util.BytesRef Lucene.Net.Analysis.CannedTokenStream Lucene.Net.Search.Similarities.DefaultSimilarity Lucene.Net.Store.Directory Lucene.Net.Index.DirectoryReader Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Util.LuceneTestCase Lucene.Net.Index.MultiFields Lucene.Net.Store.RAMDirectory Lucene.Net.Index.RandomIndexWriter Lucene.Net.Index.Term Lucene.Net.Index.TermsEnum TextField Lucene.Net.Analysis.Token class attribute Lucene.Net.Search.TestMultiPhraseQuery super super LuceneTestCase decl Token decl Token decl Token decl Token MultiPhraseQuery IndexSearcher MultiPhraseQuery Directory MultiPhraseQuery MultiPhraseQuery decl LinkedList RandomIndexWriter string string decl ScoreDoc IndexReader TermsEnum public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new decl_stmt System.Collections.Generic.LinkedList < = new < decl_stmt string = decl_stmt Lucene.Net.Index.TermsEnum = call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) new do decl_stmt string = call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() new else break call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() != call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() call decl LinkedList.Clear() = call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) call Lucene.Net.Index.TermsEnum.SeekCeil(BytesRef) new do if call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() new call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Term() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() call Lucene.Net.Index.TermsEnum.Next() != call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) call Lucene.Net.Search.MultiPhraseQuery.ToString(string) = = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) decl_stmt Lucene.Net.Search.MultiPhraseQuery = new try call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new catch call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiPhraseQuery IndexSearcher IndexReader RandomIndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiPhraseQuery IndexSearcher IndexReader RandomIndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiPhraseQuery IndexSearcher IndexReader RandomIndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Document private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) IndexSearcher decl ScoreDoc Directory RandomIndexWriter BooleanQuery IndexReader MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexSearcher decl ScoreDoc Directory RandomIndexWriter BooleanQuery IndexReader MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) decl_stmt Lucene.Net.Search.ScoreDoc = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiPhraseQuery IndexSearcher RandomIndexWriter Directory IndexReader public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Search.IndexSearcher.Explain(Query,int) call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() MultiPhraseQuery MultiPhraseQuery Term Term public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) decl_stmt Lucene.Net.Index.Term = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() decl_stmt Lucene.Net.Index.Term = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() == call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Equals(object) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() call MultiPhraseQuery.GetHashCode() Document private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) public virtual public virtual new IndexSearcher Directory Weight RandomIndexWriter IndexReader MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = = new decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.MultiPhraseQuery.CreateWeight(IndexSearcher) call Lucene.Net.Search.MultiPhraseQuery.CreateWeight(IndexSearcher) call Lucene.Net.Search.MultiPhraseQuery.CreateWeight(IndexSearcher) call Lucene.Net.Search.MultiPhraseQuery.CreateWeight(IndexSearcher) call Lucene.Net.Search.MultiPhraseQuery.CreateWeight(IndexSearcher) * call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() public override public override return new TopDocs Document RandomIndexWriter decl Token IndexSearcher IndexReader MultiPhraseQuery Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new decl_stmt Lucene.Net.Analysis.Token = new = new = = new = = new = decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.MultiPhraseQuery = new if call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new else call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Token private static private static decl_stmt Lucene.Net.Analysis.Token = new call Token.Append() call Token.Append() call Token.Append() call Token.Append() call Token.Append() = return MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new - call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new = = TopDocs IndexWriterConfig IndexWriter IndexSearcher IndexReader Document Directory ScoreDoc private private decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = decl_stmt Lucene.Net.Index.IndexWriter = new decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new new call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) call Lucene.Net.Index.IndexWriter.AddDocument(IEnumerable,Analyzer) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt Lucene.Net.Search.IndexSearcher = if + decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) if for = < ++ decl_stmt Lucene.Net.Search.ScoreDoc = + + + call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() PhraseQuery int public virtual public virtual decl_stmt Lucene.Net.Search.PhraseQuery = new decl_stmt int = - foreach in += call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) call Lucene.Net.Search.PhraseQuery.Add(Term) new = = int MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new decl_stmt int = - foreach in += call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new new = = decl Term int MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new foreach in decl_stmt Lucene.Net.Index.Term = decl_stmt int = - call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) = = decl Term int MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new foreach in decl_stmt Lucene.Net.Index.Term = decl_stmt int = - call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) = decl Term private private decl_stmt Lucene.Net.Index.Term = new for = < ++ = new return MultiPhraseQuery public virtual public virtual decl_stmt Lucene.Net.Search.MultiPhraseQuery = new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) call Lucene.Net.Search.MultiPhraseQuery.Add(Term) new try = - catch