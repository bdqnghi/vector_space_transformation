Lucene.Net.Index System using System.Threading using Lucene.Net.Attributes using Lucene.Net.Documents using Lucene.Net.Search using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using NUnit.Framework using Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Index.IndexWriterConfig.OpenMode_e class attribute Lucene.Net.Index.TestStressIndexing super super LuceneTestCase long public override public override decl_stmt long = + = try do if break ++ < catch + = internal virtual internal virtual for = < ++ if != && return return int decl Documents decl Document public override public override for = < ++ decl_stmt Lucene.Net.Documents.Document = new decl_stmt int = call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() ++ call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() call decl Documents.Add() decl_stmt int = - for = < ++ new + -= IndexSearcher IndexReader public override public override for = < ++ decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() += IndexerThread decl TimedThread int IndexWriter SearcherThread SearcherThread IndexerThread public virtual public virtual decl_stmt Lucene.Net.Index.IndexWriter = new new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt TimedThread = new decl_stmt int = decl_stmt IndexerThread = new ++ = call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() decl_stmt IndexerThread = new ++ = call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() call IndexerThread.Start() decl_stmt SearcherThread = new ++ = call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() decl_stmt SearcherThread = new ++ = call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() for = < ++ call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) for = < ++ ! Directory MockDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.MockDirectoryWrapper = as if != = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()