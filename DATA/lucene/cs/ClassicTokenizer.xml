Lucene.Net.Analysis.Standard Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Util using org.apache.lucene.analysis.standard using System.IO.TextReader class Lucene.Net.Analysis.Standard.ClassicTokenizer super super Tokenizer CharTermAttribute int int StandardTokenizerInterface int int PositionIncrementAttribute int int int decl string int OffsetAttribute int int TypeAttribute int if < throw new = return private private = new int int public override public override = while decl_stmt int = if == return if call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() <= = + call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.getText(ICharTermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.getText(ICharTermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.getText(ICharTermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.getText(ICharTermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.getText(ICharTermAttribute) decl_stmt int = call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) + if == = = - else = return else ++ int public override public override decl_stmt int = call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yychar() + call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerInterface.yylength() call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) call Lucene.Net.Analysis.Tokenattributes.OffsetAttribute.SetOffset(int,int) = + public override public override call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() public override public override call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() call StandardTokenizerInterface.yyreset() =