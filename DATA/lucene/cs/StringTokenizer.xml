Lucene.Net.Support System using System.Collections.Generic using System.Text using class Lucene.Net.Support.StringTokenizer TokenParsingStrategy int public public return call TokenParsingStrategy.HasMoreTokens() call TokenParsingStrategy.HasMoreTokens() call TokenParsingStrategy.HasMoreTokens() call TokenParsingStrategy.HasMoreTokens() call TokenParsingStrategy.HasMoreTokens() public public return call TokenParsingStrategy.NextToken() call TokenParsingStrategy.NextToken() call TokenParsingStrategy.NextToken() call TokenParsingStrategy.NextToken() call TokenParsingStrategy.NextToken() public public return call TokenParsingStrategy.CountTokens() call TokenParsingStrategy.CountTokens() call TokenParsingStrategy.CountTokens() call TokenParsingStrategy.CountTokens() call TokenParsingStrategy.CountTokens() public override public override if >= return if return for = < ++ if ! return return StringBuilder char public override public override if >= throw new if && ++ return decl_stmt System.Text.StringBuilder = new for = < ++ decl_stmt char = = if break else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int bool char public override public override if >= return decl_stmt int = decl_stmt bool = for = < ++ decl_stmt char = if if ! ++ = if ++ else = if ! ++ return StringBuilder private private decl_stmt System.Text.StringBuilder = new foreach in if if > call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.Clear() call System.Text.StringBuilder.Clear() call System.Text.StringBuilder.Clear() call System.Text.StringBuilder.Clear() call System.Text.StringBuilder.Clear() if else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if > call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public override public override return < public override public override return ++ public override public override return -