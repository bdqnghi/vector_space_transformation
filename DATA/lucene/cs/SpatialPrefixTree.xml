Lucene.Net.Spatial.Prefix.Tree System using System.Collections.Generic using System.Collections.ObjectModel using System.Diagnostics using System.Linq using System.Runtime.CompilerServices using System.Text using Spatial4n.Core.Context using Spatial4n.Core.Shapes using class Lucene.Net.Spatial.Prefix.Tree.SpatialPrefixTree Cell SpatialContext int return return public override public override return + + + + + Cell double Rectangle double public virtual public virtual if < || || throw new decl_stmt Lucene.Net.Spatial.Prefix.Tree.Cell = call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() call SpatialContext.GetWorldBounds() decl_stmt Rectangle = call Cell.GetShape() call Cell.GetShape() call Cell.GetShape() call Cell.GetShape() call Cell.GetShape() decl_stmt double = call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() call Rectangle.GetWidth() decl_stmt double = call Rectangle.GetHeight() call Rectangle.GetHeight() call Rectangle.GetHeight() call Rectangle.GetHeight() call Rectangle.GetHeight() return * + * if == = return public public if == return return protected internal virtual protected internal virtual return decl IList public virtual < public virtual < if > throw new if is return decl_stmt System.Collections.Generic.IList < = new < : return decl ICollection int private private < if == if return if && != decl_stmt System.Collections.Generic.ICollection < = decl_stmt int = foreach in if ++ if && == && != do - -- > if ! return return Cell decl IList string public virtual < public virtual < decl_stmt Lucene.Net.Spatial.Prefix.Tree.Cell = if ! if ! return new < new else return new < new endif decl_stmt string = == decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return decl IList string public static < public static < < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt string = if call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() + char else call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return