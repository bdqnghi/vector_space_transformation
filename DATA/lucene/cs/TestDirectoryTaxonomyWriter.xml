Lucene.Net.Facet.Taxonomy.Directory System using System.Collections.Generic using System.Collections.Concurrent using System.IO using System.Threading using Lucene.Net.Support using NUnit.Framework using Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Documents.Document Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.MemoryOrdinalMap Lucene.Net.Facet.Taxonomy.WriterCache.TaxonomyWriterCache Lucene.Net.Facet.Taxonomy.WriterCache.Cl2oTaxonomyWriterCache Lucene.Net.Facet.Taxonomy.WriterCache.LruTaxonomyWriterCache Lucene.Net.Index.DirectoryReader Lucene.Net.Index.IndexReader Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig.OpenMode_e Lucene.Net.Index.IndexWriterConfig Lucene.Net.Index.SegmentInfos Lucene.Net.Search.IndexSearcher Lucene.Net.Store.AlreadyClosedException Lucene.Net.Store.Directory Lucene.Net.Util.IOUtils Lucene.Net.Util.TestUtil class Lucene.Net.Facet.Taxonomy.Directory.TestDirectoryTaxonomyWriter super super FacetTestCase TaxonomyWriterCache public virtual public virtual public virtual public virtual return - public virtual public virtual return return public virtual public virtual IndexReader var Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() decl IDictionary var var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < = = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt var = decl_stmt var = + call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new = new < call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() + call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = = + call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Rollback() call var.Rollback() call var.Rollback() call var.Rollback() call var.Rollback() try call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new catch call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() try call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new catch call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() private private = new < DirectoryTaxonomyWriter var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new new decl_stmt var = new new decl_stmt var = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() = new new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() = new new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var Directory var public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new new decl_stmt var = new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt var = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() AtomicInteger double int var TaxonomyWriterCache decl ThreadClass FacetLabel int decl int int var FacetLabel int DirectoryTaxonomyReader int FacetLabel Directory public virtual public virtual decl_stmt int = decl_stmt int = * decl_stmt Lucene.Net.Support.AtomicInteger = new decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new < decl_stmt double = decl_stmt Lucene.Net.Facet.Taxonomy.WriterCache.TaxonomyWriterCache if < = new else if && > = else = new / if + decl_stmt var = new decl_stmt Lucene.Net.Support.ThreadClass = new for = < ++ = new foreach in foreach in call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader = new if + != foreach in decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new if call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) == - + + decl_stmt int = call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() call DirectoryTaxonomyReader.ParallelTaxonomyArrays() foreach in decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) > + decl_stmt int = decl_stmt int = decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new for = < ++ = call Lucene.Net.Facet.Taxonomy.FacetLabel.Subpath(int) call Lucene.Net.Facet.Taxonomy.FacetLabel.Subpath(int) call Lucene.Net.Facet.Taxonomy.FacetLabel.Subpath(int) call Lucene.Net.Facet.Taxonomy.FacetLabel.Subpath(int) call Lucene.Net.Facet.Taxonomy.FacetLabel.Subpath(int) + decl_stmt int = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader.GetOrdinal(FacetLabel) + = Random int string string string string int FacetLabel public override public override decl_stmt System.Random = while > try decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new / / / decl_stmt int = != - + + + decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt string = = = = = catch throw new SegmentInfos private private decl_stmt Lucene.Net.Index.SegmentInfos = new call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) call Lucene.Net.Index.SegmentInfos.Read(Directory) return int long long var int int Directory Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt var = new decl_stmt int = call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt Lucene.Net.Store.Directory = = new decl_stmt int = call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Commit() call var.Commit() call var.Commit() call var.Commit() call var.Commit() decl_stmt long = call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.ReplaceTaxonomy() call var.AddTaxonomy() call var.AddTaxonomy() call var.AddTaxonomy() call var.AddTaxonomy() call var.AddTaxonomy() new call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new decl_stmt int = call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() call var.AddCategory() new call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() decl_stmt long = < call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyWriter int Directory int public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt int = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new decl_stmt int = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new == call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyWriter long Directory long public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyWriter long Directory long public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryTaxonomyWriter long Directory long public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.PrepareCommit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() decl_stmt long = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() int DrillDownQuery var Directory IndexSearcher DirectoryReader FacetField DirectoryTaxonomyWriter string FacetLabel int IndexWriter FacetsConfig Document string public virtual public virtual decl_stmt Lucene.Net.Store.Directory = = decl_stmt Lucene.Net.Index.IndexWriter = new new decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new new decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt string = decl_stmt int = - decl_stmt int = - = decl_stmt Lucene.Net.Facet.FacetField = new decl_stmt Lucene.Net.Facet.Taxonomy.FacetLabel = new = call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() decl_stmt Lucene.Net.Documents.Document = new call string.Add() call string.Add() call string.Add() call string.Add() call string.Add() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call string.Build() call string.Build() call string.Build() call string.Build() call string.Build() for = < ++ decl_stmt string = call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() new = new call string.Add() call string.Add() call string.Add() call string.Add() call string.Add() new call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call DirectoryTaxonomyWriter.AddDocument() call string.Build() call string.Build() call string.Build() call string.Build() call string.Build() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() call FacetsConfig.AddCategory() decl_stmt Lucene.Net.Index.DirectoryReader = decl_stmt var = new decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt Lucene.Net.Facet.DrillDownQuery = new new call DrillDownQuery.Search() call DrillDownQuery.Search() call DrillDownQuery.Search() call DrillDownQuery.Search() call DrillDownQuery.Search() int DirectoryTaxonomyWriter int var var public virtual public virtual decl_stmt var = decl_stmt var = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt int = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() = new decl_stmt int = call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.AddCategory(FacetLabel) new call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Commit() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.ReplaceTaxonomy(Directory) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.ReplaceTaxonomy(Directory) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.ReplaceTaxonomy(Directory) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.ReplaceTaxonomy(Directory) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.ReplaceTaxonomy(Directory) - call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.GetParent(int) call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose()