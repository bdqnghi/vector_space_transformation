Lucene.Net.Search System using System.Collections.Generic using System.Diagnostics using System.Text using Lucene.Net.Index using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Util.Bits Lucene.Net.Index.IndexReader Lucene.Net.Index.Term Lucene.Net.Util.ToStringUtils class Lucene.Net.Search.FilteredQuery super super Query Query FilterStrategy FilterStrategy FilterStrategy FilterStrategy Filter FilterStrategy Weight public override public override decl_stmt Lucene.Net.Search.Weight = call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) call Lucene.Net.Search.Query.CreateWeight(IndexSearcher) return new public override public override return return * * public override public override * Explanation DocIdSetIterator DocIdSet Explanation Filter public override public override decl_stmt Lucene.Net.Search.Explanation = decl_stmt MS.Internal.Xml.XPath.Filter = decl_stmt Lucene.Net.Search.DocIdSet = call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() call Filter.GetDocIdSet() decl_stmt Lucene.Net.Search.DocIdSetIterator = == : call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() call DocIdSet.GetIterator() if == = if call Lucene.Net.Search.DocIdSetIterator.Advance(int) call Lucene.Net.Search.DocIdSetIterator.Advance(int) call Lucene.Net.Search.DocIdSetIterator.Advance(int) call Lucene.Net.Search.DocIdSetIterator.Advance(int) call Lucene.Net.Search.DocIdSetIterator.Advance(int) == return else decl_stmt Lucene.Net.Search.Explanation = new + call Filter.ToString() call Filter.ToString() call Filter.ToString() call Filter.ToString() call Filter.ToString() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() call Explanation.AddDetail() return return DocIdSet public override public override != decl_stmt Lucene.Net.Search.DocIdSet = if == return return DocIdSet public override public override != decl_stmt Lucene.Net.Search.DocIdSet = if == return return int public override public override decl_stmt int for = if == || return = int public override public override decl_stmt int = if != && ! return = else return = public override public override return public override public override return public override public override return return new new public override public override return int public override public override = if == - while decl_stmt int = if < if else break return != internal internal for if < = else if == return else = public override sealed public override sealed = return protected internal virtual protected internal virtual return public override sealed public override sealed if > = return public override sealed public override sealed return public override sealed public override sealed return public override sealed public override sealed return return new new public override public override return protected internal override protected internal override if != - return else return Query Query public override public override decl_stmt Lucene.Net.Search.Query = call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) call Lucene.Net.Search.Query.Rewrite(IndexReader) if != decl_stmt Lucene.Net.Search.Query = new = return else return return return return public override public override < StringBuilder public override public override decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call Query.ToString() call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) FilteredQuery public override public override if == return if ! return is decl_stmt Lucene.Net.Search.FilteredQuery = return call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() call FilteredQuery.Query_Renamed() && call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() call FilteredQuery.Filter_Renamed() && call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() call FilteredQuery.strategy() int public override public override decl_stmt int = = * + call FilterStrategy.GetHashCode() call FilterStrategy.GetHashCode() call FilterStrategy.GetHashCode() call FilterStrategy.GetHashCode() call FilterStrategy.GetHashCode() = * + call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() call Lucene.Net.Search.Query.GetHashCode() = * + call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() call Filter.GetHashCode() return Scorer public virtual public virtual decl_stmt Lucene.Net.Search.Scorer = if == return return new Scorer int bool DocIdSetIterator Bits public override public override decl_stmt Lucene.Net.Search.DocIdSetIterator = if == return decl_stmt int = call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() call Lucene.Net.Search.DocIdSetIterator.NextDoc() if == return decl_stmt Lucene.Net.Spatial.Util.Bits = decl_stmt bool = != && if return else > - decl_stmt Lucene.Net.Search.Scorer = return == : new protected internal virtual protected internal virtual return < Scorer DocIdSetIterator public override public override decl_stmt Lucene.Net.Search.DocIdSetIterator = if == return decl_stmt Lucene.Net.Search.Scorer = if == return if return new else return new Scorer Bits public override public override decl_stmt Lucene.Net.Spatial.Util.Bits = if == return call FilterStrategy.FilteredScorer() call FilterStrategy.FilteredScorer() call FilterStrategy.FilteredScorer() call FilterStrategy.FilteredScorer() call FilterStrategy.FilteredScorer() decl_stmt Lucene.Net.Search.Scorer = return == : new Scorer Bits public override public override decl_stmt Lucene.Net.Spatial.Util.Bits = if == return call FilterStrategy.FilteredBulkScorer() call FilterStrategy.FilteredBulkScorer() call FilterStrategy.FilteredBulkScorer() call FilterStrategy.FilteredBulkScorer() call FilterStrategy.FilteredBulkScorer() decl_stmt Lucene.Net.Search.Scorer = return == : new