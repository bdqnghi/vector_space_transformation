Lucene.Net.Util.Packed System using System.Diagnostics using Lucene.Net.Support using System.Collections.Generic using Lucene.Net.Codecs.CodecUtil Lucene.Net.Store.DataInput Lucene.Net.Store.DataOutput Lucene.Net.Store.IndexInput Lucene.Net.Index.NumericDocValues class Lucene.Net.Util.Packed.PackedInts float int float int float float string int int public static public static if < throw new + + + + else if > throw new + + + + public override public override if < return * long double * / return long double * / int public override public override decl_stmt int = / return int double / public override public override return int int public override public override decl_stmt int = / decl_stmt int = return float / public static < public static < return public static public static foreach in if == return throw new + public public return public virtual public virtual return * long public virtual public virtual decl_stmt long = if == return / else return / + public virtual public virtual return >= && <= public virtual public virtual return public virtual public virtual return / public override public override return + + + + Format int int float float float public static public static if == - = = = decl_stmt float = * decl_stmt int = + int decl_stmt int = - decl_stmt Format = if <= && >= = else if <= && >= = else if <= && >= = else if <= && >= = else if <= && <= && >= = else if <= && <= && >= = else for = <= ++ if decl_stmt float = decl_stmt float = + - if <= = = break if < = return new int public virtual public virtual > + + >= && < + <= decl_stmt int = - for = = = + < ++ , ++ = return ! return public virtual public virtual return long LongsRef public virtual public virtual decl_stmt Lucene.Net.Util.LongsRef = > decl_stmt long = ++ -- return return public virtual public virtual return public virtual public virtual > + + >= && < = - + <= for = = = + < ++ , ++ return public virtual public virtual <= <= for = < ++ public virtual public virtual Writer public virtual public virtual decl_stmt Writer = call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() for = < ++ call Writer.Add() call Writer.Add() call Writer.Add() call Writer.Add() call Writer.Add() call Writer.Finish() call Writer.Finish() call Writer.Finish() call Writer.Finish() call Writer.Finish() return return public override sealed public override sealed return return public override sealed public override sealed return public override public override return public override public override > + + >= && < = - + return return public override public override return public override public override return + internal virtual internal virtual != - public public return public static public static return public static public static return public static public static if == return else if == switch case return new case return new case return new case return new case if <= return new break case if <= return new break return new else throw new + public static public static return int int int Format public static public static decl_stmt int = decl_stmt int = > && <= + decl_stmt int = decl_stmt Format = return public static public static return new int int int Format public static public static decl_stmt int = decl_stmt int = > && <= + decl_stmt int = decl_stmt Format = return long long public static public static if == return new else if == decl_stmt long = if != == decl_stmt long = + return new else return new else throw new + long public override public override decl_stmt long = if == - try catch throw new return public static public static return int int int Format public static public static decl_stmt int = decl_stmt int = > && <= + decl_stmt int = decl_stmt Format = return FormatAndBits public static public static decl_stmt FormatAndBits = return public static public static >= if == return else if == switch case return new case return new case return new case return new case if <= return new break case if <= return new break return new else throw new public static public static return new FormatAndBits Writer public static public static >= decl_stmt FormatAndBits = decl_stmt Writer = call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() call Writer.WriteHeader() return public static public static if < throw new + + return - public static public static return == : ~ ~ << decl long int public static public static + <= + <= decl_stmt int = uint >> if == for = < ++ ++ ++ else if > decl_stmt long = new int int int internal static internal static > decl_stmt int = while > decl_stmt int = - > += -= += decl_stmt int = > += if < - -= while > decl_stmt int = += -= int int int Format public static public static decl_stmt int = decl_stmt int = > && <= + decl_stmt int = decl_stmt Format = return new internal static internal static if < || || throw new + + + + + if & - != throw new + return int internal static internal static decl_stmt int = / + == : if long * < throw new return