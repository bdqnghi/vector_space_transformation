Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Store.Directory Lucene.Net.Store.IndexInput Lucene.Net.Store.IndexOutput class Lucene.Net.Index.CompoundFileWriter super super IDisposable decl SegmentMerger decl HashSet String decl LinkedList Directory bool return return var public public if throw new if == throw new try call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() catch throw new + + decl_stmt var = new = call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() public public long var IndexOutput IndexOutput long public public if throw new if == throw new = decl_stmt IndexOutput = try = call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call Directory.CreateOutput() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() decl_stmt long = foreach in = call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() call IndexOutput.WriteString() += call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() call Directory.FileLength() decl_stmt long = + call IndexOutput.SetLength() call IndexOutput.SetLength() call IndexOutput.SetLength() call IndexOutput.SetLength() call IndexOutput.SetLength() decl_stmt var = new foreach in = foreach in call IndexOutput.Seek() call IndexOutput.Seek() call IndexOutput.Seek() call IndexOutput.Seek() call IndexOutput.Seek() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() == decl_stmt IndexOutput = = call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() finally if != try call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() call IndexOutput.Close() catch long IndexInput long var long long long int private private decl_stmt Lucene.Net.Store.IndexInput = try decl_stmt long = = call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() call Directory.OpenInput() decl_stmt long = call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() call IndexInput.Length() decl_stmt long = decl_stmt int = while > decl_stmt var = int call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() call IndexInput.ReadBytes() -= if != call decl SegmentMerger.Work() call decl SegmentMerger.Work() call decl SegmentMerger.Work() call decl SegmentMerger.Work() call decl SegmentMerger.Work() if != throw new + + + + + + + + decl_stmt long = decl_stmt long = - if != throw new + + + finally if != call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close() call IndexInput.Close()