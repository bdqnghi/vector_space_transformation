Lucene.Net.Util NUnit.Framework using System using System.Collections using System.Collections.Generic using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Analysis.Token class attribute Lucene.Net.Util.TestAttributeSource super super LuceneTestCase AttributeSource int AttributeSource IFlagsAttribute decl AttributeSource ICharTermAttribute AttributeSource decl State ITypeAttribute public virtual public virtual decl_stmt Lucene.Net.Util.AttributeSource = new decl_stmt Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute = < decl_stmt Lucene.Net.Analysis.Tokenattributes.ITypeAttribute = < call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Append(ICharTermAttribute) call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Append(ICharTermAttribute) call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Append(ICharTermAttribute) call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Append(ICharTermAttribute) call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.Append(ICharTermAttribute) = decl_stmt int = call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() decl_stmt Lucene.Net.Util.Automaton.State = call Lucene.Net.Util.AttributeSource.CaptureState() call Lucene.Net.Util.AttributeSource.CaptureState() call Lucene.Net.Util.AttributeSource.CaptureState() call Lucene.Net.Util.AttributeSource.CaptureState() call Lucene.Net.Util.AttributeSource.CaptureState() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.SetEmpty() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.SetEmpty() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.SetEmpty() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.SetEmpty() call Lucene.Net.Analysis.Tokenattributes.ICharTermAttribute.SetEmpty() = != call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() decl_stmt Lucene.Net.Util.AttributeSource = new < < call decl State.RestoreState() call decl State.RestoreState() call decl State.RestoreState() call decl State.RestoreState() call decl State.RestoreState() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call decl State.GetHashCode() call decl State.GetHashCode() call decl State.GetHashCode() call decl State.GetHashCode() call decl State.GetHashCode() decl_stmt Lucene.Net.Util.AttributeSource = new = < decl_stmt Lucene.Net.Analysis.Tokenattributes.IFlagsAttribute = < = < = call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call Lucene.Net.Util.AttributeSource.RestoreState(State) call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() call ICharTermAttribute.ToString() decl_stmt Lucene.Net.Util.AttributeSource = new = < try call IFlagsAttribute.RestoreState() call IFlagsAttribute.RestoreState() call IFlagsAttribute.RestoreState() call IFlagsAttribute.RestoreState() call IFlagsAttribute.RestoreState() catch AttributeSource AttributeSource IFlagsAttribute decl IEnumerator ITypeAttribute IFlagsAttribute ITypeAttribute public virtual public virtual decl_stmt Lucene.Net.Util.AttributeSource = new decl_stmt Lucene.Net.Analysis.Tokenattributes.IFlagsAttribute = < decl_stmt Lucene.Net.Analysis.Tokenattributes.ITypeAttribute = < = = decl_stmt Lucene.Net.Util.AttributeSource = call Lucene.Net.Util.AttributeSource.CloneAttributes() call Lucene.Net.Util.AttributeSource.CloneAttributes() call Lucene.Net.Util.AttributeSource.CloneAttributes() call Lucene.Net.Util.AttributeSource.CloneAttributes() call Lucene.Net.Util.AttributeSource.CloneAttributes() decl_stmt System.Collections.Generic.IEnumerator < = call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() typeof call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() typeof call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt Lucene.Net.Analysis.Tokenattributes.IFlagsAttribute = < decl_stmt Lucene.Net.Analysis.Tokenattributes.ITypeAttribute = < = = call AttributeSource.CopyTo() call AttributeSource.CopyTo() call AttributeSource.CopyTo() call AttributeSource.CopyTo() call AttributeSource.CopyTo() AttributeSource public virtual public virtual decl_stmt Lucene.Net.Util.AttributeSource = new < is < is < is < is < is < is AttributeSource public virtual public virtual try decl_stmt Lucene.Net.Util.AttributeSource = new < catch try decl_stmt Lucene.Net.Util.AttributeSource = new < catch AttributeSource AttributeSource int public virtual public virtual decl_stmt Lucene.Net.Util.AttributeSource = new < decl_stmt int = call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() decl_stmt Lucene.Net.Util.AttributeSource = new < = != call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode() call Lucene.Net.Util.AttributeSource.GetHashCode()