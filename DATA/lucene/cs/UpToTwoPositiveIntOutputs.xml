org.apache.lucene.util.fst System using System.Diagnostics using org.apache.lucene.store.DataInput org.apache.lucene.store.DataOutput class org.apache.lucene.util.fst.UpToTwoPositiveIntOutputs super UpToTwoPositiveIntOutputs bool long UpToTwoPositiveIntOutputs public override public override return + + + TwoLongs public override public override if is decl_stmt TwoLongs = return == && == else return public override public override return ^ ulong >> ^ ^ >> public static public static return : public ? public ? if == return else return public public return new long long public override ? public override ? decl_stmt long ? = long decl_stmt long ? = long if == || == return else if > > return else if call long.Equals() call long.Equals() call long.Equals() call long.Equals() call long.Equals() return else return long long public override ? public override ? decl_stmt long ? = long decl_stmt long ? = long >= if == return else if call long.Equals() call long.Equals() call long.Equals() call long.Equals() call long.Equals() return else return - TwoLongs long long public override public override decl_stmt long ? = long if is long decl_stmt long ? = long if == return else if == return else return + else decl_stmt TwoLongs = decl_stmt long = return new + + TwoLongs public override public override if is long decl_stmt long ? = long << else decl_stmt TwoLongs = << | long long long long public override public override decl_stmt long = if & == decl_stmt long = ulong >> if == return else return else decl_stmt long = ulong >> decl_stmt long = return new private private ? != is long == || > return private private if ! is long return long else if is return else return long return public override public override return public override public override return new long long