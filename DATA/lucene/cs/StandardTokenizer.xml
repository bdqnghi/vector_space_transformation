Lucene.Net.Analysis.Standard System using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Util using Lucene.Net.Analysis.CharReader Lucene.Net.Analysis.Token Lucene.Net.Analysis.Tokenizer Lucene.Net.Util.AttributeSource Lucene.Net.Util.Version class Lucene.Net.Analysis.Standard.StandardTokenizer super super Tokenizer int int int StandardTokenizerImpl int int IOffsetAttribute int int int decl System decl String int ITermAttribute int IPositionIncrementAttribute bool private private = return = private private if = else = = = < = < = < = < int int int public override public override decl_stmt int = while decl_stmt int = call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetNextToken() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetNextToken() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetNextToken() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetNextToken() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetNextToken() if == return if call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() <= = call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetText(ITermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetText(ITermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetText(ITermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetText(ITermAttribute) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.GetText(ITermAttribute) decl_stmt int = call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() + call int.TermLength() call int.TermLength() call int.TermLength() call int.TermLength() call int.TermLength() if == if = call int.SetTermLength() call int.SetTermLength() call int.SetTermLength() call int.SetTermLength() call int.SetTermLength() call int.TermLength() call int.TermLength() call int.TermLength() call int.TermLength() call int.TermLength() - else = else = return else ++ int public override public override decl_stmt int = call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() call StandardTokenizerImpl.Yychar() + call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Yylength() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() call ITermAttribute.SetOffset() public override public override call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Reset(System,IO,TextReader) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Reset(System,IO,TextReader) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Reset(System,IO,TextReader) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Reset(System,IO,TextReader) call Lucene.Net.Analysis.Standard.StandardTokenizerImpl.Reset(System,IO,TextReader) public public =