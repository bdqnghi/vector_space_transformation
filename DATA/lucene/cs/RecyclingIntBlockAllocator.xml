Lucene.Net.Util System using System.Diagnostics using Lucene.Net.Util.IntBlockPool.Allocator class Lucene.Net.Util.RecyclingIntBlockAllocator super super Allocator decl int Counter int int int decl int if == call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) * return new decl_stmt int = -- = return decl int int int int public override public override decl_stmt int = - - decl_stmt int = + if >= decl_stmt int = new = decl_stmt int = + for = < ++ ++ = = for = < ++ = call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) - - * * call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() >= public public return public public return call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() public public return int int public public >= + decl_stmt int decl_stmt int if > = = else = - = while > -- = call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) call Lucene.Net.Util.Counter.AddAndGet(long) - * * call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() call Lucene.Net.Util.Counter.Get() >= return