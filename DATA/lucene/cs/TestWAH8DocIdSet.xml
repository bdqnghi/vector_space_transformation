Lucene.Net.Util Lucene.Net.Support using NUnit.Framework using System.Collections using System.Collections.Generic using class attribute attribute Lucene.Net.Util.TestWAH8DocIdSet super int decl WAH8DocIdSet public override public override decl_stmt int = decl_stmt Lucene.Net.Util.Fst.Builder = new for = != - = + call decl WAH8DocIdSet.Add() call decl WAH8DocIdSet.Add() call decl WAH8DocIdSet.Add() call decl WAH8DocIdSet.Add() call decl WAH8DocIdSet.Add() return call decl WAH8DocIdSet.Build() call decl WAH8DocIdSet.Build() call decl WAH8DocIdSet.Build() call decl WAH8DocIdSet.Build() call decl WAH8DocIdSet.Build() public override public override WAH8DocIdSet int int decl IList decl IList BitArray public virtual public virtual decl_stmt int = << decl_stmt int = decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() float / decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl_stmt Lucene.Net.Util.WAH8DocIdSet = decl_stmt System.Collections.System.Collections.Generic.BitArray = new foreach in for = != - = + call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() call BitArray.SafeSet() int WAH8DocIdSet int int decl IList int decl IList BitArray public virtual public virtual decl_stmt int = << decl_stmt int = decl_stmt System.Collections.Generic.IList < = new < for = < ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() float decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl_stmt Lucene.Net.Util.WAH8DocIdSet = decl_stmt System.Collections.System.Collections.Generic.BitArray = new call System.Collections.System.Collections.Generic.BitArray.SetAll(bool) call System.Collections.System.Collections.Generic.BitArray.SetAll(bool) call System.Collections.System.Collections.Generic.BitArray.SetAll(bool) call System.Collections.System.Collections.Generic.BitArray.SetAll(bool) call System.Collections.System.Collections.Generic.BitArray.SetAll(bool) foreach in for = - = = , = + decl_stmt int = + decl_stmt int if == - = + for = < ++ = break else = + for = > ++ =