Lucene.Net.Facet System using System.Diagnostics using Lucene.Net.Randomized.Generators using NUnit.Framework using Lucene.Net.Documents.Document Lucene.Net.Documents.Field.Store Lucene.Net.Documents.StringField Lucene.Net.Facet.FacetsCollector.MatchingDocs Lucene.Net.Facet.Taxonomy.FastTaxonomyFacetCounts Lucene.Net.Facet.Taxonomy.TaxonomyReader Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyReader Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter Lucene.Net.Index.RandomIndexWriter Lucene.Net.Index.Term Lucene.Net.Search.IndexSearcher Lucene.Net.Search.MultiCollector Lucene.Net.Search.TermQuery Lucene.Net.Store.Directory Lucene.Net.Util.IOUtils class Lucene.Net.Facet.TestRandomSamplingFacetsCollector super super FacetTestCase DirectoryTaxonomyWriter FastTaxonomyFacetCounts float TermQuery RandomSamplingFacetsCollector FastTaxonomyFacetCounts int RandomIndexWriter Directory RandomSamplingFacetsCollector FacetResult FacetsConfig Random FacetsCollector float int FacetResult IndexSearcher Document FastTaxonomyFacetCounts float int FacetResult RandomSamplingFacetsCollector var float Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Facet.Taxonomy.Directory.DirectoryTaxonomyWriter = new decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Facet.FacetsConfig = new decl_stmt int = for = < ++ decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new == : call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) new call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) call Lucene.Net.Facet.FacetsConfig.Build(Document) decl_stmt System.Random = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt var = new decl_stmt Lucene.Net.Facet.RandomSamplingFacetsCollector = new / call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) new new foreach in decl_stmt Lucene.Net.Search.TermQuery = new new decl_stmt int = decl_stmt Lucene.Net.Facet.RandomSamplingFacetsCollector = new call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() decl_stmt Lucene.Net.Facet.RandomSamplingFacetsCollector = new / call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() call Random.NextLong() decl_stmt Lucene.Net.Facet.FacetsCollector = new call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Facet.Taxonomy.FastTaxonomyFacetCounts = new decl_stmt Lucene.Net.Facet.Taxonomy.FastTaxonomyFacetCounts = new decl_stmt Lucene.Net.Facet.Taxonomy.FastTaxonomyFacetCounts = new decl_stmt Lucene.Net.Facet.FacetResult = call RandomSamplingFacetsCollector.AmortizeFacetCounts() call RandomSamplingFacetsCollector.AmortizeFacetCounts() call RandomSamplingFacetsCollector.AmortizeFacetCounts() call RandomSamplingFacetsCollector.AmortizeFacetCounts() call RandomSamplingFacetsCollector.AmortizeFacetCounts() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() decl_stmt Lucene.Net.Facet.FacetResult = call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() decl_stmt Lucene.Net.Facet.FacetResult = call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() call FastTaxonomyFacetCounts.GetTopChildren() <= >= decl_stmt int = foreach in += int decl_stmt float = float / float decl_stmt float = foreach in += float - int = / decl_stmt float = float decl_stmt float = / * < - * < && < + *