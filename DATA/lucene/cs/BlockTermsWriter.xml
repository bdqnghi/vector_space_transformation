Lucene.Net.Codecs.BlockTerms System using System.Collections.Generic using System.Diagnostics using Index using Store using Util using class Lucene.Net.Codecs.BlockTerms.BlockTermsWriter super super FieldsConsumer FieldInfo int int String TermsIndexWriterBase IndexOutput String FieldInfos int decl List int int PostingsWriterBase private private var public override public override == || call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() call FieldInfo.Name() < = decl_stmt var = call TermsIndexWriterBase.AddField() call TermsIndexWriterBase.AddField() call TermsIndexWriterBase.AddField() call TermsIndexWriterBase.AddField() call TermsIndexWriterBase.AddField() return new var public override public override if == return try decl_stmt var = call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() foreach in call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() if != call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVLong() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() if >= call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() call IndexOutput.WriteVInt() finally = private private call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() call IndexOutput.WriteLong() return public override public override return var var var public override public override > decl_stmt var = if if > if == decl_stmt var = new + for = < ++ = new = decl_stmt var = call var.Term() call var.Term() call var.Term() call var.Term() call var.Term() call var.Term() call var.Term() call var.Term() call var.Term() = = = ++ ++ public override public override if > = = = if > new var var var private static private static == == decl_stmt var = decl_stmt var = + decl_stmt var = while < if != return ++ ++ return var BlockTermState int var bool private private decl_stmt int = for = < ++ = for = < ++ decl_stmt var = - int for = < ++ decl_stmt Lucene.Net.Codecs.BlockTermState = != if != - int decl_stmt var = new decl_stmt bool = for = < ++ decl_stmt Lucene.Net.Codecs.BlockTermState = for = < ++ = int - =