Lucene.Net.Tests.Queries.Function System using Lucene.Net.Documents using Lucene.Net.Index using Lucene.Net.Queries.Function.ValueSources using Lucene.Net.Search using Lucene.Net.Store using Lucene.Net.Util using NUnit.Framework using class Lucene.Net.Tests.Queries.Function.TestFunctionQuerySort super super LuceneTestCase Sort IndexSearcher TopDocs int IndexWriterConfig int IntFieldSource int Document RandomIndexWriter FieldDoc int Query Field int IndexReader int SortField Directory public public decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriterConfig = call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) call Lucene.Net.Index.IndexWriterConfig.SetMergePolicy(MergePolicy) decl_stmt Lucene.Net.Index.RandomIndexWriter = new decl_stmt Lucene.Net.Documents.Document = new decl_stmt Lucene.Net.Documents.Field = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) decl_stmt int const const = for = > -- = call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) call Lucene.Net.Index.RandomIndexWriter.AddDocument(IEnumerable) decl_stmt Lucene.Net.Index.IndexReader = call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() call Lucene.Net.Index.RandomIndexWriter.Dispose() decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.Function.IntFieldSource = new decl_stmt Lucene.Net.Search.SortField = call IntFieldSource.GetSortField() call IntFieldSource.GetSortField() call IntFieldSource.GetSortField() call IntFieldSource.GetSortField() call IntFieldSource.GetSortField() decl_stmt Lucene.Net.Search.Sort = new decl_stmt Lucene.Net.Search.Query = new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt int = foreach in decl_stmt int = call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) ++ decl_stmt int = decl_stmt Lucene.Net.Search.FieldDoc = = call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) - + decl_stmt int = double foreach in decl_stmt int = call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) call Lucene.Net.Index.IndexReader.Document(int) <= == call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()