Lucene.Net.Expressions System using System.Collections using System.Collections.Generic using Lucene.Net.Index using Lucene.Net.Queries.Function using Lucene.Net.Search using Lucene.Net.Support using class Lucene.Net.Expressions.ExpressionValueSource super super ValueSource decl ValueSource Expression bool string decl FunctionValues FunctionValues decl IDictionary public override public override decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = < if == = new < = new = decl_stmt Lucene.Net.Queries.Function.FunctionValues = new for = < ++ decl_stmt string = decl_stmt Lucene.Net.Queries.Function.FunctionValues if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = if == throw new + + = = return new public override public override return new return + + int int public override public override decl_stmt int = decl_stmt int = = * + == : call Expression.GetHashCode() call Expression.GetHashCode() call Expression.GetHashCode() call Expression.GetHashCode() call Expression.GetHashCode() = * + : = * + return decl Lucene public override public override if == return if == return if != return decl_stmt Lucene.Net.Expressions.ExpressionValueSource = if == if != return else if ! call Expression.Equals() call Expression.Equals() call Expression.Equals() call Expression.Equals() call Expression.Equals() return if != return if ! return return internal internal return