Lucene.Net.Codecs.Lucene41 System.IO using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util.Packed using System using System.Diagnostics using class Lucene.Net.Codecs.Lucene41.ForUtil decl PackedInts int decl Encoder decl PackedInts int int decl int private static private static return int float / long private static private static decl_stmt long = >= && <= call long.ToString() call long.ToString() call long.ToString() call long.ToString() call long.ToString() return int decl Encoder int decl PackedInts int public public if byte sbyte return decl_stmt int = > && <= call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() decl_stmt System.Text.Encoder = decl_stmt int = * call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() >= decl_stmt int = * call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() call decl PackedInts.ByteBlockCount() >= byte call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() call decl PackedInts.Encode() decl Decoder int decl PackedInts int int public public decl_stmt int = <= call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() if == decl_stmt int = return decl_stmt int = decl_stmt Lucene.Net.Util.Packed.Decoder = decl_stmt int = * call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() call decl PackedInts.ByteValueCount() >= call decl PackedInts.Decode() call decl PackedInts.Decode() call decl PackedInts.Decode() call decl PackedInts.Decode() call decl PackedInts.Decode() int int public public decl_stmt int = if == return > && <= call int.ToString() call int.ToString() call int.ToString() call int.ToString() call int.ToString() decl_stmt int = + int private static private static decl_stmt int = for = < ++ if != return return long private static private static decl_stmt long = for = < ++ >= |= uint return