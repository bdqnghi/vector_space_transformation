Lucene.Net.Index System using System.Collections.Generic using Lucene.Net.Support using class Lucene.Net.Index.SortedTermVectorMapper super super TermVectorMapper bool decl IDictionary decl System decl SortedSet bool decl TermVectorOffsetInfo TermVectorEntry decl int decl int decl TermVectorOffsetInfo public override public override decl_stmt Lucene.Net.Index.TermVectorEntry = if == = new == : == : = call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() else = + if decl_stmt TermVectorOffsetInfo = call Lucene.Net.Index.TermVectorEntry.GetOffsets() call Lucene.Net.Index.TermVectorEntry.GetOffsets() call Lucene.Net.Index.TermVectorEntry.GetOffsets() call Lucene.Net.Index.TermVectorEntry.GetOffsets() call Lucene.Net.Index.TermVectorEntry.GetOffsets() if != && != && > decl_stmt TermVectorOffsetInfo = new + call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) else if == && != && > call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) call Lucene.Net.Index.TermVectorEntry.SetOffsets(TermVectorOffsetInfo) if decl_stmt int = call Lucene.Net.Index.TermVectorEntry.GetPositions() call Lucene.Net.Index.TermVectorEntry.GetPositions() call Lucene.Net.Index.TermVectorEntry.GetPositions() call Lucene.Net.Index.TermVectorEntry.GetPositions() call Lucene.Net.Index.TermVectorEntry.GetPositions() if != && != && > decl_stmt int = new + call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() else if == && != && > call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() call TermVectorEntry.SetPositions() public override public override = = return