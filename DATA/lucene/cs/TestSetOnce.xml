Lucene.Net.Util System.Threading using Lucene.Net.Support using NUnit.Framework using System using class attribute Lucene.Net.Util.TestSetOnce super super LuceneTestCase public override public override try new int = catch catch = decl SetOnce public virtual public virtual decl_stmt Lucene.Net.Util.SetOnce < ? = new < ? call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() decl SetOnce typeof < ? < ? public virtual typeof < ? < ? public virtual decl_stmt Lucene.Net.Util.SetOnce < ? = new < ? new int int call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() new int decl SetOnce typeof < ? < ? public virtual typeof < ? < ? public virtual decl_stmt Lucene.Net.Util.SetOnce < ? = new < ? call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() new int int call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() call decl SetOnce.Set() new int Random decl SetOnce decl SetOnceThread int public virtual public virtual decl_stmt Lucene.Net.Util.SetOnce < ? = new < ? decl_stmt SetOnceThread = new decl_stmt System.Random = for = < ++ = new = + + = foreach in foreach in foreach in if decl_stmt int = +