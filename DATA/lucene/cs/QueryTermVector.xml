Lucene.Net.Search System using System.Collections.Generic using System.Linq using Lucene.Net.Analysis.Tokenattributes using Lucene.Net.Index using Lucene.Net.Support using Lucene.Net.Analysis.Analyzer Lucene.Net.Analysis.TokenStream class Lucene.Net.Search.QueryTermVector super super ITermFreqVector decl System decl String return decl IList var int int decl IList decl IDictionary int var private private if != decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.IList < = new < decl_stmt int = for = < ++ decl_stmt var = decl_stmt var = if ! call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() = ++ call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() else decl_stmt int = = + = call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() call decl IList.ToArray() = new decl_stmt int = foreach in ++ = decl System public override public override decl_stmt System.Text.StringBuilder = new call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() for = < ++ if > call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() return call decl System.ToString() call decl System.ToString() call decl System.ToString() call decl System.ToString() call decl System.ToString() return public virtual public virtual return public virtual public virtual return int public virtual public virtual decl_stmt int = return >= : - decl int public virtual public virtual decl_stmt int = new for = < ++ = return