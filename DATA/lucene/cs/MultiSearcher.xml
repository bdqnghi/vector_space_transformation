Lucene.Net.Search System using System.Collections.Generic using System.Linq using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Documents.Document Lucene.Net.Documents.FieldSelector Lucene.Net.Index.CorruptIndexException Lucene.Net.Index.IndexReader Lucene.Net.Index.Term Lucene.Net.Util.ReaderUtil class Lucene.Net.Search.MultiSearcher super super Searcher int bool decl Searchable decl int decl Func decl Func private private = = = return public override public override public override public override public override public override + return int public override public override decl_stmt int try = catch throw new + + return decl int public override public override decl_stmt int = new for = < ++ = return return public override public override return protected override protected override throw new public override public override throw new public override public override throw new public override public override throw new public override public override throw new public override public override throw new public override public override throw new public virtual public virtual return protected internal virtual protected internal virtual return protected override protected override if return if for = < ++ = int public override public override decl_stmt int = for = < ++ += return int public override public override decl_stmt int = return - int public override public override decl_stmt int = return - public virtual public virtual return public virtual public virtual return - return int var TopDocs HitQueue decl ScoreDoc float public override public override decl_stmt Lucene.Net.Search.HitQueue = new decl_stmt int = decl_stmt var = new for = < ++ decl_stmt Lucene.Net.Search.TopDocs = += decl_stmt Lucene.Net.Search.ScoreDoc = new call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() for = call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() call HitQueue.Size() - >= -- = call HitQueue.Pop() call HitQueue.Pop() call HitQueue.Pop() call HitQueue.Pop() call HitQueue.Pop() decl_stmt float = == : return new int var TopFieldDocs var decl ScoreDoc float public override public override decl_stmt var = new decl_stmt int = decl_stmt float = decl_stmt var = new for = < ++ decl_stmt TopFieldDocs = += = decl_stmt Lucene.Net.Search.ScoreDoc = new call var.Size() call var.Size() call var.Size() call var.Size() call var.Size() for = call var.Size() call var.Size() call var.Size() call var.Size() call var.Size() - >= -- = call var.Pop() call var.Pop() call var.Pop() call var.Pop() call var.Pop() return new call var.GetFields() call var.GetFields() call var.GetFields() call var.GetFields() call var.GetFields() int Collector public override public override for = < ++ decl_stmt int = decl_stmt Collector = new decl Query public override public override decl_stmt Lucene.Net.Search.Query = new for = < ++ = return int public override public override decl_stmt int = return - CachedDfSource decl ISet decl Term decl int decl int int var Query public override public override decl_stmt Lucene.Net.Search.Query = decl_stmt System.Collections.Generic.ISet < = < call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) call Lucene.Net.Search.Query.ExtractTerms(ISet) decl_stmt Lucene.Net.Index.Term = call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() call decl ISet.ToArray() decl_stmt int = new for = < ++ decl_stmt int = for = < ++ += decl_stmt var = new < for = < ++ = decl_stmt int = decl_stmt CachedDfSource = new return call Query.Weight() call Query.Weight() call Query.Weight() call Query.Weight() call Query.Weight()