Lucene.Net.Index System using System.Collections.Generic using System.Diagnostics using Lucene.Net.Util.InfoStream Lucene.Net.Index.DocumentsWriterPerThreadPool.ThreadState class Lucene.Net.Index.FlushPolicy super super ICloneable InfoStream LiveIndexWriterConfig public virtual public virtual protected internal virtual protected internal virtual lock = = long decl IEnumerator long ThreadState ThreadState protected internal virtual protected internal virtual > decl_stmt long = decl_stmt ThreadState = ! decl_stmt System.Collections.Generic.IEnumerator < = while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt ThreadState = if ! decl_stmt long = if > && > = = return private private if call Lucene.Net.Util.InfoStream.IsEnabled(string) call Lucene.Net.Util.InfoStream.IsEnabled(string) call Lucene.Net.Util.InfoStream.IsEnabled(string) call Lucene.Net.Util.InfoStream.IsEnabled(string) call Lucene.Net.Util.InfoStream.IsEnabled(string) call Lucene.Net.Util.InfoStream.Message(string,string) call Lucene.Net.Util.InfoStream.Message(string,string) call Lucene.Net.Util.InfoStream.Message(string,string) call Lucene.Net.Util.InfoStream.Message(string,string) call Lucene.Net.Util.InfoStream.Message(string,string) return FlushPolicy public public decl_stmt Lucene.Net.Index.FlushPolicy = = = return