Lucene.Net.Tests.Expressions Lucene.Net.Documents using Lucene.Net.Expressions using Lucene.Net.Expressions.JS using Lucene.Net.Index using Lucene.Net.Randomized.Generators using Lucene.Net.Search using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using NUnit.Framework using class Lucene.Net.Tests.Expressions.TestExpressionSorts super IndexSearcher Directory IndexReader int var var public override public override = decl_stmt var = new decl_stmt int = for = < ++ decl_stmt var = new == ? : + unchecked byte + short new new new new new new call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() call var.AddDocument() = call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() = public override public override call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() Filter BooleanQuery int public virtual public virtual decl_stmt int = for = < ++ decl_stmt MS.Internal.Xml.XPath.Filter = new new new new new new new new new decl_stmt Lucene.Net.Search.BooleanQuery = new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) new new = decl SortField bool int internal virtual internal virtual for = < ++ decl_stmt bool = decl_stmt Lucene.Net.Search.SortField = new new new new new new new decl_stmt int = new TopDocs bool Expression SimpleBindings Sort decl SortField SortField TopDocs decl SortField int internal virtual internal virtual decl_stmt int = / decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) decl_stmt Lucene.Net.Search.SortField = decl_stmt Lucene.Net.Search.SortField = new for = < ++ if > decl_stmt Lucene.Net.Search.SortField = decl_stmt Lucene.Net.Expressions.Expression = decl_stmt Lucene.Net.Expressions.SimpleBindings = new call Lucene.Net.Expressions.SimpleBindings.Add(string,Expression) call Lucene.Net.Expressions.SimpleBindings.Add(string,Expression) call Lucene.Net.Expressions.SimpleBindings.Add(string,Expression) call Lucene.Net.Expressions.SimpleBindings.Add(string,Expression) call Lucene.Net.Expressions.SimpleBindings.Add(string,Expression) decl_stmt bool = == || = call Lucene.Net.Expressions.Expression.GetSortField(Bindings,bool) call Lucene.Net.Expressions.Expression.GetSortField(Bindings,bool) call Lucene.Net.Expressions.Expression.GetSortField(Bindings,bool) call Lucene.Net.Expressions.Expression.GetSortField(Bindings,bool) call Lucene.Net.Expressions.Expression.GetSortField(Bindings,bool) else = decl_stmt Lucene.Net.Search.Sort = new decl_stmt Lucene.Net.Search.TopDocs = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) if < = call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) - = call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) call Lucene.Net.Search.IndexSearcher.SearchAfter(ScoreDoc,Query,Filter,int) -