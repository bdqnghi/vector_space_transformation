Lucene.Net.Index Lucene.Net.Support using NUnit.Framework using System.Collections.Generic using Lucene.Net.Codecs.Codec Lucene.Net.Store.Directory Documents.Document Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer class Lucene.Net.Index.BaseIndexFileFormatTestCase super super LuceneTestCase Codec public override public override = = public override public override = decl IDictionary long string private < private < decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < foreach in decl_stmt string = ?? decl_stmt long = call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() : = + foreach in call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() call decl IDictionary.Remove() return protected internal virtual < protected internal virtual < return new < new Directory var var MergePolicy IndexReader var Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.MergePolicy = = decl_stmt var = new new using = new decl_stmt var = for = < ++ decl_stmt var = new decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Store.Directory = = = = new new using = new call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose()