Lucene.Net.Store Lucene.Net.Attributes using Lucene.Net.Documents using Lucene.Net.Support using NUnit.Framework using System using System.Collections.Generic using System.IO using System.Threading using Lucene.Net.Index.DirectoryReader Documents.Document Field Lucene.Net.Index.IndexReader Lucene.Net.Search.IndexSearcher Lucene.Net.Index.IndexWriter Lucene.Net.Index.IndexWriterConfig Lucene.Net.Util.LuceneTestCase Lucene.Net.Analysis.MockAnalyzer Lucene.Net.Search.Query Lucene.Net.Index.Term Lucene.Net.Search.TermQuery Lucene.Net.Util.TestUtil class attribute Lucene.Net.Store.TestLockFactory super super LuceneTestCase MockLockFactory decl MockLockFactory IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new new decl_stmt MockLockFactory = new = decl_stmt Lucene.Net.Index.IndexWriter = new new new for = < ++ >= foreach in decl_stmt MockLock = > call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) IndexWriter IndexWriter MockDirectoryWrapper public virtual public virtual decl_stmt Lucene.Net.Store.MockDirectoryWrapper = new new = = typeof decl_stmt Lucene.Net.Index.IndexWriter = new new new call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) call Lucene.Net.Index.IndexWriter.Commit(SegmentInfos) decl_stmt Lucene.Net.Index.IndexWriter = try = new new new catch call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) if != call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) IndexWriter IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = new typeof + decl_stmt Lucene.Net.Index.IndexWriter = new new new decl_stmt Lucene.Net.Index.IndexWriter = try = new new new catch call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) if != call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) public virtual public virtual new public virtual public virtual DirectoryInfo public virtual public virtual decl_stmt System.IO.DirectoryInfo = new SearcherThread WriterThread IndexWriter Directory public virtual public virtual decl_stmt Lucene.Net.Store.Directory = decl_stmt Lucene.Net.Index.IndexWriter = new new new call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) decl_stmt WriterThread = new decl_stmt SearcherThread = new call WriterThread.Start() call WriterThread.Start() call WriterThread.Start() call WriterThread.Start() call WriterThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() call SearcherThread.Start() while || ! ! call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() var var var public virtual public virtual decl_stmt var = new = decl_stmt var = call var.MakeLock() call var.MakeLock() call var.MakeLock() call var.MakeLock() call var.MakeLock() decl_stmt var = call var.MakeLock() call var.MakeLock() call var.MakeLock() call var.MakeLock() call var.MakeLock() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() ! call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() DirectoryInfo var var public virtual public virtual decl_stmt System.IO.DirectoryInfo = decl_stmt var = new using call var.Create() call var.Create() call var.Create() call var.Create() call var.Create() decl_stmt var = new call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Obtain() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() call var.Dispose() if call var.Delete() call var.Delete() call var.Delete() call var.Delete() call var.Delete() Directory Directory string string DirectoryInfo DirectoryInfo public virtual public virtual decl_stmt System.IO.DirectoryInfo = decl_stmt System.IO.DirectoryInfo = decl_stmt Lucene.Net.Store.Directory = new decl_stmt Lucene.Net.Store.Directory = new decl_stmt string = decl_stmt string = call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() DirectoryInfo Directory public virtual public virtual decl_stmt System.IO.DirectoryInfo = decl_stmt Lucene.Net.Store.Directory = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() = new call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() call Lucene.Net.Store.Directory.Dispose() IndexWriter public override public override decl_stmt Lucene.Net.Index.IndexWriter = for = < ++ try = new new new catch if == - = + else catch = + break if != try catch = + break try call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) call Lucene.Net.Index.IndexWriter.Dispose(bool) catch = + break = IndexSearcher Query IndexReader public override public override decl_stmt Lucene.Net.Index.IndexReader = decl_stmt Lucene.Net.Search.IndexSearcher = decl_stmt Lucene.Net.Search.Query = new new for = < ++ try = = catch = + break try call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) catch = + break try call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() call Lucene.Net.Index.IndexReader.Dispose() catch = + break = = Lock public override public override lock decl_stmt Lucene.Net.Store.Lock = new = ++ return public override public override public override public override ++ return public override public override return Document private private decl_stmt Lucene.Net.Documents.Document = new call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField) call Lucene.Net.Documents.Document.Add(IndexableField)