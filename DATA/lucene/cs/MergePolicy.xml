Lucene.Net.Index System using System.Collections.Generic using System.Diagnostics using System.Text using System.Threading using Lucene.Net.Util using Lucene.Net.Store.Directory Lucene.Net.Util.FixedBitSet Lucene.Net.Store.MergeInfo class Lucene.Net.Index.MergePolicy super super IDisposable super ICloneable double long decl SetOnce double long FixedBitSet int internal virtual internal virtual decl_stmt Lucene.Net.Spatial.Util.FixedBitSet = new for = < ++ decl_stmt int = if < || >= + + + + return else if call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) call Lucene.Net.Spatial.Util.FixedBitSet.Get(int) + + + return return decl IList if == throw new decl_stmt System.Collections.Generic.IList < = new < foreach in if > call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return = return public virtual public virtual return new public override public override return lock = lock return internal virtual internal virtual lock = lock return public virtual public virtual lock if throw new + while try catch throw new if throw new + lock = if ! lock return int StringBuilder public virtual public virtual decl_stmt System.Text.StringBuilder = new decl_stmt int = for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != - call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + + if call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public virtual public virtual return int public virtual public virtual decl_stmt int = foreach in += return return new public virtual public virtual int StringBuilder public virtual public virtual decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt int = for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) return MergePolicy public virtual public virtual decl_stmt Lucene.Net.Index.MergePolicy = = new < return long long public virtual public virtual if == return decl_stmt long = if > return if >= return decl_stmt long = foreach in += return <= * long double int protected internal virtual protected internal virtual decl_stmt long = decl_stmt int = call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() decl_stmt double = <= : float / float <= return <= : * - bool IndexWriter protected internal protected internal decl_stmt Lucene.Net.Index.IndexWriter = call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() call decl SetOnce.Get() != decl_stmt bool = call Lucene.Net.Index.IndexWriter.NumDeletedDocs(SegmentCommitInfo) call Lucene.Net.Index.IndexWriter.NumDeletedDocs(SegmentCommitInfo) call Lucene.Net.Index.IndexWriter.NumDeletedDocs(SegmentCommitInfo) call Lucene.Net.Index.IndexWriter.NumDeletedDocs(SegmentCommitInfo) call Lucene.Net.Index.IndexWriter.NumDeletedDocs(SegmentCommitInfo) > return ! && ! && == && == return if < || || throw new + = return / / if < throw new + + *= * = > : long