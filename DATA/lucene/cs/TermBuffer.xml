Lucene.Net.Index System using Lucene.Net.Support using Lucene.Net.Store.IndexInput Lucene.Net.Util.UnicodeUtil class Lucene.Net.Index.TermBuffer super decl String bool decl UnicodeUtil decl System Term bool public public if == return else return char char int private static private static decl_stmt int = < : for = < ++ decl_stmt char = decl_stmt char = if != return - return - internal internal = int int int public public = decl_stmt int = decl_stmt int = decl_stmt int = + if call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() else if call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() = else call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() call decl UnicodeUtil.SetLength() = decl System decl String public public if == return decl_stmt System.String = decl_stmt int = call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() = = = public public call bool.CopyText() call bool.CopyText() call bool.CopyText() call bool.CopyText() call bool.CopyText() = = = public public = call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() call bool.SetLength() = = public public if == return if == = new new return TermBuffer public public decl_stmt Lucene.Net.Codecs.Lucene3x.TermBuffer = try = catch = = new = new call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() call TermBuffer.text() return