Lucene.Net.Search.Highlight System using System.Collections.Generic using System.Linq using System.Text using Lucene.Net.Analysis using Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Search.Highlight.SimpleSpanFragmenter super super IFragmenter int int int IPositionIncrementAttribute int IOffsetAttribute ITermAttribute QueryScorer int int WeightedSpanTerm decl List bool public public += if == = - else if != - return decl_stmt Lucene.Net.Search.Highlight.WeightedSpanTerm = call Lucene.Net.Search.Highlight.QueryScorer.GetWeightedSpanTerm(String) call Lucene.Net.Search.Highlight.QueryScorer.GetWeightedSpanTerm(String) call Lucene.Net.Search.Highlight.QueryScorer.GetWeightedSpanTerm(String) call Lucene.Net.Search.Highlight.QueryScorer.GetWeightedSpanTerm(String) call Lucene.Net.Search.Highlight.QueryScorer.GetWeightedSpanTerm(String) if != decl_stmt System.Collections.Generic.List < = call Lucene.Net.Search.Highlight.WeightedSpanTerm.GetPositionSpans() call Lucene.Net.Search.Highlight.WeightedSpanTerm.GetPositionSpans() call Lucene.Net.Search.Highlight.WeightedSpanTerm.GetPositionSpans() call Lucene.Net.Search.Highlight.WeightedSpanTerm.GetPositionSpans() call Lucene.Net.Search.Highlight.WeightedSpanTerm.GetPositionSpans() for = < ++ if == = + break decl_stmt bool = >= * && - >= uint >> if ++ return public public = - = = = < = < = <