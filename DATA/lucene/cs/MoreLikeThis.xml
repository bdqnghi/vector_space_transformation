Lucene.Net.Search.Similar System using System.Collections.Generic using System.IO using System.Linq using Lucene.Net.Index using Lucene.Net.Store using Lucene.Net.Support using Lucene.Net.Util using Lucene.Net.Index.IndexReader Lucene.Net.Index.Term Lucene.Net.Search.BooleanClause Lucene.Net.Search.DefaultSimilarity Lucene.Net.Search.TermQuery Lucene.Net.Search.BooleanQuery Lucene.Net.Search.IndexSearcher Lucene.Net.Search.Query Lucene.Net.Analysis.Analyzer Lucene.Net.Analysis.TokenStream Lucene.Net.Analysis.Standard.StandardAnalyzer Lucene.Net.Documents.Document Lucene.Net.Analysis.Tokenattributes using class Lucene.Net.Search.Similar.MoreLikeThis int int int int int decl String Analyzer int bool bool int decl System int int int decl ISet int decl Lucene decl System int Analyzer int decl String int decl ISet return = return = return = return = return = return = public public = * call int.NumDocs() call int.NumDocs() call int.NumDocs() call int.NumDocs() call int.NumDocs() / return = public public return public public = return = return = public public < = public < public < return return = return = decl ICollection public public if == decl_stmt System.Collections.Generic.ICollection < = call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() = call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() return decl ICollection public public if == decl_stmt System.Collections.Generic.ICollection < = call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() call int.GetFieldNames() = call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() call decl ICollection.ToArray() return new public public return new public public return new public public return decl System int decl System float decl Object decl Object BooleanQuery private private < decl_stmt Lucene.Net.Search.BooleanQuery = new decl_stmt System.Object decl_stmt int = decl_stmt float = while = != decl_stmt System.Object = decl_stmt Lucene.Net.Search.TermQuery = new new if if == = float decl_stmt float = float = * / try call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) call Lucene.Net.Search.BooleanQuery.Add(Query,BooleanClause,Occur) catch break ++ if > && >= break return decl System FreqQ var int int decl System decl String int decl String int private < private < < decl_stmt int = call int.NumDocs() call int.NumDocs() call int.NumDocs() call int.NumDocs() call int.NumDocs() decl_stmt FreqQ = new decl_stmt var = while call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() call var.MoveNext() decl_stmt System.String = decl_stmt int = if > && < continue decl_stmt System.String = decl_stmt int = for = < ++ decl_stmt int = call int.DocFreq() call int.DocFreq() call int.DocFreq() call int.DocFreq() call int.DocFreq() new = > : = > : if > && < continue if > continue if == continue decl_stmt float = call int.Idf() call int.Idf() call int.Idf() call int.Idf() call int.Idf() decl_stmt float = * call FreqQ.InsertWithOverflow() call FreqQ.InsertWithOverflow() call FreqQ.InsertWithOverflow() call FreqQ.InsertWithOverflow() call FreqQ.InsertWithOverflow() new return decl StringBuilder decl System decl Text public public decl_stmt System.Text.StringBuilder = new call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + decl_stmt System.String = for = < ++ decl_stmt System.String = call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() = call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() call decl System.Append() + + + return call decl System.ToString() call decl System.ToString() call decl System.ToString() call decl System.ToString() call decl System.ToString() decl System decl IO decl System IndexReader FSDirectory decl String decl System decl System MoreLikeThis decl StreamWriter decl System decl String decl IO decl StreamWriter decl Uri public static public static decl_stmt System.String = decl_stmt System.String = decl_stmt System.Uri = for = < ++ if = ++ else if = ++ else if = new ++ decl_stmt System.IO.StreamWriter = new = decl_stmt System.IO.StreamWriter = decl_stmt Lucene.Net.Store.FSDirectory = new decl_stmt Lucene.Net.Index.IndexReader = call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + + + call decl System.NumDocs() call decl System.NumDocs() call decl System.NumDocs() call decl System.NumDocs() call decl System.NumDocs() + decl_stmt Lucene.Net.Queries.Mlt.MoreLikeThis = new call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl IO.DescribeParams() call decl IO.DescribeParams() call decl IO.DescribeParams() call decl IO.DescribeParams() call decl IO.DescribeParams() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() decl_stmt Lucene.Net.Search.Query = if != call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + = call decl IO.Like() call decl IO.Like() call decl IO.Like() call decl IO.Like() call decl IO.Like() else if != call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + = call decl IO.Like() call decl IO.Like() call decl IO.Like() call decl IO.Like() call decl IO.Like() new call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() decl_stmt Lucene.Net.Search.IndexSearcher = new decl_stmt Lucene.Net.Search.TopDocs = call decl System.Search() call decl System.Search() call decl System.Search() call decl System.Search() call decl System.Search() decl_stmt int = call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + + call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() decl_stmt Lucene.Net.Search.ScoreDoc = for = < ++ decl_stmt Lucene.Net.Documents.Document = call decl System.Doc() call decl System.Doc() call decl System.Doc() call decl System.Doc() call decl System.Doc() decl_stmt System.String = call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() if != call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() + call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call IndexReader.Get() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() call decl System.WriteLine() Document decl String decl System decl IDictionary ITermFreqVector private < private < decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < for = < ++ decl_stmt System.String = decl_stmt Lucene.Net.Index.ITermFreqVector = call int.GetTermFreqVector() call int.GetTermFreqVector() call int.GetTermFreqVector() call int.GetTermFreqVector() call int.GetTermFreqVector() if == decl_stmt Lucene.Net.Documents.Document = call int.Document() call int.Document() call int.Document() call int.Document() call int.Document() decl_stmt System.String = call ITermFreqVector.GetValues() call ITermFreqVector.GetValues() call ITermFreqVector.GetValues() call ITermFreqVector.GetValues() call ITermFreqVector.GetValues() if != for = < ++ new else return decl String decl int decl System decl System private private < decl_stmt System.String = decl_stmt int = for = < ++ decl_stmt System.String = if continue decl_stmt Int = if == = new = = else += string Int ITermAttribute TokenStream int private private < decl_stmt Lucene.Net.Analysis.TokenStream = call int.TokenStream() call int.TokenStream() call int.TokenStream() call int.TokenStream() call int.TokenStream() decl_stmt int = decl_stmt Lucene.Net.Analysis.Tokenattributes.ITermAttribute = < while call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() call TokenStream.IncrementToken() decl_stmt string = ++ if > break if continue decl_stmt Int = if == = new else ++ int private private decl_stmt int = if > && < return if > && > return if != && call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() call decl ISet.Contains() return return decl System decl IDictionary public < public < decl_stmt SpellChecker.Net.Search.Spell.IDictionary < = new < for = < ++ decl_stmt System.String = return decl Object decl PriorityQueue int decl List decl System public public decl_stmt System.Collections.Generic.List < = new < decl_stmt Lucene.Net.Support.PriorityQueue < = decl_stmt System.Object decl_stmt int = while = call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() != && -- > decl_stmt System.Object = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() decl Object decl PriorityQueue int decl List decl System public public decl_stmt System.Collections.Generic.List < = new < decl_stmt Lucene.Net.Support.PriorityQueue < = decl_stmt System.Object decl_stmt int = while = call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() call decl PriorityQueue.Pop() != && -- > decl_stmt System.Object = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() float float override public override public decl_stmt float = float decl_stmt float = float return float > float