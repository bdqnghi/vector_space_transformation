Lucene.Net.Index System.Collections.Generic using System.Diagnostics using Lucene.Net.Util.BytesRef Lucene.Net.Util.CollectionUtil Lucene.Net.Codecs.FieldsConsumer Lucene.Net.Util.IOUtils class Lucene.Net.Index.FreqProxTermsWriter super super TermsHashConsumer BytesRef public override public override FreqProxTermsWriterPerField bool decl IList int int TermsHash FieldInfo TermsHashPerField FieldsConsumer public override public override < decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt Lucene.Net.Index.FreqProxTermsWriterPerField = if call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() call TermsHashPerField.TermsHashPerField() > call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl_stmt int = decl_stmt Lucene.Net.Codecs.FieldsConsumer = decl_stmt bool = try decl_stmt Lucene.Net.Index.TermsHash = for = < ++ decl_stmt Lucene.Net.Index.FieldInfo = decl_stmt Lucene.Net.Index.FreqProxTermsWriterPerField = call Lucene.Net.Index.FreqProxTermsWriterPerField.Flush(string,FieldsConsumer,SegmentWriteState) call Lucene.Net.Index.FreqProxTermsWriterPerField.Flush(string,FieldsConsumer,SegmentWriteState) call Lucene.Net.Index.FreqProxTermsWriterPerField.Flush(string,FieldsConsumer,SegmentWriteState) call Lucene.Net.Index.FreqProxTermsWriterPerField.Flush(string,FieldsConsumer,SegmentWriteState) call Lucene.Net.Index.FreqProxTermsWriterPerField.Flush(string,FieldsConsumer,SegmentWriteState) decl_stmt Lucene.Net.Index.TermsHashPerField = == || == = decl_stmt int = call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call TermsHashPerField.BytesHash() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.Reset() call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.TermsHashPerField.ShrinkHash(int) call Lucene.Net.Index.FreqProxTermsWriterPerField.Reset() call Lucene.Net.Index.FreqProxTermsWriterPerField.Reset() call Lucene.Net.Index.FreqProxTermsWriterPerField.Reset() call Lucene.Net.Index.FreqProxTermsWriterPerField.Reset() call Lucene.Net.Index.FreqProxTermsWriterPerField.Reset() if != call Lucene.Net.Index.TermsHash.Reset() call Lucene.Net.Index.TermsHash.Reset() call Lucene.Net.Index.TermsHash.Reset() call Lucene.Net.Index.TermsHash.Reset() call Lucene.Net.Index.TermsHash.Reset() = finally if else public override public override return new public override public override public override public override