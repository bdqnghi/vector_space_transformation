Lucene.Net.Search System using System.Collections.Generic using System.Diagnostics using System.Globalization using System.Text using NUnit.Framework using System.IO using Lucene.Net.Index.AtomicReaderContext Lucene.Net.Index.IndexReader Lucene.Net.Util.LuceneTestCase class Lucene.Net.Search.CheckHits float float decl SortedSet Explanation string int public static public static decl_stmt string = decl_stmt System.Collections.Generic.SortedSet < ? = new < ? for = < ++ call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() decl_stmt int = for = < ++ if call decl SortedSet.Contains() call decl SortedSet.Contains() call decl SortedSet.Contains() call decl SortedSet.Contains() call decl SortedSet.Contains() continue decl_stmt Lucene.Net.Search.Explanation = + + + + + + + + + call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) IndexSearcher Collector decl SortedSet decl SortedSet public static public static decl_stmt System.Collections.Generic.SortedSet < ? = new < ? for = < ++ call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() decl_stmt System.Collections.Generic.SortedSet < ? = new < ? decl_stmt Collector = new + for = - < ++ call decl SortedSet.Clear() call decl SortedSet.Clear() call decl SortedSet.Clear() call decl SortedSet.Clear() call decl SortedSet.Clear() decl_stmt Lucene.Net.Search.IndexSearcher = call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) call Lucene.Net.Search.IndexSearcher.Search(IList,Weight,Collector) + + + public override public override + = public override public override return decl ScoreDoc decl SortedSet decl SortedSet public static public static decl_stmt Lucene.Net.Search.ScoreDoc = decl_stmt System.Collections.Generic.SortedSet < ? = new < ? for = < ++ call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() decl_stmt System.Collections.Generic.SortedSet < ? = new < ? for = < ++ call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() call decl SortedSet.Add() public static public static + for = < ++ + + public static public static float public static public static decl_stmt float const const = if != + + + for = < ++ if != + + + + + if != || - > + + + + + + + + + + + StringBuilder int int public static public static decl_stmt System.Text.StringBuilder = new decl_stmt int = == : decl_stmt int = == : if <= = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if < call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if < call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) StringBuilder public static public static decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if <= = else = for = < ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) public static public static public static public static new public static public static return * float float string float float decl Explanation float bool bool int int bool float float bool public static public static decl_stmt float = + + + + + + + + if ! return decl_stmt Lucene.Net.Search.Explanation = if return if != if == if ! else decl_stmt float = decl_stmt string = decl_stmt bool = call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() decl_stmt bool = call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() decl_stmt bool = call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() decl_stmt bool = if ! || || decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() if >= += decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() try = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - if call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() = catch || || || + + + + + decl_stmt float = decl_stmt float = decl_stmt float = for = < ++ decl_stmt float = *= += = decl_stmt float = if = else if = else if = else if = + * - else + + + + + + protected internal virtual protected internal virtual new public override public override return public override public override public override public override public override public override return = Explanation public override public override decl_stmt Lucene.Net.Search.Explanation = = + try = catch throw new + + + + + + + + + + + + call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) call Lucene.Net.Search.Explanation.ToString(int) = public override public override return