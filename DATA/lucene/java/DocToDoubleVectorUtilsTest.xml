org.apache.lucene.classification.utils org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiFields import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Terms import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.ScoreDoc import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.junit.After import org.junit.Before import org.junit.Test import class org.apache.lucene.classification.utils.DocToDoubleVectorUtilsTest super super extends IndexReader Directory Document RandomIndexWriter FieldType public public throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) decl_stmt org.apache.lucene.document.Document for = < ++ = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + + + + call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexSearcher decl Double Terms public public throws decl_stmt org.apache.lucene.search.IndexSearcher = new for : call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt org.apache.lucene.index.Terms = call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) decl_stmt java.lang.Double = > IndexSearcher Terms decl Double Terms public public throws decl_stmt org.apache.lucene.index.Terms = if != && call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() != - decl_stmt org.apache.lucene.search.IndexSearcher = new for : call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt org.apache.lucene.index.Terms = call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) call org.apache.lucene.index.IndexReader.getTermVector(int,String) decl_stmt java.lang.Double = >