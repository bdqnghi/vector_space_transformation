org.apache.solr.search org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.util.RefCounted import org.noggit.ObjectBuilder import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.request.SolrQueryRequest import org.apache.solr.util.TestHarness import org.junit.BeforeClass import org.junit.Test import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import java.util.Random import java.util.concurrent.atomic.AtomicInteger import java.util.concurrent.atomic.AtomicLong import static static org.apache.solr.core.SolrCore.verbose import static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import class org.apache.solr.search.TestRealTimeGet super super extends public static public static throws decl RefCounted SolrQueryRequest decl RefCounted public public throws + + + + + + + + + + + + + + + + + + decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.util.RefCounted < = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.util.RefCounted < = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() long long public public throws decl_stmt long = + + + + += + + - + + - + + - + + - + + += - decl_stmt long = = = > = + + + - + + + long long public public throws decl_stmt long = decl_stmt long try = - catch try = - catch try = - catch try = + + catch try = - catch try = - catch try = + + catch try = catch = - < = > try = catch try = catch = = try = catch try = catch = - - > = + + AtomicLong Random boolean int Object int boolean long long Map decl Map int long AtomicInteger Long int List int int int boolean int long int long int decl List int SolrQueryRequest boolean String int DocInfo Thread int boolean ModifiableSolrParams int SolrInputDocument int public public throws decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + decl_stmt int final final = + : decl_stmt int = + decl_stmt int final final = decl_stmt int final final = decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt int = + decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt java.util.List < = new <> for = < ++ decl_stmt java.lang.Thread = new + decl_stmt java.util.Random = new public public try while call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() > decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if < if call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() <= decl_stmt java.util.Map < decl_stmt long synchronized = new <> = ++ if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < else synchronized if >= if + = = call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() continue decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.Object = decl_stmt boolean = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() if = synchronized decl_stmt DocInfo = decl_stmt long = decl_stmt long = + if < + decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < : decl_stmt long = : if if ! else : + decl_stmt java.lang.Long = if if = else try = catch else = if != new - if else if < + + if + + new - - if else decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < : decl_stmt long = : if if ! else : + decl_stmt java.lang.Long = decl_stmt org.apache.solr.common.SolrInputDocument = if if = else try = catch else = if != new if if ! = catch call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) - throw new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = < ++ decl_stmt java.lang.Thread = new + decl_stmt java.util.Random = new public public try while call AtomicLong.decrementAndGet() call AtomicLong.decrementAndGet() call AtomicLong.decrementAndGet() call AtomicLong.decrementAndGet() call AtomicLong.decrementAndGet() >= decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < decl_stmt DocInfo if = else synchronized = if decl_stmt boolean = decl_stmt org.apache.solr.request.SolrQueryRequest if decl_stmt org.apache.solr.common.params.ModifiableSolrParams = if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < decl_stmt int = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) = != call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) + = else = + decl_stmt java.lang.String = decl_stmt java.util.Map = decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() == else call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() decl_stmt long = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) decl_stmt long = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) if || < || == && != catch call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) - throw new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() for : call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) int DocInfo long long long decl Map Object boolean Long boolean SolrInputDocument int boolean public public try while > decl_stmt int = if < if <= decl_stmt java.util.Map < decl_stmt long synchronized = new <> = ++ if < else synchronized if >= if + = = continue decl_stmt int = decl_stmt java.lang.Object = decl_stmt boolean = if = synchronized decl_stmt DocInfo = decl_stmt long = decl_stmt long = + if < + decl_stmt boolean = < decl_stmt boolean = < : decl_stmt long = : if if ! else : + decl_stmt java.lang.Long = if if = else try = catch else = if != new - if else if < + + if + + new - - if else decl_stmt boolean = < decl_stmt boolean = < : decl_stmt long = : if if ! else : + decl_stmt java.lang.Long = decl_stmt org.apache.solr.common.SolrInputDocument = if if = else try = catch else = if != new if if ! = catch - throw new DocInfo boolean Map String int ModifiableSolrParams long long List SolrQueryRequest boolean int public public try while >= decl_stmt int = < : decl_stmt boolean = < decl_stmt DocInfo if = else synchronized = if decl_stmt boolean = decl_stmt org.apache.solr.request.SolrQueryRequest if decl_stmt org.apache.solr.common.params.ModifiableSolrParams = if < decl_stmt int = : = != call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) + = else = + decl_stmt java.lang.String = decl_stmt java.util.Map = decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() == else call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() decl_stmt long = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) decl_stmt long = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) if || < || == && != catch - throw new