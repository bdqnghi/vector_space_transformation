org.apache.solr.search.join java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.search.Query import org.apache.lucene.search.join.ScoreMode import org.apache.solr.JSONTestUtil import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.params.MapSolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.response.SolrQueryResponse import org.apache.solr.search.JoinQParserPlugin import org.apache.solr.search.QParser import org.apache.solr.search.SyntaxError import org.junit.BeforeClass import org.junit.Test import org.noggit.JSONUtil import org.noggit.ObjectBuilder import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.search.join.TestScoreJoinQPNoScore super super extends Logger public static public static throws String public public throws + + + + + + + + + + + + + + decl_stmt java.lang.String final final = + + + + + + + + + + + + + + Query SolrQueryRequest SolrQueryResponse String Query public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = try decl_stmt java.lang.String final final = = + + decl_stmt org.apache.solr.response.SolrQueryResponse = new new decl_stmt org.apache.lucene.search.Query final final = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() decl_stmt org.apache.lucene.search.Query final final = decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() finally if != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() decl ScoreMode public static public static decl_stmt ScoreMode final final final = return + + decl Collection String decl Map decl String decl Map decl String SolrQueryRequest String int decl Map decl Set List Object decl List String decl List int String SolrQueryRequest int decl Map String String decl Map String public public throws decl_stmt int = * decl_stmt int = * decl_stmt java.lang.String = new while -- >= decl_stmt int = * decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new + / call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new + / call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new + / call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new new decl_stmt java.util.Map < = decl_stmt java.util.Map < < < = new < < < for = < ++ decl_stmt java.lang.String decl_stmt java.lang.String if < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = < : call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else decl_stmt java.lang.String = = = decl_stmt java.util.Map < < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() + + if == = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + decl_stmt java.util.Collection < = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl_stmt java.util.Set < = decl_stmt java.util.List < = new < call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.List = new for : if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() >= break call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.request.SolrQueryRequest = + + + + + : + + : + + + decl_stmt java.lang.String = decl_stmt java.lang.Object = decl_stmt java.lang.String = if != decl_stmt java.lang.String final final = + + + + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl_stmt org.apache.solr.request.SolrQueryRequest = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + decl_stmt java.util.Map final final final < = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt java.lang.String final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map final final final < = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt java.lang.String final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) decl_stmt java.lang.String = decl Map Doc decl List decl Set decl Map decl List < < < < < decl_stmt java.util.Map < < = new < < decl_stmt java.util.Map < < = for : decl_stmt javax.print.Doc = decl_stmt java.util.List < = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() if == continue for : decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == continue decl_stmt java.util.Set < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return decl Collection decl Set < < < < < decl_stmt java.util.Set < = new < for : decl_stmt java.util.Collection < = if == continue call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return