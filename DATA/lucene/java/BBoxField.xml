org.apache.solr.schema java.util.ArrayList import java.util.Arrays import java.util.HashSet import java.util.List import java.util.Map import org.apache.lucene.index.DocValuesType import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource import org.apache.lucene.spatial.bbox.BBoxStrategy import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.util.ShapeAreaValueSource import org.apache.solr.common.SolrException import org.apache.solr.search.QParser import org.locationtech.spatial4j.shape.Rectangle import class org.apache.solr.schema.BBoxField super super extends super implements String boolean String String String String String String IndexSchema String protected protected < decl_stmt java.lang.String = if == throw new + + = = if != = = if != = FieldType decl List String FieldType public public = decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) if == throw new + if == throw new + if ! instanceof throw new + if ! instanceof throw new + decl_stmt java.util.List < = new <> call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() for : if == decl_stmt java.lang.String = private private + + + + + SchemaField int private private decl_stmt int = if |= else &= ~ decl_stmt org.apache.solr.schema.SchemaField = new call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.IndexSchema.getFields() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() SchemaField FieldType decl org FieldType protected protected decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) call org.apache.solr.schema.IndexSchema.getFieldTypeByName(String) if call org.apache.solr.schema.IndexSchema.isDynamicField(String) call org.apache.solr.schema.IndexSchema.isDynamicField(String) call org.apache.solr.schema.IndexSchema.isDynamicField(String) call org.apache.solr.schema.IndexSchema.isDynamicField(String) call org.apache.solr.schema.IndexSchema.isDynamicField(String) decl_stmt org.apache.solr.schema.SchemaField final final = new decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call decl org.setStored() call decl org.setStored() call decl org.setStored() call decl org.setStored() call decl org.setStored() if call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() = new call decl org.setDocValuesType() call decl org.setDocValuesType() call decl org.setDocValuesType() call decl org.setDocValuesType() call decl org.setDocValuesType() return new double double String protected protected if == return switch case decl_stmt double = decl_stmt java.lang.String = if != = decl_stmt double = = if != = return new case return new * case return new * default: return