org.apache.solr.core java.util.Collections import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import com.google.common.collect.ImmutableSet import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.StrUtils import static static org.apache.solr.common.params.CommonParams.NAME import static static org.apache.solr.common.params.CommonParams.PATH import static static org.apache.solr.core.PluginInfo.APPENDS import static static org.apache.solr.core.PluginInfo.DEFAULTS import static static org.apache.solr.core.PluginInfo.INVARIANTS import class org.apache.solr.core.InitParams decl Set String String NamedList PluginInfo decl Set public public if == return if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return for : if return return int String decl List String decl List private static private static decl_stmt java.util.List < = decl_stmt java.util.List < = decl_stmt int = for < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : if == return if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue if && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == + return if return return decl_stmt java.lang.String = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : return || String Object public public if ! else if != for = < ++ decl_stmt java.lang.String = if continue decl_stmt java.lang.Object = if != continue decl Set decl Map decl Set NamedList private static private static if == && == return if == = new decl_stmt org.apache.solr.common.util.NamedList = if if != call org.apache.solr.common.util.NamedList.addAll(Map) call org.apache.solr.common.util.NamedList.addAll(Map) call org.apache.solr.common.util.NamedList.addAll(Map) call org.apache.solr.common.util.NamedList.addAll(Map) call org.apache.solr.common.util.NamedList.addAll(Map) else decl_stmt java.util.Set < = new <> decl_stmt java.util.Set < = new <> for : decl_stmt java.util.Map < = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() if != for : decl_stmt java.util.Map < = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() continue for : call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if > - else