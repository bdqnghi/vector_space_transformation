org.apache.solr.handler java.io.IOException import java.io.Reader import java.io.StringReader import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.List import java.util.Map import java.util.Set import org.apache.commons.lang.ArrayUtils import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.analysis.tokenattributes.TypeAttribute import org.apache.lucene.analysis.util.CharFilterFactory import org.apache.lucene.analysis.util.TokenFilterFactory import org.apache.lucene.analysis.util.TokenizerFactory import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Attribute import org.apache.lucene.util.AttributeImpl import org.apache.lucene.util.AttributeReflector import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.IOUtils import org.apache.solr.analysis.TokenizerChain import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.FieldType import class org.apache.solr.handler.AnalysisRequestHandlerBase super super extends decl Set decl Map public public throws decl List decl NamedList ListBasedTokenStream TokenizerFactory decl TokenFilterFactory decl CharFilterFactory String TokenizerChain Analyzer Reader TokenStream protected < extends extends protected < extends extends decl_stmt org.apache.lucene.analysis.Analyzer = if ! try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) decl_stmt org.apache.solr.common.util.NamedList < < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() return catch throw new decl_stmt org.apache.solr.analysis.TokenizerChain = decl_stmt org.apache.lucene.analysis.util.CharFilterFactory = call org.apache.solr.analysis.TokenizerChain.getCharFilterFactories() call org.apache.solr.analysis.TokenizerChain.getCharFilterFactories() call org.apache.solr.analysis.TokenizerChain.getCharFilterFactories() call org.apache.solr.analysis.TokenizerChain.getCharFilterFactories() call org.apache.solr.analysis.TokenizerChain.getCharFilterFactories() decl_stmt org.apache.lucene.analysis.util.TokenizerFactory = call TokenizerChain.getTokenizerFactory() call TokenizerChain.getTokenizerFactory() call TokenizerChain.getTokenizerFactory() call TokenizerChain.getTokenizerFactory() call TokenizerChain.getTokenizerFactory() decl_stmt org.apache.lucene.analysis.util.TokenFilterFactory = call org.apache.solr.analysis.TokenizerChain.getTokenFilterFactories() call org.apache.solr.analysis.TokenizerChain.getTokenFilterFactories() call org.apache.solr.analysis.TokenizerChain.getTokenFilterFactories() call org.apache.solr.analysis.TokenizerChain.getTokenFilterFactories() call org.apache.solr.analysis.TokenizerChain.getTokenFilterFactories() decl_stmt org.apache.solr.common.util.NamedList < = new <> if < decl_stmt java.lang.String = for : decl_stmt java.io.Reader = new = = decl_stmt org.apache.lucene.analysis.TokenStream = call TokenizerFactory.create() call TokenizerFactory.create() call TokenizerFactory.create() call TokenizerFactory.create() call TokenizerFactory.create() call org.apache.solr.analysis.TokenizerChain.initReader(String,Reader) call org.apache.solr.analysis.TokenizerChain.initReader(String,Reader) call org.apache.solr.analysis.TokenizerChain.initReader(String,Reader) call org.apache.solr.analysis.TokenizerChain.initReader(String,Reader) call org.apache.solr.analysis.TokenizerChain.initReader(String,Reader) new decl_stmt java.util.List < = call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() decl_stmt ListBasedTokenStream = new for : for final final : = = call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() call TokenStream.getClass() = new return decl Set TermToBytesRefAttribute protected < protected < try = decl_stmt java.util.Set final final final < = new <> decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute final final = while call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() return catch throw new decl List int PositionIncrementAttribute TokenTrackingAttribute private < private < decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute final final = decl_stmt org.apache.solr.handler.TokenTrackingAttribute final final = try decl_stmt int = while += call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call org.apache.solr.handler.TokenTrackingAttribute.setActPosition(int) call org.apache.solr.handler.TokenTrackingAttribute.setActPosition(int) call org.apache.solr.handler.TokenTrackingAttribute.setActPosition(int) call org.apache.solr.handler.TokenTrackingAttribute.setActPosition(int) call org.apache.solr.handler.TokenTrackingAttribute.setActPosition(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() catch throw new finally return String BytesRef String String int decl AttributeSource BytesRef AttributeSource TermToBytesRefAttribute FieldType decl NamedList int decl List private < private < final final final < decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.solr.schema.FieldType final final = decl_stmt org.apache.lucene.util.AttributeSource final final final = new new < public public return private private decl_stmt int = decl_stmt int final final = while < decl_stmt int = - if != return ++ return - for = < ++ decl_stmt org.apache.lucene.util.AttributeSource = decl_stmt org.apache.solr.common.util.NamedList final final final < = new <> decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute final final = call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) decl_stmt org.apache.lucene.util.BytesRef = call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() decl_stmt java.lang.String final final = call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) new call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if call org.apache.lucene.util.AttributeSource.hasAttribute(Class) call org.apache.lucene.util.AttributeSource.hasAttribute(Class) call org.apache.lucene.util.AttributeSource.hasAttribute(Class) call org.apache.lucene.util.AttributeSource.hasAttribute(Class) call org.apache.lucene.util.AttributeSource.hasAttribute(Class) decl_stmt java.lang.String final final = call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) call org.apache.lucene.util.AttributeSource.getAttribute(Class) if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() if call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.lucene.util.AttributeSource.reflectWith(AttributeReflector) call org.apache.lucene.util.AttributeSource.reflectWith(AttributeReflector) call org.apache.lucene.util.AttributeSource.reflectWith(AttributeReflector) call org.apache.lucene.util.AttributeSource.reflectWith(AttributeReflector) call org.apache.lucene.util.AttributeSource.reflectWith(AttributeReflector) new public public < extends extends if return if return if return decl_stmt java.lang.String = + + if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if instanceof decl_stmt org.apache.lucene.util.BytesRef final final = = call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public return int int int private private decl_stmt int = decl_stmt int final final = while < decl_stmt int = - if != return ++ return - BytesRef String public public < extends extends if return if return if return decl_stmt java.lang.String = + + if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if instanceof decl_stmt org.apache.lucene.util.BytesRef final final = = call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() call org.apache.lucene.util.BytesRef.toString() int decl char int StringBuilder private private < decl_stmt int final final = decl_stmt char = new decl_stmt int = decl_stmt java.lang.StringBuilder = new do try = catch throw new if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) == call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws = AttributeSource public public if decl_stmt org.apache.lucene.util.AttributeSource = call org.apache.lucene.util.AttributeSource.copyTo(AttributeSource) call org.apache.lucene.util.AttributeSource.copyTo(AttributeSource) call org.apache.lucene.util.AttributeSource.copyTo(AttributeSource) call org.apache.lucene.util.AttributeSource.copyTo(AttributeSource) call org.apache.lucene.util.AttributeSource.copyTo(AttributeSource) return else return decl Iterator protected protected decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() public public = = = public public = = public public if == = return public public = = = public public public public TokenTrackingAttribute public public decl_stmt org.apache.solr.handler.TokenTrackingAttribute final final = call org.apache.solr.handler.TokenTrackingAttribute.reset(int,int) call org.apache.solr.handler.TokenTrackingAttribute.reset(int,int) call org.apache.solr.handler.TokenTrackingAttribute.reset(int,int) call org.apache.solr.handler.TokenTrackingAttribute.reset(int,int) call org.apache.solr.handler.TokenTrackingAttribute.reset(int,int) public public return public public return public public return public < public < return