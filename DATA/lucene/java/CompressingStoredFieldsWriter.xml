org.apache.lucene.codecs.compressing java.io.IOException import java.util.Arrays import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.StoredFieldsReader import org.apache.lucene.codecs.StoredFieldsWriter import org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.SerializedDocument import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexableField import org.apache.lucene.index.MergeState import org.apache.lucene.index.SegmentInfo import org.apache.lucene.store.DataOutput import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BitUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.packed.PackedInts import class org.apache.lucene.codecs.compressing.CompressingStoredFieldsWriter super super extends int int boolean int int decl int GrowableByteArrayDataOutput int long decl int int CompressingStoredFieldsIndexWriter IndexOutput int int int int long String int String int int long int long Compressor long int String int String int String String int int CompressionMode int long public public throws try finally = = public public throws int public public throws if == decl_stmt int final final = + = = = = = ++ if long boolean decl PackedInts int private static private static throws assert > if == else decl_stmt boolean = for = < ++ if != = break if else decl_stmt long = for = < ++ |= decl_stmt int final final = decl_stmt Writer final final final final final = for = < ++ call decl PackedInts.add() call decl PackedInts.add() call decl PackedInts.add() call decl PackedInts.add() call decl PackedInts.add() call decl PackedInts.finish() call decl PackedInts.finish() call decl PackedInts.finish() call decl PackedInts.finish() call decl PackedInts.finish() int private private throws decl_stmt int final final = : call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << | private private return >= || >= decl int boolean private private throws call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() decl_stmt int final final final = for = - > -- = - - assert >= decl_stmt boolean final final = >= * if for = < += call Compressor.compress() call Compressor.compress() call Compressor.compress() call Compressor.compress() call Compressor.compress() - else call Compressor.compress() call Compressor.compress() call Compressor.compress() call Compressor.compress() call Compressor.compress() += = = ++ long BytesRef int String Number public public throws ++ decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef final final decl_stmt java.lang.String final final decl_stmt java.lang.Number = if != if instanceof || instanceof || instanceof = else if instanceof = else if instanceof = else if instanceof = else throw new + call Number.getClass() call Number.getClass() call Number.getClass() call Number.getClass() call Number.getClass() = = else = if != = = else = = if == throw new + + decl_stmt long final final = long << | call GrowableByteArrayDataOutput.writeVLong() call GrowableByteArrayDataOutput.writeVLong() call GrowableByteArrayDataOutput.writeVLong() call GrowableByteArrayDataOutput.writeVLong() call GrowableByteArrayDataOutput.writeVLong() if != call GrowableByteArrayDataOutput.writeVInt() call GrowableByteArrayDataOutput.writeVInt() call GrowableByteArrayDataOutput.writeVInt() call GrowableByteArrayDataOutput.writeVInt() call GrowableByteArrayDataOutput.writeVInt() call org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput.writeBytes(byte,int,int) call org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput.writeBytes(byte,int,int) call org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput.writeBytes(byte,int,int) call org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput.writeBytes(byte,int,int) call org.apache.lucene.codecs.compressing.GrowableByteArrayDataOutput.writeBytes(byte,int,int) else if != call GrowableByteArrayDataOutput.writeString() call GrowableByteArrayDataOutput.writeString() call GrowableByteArrayDataOutput.writeString() call GrowableByteArrayDataOutput.writeString() call GrowableByteArrayDataOutput.writeString() else if instanceof || instanceof || instanceof call GrowableByteArrayDataOutput.writeZInt() call GrowableByteArrayDataOutput.writeZInt() call GrowableByteArrayDataOutput.writeZInt() call GrowableByteArrayDataOutput.writeZInt() call GrowableByteArrayDataOutput.writeZInt() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() else if instanceof call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() else if instanceof call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() else if instanceof call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() else throw new int int static static throws decl_stmt int = int decl_stmt int final final = if == && >= - && <= && != | + else if >>> == else byte long int static static throws decl_stmt int = int decl_stmt long final final = if == && >= - && <= && != | + return else if == float byte float else if >>> == else byte int long long static static throws decl_stmt int if != = else if == = /= else if == = /= else = /= decl_stmt long final final = |= & decl_stmt long final final = >>> if != |= byte if != public public throws if > ++ else assert == if != throw new + + + call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.finish(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.finish(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.finish(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.finish(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.finish(int,long) call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() assert == int CompressingStoredFieldsIndexReader int int int Bits MergeVisitor int IndexInput SerializedDocument StoredFieldsReader int StoredFieldsReader CompressingStoredFieldsReader long int MatchingReaders public public throws decl_stmt int = decl_stmt int = decl_stmt MatchingReaders = new for = < ++ decl_stmt MergeVisitor = new decl_stmt org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader = if decl_stmt org.apache.lucene.codecs.StoredFieldsReader final final = if != && instanceof = decl_stmt int final final = decl_stmt org.apache.lucene.util.Bits final final = if == || call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() != || == decl_stmt org.apache.lucene.codecs.StoredFieldsReader = if != call StoredFieldsReader.checkIntegrity() call StoredFieldsReader.checkIntegrity() call StoredFieldsReader.checkIntegrity() call StoredFieldsReader.checkIntegrity() call StoredFieldsReader.checkIntegrity() for = < ++ if != && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() == continue call StoredFieldsReader.visitDocument() call StoredFieldsReader.visitDocument() call StoredFieldsReader.visitDocument() call StoredFieldsReader.visitDocument() call StoredFieldsReader.visitDocument() ++ else if call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getCompressionMode() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getCompressionMode() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getCompressionMode() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getCompressionMode() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getCompressionMode() == && call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getChunkSize() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getChunkSize() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getChunkSize() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getChunkSize() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getChunkSize() == && call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getPackedIntsVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getPackedIntsVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getPackedIntsVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getPackedIntsVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getPackedIntsVersion() == && == && ! assert call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() == call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() if > ++ decl_stmt org.apache.lucene.store.IndexInput = call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getFieldsStream() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getFieldsStream() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getFieldsStream() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getFieldsStream() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getFieldsStream() decl_stmt org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader = call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getIndexReader() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getIndexReader() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getIndexReader() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getIndexReader() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getIndexReader() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) decl_stmt int = while < decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() if != throw new + + + decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() decl_stmt int = >>> call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexWriter.writeIndex(int,long) call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() += += += if > throw new + + + + + decl_stmt long final final if == = call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() else = call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader.getStartPointer(int) call IndexOutput.copyBytes() call IndexOutput.copyBytes() call IndexOutput.copyBytes() call IndexOutput.copyBytes() call IndexOutput.copyBytes() - call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() if call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() != call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() throw new + call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() + + call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getMaxPointer() += call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumChunks() += call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumDirtyChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumDirtyChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumDirtyChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumDirtyChunks() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getNumDirtyChunks() else assert call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.getVersion() == call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.checkIntegrity() for = < ++ if != && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() == continue decl_stmt SerializedDocument = call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.document(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.document(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.document(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.document(int) call org.apache.lucene.codecs.compressing.CompressingStoredFieldsReader.document(int) call int.copyBytes() call int.copyBytes() call int.copyBytes() call int.copyBytes() call int.copyBytes() = ++ return return > || * >