org.apache.solr.search.function.distance org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.DoubleDocValues import org.apache.lucene.queries.function.valuesource.MultiValueSource import org.apache.lucene.search.IndexSearcher import org.locationtech.spatial4j.distance.DistanceUtils import org.apache.solr.common.SolrException import java.io.IOException import java.util.Map import class org.apache.solr.search.function.distance.HaversineFunction super super extends MultiValueSource boolean MultiValueSource double protected protected return decl double double decl double double double double protected protected decl_stmt double = new decl_stmt double = new decl_stmt double decl_stmt double decl_stmt double decl_stmt double if = * = * = * = * else = = = = return * FunctionValues StringBuilder FunctionValues public public throws decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() return new public public return public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() HaversineFunction public public if != return decl_stmt org.apache.solr.search.function.distance.HaversineFunction = return call org.apache.solr.search.function.distance.HaversineFunction.name() call org.apache.solr.search.function.distance.HaversineFunction.name() call org.apache.solr.search.function.distance.HaversineFunction.name() call org.apache.solr.search.function.distance.HaversineFunction.name() call org.apache.solr.search.function.distance.HaversineFunction.name() && call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() && call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() && == int long public public decl_stmt int decl_stmt long = call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() = * + call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() = * + = = * + ^ >>> return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()