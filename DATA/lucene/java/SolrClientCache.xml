org.apache.solr.client.solrj.io java.io.IOException import java.io.Serializable import java.lang.invoke.MethodHandles import java.util.Map import java.util.HashMap import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.client.solrj.io.SolrClientCache super super implements Logger decl Map CloudSolrClient public synchronized public synchronized decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else = new call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return HttpSolrClient public synchronized public synchronized decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() +