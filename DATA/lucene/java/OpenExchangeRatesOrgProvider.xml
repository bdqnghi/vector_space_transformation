org.apache.solr.schema java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.lang.invoke.MethodHandles import java.net.URL import java.nio.charset.StandardCharsets import java.util.HashMap import java.util.Map import java.util.Set import org.apache.solr.common.util.SuppressForbidden import org.noggit.JSONParser import org.apache.lucene.analysis.util.ResourceLoader import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.schema.OpenExchangeRatesOrgProvider super super implements String Logger String String ResourceLoader OpenExchangeRates int String Double Double public public if == throw new if == || == throw new decl_stmt java.lang.Double = call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() decl_stmt java.lang.Double = call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() if == || == throw new + + + + + + return / = private = private if call OpenExchangeRates.getTimestamp() call OpenExchangeRates.getTimestamp() call OpenExchangeRates.getTimestamp() call OpenExchangeRates.getTimestamp() call OpenExchangeRates.getTimestamp() + * < call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() OpenExchangeRatesOrgProvider public public if == return if == || != return decl_stmt org.apache.solr.schema.OpenExchangeRatesOrgProvider = return ! != ! call OpenExchangeRates.equals() call OpenExchangeRates.equals() call OpenExchangeRates.equals() call OpenExchangeRates.equals() call OpenExchangeRates.equals() : != public public return != call OpenExchangeRates.hashCode() call OpenExchangeRates.hashCode() call OpenExchangeRates.hashCode() call OpenExchangeRates.hashCode() call OpenExchangeRates.hashCode() : public public return + + + call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() + public < public < if == throw new return call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() call OpenExchangeRates.getRates() InputStream public public throws decl_stmt java.io.InputStream = try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + try = new catch = call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) = new return catch throw new finally if != try call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch throw new int public public < throws try = if == throw new + decl_stmt int = if < = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + = * catch throw catch throw new + finally public public throws = private private return == : public < public < return public public return = public public return public public return public public return