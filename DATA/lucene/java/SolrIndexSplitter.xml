org.apache.solr.update java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.List import org.apache.lucene.index.CodecReader import org.apache.lucene.index.FilterCodecReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Fields import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.SlowCodecReaderWrapper import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.IOUtils import org.apache.solr.common.cloud.CompositeIdRouter import org.apache.solr.common.cloud.DocRouter import org.apache.solr.common.cloud.HashBasedRouter import org.apache.solr.core.SolrCore import org.apache.solr.schema.SchemaField import org.apache.solr.search.BitsFilteredPostingsEnum import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.util.RefCounted import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.SolrIndexSplitter SolrIndexSearcher Logger decl Range decl DocRouter String int decl List SchemaField DocRouter decl List decl List int HashBasedRouter SolrCore decl FixedBitSet CodecReader boolean decl List IndexWriter SolrCore decl List decl RefCounted String public public throws decl_stmt java.util.List < = call org.apache.solr.search.SolrIndexSearcher.getRawReader() call org.apache.solr.search.SolrIndexSearcher.getRawReader() call org.apache.solr.search.SolrIndexSearcher.getRawReader() call org.apache.solr.search.SolrIndexSearcher.getRawReader() call org.apache.solr.search.SolrIndexSearcher.getRawReader() decl_stmt java.util.List < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : assert == call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.FixedBitSet = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = < ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + != + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : decl_stmt boolean = decl_stmt org.apache.solr.util.RefCounted < = decl_stmt org.apache.lucene.index.IndexWriter = if != decl_stmt org.apache.solr.core.SolrCore = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() else decl_stmt org.apache.solr.core.SolrCore = call org.apache.solr.search.SolrIndexSearcher.getCore() call org.apache.solr.search.SolrIndexSearcher.getCore() call org.apache.solr.search.SolrIndexSearcher.getCore() call org.apache.solr.search.SolrIndexSearcher.getCore() call org.apache.solr.search.SolrIndexSearcher.getCore() decl_stmt java.lang.String = call decl Range.get() call decl Range.get() call decl Range.get() call decl Range.get() call decl Range.get() = + + != + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getLatestSchema() call org.apache.solr.core.SolrCore.getLatestSchema() call org.apache.solr.core.SolrCore.getLatestSchema() call org.apache.solr.core.SolrCore.getLatestSchema() call org.apache.solr.core.SolrCore.getLatestSchema() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getCodec() call org.apache.solr.core.SolrCore.getCodec() call org.apache.solr.core.SolrCore.getCodec() call org.apache.solr.core.SolrCore.getCodec() call org.apache.solr.core.SolrCore.getCodec() try for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + != + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : + + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.index.CodecReader = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = finally if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() else if call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() else decl FixedBitSet Terms Bits Fields TermsEnum decl int BytesRef int String int LeafReader String int CharsRefBuilder PostingsEnum throws decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.util.FixedBitSet = new for = < ++ = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt org.apache.lucene.util.Bits = call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() decl_stmt Fields = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt org.apache.lucene.index.Terms = == : call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() decl_stmt org.apache.lucene.index.TermsEnum = == : call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if == return decl_stmt org.apache.lucene.util.BytesRef = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt int = if != = new + decl_stmt org.apache.lucene.util.CharsRefBuilder = new for = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt java.lang.String = call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() if != decl_stmt java.lang.String = if == continue if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue decl_stmt int = if != = call DocRouter.sliceHash() call DocRouter.sliceHash() call DocRouter.sliceHash() call DocRouter.sliceHash() call DocRouter.sliceHash() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) = for decl_stmt int = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if == break if == = + else decl_stmt int = for = < ++ if ++ ++ if != for = < ++ if == continue switch case call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() break case call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) break default: call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() break return String char int int public static public static decl_stmt int = if <= return decl_stmt java.lang.String = decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if > if + < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt char = call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) + if >= && <= = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) return public public return public public return