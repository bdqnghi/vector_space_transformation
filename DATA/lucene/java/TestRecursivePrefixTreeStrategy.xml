org.apache.lucene.spatial.prefix org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.spatial.SpatialMatchConcern import org.apache.lucene.spatial.StrategyTestCase import org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.junit.Test import java.io.IOException import java.util.HashSet import java.util.Set import class org.apache.lucene.spatial.prefix.TestRecursivePrefixTreeStrategy super super extends int GeohashPrefixTree private private = = decl_stmt org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree = new = new public public throws for = <= ++ double GeohashPrefixTree public public decl_stmt org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree = decl_stmt double = call GeohashPrefixTree.getLevelForDistance() call GeohashPrefixTree.getLevelForDistance() call GeohashPrefixTree.getLevelForDistance() call GeohashPrefixTree.getLevelForDistance() call GeohashPrefixTree.getLevelForDistance() double double double Point double double Point public public throws decl_stmt java.awt.Point = decl_stmt java.awt.Point = decl_stmt double final final = decl_stmt double final final = / decl_stmt double final final = * decl_stmt double final final = decl_stmt double final final = + * >= * * < * * < * * < * Shape SpatialArgs private private decl_stmt java.awt.Shape = decl_stmt org.apache.lucene.spatial.query.SpatialArgs = new call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) return SearchResults decl Set private private decl_stmt SearchResults = + if != decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains()