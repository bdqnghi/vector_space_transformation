org.apache.lucene.queryparser.flexible.standard java.io.IOException import java.text.DateFormat import java.util.Calendar import java.util.Date import java.util.GregorianCalendar import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import java.util.TimeZone import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.DateTools import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.Term import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages import org.apache.lucene.queryparser.flexible.core.nodes.FuzzyQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline import org.apache.lucene.queryparser.flexible.messages.MessageImpl import org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler import org.apache.lucene.queryparser.flexible.standard.nodes.WildcardQueryNode import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.MatchNoDocsQuery import org.apache.lucene.search.MultiPhraseQuery import org.apache.lucene.search.MultiTermQuery import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.RegexpQuery import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.search.WildcardQuery import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.CharacterRunAutomaton import org.apache.lucene.util.automaton.RegExp import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Ignore import class org.apache.lucene.queryparser.flexible.standard.TestQPHelper super super extends int Analyzer public static public static = new public static public static = public public throws if = return else while if = = = return else if ! return return public public throws = = = Tokenizer public final public final decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new protected protected throws return protected protected throws if instanceof || instanceof throw new new return protected < protected < < throws return public public throws = StandardQueryParser public public throws if == = new decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) return public public throws return StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) return call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + String public public throws decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query StandardQueryParser String public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + public public throws Query StandardQueryParser String public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + StandardQueryParser public public throws if == = new decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) return call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new new decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) instanceof = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) instanceof = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) instanceof public public throws int public public throws decl_stmt int = if < return char return public public return new new decl BooleanQuery decl Builder SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() new decl Builder decl BooleanQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new PhraseQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new Query SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.Query = new = new PhraseQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new public public throws new new instanceof instanceof instanceof Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public throws public public throws Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public throws public public throws FuzzyQuery public public throws instanceof instanceof instanceof instanceof instanceof decl_stmt org.apache.lucene.search.FuzzyQuery = call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() = call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() instanceof StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) public public throws instanceof instanceof StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) DateFormat private private throws decl_stmt java.text.DateFormat = return call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) private private return private private if return + + else return DateFormat Calendar private private decl_stmt java.text.DateFormat = decl_stmt java.util.Calendar = new call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) return call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() String String StandardQueryParser String decl Map String Calendar String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Calendar = new call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolution(DateTools,Resolution) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDateResolutionMap(Map) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() public public throws + + + + + + + + + + + + + + + + + + Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new WildcardQuery StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new decl_stmt org.apache.lucene.search.WildcardQuery = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) public public throws public public throws Query StandardQueryParser StandardQueryParser Analyzer CharacterRunAutomaton public public throws decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) float float = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) float float = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() instanceof public public throws public public throws public public new new public public throws new new StandardQueryParser public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) Query StandardQueryParser Query public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) public public throws StandardQueryParser String Query Query decl Builder decl BooleanQuery RegexpQuery Query public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.search.RegexpQuery = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLowercaseExpandedTerms(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) decl_stmt org.apache.lucene.search.Query = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.Query = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.Query = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.util.fst.Builder = new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() new new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() new new call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) Query StandardQueryParser Query CharacterRunAutomaton public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) instanceof = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) instanceof = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.Query = new new new new new = new StandardQueryParser int PhraseQuery String public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setEnablePositionIncrements(boolean) decl_stmt java.lang.String = decl_stmt int = decl_stmt org.apache.lucene.search.PhraseQuery = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.index.Term = call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() decl_stmt int = call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() for = < ++ + + + + StandardQueryParser BooleanQuery public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.BooleanQuery = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) for : == Query StandardQueryParser decl ScoreDoc private private throws decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setLocale(Locale) decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.ScoreDoc = public public throws public public if == return if == else if == else if == else ++ return public public throws = public public return new new Document Query IndexSearcher IndexReader IndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.Query = new new instanceof call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl Builder decl String StandardQueryParser decl BooleanQuery public public throws decl_stmt java.lang.String final final final = decl_stmt org.apache.lucene.queryparser.flexible.standard.StandardQueryParser final final = new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiFields(CharSequence) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiFields(CharSequence) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiFields(CharSequence) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiFields(CharSequence) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setMultiFields(CharSequence) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setDefaultOperator(StandardQueryConfigHandler,Operator) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.setAnalyzer(Analyzer) new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) decl_stmt org.apache.lucene.search.RegexpQuery = new new call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String) call org.apache.lucene.queryparser.flexible.standard.StandardQueryParser.parse(String,String)