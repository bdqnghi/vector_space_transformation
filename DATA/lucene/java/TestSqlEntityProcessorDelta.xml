org.apache.solr.handler.dataimport java.lang.invoke.MethodHandles import org.apache.solr.request.LocalSolrQueryRequest import org.junit.Before import org.junit.Ignore import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.dataimport.TestSqlEntityProcessorDelta super super extends boolean IntChanges decl String Logger boolean public public = = = int public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt int = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() = = + int public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt int = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + int public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt int = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() int private private decl_stmt int = if != += + if != += + + return private private throws if != for : + for : + for : + if != for : + + + int private private throws if decl_stmt int = switch case = break case = break case = = break else = = StringBuilder private private if != decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() private private if != call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + call IntChanges.toString() call IntChanges.toString() call IntChanges.toString() call IntChanges.toString() call IntChanges.toString() + protected protected return : : protected protected return + + + + : + + protected protected if return + return