org.apache.lucene.codecs.memory java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.BitSet import java.util.Collection import java.util.Collections import java.util.Iterator import java.util.List import java.util.TreeMap import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.FieldsProducer import org.apache.lucene.codecs.PostingsReaderBase import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.SegmentInfo import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.TermState import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.IndexInput import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IOUtils import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.automaton.ByteRunAutomaton import org.apache.lucene.util.automaton.CompiledAutomaton import org.apache.lucene.util.fst.BytesRefFSTEnum import org.apache.lucene.util.fst.BytesRefFSTEnum.InputOutput import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.Outputs import org.apache.lucene.util.fst.PositiveIntOutputs import org.apache.lucene.util.fst.Util import class org.apache.lucene.codecs.memory.FSTOrdTermsReader super super extends decl TreeMap int PostingsReaderBase private private throws - - private private throws if < || || || || || throw new + + + + + + if < throw new + + + + + + if != - && < throw new + + + + + + if != throw new + + + + public < public < return call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() public public throws assert != return call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() public public return call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() public public throws try finally call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() public public return >= public public return >= public public return >= public public return public public return public public return public public throws return public public throws return public public throws return new public public throws return new long public public decl_stmt long = if != += += += += += return public < public < if == return else return public public return + + + + + + + + int int throws decl_stmt int final final = int decl_stmt int final final = = int / if != = = int int throws decl_stmt int final final = int decl_stmt int final final = = int / if != call PostingsReaderBase.decodeTerm() call PostingsReaderBase.decodeTerm() call PostingsReaderBase.decodeTerm() call PostingsReaderBase.decodeTerm() call PostingsReaderBase.decodeTerm() int int int final final throws decl_stmt int final final = * decl_stmt int final final = int for = < && ! ++ decl_stmt int = if = >>> if & == = else = + else = int int int final final throws decl_stmt int final final = * decl_stmt int final final = int + decl_stmt int final final = int + for = < ++ = + + + = = int for = < && ! ++ for = < ++ = - + = - + - = int public public throws return public public throws return public public throws return public public throws return call PostingsReaderBase.postings() call PostingsReaderBase.postings() call PostingsReaderBase.postings() call PostingsReaderBase.postings() call PostingsReaderBase.postings() public public throws throw new public public throw new public public throws return throws if ! && ! = final final final < throws if == = else = = = = SeekStatus public public throws if = decl_stmt SeekStatus = assert == return public public throws return != public public throws if == return else return : public public if ! = = public public return + + + public public throws return == : throws if ! = decl FST throws decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = assert == = public public throws throw new Frame public public throws if = return = while > decl_stmt java.awt.Frame = if != if break continue = while > if != if break break continue continue = return return Frame int throws decl_stmt java.awt.Frame = decl_stmt int = = while < = = & = if == || != break assert ++ if == return if != return : while > = while > && ! = if != return : return throws = = = - return throws = = return throws if ! return = = if == - return return throws if ! return while ! = = if != - break if == - return return decl FST throws decl_stmt org.apache.lucene.util.fst.FST < = = if == return = if == - return return return && return != - return != - && return ! decl FST decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = = = ++ assert == = return -- decl Frame if + == decl_stmt java.awt.Frame final final final = new + for = < ++ = new = return + return if == = new else byte return if == = else - return decl FST decl BytesReader decl ArrayList decl FST decl FST BitSet static < static < < throws decl_stmt java.util.ArrayList final final final < < = new <> decl_stmt org.apache.lucene.util.BitSet final final = new decl_stmt BytesReader final final final final final = decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = new < call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() while ! call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() decl_stmt long final final = if && ! call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) int call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) int while call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new < if call decl FST.isLast() call decl FST.isLast() call decl FST.isLast() call decl FST.isLast() call decl FST.isLast() break else long public public decl_stmt long = call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() for : call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() += return decl List public < public < decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public return + + call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() + + + public public throws call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity()