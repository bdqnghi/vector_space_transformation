org.apache.lucene.search.suggest.tst java.util.* import class org.apache.lucene.search.suggest.tst.TSTAutocomplete int public public if > return decl_stmt int = + / = - + TernaryTreeNode public public if == || <= return if == decl_stmt org.apache.lucene.search.suggest.tst.TernaryTreeNode = new = = if < - = + else = = return else if > = else if == if < - = + else = = return else = return TernaryTreeNode TernaryTreeNode decl Stack decl ArrayList public < public < decl_stmt org.apache.lucene.search.suggest.tst.TernaryTreeNode = decl_stmt java.util.ArrayList < = new <> while != if < = else if == if == - break else ++ = else = if == return if == && == return if == && != call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return if != call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() = decl_stmt java.util.Stack < = new <> call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() while ! call decl Stack.empty() call decl Stack.empty() call decl Stack.empty() call decl Stack.empty() call decl Stack.empty() decl_stmt org.apache.lucene.search.suggest.tst.TernaryTreeNode = call decl Stack.peek() call decl Stack.peek() call decl Stack.peek() call decl Stack.peek() call decl Stack.peek() call decl Stack.pop() call decl Stack.pop() call decl Stack.pop() call decl Stack.pop() call decl Stack.pop() if != call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() if != call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() if != call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() if != call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() call decl Stack.push() return