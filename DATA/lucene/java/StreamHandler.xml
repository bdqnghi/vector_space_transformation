org.apache.solr.handler java.io.IOException import java.lang.invoke.MethodHandles import java.util.Collection import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import java.util.Map.Entry import org.apache.solr.client.solrj.io.SolrClientCache import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.comp.StreamComparator import org.apache.solr.client.solrj.io.graph.ShortestPathStream import org.apache.solr.client.solrj.io.ops.ConcatOperation import org.apache.solr.client.solrj.io.ops.DistinctOperation import org.apache.solr.client.solrj.io.ops.GroupOperation import org.apache.solr.client.solrj.io.ops.ReplaceOperation import org.apache.solr.client.solrj.io.stream.* import org.apache.solr.client.solrj.io.stream.expr.Expressible import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import org.apache.solr.client.solrj.io.stream.metrics.CountMetric import org.apache.solr.client.solrj.io.stream.metrics.MaxMetric import org.apache.solr.client.solrj.io.stream.metrics.MeanMetric import org.apache.solr.client.solrj.io.stream.metrics.MinMetric import org.apache.solr.client.solrj.io.stream.metrics.SumMetric import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.CloseHook import org.apache.solr.core.CoreContainer import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.security.AuthorizationContext import org.apache.solr.security.PermissionNameProvider import org.apache.solr.util.plugin.SolrCoreAware import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.StreamHandler super super extends super implements decl Map SolrClientCache String Logger StreamFactory public public return String decl Class String CoreContainer decl NamedList Object public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.core.CoreContainer = = if call org.apache.solr.core.CoreContainer.isZooKeeperAware() call org.apache.solr.core.CoreContainer.isZooKeeperAware() call org.apache.solr.core.CoreContainer.isZooKeeperAware() call org.apache.solr.core.CoreContainer.isZooKeeperAware() call org.apache.solr.core.CoreContainer.isZooKeeperAware() = = call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(String,String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(String,String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(String,String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(String,String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withCollectionZkHost(String,String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withDefaultZkHost(String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withDefaultZkHost(String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withDefaultZkHost(String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withDefaultZkHost(String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withDefaultZkHost(String) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) decl_stmt java.lang.Object = if != decl_stmt org.apache.solr.common.util.NamedList < = < for < : decl_stmt java.lang.Class < = call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) call org.apache.solr.client.solrj.io.stream.expr.StreamFactory.withFunctionName(String,Class) new public public public public call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() public public public public call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() call org.apache.solr.client.solrj.io.SolrClientCache.close() int DaemonStream SolrParams StreamContext int TupleStream public public throws decl_stmt org.apache.solr.common.params.SolrParams = = if call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() != return decl_stmt org.apache.solr.client.solrj.io.stream.TupleStream = try = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() catch new return decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt org.apache.solr.client.solrj.io.stream.StreamContext = new = = call org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(SolrClientCache) call org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(SolrClientCache) call org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(SolrClientCache) call org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(SolrClientCache) call org.apache.solr.client.solrj.io.stream.StreamContext.setSolrClientCache(SolrClientCache) call org.apache.solr.client.solrj.io.stream.StreamContext.put(Object,Object) call org.apache.solr.client.solrj.io.stream.StreamContext.put(Object,Object) call org.apache.solr.client.solrj.io.stream.StreamContext.put(Object,Object) call org.apache.solr.client.solrj.io.stream.StreamContext.put(Object,Object) call org.apache.solr.client.solrj.io.stream.StreamContext.put(Object,Object) call TupleStream.setStreamContext() call TupleStream.setStreamContext() call TupleStream.setStreamContext() call TupleStream.setStreamContext() call TupleStream.setStreamContext() if instanceof decl_stmt org.apache.solr.client.solrj.io.stream.DaemonStream = if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() new + call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() call org.apache.solr.client.solrj.io.stream.DaemonStream.getId() + + else new new String decl Collection String DaemonStream private private decl_stmt java.lang.String = if decl_stmt java.lang.String = decl_stmt org.apache.solr.client.solrj.io.stream.DaemonStream = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() new + + + else new + + + else if decl_stmt java.lang.String = decl_stmt org.apache.solr.client.solrj.io.stream.DaemonStream = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() call org.apache.solr.client.solrj.io.stream.DaemonStream.open() new + + + else if decl_stmt java.util.Collection < = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() new else if decl_stmt java.lang.String = decl_stmt org.apache.solr.client.solrj.io.stream.DaemonStream = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() if != call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() call org.apache.solr.client.solrj.io.stream.DaemonStream.close() new + + + ModifiableSolrParams private private decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) return public public return public public return public public return public public public public public public public < public < return String Map public public decl_stmt java.lang.String = decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) return new public public return public public public public public public public < public < return Map public public if return else decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) return new public public return public public public public public public public < public < return Map public public if decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) return new else = decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) return new public public return public public throws public public throws = public public public < public < return long Tuple public public throws decl_stmt org.apache.solr.client.solrj.io.Tuple = if decl_stmt long = - / call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() call Tuple.fields() return