org.apache.lucene.analysis.pattern java.io.IOException import java.io.Reader import java.io.StringReader import java.util.Random import java.util.regex.Matcher import java.util.regex.Pattern import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.CharFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.util.TestUtil import org.junit.Ignore import class org.apache.lucene.analysis.pattern.TestPatternReplaceCharFilter super super extends public public throws public public throws public public throws CharFilter StringBuilder boolean boolean StringBuilder private private throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt java.lang.StringBuilder = new for = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() > = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char decl_stmt java.lang.StringBuilder = new for = < call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) < : call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) call org.apache.lucene.analysis.CharFilter.correctOffset(int) decl_stmt boolean = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt boolean = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() if ! || ! || + + + + + + + CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter TokenStream String public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.CharFilter = new new = new = new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() private private return Pattern long Matcher String public public throws decl_stmt java.util.regex.Pattern = decl_stmt java.lang.String = for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt long = if call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) + + - / Analyzer int Tokenizer Random int boolean Pattern String public public throws decl_stmt int = + decl_stmt java.util.Random = new for = < ++ decl_stmt java.util.regex.Pattern final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl_stmt int final final = decl_stmt boolean final final = * call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new