org.apache.lucene.facet.taxonomy.directory java.io.IOException import java.util.Map import java.util.logging.Level import java.util.logging.Logger import org.apache.lucene.document.Document import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.taxonomy.FacetLabel import org.apache.lucene.facet.taxonomy.LRUHashMap import org.apache.lucene.facet.taxonomy.ParallelTaxonomyArrays import org.apache.lucene.facet.taxonomy.TaxonomyReader import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.MultiFields import org.apache.lucene.index.PostingsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import class org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader super super extends DirectoryReader DirectoryTaxonomyWriter decl LRUHashMap long TaxonomyIndexArrays int Logger decl LRUHashMap TaxonomyIndexArrays private synchronized private synchronized throws if == decl_stmt org.apache.lucene.facet.taxonomy.directory.TaxonomyIndexArrays = new = protected protected throws call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() = = = boolean DirectoryReader boolean String String DirectoryTaxonomyReader protected protected throws decl_stmt org.apache.lucene.index.DirectoryReader final final = if == return decl_stmt boolean = try decl_stmt boolean = if == decl_stmt java.lang.String = call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() decl_stmt java.lang.String = call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() if == if != = else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = else if != call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.getTaxonomyEpoch() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.getTaxonomyEpoch() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.getTaxonomyEpoch() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.getTaxonomyEpoch() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.getTaxonomyEpoch() = decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader final final if = new else = new = return finally if ! protected protected throws return protected protected throws return return public public throws if == return public < public < throws return call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() Integer int PostingsEnum public public throws if == return synchronized decl_stmt java.lang.Integer = call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() if != if call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() < call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() return call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() else return decl_stmt int = decl_stmt org.apache.lucene.index.PostingsEnum = new if != && call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() synchronized call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() return FacetLabel Document FacetLabel Integer public public throws if < || >= call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() return decl_stmt java.lang.Integer = synchronized decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() call decl LRUHashMap.get() if != return decl_stmt org.apache.lucene.document.Document = call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) synchronized call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() call decl LRUHashMap.put() return public public return call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() public public synchronized call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() synchronized call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() call decl LRUHashMap.setMaxSize() FacetLabel StringBuilder int public public decl_stmt java.lang.StringBuilder = new decl_stmt int = call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() for = < ++ try decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + continue if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + continue call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call org.apache.lucene.facet.taxonomy.FacetLabel.toString() call org.apache.lucene.facet.taxonomy.FacetLabel.toString() call org.apache.lucene.facet.taxonomy.FacetLabel.toString() call org.apache.lucene.facet.taxonomy.FacetLabel.toString() call org.apache.lucene.facet.taxonomy.FacetLabel.toString() + catch if call java.util.logging.Logger.isLoggable(Level) call java.util.logging.Logger.isLoggable(Level) call java.util.logging.Logger.isLoggable(Level) call java.util.logging.Logger.isLoggable(Level) call java.util.logging.Logger.isLoggable(Level) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()