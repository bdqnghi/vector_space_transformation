org.apache.solr.client.solrj.io.stream java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.comp.FieldComparator import org.apache.solr.client.solrj.io.comp.MultipleFieldComparator import org.apache.solr.client.solrj.io.comp.StreamComparator import org.apache.solr.client.solrj.io.eq.FieldEqualitor import org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor import org.apache.solr.client.solrj.io.eq.StreamEqualitor import org.apache.solr.client.solrj.io.ops.ReduceOperation import org.apache.solr.client.solrj.io.ops.StreamOperation import org.apache.solr.client.solrj.io.stream.expr.Expressible import org.apache.solr.client.solrj.io.stream.expr.StreamExpression import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import class org.apache.solr.client.solrj.io.stream.ReducerStream super super extends super implements PushBackStream boolean Tuple StreamEqualitor long ReduceOperation MultipleFieldComparator decl StreamEqualitor FieldComparator private private if instanceof decl_stmt org.apache.solr.client.solrj.io.comp.MultipleFieldComparator = decl_stmt org.apache.solr.client.solrj.io.eq.StreamEqualitor = new call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() for = < call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() ++ = call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() return new else decl_stmt org.apache.lucene.search.FieldComparator = return new call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() private private throws = new = = if ! call org.apache.solr.client.solrj.io.eq.StreamEqualitor.isDerivedFrom(StreamEqualitor) call org.apache.solr.client.solrj.io.eq.StreamEqualitor.isDerivedFrom(StreamEqualitor) call org.apache.solr.client.solrj.io.eq.StreamEqualitor.isDerivedFrom(StreamEqualitor) call org.apache.solr.client.solrj.io.eq.StreamEqualitor.isDerivedFrom(StreamEqualitor) call org.apache.solr.client.solrj.io.eq.StreamEqualitor.isDerivedFrom(StreamEqualitor) call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() throw new StreamExpression public public throws decl_stmt org.apache.solr.client.solrj.io.stream.expr.StreamExpression = new call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(StreamFactory) call org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(StreamFactory) call org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(StreamFactory) call org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(StreamFactory) call org.apache.solr.client.solrj.io.stream.PushBackStream.toExpression(StreamFactory) if instanceof call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) new else throw new if instanceof call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call ReduceOperation.toExpression() call ReduceOperation.toExpression() call ReduceOperation.toExpression() call ReduceOperation.toExpression() call ReduceOperation.toExpression() else throw new return public public decl List public < public < decl_stmt java.util.List < = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws call org.apache.solr.client.solrj.io.stream.PushBackStream.open() call org.apache.solr.client.solrj.io.stream.PushBackStream.open() call org.apache.solr.client.solrj.io.stream.PushBackStream.open() call org.apache.solr.client.solrj.io.stream.PushBackStream.open() call org.apache.solr.client.solrj.io.stream.PushBackStream.open() public public throws call org.apache.solr.client.solrj.io.stream.PushBackStream.close() call org.apache.solr.client.solrj.io.stream.PushBackStream.close() call org.apache.solr.client.solrj.io.stream.PushBackStream.close() call org.apache.solr.client.solrj.io.stream.PushBackStream.close() call org.apache.solr.client.solrj.io.stream.PushBackStream.close() Tuple public public throws while decl_stmt org.apache.solr.client.solrj.io.Tuple = call org.apache.solr.client.solrj.io.stream.PushBackStream.read() call org.apache.solr.client.solrj.io.stream.PushBackStream.read() call org.apache.solr.client.solrj.io.stream.PushBackStream.read() call org.apache.solr.client.solrj.io.stream.PushBackStream.read() call org.apache.solr.client.solrj.io.stream.PushBackStream.read() if if call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) = return call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() else return if == = call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() = else if call StreamEqualitor.test() call StreamEqualitor.test() call StreamEqualitor.test() call StreamEqualitor.test() call StreamEqualitor.test() call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() call ReduceOperation.operate() = else call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) call org.apache.solr.client.solrj.io.stream.PushBackStream.pushBack(Tuple) = = return call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() call ReduceOperation.reduce() public public return call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() call org.apache.solr.client.solrj.io.stream.PushBackStream.getStreamSort() public public return