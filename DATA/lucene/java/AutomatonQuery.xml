org.apache.lucene.search java.io.IOException import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.CompiledAutomaton import org.apache.lucene.util.automaton.Operations import class org.apache.lucene.search.AutomatonQuery super super extends CompiledAutomaton Term Automaton protected protected throws return call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() int int public public decl_stmt int final final = decl_stmt int = = * + call org.apache.lucene.util.automaton.CompiledAutomaton.hashCode() call org.apache.lucene.util.automaton.CompiledAutomaton.hashCode() call org.apache.lucene.util.automaton.CompiledAutomaton.hashCode() call org.apache.lucene.util.automaton.CompiledAutomaton.hashCode() call org.apache.lucene.util.automaton.CompiledAutomaton.hashCode() = * + == : call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() return AutomatonQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.search.AutomatonQuery = if ! call org.apache.lucene.util.automaton.CompiledAutomaton.equals(Object) call org.apache.lucene.util.automaton.CompiledAutomaton.equals(Object) call org.apache.lucene.util.automaton.CompiledAutomaton.equals(Object) call org.apache.lucene.util.automaton.CompiledAutomaton.equals(Object) call org.apache.lucene.util.automaton.CompiledAutomaton.equals(Object) return if == if != return else if ! call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) return return StringBuilder public public decl_stmt java.lang.StringBuilder = new if ! call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call Automaton.toString() call Automaton.toString() call Automaton.toString() call Automaton.toString() call Automaton.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return