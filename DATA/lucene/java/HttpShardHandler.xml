org.apache.solr.handler.component java.lang.invoke.MethodHandles import java.net.ConnectException import java.util.Arrays import java.util.Collection import java.util.HashMap import java.util.HashSet import java.util.List import java.util.ListIterator import java.util.Map import java.util.Set import java.util.concurrent.Callable import java.util.concurrent.CompletionService import java.util.concurrent.ExecutionException import java.util.concurrent.Future import java.util.concurrent.TimeUnit import org.apache.http.client.HttpClient import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrResponse import org.apache.solr.client.solrj.impl.HttpSolrClient.Builder import org.apache.solr.client.solrj.impl.LBHttpSolrClient import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.util.ClientUtils import org.apache.solr.cloud.CloudDescriptor import org.apache.solr.cloud.ZkController import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.ShardParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.StrUtils import org.apache.solr.core.CoreDescriptor import org.apache.solr.request.SolrQueryRequest import org.slf4j.Logger import org.slf4j.LoggerFactory import org.slf4j.MDC import class org.apache.solr.handler.component.HttpShardHandler super super extends HttpShardHandlerFactory Logger decl CompletionService decl Map decl Set HttpClient public public return public < public < return public public < = public public = decl List private < private < decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call org.apache.solr.handler.component.HttpShardHandlerFactory.makeURLList(String) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeURLList(String) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeURLList(String) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeURLList(String) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeURLList(String) if != && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return String decl ListIterator private private final final final final final < if call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt java.util.ListIterator < = while call decl ListIterator.hasNext() call decl ListIterator.hasNext() call decl ListIterator.hasNext() call decl ListIterator.hasNext() call decl ListIterator.hasNext() decl_stmt java.lang.String = call decl ListIterator.next() call decl ListIterator.next() call decl ListIterator.next() call decl ListIterator.next() call decl ListIterator.next() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call decl ListIterator.remove() call decl ListIterator.remove() call decl ListIterator.remove() call decl ListIterator.remove() call decl ListIterator.remove() if call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() break ShardResponse decl Callable decl List String QueryRequest SimpleSolrResponse long decl LBHttpSolrClient public public final final final final final final decl_stmt java.util.List final final final < = decl_stmt org.apache.solr.core.Callable < = decl_stmt org.apache.solr.handler.component.ShardResponse = new if != call org.apache.solr.handler.component.ShardResponse.setNodeName(String) call org.apache.solr.handler.component.ShardResponse.setNodeName(String) call org.apache.solr.handler.component.ShardResponse.setNodeName(String) call org.apache.solr.handler.component.ShardResponse.setNodeName(String) call org.apache.solr.handler.component.ShardResponse.setNodeName(String) call ShardResponse.setShardRequest() call ShardResponse.setShardRequest() call ShardResponse.setShardRequest() call ShardResponse.setShardRequest() call ShardResponse.setShardRequest() call org.apache.solr.handler.component.ShardResponse.setShard(String) call org.apache.solr.handler.component.ShardResponse.setShard(String) call org.apache.solr.handler.component.ShardResponse.setShard(String) call org.apache.solr.handler.component.ShardResponse.setShard(String) call org.apache.solr.handler.component.ShardResponse.setShard(String) decl_stmt org.apache.solr.client.solrj.response.SimpleSolrResponse = new call org.apache.solr.handler.component.ShardResponse.setSolrResponse(SolrResponse) call org.apache.solr.handler.component.ShardResponse.setSolrResponse(SolrResponse) call org.apache.solr.handler.component.ShardResponse.setSolrResponse(SolrResponse) call org.apache.solr.handler.component.ShardResponse.setSolrResponse(SolrResponse) call org.apache.solr.handler.component.ShardResponse.setSolrResponse(SolrResponse) decl_stmt long = try decl_stmt org.apache.solr.client.solrj.request.QueryRequest = call QueryRequest.setMethod() call QueryRequest.setMethod() call QueryRequest.setMethod() call QueryRequest.setMethod() call QueryRequest.setMethod() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == throw new + if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() <= decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) try = new = else decl_stmt Rsp = call org.apache.solr.handler.component.HttpShardHandlerFactory.makeLoadBalancedRequest(QueryRequest,List) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeLoadBalancedRequest(QueryRequest,List) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeLoadBalancedRequest(QueryRequest,List) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeLoadBalancedRequest(QueryRequest,List) call org.apache.solr.handler.component.HttpShardHandlerFactory.makeLoadBalancedRequest(QueryRequest,List) = call decl LBHttpSolrClient.getResponse() call decl LBHttpSolrClient.getResponse() call decl LBHttpSolrClient.getResponse() call decl LBHttpSolrClient.getResponse() call decl LBHttpSolrClient.getResponse() call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call org.apache.solr.handler.component.ShardResponse.setShardAddress(String) call decl LBHttpSolrClient.getServer() call decl LBHttpSolrClient.getServer() call decl LBHttpSolrClient.getServer() call decl LBHttpSolrClient.getServer() call decl LBHttpSolrClient.getServer() catch call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) catch call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) call org.apache.solr.handler.component.ShardResponse.setException(Throwable) if instanceof call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) else call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) call org.apache.solr.handler.component.ShardResponse.setResponseCode(int) - = - return try if != if != && ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() finally protected protected final final return new protected protected final final return public public return public public return decl Future ShardResponse private private while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > try decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() decl_stmt org.apache.solr.handler.component.ShardResponse = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() if && call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() != return call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() if call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() == call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() return catch throw new catch throw new return public public for < : decl Map decl List String String SolrQueryRequest decl Map boolean SolrParams CoreDescriptor ZkController String ClusterState Slice String String decl List String CloudDescriptor String String String boolean String StringBuilder String boolean public public decl_stmt org.apache.solr.request.SolrQueryRequest final final = decl_stmt org.apache.solr.common.params.SolrParams final final = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt java.lang.String final final = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt java.util.Map < = decl_stmt org.apache.solr.core.CoreDescriptor = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.cloud.CloudDescriptor = call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() decl_stmt org.apache.solr.cloud.ZkController = call org.apache.solr.core.CoreDescriptor.getCoreContainer() call org.apache.solr.core.CoreDescriptor.getCoreContainer() call org.apache.solr.core.CoreDescriptor.getCoreContainer() call org.apache.solr.core.CoreDescriptor.getCoreContainer() call org.apache.solr.core.CoreDescriptor.getCoreContainer() if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = != call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() : if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if != decl_stmt java.util.List < = = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = new if != for = < ++ if < = = else if != = call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = new <> decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != decl_stmt java.util.List < = for : else decl_stmt java.lang.String = call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() = call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() new call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() = new if != decl_stmt java.lang.String = call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() decl_stmt java.lang.String = call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() if == && != && || + + && call org.apache.solr.cloud.CloudDescriptor.getLastPublished() call org.apache.solr.cloud.CloudDescriptor.getLastPublished() call org.apache.solr.cloud.CloudDescriptor.getLastPublished() call org.apache.solr.cloud.CloudDescriptor.getLastPublished() call org.apache.solr.cloud.CloudDescriptor.getLastPublished() == decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = && == if = = call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.core.CoreDescriptor.getName() call org.apache.solr.core.CoreDescriptor.getName() call org.apache.solr.core.CoreDescriptor.getName() call org.apache.solr.core.CoreDescriptor.getName() call org.apache.solr.core.CoreDescriptor.getName() return for = < ++ if == if == = call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() = call org.apache.solr.common.cloud.ClusterState.getSlicesMap(String) call org.apache.solr.common.cloud.ClusterState.getSlicesMap(String) call org.apache.solr.common.cloud.ClusterState.getSlicesMap(String) call org.apache.solr.common.cloud.ClusterState.getSlicesMap(String) call org.apache.solr.common.cloud.ClusterState.getSlicesMap(String) call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Slice = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = continue decl_stmt java.util.Map < = call org.apache.solr.common.cloud.Slice.getReplicasMap() call org.apache.solr.common.cloud.Slice.getReplicasMap() call org.apache.solr.common.cloud.Slice.getReplicasMap() call org.apache.solr.common.cloud.Slice.getReplicasMap() call org.apache.solr.common.cloud.Slice.getReplicasMap() decl_stmt java.lang.StringBuilder = new decl_stmt boolean = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if ! call org.apache.solr.common.cloud.ClusterState.liveNodesContain(String) call org.apache.solr.common.cloud.ClusterState.liveNodesContain(String) call org.apache.solr.common.cloud.ClusterState.liveNodesContain(String) call org.apache.solr.common.cloud.ClusterState.liveNodesContain(String) call org.apache.solr.common.cloud.ClusterState.liveNodesContain(String) || != continue if = else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() == decl_stmt boolean = if ! throw new + = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != = DocCollection decl Collection private private < decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt java.util.Collection < = call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() public public return