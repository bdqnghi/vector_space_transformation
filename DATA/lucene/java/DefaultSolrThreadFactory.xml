org.apache.solr.util java.util.concurrent.ThreadFactory import java.util.concurrent.atomic.AtomicInteger import class org.apache.solr.util.DefaultSolrThreadFactory super super implements String AtomicInteger ThreadGroup AtomicInteger Thread public public decl_stmt java.lang.Thread = new + call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) if call java.lang.Thread.getPriority() call java.lang.Thread.getPriority() call java.lang.Thread.getPriority() call java.lang.Thread.getPriority() call java.lang.Thread.getPriority() != call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) return