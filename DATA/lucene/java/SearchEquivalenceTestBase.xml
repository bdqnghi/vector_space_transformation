org.apache.lucene.search java.util.BitSet import java.util.Random import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.TestUtil import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.CharacterRunAutomaton import org.junit.AfterClass import org.junit.BeforeClass import class annotation org.apache.lucene.search.SearchEquivalenceTestBase super super extends IndexReader Directory IndexSearcher String Analyzer int Document Random RandomIndexWriter Field Term int Field CharacterRunAutomaton public static public static throws decl_stmt java.util.Random = = = + decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new = new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt int = : for = < ++ call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt int = / for = < ++ decl_stmt org.apache.lucene.index.Term = new call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) else call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() = = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() public static public static throws call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call String.close() call String.close() call String.close() call String.close() call String.close() = = = = = StringBuilder int static static decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() static static return char protected protected return new + Query PhraseQuery protected protected decl_stmt org.apache.lucene.search.Query final final if = + else decl_stmt org.apache.lucene.search.PhraseQuery = new + + = return public public throws Query int public public throws decl_stmt int = : for = < ++ decl_stmt org.apache.lucene.search.Query = TopDocs TopDocs BitSet protected protected throws if != = new = new for : new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() decl_stmt org.apache.lucene.search.TopDocs = call Directory.search() call Directory.search() call Directory.search() call Directory.search() call Directory.search() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() + + + <= decl_stmt org.apache.lucene.util.BitSet = new for = < ++ call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) for = < ++ call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) call java.util.BitSet.get(int) Query int protected protected throws decl_stmt int = : for = < ++ decl_stmt org.apache.lucene.search.Query = TopDocs TopDocs protected protected throws if != = new = new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() decl_stmt org.apache.lucene.search.TopDocs = call Directory.search() call Directory.search() call Directory.search() call Directory.search() call Directory.search() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() call Analyzer.maxDoc() for = < ++ protected protected return new