org.apache.solr.morphlines.solr javax.xml.parsers.ParserConfigurationException import java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.nio.file.Paths import com.google.common.base.Preconditions import com.google.common.io.Files import com.typesafe.config.Config import com.typesafe.config.ConfigFactory import com.typesafe.config.ConfigRenderOptions import com.typesafe.config.ConfigUtil import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.CloudSolrClient.Builder import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.core.SolrConfig import org.apache.solr.core.SolrResourceLoader import org.apache.solr.schema.IndexSchema import org.apache.solr.util.SystemIdResolver import org.apache.zookeeper.KeeperException import org.kitesdk.morphline.api.MorphlineCompilationException import org.kitesdk.morphline.api.MorphlineContext import org.kitesdk.morphline.api.MorphlineRuntimeException import org.kitesdk.morphline.base.Configs import org.slf4j.Logger import org.slf4j.LoggerFactory import org.xml.sax.InputSource import org.xml.sax.SAXException import class org.apache.solr.morphlines.solr.SolrLocator String String String String int MorphlineContext Config Logger int int CloudSolrClient SolrClient DocumentLoader public public if instanceof decl_stmt org.apache.solr.morphlines.solr.DocumentLoader = if != return if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == throw new decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = new call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() return new else if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == throw new decl_stmt int = decl_stmt int = decl_stmt org.apache.solr.client.solrj.SolrClient = new return new File ZooKeeperDownloader SolrConfig InputSource SolrResourceLoader String SolrZkClient IndexSchema String public public if instanceof decl_stmt org.apache.solr.schema.IndexSchema = if != return decl_stmt File = try decl_stmt java.lang.String = if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == throw new if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == throw new decl_stmt org.apache.solr.morphlines.solr.ZooKeeperDownloader = new decl_stmt org.apache.solr.common.cloud.SolrZkClient = call org.apache.solr.morphlines.solr.ZooKeeperDownloader.getZkClient(String) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.getZkClient(String) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.getZkClient(String) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.getZkClient(String) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.getZkClient(String) try decl_stmt java.lang.String = call ZooKeeperDownloader.readConfigName() call ZooKeeperDownloader.readConfigName() call ZooKeeperDownloader.readConfigName() call ZooKeeperDownloader.readConfigName() call ZooKeeperDownloader.readConfigName() = = call org.apache.solr.morphlines.solr.ZooKeeperDownloader.downloadConfigDir(SolrZkClient,String,File) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.downloadConfigDir(SolrZkClient,String,File) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.downloadConfigDir(SolrZkClient,String,File) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.downloadConfigDir(SolrZkClient,String,File) call org.apache.solr.morphlines.solr.ZooKeeperDownloader.downloadConfigDir(SolrZkClient,String,File) = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() catch throw new finally call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() try decl_stmt org.apache.solr.core.SolrResourceLoader = new decl_stmt org.apache.solr.core.SolrConfig = new decl_stmt InputSource = new call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() decl_stmt org.apache.solr.schema.IndexSchema = new return catch throw new finally if != try catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() private private if == throw new if ! throw new public public return String public public decl_stmt java.lang.String = if != = + += + + + + + + + + + + + + + + + + return String private private decl_stmt java.lang.String = == : = return public public return public public = public public return public public = public public return public public = public public return public public = public public return public public =