org.apache.lucene.analysis.synonym java.io.IOException import java.util.Arrays import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute import org.apache.lucene.analysis.tokenattributes.TypeAttribute import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.fst.FST import class org.apache.lucene.analysis.synonym.SynonymFilter super super extends decl PendingInput OffsetAttribute TypeAttribute PositionLengthAttribute decl FST boolean int String int decl FST decl BytesReader int PositionIncrementAttribute int int BytesRef boolean CharsRefBuilder SynonymMap decl FST CharTermAttribute ByteArrayDataInput decl PendingOutputs int public public = = = = public public = = = CharsRefBuilder public public assert < = = decl_stmt org.apache.lucene.util.CharsRefBuilder final final = ++ = if == return call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() public public return public public return decl int public public if == = + if == decl_stmt int final final final = new + = if == decl_stmt int final final final = new + = if == = new = = ++ PendingInput private private ++ decl_stmt PendingInput final final = = = call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call PendingInput.term() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() = assert != int int int decl char int int BytesRef BytesRef PendingInput int int int private private throws assert == decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt int = decl_stmt int = - decl_stmt org.apache.lucene.util.BytesRef = call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() assert == call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() decl_stmt int = while decl_stmt char final final final decl_stmt int final final decl_stmt int = if == if break else assert if call PendingInput.incrementToken() call PendingInput.incrementToken() call PendingInput.incrementToken() call PendingInput.incrementToken() call PendingInput.incrementToken() = call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() = call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() decl_stmt PendingInput final final = = = call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() = = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() = if != else = else = break else = = = ++ decl_stmt int = while < decl_stmt int final final = if call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() : == break break = call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() += if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() = = if call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() == break else = call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() call decl FST.outputs() if == = if == && ! = if != = else if != = else assert int int int int int boolean int int int int private private call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() decl_stmt boolean final final = & == decl_stmt int final final = >>> for = < ++ call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call SynonymMap.words() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call BytesRef.copyUTF8Bytes() call BytesRef.copyUTF8Bytes() call BytesRef.copyUTF8Bytes() call BytesRef.copyUTF8Bytes() call BytesRef.copyUTF8Bytes() decl_stmt int = decl_stmt int final final = + call BytesRef.length() call BytesRef.length() call BytesRef.length() call BytesRef.length() call BytesRef.length() decl_stmt int = for = <= ++ if == || call BytesRef.charAt() call BytesRef.charAt() call BytesRef.charAt() call BytesRef.charAt() call BytesRef.charAt() == decl_stmt int final final = - assert > : + decl_stmt int final final decl_stmt int final final if == && == = = : else = - = call BytesRef.chars() call BytesRef.chars() call BytesRef.chars() call BytesRef.chars() call BytesRef.chars() = + = assert == : + + + decl_stmt int = for = < ++ |= = = private private ++ if == return else return return PendingInput int CharsRef int PendingOutputs public public throws while while != decl_stmt PendingInput final final = decl_stmt PendingOutputs final final = if ! && || ! if != else assert == : + + + call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() if > = else = -- return else if < call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() decl_stmt int final final = decl_stmt org.apache.lucene.util.CharsRef final final = call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) decl_stmt int = call PendingOutputs.getLastEndOffset() call PendingOutputs.getLastEndOffset() call PendingOutputs.getLastEndOffset() call PendingOutputs.getLastEndOffset() call PendingOutputs.getLastEndOffset() if == - = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute.setPositionLength(int) call org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute.setPositionLength(int) call org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute.setPositionLength(int) call org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute.setPositionLength(int) call org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute.setPositionLength(int) call PendingOutputs.getLastPosLength() call PendingOutputs.getLastPosLength() call PendingOutputs.getLastPosLength() call PendingOutputs.getLastPosLength() call PendingOutputs.getLastPosLength() if == = -- return else call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() call PendingInput.reset() = -- if && == decl_stmt PendingOutputs final final = if < decl_stmt int final final = decl_stmt org.apache.lucene.util.CharsRef final final = call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() call PendingOutputs.pullNext() if == = = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) return else return public public throws = = = = = for : for :