org.apache.lucene.replicator java.io.IOException import java.io.InputStream import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.List import java.util.Map import org.apache.lucene.index.IndexCommit import org.apache.lucene.index.IndexDeletionPolicy import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.SnapshotDeletionPolicy import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import class org.apache.lucene.replicator.IndexRevision super super implements int SnapshotDeletionPolicy IndexWriter String String IndexCommit decl Map RevisionFile private static private static throws decl_stmt org.apache.lucene.replicator.RevisionFile = new = return decl Collection String decl List Directory public static < < public static < < throws decl_stmt java.util.Collection < = call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() decl_stmt java.util.List < = new <> call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() decl_stmt java.lang.String = call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() decl_stmt org.apache.lucene.store.Directory = call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() for : if ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public static public static return call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() long long public public decl_stmt long = decl_stmt long = call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() return < - : > : IndexRevision public public decl_stmt org.apache.lucene.replicator.IndexRevision = return call org.apache.lucene.index.IndexCommit.compareTo(IndexCommit) call org.apache.lucene.index.IndexCommit.compareTo(IndexCommit) call org.apache.lucene.index.IndexCommit.compareTo(IndexCommit) call org.apache.lucene.index.IndexCommit.compareTo(IndexCommit) call org.apache.lucene.index.IndexCommit.compareTo(IndexCommit) public public return public < < public < < return public public throws assert : + + + return new call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() call IndexCommit.getDirectory() public public throws call org.apache.lucene.index.SnapshotDeletionPolicy.release(IndexCommit) call org.apache.lucene.index.SnapshotDeletionPolicy.release(IndexCommit) call org.apache.lucene.index.SnapshotDeletionPolicy.release(IndexCommit) call org.apache.lucene.index.SnapshotDeletionPolicy.release(IndexCommit) call org.apache.lucene.index.SnapshotDeletionPolicy.release(IndexCommit) call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() public public return + + +