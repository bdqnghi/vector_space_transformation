org.apache.lucene.search.grouping.term org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.DocValues import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.grouping.AbstractGroupFacetCollector import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.SentinelIntSet import org.apache.lucene.util.UnicodeUtil import java.io.IOException import java.util.ArrayList import java.util.List import class org.apache.lucene.search.grouping.term.TermGroupFacetCollector super super extends decl List SortedDocValues SentinelIntSet public static public static if return new else return new int int BytesRef int BytesRef public public throws decl_stmt int = if < || >= return decl_stmt int = call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() decl_stmt int = * + + if call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) return ++ + ++ call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) decl_stmt org.apache.lucene.util.BytesRef if == - = else = call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() decl_stmt org.apache.lucene.util.BytesRef if == - = else = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new int int BytesRefBuilder int protected protected throws if != = = = new + = call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() for : decl_stmt int = == - : if != && < continue decl_stmt int = == - : call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() if != && < continue decl_stmt int = * + + call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) if != = if < = - - decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() assert < = - - else = - = protected protected throws return new protected protected throws = int long boolean BytesRef int public public throws decl_stmt int = call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() if == decl_stmt int = * + if != || call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) return ++ ++ call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) decl_stmt org.apache.lucene.util.BytesRef if == - = else = call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return decl_stmt long decl_stmt boolean = while = != int = if int BytesRef BytesRef private private if < || >= return decl_stmt int = * + + if call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) call org.apache.lucene.util.SentinelIntSet.exists(int) return ++ ++ call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) decl_stmt org.apache.lucene.util.BytesRef if == - = else = call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() call SortedDocValues.lookupOrd() decl_stmt org.apache.lucene.util.BytesRef final final if == = else = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new int int decl TermsEnum decl SeekStatus int protected protected throws if != = = = int if == = else = = new + = call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() call org.apache.lucene.util.SentinelIntSet.clear() for : decl_stmt int = == - : call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() call SortedDocValues.lookupTerm() if != && < continue decl_stmt int if != if == || ! continue = int else = decl_stmt int = * + + call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) call org.apache.lucene.util.SentinelIntSet.put(int) if != decl_stmt SeekStatus if != = else = if != = int else = = return decl_stmt org.apache.lucene.util.BytesRefBuilder = new call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() call decl SeekStatus.append() = call decl SeekStatus.get() call decl SeekStatus.get() call decl SeekStatus.get() call decl SeekStatus.get() call decl SeekStatus.get() if != = int else = else = = + protected protected throws return new protected protected throws =