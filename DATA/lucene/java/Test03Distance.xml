org.apache.lucene.queryparser.surround.query junit.framework.TestSuite import junit.textui.TestRunner import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.queryparser.surround.query.Test03Distance super super extends SingleFieldTestDb boolean decl String decl String decl String String SingleFieldTestDb SingleFieldTestDb int decl String public static public static new String public public throws decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > + public public throws = new = new = new BooleanQueryTst private private throws decl_stmt org.apache.lucene.queryparser.surround.query.BooleanQueryTst = new new call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.setVerbose(boolean) call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.setVerbose(boolean) call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.setVerbose(boolean) call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.setVerbose(boolean) call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.setVerbose(boolean) call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.doTest() call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.doTest() call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.doTest() call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.doTest() call org.apache.lucene.queryparser.surround.query.BooleanQueryTst.doTest() public public throws decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = public public throws decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = decl int public public throws decl_stmt int = public public throws decl int public public throws decl_stmt int = + +