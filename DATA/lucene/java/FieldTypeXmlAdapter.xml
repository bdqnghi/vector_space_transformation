org.apache.solr.rest.schema java.util.List import java.util.Map import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.parsers.ParserConfigurationException import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.schema.IndexSchema import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.Node import class org.apache.solr.rest.schema.FieldTypeXmlAdapter DocumentBuilder Element Element Element Document public static public static < decl_stmt org.apache.solr.update.DocumentBuilder try = catch throw new decl_stmt org.apache.lucene.document.Document = call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() call DocumentBuilder.newDocument() decl_stmt javax.swing.text.Element = call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() call Document.createElement() decl_stmt javax.swing.text.Element = if != call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() = if != call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() = if != call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() = if != call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() decl_stmt javax.swing.text.Element = if != call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() return Object Element protected static protected static < decl_stmt java.lang.Object = if == return if ! instanceof throw new + + + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt javax.swing.text.Element = < return Object protected static protected static < decl_stmt java.lang.Object = if == return if ! instanceof throw new + + + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() return < decl List Element decl Map decl List protected static protected static < decl_stmt javax.swing.text.Element = if != call Element.setAttribute() call Element.setAttribute() call Element.setAttribute() call Element.setAttribute() call Element.setAttribute() decl_stmt java.util.List < < = < < decl_stmt java.util.Map < = < decl_stmt java.util.List < < = < < if == if != if == throw new if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == throw new call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() call Element.appendChild() if != else if != throw new if != throw new if != throw new return String protected static protected static < < for < : decl_stmt java.lang.String = if == throw new + + Object protected static protected static < for < : decl_stmt java.lang.Object = if != && ! instanceof call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return