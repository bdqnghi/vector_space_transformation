org.apache.lucene.codecs java.io.Closeable import java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.index.Fields import org.apache.lucene.index.MappedMultiFields import org.apache.lucene.index.MergeState import org.apache.lucene.index.MultiFields import org.apache.lucene.index.ReaderSlice import class org.apache.lucene.codecs.FieldsConsumer super super implements decl List int int FieldsProducer decl List Fields public public throws decl_stmt java.util.List final final final < = new <> decl_stmt java.util.List final final final < = new <> decl_stmt int = for = < ++ decl_stmt org.apache.lucene.codecs.FieldsProducer final final = decl_stmt int final final = call FieldsProducer.checkIntegrity() call FieldsProducer.checkIntegrity() call FieldsProducer.checkIntegrity() call FieldsProducer.checkIntegrity() call FieldsProducer.checkIntegrity() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() += decl_stmt Fields = new new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray()