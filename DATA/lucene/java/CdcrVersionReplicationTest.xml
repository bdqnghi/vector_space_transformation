org.apache.solr.cloud org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrException import org.apache.solr.common.util.StrUtils import org.apache.solr.update.processor.CdcrUpdateProcessor import org.apache.solr.update.processor.DistributedUpdateProcessor import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.List import java.util.Map import class org.apache.solr.cloud.CdcrVersionReplicationTest super super extends SolrClient String Logger int throws decl_stmt int = if < return if < return return SolrClient = public = public throws decl_stmt org.apache.solr.client.solrj.SolrClient = try finally call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() long QueryResponse private private throws = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt long = long call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + if instanceof throws for : UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() for = < += call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() + call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) boolean SolrException Throwable throws decl_stmt boolean = try catch = if instanceof && != = catch decl_stmt java.lang.Throwable = if instanceof = decl_stmt org.apache.solr.common.SolrException = call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) for = < += call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() + call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) boolean SolrException Throwable throws decl_stmt boolean = try catch = if instanceof && != = catch decl_stmt java.lang.Throwable = if instanceof = decl_stmt org.apache.solr.common.SolrException = call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl List decl Map String decl Map Long QueryResponse String throws decl_stmt java.util.List < = decl_stmt java.util.Map < = new <> for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() += decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + decl_stmt java.lang.Long = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt java.util.Map < = new <> for : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl List decl List QueryResponse decl Map decl Map throws decl_stmt java.util.Map < = new <> decl_stmt java.util.List < = decl_stmt java.util.List < = for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt java.util.Map < = new <> for : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process()