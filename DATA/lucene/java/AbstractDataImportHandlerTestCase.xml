org.apache.solr.handler.dataimport java.io.File import java.io.FileOutputStream import java.io.IOException import java.util.HashMap import java.util.LinkedHashMap import java.util.List import java.util.Map import org.apache.commons.io.FileUtils import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SuppressForbidden import org.apache.solr.core.SolrCore import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.update.AddUpdateCommand import org.apache.solr.update.CommitUpdateCommand import org.apache.solr.update.DeleteUpdateCommand import org.apache.solr.update.MergeIndexesCommand import org.apache.solr.update.RollbackUpdateCommand import org.apache.solr.update.processor.UpdateRequestProcessor import org.apache.solr.update.processor.UpdateRequestProcessorFactory import org.junit.Before import class org.apache.solr.handler.dataimport.AbstractDataImportHandlerTestCase super super extends File public static public static throws decl_stmt File = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() File public public throws decl_stmt File = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() SolrCore protected protected try decl_stmt org.apache.solr.core.SolrCore = return call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() catch return LocalSolrQueryRequest protected protected throws decl_stmt org.apache.solr.request.LocalSolrQueryRequest = LocalSolrQueryRequest protected protected throws decl_stmt org.apache.solr.request.LocalSolrQueryRequest = File protected protected try decl_stmt File = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() return catch throw new LocalSolrQueryRequest decl HashMap NamedList protected protected < throws decl_stmt HashMap < = new <> call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.putAll() call decl HashMap.putAll() call decl HashMap.putAll() call decl HashMap.putAll() call decl HashMap.putAll() decl_stmt org.apache.solr.common.util.NamedList = new for < : call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) decl_stmt org.apache.solr.request.LocalSolrQueryRequest = new Context public static public static final final final < < final final final < if == = new decl_stmt sun.tools.tree.Context final final = new new < return new == Map public static public static decl_stmt java.util.Map = new if == || == return for = < - += call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) + return File FileOutputStream = public static = public static throws decl_stmt File = new + + call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() decl_stmt java.io.FileOutputStream = new call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() if call File.setLastModified() call File.setLastModified() call File.setLastModified() call File.setLastModified() call File.setLastModified() - return decl HashMap public static < public static < decl_stmt HashMap < = new <> call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() return public public return == : public public return == : public < < public < < return == : public public return public public return public public return public public return public < public < return public public return public public public public return public public return public public return public public return public < public < return public public return == : public public return == : public public public public public public return public public return public public return new public static public static = = = = = = public public throws = public public throws = public public throws = public public throws = public public throws = public public throws =