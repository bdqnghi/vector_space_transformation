org.apache.lucene.analysis.ja.util java.io.BufferedOutputStream import java.io.File import java.io.FileOutputStream import java.io.IOException import java.io.OutputStream import org.apache.lucene.analysis.ja.dict.ConnectionCosts import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.store.DataOutput import org.apache.lucene.store.OutputStreamDataOutput import org.apache.lucene.util.BitUtil import class org.apache.lucene.analysis.ja.util.ConnectionCostsWriter decl short int int public public = short int int DataOutput OutputStream String public public throws decl_stmt java.lang.String = + + + new decl_stmt java.io.OutputStream = new try = new decl_stmt org.apache.lucene.store.DataOutput final final = new call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) call org.apache.lucene.store.DataOutput.writeVInt(int) decl_stmt int = assert == for : assert == for = < ++ decl_stmt int = int - call org.apache.lucene.store.DataOutput.writeZInt(int) call org.apache.lucene.store.DataOutput.writeZInt(int) call org.apache.lucene.store.DataOutput.writeZInt(int) call org.apache.lucene.store.DataOutput.writeZInt(int) call org.apache.lucene.store.DataOutput.writeZInt(int) = finally call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close()