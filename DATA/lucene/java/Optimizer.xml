org.egothor.stemmer java.util.ArrayList import java.util.Arrays import java.util.Iterator import java.util.List import class org.egothor.stemmer.Optimizer super super extends decl List decl List Row int decl List Row int boolean public public decl_stmt java.util.List < = decl_stmt java.util.List < = new <> decl_stmt java.util.List < = decl_stmt int = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - >= -- decl_stmt org.egothor.stemmer.Row = new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.egothor.stemmer.Row = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if != call decl List.set() call decl List.set() call decl List.set() call decl List.set() call decl List.set() = = break if == = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = - = new < return new Cell Character decl Iterator Row Cell Cell public public decl_stmt java.util.Iterator < = decl_stmt org.egothor.stemmer.Row = new for call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.Character = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = == new : if == return call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() = for call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.Character = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if != continue call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() call Row.cells() return Cell public public decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new if != return if >= if >= if == = else return else = else = if >= if >= if == if == = else return else return else = else = = + = return