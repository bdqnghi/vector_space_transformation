org.apache.lucene.queryparser.classic java.util.ArrayList import java.util.List import java.util.Map import org.apache.lucene.analysis.Analyzer import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.MultiPhraseQuery import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.Query import class org.apache.lucene.queryparser.classic.MultiFieldQueryParser super super extends decl String decl Map Query decl List Float protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.search.Query = if != if != decl_stmt java.lang.Float = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != = new call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return return decl_stmt org.apache.lucene.search.Query = = return decl org decl PhraseQuery decl Builder PhraseQuery decl apache private private if instanceof decl_stmt org.apache.lucene.util.fst.Builder = new call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() decl_stmt org.apache.lucene.search.PhraseQuery = decl_stmt org.apache.lucene.index.Term = call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() decl_stmt int = call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() for = < ++ call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() = call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() else if instanceof decl_stmt org.apache.lucene.search.MultiPhraseQuery = if != call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() = new return Query decl List Float protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.search.Query = if != if != decl_stmt java.lang.Float = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != = new call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() call java.lang.Float.floatValue() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return return decl_stmt org.apache.lucene.search.Query = return decl List protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return decl List protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return decl List protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return decl List protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return decl List protected protected throws if == decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return decl BooleanQuery protected protected < throws if return decl_stmt org.apache.lucene.util.fst.Builder = call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl Builder QueryParser public static public static throws if != throw new decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = new decl_stmt org.apache.lucene.search.Query = call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() if != && ! instanceof || > call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl Builder QueryParser public static public static throws if != throw new decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = new decl_stmt org.apache.lucene.search.Query = call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() if != && ! instanceof || > call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl Builder QueryParser public static public static throws if ! == && == throw new decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = new decl_stmt org.apache.lucene.search.Query = call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() call decl Builder.parse() if != && ! instanceof || > call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build()