org.apache.solr.schema java.io.IOException import java.io.Reader import java.lang.invoke.MethodHandles import java.util.Map import org.apache.commons.io.IOUtils import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.core.KeywordTokenizer import org.apache.lucene.spatial.prefix.PrefixTreeStrategy import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTreeFactory import org.apache.lucene.spatial.query.SpatialArgsParser import org.apache.solr.util.MapListener import org.locationtech.spatial4j.shape.Shape import org.slf4j.Logger import org.slf4j.LoggerFactory import class super super extends Double String SpatialPrefixTree Integer Logger String double decl MapListener protected protected < if decl_stmt double = * decl_stmt org.apache.solr.util.MapListener < = new <> = call decl MapListener.getSeenKeys() call decl MapListener.getSeenKeys() call decl MapListener.getSeenKeys() call decl MapListener.getSeenKeys() call decl MapListener.getSeenKeys() decl_stmt java.lang.String = if != = = if != = Shape PrefixTreeStrategy public public return new protected protected final final return new new decl_stmt java.awt.Shape private = protected protected final final try = catch throw new public public decl_stmt org.apache.lucene.spatial.prefix.PrefixTreeStrategy = == : return call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) Shape PrefixTreeStrategy protected protected final final return new new decl_stmt java.awt.Shape private = protected protected final final try = catch throw new public public decl_stmt org.apache.lucene.spatial.prefix.PrefixTreeStrategy = == : return call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) protected protected final final try = catch throw new PrefixTreeStrategy public public decl_stmt org.apache.lucene.spatial.prefix.PrefixTreeStrategy = == : return call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.createIndexableFields(Shape) public public return T protected protected decl_stmt T = if != call T.setDistErrPct() call T.setDistErrPct() call T.setDistErrPct() call T.setDistErrPct() call T.setDistErrPct() if != call T.setDefaultFieldValuesArrayLen() call T.setDefaultFieldValuesArrayLen() call T.setDefaultFieldValuesArrayLen() call T.setDefaultFieldValuesArrayLen() call T.setDefaultFieldValuesArrayLen() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + call SpatialPrefixTree.getMaxLevels() call SpatialPrefixTree.getMaxLevels() call SpatialPrefixTree.getMaxLevels() call SpatialPrefixTree.getMaxLevels() call SpatialPrefixTree.getMaxLevels() return