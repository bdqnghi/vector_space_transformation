org.apache.lucene.spatial.prefix java.io.IOException import java.util.Arrays import java.util.Iterator import java.util.Map import java.util.SortedMap import java.util.TreeMap import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.spatial.prefix.tree.Cell import org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree import org.apache.lucene.util.Bits import static static org.apache.lucene.spatial.prefix.tree.NumberRangePrefixTree.UnitNRShape import class org.apache.lucene.spatial.prefix.NumberRangePrefixTreeStrategy super super extends public public return protected < protected < < return public public throw new int Shape public public throws decl_stmt java.awt.Shape = decl_stmt int = + return UnitNRShape Facets decl FacetParentVal UnitNRShape decl Facets public public final final throws decl_stmt Facets final final = new new decl_stmt FacetParentVal decl_stmt UnitNRShape public public if < - = = += else if == - += else decl_stmt UnitNRShape = decl_stmt UnitNRShape = call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() - if == || ! call decl FacetParentVal.equals() call decl FacetParentVal.equals() call decl FacetParentVal.equals() call decl FacetParentVal.equals() call decl FacetParentVal.equals() if == = new call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() += private private = call UnitNRShape.clone() call UnitNRShape.clone() call UnitNRShape.clone() call UnitNRShape.clone() call UnitNRShape.clone() = call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() if == = new = call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() call Facets.parents() return UnitNRShape UnitNRShape public public if < - = = += else if == - += else decl_stmt UnitNRShape = decl_stmt UnitNRShape = call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getShapeAtLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() call UnitNRShape.getLevel() - if == || ! if == = new call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() call UnitNRShape.getValAtLevel() += private private = = if == = new = FacetParentVal StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + + + + for < : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break decl_stmt FacetParentVal final final = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()