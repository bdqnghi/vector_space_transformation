org.apache.solr.search.function org.apache.lucene.index.* import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.FloatDocValues import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.BytesRefBuilder import org.apache.solr.core.SolrCore import org.apache.solr.handler.RequestHandlerBase import org.apache.solr.handler.RequestHandlerUtils import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.FieldType import org.apache.solr.schema.SchemaField import org.apache.solr.update.processor.UpdateRequestProcessor import org.apache.solr.util.VersionedFile import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.BufferedReader import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.* import class org.apache.solr.search.function.FileFloatSource super super extends Cache SchemaField Logger float SchemaField String Object public public return + + IndexReaderContext decl float int public public throws decl_stmt int final final = decl_stmt IndexReaderContext = decl_stmt float final final final = call IndexReaderContext.reader() call IndexReaderContext.reader() call IndexReaderContext.reader() call IndexReaderContext.reader() call IndexReaderContext.reader() return new public public return + public public return public public return + public public return FileFloatSource public public if != return decl_stmt org.apache.solr.search.function.FileFloatSource = return call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() call FileFloatSource.field() && call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() call FileFloatSource.keyField() && == && public public return + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() public public return + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + + + + public static public static call Cache.resetCache() call Cache.resetCache() call Cache.resetCache() call Cache.resetCache() call Cache.resetCache() public public call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call Cache.refresh() call Cache.refresh() call Cache.refresh() call Cache.refresh() call Cache.refresh() new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) private final private final return call org.apache.solr.common.util.Cache.get(K) call org.apache.solr.common.util.Cache.get(K) call org.apache.solr.common.util.Cache.get(K) call org.apache.solr.common.util.Cache.get(K) call org.apache.solr.common.util.Cache.get(K) new protected protected return Map Object public public decl_stmt java.lang.Object = synchronized decl_stmt java.util.Map = if == = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) CreationPlaceholder Map Object public public decl_stmt java.util.Map decl_stmt java.lang.Object synchronized = if == = new = else = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if == = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) if instanceof synchronized decl_stmt org.apache.lucene.uninverting.CreationPlaceholder = if == = synchronized call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) = return return public public synchronized Entry public public if ! instanceof return decl_stmt Entry = return public public return FieldType int String int decl List int InputStream TermsEnum String BytesRefBuilder float int char BufferedReader String int decl float PostingsEnum String private static private static decl_stmt float = new if != decl_stmt java.io.InputStream decl_stmt java.lang.String = + try = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + return decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.FieldType = decl_stmt java.util.List < = new <> decl_stmt int = decl_stmt int = decl_stmt char = decl_stmt org.apache.lucene.util.BytesRefBuilder = new try decl_stmt org.apache.lucene.index.TermsEnum = decl_stmt org.apache.lucene.index.PostingsEnum = for = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != decl_stmt int = if < continue decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt float try call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) = catch if ++ <= call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + < : continue if ! call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() if < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ++ continue = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt int while = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + finally try call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + == : + + + return UpdateRequestProcessor public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt org.apache.solr.update.processor.UpdateRequestProcessor = try finally call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() public public return