org.apache.lucene.search java.io.IOException import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.FilteredTermsEnum import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.Directory import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.search.TestMultiTermQueryRewrites super super extends IndexReader Directory IndexSearcher Document RandomIndexWriter RandomIndexWriter RandomIndexWriter public static public static throws = = = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new new decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new new decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) == : call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = = = new new = = new new = public static public static throws call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call IndexSearcher.close() call IndexSearcher.close() call IndexSearcher.close() call IndexSearcher.close() call IndexSearcher.close() = = = = = = = = = private private if instanceof = return private private = return Term BooleanQuery private private = decl_stmt org.apache.lucene.search.BooleanQuery final final = decl_stmt org.apache.lucene.index.Term = for : call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() = if != call org.apache.lucene.index.Term.compareTo(Term) call org.apache.lucene.index.Term.compareTo(Term) call org.apache.lucene.index.Term.compareTo(Term) call org.apache.lucene.index.Term.compareTo(Term) call org.apache.lucene.index.Term.compareTo(Term) < = Query Query Query MultiTermQuery private private throws decl_stmt org.apache.lucene.search.MultiTermQuery final final = call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) decl_stmt org.apache.lucene.search.Query final final = decl_stmt org.apache.lucene.search.Query final final = decl_stmt org.apache.lucene.search.Query final final = if + + + public public throws new new TermQuery BoostQuery private private for : decl_stmt org.apache.lucene.search.BoostQuery final final = decl_stmt org.apache.lucene.search.TermQuery final final = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() Query BoostAttribute Query MultiTermQuery char Query private private throws decl_stmt org.apache.lucene.search.MultiTermQuery final final = new protected protected throws return new decl_stmt org.apache.lucene.search.BoostAttribute final final = protected protected call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() if == return decl_stmt char = & if >= if <= return else return else return public public return call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) decl_stmt org.apache.lucene.search.Query final final = decl_stmt org.apache.lucene.search.Query final final = decl_stmt org.apache.lucene.search.Query final final = if + + + BoostAttribute char protected protected throws return new decl_stmt org.apache.lucene.search.BoostAttribute final final = protected protected call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() call BoostAttribute.setBoost() if == return decl_stmt char = & if >= if <= return else return else return char protected protected if == return decl_stmt char = & if >= if <= return else return else return public public return public public throws new decl BooleanQuery MultiTermQuery int private private throws decl_stmt int = decl_stmt org.apache.lucene.search.MultiTermQuery final final = call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) try decl_stmt TooManyClauses = call decl BooleanQuery.getStackTrace() call decl BooleanQuery.getStackTrace() call decl BooleanQuery.getStackTrace() call decl BooleanQuery.getStackTrace() call decl BooleanQuery.getStackTrace() finally MultiTermQuery int private private throws decl_stmt int = decl_stmt org.apache.lucene.search.MultiTermQuery final final = call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) call org.apache.lucene.search.MultiTermQuery.setRewriteMethod(RewriteMethod) try finally public public throws new new