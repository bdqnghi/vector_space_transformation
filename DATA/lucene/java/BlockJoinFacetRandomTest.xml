org.apache.solr.search.join java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashSet import java.util.LinkedList import java.util.List import java.util.Set import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.search.join.BlockJoinFacetRandomTest super super extends String decl String int String String int decl String int decl Facet public static public static throws = : = int decl List XmlDoc decl List public static public static throws decl_stmt int = decl_stmt java.util.List < < < = for < < : decl_stmt java.util.List < = new <> for < : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new ++ decl_stmt XmlDoc = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - = call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call XmlDoc.xml() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - + if if + + decl List decl List RandomParentPosting decl List private static < < < private static < < < decl_stmt java.util.List < < < = new <> for = < ++ decl_stmt java.util.List < < = decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : for : decl_stmt RandomParentPosting = if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl List RandomParentPosting decl List private static < < private static < < decl_stmt java.util.List < < = new <> for = < ++ decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : for : decl_stmt RandomParentPosting = if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if && call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return private static private static return private static private static return int int private static private static decl_stmt int = + switch case decl_stmt int = return + case return default: return private static private static return + private static private static return + private static private static return + + public static public static throws public public throws decl int public public throws decl_stmt int = decl int decl int public public throws decl_stmt int = decl_stmt int = decl int decl int public public throws decl_stmt int = decl_stmt int = decl int decl int decl int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl int decl int decl int decl int decl int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl int decl int decl int decl int decl int decl int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = int decl Set decl Set decl int private private decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.retainAll() call decl Set.retainAll() call decl Set.retainAll() call decl Set.retainAll() call decl Set.retainAll() decl_stmt int = new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt int = for : ++ = return decl List private private decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() String private private decl_stmt java.lang.String if == = else = + return StringBuilder String private private final final decl_stmt java.lang.String if == = + + else decl_stmt java.lang.StringBuilder = new + + if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() return StringBuilder private private decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if == if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else for : for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if == for : for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else for : for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int decl RandomFacetValue decl List private private decl_stmt java.util.List < = new <> if != && == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + else if == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + if != for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + decl_stmt RandomFacetValue = for : decl_stmt int = if > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + + + + + return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() int decl int decl Facet private static private static decl_stmt int = decl_stmt Facet = new decl_stmt int = for : ++ = new return decl int int decl int private static private static decl_stmt int = new decl_stmt int = for = < ++ if ++ = decl_stmt int = new return private private switch case return + + case return default: return String decl_stmt java.lang.String = : return + + decl List int private private for = < ++ decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > decl_stmt int = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > decl_stmt int = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl List private < private < decl_stmt java.util.List < = new <> for = < ++ if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return private private for = < ++ = == return || == decl List private < private < decl_stmt java.util.List < = new <> for = < ++ if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return private private for = < ++ = == return || == int decl_stmt int = if != for : if ++ else for = < ++ if ++ return boolean decl_stmt boolean = && == || > if ! if == for : = if break else for : = if break return