org.apache.lucene.spatial org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Shape import java.io.BufferedReader import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.nio.charset.StandardCharsets import java.text.ParseException import java.util.ArrayList import java.util.Iterator import java.util.List import class org.apache.lucene.spatial.SpatialTestData Shape String String decl String BufferedReader String SpatialTestData decl List public static < public static < throws decl_stmt java.util.List < = new <> decl_stmt java.io.BufferedReader = new new try decl_stmt java.lang.String while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == || call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == continue decl_stmt org.apache.lucene.spatial.SpatialTestData = new decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) if != throw new + = = try = catch throw new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() finally call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() return call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator()