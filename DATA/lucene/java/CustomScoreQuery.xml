org.apache.lucene.queries java.io.IOException import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.Set import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.queries.function.FunctionQuery import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.Explanation import org.apache.lucene.search.FilterScorer import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import class org.apache.lucene.queries.CustomScoreQuery super super extends super implements boolean Query decl Query CustomScoreQuery Query Query public public throws decl_stmt org.apache.lucene.queries.CustomScoreQuery = decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) if != = = for = < ++ decl_stmt org.apache.lucene.search.Query final final = if != if == = = return == : CustomScoreQuery public public decl_stmt org.apache.lucene.queries.CustomScoreQuery try = catch throw new = = new for = < ++ = return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) : return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() CustomScoreQuery public public if == return if ! return decl_stmt org.apache.lucene.queries.CustomScoreQuery = if ! || != || != return return public public return + call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() + ^ : protected protected throws return new public public < for : float public public throws decl_stmt float = for : if == += return public public for : if else = Scorer decl Scorer public public throws decl_stmt org.apache.lucene.search.Scorer = if == return decl_stmt org.apache.lucene.search.Scorer = new for = < ++ = return new Explanation public public throws decl_stmt org.apache.lucene.search.Explanation = return == : float Explanation decl Explanation Explanation private private throws decl_stmt org.apache.lucene.search.Explanation = if ! call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() return decl_stmt org.apache.lucene.search.Explanation = new for = < ++ = decl_stmt org.apache.lucene.search.Explanation = decl_stmt float = * call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() return + int public public throws decl_stmt int = if > for : = for = < ++ = return * public < public < return new public public throws return new public public return public public = public public return public public return public public return