org.apache.lucene.codecs.asserting java.io.IOException import java.util.Collection import org.apache.lucene.codecs.TermVectorsFormat import org.apache.lucene.codecs.TermVectorsReader import org.apache.lucene.codecs.TermVectorsWriter import org.apache.lucene.index.AssertingLeafReader import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.Fields import org.apache.lucene.index.SegmentInfo import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.asserting.AssertingTermVectorsFormat super super extends TermVectorsFormat public public throws return new call TermVectorsFormat.vectorsReader() call TermVectorsFormat.vectorsReader() call TermVectorsFormat.vectorsReader() call TermVectorsFormat.vectorsReader() call TermVectorsFormat.vectorsReader() public public throws return new call TermVectorsFormat.vectorsWriter() call TermVectorsFormat.vectorsWriter() call TermVectorsFormat.vectorsWriter() call TermVectorsFormat.vectorsWriter() call TermVectorsFormat.vectorsWriter() public public throws call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() Fields public public throws decl_stmt Fields = call TermVectorsFormat.get() call TermVectorsFormat.get() call TermVectorsFormat.get() call TermVectorsFormat.get() call TermVectorsFormat.get() return == : new public public return new call TermVectorsFormat.clone() call TermVectorsFormat.clone() call TermVectorsFormat.clone() call TermVectorsFormat.clone() call TermVectorsFormat.clone() long public public decl_stmt long = call TermVectorsFormat.ramBytesUsed() call TermVectorsFormat.ramBytesUsed() call TermVectorsFormat.ramBytesUsed() call TermVectorsFormat.ramBytesUsed() call TermVectorsFormat.ramBytesUsed() assert >= return decl Collection public < public < decl_stmt java.util.Collection < = call TermVectorsFormat.getChildResources() call TermVectorsFormat.getChildResources() call TermVectorsFormat.getChildResources() call TermVectorsFormat.getChildResources() call TermVectorsFormat.getChildResources() return public public throws call TermVectorsFormat.checkIntegrity() call TermVectorsFormat.checkIntegrity() call TermVectorsFormat.checkIntegrity() call TermVectorsFormat.checkIntegrity() call TermVectorsFormat.checkIntegrity() public public throws return new call TermVectorsFormat.getMergeInstance() call TermVectorsFormat.getMergeInstance() call TermVectorsFormat.getMergeInstance() call TermVectorsFormat.getMergeInstance() call TermVectorsFormat.getMergeInstance() public public return + + call TermVectorsFormat.toString() call TermVectorsFormat.toString() call TermVectorsFormat.toString() call TermVectorsFormat.toString() call TermVectorsFormat.toString() + public public throws assert == assert != call TermVectorsFormat.startDocument() call TermVectorsFormat.startDocument() call TermVectorsFormat.startDocument() call TermVectorsFormat.startDocument() call TermVectorsFormat.startDocument() = = ++ public public throws assert == assert == call TermVectorsFormat.finishDocument() call TermVectorsFormat.finishDocument() call TermVectorsFormat.finishDocument() call TermVectorsFormat.finishDocument() call TermVectorsFormat.finishDocument() = public public throws assert == assert == assert != call TermVectorsFormat.startField() call TermVectorsFormat.startField() call TermVectorsFormat.startField() call TermVectorsFormat.startField() call TermVectorsFormat.startField() = = = || || public public throws assert == assert == call TermVectorsFormat.finishField() call TermVectorsFormat.finishField() call TermVectorsFormat.finishField() call TermVectorsFormat.finishField() call TermVectorsFormat.finishField() = -- public public throws assert == assert == assert != call TermVectorsFormat.startTerm() call TermVectorsFormat.startTerm() call TermVectorsFormat.startTerm() call TermVectorsFormat.startTerm() call TermVectorsFormat.startTerm() = = : public public throws assert == assert == assert == assert == call TermVectorsFormat.finishTerm() call TermVectorsFormat.finishTerm() call TermVectorsFormat.finishTerm() call TermVectorsFormat.finishTerm() call TermVectorsFormat.finishTerm() = -- public public throws assert == assert == assert == call TermVectorsFormat.addPosition() call TermVectorsFormat.addPosition() call TermVectorsFormat.addPosition() call TermVectorsFormat.addPosition() call TermVectorsFormat.addPosition() -- public public throws assert == assert == > : assert != assert != call TermVectorsFormat.finish() call TermVectorsFormat.finish() call TermVectorsFormat.finish() call TermVectorsFormat.finish() call TermVectorsFormat.finish() public public throws call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close() call TermVectorsFormat.close()