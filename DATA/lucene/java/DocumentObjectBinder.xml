org.apache.solr.client.solrj.beans org.apache.solr.common.SolrDocumentList import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.util.SuppressForbidden import java.lang.reflect.* import java.security.AccessController import java.security.PrivilegedAction import java.util.* import java.util.regex.Pattern import java.util.concurrent.ConcurrentHashMap import java.nio.ByteBuffer import class org.apache.solr.client.solrj.beans.DocumentObjectBinder decl Map decl List decl List public < < public < < < decl_stmt java.util.List < = decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public < public < < return T private < private < < < if == = try decl_stmt T = for : return catch throw new + decl List decl Map SolrInputDocument public public decl_stmt java.util.List < = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() throw new + + decl_stmt org.apache.solr.common.SolrInputDocument = new for : if != && != && decl_stmt java.util.Map < = < for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) else if != else call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) return decl Object Collection Object SolrInputDocument private private decl_stmt java.lang.Object = if == return if instanceof decl_stmt java.util.Collection = for : decl_stmt org.apache.solr.common.SolrInputDocument = else if call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt java.lang.Object = for : else decl List private < private < decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == synchronized call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = return DocField decl List boolean decl List Class = private < = private < decl_stmt java.util.List < = new <> decl_stmt java.lang.Class = decl_stmt java.util.List < = new <> while != && != call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call Class.getDeclaredFields() call Class.getDeclaredFields() call Class.getDeclaredFields() call Class.getDeclaredFields() call Class.getDeclaredFields() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call Class.getDeclaredMethods() call Class.getDeclaredMethods() call Class.getDeclaredMethods() call Class.getDeclaredMethods() call Class.getDeclaredMethods() = call Class.getSuperclass() call Class.getSuperclass() call Class.getSuperclass() call Class.getSuperclass() call Class.getSuperclass() decl_stmt boolean = for : if < -> return decl_stmt DocField = new if != if throw new + = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add()