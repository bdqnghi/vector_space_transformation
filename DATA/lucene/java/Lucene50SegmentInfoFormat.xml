org.apache.lucene.codecs.lucene50 java.io.IOException import java.util.Collections import java.util.Map import java.util.Set import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.SegmentInfoFormat import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.SegmentInfo import org.apache.lucene.index.SegmentInfos import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.DataOutput import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.Version import class org.apache.lucene.codecs.lucene50.Lucene50SegmentInfoFormat super super extends String int int String int decl Set int decl Map String SegmentInfo Version int decl Map boolean Throwable public public throws decl_stmt java.lang.String final final = try = decl_stmt java.lang.Throwable = decl_stmt org.apache.lucene.index.SegmentInfo = try decl_stmt int = decl_stmt org.apache.lucene.util.Version final final = decl_stmt int final final = if < throw new + decl_stmt boolean final final = == decl_stmt java.util.Map final final final < decl_stmt java.util.Set final final final < decl_stmt java.util.Map final final final < if >= = = = else = = = = new call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) catch = finally return decl Set Version String public public throws decl_stmt java.lang.String final final = try = decl_stmt org.apache.lucene.util.Version = if < throw new + + + assert == : decl_stmt java.util.Set < = for : if ! throw new + + +