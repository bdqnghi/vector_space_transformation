org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashSet import java.util.List import java.util.Set import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.SortedSetDocValuesField import org.apache.lucene.document.StringField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.search.similarities.Similarity.SimScorer import org.apache.lucene.search.similarities.Similarity.SimWeight import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.search.TestMinShouldMatch2 super super extends IndexSearcher String DirectoryReader Directory LeafReader Document int RandomIndexWriter public static public static throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int final final = for = < ++ decl_stmt org.apache.lucene.document.Document = new if < if < if < call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = = = new call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) new public public return public public return public static public static throws call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = = = = int decl List private static private static decl_stmt java.util.List < = decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl BooleanQuery decl Builder BooleanWeight private private throws decl_stmt org.apache.lucene.util.fst.Builder = new for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() decl_stmt org.apache.lucene.search.BooleanWeight = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() switch case return new case return call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() case decl_stmt org.apache.lucene.search.BulkScorer final final = call decl Builder.optionalBulkScorer() call decl Builder.optionalBulkScorer() call decl Builder.optionalBulkScorer() call decl Builder.optionalBulkScorer() call decl Builder.optionalBulkScorer() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() if == if call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call decl Builder.scorer() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() call org.apache.lucene.index.LeafReader.getContext() != throw new return return new default: throw new float int float DocIdSetIterator DocIdSetIterator private private throws if == return decl_stmt int decl_stmt org.apache.lucene.search.DocIdSetIterator = decl_stmt org.apache.lucene.search.DocIdSetIterator = while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() != call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() decl_stmt float = decl_stmt float = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() float int int float DocIdSetIterator DocIdSetIterator private private throws if == return decl_stmt org.apache.lucene.search.DocIdSetIterator = decl_stmt org.apache.lucene.search.DocIdSetIterator = decl_stmt int = decl_stmt int while = call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) + != call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) + decl_stmt float = decl_stmt float = = call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) + Scorer Scorer public public throws for = < ++ for = < ++ for = < ++ decl_stmt org.apache.lucene.search.Scorer = new decl_stmt org.apache.lucene.search.Scorer = new = new = new Scorer Scorer public public throws for = < += for = < ++ for = < ++ for = < ++ decl_stmt org.apache.lucene.search.Scorer = new decl_stmt org.apache.lucene.search.Scorer = new = new = new decl List Scorer String Scorer public public throws decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() decl_stmt java.lang.String = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new for = <= ++ decl_stmt org.apache.lucene.search.Scorer = decl_stmt org.apache.lucene.search.Scorer = = = decl List Scorer String Scorer public public throws decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() decl_stmt java.lang.String = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new for = < += for = <= ++ decl_stmt org.apache.lucene.search.Scorer = decl_stmt org.apache.lucene.search.Scorer = = = decl List Scorer String Scorer public public throws decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() for = <= call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt java.lang.String = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() new for = <= ++ decl_stmt org.apache.lucene.search.Scorer = decl_stmt org.apache.lucene.search.Scorer = = = decl List Scorer String Scorer public public throws decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() for = < += for = <= call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt java.lang.String = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() new for = <= ++ decl_stmt org.apache.lucene.search.Scorer = decl_stmt org.apache.lucene.search.Scorer = = = public public throws assert != : return float * public public throws return public public return int long public public return new public public throws assert != for = + < ++ = = decl_stmt long while = != if ++ += int if >= return return = public public throws decl_stmt int while = < return public public return public public return long public public throws assert != for = + < ++ = = decl_stmt long while = != if ++ += int if >= return return = int public public throws decl_stmt int while = < return public public return public public return