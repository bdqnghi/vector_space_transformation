org.apache.solr.client.solrj.io.eq java.io.Serializable import java.util.Comparator import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.comp.ComparatorOrder import org.apache.solr.client.solrj.io.comp.FieldComparator import org.apache.solr.client.solrj.io.comp.MultipleFieldComparator import org.apache.solr.client.solrj.io.comp.StreamComparator import org.apache.solr.client.solrj.io.stream.expr.Expressible import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import class org.apache.solr.client.solrj.io.eq.FieldEqualitor super super implements String String long private private = = StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() Comparable Comparable public public decl_stmt java.lang.Comparable = decl_stmt java.lang.Comparable = if == return if == || == return return == call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() public public return public public return MultipleFieldEqualitor FieldEqualitor public public if == return if instanceof decl_stmt org.apache.solr.client.solrj.io.eq.FieldEqualitor = return call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if instanceof decl_stmt org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor = if call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() > return call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() call org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor.getEqs() return MultipleFieldComparator FieldComparator public public if == return if instanceof decl_stmt org.apache.lucene.search.FieldComparator = return call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() call org.apache.lucene.search.FieldComparator.getLeftFieldName() || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() call org.apache.lucene.search.FieldComparator.getRightFieldName() else if instanceof decl_stmt org.apache.solr.client.solrj.io.comp.MultipleFieldComparator = if call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() > return call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() return