org.apache.lucene.index org.apache.lucene.util.Version import java.io.IOException import java.util.ArrayList import java.util.List import java.util.Map import java.util.HashMap import class org.apache.lucene.index.UpgradeIndexMergePolicy super super extends protected protected return ! public public throws return decl List MergeSpecification decl Map Boolean public public < throws decl_stmt java.util.Map final final final < = new <> for final final : decl_stmt java.lang.Boolean final final = if != && call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if + if call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() return decl_stmt MergeSpecification = if != for final final : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if ! call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() if + + + decl_stmt java.util.List final final final < = new <> for final final : if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if == = new call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() new return private private return != && private private