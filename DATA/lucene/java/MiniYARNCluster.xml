org.apache.solr.hadoop.hack java.io.File import java.io.IOException import java.net.InetAddress import java.net.UnknownHostException import java.util.Locale import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.FileContext import org.apache.hadoop.fs.Path import org.apache.hadoop.metrics2.lib.DefaultMetricsSystem import org.apache.hadoop.service.AbstractService import org.apache.hadoop.service.CompositeService import org.apache.hadoop.util.Shell import org.apache.hadoop.util.Shell.ShellCommandExecutor import org.apache.hadoop.yarn.conf.YarnConfiguration import org.apache.hadoop.yarn.event.Dispatcher import org.apache.hadoop.yarn.exceptions.YarnException import org.apache.hadoop.yarn.exceptions.YarnRuntimeException import org.apache.hadoop.yarn.factories.RecordFactory import org.apache.hadoop.yarn.factory.providers.RecordFactoryProvider import org.apache.hadoop.yarn.server.api.ResourceTracker import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatRequest import org.apache.hadoop.yarn.server.api.protocolrecords.NodeHeartbeatResponse import org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerRequest import org.apache.hadoop.yarn.server.api.protocolrecords.RegisterNodeManagerResponse import org.apache.hadoop.yarn.server.nodemanager.Context import org.apache.hadoop.yarn.server.nodemanager.NodeHealthCheckerService import org.apache.hadoop.yarn.server.nodemanager.NodeManager import org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdater import org.apache.hadoop.yarn.server.nodemanager.NodeStatusUpdaterImpl import org.apache.hadoop.yarn.server.resourcemanager.ResourceManager import org.apache.hadoop.yarn.server.resourcemanager.ResourceTrackerService import class org.apache.solr.hadoop.hack.MiniYARNCluster super super extends Log ResourceManager File decl NodeManager int int ResourceManagerWrapper public public throws instanceof : new public public return public public return public public return public static public static try return catch throw new int String public synchronized public synchronized throws try if ! decl_stmt java.lang.String = + + + + + = new protected protected throws call ResourceManager.init() call ResourceManager.init() call ResourceManager.init() call ResourceManager.init() call ResourceManager.init() new public public call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() decl_stmt int = while call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() == && ++ < call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() if call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() != throw new + call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() call ResourceManager.getServiceState() catch throw new call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + protected protected throws public public call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() call ResourceManager.start() String public synchronized public synchronized throws if != call ResourceManager.stop() call ResourceManager.stop() call ResourceManager.stop() call ResourceManager.stop() call ResourceManager.stop() if decl_stmt java.lang.String = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() try new catch call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() Configuration public synchronized public synchronized throws decl_stmt Configuration = new decl File String String private private decl_stmt File = new decl_stmt java.lang.String = for = < ++ = new + + + + + + call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + + decl_stmt java.lang.String = > : = call java.lang.String.concat(String) call java.lang.String.concat(String) call java.lang.String.concat(String) call java.lang.String.concat(String) call java.lang.String.concat(String) + return String int String File public synchronized public synchronized throws try decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt File = new + + call File.mkdir() call File.mkdir() call File.mkdir() call File.mkdir() call File.mkdir() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() * + + + if ! call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + new public public decl_stmt int = while == && ++ < call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + if != throw new + + catch throw new public public public synchronized public synchronized throws if != protected protected throws ResourceTrackerService RecordFactory RegisterNodeManagerResponse protected protected return new protected protected decl_stmt ResourceTrackerService final final = call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() decl_stmt RecordFactory final final = return new public public throws decl_stmt NodeHeartbeatResponse = call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() try = call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return public public throws decl_stmt RegisterNodeManagerResponse = call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() try = call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return protected protected return ResourceTrackerService RecordFactory RegisterNodeManagerResponse protected protected decl_stmt ResourceTrackerService final final = call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() call ResourceManager.getResourceTrackerService() decl_stmt RecordFactory final final = return new public public throws decl_stmt NodeHeartbeatResponse = call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() try = call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() call ResourceTrackerService.nodeHeartbeat() catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return public public throws decl_stmt RegisterNodeManagerResponse = call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() call RecordFactory.newRecordInstance() try = call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() call ResourceTrackerService.registerNodeManager() catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return NodeHeartbeatResponse public public throws decl_stmt NodeHeartbeatResponse = try = catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return RegisterNodeManagerResponse public public throws decl_stmt RegisterNodeManagerResponse = try = catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + throw return protected protected return