org.apache.solr.response java.io.IOException import java.io.Writer import java.lang.invoke.MethodHandles import java.util.Arrays import java.util.Iterator import java.util.List import java.util.Map import java.util.Set import org.apache.solr.common.SolrDocument import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.common.util.XML import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SimilarityFactory import org.apache.solr.search.ReturnFields import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.response.SchemaXmlWriter super super extends decl char boolean Logger decl char public public = SchemaXmlWriter public static public static throws decl_stmt org.apache.solr.response.SchemaXmlWriter = try = new call org.apache.solr.response.SchemaXmlWriter.writeResponse() call org.apache.solr.response.SchemaXmlWriter.writeResponse() call org.apache.solr.response.SchemaXmlWriter.writeResponse() call org.apache.solr.response.SchemaXmlWriter.writeResponse() call org.apache.solr.response.SchemaXmlWriter.writeResponse() finally if != call SchemaXmlWriter.close() call SchemaXmlWriter.close() call SchemaXmlWriter.close() call SchemaXmlWriter.close() call SchemaXmlWriter.close() decl List decl List decl SimpleOrderedMap decl List String decl SimpleOrderedMap public public throws if if decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = < call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() for = < call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() ++ decl_stmt java.lang.String = call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() call decl SimpleOrderedMap.get() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) < < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.util.List < < = < < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() for < : for = < ++ else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.util.List < < = < < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() for < : for = < ++ else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.util.List < < = < < call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() for < : for = < ++ else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + decl SimpleOrderedMap decl SimpleOrderedMap String decl SimpleOrderedMap decl SimpleOrderedMap decl SimpleOrderedMap boolean private private < < throws for < : decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = for = < ++ decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else decl_stmt boolean = == && == && == && == && == if else if != if != if != if != if != private private < throws if > else decl List boolean decl List String decl SimpleOrderedMap private private < throws if != decl_stmt java.util.List < < = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = decl_stmt java.util.List < < = for = < ++ decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = < < else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if ! decl_stmt boolean = == && == && == if else if != for < : for = < ++ if != for = < call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() call decl SimpleOrderedMap.size() ++ call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getName() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() call decl SimpleOrderedMap.getVal() if != for < : for = < ++ throws if throws if throws throws if && private private throws public public throws if != if else int String public public throws decl_stmt int = for = < ++ decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throws if if != if else else if else int Object Object public public throws decl_stmt int = if ! <= for : < decl_stmt java.lang.Object = decl_stmt java.lang.Object = == : call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() if ! if > if public public throws public public throws if while if else public public throws public public throws public public throws public public throws public public throws public public throws public public throws public public throws public public throws public public throws int private private throws decl_stmt int = == : == if == return if else public public throws public public throws public public throws