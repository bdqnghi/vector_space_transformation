org.apache.lucene.codecs.memory java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.FieldsConsumer import org.apache.lucene.codecs.PostingsWriterBase import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.Fields import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.DataOutput import org.apache.lucene.store.IndexOutput import org.apache.lucene.store.RAMOutputStream import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.IOUtils import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.fst.Builder import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.Util import class org.apache.lucene.codecs.memory.FSTTermsWriter super super extends String int int FieldInfos int decl List String PostingsWriterBase IndexOutput private private throws call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() long BytesRef Terms TermsEnum FixedBitSet TermsWriter boolean BlockTermState FieldInfo long public public throws for : decl_stmt org.apache.lucene.index.Terms = call decl List.terms() call decl List.terms() call decl List.terms() call decl List.terms() call decl List.terms() if == continue decl_stmt org.apache.lucene.index.FieldInfo = call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) decl_stmt boolean = call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() >= decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt TermsWriter = new decl_stmt long = decl_stmt long = decl_stmt org.apache.lucene.util.FixedBitSet = new while decl_stmt org.apache.lucene.util.BytesRef = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break decl_stmt org.apache.lucene.codecs.BlockTermState = call PostingsWriterBase.writeTerm() call PostingsWriterBase.writeTerm() call PostingsWriterBase.writeTerm() call PostingsWriterBase.writeTerm() call PostingsWriterBase.writeTerm() if != call TermsWriter.finishTerm() call TermsWriter.finishTerm() call TermsWriter.finishTerm() call TermsWriter.finishTerm() call TermsWriter.finishTerm() += += call TermsWriter.finish() call TermsWriter.finish() call TermsWriter.finish() call TermsWriter.finish() call TermsWriter.finish() : - call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() boolean long public public throws if != decl_stmt boolean = try decl_stmt long final final = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() if != call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() = finally if else = decl FSTTermOutputs decl TermData public public throws decl_stmt TermData final final final final final = new = new = = = call PostingsWriterBase.encodeTerm() call PostingsWriterBase.encodeTerm() call PostingsWriterBase.encodeTerm() call PostingsWriterBase.encodeTerm() call PostingsWriterBase.encodeTerm() decl_stmt int final final = int if > = new ++ decl FST public public throws if > decl_stmt org.apache.lucene.util.fst.FST final final final < = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new