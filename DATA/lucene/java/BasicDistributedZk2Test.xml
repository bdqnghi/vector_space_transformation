org.apache.solr.cloud java.io.IOException import java.nio.file.DirectoryStream import java.nio.file.Files import java.nio.file.Path import java.util.ArrayList import java.util.Arrays import com.google.common.collect.Lists import org.apache.lucene.mockfile.FilterPath import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CoreAdminRequest.Create import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.handler.CheckBackupStatus import org.junit.Test import class annotation org.apache.solr.cloud.BasicDistributedZk2Test super super extends String String String long String SolrClient ZkNodeProps CloudJettyRunner boolean ZkStateReader = public = public throws decl_stmt boolean = try decl_stmt long = try catch decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt org.apache.solr.common.cloud.ZkNodeProps = call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) decl_stmt org.apache.solr.client.solrj.SolrClient = + decl_stmt CloudJettyRunner = + = finally if ! = int String String Create private private throws decl_stmt java.lang.String final final = try = decl_stmt Create = new call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() + call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() catch decl_stmt int = for : decl_stmt java.lang.String final final = += SolrQuery QueryResponse SolrInputDocument private private final final throws decl_stmt org.apache.solr.client.solrj.SolrQuery = new try = + + decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = - call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() try = + decl_stmt org.apache.solr.client.solrj.response.QueryResponse = - call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() ModifiableSolrParams UpdateRequest long QueryResponse private private throws decl_stmt long = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) + decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) + = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() return int SolrInputDocument QueryRequest Path CloudJettyRunner SolrQuery UpdateRequest ModifiableSolrParams HttpSolrClient SolrQuery long long long long private private throws decl_stmt org.apache.solr.client.solrj.SolrQuery = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() decl_stmt int = decl_stmt CloudJettyRunner = try catch decl_stmt long = new decl_stmt long = new + decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) try call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() catch call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() decl_stmt long = new + if new for : try decl_stmt org.apache.solr.client.solrj.SolrQuery = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call HttpSolrClient.query() call HttpSolrClient.query() call HttpSolrClient.query() call HttpSolrClient.query() call HttpSolrClient.query() catch = call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() call HttpSolrClient.solrClient() for = < ++ = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + = new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient final final = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt java.nio.file.Path = = call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) decl ArrayList CheckBackupStatus private private throws decl_stmt org.apache.solr.handler.CheckBackupStatus = new while ! call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() try < = decl_stmt java.util.ArrayList < = call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() private private throws for : if + new for : if + new private private throws