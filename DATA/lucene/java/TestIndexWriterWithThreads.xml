org.apache.lucene.index java.io.IOException import java.util.concurrent.CountDownLatch import java.util.concurrent.atomic.AtomicBoolean import java.util.concurrent.atomic.AtomicReference import java.util.concurrent.locks.Lock import java.util.concurrent.locks.ReentrantLock import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.TextField import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.BaseDirectoryWrapper import org.apache.lucene.store.Directory import org.apache.lucene.store.LockObtainFailedException import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LineFileDocs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.ThreadInterruptedException import org.apache.lucene.util.LuceneTestCase.Slow import class annotation org.apache.lucene.index.TestIndexWriterWithThreads super super extends Document FieldType long int int public public decl_stmt org.apache.lucene.document.Document final final = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt int = decl_stmt int = decl_stmt long final final = + do try new + ++ ++ catch if if || = try catch throw new if ++ >= break else if + = break catch break catch if + = break < int IndexWriter decl IndexerThread MockDirectoryWrapper int public public throws decl_stmt int = decl_stmt int final final = : for = < ++ if + decl_stmt org.apache.lucene.store.MockDirectoryWrapper = decl_stmt org.apache.lucene.index.IndexWriter = new new new call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() * + * decl_stmt IndexerThread = new for = < ++ = new for = < ++ for = < ++ == call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) catch call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() int int int IndexWriter PostingsEnum boolean IndexReader decl IndexerThread Directory public public throws decl_stmt int = decl_stmt int = : for = < ++ if + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new new call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() decl_stmt IndexerThread = new for = < ++ = new for = < ++ decl_stmt boolean = while ! for = < ++ if > = break else if ! if try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() for = < ++ if decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.PostingsEnum = new decl_stmt int = while call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != ++ > call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int boolean Bits IndexWriter decl IndexerThread IndexReader MockDirectoryWrapper public public throws decl_stmt int = for = < ++ if + decl_stmt org.apache.lucene.store.MockDirectoryWrapper = decl_stmt org.apache.lucene.index.IndexWriter = new new new call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() decl_stmt IndexerThread = new for = < ++ = new for = < ++ call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) for = < ++ == decl_stmt boolean = try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = catch call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() catch call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() if + if decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.util.Bits final final = for = < call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() ++ if == || ! call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() Document IndexWriter IndexWriterConfig MockDirectoryWrapper FieldType public public throws decl_stmt org.apache.lucene.store.MockDirectoryWrapper = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new if call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() instanceof call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) new protected protected return instanceof || instanceof && decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document final final = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for = < ++ call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call IndexWriter.deleter() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() protected protected return instanceof || instanceof && boolean boolean boolean decl StackTraceElement public public throws if decl_stmt java.lang.StackTraceElement = new decl_stmt boolean = decl_stmt boolean = decl_stmt boolean = for = < ++ if && && break if || = if = if = if && ! && ! if = throw new public public throws new public public throws new public public throws new public public throws new decl StackTraceElement public public throws if decl_stmt java.lang.StackTraceElement = new for = < ++ if && if = throw new public public throws new public public throws new public public throws new public public throws new IndexReader CountDownLatch DelayedIndexAndCloseRunnable Directory DelayedIndexAndCloseRunnable public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt java.util.concurrent.CountDownLatch = new decl_stmt DelayedIndexAndCloseRunnable = new decl_stmt DelayedIndexAndCloseRunnable = new call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call DelayedIndexAndCloseRunnable.start() call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.startIndexing() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() call DelayedIndexAndCloseRunnable.join() try instanceof instanceof + + decl_stmt org.apache.lucene.index.IndexReader = call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() finally call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public Document IndexWriter Field public public try decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() catch = = return decl AtomicReference Lock BaseDirectoryWrapper int LineFileDocs MockAnalyzer AtomicBoolean decl Thread int int Lock public public throws decl_stmt org.apache.lucene.store.BaseDirectoryWrapper final final = if instanceof decl_stmt int final final = decl_stmt java.util.concurrent.atomic.AtomicReference final final final < = new <> decl_stmt org.apache.lucene.analysis.MockAnalyzer = new call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() new call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() decl_stmt org.apache.lucene.util.LineFileDocs final final = new decl_stmt java.lang.Thread final final final = new decl_stmt int final final = decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.util.concurrent.locks.Lock final final = new decl_stmt java.util.concurrent.locks.Lock final final = new for = < ++ = new public public for = < && ! call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() ++ decl_stmt int final final = try switch case call Lock.lock() call Lock.lock() call Lock.lock() call Lock.lock() call Lock.lock() if + + try call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() if + + call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() new new finally call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() break case call Lock.lock() call Lock.lock() call Lock.lock() call Lock.lock() call Lock.lock() if + + try if call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() catch finally call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() call java.util.concurrent.locks.Lock.unlock() break case if + + try call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() catch break catch call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) throw new for = < ++ ! call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() int public public for = < && ! ++ decl_stmt int final final = try switch case if + + try if + + new new finally break case if + + try if catch finally break case if + + try catch break catch throw new