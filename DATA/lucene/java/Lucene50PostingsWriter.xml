org.apache.lucene.codecs.lucene50 static static org.apache.lucene.codecs.lucene50.ForUtil.MAX_DATA_SIZE import static static org.apache.lucene.codecs.lucene50.ForUtil.MAX_ENCODED_SIZE import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.BLOCK_SIZE import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.DOC_CODEC import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.MAX_SKIP_LEVELS import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.PAY_CODEC import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.POS_CODEC import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.TERMS_CODEC import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.VERSION_CURRENT import java.io.IOException import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.PushPostingsWriterBase import org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.IntBlockTermState import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.store.DataOutput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.packed.PackedInts import class org.apache.lucene.codecs.lucene50.Lucene50PostingsWriter super super extends IndexOutput int int long decl byte long int decl int int int int decl int IntBlockTermState IntBlockTermState decl int IndexOutput long int decl int decl byte ForUtil long int IndexOutput long Lucene50SkipWriter decl int int decl int int public public return new public public throws public public call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.setField(boolean,boolean,boolean) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.setField(boolean,boolean,boolean) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.setField(boolean,boolean,boolean) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.setField(boolean,boolean,boolean) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.setField(boolean,boolean,boolean) = if if || return else return else return public public = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() if = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() if || = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() = = - call Lucene50SkipWriter.resetSkip() call Lucene50SkipWriter.resetSkip() call Lucene50SkipWriter.resetSkip() call Lucene50SkipWriter.resetSkip() call Lucene50SkipWriter.resetSkip() int public public throws if != - && == call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.bufferSkip(int,int,long,long,int,int) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.bufferSkip(int,int,long,long,int,int) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.bufferSkip(int,int,long,long,int,int) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.bufferSkip(int,int,long,long,int,int) call org.apache.lucene.codecs.lucene50.Lucene50SkipWriter.bufferSkip(int,int,long,long,int,int) decl_stmt int final final = - if < || > && <= throw new + + + + = if = ++ ++ if == call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) if call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) = = = public public throws if > throw new + + + + if < throw new + + = - if if == || == = else = if + > = + += if assert >= assert >= = - = - = ++ = if == call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) if call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() = if call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) = public public throws if == = if != if != = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() = = = int int int int int long int IntBlockTermState int int int long int public public throws decl_stmt IntBlockTermState = assert > assert == : + + decl_stmt int final final if == = else = - for = < ++ decl_stmt int final final = decl_stmt int final final = if ! call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() else if == call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << | else call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() decl_stmt long final final if assert != - if > = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() - else = - if > decl_stmt int = - decl_stmt int = - decl_stmt int = for = < ++ decl_stmt int final final = if decl_stmt int final final = if != = call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << | call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() else call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << if != call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() += else call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() if decl_stmt int = decl_stmt int = if == call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << else call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() << | call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() = if assert == = else = - decl_stmt long if > = call Lucene50SkipWriter.writeSkip() call Lucene50SkipWriter.writeSkip() call Lucene50SkipWriter.writeSkip() call Lucene50SkipWriter.writeSkip() call Lucene50SkipWriter.writeSkip() - else = - = = = = = = = = = = IntBlockTermState public public throws decl_stmt IntBlockTermState = if = = - if = - if || = - if != - if if != - if != - = boolean public public throws decl_stmt boolean = try if != if != if != = finally if else = = =