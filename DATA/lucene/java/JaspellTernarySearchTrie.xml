org.apache.lucene.search.suggest.jaspell java.io.BufferedReader import java.io.IOException import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.util.List import java.util.Locale import java.util.Vector import java.util.zip.GZIPInputStream import org.apache.lucene.util.Accountable import org.apache.lucene.util.IOUtils import org.apache.lucene.util.RamUsageEstimator import class annotation org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie super super implements Locale int TSTNode int long TSTNode public public decl_stmt long = + for = < ++ decl_stmt TSTNode = if != += call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() return private static private static return - = return private private if == return = while != = int boolean int boolean TSTNode TSTNode int int private private if == return if != || != return decl_stmt TSTNode = decl_stmt boolean = == decl_stmt boolean = == decl_stmt int if == = else if == = else if == = else = return if && = return if = = return if = = return decl_stmt int = - decl_stmt int = - decl_stmt int decl_stmt TSTNode if == if < ++ else ++ if > = = else = = while != = = = = if ! = if ! = return TSTNode public public decl_stmt TSTNode = if == return return TSTNode String Float public public decl_stmt java.lang.String = decl_stmt TSTNode = if == return decl_stmt java.lang.Float = if == = new else = new call java.lang.Float.intValue() call java.lang.Float.intValue() call java.lang.Float.intValue() call java.lang.Float.intValue() call java.lang.Float.intValue() + return TSTNode TSTNode StringBuilder protected protected decl_stmt java.lang.StringBuilder = new call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + decl_stmt TSTNode decl_stmt TSTNode = = while != if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + = = call java.lang.StringBuilder.reverse() call java.lang.StringBuilder.reverse() call java.lang.StringBuilder.reverse() call java.lang.StringBuilder.reverse() call java.lang.StringBuilder.reverse() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return int TSTNode int protected protected if == || == || == return decl_stmt TSTNode = decl_stmt int = while if == return decl_stmt int = if == ++ if == return = else if < = else = int TSTNode int protected protected throws if == throw new if == throw new if == = new decl_stmt TSTNode = decl_stmt int = while decl_stmt int = if == ++ if == return if == = new = else if < if == = new = else if == = new = public < public < return public < public < return < - : new < int int boolean decl List private < private < < if == || != - && >= || < || >= return decl_stmt int = decl_stmt java.util.List < = if > || < = decl_stmt int = == : - decl_stmt boolean = >= : == if == + && && != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = + if > || > = return public < public < return TSTNode decl Vector public < public < decl_stmt org.apache.lucene.spatial3d.geom.Vector < = new <> decl_stmt TSTNode = if == return if != call decl Vector.addElement() call decl Vector.addElement() call decl Vector.addElement() call decl Vector.addElement() call decl Vector.addElement() return < - : public public return protected protected return public public return protected protected return public public = int private private if == return decl_stmt int = = = if if != ++ else ++ return public public public public if < = else if > = else = public public = < - : protected < protected < return < - : new < decl List private < private < < if == return decl_stmt java.util.List < = if != - && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() >= return if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = return long TSTNode public public decl_stmt long = decl_stmt TSTNode final final = if != += call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() call TSTNode.ramBytesUsed() return