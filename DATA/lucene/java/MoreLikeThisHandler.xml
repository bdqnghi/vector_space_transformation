org.apache.solr.handler java.io.IOException import java.io.Reader import java.lang.invoke.MethodHandles import java.net.MalformedURLException import java.net.URL import java.util.ArrayList import java.util.Collection import java.util.Comparator import java.util.Iterator import java.util.List import java.util.Map import java.util.regex.Pattern import org.apache.lucene.document.Document import org.apache.lucene.index.ExitableDirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import org.apache.lucene.queries.mlt.MoreLikeThis import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.solr.common.SolrException import org.apache.solr.common.StringUtils import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.FacetParams import org.apache.solr.common.params.MoreLikeThisParams.TermStyle import org.apache.solr.common.params.MoreLikeThisParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ContentStream import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.handler.component.FacetComponent import org.apache.solr.request.SimpleFacets import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.search.DocIterator import org.apache.solr.search.DocList import org.apache.solr.search.DocListAndSet import org.apache.solr.search.QParser import org.apache.solr.search.QParserPlugin import org.apache.solr.search.QueryParsing import org.apache.solr.search.ReturnFields import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.SolrQueryTimeoutImpl import org.apache.solr.search.SolrReturnFields import org.apache.solr.search.SortSpec import org.apache.solr.search.SyntaxError import org.apache.solr.util.SolrPluginUtils import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.MoreLikeThisHandler super super extends Pattern Logger public public DocIterator QParser decl List boolean decl List Query int int String int TermStyle decl List decl String ReturnFields int SolrParams decl List Reader int DocList DocListAndSet boolean SortSpec long decl NamedList SolrIndexSearcher SimpleFacets decl Iterator String boolean decl Iterable MoreLikeThisHelper decl String QParser public public throws decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt long = long call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) - if > try decl_stmt ReturnFields = new decl_stmt int = if call ReturnFields.wantsScore() call ReturnFields.wantsScore() call ReturnFields.wantsScore() call ReturnFields.wantsScore() call ReturnFields.wantsScore() |= decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.solr.search.SortSpec = decl_stmt java.util.List < = try if != decl_stmt org.apache.solr.search.QParser = = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() = call org.apache.solr.search.QParser.getSort(boolean) call org.apache.solr.search.QParser.getSort(boolean) call org.apache.solr.search.QParser.getSort(boolean) call org.apache.solr.search.QParser.getSort(boolean) call org.apache.solr.search.QParser.getSort(boolean) decl_stmt java.lang.String = if != && != = new <> for : if != && != decl_stmt org.apache.solr.search.QParser = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() catch throw new decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt MoreLikeThisHelper = new decl_stmt TermStyle = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.util.List < = == : new <> call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() call MoreLikeThisHelper.mlt() decl_stmt DocListAndSet = decl_stmt java.io.Reader = try if == || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() < decl_stmt java.lang.Iterable < = if != decl_stmt java.util.Iterator < = call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() if call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() throw new decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) if != = call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() else if != decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt org.apache.solr.search.DocList = call org.apache.solr.search.SolrIndexSearcher.getDocList(Query,DocSet,Sort,int,int) call org.apache.solr.search.SolrIndexSearcher.getDocList(Query,DocSet,Sort,int,int) call org.apache.solr.search.SolrIndexSearcher.getDocList(Query,DocSet,Sort,int,int) call org.apache.solr.search.SolrIndexSearcher.getDocList(Query,DocSet,Sort,int,int) call org.apache.solr.search.SolrIndexSearcher.getDocList(Query,DocSet,Sort,int,int) if decl_stmt org.apache.solr.search.DocIterator = call org.apache.solr.search.DocList.iterator() call org.apache.solr.search.DocList.iterator() call org.apache.solr.search.DocList.iterator() call org.apache.solr.search.DocList.iterator() call org.apache.solr.search.DocList.iterator() if call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() decl_stmt int = call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() = call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() call MoreLikeThisHelper.getMoreLikeThis() else throw new finally if != call Reader.close() call Reader.close() call Reader.close() call Reader.close() call Reader.close() if == = new if != if == decl_stmt org.apache.solr.common.util.NamedList < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else decl_stmt java.util.List < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) if == else decl_stmt org.apache.solr.request.SimpleFacets = new decl_stmt boolean = decl_stmt boolean = = if == decl_stmt java.lang.String = if != for : if = else if = else = = if == try decl_stmt org.apache.solr.common.util.NamedList < = call MoreLikeThisHelper.getRawMLTQuery() call MoreLikeThisHelper.getRawMLTQuery() call MoreLikeThisHelper.getRawMLTQuery() call MoreLikeThisHelper.getRawMLTQuery() call MoreLikeThisHelper.getRawMLTQuery() if != if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call decl String.add() call decl String.add() call decl String.add() call decl String.add() call decl String.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() catch catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + finally public public return public public return public public return Query BooleanQuery decl Builder float BoostQuery decl BooleanQuery private private decl_stmt org.apache.lucene.search.BooleanQuery = if > decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() for : decl_stmt org.apache.lucene.search.Query = decl_stmt float = if instanceof decl_stmt org.apache.lucene.search.BoostQuery = = call float.getQuery() call float.getQuery() call float.getQuery() call float.getQuery() call float.getQuery() = call float.getBoost() call float.getBoost() call float.getBoost() call float.getBoost() call float.getBoost() decl_stmt java.lang.Float = = != new * : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return Document decl Builder decl BooleanQuery public public < < throws decl_stmt org.apache.lucene.document.Document = = = if != decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt DocListAndSet = new if = else = return DocListAndSet public public < < throws = = if != decl_stmt DocListAndSet = new if = else = return DocIterator decl BooleanQuery decl NamedList String IndexSchema int BooleanQuery public < public < throws decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.solr.common.util.NamedList < = new <> decl_stmt org.apache.solr.search.DocIterator = while call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() decl_stmt int = call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() decl_stmt java.lang.String = call org.apache.solr.schema.IndexSchema.printableUniqueKey(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.printableUniqueKey(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.printableUniqueKey(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.printableUniqueKey(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.printableUniqueKey(org,apache,lucene,document,Document) decl_stmt org.apache.lucene.search.BooleanQuery = if call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() == return = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return Query decl Collection float BoostQuery InterestingTerm private private < decl_stmt java.util.Collection < = for : decl_stmt org.apache.lucene.search.Query = decl_stmt float = if instanceof decl_stmt org.apache.lucene.search.BoostQuery = = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() = call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() decl_stmt InterestingTerm = new = = public public return public public return public public try return new new catch return