org.apache.lucene.facet java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.List import java.util.Map import org.apache.lucene.facet.taxonomy.CachedOrdinalsReader import org.apache.lucene.facet.taxonomy.DocValuesOrdinalsReader import org.apache.lucene.facet.taxonomy.FastTaxonomyFacetCounts import org.apache.lucene.facet.taxonomy.OrdinalsReader import org.apache.lucene.facet.taxonomy.TaxonomyFacetCounts import org.apache.lucene.facet.taxonomy.TaxonomyReader import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.facet.FacetTestCase super super extends public public throws return Facets OrdinalsReader public public throws decl_stmt Facets if = new else decl_stmt OrdinalsReader = new if = new = new return decl String protected protected decl_stmt java.lang.String = new for = < ++ = return protected protected for = < ++ if return return decl List TestDoc protected < protected < decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.index.TestDoc = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = = new for = < ++ = if < break if + + + for = < ++ if != + + + return protected protected < for : int double int protected protected decl_stmt double = - decl_stmt int = decl_stmt int = while <= if < && == ++ else if > - new < public public assert == return new new = if < = ++ public public assert == return new new protected protected < new < public public if > return - else if < return else return new new public public if > return - else if < return else return new new protected protected < new < public public if > return - else if > return else return public public if > return - else if > return else return float decl Map decl Map protected protected < < decl_stmt float = decl_stmt java.util.Map < = new <> for = < ++ <= = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = decl_stmt java.util.Map < = new <> for = < ++ call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() <= = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() protected protected / for = < ++ /