org.apache.lucene.queryparser.flexible.standard.processors java.util.List import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.Modifier import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl import org.apache.lucene.queryparser.flexible.standard.nodes.BooleanModifierNode import class org.apache.lucene.queryparser.flexible.standard.processors.BooleanSingleChildOptimizationQueryNodeProcessor super super extends ModifierQueryNode decl List QueryNode protected protected throws if instanceof decl_stmt java.util.List < = if != && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.QueryNode = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if instanceof decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode = if instanceof || call org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.getModifier() call org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.getModifier() call org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.getModifier() call org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.getModifier() call org.apache.lucene.queryparser.flexible.core.nodes.ModifierQueryNode.getModifier() == return else return return protected protected throws return protected < protected < < throws return