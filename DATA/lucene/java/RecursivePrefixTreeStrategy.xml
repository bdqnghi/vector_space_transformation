org.apache.lucene.spatial.prefix java.util.ArrayList import java.util.Iterator import java.util.List import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.search.Query import org.apache.lucene.spatial.prefix.tree.Cell import org.apache.lucene.spatial.prefix.tree.CellIterator import org.apache.lucene.spatial.prefix.tree.LegacyCell import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.query.UnsupportedSpatialOperation import class org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy super super extends boolean boolean int public public return public public = public public return public public = public public return public public = StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl List protected < protected < < if instanceof || ! return decl_stmt java.util.List < = new <> return call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() CellIterator int Cell private private < if ! instanceof throw new + if == if return if != decl_stmt int = decl_stmt org.apache.lucene.spatial.prefix.tree.CellIterator = while call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() if ++ if == && != do - -- > return return int Shape SpatialOperation public public decl_stmt org.apache.lucene.spatial.query.SpatialOperation final final = decl_stmt java.awt.Shape = decl_stmt int = if == return new else if == return new - else if == return new throw new