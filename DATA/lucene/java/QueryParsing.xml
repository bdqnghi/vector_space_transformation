org.apache.solr.search org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.LegacyNumericRangeQuery import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.search.WildcardQuery import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRefBuilder import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.parser.QueryParser import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import class org.apache.solr.search.QueryParsing char String String int String int String String String String String public static public static final final final final decl_stmt java.lang.String = if == = return : public static public static final final final final return != : public static public static throws return char char int String int StrParser boolean String public static public static throws decl_stmt int = if ! return decl_stmt org.apache.solr.search.StrParser = new += for decl_stmt char = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() if == return + decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == throw new + + + + decl_stmt java.lang.String = = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() if != = = else ++ = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() decl_stmt boolean = if == ++ = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() = if == || == = call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() else decl_stmt int = for if >= throw new + + + + decl_stmt char = call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() if == || = call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() break ++ if if != = if != int StringBuilder char int public static public static decl_stmt int = decl_stmt int = if > && != for < ++ decl_stmt char = if || == break if >= return decl_stmt java.lang.StringBuilder = new + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < ++ decl_stmt char = if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() ModifiableSolrParams int String public static public static throws if == || ! return decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new decl_stmt int = decl_stmt java.lang.String = call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) if == = call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) else return FieldType static static throws decl_stmt org.apache.solr.schema.FieldType = = if == + + return static static throws if != try catch else CharsRefBuilder static static throws if != try decl_stmt org.apache.lucene.util.CharsRefBuilder = new call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() catch else Term FieldType Number Query BoostQuery Number int Term String boolean boolean public static public static throws decl_stmt int = & ~ | if instanceof decl_stmt org.apache.lucene.search.TermQuery = decl_stmt org.apache.lucene.index.Term = call BoostQuery.getTerm() call BoostQuery.getTerm() call BoostQuery.getTerm() call BoostQuery.getTerm() call BoostQuery.getTerm() decl_stmt org.apache.solr.schema.FieldType = call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() else if instanceof decl_stmt org.apache.lucene.search.TermRangeQuery = decl_stmt java.lang.String = call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() decl_stmt org.apache.solr.schema.FieldType = call BoostQuery.includesLower() call BoostQuery.includesLower() call BoostQuery.includesLower() call BoostQuery.includesLower() call BoostQuery.includesLower() : decl_stmt org.apache.lucene.util.BytesRef = call BoostQuery.getLowerTerm() call BoostQuery.getLowerTerm() call BoostQuery.getLowerTerm() call BoostQuery.getLowerTerm() call BoostQuery.getLowerTerm() decl_stmt org.apache.lucene.util.BytesRef = call BoostQuery.getUpperTerm() call BoostQuery.getUpperTerm() call BoostQuery.getUpperTerm() call BoostQuery.getUpperTerm() call BoostQuery.getUpperTerm() if == else if == else call BoostQuery.includesUpper() call BoostQuery.includesUpper() call BoostQuery.includesUpper() call BoostQuery.includesUpper() call BoostQuery.includesUpper() : else if instanceof decl_stmt org.apache.lucene.search.LegacyNumericRangeQuery = decl_stmt java.lang.String = call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() call BoostQuery.getField() decl_stmt org.apache.solr.schema.FieldType = call BoostQuery.includesMin() call BoostQuery.includesMin() call BoostQuery.includesMin() call BoostQuery.includesMin() call BoostQuery.includesMin() : decl_stmt java.lang.Number = call BoostQuery.getMin() call BoostQuery.getMin() call BoostQuery.getMin() call BoostQuery.getMin() call BoostQuery.getMin() decl_stmt java.lang.Number = call BoostQuery.getMax() call BoostQuery.getMax() call BoostQuery.getMax() call BoostQuery.getMax() call BoostQuery.getMax() if == else call Number.toString() call Number.toString() call Number.toString() call Number.toString() call Number.toString() if == else call Number.toString() call Number.toString() call Number.toString() call Number.toString() call Number.toString() call BoostQuery.includesMax() call BoostQuery.includesMax() call BoostQuery.includesMax() call BoostQuery.includesMax() call BoostQuery.includesMax() : else if instanceof decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt boolean = if call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() != || call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() || & | != = if decl_stmt boolean = for : call BoostQuery.clauses() call BoostQuery.clauses() call BoostQuery.clauses() call BoostQuery.clauses() call BoostQuery.clauses() if ! else = if else if decl_stmt org.apache.lucene.search.Query = | if if call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() > call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() call BoostQuery.getMinimumNumberShouldMatch() if call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() call BoostQuery.isCoordDisabled() else if instanceof decl_stmt org.apache.lucene.search.PrefixQuery = decl_stmt org.apache.lucene.index.Term = call BoostQuery.getPrefix() call BoostQuery.getPrefix() call BoostQuery.getPrefix() call BoostQuery.getPrefix() call BoostQuery.getPrefix() decl_stmt org.apache.solr.schema.FieldType = call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() else if instanceof else if instanceof else if instanceof else if instanceof decl_stmt org.apache.solr.search.WrappedQuery = call BoostQuery.getOptions() call BoostQuery.getOptions() call BoostQuery.getOptions() call BoostQuery.getOptions() call BoostQuery.getOptions() call BoostQuery.getWrappedQuery() call BoostQuery.getWrappedQuery() call BoostQuery.getWrappedQuery() call BoostQuery.getWrappedQuery() call BoostQuery.getWrappedQuery() else if instanceof decl_stmt org.apache.lucene.search.BoostQuery = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() | call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() else + + + StringBuilder public static public static try decl_stmt java.lang.StringBuilder = new return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() catch throw new decl List public static < public static < < decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return