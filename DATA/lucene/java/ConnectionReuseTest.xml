org.apache.solr.client.solrj java.io.IOException import java.net.URL import java.util.concurrent.ExecutionException import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicInteger import org.apache.http.client.methods.Configurable import org.apache.http.client.protocol.HttpClientContext import org.apache.http.HttpClientConnection import org.apache.http.HttpConnectionMetrics import org.apache.http.HttpException import org.apache.http.HttpHost import org.apache.http.HttpRequest import org.apache.http.HttpVersion import org.apache.http.client.HttpClient import org.apache.http.conn.ConnectionPoolTimeoutException import org.apache.http.conn.ConnectionRequest import org.apache.http.conn.routing.HttpRoute import org.apache.http.impl.client.CloseableHttpClient import org.apache.http.impl.conn.PoolingHttpClientConnectionManager import org.apache.http.message.BasicHttpRequest import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient import org.apache.solr.client.solrj.impl.HttpClientUtil import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.cloud.AbstractFullDistribZkTestBase import org.apache.solr.update.AddUpdateCommand import org.apache.solr.util.TestInjection import org.junit.BeforeClass import org.junit.Test import class annotation org.apache.solr.client.solrj.ConnectionReuseTest super super extends AtomicInteger HttpClientContext public static public static if = public static public static return public static public static return AddUpdateCommand HttpHost PoolingHttpClientConnectionManager URL HttpRoute HttpConnectionMetrics int SolrClient boolean int int HttpClientConnection HttpClientConnection int int ConnectionRequest CloseableHttpClient public public throws decl_stmt java.net.URL = new decl_stmt PoolingHttpClientConnectionManager = new decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt CloseableHttpClient = try decl_stmt int = if == = call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() else if == = call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() else if == = else throw new decl_stmt HttpHost = new call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() : decl_stmt HttpRoute = new decl_stmt ConnectionRequest = decl_stmt HttpClientConnection = call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() - decl_stmt int = decl_stmt int = decl_stmt int = for = < ++ for = < ++ decl_stmt boolean = decl_stmt org.apache.solr.update.AddUpdateCommand = new = call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() try call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) catch if ! && > && < - && instanceof && > ++ = if instanceof = new new call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() : = call PoolingHttpClientConnectionManager.requestConnection() call PoolingHttpClientConnectionManager.requestConnection() call PoolingHttpClientConnectionManager.requestConnection() call PoolingHttpClientConnectionManager.requestConnection() call PoolingHttpClientConnectionManager.requestConnection() decl_stmt HttpClientConnection = decl_stmt HttpConnectionMetrics = call HttpClientConnection.getMetrics() call HttpClientConnection.getMetrics() call HttpClientConnection.getMetrics() call HttpClientConnection.getMetrics() call HttpClientConnection.getMetrics() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() call PoolingHttpClientConnectionManager.releaseConnection() - + call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() if instanceof decl_stmt int = + + + + + call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() - call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() < else + call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() call SolrClient.getClass() + + call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() * + <= call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() call HttpConnectionMetrics.getRequestCount() finally call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() HttpClientConnection public public throws decl_stmt HttpClientConnection = return HttpRequest public public throws decl_stmt HttpRequest = new call HttpRequest.addHeader() call HttpRequest.addHeader() call HttpRequest.addHeader() call HttpRequest.addHeader() call HttpRequest.addHeader() if ! ConnectionRequest public public decl_stmt ConnectionRequest = return