org.apache.lucene.queryparser.flexible.spans org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler import org.apache.lucene.queryparser.flexible.core.nodes.OrQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline import org.apache.lucene.queryparser.flexible.standard.parser.StandardSyntaxParser import org.apache.lucene.search.Query import org.apache.lucene.search.spans.SpanQuery import org.apache.lucene.search.spans.SpanTermQuery import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.queryparser.flexible.spans.TestSpanQueryParserSimpleSample super super extends SpansQueryTreeBuilder QueryConfigHandler QueryNodeProcessorPipeline QueryNode SyntaxParser SpanQuery public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser = new decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.QueryNode = call SyntaxParser.parse() call SyntaxParser.parse() call SyntaxParser.parse() call SyntaxParser.parse() call SyntaxParser.parse() decl_stmt org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler = new call QueryConfigHandler.set() call QueryConfigHandler.set() call QueryConfigHandler.set() call QueryConfigHandler.set() call QueryConfigHandler.set() decl_stmt org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline = new call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) new call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.add(int,QueryNodeProcessor) new if = call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.process(QueryNode) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.process(QueryNode) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.process(QueryNode) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.process(QueryNode) call org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorPipeline.process(QueryNode) if decl_stmt org.apache.lucene.queryparser.flexible.spans.SpansQueryTreeBuilder = new decl_stmt org.apache.lucene.search.spans.SpanQuery = call SpansQueryTreeBuilder.build() call SpansQueryTreeBuilder.build() call SpansQueryTreeBuilder.build() call SpansQueryTreeBuilder.build() call SpansQueryTreeBuilder.build() instanceof call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString()