org.apache.solr.core java.io.IOException import java.io.InputStream import java.nio.charset.CharacterCodingException import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.util.Arrays import java.util.HashMap import java.util.List import java.util.Map import java.util.jar.JarEntry import java.util.jar.JarOutputStream import junit.framework.Assert import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.core.KeywordTokenizerFactory import org.apache.lucene.analysis.ngram.NGramFilterFactory import org.apache.lucene.analysis.util.ResourceLoaderAware import org.apache.lucene.analysis.util.TokenFilterFactory import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.apache.solr.handler.admin.LukeRequestHandler import org.apache.solr.handler.component.FacetComponent import org.apache.solr.response.JSONResponseWriter import org.apache.solr.util.plugin.SolrCoreAware import static static org.apache.solr.core.SolrResourceLoader.assertAwareCompatibility import static static org.hamcrest.core.Is.is import class org.apache.solr.core.ResourceLoaderTest super super extends public public throws try = new Path Path public public throws decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) new decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) try = new catch decl Object decl Class public public throws decl_stmt java.lang.Class < = new new <> new new <> decl_stmt java.lang.Object = new new new new for : try + + + catch = new new new = new new new <> new new new <> for : try + + + catch String decl List SolrResourceLoader InputStream decl byte decl byte public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.core.SolrResourceLoader = new decl_stmt java.io.InputStream = call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) try decl_stmt byte final final final = new - - - decl_stmt byte final final final = new call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) + + finally try call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch decl_stmt java.util.List < = call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() String SolrResourceLoader public public throws decl_stmt java.lang.String = decl_stmt org.apache.solr.core.SolrResourceLoader = new try call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) call org.apache.solr.core.SolrResourceLoader.getLines(String,Charset) catch instanceof call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() Path Path Path SolrResourceLoader public public throws decl_stmt java.nio.file.Path = decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) try = new call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) new decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) try = new call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) new try = new call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) new decl_stmt org.apache.solr.core.SolrResourceLoader = new call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.addToClassLoader(URL) call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.getClassLoader() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() public public return SolrResourceLoader public public throws decl_stmt org.apache.solr.core.SolrResourceLoader = new call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) new new new < call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close() call org.apache.solr.core.SolrResourceLoader.close()