org.apache.lucene.document java.io.IOException import org.apache.lucene.geo.GeoUtils import org.apache.lucene.geo.Rectangle import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PointValues import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.search.ConstantScoreScorer import org.apache.lucene.search.ConstantScoreWeight import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import org.apache.lucene.util.DocIdSetBuilder import org.apache.lucene.util.NumericUtils import org.apache.lucene.util.SloppyMath import org.apache.lucene.util.StringHelper import static static org.apache.lucene.geo.GeoEncodingUtils.decodeLatitude import static static org.apache.lucene.geo.GeoEncodingUtils.decodeLongitude import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLatitude import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLongitude import class org.apache.lucene.document.LatLonPointDistanceQuery super super extends double String double double Rectangle double DocIdSet DocIdSetIterator double double double double byte double PointValues DocIdSetBuilder LeafReader FieldInfo double double public public throws decl_stmt org.apache.lucene.geo.Rectangle = decl_stmt byte final final = new decl_stmt byte final final = new decl_stmt byte final final = new decl_stmt byte final final = new decl_stmt byte final final = new if call org.apache.lucene.geo.Rectangle.crossesDateline() call org.apache.lucene.geo.Rectangle.crossesDateline() call org.apache.lucene.geo.Rectangle.crossesDateline() call org.apache.lucene.geo.Rectangle.crossesDateline() call org.apache.lucene.geo.Rectangle.crossesDateline() else decl_stmt double final final = decl_stmt double final final = return new public public throws decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PointValues = call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() if == return decl_stmt org.apache.lucene.index.FieldInfo = call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() if == return decl_stmt org.apache.lucene.util.DocIdSetBuilder = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() new public public call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) public public call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = if <= call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = decl_stmt double = decl_stmt double = if < || || && + < || || - || || - || || - || || - || || - if > && > && > && > return if - < && - < && <= && <= && <= && <= return else return decl_stmt org.apache.lucene.search.DocIdSet = call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() decl_stmt org.apache.lucene.search.DocIdSetIterator final final = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if == return return new double DocIdSet DocIdSetIterator double double double PointValues DocIdSetBuilder LeafReader FieldInfo double double public public throws decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PointValues = call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() if == return decl_stmt org.apache.lucene.index.FieldInfo = call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() if == return decl_stmt org.apache.lucene.util.DocIdSetBuilder = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() new public public call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) public public call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = if <= call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = decl_stmt double = decl_stmt double = if < || || && + < || || - || || - || || - || || - || || - if > && > && > && > return if - < && - < && <= && <= && <= && <= return else return decl_stmt org.apache.lucene.search.DocIdSet = call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() decl_stmt org.apache.lucene.search.DocIdSetIterator final final = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if == return return new public public public public double double public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = if <= double double double double public public if > || < return if > || < && < return decl_stmt double = decl_stmt double = decl_stmt double = decl_stmt double = if < || || && + < || || - || || - || || - || || - || || - if > && > && > && > return if - < && - < && <= && <= && <= && <= return else return double long long double double long static static if >= return decl_stmt long = decl_stmt long = while <= decl_stmt long = + >>> decl_stmt double = decl_stmt double = if == return else if > = - else = + decl_stmt double = assert > return public public return public public return public public return public public return int int long public public decl_stmt int final final = decl_stmt int = = * + call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() decl_stmt long = = * + ^ >>> = = * + ^ >>> = = * + ^ >>> return LatLonPointDistanceQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.document.LatLonPointDistanceQuery = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) == return if != return if != return if != return return StringBuilder public public decl_stmt java.lang.StringBuilder = new if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()