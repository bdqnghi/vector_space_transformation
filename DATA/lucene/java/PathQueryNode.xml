org.apache.lucene.queryparser.flexible.core.nodes java.util.ArrayList import java.util.List import java.util.Locale import org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax import org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax.Type import class org.apache.lucene.queryparser.flexible.core.nodes.PathQueryNode super super extends decl List QueryText public public throws decl_stmt QueryText = = = = return public public return public public return public public return public public return + + + + public < public < return public public < = public public return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() public public return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl List public < public < decl_stmt java.util.List < = new <> for = < ++ try call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() catch return StringBuilder private private decl_stmt java.lang.StringBuilder = new for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() StringBuilder CharSequence public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : decl_stmt java.lang.CharSequence = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() QueryText public public decl_stmt QueryText = return + + + + + + decl List PathQueryNode public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.PathQueryNode = if != decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = return