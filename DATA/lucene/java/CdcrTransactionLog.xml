org.apache.solr.update java.io.File import java.io.IOException import java.io.RandomAccessFile import java.lang.invoke.MethodHandles import java.nio.channels.Channels import java.nio.file.Files import java.util.Collection import org.apache.solr.common.SolrException import org.apache.solr.common.util.FastOutputStream import org.apache.solr.common.util.JavaBinCodec import org.apache.solr.common.util.ObjectReleaseTracker import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.CdcrTransactionLog super super extends boolean boolean long Logger public public return ChannelFastInputStream long long private private try if decl_stmt long = decl_stmt long = - - - - if < return decl_stmt ChannelFastInputStream = new return call ChannelFastInputStream.readInt() call ChannelFastInputStream.readInt() call ChannelFastInputStream.readInt() call ChannelFastInputStream.readInt() call ChannelFastInputStream.readInt() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + return LogCodec long public public decl_stmt LogCodec = new synchronized try decl_stmt long = if == = call LogCodec.init() call LogCodec.init() call LogCodec.init() call LogCodec.init() call LogCodec.init() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeInt() call LogCodec.writeInt() call LogCodec.writeInt() call LogCodec.writeInt() call LogCodec.writeInt() | call LogCodec.writeLong() call LogCodec.writeLong() call LogCodec.writeLong() call LogCodec.writeLong() call LogCodec.writeLong() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() call LogCodec.writeTag() + call LogCodec.writeStr() call LogCodec.writeStr() call LogCodec.writeStr() call LogCodec.writeStr() call LogCodec.writeStr() assert == = return catch throw new public public return new Object public public throws decl_stmt java.lang.Object = if != ++ if synchronized = return public public if == public public return public public try if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + synchronized if != = = = = if try catch catch throw new finally assert long synchronized synchronized try if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + = new = decl_stmt long = = = new new catch throw new