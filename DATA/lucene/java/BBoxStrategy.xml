org.apache.lucene.spatial.bbox org.apache.lucene.document.DoubleDocValuesField import org.apache.lucene.document.DoublePoint import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.LegacyDoubleField import org.apache.lucene.document.StoredField import org.apache.lucene.document.StringField import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.Term import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.LegacyNumericRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.spatial.SpatialStrategy import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.query.UnsupportedSpatialOperation import org.apache.lucene.spatial.util.DistanceToShapeValueSource import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.LegacyNumericUtils import org.apache.lucene.util.NumericUtils import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import class org.apache.lucene.spatial.bbox.BBoxStrategy super super extends String String boolean String String FieldType FieldType String String String String FieldType String String FieldType String boolean boolean FieldType int public static public static return new public static public static return new public public return public public return decl Field int private private decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt int = - if ++ = new ++ = new ++ = new ++ = new if ++ = new ++ = new ++ = new ++ = new if ++ = new ++ = new ++ = new ++ = new if != ++ = new ++ = new ++ = new ++ = new if != ++ = new : assert == - return public public return new public public return new public public return new Shape SpatialOperation Rectangle Query public public decl_stmt java.awt.Shape = if ! instanceof throw new + decl_stmt org.apache.lucene.geo.Rectangle = decl_stmt org.apache.lucene.search.Query decl_stmt org.apache.lucene.spatial.query.SpatialOperation = if == = else if == = else if == = else if == = else if == = else if == = else if == = else throw new return new Query Query Query Query Query Query Query double Query Query Query Query Query Query Query decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query if ! decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = if ! = else decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = if == && == decl_stmt double = * - = = else decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = - = return Query Query Query Query Query decl Builder Query Query Query Query decl BooleanQuery Query Query Query Query Query decl Builder decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query if ! decl_stmt org.apache.lucene.search.Query = if == - && decl_stmt org.apache.lucene.util.fst.Builder = new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() = call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() decl_stmt org.apache.lucene.search.Query = if == && decl_stmt org.apache.lucene.util.fst.Builder = new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() - = call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = if ! = else decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = = else decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = - decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = = return Query Query Query Query decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = return decl BooleanQuery Query Query decl Builder Query decl_stmt org.apache.lucene.search.Query if decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = : = else = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl_stmt org.apache.lucene.util.fst.Builder = new for : if != call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() Query Query Query Query Query Query Query Query Query Query double Query Query Query Query Query Query Query Query Query Query decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query if && == - && == return else if ! decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt double = if == - = else if == = - if != && decl_stmt org.apache.lucene.search.Query = = = else decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = - decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = = return private private return new new : decl BooleanQuery private private if ! assert ! return decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() BytesRefBuilder private private if return else if != decl_stmt org.apache.lucene.util.BytesRefBuilder = new return new new call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() throw new private private if if == = if == = if == = if == = return else if != return call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() throw new