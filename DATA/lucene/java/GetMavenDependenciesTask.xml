org.apache.lucene.dependencies org.apache.tools.ant.BuildException import org.apache.tools.ant.Project import org.apache.tools.ant.Task import org.apache.tools.ant.types.Resource import org.apache.tools.ant.types.ResourceCollection import org.apache.tools.ant.types.resources.FileResource import org.apache.tools.ant.types.resources.Resources import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.NodeList import org.xml.sax.SAXException import java.io.File import java.io.FileInputStream import java.io.FileNotFoundException import java.io.FileOutputStream import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.OutputStreamWriter import java.io.Reader import java.io.Writer import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.List import java.util.Map import java.util.Properties import java.util.Set import java.util.SortedMap import java.util.SortedSet import java.util.TreeMap import java.util.TreeSet import java.util.regex.Matcher import java.util.regex.Pattern import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.parsers.ParserConfigurationException import javax.xml.xpath.XPath import javax.xml.xpath.XPathConstants import javax.xml.xpath.XPathExpressionException import javax.xml.xpath.XPathFactory import class org.apache.lucene.dependencies.GetMavenDependenciesTask super super extends Pattern String File decl Map decl Map decl Set decl Map Pattern Pattern decl SortedMap Pattern Properties Pattern XPath decl Set String decl Map File Pattern decl Set File Resources String int File decl Map DocumentBuilder public public call Resources.add() call Resources.add() call Resources.add() call Resources.add() call Resources.add() public public = : public public = public public = public public = public public throws = + + FileOutputStream Writer private private decl_stmt Writer = try decl_stmt java.io.FileOutputStream = new = new call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) catch throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + catch throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + finally if != try call Writer.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() catch File Resource decl Iterator private private decl_stmt java.util.Iterator < = < call Resources.iterator() call Resources.iterator() call Resources.iterator() call Resources.iterator() call Resources.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt sun.misc.Resource final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call Resource.isExists() call Resource.isExists() call Resource.isExists() call Resource.isExists() call Resource.isExists() throw new + call Resource.getName() call Resource.getName() call Resource.getName() call Resource.getName() call Resource.getName() if ! instanceof throw new + call Resource.getName() call Resource.getName() call Resource.getName() call Resource.getName() call Resource.getName() + + call Resource.getClass() call Resource.getClass() call Resource.getClass() call Resource.getClass() call Resource.getClass() decl_stmt File = try catch throw catch throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + + int boolean decl Set decl Map decl SortedSet decl SortedSet String ExternalDependency private private decl_stmt java.util.Map < < = new <> for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.util.TreeSet < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Set < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : if ! call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Set < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : decl_stmt int = decl_stmt boolean = if - != = = decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : if == if ! call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() && == call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() || ! call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt ExternalDependency = new call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = + + if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() || call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() && call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = new call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() StringBuilder decl SortedSet StringBuilder StringBuilder private private for : call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.StringBuilder = new decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : decl_stmt java.lang.StringBuilder = : if ! && call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl Map StringBuilder private private decl_stmt java.lang.StringBuilder = new decl_stmt java.util.Map < = new <> call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() decl SortedSet decl List String private private for : call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() call decl SortedMap.keySet() decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl SortedMap.get() call decl SortedMap.get() call decl SortedMap.get() call decl SortedMap.get() call decl SortedMap.get() decl_stmt java.util.SortedSet < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != for : if ! && ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + decl_stmt java.lang.String = + String File File private private decl_stmt java.lang.String = if == = if == = + + decl_stmt File = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + decl_stmt File = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + return decl SortedSet Properties private private < + = decl_stmt java.util.Properties = new try = new = new call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) catch throw new + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.util.SortedSet < < = new <> new < < public public < < return public public < < return