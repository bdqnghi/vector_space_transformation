org.apache.solr.schema org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.cloud.AbstractFullDistribZkTestBase import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.SolrInputDocument import org.apache.solr.util.BaseTestHarness import org.apache.solr.util.RESTfulServerProvider import org.apache.solr.util.RestTestHarness import org.eclipse.jetty.servlet.ServletHolder import org.junit.After import org.junit.BeforeClass import org.junit.Test import org.restlet.ext.servlet.ServerServlet import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.Math import java.lang.invoke.MethodHandles import java.util.Arrays import java.util.ArrayList import java.util.List import java.util.SortedMap import java.util.TreeMap import class annotation org.apache.solr.schema.TestCloudSchemaless super super extends decl List String Logger public public throws for : protected protected return decl SortedMap ServletHolder public < public < decl_stmt java.util.SortedMap final final final < = new <> decl_stmt ServletHolder final final = new call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call decl SortedMap.put() call decl SortedMap.put() call decl SortedMap.put() call decl SortedMap.put() call decl SortedMap.put() return RestTestHarness private private for final final : decl_stmt org.apache.solr.util.RestTestHarness = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() String decl String private private decl_stmt java.lang.String = new + = for = < ++ decl_stmt java.lang.String = + + = + + return int int SolrClient SolrInputDocument decl List int int String decl String SolrInputDocument String int String SolrInputDocument String CloudSolrClient = public = public throws decl_stmt int = decl_stmt int = decl_stmt int = * + decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt int = for = < ++ decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + ++ call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) decl_stmt java.lang.String = for : decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if != decl_stmt java.lang.String = + + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl_stmt int = for = < ++ decl_stmt java.util.List < = decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + if = else = try call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) catch try decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() catch