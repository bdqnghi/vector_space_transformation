org.apache.lucene.store java.io.FileNotFoundException import java.io.IOException import java.nio.file.Files import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.index.IndexFileNames import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import class org.apache.lucene.store.RAMDirectory super super extends super implements AtomicLong AtomicLong decl Map decl List decl String decl Set public final public final decl_stmt java.util.Set < = call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.util.List < = new <> call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return public final public final return call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() RAMFile public final public final throws decl_stmt org.apache.lucene.store.RAMFile = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new return call org.apache.lucene.store.RAMFile.getLength() call org.apache.lucene.store.RAMFile.getLength() call org.apache.lucene.store.RAMFile.getLength() call org.apache.lucene.store.RAMFile.getLength() call org.apache.lucene.store.RAMFile.getLength() public final public final return call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() public < public < return RAMFile public public throws decl_stmt org.apache.lucene.store.RAMFile = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() if != = call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) - else throw new RAMFile RAMFile public public throws decl_stmt org.apache.lucene.store.RAMFile = decl_stmt org.apache.lucene.store.RAMFile = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() if != call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) - = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return new String RAMFile public public throws decl_stmt org.apache.lucene.store.RAMFile = while decl_stmt java.lang.String = + + call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() if call decl Map.putIfAbsent() call decl Map.putIfAbsent() call decl Map.putIfAbsent() call decl Map.putIfAbsent() call decl Map.putIfAbsent() == return new protected protected return new public public < throws RAMFile public public throws decl_stmt org.apache.lucene.store.RAMFile = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() RAMFile public public throws decl_stmt org.apache.lucene.store.RAMFile = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new return new public public = call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear()