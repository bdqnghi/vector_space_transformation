org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Iterator import java.util.List import java.util.Set import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.util.Bits import class org.apache.lucene.search.BooleanWeight super super extends boolean Similarity float decl ArrayList int BooleanQuery boolean int public public < decl_stmt int = for : if || == && == call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() ++ int float float public public throws decl_stmt float = decl_stmt int = for : decl_stmt float = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() if += += return public public if == return else if == return else return call org.apache.lucene.search.similarities.Similarity.coord(int,int) call org.apache.lucene.search.similarities.Similarity.coord(int,int) call org.apache.lucene.search.similarities.Similarity.coord(int,int) call org.apache.lucene.search.similarities.Similarity.coord(int,int) call org.apache.lucene.search.similarities.Similarity.coord(int,int) public public for : int Explanation decl List float BooleanClause int float int int Weight boolean decl Iterator Explanation public public throws decl_stmt int final final = call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() decl_stmt java.util.List < = new <> decl_stmt int = decl_stmt float = decl_stmt boolean = decl_stmt int = decl_stmt int = decl_stmt java.util.Iterator < = call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() for < = call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() decl_stmt org.apache.lucene.search.Weight = decl_stmt org.apache.lucene.search.BooleanClause = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.lucene.search.Explanation = call Weight.explain() call Weight.explain() call Weight.explain() call Weight.explain() call Weight.explain() if call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() if call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() += call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() ++ else if call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + else if call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() + = if ! call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() ++ if call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() == ++ else if call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() call org.apache.lucene.search.BooleanClause.getQuery() + = if return else if == return else if < return + else decl_stmt org.apache.lucene.search.Explanation = decl_stmt float final final = : if != = * + + + + return LeafCollector FakeScorer static static final final return new public public final final throws decl_stmt org.apache.lucene.search.LeafCollector final final = new decl_stmt org.apache.lucene.search.FakeScorer = new public public throws public public throws = return public public return LeafCollector FakeScorer public public final final throws decl_stmt org.apache.lucene.search.LeafCollector final final = new decl_stmt org.apache.lucene.search.FakeScorer = new public public throws public public throws = return public public throws public public throws = public public return BulkScorer decl Iterator BooleanClause BulkScorer decl List throws decl_stmt java.util.List < = new < decl_stmt java.util.Iterator < = call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() for : decl_stmt org.apache.lucene.search.BooleanClause = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() call org.apache.lucene.search.BooleanClause.getOccur() != continue decl_stmt org.apache.lucene.search.BulkScorer = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return if call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() > call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.lucene.search.BulkScorer = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if ! && > return new else return return new call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() BooleanClause decl Iterator BulkScorer private private throws decl_stmt org.apache.lucene.search.BulkScorer = decl_stmt java.util.Iterator < = call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() for : decl_stmt org.apache.lucene.search.BooleanClause = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() == continue if != return = if == return if call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() == if = else assert == return BooleanClause BulkScorer int Scorer decl List int Scorer decl Iterator long throws decl_stmt int final final = call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) decl_stmt int final final = call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) + call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) call org.apache.lucene.search.BooleanQuery.getClauses(Occur) decl_stmt org.apache.lucene.search.BulkScorer if == = if == return decl_stmt long final final if call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() <= = - else = / if call BulkScorer.cost() call BulkScorer.cost() call BulkScorer.cost() call BulkScorer.cost() call BulkScorer.cost() < return else if == && == && call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() == = else return if == return decl_stmt java.util.List < = new <> decl_stmt java.util.Iterator < = call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() for : decl_stmt org.apache.lucene.search.BooleanClause = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() decl_stmt org.apache.lucene.search.Scorer = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return else decl_stmt org.apache.lucene.search.Scorer = if call org.apache.lucene.search.Scorer.twoPhaseIterator() call org.apache.lucene.search.Scorer.twoPhaseIterator() call org.apache.lucene.search.Scorer.twoPhaseIterator() call org.apache.lucene.search.Scorer.twoPhaseIterator() call org.apache.lucene.search.Scorer.twoPhaseIterator() != return return new call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() BulkScorer public public throws decl_stmt org.apache.lucene.search.BulkScorer final final = if != return else return Scorer BooleanClause Scorer decl Iterator decl List decl List float int Scorer decl List float decl List public public throws decl_stmt int = call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.Iterator < = call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() call org.apache.lucene.search.BooleanQuery.iterator() for : decl_stmt org.apache.lucene.search.BooleanClause = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.lucene.search.Scorer = if == if call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() return else if call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call org.apache.lucene.search.BooleanClause.isRequired() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call org.apache.lucene.search.BooleanClause.isScoring() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call org.apache.lucene.search.BooleanClause.isProhibited() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() && call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < return if ! && == && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return decl_stmt org.apache.lucene.search.Scorer = decl_stmt org.apache.lucene.search.Scorer = if if > return new else return new else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == if > return new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + else decl_stmt float = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt float = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + return new else if > return new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else return new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() Scorer float private private < < if == decl_stmt org.apache.lucene.search.Scorer = if == return if return new public public throws return public public throws return decl_stmt float = if == = if == return return new else return new : public public throws return public public throws return float private private < throws if return else if == return new else decl_stmt float = new + return new new Scorer float private private < throws if == decl_stmt org.apache.lucene.search.Scorer = if ! && > return new else return else decl_stmt float if = new + else = if > return new else return new