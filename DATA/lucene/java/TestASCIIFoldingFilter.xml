org.apache.lucene.analysis.miscellaneous org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.core.KeywordTokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import java.io.IOException import java.util.List import java.util.ArrayList import java.util.Iterator import class org.apache.lucene.analysis.miscellaneous.TestASCIIFoldingFilter super super extends throws if && ! ASCIIFoldingFilter CharTermAttribute TokenStream public public throws decl_stmt org.apache.lucene.analysis.TokenStream = + + decl_stmt org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter = new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() TokenStream decl List decl Iterator ASCIIFoldingFilter StringBuilder decl String decl List CharTermAttribute int StringBuilder decl Iterator public public throws decl_stmt java.lang.Stringdecl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.lang.StringBuilder = new for = < += if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt org.apache.lucene.analysis.TokenStream = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter = new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() call ASCIIFoldingFilter.getAttribute() decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() call ASCIIFoldingFilter.reset() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() call org.apache.lucene.analysis.miscellaneous.ASCIIFoldingFilter.incrementToken() Analyzer Tokenizer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new * call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new Analyzer Tokenizer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new