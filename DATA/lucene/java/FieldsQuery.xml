org.apache.lucene.queryparser.surround.query java.util.ArrayList import java.util.List import java.util.Iterator import org.apache.lucene.search.Query import class org.apache.lucene.queryparser.surround.query.FieldsQuery super super extends SrndQuery String char decl List public public return SrndQuery OrQuery decl Iterator decl List public public if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return call SrndQuery.makeLuceneQueryFieldNoBoost() call SrndQuery.makeLuceneQueryFieldNoBoost() call SrndQuery.makeLuceneQueryFieldNoBoost() call SrndQuery.makeLuceneQueryFieldNoBoost() call SrndQuery.makeLuceneQueryFieldNoBoost() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else decl_stmt java.util.List < = new <> decl_stmt java.util.Iterator < = decl_stmt org.apache.lucene.queryparser.surround.query.SrndQuery while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() = call org.apache.lucene.queryparser.surround.query.SrndQuery.clone() call org.apache.lucene.queryparser.surround.query.SrndQuery.clone() call org.apache.lucene.queryparser.surround.query.SrndQuery.clone() call org.apache.lucene.queryparser.surround.query.SrndQuery.clone() call org.apache.lucene.queryparser.surround.query.SrndQuery.clone() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.lucene.queryparser.surround.query.OrQuery = new return call OrQuery.makeLuceneQueryField() call OrQuery.makeLuceneQueryField() call OrQuery.makeLuceneQueryField() call OrQuery.makeLuceneQueryField() call OrQuery.makeLuceneQueryField() public public return public < public < return public public return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call SrndQuery.toString() call SrndQuery.toString() call SrndQuery.toString() call SrndQuery.toString() call SrndQuery.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl Iterator protected protected decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next()