org.apache.lucene.analysis.miscellaneous java.io.IOException import java.util.ArrayList import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.KeywordAttribute import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.BytesRefHash import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.UnicodeUtil import org.apache.lucene.util.fst.ByteSequenceOutputs import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.FST.Arc import org.apache.lucene.util.fst.FST.BytesReader import class org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter super super extends StemmerOverrideMap KeywordAttribute BytesReader decl Arc CharTermAttribute decl char int BytesRef public public throws if if == return if ! call org.apache.lucene.analysis.tokenattributes.KeywordAttribute.isKeyword() call org.apache.lucene.analysis.tokenattributes.KeywordAttribute.isKeyword() call org.apache.lucene.analysis.tokenattributes.KeywordAttribute.isKeyword() call org.apache.lucene.analysis.tokenattributes.KeywordAttribute.isKeyword() call org.apache.lucene.analysis.tokenattributes.KeywordAttribute.isKeyword() decl_stmt org.apache.lucene.util.BytesRef final final = call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call StemmerOverrideMap.get() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() if != = call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() decl_stmt int final final = if != call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) else call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call KeywordAttribute.setKeyword() call KeywordAttribute.setKeyword() call KeywordAttribute.setKeyword() call KeywordAttribute.setKeyword() call KeywordAttribute.setKeyword() return else return public public if == return else return int BytesRef int BytesRef public public < throws decl_stmt org.apache.lucene.util.BytesRef = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt int = while < decl_stmt int final final = if : == return = += if call decl Arc.isFinal() call decl Arc.isFinal() call decl Arc.isFinal() call decl Arc.isFinal() call decl Arc.isFinal() = return decl char int public public decl_stmt int final final = if decl_stmt char final final final = for = < += call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() else call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() call decl char.copyChars() if call decl char.get() call decl char.get() call decl char.get() call decl char.get() call decl char.get() >= return return decl apache ByteSequenceOutputs decl org decl fst IntsRefBuilder decl int decl lucene decl util public public throws decl_stmt org.apache.lucene.util.fst.ByteSequenceOutputs = decl_stmt fst < = new <> decl_stmt int final final final = decl_stmt org.apache.lucene.util.IntsRefBuilder = new decl_stmt int final final = decl_stmt org.apache.lucene.util.BytesRef = new for = < ++ decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef = call decl lucene.copyUTF8Bytes() call decl lucene.copyUTF8Bytes() call decl lucene.copyUTF8Bytes() call decl lucene.copyUTF8Bytes() call decl lucene.copyUTF8Bytes() call decl org.add() call decl org.add() call decl org.add() call decl org.add() call decl org.add() call decl lucene.get() call decl lucene.get() call decl lucene.get() call decl lucene.get() call decl lucene.get() new return new call decl org.finish() call decl org.finish() call decl org.finish() call decl org.finish() call decl org.finish()