org.apache.solr.schema java.io.File import java.io.FileOutputStream import java.io.IOException import java.io.OutputStreamWriter import java.io.StringWriter import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.Callable import java.util.concurrent.ExecutionException import java.util.concurrent.ExecutorService import java.util.concurrent.Future import java.util.concurrent.TimeUnit import org.apache.commons.io.IOUtils import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.util.CharFilterFactory import org.apache.lucene.analysis.util.ResourceLoaderAware import org.apache.lucene.analysis.util.TokenFilterFactory import org.apache.lucene.analysis.util.TokenizerFactory import org.apache.solr.analysis.TokenizerChain import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrResponse import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.cloud.ZkController import org.apache.solr.cloud.ZkSolrResourceLoader import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ContentStream import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrConfig import org.apache.solr.core.SolrResourceLoader import org.apache.solr.rest.schema.FieldTypeXmlAdapter import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.FileUtils import org.apache.solr.util.RTimer import org.apache.zookeeper.CreateMode import org.apache.zookeeper.KeeperException import org.apache.zookeeper.data.Stat import org.slf4j.Logger import org.slf4j.LoggerFactory import org.xml.sax.InputSource import class org.apache.solr.schema.ManagedIndexSchema super super extends String int Logger Object boolean public public return String OutputStreamWriter File File FileOutputStream if instanceof return decl_stmt File = new decl_stmt java.io.OutputStreamWriter = try decl_stmt File = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() if ! call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() decl_stmt java.lang.String final final = + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt java.io.FileOutputStream final final = new = new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() catch decl_stmt java.lang.String final final = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new finally try catch decl_stmt java.lang.String final final = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return Stat String boolean StringWriter ZkSolrResourceLoader boolean String SolrZkClient decl byte ZkController decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader final final = decl_stmt org.apache.solr.cloud.ZkController final final = call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() decl_stmt org.apache.solr.common.cloud.SolrZkClient final final = call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() decl_stmt java.lang.String final final = call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() + + decl_stmt boolean = decl_stmt boolean = try decl_stmt StringWriter = new decl_stmt byte final final final = call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() if try call org.apache.solr.common.cloud.SolrZkClient.create(String,byte,CreateMode,boolean) call org.apache.solr.common.cloud.SolrZkClient.create(String,byte,CreateMode,boolean) call org.apache.solr.common.cloud.SolrZkClient.create(String,byte,CreateMode,boolean) call org.apache.solr.common.cloud.SolrZkClient.create(String,byte,CreateMode,boolean) call org.apache.solr.common.cloud.SolrZkClient.create(String,byte,CreateMode,boolean) = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + else try decl_stmt Stat = call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) = call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + = = catch if instanceof decl_stmt java.lang.String final final = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new if decl_stmt java.lang.String = + + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) throw new + return int int RTimer decl List decl List ExecutorService decl Future decl List String public static public static decl_stmt org.apache.solr.util.RTimer = new decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + + + decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.util.concurrent.ExecutorService = new try decl_stmt java.util.List < < = call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) decl_stmt java.util.List < = for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt int = - decl_stmt java.util.concurrent.Future < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() && ! call decl Future.isCancelled() call decl Future.isCancelled() call decl Future.isCancelled() call decl Future.isCancelled() call decl Future.isCancelled() try = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() catch if == - decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + if == = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != throw new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + + + + + + catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + finally if ! call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl List decl Set decl Collection ClusterState Replica ZkCoreNodeProps decl Map ZkStateReader protected static < protected static < decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt java.util.Set < = call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() decl_stmt java.util.Collection < = call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) if != && call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() > for : decl_stmt java.util.Map < = if != for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.solr.common.cloud.Replica = if ! call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() && call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() == && call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() return ModifiableSolrParams public public decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) return decl HttpUriRequestResponse int decl HttpSolrClient public public throws decl_stmt int = - try = new while == - || < try decl_stmt HttpUriRequestResponse = decl_stmt org.apache.solr.common.util.NamedList < = call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() call decl HttpSolrClient.future() if != = call decl HttpUriRequestResponse.get() call decl HttpUriRequestResponse.get() call decl HttpUriRequestResponse.get() call decl HttpUriRequestResponse.get() call decl HttpUriRequestResponse.get() if < call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + catch if instanceof break else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return public < public < throws return protected protected return String ManagedIndexSchema decl Collection boolean public public < < < decl_stmt org.apache.solr.schema.ManagedIndexSchema if decl_stmt boolean = if == = = for : if != call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() decl_stmt java.lang.String = + + throw new call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() if != call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() decl_stmt java.util.Collection < = if != for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() if = call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() = else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String SchemaField ManagedIndexSchema DynamicCopy String public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if = for : decl_stmt org.apache.solr.schema.SchemaField = if != decl_stmt java.lang.String = + + if call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() || call ManagedIndexSchema.isCopyFieldTarget() call ManagedIndexSchema.isCopyFieldTarget() call ManagedIndexSchema.isCopyFieldTarget() call ManagedIndexSchema.isCopyFieldTarget() call ManagedIndexSchema.isCopyFieldTarget() throw new for = < ++ decl_stmt DynamicCopy = if call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() throw new call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() else decl_stmt java.lang.String = + + throw new call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return SchemaField decl List decl List SchemaField decl List decl List DynamicCopy SchemaField String ManagedIndexSchema CopyField decl Iterator public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if decl_stmt org.apache.solr.schema.SchemaField = if == decl_stmt java.lang.String = + + throw new = = = < < = new call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() decl_stmt org.apache.solr.schema.SchemaField = call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() if != call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() if call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() decl_stmt java.util.List < = new <> call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() for < < : call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() decl_stmt java.util.List < = decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.solr.schema.CopyField = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt DynamicCopy = decl_stmt org.apache.solr.schema.SchemaField = call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() if call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() || call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String ManagedIndexSchema decl List decl Collection boolean public public < < < decl_stmt org.apache.solr.schema.ManagedIndexSchema if decl_stmt boolean = if == = = for : decl_stmt java.util.List < = new <> if decl_stmt java.lang.String = + + throw new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new = decl_stmt java.util.Collection < = if != for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() if = call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return decl List decl DynamicField DynamicField DynamicField decl List DynamicField DynamicCopy DynamicField String int ManagedIndexSchema public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if = = new decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for : decl_stmt DynamicField = decl_stmt int = for < ++ decl_stmt DynamicField = if call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() = break if == decl_stmt java.lang.String = + + throw new for = < ++ decl_stmt DynamicCopy = decl_stmt DynamicField = call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() decl_stmt DynamicField = call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() if != && call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() || != && call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() || call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() || call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicField.matches() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if > decl_stmt DynamicField = new - + - - = else = new if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return DynamicField DynamicField decl List decl List DynamicField DynamicCopy DynamicField String int ManagedIndexSchema SchemaField public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if decl_stmt DynamicField = decl_stmt int = for < ++ decl_stmt DynamicField = if call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() = break if == decl_stmt java.lang.String = + + throw new = = < < = new decl_stmt org.apache.solr.schema.SchemaField = = new decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt DynamicCopy = decl_stmt DynamicField = call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() call DynamicCopy.getDestDynamicBase() decl_stmt DynamicField = call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() if call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() || call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() || != && call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() || != && call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call DynamicField.getRegex() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String ManagedIndexSchema boolean public public < < decl_stmt org.apache.solr.schema.ManagedIndexSchema if decl_stmt boolean = = for < < : for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() if = call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String ManagedIndexSchema public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if = for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String ManagedIndexSchema public public < < decl_stmt org.apache.solr.schema.ManagedIndexSchema if = = = < < = new for < < : for : call org.apache.solr.schema.ManagedIndexSchema.deleteCopyField(String,String) call org.apache.solr.schema.ManagedIndexSchema.deleteCopyField(String,String) call org.apache.solr.schema.ManagedIndexSchema.deleteCopyField(String,String) call org.apache.solr.schema.ManagedIndexSchema.deleteCopyField(String,String) call org.apache.solr.schema.ManagedIndexSchema.deleteCopyField(String,String) call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return decl List decl DynamicCopy SchemaField CopyField String DynamicCopy SchemaField SchemaField String boolean private private decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.solr.schema.SchemaField = decl_stmt java.lang.String final final = + if && ! decl_stmt java.lang.String = + + + throw new if && ! decl_stmt java.lang.String = + + + throw new decl_stmt boolean = if == || == if != for = < ++ decl_stmt DynamicCopy = if call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() && call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() = decl_stmt org.apache.solr.schema.SchemaField = call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() if if > decl_stmt DynamicCopy = new - + - - = else = break else decl_stmt java.util.List < = if != for < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt org.apache.solr.schema.CopyField = if call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() = call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() break if ! throw new + + + + decl List private private < decl_stmt java.util.List < = if != for : SchemaField SchemaField private private < if > for : decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.solr.schema.SchemaField = Integer private private decl_stmt java.lang.Integer = assert != if <= else - boolean decl HashMap String StringBuilder String ManagedIndexSchema public public < if ! decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt org.apache.solr.schema.ManagedIndexSchema = decl_stmt HashMap < = < < = for : decl_stmt java.lang.String = if call ManagedIndexSchema.getFieldTypeByName() call ManagedIndexSchema.getFieldTypeByName() call ManagedIndexSchema.getFieldTypeByName() call ManagedIndexSchema.getFieldTypeByName() call ManagedIndexSchema.getFieldTypeByName() != throw new + + call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() if decl_stmt boolean = call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) if if call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() decl_stmt java.lang.StringBuilder = new for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String ManagedIndexSchema public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if for : if ! decl_stmt java.lang.String = + + throw new for : if throw new + + + + for : if throw new + + + + = for : call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return decl Map decl Map decl Iterator private < < private < < < < decl_stmt java.util.Map < < = new <> decl_stmt java.util.Iterator < < < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() new <> call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() return SchemaField decl List decl Iterator SchemaField decl Iterator SchemaField decl List decl List DynamicField decl List SchemaField decl List DynamicCopy String SchemaField String decl Map ManagedIndexSchema CopyField FieldType decl Iterator public public < decl_stmt org.apache.solr.schema.ManagedIndexSchema if if ! decl_stmt java.lang.String = + + throw new = = < < = = < < = new = new call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.ManagedIndexSchema.newFieldType(String,String,Map) call org.apache.solr.schema.ManagedIndexSchema.newFieldType(String,String,Map) call org.apache.solr.schema.ManagedIndexSchema.newFieldType(String,String,Map) call org.apache.solr.schema.ManagedIndexSchema.newFieldType(String,String,Map) call org.apache.solr.schema.ManagedIndexSchema.newFieldType(String,String,Map) call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() call ManagedIndexSchema.fieldTypes() decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.Iterator < < = call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.solr.schema.SchemaField = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() if call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt java.lang.String = call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call org.apache.solr.schema.SchemaField.getDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() if call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call org.apache.solr.schema.SchemaField.isRequired() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) call org.apache.solr.schema.ManagedIndexSchema.removeCopyFieldSource(String,List) for : call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() decl_stmt java.util.Iterator < < < = call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() call ManagedIndexSchema.copyFieldsMap() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt java.util.List < = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.solr.schema.CopyField = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() call org.apache.solr.schema.CopyField.getDestination() if call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() for = < ++ decl_stmt org.apache.solr.schema.SchemaField = if call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() = new call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() call org.apache.solr.schema.SchemaField.getArgs() decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt DynamicCopy = decl_stmt DynamicField = call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() call DynamicCopy.getSourceDynamicBase() decl_stmt org.apache.solr.schema.SchemaField = call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() call DynamicCopy.getDestination() if call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() || != && call DynamicField.getPrototype() call DynamicField.getPrototype() call DynamicField.getPrototype() call DynamicField.getPrototype() call DynamicField.getPrototype() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call ManagedIndexSchema.copyFieldTargetCounts() call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) call org.apache.solr.schema.ManagedIndexSchema.decrementCopyFieldTargetCount(SchemaField) else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call ManagedIndexSchema.registerCopyField() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getRegex() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getDestFieldName() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call DynamicCopy.getMaxChars() call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.rebuildCopyFields(List) call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call org.apache.solr.schema.ManagedIndexSchema.postReadInform() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() call ManagedIndexSchema.refreshAnalyzers() else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return protected protected for : Analyzer Analyzer TextField Analyzer protected protected if ! return decl_stmt org.apache.lucene.analysis.Analyzer = if != && instanceof decl_stmt org.apache.lucene.analysis.Analyzer = if != && != && instanceof if instanceof decl_stmt org.apache.solr.schema.TextField = decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.solr.schema.TextField.getMultiTermAnalyzer() call org.apache.solr.schema.TextField.getMultiTermAnalyzer() call org.apache.solr.schema.TextField.getMultiTermAnalyzer() call org.apache.solr.schema.TextField.getMultiTermAnalyzer() call org.apache.solr.schema.TextField.getMultiTermAnalyzer() if != && != && != && instanceof String SchemaField FieldType SchemaField public public < decl_stmt org.apache.solr.schema.SchemaField if try if - != decl_stmt java.lang.String = + + throw new decl_stmt org.apache.solr.schema.SchemaField = if != decl_stmt java.lang.String = + + throw new decl_stmt org.apache.solr.schema.FieldType = if == decl_stmt java.lang.String = + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new = catch throw catch throw new else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return public public return String FieldType SchemaField public public < decl_stmt org.apache.solr.schema.SchemaField if try decl_stmt org.apache.solr.schema.FieldType = if == decl_stmt java.lang.String = + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new = if ! decl_stmt java.lang.String = + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new catch throw catch throw new else decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String FieldType FieldTypePluginLoader decl Map decl List public public < if ! decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new if != decl_stmt java.lang.String = + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt java.util.Map < = new <> decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.schema.FieldTypePluginLoader = new call FieldTypePluginLoader.loadSingle() call FieldTypePluginLoader.loadSingle() call FieldTypePluginLoader.loadSingle() call FieldTypePluginLoader.loadSingle() call FieldTypePluginLoader.loadSingle() decl_stmt org.apache.solr.schema.FieldType = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return decl TokenFilterFactory decl CharFilterFactory TokenizerFactory protected protected decl_stmt org.apache.lucene.analysis.util.CharFilterFactory = for : if instanceof try catch throw new decl_stmt org.apache.lucene.analysis.util.TokenizerFactory = if instanceof try catch throw new decl_stmt org.apache.lucene.analysis.util.TokenFilterFactory = for : if instanceof try catch throw new String ManagedIndexSchema decl_stmt org.apache.solr.schema.ManagedIndexSchema = try = new catch decl_stmt java.lang.String final final = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() assert != = = = = = = = = = = = = if call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fields() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.fieldsWithDefaultValue() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() call ManagedIndexSchema.requiredFields() = = = = = = return public public return