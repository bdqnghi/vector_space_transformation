org.apache.solr.schema java.io.IOException import java.util.ArrayList import java.util.List import java.util.Map import org.locationtech.spatial4j.distance.DistanceUtils import org.apache.lucene.document.FieldType import org.apache.lucene.index.IndexableField import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.valuesource.VectorValueSource import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import org.apache.lucene.search.SortField import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.solr.common.SolrException import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.response.TextResponseWriter import org.apache.solr.search.QParser import org.apache.solr.search.SpatialOptions import class org.apache.solr.schema.PointType super super extends super implements double SolrParams protected protected < decl_stmt org.apache.solr.common.params.SolrParams = new = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) if < throw new + public public return decl String String String decl List FieldType SchemaField public < public < decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.List < = new <> + if for = < ++ decl_stmt org.apache.solr.schema.SchemaField = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.createField(Object,float) call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() && ! call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() : if decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl ArrayList SchemaField public public decl_stmt java.util.ArrayList < = new <> for = < ++ decl_stmt org.apache.solr.schema.SchemaField = call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() return new public public throw new + public public throws public public throw new + public public return decl String decl Builder decl String decl BooleanQuery public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for = < ++ decl_stmt org.apache.solr.schema.SchemaField = call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() SchemaField decl String decl BooleanQuery decl Builder public public decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for = < ++ decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.lucene.search.Query = call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() call decl Builder.getType() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl double String String decl String decl double decl double decl Builder SchemaField decl BooleanQuery IndexSchema public public decl_stmt java.lang.String = decl_stmt double = new try for = < ++ = catch throw new decl_stmt org.apache.solr.schema.IndexSchema = if == decl_stmt java.lang.String = - decl_stmt java.lang.String = + decl_stmt org.apache.solr.schema.SchemaField = return call decl double.getType() call decl double.getType() call decl double.getType() call decl double.getType() call decl double.getType() else decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt double = decl_stmt double = for = < ++ decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.lucene.search.Query = call decl double.getType() call decl double.getType() call decl double.getType() call decl double.getType() call decl double.getType() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public static public static if == || != = new if == = - = * for = < ++ = + return int int int int decl String public static public static throws decl_stmt java.lang.String = new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = if == - && == && > = = else if > for < ++ while < && == ++ while > && - == -- if == break = = + = = if == - = if != throw new + + + + + + return public public return