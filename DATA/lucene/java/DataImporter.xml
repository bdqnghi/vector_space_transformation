org.apache.solr.handler.dataimport org.apache.solr.common.SolrException import org.apache.solr.core.SolrCore import org.apache.solr.schema.IndexSchema import org.apache.solr.util.SystemIdResolver import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.XMLErrorLogger import org.apache.solr.handler.data.config.ConfigNameConstants import org.apache.solr.handler.data.config.ConfigParseUtil import org.apache.solr.handler.data.config.DIHConfiguration import org.apache.solr.handler.data.config.Entity import org.apache.solr.handler.data.config.PropertyWriter import org.apache.solr.handler.data.config.Script import static static org.apache.solr.handler.data.DataImportHandlerException.wrapAndThrow import static static org.apache.solr.handler.data.DataImportHandlerException.SEVERE import static static org.apache.solr.handler.data.DocBuilder.loadClass import static static org.apache.solr.handler.data.config.ConfigNameConstants.CLASS import org.slf4j.Logger import org.slf4j.LoggerFactory import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.NodeList import org.xml.sax.InputSource import org.apache.commons.io.IOUtils import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import java.io.IOException import java.io.StringReader import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collections import java.util.Date import java.util.HashMap import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Properties import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicLong import java.util.concurrent.locks.ReentrantLock import class org.apache.solr.handler.dataimport.DataImporter XMLErrorLogger ReentrantLock Logger DocBuilder String String decl Map decl ThreadLocal String String String DIHConfiguration Properties IndexSchema Status decl Statistics decl Map String decl DocBuilder boolean String String SolrCore String String String String Date String String boolean InputSource decl Map NamedList String decl Map int String < throws if call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() decl_stmt boolean = try if != if != = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt InputSource = if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > = new new else if != = new call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if != = = decl_stmt java.util.Map < < = new <> if != decl_stmt int = while < if == break decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = decl_stmt org.apache.solr.common.util.NamedList = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.util.Map < = new <> for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) ++ = catch throw finally call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() return else return public public return public public return public public = new new public public = DocumentBuilder Document DIHConfiguration DocumentBuilderFactory public public decl_stmt org.apache.solr.handler.dataimport.config.DIHConfiguration = try decl_stmt DocumentBuilderFactory = if != && != try call DocumentBuilderFactory.setXIncludeAware() call DocumentBuilderFactory.setXIncludeAware() call DocumentBuilderFactory.setXIncludeAware() call DocumentBuilderFactory.setXIncludeAware() call DocumentBuilderFactory.setXIncludeAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl_stmt org.apache.solr.update.DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() if != call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() new call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call decl Statistics.getResourceLoader() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() decl_stmt org.apache.lucene.document.Document try = call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() finally = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch throw new + for : call org.apache.solr.handler.dataimport.config.DIHConfiguration.getEntities() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getEntities() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getEntities() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getEntities() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getEntities() if = break return decl List decl List boolean Element decl Map decl List Script String decl List String decl Map decl Map decl HashMap String decl List decl List Element NodeList DIHConfiguration PropertyWriter public public decl_stmt org.apache.solr.handler.dataimport.config.DIHConfiguration decl_stmt java.util.List < < = new <> decl_stmt org.apache.solr.handler.dataimport.config.Script = decl_stmt java.util.Map < < = new <> decl_stmt NodeList = if == || call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() == throw new decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt java.util.List < = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() throw new + decl_stmt java.util.List < = if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() = new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() for : decl_stmt java.lang.String = decl_stmt java.lang.String = if == || == throw new else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.List < = if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() for : decl_stmt java.util.Map < = new <> decl_stmt HashMap < = for < : call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == for < : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() break decl_stmt org.apache.solr.handler.dataimport.config.PropertyWriter = decl_stmt java.util.List < = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt boolean = if != && = = new : > else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > throw new + + else decl_stmt javax.swing.text.Element = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = decl_stmt java.util.Map < = new <> for < : if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if == throw new + + + = new return new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() DIHProperties decl Class PropertyWriter private private decl_stmt org.apache.solr.handler.dataimport.DIHProperties = decl_stmt org.apache.solr.handler.dataimport.config.PropertyWriter = call org.apache.solr.handler.dataimport.config.DIHConfiguration.getPropertyWriter() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getPropertyWriter() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getPropertyWriter() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getPropertyWriter() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getPropertyWriter() try decl_stmt java.lang.Class < = call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() = call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call DIHProperties.init() call DIHProperties.init() call DIHProperties.init() call DIHProperties.init() call DIHProperties.init() call PropertyWriter.getParameters() call PropertyWriter.getParameters() call PropertyWriter.getParameters() call PropertyWriter.getParameters() call PropertyWriter.getParameters() catch throw new + call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() call org.apache.solr.handler.dataimport.config.PropertyWriter.getType() return public public return return = call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() return call Properties.get() call Properties.get() call Properties.get() call Properties.get() call Properties.get() decl Map int DataSource decl Map Properties String public public decl_stmt java.util.Map < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() if == = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getDataSources() if == throw new + + + decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt javax.sql.DataSource = if == = new else try = catch + try decl_stmt java.util.Properties = new call Properties.putAll() call Properties.putAll() call Properties.putAll() call Properties.putAll() call Properties.putAll() decl_stmt java.util.Map < = if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt int = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() += call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call DataSource.init() call DataSource.init() call DataSource.init() call DataSource.init() call DataSource.init() catch + return public public return public public = public public return call decl Map.isLocked() call decl Map.isLocked() call decl Map.isLocked() call decl Map.isLocked() call decl Map.isLocked() DIHProperties public public call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) try decl_stmt org.apache.solr.handler.dataimport.DIHProperties = call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() = new call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() if ! call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() catch call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) finally private private if && ! throw new DIHProperties public public call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) try decl_stmt org.apache.solr.handler.dataimport.DIHProperties = call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() call DIHProperties.getCurrentTimestamp() = new call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() call org.apache.solr.handler.dataimport.DocBuilder.execute() if ! call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() call decl DocBuilder.add() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) call org.apache.solr.handler.dataimport.DocBuilder.handleError(String,Exception) finally public public final final final final new public public public public String decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call org.apache.solr.handler.dataimport.DocBuilder.abort() call org.apache.solr.handler.dataimport.DocBuilder.abort() call org.apache.solr.handler.dataimport.DocBuilder.abort() call org.apache.solr.handler.dataimport.DocBuilder.abort() call org.apache.solr.handler.dataimport.DocBuilder.abort() return if ! call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() call decl Map.tryLock() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return try if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) finally call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() call decl Map.unlock() decl Map Map decl Map < < decl_stmt java.util.Map = decl_stmt java.util.Map < = new <> if != synchronized for : call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() decl_stmt Entry = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() return public public return DIHProperties public public decl_stmt org.apache.solr.handler.dataimport.DIHProperties = return new < < return call org.apache.solr.handler.dataimport.config.DIHConfiguration.getFunctions() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getFunctions() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getFunctions() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getFunctions() call org.apache.solr.handler.dataimport.config.DIHConfiguration.getFunctions() decl Map SolrCore < < < < decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt org.apache.solr.core.SolrCore = == : call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() call DocBuilder.dataImporter() for < : try call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch + return protected protected return new public public return call SolrCore.put() call SolrCore.put() call SolrCore.put() call SolrCore.put() call SolrCore.put() return call SolrCore.get() call SolrCore.get() call SolrCore.get() call SolrCore.get() call SolrCore.get()