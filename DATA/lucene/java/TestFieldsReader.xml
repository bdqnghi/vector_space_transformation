org.apache.lucene.index java.io.IOException import java.nio.file.Path import java.util.* import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.DocumentStoredFieldVisitor import org.apache.lucene.document.Field import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.store.BufferedIndexInput import org.apache.lucene.store.Directory import org.apache.lucene.store.FilterDirectory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.index.TestFieldsReader super super extends Document Directory decl FieldInfos IndexableFieldType FieldInfo IndexWriter IndexWriterConfig public static public static throws = new = new for : call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() decl_stmt org.apache.lucene.index.FieldInfo = call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() decl_stmt org.apache.lucene.index.IndexableFieldType = call org.apache.lucene.index.FieldInfo.setIndexOptions(IndexOptions) call org.apache.lucene.index.FieldInfo.setIndexOptions(IndexOptions) call org.apache.lucene.index.FieldInfo.setIndexOptions(IndexOptions) call org.apache.lucene.index.FieldInfo.setIndexOptions(IndexOptions) call org.apache.lucene.index.FieldInfo.setIndexOptions(IndexOptions) call IndexableFieldType.indexOptions() call IndexableFieldType.indexOptions() call IndexableFieldType.indexOptions() call IndexableFieldType.indexOptions() call IndexableFieldType.indexOptions() if call org.apache.lucene.index.IndexableFieldType.omitNorms() call org.apache.lucene.index.IndexableFieldType.omitNorms() call org.apache.lucene.index.IndexableFieldType.omitNorms() call org.apache.lucene.index.IndexableFieldType.omitNorms() call org.apache.lucene.index.IndexableFieldType.omitNorms() call FieldInfo.setOmitsNorms() call FieldInfo.setOmitsNorms() call FieldInfo.setOmitsNorms() call FieldInfo.setOmitsNorms() call FieldInfo.setOmitsNorms() call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.IndexableFieldType.docValuesType() call org.apache.lucene.index.IndexableFieldType.docValuesType() call org.apache.lucene.index.IndexableFieldType.docValuesType() call org.apache.lucene.index.IndexableFieldType.docValuesType() call org.apache.lucene.index.IndexableFieldType.docValuesType() = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() decl_stmt org.apache.lucene.index.IndexWriter = new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() public static public static throws call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = = = Document DocumentStoredFieldVisitor Field decl List IndexReader public public throws != != decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) != call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() != decl_stmt org.apache.solr.handler.dataimport.config.Field = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() != call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() == = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() != call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() == = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() != call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() == decl_stmt org.apache.lucene.document.DocumentStoredFieldVisitor = new call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) decl_stmt java.util.List final final final < = call org.apache.lucene.document.DocumentStoredFieldVisitor.getDocument() call org.apache.lucene.document.DocumentStoredFieldVisitor.getDocument() call org.apache.lucene.document.DocumentStoredFieldVisitor.getDocument() call org.apache.lucene.document.DocumentStoredFieldVisitor.getDocument() call org.apache.lucene.document.DocumentStoredFieldVisitor.getDocument() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() public public throws return new public public private private throws if && ++ == throw new public public throws public public throws public public return public public throws FaultyIndexInput public public decl_stmt FaultyIndexInput = new try call FaultyIndexInput.seek() call FaultyIndexInput.seek() call FaultyIndexInput.seek() call FaultyIndexInput.seek() call FaultyIndexInput.seek() catch throw new return IndexInput public public throws decl_stmt org.apache.lucene.store.IndexInput = return new Directory IndexWriterConfig boolean Path IndexWriter IndexReader FaultyFSDirectory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = decl_stmt FaultyFSDirectory = new decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt org.apache.lucene.index.IndexWriter = new for = < ++ call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.IndexReader = call FaultyFSDirectory.startFailing() call FaultyFSDirectory.startFailing() call FaultyFSDirectory.startFailing() call FaultyFSDirectory.startFailing() call FaultyFSDirectory.startFailing() decl_stmt boolean = for = < ++ try call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) catch = try call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) catch = call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call FaultyFSDirectory.close() call FaultyFSDirectory.close() call FaultyFSDirectory.close() call FaultyFSDirectory.close() call FaultyFSDirectory.close()