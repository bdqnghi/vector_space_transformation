org.apache.solr.update.processor java.io.IOException import java.lang.invoke.MethodHandles import java.net.MalformedURLException import java.net.URI import java.net.URISyntaxException import java.net.URL import java.util.Locale import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.update.AddUpdateCommand import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.processor.URLClassifyProcessor super super extends String String String String String String Logger String String String String String String String String String boolean String String decl String String String private private if != = = = = = = = String SolrInputDocument URL public public throws if decl_stmt org.apache.solr.common.SolrInputDocument = if call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) decl_stmt java.lang.String = call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) try decl_stmt java.net.URL = call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) : call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) : if != call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() if != call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + String String public public decl_stmt java.lang.String = try decl_stmt java.lang.String = return new call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) + + catch return public public return String int public public decl_stmt java.lang.String = decl_stmt int = for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == ++ return String public public decl_stmt java.lang.String = return call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == && == public public if != return else return != public public throws return new public public return public public = String private private decl_stmt java.lang.String = for : if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) return return private private return +