org.apache.lucene.analysis.cn.smart java.util.Collections import java.util.List import org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter import org.apache.lucene.analysis.cn.smart.hhmm.SegToken import org.apache.lucene.analysis.cn.smart.hhmm.SegTokenFilter import class org.apache.lucene.analysis.cn.smart.WordSegmenter HHMMSegmenter SegTokenFilter decl List decl List public < public < decl_stmt java.util.List < = call org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter.process(String) call org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter.process(String) call org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter.process(String) call org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter.process(String) call org.apache.lucene.analysis.cn.smart.hhmm.HHMMSegmenter.process(String) decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - for : return public public switch case case case case = break default: break = call SegTokenFilter.filter() call SegTokenFilter.filter() call SegTokenFilter.filter() call SegTokenFilter.filter() call SegTokenFilter.filter() += += return