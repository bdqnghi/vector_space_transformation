org.apache.lucene.index java.io.IOException import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.codecs.TermVectorsWriter import org.apache.lucene.util.BytesRef import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.index.TermVectorsConsumerPerField super super extends boolean TermVectorsPostingsArray OffsetAttribute boolean PayloadAttribute TermVectorsConsumer boolean boolean boolean if ! || == return call org.apache.lucene.index.TermVectorsConsumer.addFieldToFlush(TermVectorsConsumerPerField) call org.apache.lucene.index.TermVectorsConsumer.addFieldToFlush(TermVectorsConsumerPerField) call org.apache.lucene.index.TermVectorsConsumer.addFieldToFlush(TermVectorsConsumerPerField) call org.apache.lucene.index.TermVectorsConsumer.addFieldToFlush(TermVectorsConsumerPerField) call org.apache.lucene.index.TermVectorsConsumer.addFieldToFlush(TermVectorsConsumerPerField) TermVectorsWriter decl int ByteSliceReader int BytesRef int ByteSliceReader TermVectorsPostingsArray int throws if == return = decl_stmt int final final = decl_stmt org.apache.lucene.util.BytesRef final final = assert >= decl_stmt TermVectorsPostingsArray = decl_stmt org.apache.lucene.codecs.TermVectorsWriter final final = decl_stmt int final final final = call TermVectorsWriter.startField() call TermVectorsWriter.startField() call TermVectorsWriter.startField() call TermVectorsWriter.startField() call TermVectorsWriter.startField() decl_stmt org.apache.lucene.index.ByteSliceReader final final = : decl_stmt org.apache.lucene.index.ByteSliceReader final final = : for = < ++ decl_stmt int final final = decl_stmt int final final = call TermVectorsWriter.startTerm() call TermVectorsWriter.startTerm() call TermVectorsWriter.startTerm() call TermVectorsWriter.startTerm() call TermVectorsWriter.startTerm() if || if != if != call org.apache.lucene.codecs.TermVectorsWriter.addProx(int,DataInput,DataInput) call org.apache.lucene.codecs.TermVectorsWriter.addProx(int,DataInput,DataInput) call org.apache.lucene.codecs.TermVectorsWriter.addProx(int,DataInput,DataInput) call org.apache.lucene.codecs.TermVectorsWriter.addProx(int,DataInput,DataInput) call org.apache.lucene.codecs.TermVectorsWriter.addProx(int,DataInput,DataInput) call TermVectorsWriter.finishTerm() call TermVectorsWriter.finishTerm() call TermVectorsWriter.finishTerm() call TermVectorsWriter.finishTerm() call TermVectorsWriter.finishTerm() call org.apache.lucene.codecs.TermVectorsWriter.finishField() call org.apache.lucene.codecs.TermVectorsWriter.finishField() call org.apache.lucene.codecs.TermVectorsWriter.finishField() call org.apache.lucene.codecs.TermVectorsWriter.finishField() call org.apache.lucene.codecs.TermVectorsWriter.finishField() assert != if if != = = if = = = if = else = if throw new + + else if throw new + + if throw new + + if throw new + + else if != throw new + + if != throw new + + if != throw new + + if != throw new + + if if = assert != if = else = return int BytesRef int int if decl_stmt int = + call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() decl_stmt int = + call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() - - = if decl_stmt org.apache.lucene.util.BytesRef final final if == = else = call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() decl_stmt int final final = - if != && > << | = else << = TermVectorsPostingsArray final final decl_stmt TermVectorsPostingsArray = = = = TermVectorsPostingsArray final final decl_stmt TermVectorsPostingsArray = ++ public public = return new return new TermVectorsPostingsArray assert instanceof decl_stmt TermVectorsPostingsArray = return + *