org.apache.solr.util java.io.IOException import java.io.StringWriter import java.nio.file.Path import java.util.HashMap import java.util.List import java.util.Map import java.util.Properties import com.google.common.collect.ImmutableList import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.NamedList.NamedListEntry import org.apache.solr.core.* import org.apache.solr.handler.UpdateRequestHandler import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestHandler import org.apache.solr.request.SolrRequestInfo import org.apache.solr.response.QueryResponseWriter import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.IndexSchemaFactory import org.apache.solr.servlet.DirectSolrConnection import org.apache.solr.update.UpdateShardHandlerConfig import class org.apache.solr.util.TestHarness super super extends UpdateRequestHandler CoreContainer String public static public static try return new catch throw new public static public static return UpdateShardHandlerConfig CloudConfig public static public static decl_stmt org.apache.solr.core.CloudConfig = new if == = decl_stmt org.apache.solr.update.UpdateShardHandlerConfig = new return new public < public < return new public public return SolrCore public public decl_stmt org.apache.solr.core.SolrCore = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) if != call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() return public public return call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) public public throws call org.apache.solr.core.CoreContainer.reload(String) call org.apache.solr.core.CoreContainer.reload(String) call org.apache.solr.core.CoreContainer.reload(String) call org.apache.solr.core.CoreContainer.reload(String) call org.apache.solr.core.CoreContainer.reload(String) DirectSolrConnection SolrRequestHandler public public try = decl_stmt org.apache.solr.servlet.DirectSolrConnection = new decl_stmt org.apache.solr.request.SolrRequestHandler = if == = return call org.apache.solr.servlet.DirectSolrConnection.request(SolrRequestHandler,SolrParams,String) call org.apache.solr.servlet.DirectSolrConnection.request(SolrRequestHandler,SolrParams,String) call org.apache.solr.servlet.DirectSolrConnection.request(SolrRequestHandler,SolrParams,String) call org.apache.solr.servlet.DirectSolrConnection.request(SolrRequestHandler,SolrParams,String) call org.apache.solr.servlet.DirectSolrConnection.request(SolrRequestHandler,SolrParams,String) catch throw catch throw new String public public throws decl_stmt java.lang.String = return public public throws return SolrCore SolrQueryResponse StringWriter QueryResponseWriter public public throws try decl_stmt org.apache.solr.core.SolrCore = decl_stmt org.apache.solr.response.SolrQueryResponse = new new call org.apache.solr.core.SolrCore.execute(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.core.SolrCore.execute(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.core.SolrCore.execute(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.core.SolrCore.execute(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.core.SolrCore.execute(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.core.SolrCore.getRequestHandler(String) call org.apache.solr.core.SolrCore.getRequestHandler(String) call org.apache.solr.core.SolrCore.getRequestHandler(String) call org.apache.solr.core.SolrCore.getRequestHandler(String) call org.apache.solr.core.SolrCore.getRequestHandler(String) if call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() != throw call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() decl_stmt StringWriter = new decl_stmt org.apache.solr.response.QueryResponseWriter = call org.apache.solr.core.SolrCore.getQueryResponseWriter(String) call org.apache.solr.core.SolrCore.getQueryResponseWriter(String) call org.apache.solr.core.SolrCore.getQueryResponseWriter(String) call org.apache.solr.core.SolrCore.getQueryResponseWriter(String) call org.apache.solr.core.SolrCore.getQueryResponseWriter(String) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) return call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() finally SolrQueryResponse public public throws try = decl_stmt org.apache.solr.response.SolrQueryResponse = new if call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() != throw call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() return public public if != for : call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() if > throw new + if != call org.apache.solr.core.CoreContainer.shutdown() call org.apache.solr.core.CoreContainer.shutdown() call org.apache.solr.core.CoreContainer.shutdown() call org.apache.solr.core.CoreContainer.shutdown() call org.apache.solr.core.CoreContainer.shutdown() = LocalRequestFactory public public decl_stmt LocalRequestFactory = new = = = return LocalRequestFactory public public decl_stmt LocalRequestFactory = for = < += call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() + return LocalRequestFactory public public < decl_stmt LocalRequestFactory = call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() call LocalRequestFactory.args() return NamedList decl Map public public if == return new if != throw new decl_stmt java.util.Map < = new / for = < += / = new <> + decl_stmt org.apache.solr.common.util.NamedList = new if call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) == call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) return new