org.apache.lucene.index java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import java.io.PrintStream import java.lang.reflect.Modifier import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.Random import java.util.regex.Matcher import java.util.regex.Pattern import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.codecs.Codec import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.document.DoubleDocValuesField import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.FloatDocValuesField import org.apache.lucene.document.LegacyIntField import org.apache.lucene.document.LegacyLongField import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.SortedNumericDocValuesField import org.apache.lucene.document.SortedSetDocValuesField import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LegacyNumericRangeQuery import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TermQuery import org.apache.lucene.store.BaseDirectoryWrapper import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.store.NIOFSDirectory import org.apache.lucene.store.RAMDirectory import org.apache.lucene.store.SimpleFSDirectory import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.InfoStream import org.apache.lucene.util.LegacyNumericUtils import org.apache.lucene.util.LineFileDocs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.Version import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.index.TestBackwardsCompatibility super super extends String String String decl String decl String decl Map decl String public public throws public public throws public public throws public public throws String private private decl_stmt java.lang.String = != return Path IndexWriter MockAnalyzer LogByteSizeMergePolicy IndexWriterConfig LineFileDocs Directory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.LogByteSizeMergePolicy = new call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() decl_stmt org.apache.lucene.analysis.MockAnalyzer = new call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.util.LineFileDocs = new for = < ++ call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private private throws new new * private private throws new new * Path IndexWriter IndexWriterConfig Directory Document public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new decl_stmt org.apache.lucene.index.IndexWriter = new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new * call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if + == call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() boolean int private static private static decl_stmt boolean final final = decl_stmt int final final = switch case return new case return new : case return new default: return InputStream decl List Path public static public static throws decl_stmt java.util.List < = new <> + call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() = new <> for : decl_stmt java.nio.file.Path = decl_stmt java.io.InputStream = + + + + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() public static public static throws for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() = decl String String String public public decl_stmt java.lang.String = new decl_stmt java.lang.String = for : if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt java.lang.String = call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) + + int String Matcher Version int decl List decl List int Pattern decl List String Version StringBuffer decl List public public throws decl_stmt java.util.regex.Pattern = decl_stmt java.util.List < = new <> for : if && == decl_stmt org.apache.lucene.util.Version = if call org.apache.lucene.util.Version.equals(Object) call org.apache.lucene.util.Version.equals(Object) call org.apache.lucene.util.Version.equals(Object) call org.apache.lucene.util.Version.equals(Object) call org.apache.lucene.util.Version.equals(Object) continue decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() == continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() + decl_stmt org.apache.lucene.util.Version = for : if && == decl_stmt org.apache.lucene.util.Version = decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() == continue if == - && == || call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) = call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() call org.apache.lucene.util.Version.toString() + decl_stmt java.util.List < = new <> for : if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) == continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = decl_stmt int = decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> while < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() && < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt int = call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) if == ++ ++ else if < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ++ else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ++ while < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ while < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() <= && call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return decl_stmt java.lang.StringBuffer = new if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) for : call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) + + if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() == call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) for : call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) + + call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() IndexWriter Path decl CheckIndex ByteArrayOutputStream CheckIndex IndexReader BaseDirectoryWrapper public public throws for = < ++ if + decl_stmt java.nio.file.Path = + + decl_stmt org.apache.lucene.store.BaseDirectoryWrapper = call org.apache.lucene.store.BaseDirectoryWrapper.setCheckIndexOnClose(boolean) call org.apache.lucene.store.BaseDirectoryWrapper.setCheckIndexOnClose(boolean) call org.apache.lucene.store.BaseDirectoryWrapper.setCheckIndexOnClose(boolean) call org.apache.lucene.store.BaseDirectoryWrapper.setCheckIndexOnClose(boolean) call org.apache.lucene.store.BaseDirectoryWrapper.setCheckIndexOnClose(boolean) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.IndexWriter = try = + catch if != new else >= < || < new if finally if != call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() = try = new new + catch if != new else >= < || < new if + != - finally if != try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = decl_stmt java.io.ByteArrayOutputStream = new decl_stmt org.apache.lucene.index.CheckIndex = new call org.apache.lucene.index.CheckIndex.setInfoStream(PrintStream) call org.apache.lucene.index.CheckIndex.setInfoStream(PrintStream) call org.apache.lucene.index.CheckIndex.setInfoStream(PrintStream) call org.apache.lucene.index.CheckIndex.setInfoStream(PrintStream) call org.apache.lucene.index.CheckIndex.setInfoStream(PrintStream) new decl_stmt Status = call org.apache.lucene.index.CheckIndex.checkIndex(List) call org.apache.lucene.index.CheckIndex.checkIndex(List) call org.apache.lucene.index.CheckIndex.checkIndex(List) call org.apache.lucene.index.CheckIndex.checkIndex(List) call org.apache.lucene.index.CheckIndex.checkIndex(List) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call org.apache.lucene.index.CheckIndex.close() call org.apache.lucene.index.CheckIndex.close() call org.apache.lucene.index.CheckIndex.close() call org.apache.lucene.index.CheckIndex.close() call org.apache.lucene.index.CheckIndex.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() call org.apache.lucene.store.BaseDirectoryWrapper.close() IndexWriter Directory public public throws for : if + decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexWriter = new new new call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Directory IndexWriter public public throws for : if + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Directory IndexWriter DirectoryReader public public throws for : decl_stmt org.apache.lucene.index.DirectoryReader = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws for : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Directory Version public public throws for : if + decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.util.Version = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int private private throws decl_stmt int final final = for = < ++ SortedDocValues NumericDocValues boolean NumericDocValues BinaryDocValues int boolean boolean SortedSetDocValues byte BinaryDocValues int IndexReader NumericDocValues NumericDocValues NumericDocValues BytesRef boolean BinaryDocValues decl ScoreDoc long Terms NumericDocValues IndexSearcher BytesRef SortedDocValues Document IndexableField decl List Bits Fields BinaryDocValues SortedNumericDocValues NumericDocValues public public throws decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt boolean final final = != decl_stmt boolean final final = != decl_stmt boolean final final = != assert decl_stmt org.apache.lucene.util.Bits final final = for = < ++ if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) decl_stmt java.util.List < = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() decl_stmt boolean = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() == if decl_stmt int final final = : call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.index.IndexableField = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() + call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() decl_stmt Fields = call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() + decl_stmt org.apache.lucene.index.Terms = call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() + + + else if decl_stmt NumericDocValues = decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt NumericDocValues = decl_stmt org.apache.lucene.index.SortedSetDocValues = if = decl_stmt SortedNumericDocValues = if = for = < ++ decl_stmt int = call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() decl_stmt byte = new >>> >>> >>> byte decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() = call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) = call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) call org.apache.lucene.index.SortedDocValues.get(int) = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() double call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() float int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() if call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() decl_stmt long = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() = call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() if call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new new decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() if = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new new call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new new call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() IndexSearcher decl ScoreDoc Document IndexWriter IndexReader int SegmentInfos public public throws decl_stmt org.apache.lucene.index.SegmentInfos = call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getMinSegmentLuceneVersion() call org.apache.lucene.index.SegmentInfos.getMinSegmentLuceneVersion() call org.apache.lucene.index.SegmentInfos.getMinSegmentLuceneVersion() call org.apache.lucene.index.SegmentInfos.getMinSegmentLuceneVersion() call org.apache.lucene.index.SegmentInfos.getMinSegmentLuceneVersion() decl_stmt org.apache.lucene.index.IndexWriter = new new for = < ++ + decl_stmt int final final = call org.apache.lucene.index.IndexWriter.numDocs() call org.apache.lucene.index.IndexWriter.numDocs() call org.apache.lucene.index.IndexWriter.numDocs() call org.apache.lucene.index.IndexWriter.numDocs() call org.apache.lucene.index.IndexWriter.numDocs() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() = new new call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = = = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() IndexSearcher decl ScoreDoc IndexWriter Document DirectoryReader public public throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = = = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() Path IndexWriter LogByteSizeMergePolicy IndexWriterConfig Term Directory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.LogByteSizeMergePolicy = new call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() : call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() call LogByteSizeMergePolicy.setMaxCFSSegmentSizeMB() decl_stmt org.apache.lucene.index.IndexWriterConfig = new new decl_stmt org.apache.lucene.index.IndexWriter = new for = < ++ call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() if ! = new call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() call LogByteSizeMergePolicy.setNoCFSRatio() : = new new = new call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = new new = new decl_stmt org.apache.lucene.index.Term = new call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() BytesRef Document byte FieldType FieldType FieldType private private throws decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new long call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new byte decl_stmt byte = new >>> >>> >>> byte decl_stmt org.apache.lucene.util.BytesRef = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new double call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new float call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new short call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new Document FieldType FieldType Field private private throws decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.solr.handler.dataimport.config.Field = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) int private private throws decl_stmt int = while != ++ return BytesRef IndexReader TermsEnum BytesRef Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.TermsEnum = decl_stmt org.apache.lucene.util.BytesRef = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() decl_stmt org.apache.lucene.util.BytesRef = new call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) new call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() Directory Version RandomIndexWriter DirectoryReader SegmentReader Version DirectoryReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.index.SegmentReader = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.util.Version = call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.DirectoryReader = for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() = decl_stmt org.apache.lucene.util.Version = call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call org.apache.lucene.util.Version.onOrAfter(Version) call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() DirectoryReader Codec SegmentReader public public throws decl_stmt org.apache.lucene.index.DirectoryReader = for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.SegmentReader = decl_stmt org.apache.lucene.codecs.Codec = call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() + + + call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() + call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call org.apache.lucene.codecs.Codec.getName() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() IndexSearcher decl ScoreDoc Terms Document long TermsEnum IndexReader Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt org.apache.lucene.index.Terms = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt int = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() >= && < = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt long = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() >= && < call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() SegmentInfos private private throws decl_stmt org.apache.lucene.index.SegmentInfos final final = if + for : call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() call org.apache.lucene.index.SegmentInfos.getCommitLuceneVersion() return call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() SegmentInfos private private throws decl_stmt org.apache.lucene.index.SegmentInfos final final = return call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() decl List Directory public public throws decl_stmt java.util.List < = new <> + call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() for : if + decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl List Directory decl Class IndexUpgrader String PrintStream Path public public throws decl_stmt java.io.PrintStream = new new try for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.nio.file.Path = + + decl_stmt java.lang.String = call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() decl_stmt java.util.List < = new <> if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if decl_stmt java.lang.Class < extends extends = : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.index.IndexUpgrader = try = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new catch throw new + call org.apache.lucene.index.IndexUpgrader.upgrade() call org.apache.lucene.index.IndexUpgrader.upgrade() call org.apache.lucene.index.IndexUpgrader.upgrade() call org.apache.lucene.index.IndexUpgrader.upgrade() call org.apache.lucene.index.IndexUpgrader.upgrade() decl_stmt org.apache.lucene.store.Directory = try finally call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() finally RAMDirectory IndexWriterConfig int MergePolicy IndexWriter int int Directory public public throws for : if + decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt int = decl_stmt org.apache.lucene.store.RAMDirectory = new for = < ++ decl_stmt org.apache.lucene.index.MergePolicy = : decl_stmt org.apache.lucene.index.IndexWriterConfig = new new decl_stmt org.apache.lucene.index.IndexWriter = new for = < * ++ ++ try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.MergePolicy = : decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt org.apache.lucene.index.IndexWriter = new call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt int final final = decl_stmt int final final = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Path Directory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Path Directory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() NumericDocValues NumericDocValues private private throws decl_stmt NumericDocValues = decl_stmt NumericDocValues = for = < ++ call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() * BinaryDocValues BinaryDocValues private private throws decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = for = < ++ * LeafReader DirectoryReader private private throws decl_stmt org.apache.lucene.index.DirectoryReader = for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.LeafReader = call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() IndexWriterConfig IndexWriter Path Directory public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new decl_stmt org.apache.lucene.index.IndexWriter = new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() DirectoryReader IndexWriter Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexWriter Directory public public throws for : decl_stmt org.apache.lucene.store.Directory = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() BytesRef byte long static static decl_stmt org.apache.lucene.util.BytesRef = = decl_stmt byte = ++ decl_stmt long = & for = & != += = ++ |= & << return BytesRef static static decl_stmt org.apache.lucene.util.BytesRef = new while & ~ != ++ = & | >>>= ++ = byte return