org.apache.lucene.facet.taxonomy.directory org.apache.lucene.facet.taxonomy.ParallelTaxonomyArrays import org.apache.lucene.facet.taxonomy.TaxonomyReader import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiFields import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.ArrayUtil import java.io.IOException import class org.apache.lucene.facet.taxonomy.directory.TaxonomyIndexArrays super super extends boolean decl int decl int private final synchronized private final synchronized if ! = new = new if != else = private private for = < ++ = if == = = for = < ++ = = PostingsEnum int private private throws if == return decl_stmt org.apache.lucene.index.PostingsEnum = if == || call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() == throw new + decl_stmt int = for = < ++ if call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() == if call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() == throw new + = call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() if call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() == if + < throw new + + break else throw new + decl int if >= decl_stmt int = + = return new = return public public return public public if ! return public public if ! return