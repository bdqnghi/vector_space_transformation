org.apache.solr.update static static org.apache.solr.core.Config.assertWarnOrFail import java.lang.invoke.MethodHandles import java.util.List import java.util.Map import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.DelegatingAnalyzerWrapper import org.apache.lucene.index.ConcurrentMergeScheduler import org.apache.lucene.index.IndexWriter.IndexReaderWarmer import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LogMergePolicy import org.apache.lucene.index.MergePolicy import org.apache.lucene.index.MergeScheduler import org.apache.lucene.index.TieredMergePolicy import org.apache.lucene.util.InfoStream import org.apache.lucene.util.Version import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.Utils import org.apache.solr.core.DirectoryFactory import org.apache.solr.core.MapSerializable import org.apache.solr.core.PluginInfo import org.apache.solr.core.SolrConfig import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrResourceLoader import org.apache.solr.index.DefaultMergePolicyFactory import org.apache.solr.index.MergePolicyFactory import org.apache.solr.index.MergePolicyFactoryArgs import org.apache.solr.schema.IndexSchema import org.apache.solr.util.SolrPluginUtils import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.SolrIndexConfig super super implements Logger int Version int String String int PluginInfo String InfoStream PluginInfo boolean PluginInfo int String PluginInfo double decl Map public < public < decl_stmt java.util.Map < = != if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() else if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() call org.apache.solr.core.PluginInfo.toMap() return decl List private private decl_stmt java.util.List < = return call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() : call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() protected protected return IndexReaderWarmer IndexWriterConfig IndexSchema public public decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new if != - call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) if != - call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setSimilarity(Similarity) call org.apache.lucene.index.IndexWriterConfig.setSimilarity(Similarity) call org.apache.lucene.index.IndexWriterConfig.setSimilarity(Similarity) call org.apache.lucene.index.IndexWriterConfig.setSimilarity(Similarity) call org.apache.lucene.index.IndexWriterConfig.setSimilarity(Similarity) call org.apache.solr.schema.IndexSchema.getSimilarity() call org.apache.solr.schema.IndexSchema.getSimilarity() call org.apache.solr.schema.IndexSchema.getSimilarity() call org.apache.solr.schema.IndexSchema.getSimilarity() call org.apache.solr.schema.IndexSchema.getSimilarity() call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setInfoStream(InfoStream) call org.apache.lucene.index.IndexWriterConfig.setInfoStream(InfoStream) call org.apache.lucene.index.IndexWriterConfig.setInfoStream(InfoStream) call org.apache.lucene.index.IndexWriterConfig.setInfoStream(InfoStream) call org.apache.lucene.index.IndexWriterConfig.setInfoStream(InfoStream) call org.apache.lucene.index.IndexWriterConfig.setUseCompoundFile(boolean) call org.apache.lucene.index.IndexWriterConfig.setUseCompoundFile(boolean) call org.apache.lucene.index.IndexWriterConfig.setUseCompoundFile(boolean) call org.apache.lucene.index.IndexWriterConfig.setUseCompoundFile(boolean) call org.apache.lucene.index.IndexWriterConfig.setUseCompoundFile(boolean) if != decl_stmt IndexReaderWarmer = call org.apache.solr.schema.IndexSchema.getResourceLoader() call org.apache.solr.schema.IndexSchema.getResourceLoader() call org.apache.solr.schema.IndexSchema.getResourceLoader() call org.apache.solr.schema.IndexSchema.getResourceLoader() call org.apache.solr.schema.IndexSchema.getResourceLoader() new new call org.apache.lucene.index.IndexWriterConfig.getInfoStream() call org.apache.lucene.index.IndexWriterConfig.getInfoStream() call org.apache.lucene.index.IndexWriterConfig.getInfoStream() call org.apache.lucene.index.IndexWriterConfig.getInfoStream() call org.apache.lucene.index.IndexWriterConfig.getInfoStream() call org.apache.lucene.index.IndexWriterConfig.setMergedSegmentWarmer(IndexReaderWarmer) call org.apache.lucene.index.IndexWriterConfig.setMergedSegmentWarmer(IndexReaderWarmer) call org.apache.lucene.index.IndexWriterConfig.setMergedSegmentWarmer(IndexReaderWarmer) call org.apache.lucene.index.IndexWriterConfig.setMergedSegmentWarmer(IndexReaderWarmer) call org.apache.lucene.index.IndexWriterConfig.setMergedSegmentWarmer(IndexReaderWarmer) return private private return != || != - || != - MergePolicyFactory SolrResourceLoader String MergePolicyFactoryArgs private private final final if return decl_stmt java.lang.String final final decl_stmt org.apache.solr.index.MergePolicyFactoryArgs final final if == = = new else = = new decl_stmt org.apache.solr.core.SolrResourceLoader final final = decl_stmt MergePolicyFactory final final = call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) new new return call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() TieredMergePolicy MergePolicyFactory SolrResourceLoader MergePolicy LogMergePolicy MergePolicyFactoryArgs private private decl_stmt org.apache.lucene.index.MergePolicy final final if == decl_stmt org.apache.solr.core.SolrResourceLoader final final = decl_stmt org.apache.solr.index.MergePolicyFactoryArgs final final = new decl_stmt MergePolicyFactory final final = call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) new new = call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() call MergePolicyFactory.getMergePolicy() else = if instanceof decl_stmt org.apache.lucene.index.LogMergePolicy = if != - call LogMergePolicy.setMaxMergeDocs() call LogMergePolicy.setMaxMergeDocs() call LogMergePolicy.setMaxMergeDocs() call LogMergePolicy.setMaxMergeDocs() call LogMergePolicy.setMaxMergeDocs() if != - call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) else if instanceof decl_stmt org.apache.lucene.index.TieredMergePolicy = if != - call org.apache.lucene.index.TieredMergePolicy.setMaxMergeAtOnce(int) call org.apache.lucene.index.TieredMergePolicy.setMaxMergeAtOnce(int) call org.apache.lucene.index.TieredMergePolicy.setMaxMergeAtOnce(int) call org.apache.lucene.index.TieredMergePolicy.setMaxMergeAtOnce(int) call org.apache.lucene.index.TieredMergePolicy.setMaxMergeAtOnce(int) call org.apache.lucene.index.TieredMergePolicy.setSegmentsPerTier(double) call org.apache.lucene.index.TieredMergePolicy.setSegmentsPerTier(double) call org.apache.lucene.index.TieredMergePolicy.setSegmentsPerTier(double) call org.apache.lucene.index.TieredMergePolicy.setSegmentsPerTier(double) call org.apache.lucene.index.TieredMergePolicy.setSegmentsPerTier(double) else if != - call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if != return Integer NamedList MergeScheduler String Integer private private decl_stmt java.lang.String = == : decl_stmt org.apache.lucene.index.MergeScheduler = if != if instanceof decl_stmt org.apache.solr.common.util.NamedList = call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() decl_stmt java.lang.Integer = call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) if == = decl_stmt java.lang.Integer = call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) if == = else return public public return Object boolean private private if == || == return decl_stmt java.lang.Object = call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() call PluginInfo.initArgs() if != call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + if instanceof decl_stmt boolean = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + = else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString()