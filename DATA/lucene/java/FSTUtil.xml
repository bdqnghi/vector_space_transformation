org.apache.lucene.search.suggest.analyzing java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.util.IntsRef import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.Transition import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.Util import class org.apache.lucene.search.suggest.analyzing.FSTUtil IntsRefBuilder decl FST decl Path decl List int int decl FST IntsRefBuilder decl List IntsRefBuilder decl BytesReader Transition decl FST public static < < < public static < < < < throws assert decl_stmt java.util.List final final final < < = new <> decl_stmt java.util.List final final final < < = new <> if == return call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> new < new decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = new <> decl_stmt BytesReader final final final final final = decl_stmt org.apache.lucene.util.automaton.Transition = new while call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() != decl_stmt java.nio.file.Path final final final < = call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() continue decl_stmt org.apache.lucene.util.IntsRefBuilder = decl_stmt int = for = < ++ decl_stmt int final final = decl_stmt int final final = if == decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = if != decl_stmt org.apache.lucene.util.IntsRefBuilder final final = new call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl Path.get() call decl Path.get() call decl Path.get() call decl Path.get() call decl Path.get() call decl FST.append() call decl FST.append() call decl FST.append() call decl FST.append() call decl FST.append() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> new < else decl_stmt org.apache.lucene.util.fst.FST < = while != && <= assert <= assert >= : + + decl_stmt org.apache.lucene.util.IntsRefBuilder final final = new call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl FST.copyInts() call decl Path.get() call decl Path.get() call decl Path.get() call decl Path.get() call decl Path.get() call decl FST.append() call decl FST.append() call decl FST.append() call decl FST.append() call decl FST.append() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> new < decl_stmt int final final = = call IntsRefBuilder.isLast() call IntsRefBuilder.isLast() call IntsRefBuilder.isLast() call IntsRefBuilder.isLast() call IntsRefBuilder.isLast() : assert == || < : + + + return