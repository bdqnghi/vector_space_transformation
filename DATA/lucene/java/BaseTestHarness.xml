org.apache.solr.util org.apache.solr.client.solrj.impl.HttpClientUtil import org.apache.solr.common.SolrException import org.apache.solr.common.util.XML import org.w3c.dom.Document import org.xml.sax.SAXException import javax.xml.namespace.QName import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.xpath.XPath import javax.xml.xpath.XPathConstants import javax.xml.xpath.XPathExpressionException import javax.xml.xpath.XPathFactory import java.io.ByteArrayInputStream import java.io.IOException import java.io.StringWriter import java.io.UnsupportedEncodingException import java.nio.charset.StandardCharsets import class org.apache.solr.util.BaseTestHarness decl ThreadLocal decl ThreadLocal DocumentBuilder public static public static try decl_stmt org.apache.solr.update.DocumentBuilder = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() return catch throw new XPath public static public static try decl_stmt XPath = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() return catch throw new Document Boolean public static public static throws if == || == return decl_stmt org.apache.lucene.document.Document = try = new catch throw new catch throw new for : = decl_stmt java.lang.Boolean = if ! return return Document public static public static throws if == return decl_stmt org.apache.lucene.document.Document = try = new catch throw new catch throw new = return StringWriter public static public static try decl_stmt StringWriter = new call StringWriter.append() call StringWriter.append() call StringWriter.append() call StringWriter.append() call StringWriter.append() for = < += + call StringWriter.append() call StringWriter.append() call StringWriter.append() call StringWriter.append() call StringWriter.append() return call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() catch throw new StringWriter public static public static try decl_stmt StringWriter = new return call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() catch throw new StringWriter public static public static try decl_stmt StringWriter = new return call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() catch throw new StringWriter private static private static try decl_stmt StringWriter = new return call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() catch throw new public static public static return StringWriter public static public static try decl_stmt StringWriter = new if == || == else return call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() catch throw new public static public static return public public throws return public public throws try return catch return String String public public throws try decl_stmt java.lang.String = decl_stmt java.lang.String = + return == : catch throw new