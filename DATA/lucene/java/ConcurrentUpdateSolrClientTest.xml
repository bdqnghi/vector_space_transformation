org.apache.solr.client.solrj.impl org.apache.http.HttpResponse import org.apache.solr.SolrJettyTestBase import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.SolrjNamedThreadFactory import org.eclipse.jetty.servlet.ServletHolder import org.junit.BeforeClass import org.junit.Test import javax.servlet.ServletException import javax.servlet.http.HttpServlet import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import java.io.EOFException import java.io.IOException import java.io.InputStream import java.util.Enumeration import java.util.HashMap import java.util.Map import java.util.concurrent.ExecutorService import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicInteger import class org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClientTest super super extends public static public static = = = = public static public static = String decl Enumeration private private decl_stmt java.util.Enumeration < = = new <> while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String final final = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() private private InputStream JavaBinUpdateRequestCodec protected protected throws = decl_stmt java.io.InputStream = decl_stmt org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec = new for try call org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(InputStream,StreamingUpdateHandler) call org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(InputStream,StreamingUpdateHandler) call org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(InputStream,StreamingUpdateHandler) call org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(InputStream,StreamingUpdateHandler) call org.apache.solr.client.solrj.request.JavaBinUpdateRequestCodec.unmarshal(InputStream,StreamingUpdateHandler) catch break private private if != try catch throw new public public JettyConfig public static public static throws decl_stmt org.apache.solr.client.solrj.embedded.JettyConfig = new int StringBuilder String int int ExecutorService int ConcurrentUpdateSolrClient AtomicInteger int int int AtomicInteger public public throws decl_stmt java.lang.String = + decl_stmt int = decl_stmt int = decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt java.lang.StringBuilder final final = new decl_stmt org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient = new call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int) call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int) call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int) call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int) call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.setPollQueueTime(int) call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() decl_stmt int = decl_stmt java.util.concurrent.ExecutorService = new decl_stmt int = decl_stmt int = for = < ++ call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() new call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.blockUntilFinished() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow() call org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient.shutdownNow() decl_stmt int = > + call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() == + + + call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() == decl_stmt int = * + + + == int int SolrInputDocument public public throws decl_stmt int = decl_stmt int = try = new decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) new try = new + new int int ExecutorService int int int int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = * try = new decl_stmt int = decl_stmt java.util.concurrent.ExecutorService = new for = < ++ call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() new call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() new try = new + new SolrInputDocument UpdateRequest String public public for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new decl_stmt java.lang.String = + + call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) try if == else catch public public + public public