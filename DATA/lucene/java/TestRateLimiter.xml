org.apache.lucene.store java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.store.RateLimiter.SimpleRateLimiter import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.ThreadInterruptedException import class org.apache.lucene.store.TestRateLimiter super super extends Thread public public throws decl_stmt java.lang.Thread = new public public try new * * * / catch call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() public public try new * * * / catch long double long CountDownLatch long AtomicLong long decl Thread SimpleRateLimiter double double public public throws decl_stmt double = + * decl_stmt SimpleRateLimiter final final = new decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.lang.Thread = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new for = < ++ = new public public try call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) catch throw new decl_stmt long = for = < ++ decl_stmt long = call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) += if > call SimpleRateLimiter.getMinPauseCheckBytes() call SimpleRateLimiter.getMinPauseCheckBytes() call SimpleRateLimiter.getMinPauseCheckBytes() call SimpleRateLimiter.getMinPauseCheckBytes() call SimpleRateLimiter.getMinPauseCheckBytes() call SimpleRateLimiter.pause() call SimpleRateLimiter.pause() call SimpleRateLimiter.pause() call SimpleRateLimiter.pause() call SimpleRateLimiter.pause() = decl_stmt long = call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() for : decl_stmt long = decl_stmt double = call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() / / / - / decl_stmt double = / + + + <= + + + <= long long public public try catch throw new decl_stmt long = for = < ++ decl_stmt long = += if > =