org.apache.solr.morphlines.cell java.io.IOException import java.io.InputStream import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.IllformedLocaleException import java.util.List import java.util.Locale import java.util.Map import java.util.Map.Entry import java.util.TreeMap import com.google.common.base.Joiner import com.google.common.base.Preconditions import com.google.common.collect.ArrayListMultimap import com.google.common.collect.ListMultimap import com.google.common.io.Closeables import com.typesafe.config.Config import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.params.MultiMapSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.SuppressForbidden import org.apache.solr.handler.extraction.ExtractingParams import org.apache.solr.handler.extraction.ExtractionDateUtil import org.apache.solr.handler.extraction.SolrContentHandler import org.apache.solr.handler.extraction.SolrContentHandlerFactory import org.apache.solr.morphlines.solr.SolrLocator import org.apache.solr.schema.IndexSchema import org.apache.tika.exception.TikaException import org.apache.tika.io.TikaInputStream import org.apache.tika.metadata.Metadata import org.apache.tika.mime.MediaType import org.apache.tika.parser.ParseContext import org.apache.tika.parser.Parser import org.apache.tika.sax.XHTMLContentHandler import org.apache.tika.sax.xpath.Matcher import org.apache.tika.sax.xpath.MatchingContentHandler import org.apache.tika.sax.xpath.XPathParser import org.kitesdk.morphline.api.Command import org.kitesdk.morphline.api.CommandBuilder import org.kitesdk.morphline.api.MorphlineCompilationException import org.kitesdk.morphline.api.MorphlineContext import org.kitesdk.morphline.api.MorphlineRuntimeException import org.kitesdk.morphline.api.Record import org.kitesdk.morphline.base.Configs import org.kitesdk.morphline.base.Fields import org.kitesdk.morphline.stdio.AbstractParser import org.xml.sax.ContentHandler import org.xml.sax.SAXException import class org.apache.solr.morphlines.cell.SolrCellBuilder super super implements public < public < return public public return new Matcher Parser Record ContentHandler SolrContentHandler SolrInputDocument ParseContext Metadata protected protected decl_stmt org.apache.solr.analytics.util.Parser = if == return decl_stmt ParseContext = new call ParseContext.set() call ParseContext.set() call ParseContext.set() call ParseContext.set() call ParseContext.set() decl_stmt Metadata = new for < : call Metadata.add() call Metadata.add() call Metadata.add() call Metadata.add() call Metadata.add() decl_stmt org.apache.solr.handler.extraction.SolrContentHandler = try = decl_stmt java.net.ContentHandler = if != decl_stmt java.util.regex.Matcher = = new try call sun.tools.java.Parser.parse(String) call sun.tools.java.Parser.parse(String) call sun.tools.java.Parser.parse(String) call sun.tools.java.Parser.parse(String) call sun.tools.java.Parser.parse(String) catch throw new finally if != decl_stmt org.apache.solr.common.SolrInputDocument = call org.apache.solr.handler.extraction.SolrContentHandler.newDocument() call org.apache.solr.handler.extraction.SolrContentHandler.newDocument() call org.apache.solr.handler.extraction.SolrContentHandler.newDocument() call org.apache.solr.handler.extraction.SolrContentHandler.newDocument() call org.apache.solr.handler.extraction.SolrContentHandler.newDocument() decl_stmt Record = return Parser String MediaType private private if ! return decl_stmt java.lang.String = assert != decl_stmt MediaType = decl_stmt org.apache.solr.analytics.util.Parser = if != return for < : if return if + + + return private private if ! return return MediaType private private decl_stmt MediaType = return call MediaType.getBaseType() call MediaType.getBaseType() call MediaType.getBaseType() call MediaType.getBaseType() call MediaType.getBaseType() String String String private private decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = return call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) private static private static < extends extends < try return catch throw new + + catch throw new + Record private private decl_stmt Record = new for < : call Record.getFields() call Record.getFields() call Record.getFields() call Record.getFields() call Record.getFields() return = private = private if == return for : if return try return new catch throw new +