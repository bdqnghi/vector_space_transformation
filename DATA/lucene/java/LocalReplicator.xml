org.apache.lucene.replicator java.io.IOException import java.io.InputStream import java.util.ArrayList import java.util.HashMap import java.util.Map import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.store.AlreadyClosedException import class org.apache.lucene.replicator.LocalReplicator super super implements long decl Map AtomicInteger boolean RefCountedRevision long boolean int public public throws if <= throw new decl_stmt int final final = if == decl_stmt boolean = try = finally if ! else if < throw new + + public public return < - = decl ArrayList private private throws decl_stmt java.util.ArrayList final final final < = new <> for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() for : ReplicationSession private private throws decl_stmt ReplicationSession = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() if != call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() protected final synchronized protected final synchronized if throw new String ReplicationSession SessionToken public synchronized public synchronized if == return if != && call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() call RefCountedRevision.revision() <= return call RefCountedRevision.incRef() call RefCountedRevision.incRef() call RefCountedRevision.incRef() call RefCountedRevision.incRef() call RefCountedRevision.incRef() decl_stmt java.lang.String final final = call SessionToken.incrementAndGet() call SessionToken.incrementAndGet() call SessionToken.incrementAndGet() call SessionToken.incrementAndGet() call SessionToken.incrementAndGet() decl_stmt org.apache.lucene.replicator.SessionToken final final = new decl_stmt ReplicationSession final final = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public synchronized public synchronized throws if ! for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() = public public return ReplicationSession public synchronized public synchronized throws decl_stmt ReplicationSession = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != && call ReplicationSession.isExpired() call ReplicationSession.isExpired() call ReplicationSession.isExpired() call ReplicationSession.isExpired() call ReplicationSession.isExpired() = if == throw new + + + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() call ReplicationSession.revision() int RefCountedRevision public synchronized public synchronized throws if != decl_stmt int = if == return if < throw new + + + decl_stmt RefCountedRevision final final = = new if != call RefCountedRevision.decRef() call RefCountedRevision.decRef() call RefCountedRevision.decRef() call RefCountedRevision.decRef() call RefCountedRevision.decRef() public synchronized public synchronized throws public synchronized public synchronized throws =