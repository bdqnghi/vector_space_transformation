org.apache.solr.cloud java.io.File import java.lang.invoke.MethodHandles import java.util.Collection import java.util.HashMap import java.util.List import java.util.Map import com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule import org.apache.lucene.index.TieredMergePolicy import org.apache.lucene.util.LuceneTestCase import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.client.solrj.response.RequestStatusState import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.core.CoreDescriptor import org.apache.solr.index.TieredMergePolicyFactory import org.apache.solr.util.RevertDefaultThreadHandlerRule import org.junit.ClassRule import org.junit.Rule import org.junit.Test import org.junit.rules.RuleChain import org.junit.rules.TestRule import org.slf4j.Logger import org.slf4j.LoggerFactory import class annotation org.apache.solr.cloud.TestMiniSolrCloudClusterBase super super extends Logger int TestRule int int TestRule String public public throws decl_stmt java.lang.String final final = decl JettyConfig private private throws decl_stmt org.apache.lucene.util.fst.Builder = call decl JettyConfig.waitForLoadingCoresToFinish() call decl JettyConfig.waitForLoadingCoresToFinish() call decl JettyConfig.waitForLoadingCoresToFinish() call decl JettyConfig.waitForLoadingCoresToFinish() call decl JettyConfig.waitForLoadingCoresToFinish() return new call decl JettyConfig.build() call decl JettyConfig.build() call decl JettyConfig.build() call decl JettyConfig.build() call decl JettyConfig.build() String File decl Map private private throws decl_stmt java.lang.String = decl_stmt File = new + + + + decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() JettySolrRunner decl HashMap JettySolrRunner decl Collection SolrInputDocument decl List MiniSolrCloudCluster ClusterState RequestStatusState String CloudSolrClient String JettySolrRunner SolrQuery QueryResponse protected protected throws decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() try call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() decl_stmt java.util.List < = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() - call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() decl_stmt java.lang.String final final = : + + + if != decl_stmt RequestStatusState final final = try = new call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() = new call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() decl_stmt org.apache.solr.client.solrj.SolrQuery = new call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt HashMap < = new < for : call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() decl_stmt java.lang.String = + call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() decl_stmt java.util.Collection < = call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) for : call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() for : call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() > decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) - call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() = call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() protected protected throws