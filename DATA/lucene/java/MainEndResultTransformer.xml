org.apache.solr.search.grouping.endresulttransformer org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.grouping.GroupDocs import org.apache.lucene.search.grouping.TopGroups import org.apache.lucene.util.BytesRef import org.apache.solr.common.SolrDocumentList import org.apache.solr.handler.component.ResponseBuilder import java.util.Map import class org.apache.solr.search.grouping.endresulttransformer.MainEndResultTransformer super super implements decl TopGroups SolrDocumentList Float Object public public < decl_stmt java.lang.Object = if decl_stmt org.apache.lucene.search.grouping.TopGroups < = < decl_stmt org.apache.solr.common.SolrDocumentList = new call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) decl_stmt java.lang.Float = for < : for : if < = call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() if != call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float)