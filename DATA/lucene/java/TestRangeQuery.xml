org.apache.solr.search org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrInputDocument import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.ResultContext import org.apache.solr.response.SolrQueryResponse import org.junit.Before import org.junit.BeforeClass import org.junit.Test import java.util.* import class org.apache.solr.search.TestRangeQuery super super extends Random public static public static throws public public throws int decl_stmt int = if == && == = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) else = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - + for : SolrInputDocument public public for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + decl Map decl String double String int decl List long decl String decl Map decl Map decl String decl String decl String decl String public public throws decl_stmt int = decl_stmt long = decl_stmt double = decl_stmt java.lang.String = + - + + + + - + + decl_stmt java.lang.String = + - + + + + - + + decl_stmt java.lang.String = + - + + + + - + + decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new <> call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() for = < - ++ decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + int int SolrQueryRequest SolrQueryResponse decl List boolean decl String boolean int SolrQueryResponse String decl String String int decl String DocList boolean DocList public public throws decl_stmt java.lang.String = decl_stmt java.lang.String final final final = decl_stmt int final final = - decl_stmt int final final = new public public if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) != decl_stmt java.lang.String = decl_stmt java.lang.String = for = < ++ decl_stmt int = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - + - decl_stmt int = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + - decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == decl_stmt boolean = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == decl_stmt boolean = || || call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt java.util.List < = new <> for : decl_stmt java.lang.String = + + : + : + + : + : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : decl_stmt java.lang.String = + + : + + : + + : + : + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.response.SolrQueryResponse = for : decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.response.SolrQueryResponse = if != decl_stmt org.apache.solr.search.DocList = call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() decl_stmt org.apache.solr.search.DocList = call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = public public if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) != DocIterator int static static decl_stmt org.apache.solr.search.DocIterator = while call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() call DocIterator.hasNext() decl_stmt int = call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() call org.apache.solr.search.DocIterator.nextDoc() return