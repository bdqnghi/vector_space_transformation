org.apache.lucene.search.suggest.analyzing java.io.IOException import java.io.Reader import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.Comparator import java.util.HashSet import java.util.List import java.util.Set import java.util.TreeSet import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.CannedTokenStream import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.Token import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.TokenStreamToAutomaton import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.search.suggest.Input import org.apache.lucene.search.suggest.InputArrayIterator import org.apache.lucene.search.suggest.Lookup.LookupResult import org.apache.lucene.store.Directory import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IOUtils import org.apache.lucene.util.IntsRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.FiniteStringsIterator import org.apache.lucene.util.fst.Util import class org.apache.lucene.search.suggest.analyzing.FuzzySuggesterTest super super extends decl Comparator decl List decl List MockAnalyzer int FuzzySuggester Directory int String public public throws decl_stmt java.util.List < = new <> decl_stmt int = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.apache.lucene.analysis.MockAnalyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new | - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt int = for = < ++ decl_stmt java.lang.String = decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl List decl List MockAnalyzer int FuzzySuggester Directory int String public public throws decl_stmt java.util.List < = new <> decl_stmt int = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.apache.lucene.analysis.MockAnalyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new | - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt int = for = < ++ decl_stmt java.lang.String = decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Directory Input FuzzySuggester Analyzer decl List public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new new new new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Directory Input decl List FuzzySuggester Analyzer public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new | - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer decl Input decl List FuzzySuggester Directory int public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt int = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int Tokenizer decl List Analyzer Input TokenStream FuzzySuggester Directory decl TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl TokenStream int TokenStream Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final TokenStream public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final Directory FuzzySuggester Analyzer decl List public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() int Tokenizer decl List Analyzer Input TokenStream FuzzySuggester Directory decl TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl TokenStream int TokenStream Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final TokenStream public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final Token private static private static decl_stmt org.apache.lucene.queryparser.surround.parser.Token final final = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) return int Tokenizer private final private final return new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if ++ != return new new else return new new protected protected final final int Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if ++ != return new new else return new new protected protected final final public public if ++ != return new new else return new new protected protected final final Analyzer Directory decl List FuzzySuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new | - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new new new new new new for = < ++ decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer Directory decl List FuzzySuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new new new new new new for = < ++ decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int public public decl_stmt int = if != return else if > return - else if < return else assert return static static return - < public public throws = int int public final public final throws decl_stmt int = while if != || ! decl_stmt int = + if if == = = return if += return MockTokenizer TokenStream public public decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.TokenStream if != = new else = return new int int decl List int TokenStreamToAutomaton decl Set int String decl List boolean BytesRef boolean decl Input String decl String BytesRefBuilder decl TreeSet String boolean Directory decl List boolean Analyzer StringBuilder int int int String decl List FuzzySuggester boolean Automaton FiniteStringsIterator int public public throws decl_stmt int = decl_stmt java.util.List final final final < = new <> decl_stmt java.util.TreeSet final final final < = new <> decl_stmt java.util.Set final final final < = new <> decl_stmt org.apache.lucene.search.suggest.Input = new decl_stmt boolean = decl_stmt boolean = decl_stmt int final final = decl_stmt boolean final final = if + + + + + + + + + for = < ++ decl_stmt int = decl_stmt java.lang.String decl_stmt java.lang.String while = = decl_stmt boolean = for = < ++ decl_stmt java.lang.String while = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > if > += if && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > && call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - != : call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - != += += if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) if && += = else += = break = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) if && += if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() break for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt int = << = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if decl_stmt java.util.List < = new <> for : + + + + + decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new : - call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new for : if + decl_stmt int final final = decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() decl_stmt java.util.List < = new <> decl_stmt java.lang.String = decl_stmt java.lang.StringBuilder = new decl_stmt boolean = for = < ++ decl_stmt java.lang.String = if && call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > && ! call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) if && call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() while decl_stmt java.lang.String = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) break = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == continue if && || += if + decl_stmt org.apache.lucene.analysis.TokenStreamToAutomaton = call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.getTokenStreamToAutomaton() call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.getTokenStreamToAutomaton() call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.getTokenStreamToAutomaton() call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.getTokenStreamToAutomaton() call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.getTokenStreamToAutomaton() decl_stmt org.apache.lucene.util.automaton.Automaton = call FuzzySuggester.convertAutomaton() call FuzzySuggester.convertAutomaton() call FuzzySuggester.convertAutomaton() call FuzzySuggester.convertAutomaton() call FuzzySuggester.convertAutomaton() call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.toLevenshteinAutomata(Automaton) call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.toLevenshteinAutomata(Automaton) call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.toLevenshteinAutomata(Automaton) call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.toLevenshteinAutomata(Automaton) call org.apache.lucene.search.suggest.analyzing.FuzzySuggester.toLevenshteinAutomata(Automaton) call FuzzySuggester.toLookupAutomaton() call FuzzySuggester.toLookupAutomaton() call FuzzySuggester.toLookupAutomaton() call FuzzySuggester.toLookupAutomaton() call FuzzySuggester.toLookupAutomaton() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() decl_stmt org.apache.lucene.util.BytesRefBuilder = new for : call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new call FuzzySuggester.toAutomaton() call FuzzySuggester.toAutomaton() call FuzzySuggester.toAutomaton() call FuzzySuggester.toAutomaton() call FuzzySuggester.toAutomaton() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() for = call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() != decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt boolean = for = < ++ decl_stmt int = call org.apache.lucene.util.automaton.Automaton.step(int,int) call org.apache.lucene.util.automaton.Automaton.step(int,int) call org.apache.lucene.util.automaton.Automaton.step(int,int) call org.apache.lucene.util.automaton.Automaton.step(int,int) call org.apache.lucene.util.automaton.Automaton.step(int,int) & if == - break else if call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new = break = if ! && call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new > || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > new < public public decl_stmt int = if == return else return if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() if for : + + + for : + + + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int public public decl_stmt int = if == return else return Analyzer Directory decl List decl List FuzzySuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new - decl_stmt java.util.List < = new new new new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new decl_stmt java.util.List < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer Directory decl List FuzzySuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new - decl_stmt java.util.List < = new new new new new call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() decl char StringBuilder int private static private static decl_stmt char = decl_stmt java.lang.StringBuilder = new for = < ++ if >= && && < - switch case if < - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = + < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() case for = + < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() case if + < call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) ++ ++ for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() case decl_stmt int = : + - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl char int private private decl_stmt int final final = decl_stmt char final final final = new for = < ++ = + return new Analyzer String decl List boolean FuzzySuggester decl List Directory String int int int int int decl Set LookupResult LookupResult decl List public public throws decl_stmt int final final = decl_stmt java.util.List final final final < = new <> decl_stmt java.util.Set final final final < = new <> for = < ++ decl_stmt java.lang.String final final = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new < public public return call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() call Analyzer.term() if for : + + + decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt int = : decl_stmt int = decl_stmt boolean = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.FuzzySuggester = new - if + + + + + + + call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() call FuzzySuggester.build() new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int final final = for = < ++ decl_stmt java.lang.String final final = if + decl_stmt java.util.List final final final < = if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : + decl_stmt java.util.List final final final < = call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() call FuzzySuggester.lookup() if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : + new decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ decl_stmt LookupResult final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt LookupResult final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + + call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public public return int int decl List int String boolean String private < private < < decl_stmt java.util.List final final final < = new <> decl_stmt int final final = for : decl_stmt boolean = for = < ++ if == break if == || != byte = break if decl_stmt int final final = if >= - decl_stmt int decl_stmt java.lang.String final final = if == = else if && < = else = + for = - <= ++ if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < - continue decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) - = if <= break if <= call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new return int int int int public public decl_stmt int final final = decl_stmt int final final = decl_stmt int final final = for = < ++ decl_stmt int = - if != return return - int public public if > return - else if < return else decl_stmt int final final = call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() assert != : + return int int int int int int int IntsRef IntsRef public public decl_stmt org.apache.lucene.util.IntsRef decl_stmt org.apache.lucene.util.IntsRef decl_stmt int decl_stmt int = = = decl_stmt int final final = = new + + if == || == if == return else return decl_stmt int decl_stmt int decl_stmt int decl_stmt int for = <= ++ = for = <= ++ = for = <= ++ = - for = <= ++ = - == : = - + - + - - + if && > && > && - == - && - == - = - - + return IntsRef int private static private static decl_stmt org.apache.lucene.util.IntsRef = new decl_stmt int = for = = < += = ++ = return private private return