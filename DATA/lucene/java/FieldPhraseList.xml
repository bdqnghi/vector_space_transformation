org.apache.lucene.search.vectorhighlight java.util.ArrayList import java.util.Collection import java.util.Iterator import java.util.LinkedList import java.util.List import org.apache.lucene.search.vectorhighlight.FieldQuery.QueryPhraseMap import org.apache.lucene.search.vectorhighlight.FieldTermStack.TermInfo import org.apache.lucene.util.MergedIterator import class org.apache.lucene.search.vectorhighlight.FieldPhraseList decl LinkedList public < public < return public public for : if return StringBuilder public public decl_stmt java.lang.StringBuilder = new for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public < public < return public public return public < public < return public public return public public return - int int int int public public decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = if <= && < return if < && <= return if <= && < return if < && <= return return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return int public public decl_stmt int = - if != return = - if != return return int - int long int public public decl_stmt int final final = decl_stmt int = = * + = * + decl_stmt long = = * + ^ >>> return WeightedPhraseInfo public public if == return if == return if != return decl_stmt WeightedPhraseInfo = if != call WeightedPhraseInfo.getStartOffset() call WeightedPhraseInfo.getStartOffset() call WeightedPhraseInfo.getStartOffset() call WeightedPhraseInfo.getStartOffset() call WeightedPhraseInfo.getStartOffset() return if != call WeightedPhraseInfo.getEndOffset() call WeightedPhraseInfo.getEndOffset() call WeightedPhraseInfo.getEndOffset() call WeightedPhraseInfo.getEndOffset() call WeightedPhraseInfo.getEndOffset() return if != call WeightedPhraseInfo.getBoost() call WeightedPhraseInfo.getBoost() call WeightedPhraseInfo.getBoost() call WeightedPhraseInfo.getBoost() call WeightedPhraseInfo.getBoost() return return public public = public public return public public return int public public decl_stmt int = - if != return return - int int public public decl_stmt int final final = decl_stmt int = = * + = * + return Toffs public public if == return if == return if != return decl_stmt Toffs = if != call Toffs.getStartOffset() call Toffs.getStartOffset() call Toffs.getStartOffset() call Toffs.getStartOffset() call Toffs.getStartOffset() return if != call Toffs.getEndOffset() call Toffs.getEndOffset() call Toffs.getEndOffset() call Toffs.getEndOffset() call Toffs.getEndOffset() return return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()