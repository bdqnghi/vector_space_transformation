org.apache.lucene.search java.io.IOException import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.DocValues import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SortedNumericDocValues import class org.apache.lucene.search.SortedNumericSortField super super extends decl Type decl SortedNumericSelector public public return int int public public decl_stmt int final final = decl_stmt int = = * + call decl SortedNumericSelector.hashCode() call decl SortedNumericSelector.hashCode() call decl SortedNumericSelector.hashCode() call decl SortedNumericSelector.hashCode() call decl SortedNumericSelector.hashCode() = * + call decl Type.hashCode() call decl Type.hashCode() call decl Type.hashCode() call decl Type.hashCode() call decl Type.hashCode() return SortedNumericSortField public public if == return if ! return if != return decl_stmt org.apache.lucene.search.SortedNumericSortField = if != return if != return return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public = public < public < throws switch case return new protected protected throws return case return new protected protected throws return case return new protected protected throws return case return new protected protected throws return default: throw new protected protected throws return protected protected throws return protected protected throws return protected protected throws return