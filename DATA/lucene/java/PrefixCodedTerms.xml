org.apache.lucene.index java.io.IOException import java.util.Objects import org.apache.lucene.store.IndexInput import org.apache.lucene.store.RAMFile import org.apache.lucene.store.RAMInputStream import org.apache.lucene.store.RAMOutputStream import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import class org.apache.lucene.index.PrefixCodedTerms super super implements RAMFile long long public public return call org.apache.lucene.store.RAMFile.ramBytesUsed() call org.apache.lucene.store.RAMFile.ramBytesUsed() call org.apache.lucene.store.RAMFile.ramBytesUsed() call org.apache.lucene.store.RAMFile.ramBytesUsed() call org.apache.lucene.store.RAMFile.ramBytesUsed() + * public public = public public int int public public assert new || new > try decl_stmt int = decl_stmt int = - if << else << | + = = += catch throw new public public try return new catch throw new int int int private private decl_stmt int = decl_stmt int = + decl_stmt int = while < if + != + return ++ ++ return int int int boolean public public if < try decl_stmt int = decl_stmt boolean = & != if = decl_stmt int = >>> decl_stmt int = return catch throw new else = return private private throws + + public public return public public return public public return new public public return int public public decl_stmt int = call org.apache.lucene.store.RAMFile.hashCode() call org.apache.lucene.store.RAMFile.hashCode() call org.apache.lucene.store.RAMFile.hashCode() call org.apache.lucene.store.RAMFile.hashCode() call org.apache.lucene.store.RAMFile.hashCode() = * + ^ >>> return PrefixCodedTerms public public if == return if == return if != return decl_stmt org.apache.lucene.index.PrefixCodedTerms = return call org.apache.lucene.store.RAMFile.equals(Object) call org.apache.lucene.store.RAMFile.equals(Object) call org.apache.lucene.store.RAMFile.equals(Object) call org.apache.lucene.store.RAMFile.equals(Object) call org.apache.lucene.store.RAMFile.equals(Object) && ==