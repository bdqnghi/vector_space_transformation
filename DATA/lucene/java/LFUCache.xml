org.apache.solr.search java.io.Serializable import java.lang.invoke.MethodHandles import java.net.URL import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.CopyOnWriteArrayList import java.util.concurrent.TimeUnit import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.core.SolrCore import org.apache.solr.util.ConcurrentLFUCache import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.NAME import class super super implements decl List CacheRegenerator Logger int int String decl ConcurrentLFUCache State long Boolean String boolean int int String int int public public = = = decl_stmt java.lang.String = decl_stmt int = == : decl_stmt int = if == = * else = if == = if <= = + decl_stmt int = if == = * else = = = decl_stmt int final final = == : = = == : = decl_stmt boolean = == : = = == : = = == : = + + + + + + + + + + + if > += + + + += = new <> call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() = < if == = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() return public public return public public return call decl ConcurrentLFUCache.size() call decl ConcurrentLFUCache.size() call decl ConcurrentLFUCache.size() call decl ConcurrentLFUCache.size() call decl ConcurrentLFUCache.size() public public return call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() public public return call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() public public call decl ConcurrentLFUCache.clear() call decl ConcurrentLFUCache.clear() call decl ConcurrentLFUCache.clear() call decl ConcurrentLFUCache.clear() call decl ConcurrentLFUCache.clear() public public = call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() call decl ConcurrentLFUCache.setAlive() == public public return long int int Map decl Entry decl Map LFUCache public public if == return decl_stmt long = decl_stmt org.apache.solr.search.LFUCache = if != decl_stmt int = call org.apache.solr.search.LFUCache.size() call org.apache.solr.search.LFUCache.size() call org.apache.solr.search.LFUCache.size() call org.apache.solr.search.LFUCache.size() call org.apache.solr.search.LFUCache.size() if != - = decl_stmt java.util.Map = call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() call LFUCache.cache() decl_stmt Entry = new call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() decl_stmt int = for : call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() ++ = for = - >= -- try decl_stmt boolean = call CacheRegenerator.regenerateItem() call CacheRegenerator.regenerateItem() call CacheRegenerator.regenerateItem() call CacheRegenerator.regenerateItem() call CacheRegenerator.regenerateItem() if ! break catch + = - public public call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() public public return public public return public public return public public return public public return public public return int private static private static if == return if == return decl_stmt int = * / if < return + return + long long decl ConcurrentLFUCache long long long Map long decl Stats long Object decl NamedList String long Object long public public decl_stmt org.apache.solr.common.util.NamedList < = new <> if == return decl_stmt org.apache.lucene.codecs.blocktree.Stats = call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() call decl ConcurrentLFUCache.getStats() decl_stmt long = call decl ConcurrentLFUCache.getCumulativeLookups() call decl ConcurrentLFUCache.getCumulativeLookups() call decl ConcurrentLFUCache.getCumulativeLookups() call decl ConcurrentLFUCache.getCumulativeLookups() call decl ConcurrentLFUCache.getCumulativeLookups() decl_stmt long = call decl ConcurrentLFUCache.getCumulativeHits() call decl ConcurrentLFUCache.getCumulativeHits() call decl ConcurrentLFUCache.getCumulativeHits() call decl ConcurrentLFUCache.getCumulativeHits() call decl ConcurrentLFUCache.getCumulativeHits() decl_stmt long = call decl ConcurrentLFUCache.getCumulativePuts() call decl ConcurrentLFUCache.getCumulativePuts() call decl ConcurrentLFUCache.getCumulativePuts() call decl ConcurrentLFUCache.getCumulativePuts() call decl ConcurrentLFUCache.getCumulativePuts() decl_stmt long = call decl ConcurrentLFUCache.getCumulativeEvictions() call decl ConcurrentLFUCache.getCumulativeEvictions() call decl ConcurrentLFUCache.getCumulativeEvictions() call decl ConcurrentLFUCache.getCumulativeEvictions() call decl ConcurrentLFUCache.getCumulativeEvictions() decl_stmt long = call decl ConcurrentLFUCache.getCurrentSize() call decl ConcurrentLFUCache.getCurrentSize() call decl ConcurrentLFUCache.getCurrentSize() call decl ConcurrentLFUCache.getCurrentSize() call decl ConcurrentLFUCache.getCurrentSize() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt long = decl_stmt long = decl_stmt long = decl_stmt long = for : += += += += call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if != decl_stmt java.util.Map = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() == - : for : < call long.entrySet() call long.entrySet() call long.entrySet() call long.entrySet() call long.entrySet() decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt java.lang.String = + decl_stmt java.lang.String = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return public public return +