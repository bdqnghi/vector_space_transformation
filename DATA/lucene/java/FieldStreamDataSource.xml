org.apache.solr.handler.dataimport static static org.apache.solr.handler.data.DataImportHandlerException.SEVERE import java.io.ByteArrayInputStream import java.io.InputStream import java.lang.invoke.MethodHandles import java.sql.Blob import java.sql.SQLException import java.util.Properties import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.dataimport.FieldStreamDataSource super super extends VariableResolver Logger EntityProcessorWrapper String public public = = decl byte Blob Object public public decl_stmt java.lang.Object = call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() if == throw new + else if instanceof decl_stmt java.sql.Blob = try return call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) call java.sql.Blob.getBinaryStream(long,long) catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return else if instanceof decl_stmt byte = return new else throw new + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() public public