org.apache.solr.hadoop.hack java.io.File import java.io.IOException import java.util.Locale import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.CommonConfigurationKeys import org.apache.hadoop.fs.FileContext import org.apache.hadoop.fs.LocalFileSystem import org.apache.hadoop.fs.Path import org.apache.hadoop.mapred.LocalContainerLauncher import org.apache.hadoop.mapred.ShuffleHandler import org.apache.hadoop.mapreduce.MRConfig import org.apache.hadoop.mapreduce.MRJobConfig import org.apache.hadoop.mapreduce.v2.hs.JobHistoryServer import org.apache.hadoop.mapreduce.v2.jobhistory.JHAdminConfig import org.apache.hadoop.mapreduce.v2.jobhistory.JobHistoryUtils import org.apache.hadoop.service.AbstractService import org.apache.hadoop.service.Service import org.apache.hadoop.util.JarFinder import org.apache.hadoop.yarn.conf.YarnConfiguration import org.apache.hadoop.yarn.exceptions.YarnRuntimeException import org.apache.hadoop.yarn.server.nodemanager.ContainerExecutor import org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor import class org.apache.solr.hadoop.hack.MiniMRYarnCluster super super extends String JobHistoryServer Log JobHistoryServerWrapper Path String FileContext Path public public throws if == new if ! try decl_stmt java.nio.file.Path = new if if call java.nio.file.Path.getFileSystem() call java.nio.file.Path.getFileSystem() call java.nio.file.Path.getFileSystem() call java.nio.file.Path.getFileSystem() call java.nio.file.Path.getFileSystem() new decl_stmt FileContext = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() if call FileContext.util() call FileContext.util() call FileContext.util() call FileContext.util() call FileContext.util() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call FileContext.delete() call FileContext.delete() call FileContext.delete() call FileContext.delete() call FileContext.delete() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() decl_stmt java.lang.String = decl_stmt java.nio.file.Path = call FileContext.makeQualified() call FileContext.makeQualified() call FileContext.makeQualified() call FileContext.makeQualified() call FileContext.makeQualified() new call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() call FileContext.mkdir() catch throw new new public synchronized public synchronized throws try if ! + + = new call JobHistoryServer.init() call JobHistoryServer.init() call JobHistoryServer.init() call JobHistoryServer.init() call JobHistoryServer.init() new public public call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() while call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() == call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() if call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() call JobHistoryServer.getServiceState() != throw new catch throw new call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call JobHistoryServer.getConfig() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + public public call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() call JobHistoryServer.start() public synchronized public synchronized throws if != call JobHistoryServer.stop() call JobHistoryServer.stop() call JobHistoryServer.stop() call JobHistoryServer.stop() call JobHistoryServer.stop() public public return