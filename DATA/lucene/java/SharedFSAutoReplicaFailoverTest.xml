org.apache.solr.cloud static static org.apache.solr.common.util.Utils.makeMap import java.util.Collection import java.util.HashSet import java.util.Map import java.util.Set import java.util.concurrent.CompletionService import java.util.concurrent.ExecutorCompletionService import java.util.concurrent.Future import java.util.concurrent.SynchronousQueue import java.util.concurrent.ThreadPoolExecutor import java.util.concurrent.TimeUnit import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.lucene.util.LuceneTestCase.Nightly import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.request.CollectionAdminRequest.Create import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.cloud.hdfs.HdfsTestUtil import org.apache.solr.common.cloud.ClusterStateUtil import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CollectionParams import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.BadHdfsThreadsFilter import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import class annotation annotation annotation annotation org.apache.solr.cloud.SharedFSAutoReplicaFailoverTest super super extends boolean ThreadPoolExecutor decl Set decl CompletionService MiniDFSCluster public static public static throws = public static public static throws = public public throws = protected protected return = public = public throws try finally if int CollectionAdminResponse CollectionAdminResponse int SolrRequest Map String String String Create CollectionAdminResponse private private throws decl_stmt java.lang.String = decl_stmt Create = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call Create.process() call Create.process() call Create.process() call Create.process() call Create.process() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() decl_stmt java.lang.String = = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call Create.process() call Create.process() call Create.process() call Create.process() call Create.process() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() decl_stmt java.lang.String = = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call Create.process() call Create.process() call Create.process() call Create.process() call Create.process() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() < < decl_stmt int = decl_stmt java.util.Map = decl_stmt org.apache.solr.client.solrj.SolrRequest = new new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl_stmt int = > = = new new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl Collection private private decl_stmt java.util.Collection < = call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() for : decl Collection private private decl_stmt java.util.Collection < = call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() for : public public throws