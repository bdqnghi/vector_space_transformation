org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.List import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.util.ArrayUtil import class org.apache.lucene.search.CachingCollector super super extends int boolean public public throw new public final public final return public public return public final public final throw new protected protected return new LeafCollector public public throws decl_stmt org.apache.lucene.search.LeafCollector final final = if != if >= return = else return protected protected = - = = decl int protected protected decl_stmt int final final final = -= private private if != if ! else = decl int protected protected throws decl_stmt int final final final = for : LeafCollector LeafReaderContext public public throws if ! throw new assert == for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext final final = decl_stmt org.apache.lucene.search.LeafCollector final final = protected protected return new ScoreCachingLeafCollector protected protected decl_stmt ScoreCachingLeafCollector final final = call ScoreCachingLeafCollector.cachedScores() call ScoreCachingLeafCollector.cachedScores() call ScoreCachingLeafCollector.cachedScores() call ScoreCachingLeafCollector.cachedScores() call ScoreCachingLeafCollector.cachedScores() public public return decl int CachedScorer decl float protected protected throws decl_stmt int final final final = decl_stmt float final final final = assert == decl_stmt CachedScorer final final = new for = < ++ = = protected protected = protected protected = = - = protected protected throws = int public public throws if != if >= if >= else decl_stmt int final final = + if != ++ return != return == : public public throws = protected protected = protected protected = protected protected throws = return == : Collector public static public static decl_stmt org.apache.lucene.search.Collector = new public public public public return return public public public public return int int public static public static decl_stmt int = if += decl_stmt int final final = * * / return public static public static return new : new public final public final return