org.apache.solr.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.EnumSet import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import com.carrotsearch.hppc.FloatArrayList import com.carrotsearch.hppc.IntArrayList import com.carrotsearch.hppc.IntIntHashMap import com.carrotsearch.hppc.IntLongHashMap import com.carrotsearch.hppc.cursors.IntIntCursor import com.carrotsearch.hppc.cursors.IntLongCursor import org.apache.commons.lang.StringUtils import org.apache.lucene.index.DocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.FilterLeafReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SortedDocValues import org.apache.lucene.queries.function.FunctionQuery import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.FieldComparator import org.apache.lucene.search.LeafFieldComparator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.uninverting.UninvertingReader import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BitSetIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LongValues import org.apache.solr.common.SolrException import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.handler.component.QueryElevationComponent import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.schema.FieldType import org.apache.solr.schema.StrField import org.apache.solr.schema.TrieFloatField import org.apache.solr.schema.TrieIntField import org.apache.solr.schema.TrieLongField import class org.apache.solr.search.CollapsingQParserPlugin super super extends String String String String String String public public return new public public throws try return new catch throw new GroupHeadSelector public public final final if instanceof decl_stmt GroupHeadSelector final final = return == && return public public return * + * + String String String public static public static final final decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = if < throw new + if != return new else if != return new else if != return new return new public public return public public public public public public return public public return int public public decl_stmt int = = * + = * + = * + return CollapsingPostFilter public public if instanceof decl_stmt CollapsingPostFilter = if && && == return return public public return public public return IntIntHashMap private private < throws decl_stmt IntIntHashMap = return SolrRequestInfo SolrIndexSearcher IntIntHashMap Map CollectorFactory public public try decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt CollectorFactory = new decl_stmt IntIntHashMap = decl_stmt java.util.Map = decl_stmt org.apache.solr.request.SolrRequestInfo = if != = call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() if == && != = < call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) = return call CollectorFactory.getCollector() call CollectorFactory.getCollector() call CollectorFactory.getCollector() call CollectorFactory.getCollector() call CollectorFactory.getCollector() catch throw new public public return public public return FieldInfo FieldInfos FieldInfo decl Iterator decl List public public decl_stmt java.util.Iterator < = decl_stmt java.util.List < = new while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.index.FieldInfo = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() decl_stmt org.apache.lucene.index.FieldInfo = new call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.index.FieldInfos = new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return public public return public public return public public return public public throw new protected protected throws = = if != = = else = int int float public public throws decl_stmt int = + decl_stmt int = - if != = if > - = int else = if && return if > - decl_stmt float = if > = = else if == decl_stmt float = if > = = else if == DummyScorer int int int int int DocIdSetIterator int int int int public public throws if == return if > if != decl_stmt int = for = < ++ decl_stmt int = if > - = - for = < ++ decl_stmt int = if > - decl_stmt int = decl_stmt int = if != = = else = decl_stmt int = + < + : = decl_stmt DummyScorer = new decl_stmt org.apache.lucene.search.DocIdSetIterator = new decl_stmt int = - decl_stmt int = - while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() != while >= ++ = = + < + : = if != = = decl_stmt int = - decl_stmt int = - if != = if > - = int else = if > - = else if && else if == = else if == = ++ = if instanceof protected protected throws = = = int int int float int int long public public throws decl_stmt int = int decl_stmt int = + if && return if != decl_stmt float = decl_stmt int final final if = >= decl_stmt long = decl_stmt int = >> decl_stmt int = if > long << + else decl_stmt long = long << + else if == decl_stmt float = if > = = else if == DummyScorer int int int int DocIdSetIterator IntLongCursor int int int int int int long decl Iterator public public throws if == return if > - if != decl_stmt int = for = < ++ decl_stmt int = if != decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt IntLongCursor = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt int = int decl_stmt int = decl_stmt int = = decl_stmt int = + < + : = decl_stmt DummyScorer = new decl_stmt org.apache.lucene.search.DocIdSetIterator = new decl_stmt int = - decl_stmt int = while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() != while >= ++ = = + < + : = = decl_stmt int = - decl_stmt int = int if != decl_stmt long = = >> else if && else if == = else if == = ++ = if instanceof public public return public public public public throws = = if != = = else = int int public public throws decl_stmt int = + decl_stmt int = - if != = if > - = int else = int DummyScorer float int decl float DocIdSetIterator MergeBoost FloatArrayList int int int int int public public throws if == return decl_stmt int = decl_stmt int = if != = = else = decl_stmt int = + < + : = decl_stmt DummyScorer = new decl_stmt org.apache.lucene.search.DocIdSetIterator = new decl_stmt int = - decl_stmt int = decl_stmt float = decl_stmt FloatArrayList = decl_stmt float = decl_stmt MergeBoost = while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() != while >= ++ = = + < + : = if != = = decl_stmt int = - if decl_stmt int = - if != = if > - = int else = if > - = else if != && call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() = else if == = else if == = call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() ++ = if instanceof public public return public public public public throws = = = int int public public throws decl_stmt int = + decl_stmt int = int int DummyScorer float decl int int decl float DocIdSetIterator MergeBoost IntIntHashMap FloatArrayList int int int int int int public public throws if == return decl_stmt int = decl_stmt int = = decl_stmt int = + < + : = decl_stmt DummyScorer = new decl_stmt org.apache.lucene.search.DocIdSetIterator = new decl_stmt int = - decl_stmt int = decl_stmt IntIntHashMap = decl_stmt int = decl_stmt float = decl_stmt FloatArrayList = decl_stmt MergeBoost = decl_stmt float = while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() != while >= ++ = = + < + : = = decl_stmt int = - if decl_stmt int = int if != decl_stmt int = call IntIntHashMap.get() call IntIntHashMap.get() call IntIntHashMap.get() call IntIntHashMap.get() call IntIntHashMap.get() = else if != && call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() call MergeBoost.boost() = else if == = else if == = call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() call FloatArrayList.get() ++ = if instanceof FunctionQParser FieldType int FunctionQuery String FieldType LocalSolrQueryRequest decl Map int UninvertingReader SolrParams SortedDocValues String int public public throws decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt org.apache.lucene.queries.function.FunctionQuery = decl_stmt org.apache.solr.schema.FieldType = decl_stmt java.lang.String = if instanceof if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.util.Map < = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.uninverting.UninvertingReader = new new = call org.apache.lucene.uninverting.UninvertingReader.getSortedDocValues(String) call org.apache.lucene.uninverting.UninvertingReader.getSortedDocValues(String) call org.apache.lucene.uninverting.UninvertingReader.getSortedDocValues(String) call org.apache.lucene.uninverting.UninvertingReader.getSortedDocValues(String) call org.apache.lucene.uninverting.UninvertingReader.getSortedDocValues(String) else = else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throw new decl_stmt org.apache.solr.schema.FieldType = if decl_stmt java.lang.String final final = if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - = else decl_stmt org.apache.solr.request.LocalSolrQueryRequest = try decl_stmt org.apache.solr.common.params.SolrParams = new = new decl_stmt org.apache.solr.search.FunctionQParser = new = call org.apache.solr.search.FunctionQParser.parse() call org.apache.solr.search.FunctionQParser.parse() call org.apache.solr.search.FunctionQParser.parse() call org.apache.solr.search.FunctionQParser.parse() call org.apache.solr.search.FunctionQParser.parse() catch throw new finally call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() decl_stmt int = decl_stmt int = if if instanceof return new else if instanceof || instanceof decl_stmt int = if instanceof if != = else = else if != = return new else throw new else if instanceof return new else if instanceof || instanceof decl_stmt int = if instanceof if != = else = else if != = return new else throw new public public final final final final if return return public static public static final final return <= public public return int int int public public if > - if != decl_stmt int = for = < ++ decl_stmt int = if > - = - for = < ++ decl_stmt int = if > - return public public = public public return public public return public public return public public throws = int public public throws if && return decl_stmt int = int if > - if = = if = else if == if = = if = else if == if public public throws = int float public public throws if && return decl_stmt int = int decl_stmt float = if > - if = = if = else if == if = = if = else if == if public public throws = long public public throws if && return decl_stmt long = if > - if = = if = else if == if = = if = else if == if public public throws = float public public throws if && if || = = decl_stmt float = if > - if = = if = else if == if = = if = else if == if public public throws public public public public throws if && if = if > - if - == = if = else if = if = else if == if - == = if = else if = if = else if == if IntIntCursor int int int decl Iterator public public if > - if != decl_stmt int = for = < ++ decl_stmt int = if != decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt IntIntCursor = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt int = return public public = public public return public public return public public return public public return public public return public public return public public throws = int int int public public throws if && return decl_stmt int = int if != decl_stmt int final final if = >= decl_stmt int = if = = if = else ++ if == = = if = = = if = else if == if = = if = else if == if public public throws = int int int float public public throws if && return decl_stmt int = int decl_stmt float = if != decl_stmt int final final if = >= decl_stmt int = if = = if = else ++ if == = = if = = = if = else if == if = = if = else if == if public public throws = int int float public public throws if && return if || = = decl_stmt float = if != decl_stmt int final final if = >= decl_stmt int = if = = if = else ++ if == = = if = = = if = else if == if = = if = else if == if public public throws public public int int public public throws if && return if = if != decl_stmt int final final if = >= decl_stmt int = if = if = else ++ if == = if = = if = else if == if - == = if = else if = if = else if == if public public = int public public if == return else while if >= = return else decl_stmt int = if == ++ return else if < ++ else return public public throws for = < ++ = public public for = < ++ private static private static if instanceof return return decl Object private private decl_stmt java.lang.Object = if == = new = return public public throws assert <= : assert < : public public throws private private throws for = < ++ = public public throws assert <= : assert < : return public public throws return int FieldComparator int decl Object private private throws decl_stmt java.lang.Object = new decl_stmt int = decl_stmt int = for < ++ decl_stmt org.apache.lucene.search.FieldComparator = = call org.apache.lucene.search.FieldComparator.value(int) call org.apache.lucene.search.FieldComparator.value(int) call org.apache.lucene.search.FieldComparator.value(int) call org.apache.lucene.search.FieldComparator.value(int) call org.apache.lucene.search.FieldComparator.value(int) = * call org.apache.lucene.search.FieldComparator.compareValues(Float,Float) call org.apache.lucene.search.FieldComparator.compareValues(Float,Float) call org.apache.lucene.search.FieldComparator.compareValues(Float,Float) call org.apache.lucene.search.FieldComparator.compareValues(Float,Float) call org.apache.lucene.search.FieldComparator.compareValues(Float,Float) if != break if <= return ++ for = < ++ = return public public = public public return > public public return < public public return > public public return < public public return > public public return < int private static final private static final final final decl_stmt int = for final final : if != ++ return Sort public static public static throws assert != : assert != : decl_stmt org.apache.lucene.search.Sort = if == = return call org.apache.lucene.search.Sort.rewrite(IndexSearcher) call org.apache.lucene.search.Sort.rewrite(IndexSearcher) call org.apache.lucene.search.Sort.rewrite(IndexSearcher) call org.apache.lucene.search.Sort.rewrite(IndexSearcher) call org.apache.lucene.search.Sort.rewrite(IndexSearcher)