org.apache.lucene.util java.util.Iterator import java.util.NoSuchElementException import java.util.Random import java.util.concurrent.atomic.AtomicReferenceArray import java.util.concurrent.Executors import java.util.concurrent.ExecutorService import java.util.concurrent.TimeUnit import class org.apache.lucene.util.TestWeakIdentityMap super super extends decl WeakIdentityMap int String String String decl Iterator String int decl Iterator String int public public decl_stmt org.apache.lucene.util.WeakIdentityMap final final final < = decl_stmt java.lang.String = new decl_stmt java.lang.String = new decl_stmt java.lang.String = new call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() decl_stmt java.util.Iterator < = call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.get() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.containsKey() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.remove() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() decl_stmt int = = for < = call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() == || == | == += == : == : ++ + + = for < = call decl WeakIdentityMap.valueIterator() call decl WeakIdentityMap.valueIterator() call decl WeakIdentityMap.valueIterator() call decl WeakIdentityMap.valueIterator() call decl WeakIdentityMap.valueIterator() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call int.startsWith() call int.startsWith() call int.startsWith() call int.startsWith() call int.startsWith() ++ = = = decl_stmt int = call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() for = > && < ++ try decl_stmt int = call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() + + + + >= = = for < = call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() ++ = call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() + + + + >= + + + + >= = catch call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() decl_stmt java.util.Iterator < = call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl WeakIdentityMap.keyIterator() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() = new = new call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.put() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.clear() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.size() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() call decl WeakIdentityMap.isEmpty() int decl AtomicReferenceArray int decl WeakIdentityMap Random Integer int int int ExecutorService int public public throws decl_stmt int final final = = decl_stmt java.util.concurrent.ExecutorService final final = new decl_stmt org.apache.lucene.util.WeakIdentityMap final final final < = decl_stmt java.util.concurrent.atomic.AtomicReferenceArray final final final < = new <> for = < ++ call Random.set() call Random.set() call Random.set() call Random.set() call Random.set() new try for = < ++ decl_stmt java.util.Random final final = new call decl WeakIdentityMap.execute() call decl WeakIdentityMap.execute() call decl WeakIdentityMap.execute() call decl WeakIdentityMap.execute() call decl WeakIdentityMap.execute() new public public decl_stmt int final final = for = < ++ decl_stmt int final final = call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() switch call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() case call decl AtomicReferenceArray.put() call decl AtomicReferenceArray.put() call decl AtomicReferenceArray.put() call decl AtomicReferenceArray.put() call decl AtomicReferenceArray.put() call Random.get() call Random.get() call Random.get() call Random.get() call Random.get() break case decl_stmt java.lang.Integer final final = call decl AtomicReferenceArray.get() call decl AtomicReferenceArray.get() call decl AtomicReferenceArray.get() call decl AtomicReferenceArray.get() call decl AtomicReferenceArray.get() call Random.get() call Random.get() call Random.get() call Random.get() call Random.get() if != call int.intValue() call int.intValue() call int.intValue() call int.intValue() call int.intValue() break case call decl AtomicReferenceArray.remove() call decl AtomicReferenceArray.remove() call decl AtomicReferenceArray.remove() call decl AtomicReferenceArray.remove() call decl AtomicReferenceArray.remove() call Random.get() call Random.get() call Random.get() call Random.get() call Random.get() break case call Random.set() call Random.set() call Random.set() call Random.set() call Random.set() new break case for < = call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() break default: finally call decl WeakIdentityMap.shutdown() call decl WeakIdentityMap.shutdown() call decl WeakIdentityMap.shutdown() call decl WeakIdentityMap.shutdown() call decl WeakIdentityMap.shutdown() while ! call decl WeakIdentityMap.awaitTermination() call decl WeakIdentityMap.awaitTermination() call decl WeakIdentityMap.awaitTermination() call decl WeakIdentityMap.awaitTermination() call decl WeakIdentityMap.awaitTermination() for = < ++ call Random.set() call Random.set() call Random.set() call Random.set() call Random.set() decl_stmt int = call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() for = > && < ++ try decl_stmt int = call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() + + + + >= = decl_stmt int = for < = call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() call decl AtomicReferenceArray.keyIterator() ++ = call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() call decl AtomicReferenceArray.size() + + + + >= + + + + >= = catch int int Integer public public decl_stmt int final final = for = < ++ decl_stmt int final final = switch case break case decl_stmt java.lang.Integer final final = if != call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() break case break case new break case for < = break default: