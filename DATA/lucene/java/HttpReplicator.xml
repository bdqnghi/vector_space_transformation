org.apache.lucene.replicator.http java.io.DataInputStream import java.io.IOException import java.io.InputStream import java.util.concurrent.Callable import org.apache.http.HttpResponse import org.apache.http.conn.HttpClientConnectionManager import org.apache.lucene.replicator.Replicator import org.apache.lucene.replicator.Revision import org.apache.lucene.replicator.SessionToken import org.apache.lucene.replicator.http.ReplicationService.ReplicationAction import class org.apache.lucene.replicator.http.HttpReplicator super super extends super implements decl String HttpResponse DataInputStream public public throws decl_stmt java.lang.String = if != = new decl_stmt HttpResponse final final = return new < public public throws decl_stmt java.io.DataInputStream final final = new try if call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() == return else return new finally call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() DataInputStream public public throws decl_stmt java.io.DataInputStream final final = new try if call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() call java.io.DataInputStream.readByte() == return else return new finally call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() decl String HttpResponse public public throws decl_stmt java.lang.String = new decl_stmt HttpResponse final final = return new < public public throws return public public throws return public public throws throw new decl String HttpResponse public public throws decl_stmt java.lang.String = new decl_stmt HttpResponse final final = new < public public throws return public public throws return