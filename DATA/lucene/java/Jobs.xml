org.apache.lucene.replicator.nrt java.io.Closeable import java.io.IOException import java.util.ArrayList import java.util.List import java.util.PriorityQueue import org.apache.lucene.store.AlreadyClosedException import class org.apache.lucene.replicator.nrt.Jobs super super extends super implements decl PriorityQueue Node boolean private synchronized private synchronized while if return else if call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() try catch throw new else return call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() SimpleCopyJob SimpleCopyJob boolean public public while decl_stmt org.apache.lucene.replicator.nrt.SimpleCopyJob = if == assert break + assert != decl_stmt boolean try = call org.apache.lucene.replicator.nrt.SimpleCopyJob.visit() call org.apache.lucene.replicator.nrt.SimpleCopyJob.visit() call org.apache.lucene.replicator.nrt.SimpleCopyJob.visit() call org.apache.lucene.replicator.nrt.SimpleCopyJob.visit() call org.apache.lucene.replicator.nrt.SimpleCopyJob.visit() catch if instanceof == call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + else call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + try call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) catch call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + try call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() catch call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + continue if == synchronized call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() else try call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() catch call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) synchronized while call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() call decl PriorityQueue.isEmpty() == decl_stmt org.apache.lucene.replicator.nrt.SimpleCopyJob = call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + try call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) call org.apache.lucene.replicator.nrt.SimpleCopyJob.cancel(String,Throwable) catch call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) try call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() call SimpleCopyJob.onceDone() catch call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) public synchronized public synchronized if == call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() call decl PriorityQueue.offer() else throw new public synchronized public synchronized throws for : if call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + + public synchronized public synchronized = try catch throw new