org.apache.solr.search org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.util.TestUtil import org.apache.lucene.util.BytesRef import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.request.SolrQueryRequest import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.CursorPagingTest import static static org.apache.solr.common.params.CursorMarkParams.CURSOR_MARK_START import java.io.IOException import java.util.Arrays import java.util.ArrayList import java.util.List import java.util.Collection import java.util.Collections import java.util.UUID import org.junit.BeforeClass import class org.apache.solr.search.CursorMarkTest super super extends public static public static throws decl Collection CursorMark SortSpec SolrQueryRequest CursorMark decl List IndexSchema SortSpec String CursorMark public public throws decl_stmt java.util.Collection final final final < = decl_stmt org.apache.solr.request.SolrQueryRequest final final = decl_stmt org.apache.solr.schema.IndexSchema final final = call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() decl_stmt java.lang.String final final = decl_stmt org.apache.solr.search.SortSpec final final = decl_stmt org.apache.solr.search.CursorMark final final = new call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) decl_stmt java.util.List < = > decl_stmt org.apache.solr.search.CursorMark final final = call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortSpec() call org.apache.solr.search.CursorMark.getSortSpec() call org.apache.solr.search.CursorMark.getSortSpec() call org.apache.solr.search.CursorMark.getSortSpec() call org.apache.solr.search.CursorMark.getSortSpec() try decl_stmt org.apache.solr.search.SortSpec final final = + decl_stmt org.apache.solr.search.CursorMark = call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) call org.apache.solr.search.CursorMark.createNext(List) > catch SortSpec SolrQueryRequest CursorMark IndexSchema public public decl_stmt org.apache.solr.request.SolrQueryRequest final final = decl_stmt org.apache.solr.schema.IndexSchema final final = call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() try decl_stmt org.apache.solr.search.SortSpec final final = decl_stmt org.apache.solr.search.CursorMark final final = new catch < for final final : try decl_stmt org.apache.solr.search.SortSpec final final = + decl_stmt org.apache.solr.search.CursorMark final final = new + catch < try decl_stmt org.apache.solr.search.SortSpec final final = + + decl_stmt org.apache.solr.search.CursorMark final final = new + catch < SortSpec SolrQueryRequest CursorMark SortSpec CursorMark IndexSchema public public throws decl_stmt org.apache.solr.request.SolrQueryRequest final final = decl_stmt org.apache.solr.schema.IndexSchema final final = call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() decl_stmt org.apache.solr.search.SortSpec final final = decl_stmt org.apache.solr.search.CursorMark final final = new try call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) catch try call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) catch try call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) catch try decl_stmt org.apache.solr.search.SortSpec final final = decl_stmt org.apache.solr.search.CursorMark final final = new call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) > call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() catch decl Collection CursorMark decl Object SortSpec SolrQueryRequest int decl Object CursorMark int decl List IndexSchema public public throws decl_stmt java.util.Collection final final final < = decl_stmt org.apache.solr.request.SolrQueryRequest final final = decl_stmt org.apache.solr.schema.IndexSchema final final = call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() decl_stmt int final final = decl_stmt int final final = for = < ++ decl_stmt org.apache.solr.search.SortSpec final final = decl_stmt org.apache.solr.search.CursorMark final final = new decl_stmt org.apache.solr.search.CursorMark final final = new call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() for = < ++ decl_stmt java.lang.Object final final final = call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) > call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.parseSerializedTotem(String) call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() call org.apache.solr.search.CursorMark.getSerializedTotem() decl_stmt java.util.List final final final < = call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() call org.apache.solr.search.CursorMark.getSortValues() decl_stmt java.lang.Object final final final = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() Object decl List decl Object String decl byte SchemaField private static private static throws decl_stmt java.util.List < = decl_stmt java.lang.Object = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ decl_stmt org.apache.solr.schema.SchemaField = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if == = * break else if == = else decl_stmt java.lang.String final final = call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() decl_stmt java.lang.Object = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt byte = new = new else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = * else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = * else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() : else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = else + = return String TermToBytesRefAttribute Analyzer Object private static private static throws decl_stmt java.lang.Object decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt java.lang.String = try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute = = call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() return decl ArrayList private < private < decl_stmt java.util.ArrayList < = new <> for : if ! call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return >