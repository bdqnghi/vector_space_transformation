org.apache.lucene.codecs.lucene60 java.io.IOException import java.util.Collections import java.util.Map import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.DocValuesFormat import org.apache.lucene.codecs.FieldInfosFormat import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.SegmentInfo import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.DataOutput import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import class org.apache.lucene.codecs.lucene60.Lucene60FieldInfosFormat super super extends int byte String byte byte int String boolean String boolean int int String long FieldInfo int decl Map boolean DocValuesType IndexOptions Throwable byte decl Map int public public throws decl_stmt java.lang.String final final = try = decl_stmt java.lang.Throwable = decl_stmt org.apache.lucene.index.FieldInfo = try decl_stmt int final final = = new decl_stmt java.util.Map < = for = < ++ decl_stmt java.lang.String = decl_stmt int final final = if < throw new + + + decl_stmt byte = decl_stmt boolean = & != decl_stmt boolean = & != decl_stmt boolean = & != decl_stmt IndexOptions final final = decl_stmt DocValuesType final final = decl_stmt long final final = decl_stmt java.util.Map < = if call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() = = decl_stmt int = decl_stmt int if != = else = try = new catch throw new + + + catch = finally return new private static private static switch case return case return case return case return case return case return default: throw new + private static private static throws switch case return case return case return case return case return case return default: throw new + private static private static switch case return case return case return case return case return default: throw new + private static private static throws switch case return case return case return case return case return default: throw new + int byte String public public throws decl_stmt java.lang.String final final = try = for : decl_stmt byte = if |= if |= if |= decl_stmt int = if !=