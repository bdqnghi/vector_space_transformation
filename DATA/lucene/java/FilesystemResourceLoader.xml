org.apache.lucene.analysis.util java.io.FileNotFoundException import java.io.IOException import java.io.InputStream import java.nio.file.Files import java.nio.file.NoSuchFileException import java.nio.file.Path import class org.apache.lucene.analysis.util.FilesystemResourceLoader super super implements Path ResourceLoader public public throws try return call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) catch return call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) public < public < < return call org.apache.lucene.analysis.util.ResourceLoader.newInstance(String,Class) call org.apache.lucene.analysis.util.ResourceLoader.newInstance(String,Class) call org.apache.lucene.analysis.util.ResourceLoader.newInstance(String,Class) call org.apache.lucene.analysis.util.ResourceLoader.newInstance(String,Class) call org.apache.lucene.analysis.util.ResourceLoader.newInstance(String,Class) public < < extends extends public < < extends extends < return call ResourceLoader.findClass() call ResourceLoader.findClass() call ResourceLoader.findClass() call ResourceLoader.findClass() call ResourceLoader.findClass()