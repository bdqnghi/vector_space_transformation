org.apache.lucene.codecs.idversion java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.CountDownLatch import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.codecs.idversion.StringAndPayloadField.SingleTokenWithPayloadTokenStream import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.index.ConcurrentMergeScheduler import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.MergeScheduler import org.apache.lucene.index.PerThreadPKLookup import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.index.TieredMergePolicy import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LiveFieldValues import org.apache.lucene.search.SearcherFactory import org.apache.lucene.search.SearcherManager import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.idversion.TestIDVersionPostingsFormat super super extends IndexWriterConfig IDVersionSegmentTermsEnum Document IndexReader RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum = call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum.seekExact(BytesRef) new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int String int IDSource String private private decl_stmt org.apache.lucene.codecs.idversion.IDSource switch case if = new public public return break case if = new public public return break case if = new decl_stmt int public public return ++ break case if = new decl_stmt int final final = decl_stmt java.lang.String final final = + + decl_stmt int public public decl_stmt java.lang.String = ++ return call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + break case if = new decl_stmt int final final = decl_stmt int public public return & break case if = new decl_stmt int final final = decl_stmt java.lang.String final final = decl_stmt int public public return & break default: throw new return public public return public public return public public return ++ String public public decl_stmt java.lang.String = ++ return - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + public public return & public public return & String IndexWriterConfig int int BytesRef Long IDSource int String boolean long PerThreadVersionPKLookup decl List RandomIndexWriter Document decl Map int IndexReader int Directory decl List public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt int = decl_stmt int = * - + call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int = decl_stmt java.util.Map < = new < decl_stmt int = if + decl_stmt org.apache.lucene.codecs.idversion.IDSource = decl_stmt java.lang.String if = else = if + decl_stmt boolean = if + decl_stmt java.util.List < = new <> decl_stmt long = while < decl_stmt java.lang.String = + call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() continue if += else = & call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if + + + decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > && == = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if if += else = & = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if + + + call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if + call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() ++ decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt PerThreadVersionPKLookup = new decl_stmt java.util.List < < = new <> call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt int = * for = < ++ decl_stmt java.lang.String if = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else if = call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() else = + decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt java.lang.Long = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if + + + + + if == - call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() else if if call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() != - call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() else if - call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() + call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int public public throws for = < ++ if if + = decl_stmt int = if != && == || = return + assert return - public public return BytesRef private static private static decl_stmt org.apache.lucene.util.BytesRef = new = return new Document Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexWriter IndexWriterConfig MergeScheduler Directory Document public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) new decl_stmt org.apache.lucene.index.MergeScheduler = call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() call org.apache.lucene.index.IndexWriterConfig.getMergeScheduler() if instanceof call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) new protected protected instanceof decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) try call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) catch catch instanceof call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() protected protected instanceof Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) new call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Analyzer IndexWriterConfig MockTokenizer MockTokenFilter Document RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.analysis.Analyzer = new public public decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.MockTokenFilter = new return new decl_stmt org.apache.lucene.index.IndexWriterConfig = call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() MockTokenizer MockTokenFilter public public decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.MockTokenFilter = new return new Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) new call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() FieldType Document SingleTokenWithPayloadTokenStream Field RandomIndexWriter IndexWriterConfig BytesRef Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) decl_stmt SingleTokenWithPayloadTokenStream = new decl_stmt org.apache.lucene.util.BytesRef = new = call SingleTokenWithPayloadTokenStream.setValue() call SingleTokenWithPayloadTokenStream.setValue() call SingleTokenWithPayloadTokenStream.setValue() call SingleTokenWithPayloadTokenStream.setValue() call SingleTokenWithPayloadTokenStream.setValue() decl_stmt org.apache.solr.handler.dataimport.config.Field = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new new byte byte byte byte byte byte byte byte call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new new byte byte byte byte byte byte byte byte call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Long Long decl Object String boolean decl Set int IndexSearcher IndexReader boolean long PerThreadVersionPKLookup long IndexWriterConfig RandomIndexWriter CountDownLatch SearcherManager decl Thread int decl LiveFieldValues Document decl String Long AtomicLong IndexReader IDSource decl Map int int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.codecs.idversion.IDSource = decl_stmt int = if + + decl_stmt java.util.Set < = new < while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() call IDSource.next() decl_stmt java.lang.String final final final = call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new decl_stmt java.lang.Object final final final = new for = < ++ = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt org.apache.lucene.search.SearcherManager final final = new new decl_stmt java.lang.Long final final = - decl_stmt org.apache.lucene.search.LiveFieldValues final final final < = new < protected protected return decl_stmt java.util.Map final final final < = new <> decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.lang.Thread = new decl_stmt int final final = if if == else if == else decl_stmt long final final = + : for = < ++ = new public public try catch throw new private private throws call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) decl_stmt PerThreadVersionPKLookup = decl_stmt org.apache.lucene.index.IndexReader = while < decl_stmt long if == = & else if == = call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() else = if != if else decl_stmt int = synchronized decl_stmt java.lang.String = decl_stmt java.lang.Long = call decl LiveFieldValues.get() call decl LiveFieldValues.get() call decl LiveFieldValues.get() call decl LiveFieldValues.get() call decl LiveFieldValues.get() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try if + + + + + if == || != call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() if + + = new decl_stmt java.lang.Long = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if + + decl_stmt boolean if == if + decl_stmt int = call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() new + if == - if + = else if + + call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() + = if call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() != call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() + call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() else if + + = > if if + decl_stmt boolean = == || call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() <= if == + decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.RandomIndexWriter.updateDocument(Term,Iterable) new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl LiveFieldValues.add() call decl LiveFieldValues.add() call decl LiveFieldValues.add() call decl LiveFieldValues.add() call decl LiveFieldValues.add() else if + call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() >= finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() while call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() for : if continue continue break for = < ++ call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt PerThreadVersionPKLookup = new for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() new - != - call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() if == break call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() protected protected return public public try catch throw new boolean boolean Document Long IndexReader int IndexSearcher Long PerThreadVersionPKLookup int long String private private throws decl_stmt PerThreadVersionPKLookup = decl_stmt org.apache.lucene.index.IndexReader = while < decl_stmt long if == = & else if == = else = if != if else decl_stmt int = synchronized decl_stmt java.lang.String = decl_stmt java.lang.Long = decl_stmt org.apache.lucene.search.IndexSearcher = try if + + + + + if == || != call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() if + + = new decl_stmt java.lang.Long = if + + decl_stmt boolean if == if + decl_stmt int = call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() call PerThreadVersionPKLookup.lookup() new + if == - if + = else if + + call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() + = if call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() != call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() + call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() call PerThreadVersionPKLookup.getVersion() else if + + = > if if + decl_stmt boolean = == || call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() <= if == + decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new else if + call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() >= finally