org.apache.lucene.analysis.icu com.ibm.icu.lang.UCharacter import com.ibm.icu.lang.UProperty import com.ibm.icu.text.UnicodeSet import com.ibm.icu.text.UnicodeSetIterator import java.io.BufferedReader import java.io.File import java.io.FileFilter import java.io.FileInputStream import java.io.FileOutputStream import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.OutputStream import java.io.OutputStreamWriter import java.io.Writer import java.net.URL import java.net.URLConnection import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.List import java.util.Locale import java.util.regex.Matcher import java.util.regex.Pattern import class org.apache.lucene.analysis.icu.GenerateUTR30DataFiles String String Pattern Pattern Pattern String String String Pattern Pattern decl byte String public static public static try catch FileFilter String private static private static throws decl_stmt java.io.FileFilter = new public public decl_stmt java.lang.String = return && call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) for : new String public public decl_stmt java.lang.String = return && call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) FileInputStream boolean String StringBuilder Writer boolean int BufferedReader InputStreamReader String String FileOutputStream Matcher private static private static throws decl_stmt FileInputStream final final = new decl_stmt InputStreamReader final final = new decl_stmt java.io.BufferedReader final final = new decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.String decl_stmt boolean = decl_stmt boolean = decl_stmt int = try while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) ++ if call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) try decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) catch + + + + = else if call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else = finally call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() if + decl_stmt java.io.FileOutputStream final final = new decl_stmt Writer = new try call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() finally call Writer.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() URL StringBuilder int Matcher Writer URL String URLConnection decl List BufferedReader String String URL private static private static throws decl_stmt java.net.URL = new + decl_stmt java.net.URL = new + decl_stmt java.net.URL = new + + + new + + new + + decl_stmt sun.net.www.URLConnection = new decl_stmt java.io.BufferedReader = new new call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() decl_stmt Writer = new new try decl_stmt java.lang.String while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() decl_stmt java.lang.String final final = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.lang.String final final = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.util.List < = new <> for : call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) decl_stmt int = if || >= && <= call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() finally call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() int URLConnection OutputStream InputStream private static private static throws decl_stmt sun.net.www.URLConnection final final = decl_stmt java.io.InputStream final final = call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() decl_stmt java.io.OutputStream final final = new decl_stmt int try while - != = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) finally call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() URLConnection private static private static throws decl_stmt sun.net.www.URLConnection final final = call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() return UnicodeSet boolean private static private static throws decl_stmt sun.text.normalizer.UnicodeSet = new decl_stmt boolean = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) for = new if != if for = <= ++ + else if > else + +