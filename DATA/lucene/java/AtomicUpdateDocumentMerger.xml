org.apache.solr.update.processor java.lang.invoke.MethodHandles import java.util.Collection import java.util.HashSet import java.util.LinkedHashSet import java.util.Map import java.util.Map.Entry import java.util.regex.Matcher import java.util.regex.Pattern import org.apache.lucene.util.BytesRefBuilder import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.update.AddUpdateCommand import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.processor.AtomicUpdateDocumentMerger SchemaField Logger IndexSchema SolrInputDocument public static public static final final decl_stmt org.apache.solr.common.SolrInputDocument = for : call org.apache.solr.common.SolrInputDocument.values() call org.apache.solr.common.SolrInputDocument.values() call org.apache.solr.common.SolrInputDocument.values() call org.apache.solr.common.SolrInputDocument.values() call org.apache.solr.common.SolrInputDocument.values() if instanceof return return Object boolean String Object public public final final for : decl_stmt java.lang.Object = if instanceof for < : < decl_stmt java.lang.String = decl_stmt java.lang.Object = decl_stmt boolean = switch case = break case = break case = break case = break case = break default: call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + break if && call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() throw new + else return SchemaField protected protected decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() SchemaField protected protected decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() BytesRefBuilder String String Object Number SolrInputField SchemaField protected protected decl_stmt org.apache.solr.common.SolrInputField = if == else decl_stmt java.lang.String = call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt java.lang.Object = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = decl_stmt java.lang.Number if instanceof = + else if instanceof = + else if instanceof = + else = + SolrInputField decl Collection String Object SchemaField protected protected decl_stmt java.lang.String final final = decl_stmt org.apache.solr.common.SolrInputField = if == return decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) if != decl_stmt java.util.Collection final final final < = call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() if instanceof for : decl_stmt java.lang.Object = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() else call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() String Matcher SolrInputField decl Collection decl Collection decl Collection protected protected decl_stmt java.lang.String final final = decl_stmt org.apache.solr.common.SolrInputField final final = if != decl_stmt java.util.Collection final final final < = new <> decl_stmt java.util.Collection final final final < = call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() call SolrInputField.getValues() decl_stmt java.util.Collection final final final < = for : for : decl_stmt java.util.regex.Matcher final final = if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.removeAll() call decl Collection.removeAll() call decl Collection.removeAll() call decl Collection.removeAll() call decl Collection.removeAll() decl Collection decl Collection private < private < decl_stmt java.util.Collection final final final < = new <> if instanceof decl_stmt java.util.Collection < = < for : call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() else call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return