org.apache.solr.search org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.Query import org.apache.solr.common.params.CommonParams import org.apache.solr.parser.QueryParser import org.apache.solr.schema.IndexSchema import org.apache.solr.common.params.DisMaxParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.util.SolrPluginUtils import java.util.ArrayList import java.util.List import java.util.Map import class org.apache.solr.search.DisMaxQParser super super extends decl Map String Query decl String Query decl List boolean decl org public static public static final final final final decl_stmt sun.tools.jstat.Operator = return call decl org.equals() call decl org.equals() call decl org.equals() call decl org.equals() call decl org.equals() : decl Map String public static < public static < final final final final throws decl_stmt java.util.Map < = if call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() decl_stmt java.lang.String = if == throw new + + + + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return SolrParams decl BooleanQuery decl Builder public public throws = decl_stmt org.apache.solr.common.params.SolrParams = = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() decl_stmt boolean = if ! return return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl String Query Float decl Map protected protected throws decl_stmt java.lang.String = if != && != for : if == || continue decl_stmt java.util.Map < = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.Float = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != = new Query BoostQuery Query protected protected throws = = if != && > = new <> for : if == continue decl_stmt org.apache.lucene.search.Query = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != if == call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() && == decl_stmt org.apache.lucene.search.Query = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() while instanceof decl_stmt org.apache.lucene.search.BoostQuery = if call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() == = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() else break if instanceof for : else else for : decl DisjunctionMaxQueryParser decl SolrPluginUtils decl SolrPluginUtils decl Map float decl DisjunctionMaxQueryParser protected protected throws decl_stmt java.util.Map < = decl_stmt float = decl_stmt DisjunctionMaxQueryParser = decl_stmt DisjunctionMaxQueryParser = = decl_stmt java.lang.String = = if == || call decl SolrPluginUtils.trim() call decl SolrPluginUtils.trim() call decl SolrPluginUtils.trim() call decl SolrPluginUtils.trim() call decl SolrPluginUtils.trim() < = if == return else = = = decl_stmt org.apache.lucene.search.Query = if != return QParser String protected protected throws decl_stmt java.lang.String = if != decl_stmt org.apache.solr.search.QParser = return call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() else return String protected protected throws decl_stmt java.lang.String = return + + decl Builder Query decl BooleanQuery String Query protected protected throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = if instanceof decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt boolean = = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return decl SolrPluginUtils int protected protected < decl_stmt int = decl_stmt DisjunctionMaxQueryParser = new call decl SolrPluginUtils.addAlias() call decl SolrPluginUtils.addAlias() call decl SolrPluginUtils.addAlias() call decl SolrPluginUtils.addAlias() call decl SolrPluginUtils.addAlias() call decl SolrPluginUtils.setPhraseSlop() call decl SolrPluginUtils.setPhraseSlop() call decl SolrPluginUtils.setPhraseSlop() call decl SolrPluginUtils.setPhraseSlop() call decl SolrPluginUtils.setPhraseSlop() return public public return call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() new call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() public public throws if ! return == : public public < if !=