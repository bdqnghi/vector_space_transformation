org.apache.solr.schema java.io.IOException import java.lang.invoke.MethodHandles import java.nio.ByteBuffer import org.apache.lucene.document.Field import org.apache.lucene.index.IndexableField import org.apache.lucene.search.SortField import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.lucene.util.BytesRef import org.apache.solr.common.util.Base64 import org.apache.solr.response.TextResponseWriter import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.schema.BinaryField super super extends Logger private private return - public public throws public public throw new public public if return else return public public return BytesRef public public decl_stmt org.apache.lucene.util.BytesRef = return Field decl byte String ByteBuffer int public public if == return if ! call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() + return decl_stmt byte = decl_stmt int = = if instanceof = = else if instanceof && decl_stmt ByteBuffer = = call String.array() call String.array() call String.array() call String.array() call String.array() = call String.position() call String.position() call String.position() call String.position() call String.position() = call String.limit() call String.limit() call String.limit() call String.limit() call String.limit() - call String.position() call String.position() call String.position() call String.position() call String.position() else decl_stmt java.lang.String = = = = decl_stmt org.apache.solr.handler.dataimport.config.Field = new return