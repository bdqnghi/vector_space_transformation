org.apache.solr.search java.util.HashSet import java.util.Random import java.util.Set import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.DisjunctionMaxQuery import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.util.SolrPluginUtils import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.search.TestExtendedDismaxParser super super extends public static public static throws public static public static throws public public throws String StringBuilder Random public public throws decl_stmt java.util.Random = for = < ++ decl_stmt java.lang.StringBuilder = new for = < call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) ++ switch call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) case call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break case call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break case call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break case call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) break decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public String String String String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = public public String String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = String String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = public public throws public public throws try try catch try catch try catch try catch try catch finally public public public public String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) public public throws public public throws public public throws public public throws public public throws public public throws public public throws Query FuzzyDismaxQParser MultilanguageQueryParser ModifiableSolrParams public public throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt MultilanguageQueryParser = new new decl_stmt org.apache.lucene.search.Query = call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) = new new = call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() call MultilanguageQueryParser.parse() decl_stmt FuzzyDismaxQParser = new new = call FuzzyDismaxQParser.parse() call FuzzyDismaxQParser.parse() call FuzzyDismaxQParser.parse() call FuzzyDismaxQParser.parse() call FuzzyDismaxQParser.parse() BoostQuery float private private decl_stmt float = if instanceof decl_stmt org.apache.lucene.search.BoostQuery = = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() = call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() if instanceof return if instanceof return if != return if instanceof && ! return if instanceof && return return private private if && return return private private for : if return return private private if && return return private private for : if return return protected protected return new protected protected return new protected protected throws if return return