org.apache.solr.update org.apache.lucene.util.TestUtil import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.util.DefaultSolrThreadFactory import org.junit.Before import org.junit.BeforeClass import java.util.ArrayList import java.util.List import java.util.concurrent.Callable import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import class org.apache.solr.update.TestDocBasedVersionConstraints super super extends public static public static throws public public throws public public throws for = < ++ for : new + for : new + + for : new + + + + + + public public throws public public throws public public throws try catch try catch try catch try catch try catch public public throws for = < ++ for : new + + boolean int long int ExecutorService int int String decl List int boolean public public throws decl_stmt int final final = decl_stmt int final final = decl_stmt java.util.concurrent.ExecutorService = new try for = < ++ decl_stmt int final final = decl_stmt int final final = - decl_stmt int final final = decl_stmt boolean final final = == decl_stmt java.util.List < < = new <> for = < ++ decl_stmt boolean final final = == decl_stmt long final final = : - if && || ! && == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + + + + + call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) decl_stmt java.lang.String final final = + + + + ! + + + + : + + + + + + finally private < private < final final return private < private < final final final final return try catch throw new