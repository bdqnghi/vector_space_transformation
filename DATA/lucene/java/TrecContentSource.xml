org.apache.lucene.benchmark.byTask.feeds java.io.BufferedReader import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.text.DateFormat import java.text.ParsePosition import java.text.SimpleDateFormat import java.util.ArrayList import java.util.Date import java.util.Locale import org.apache.lucene.benchmark.byTask.feeds.TrecDocParser.ParsePathType import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.benchmark.byTask.utils.StreamUtils import class org.apache.lucene.benchmark.byTask.feeds.TrecContentSource super super extends Object TrecDocParser decl ArrayList int String String BufferedReader int Path String ParsePathType String HTMLParser decl ThreadLocal String String boolean decl ThreadLocal DateFormatInfo private private decl_stmt DateFormatInfo = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = new = new for = < ++ = new = new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() return StringBuilder private private decl_stmt java.lang.StringBuilder = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() return return String String private private throws decl_stmt java.lang.String = while decl_stmt java.lang.String = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) if == continue if != && call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) if = return if = InputStream Path throws = while if >= call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() if ! throw new = ++ decl_stmt java.nio.file.Path = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() ++ if + + + try decl_stmt java.io.InputStream = = new new = return catch if + call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() + + continue throw new DateFormat DateFormatInfo Date public public = decl_stmt DateFormatInfo = for = < ++ decl_stmt java.text.DateFormat = call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() call DateFormatInfo.pos() - decl_stmt java.util.Date = call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) if != return if + return public public throws if == return try call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() catch if = ParsePathType StringBuilder String public public throws decl_stmt java.lang.String = decl_stmt java.lang.StringBuilder = decl_stmt ParsePathType synchronized if == call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() = call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() = call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.StringBuilder.indexOf(String,int) call java.lang.StringBuilder.indexOf(String,int) call java.lang.StringBuilder.indexOf(String,int) call java.lang.StringBuilder.indexOf(String,int) call java.lang.StringBuilder.indexOf(String,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if ! = + + call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() = call TrecDocParser.parse() call TrecDocParser.parse() call TrecDocParser.parse() call TrecDocParser.parse() call TrecDocParser.parse() return public public throws synchronized = = String Path String String public public decl_stmt java.nio.file.Path = decl_stmt java.lang.String = = if ! call java.nio.file.Path.isAbsolute() call java.nio.file.Path.isAbsolute() call java.nio.file.Path.isAbsolute() call java.nio.file.Path.isAbsolute() call java.nio.file.Path.isAbsolute() = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) try catch throw new if call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() == throw new + try decl_stmt java.lang.String = = catch throw new try decl_stmt java.lang.String = = catch throw new if == = =