org.apache.lucene.search.grouping.function org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.grouping.AbstractAllGroupsCollector import org.apache.lucene.util.mutable.MutableValue import java.io.IOException import java.util.Collection import java.util.Map import java.util.SortedSet import java.util.TreeSet import class org.apache.lucene.search.grouping.function.FunctionAllGroupsCollector super super extends decl FunctionValues decl ValueFiller ValueSource decl SortedSet decl Map public < public < return public public throws call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() if ! call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.contains() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() FunctionValues protected protected throws decl_stmt org.apache.lucene.queries.function.FunctionValues = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() = call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() = call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue()