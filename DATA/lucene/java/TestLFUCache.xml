org.apache.solr.search org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.NamedList import org.apache.solr.util.ConcurrentLFUCache import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.RefCounted import org.junit.BeforeClass import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.Locale import java.util.Map import java.util.concurrent.ExecutorService import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicReference import class org.apache.solr.search.TestLFUCache super super extends Logger public static public static throws SolrIndexSearcher NamedList LFUCache LFUCache decl RefCounted LFUCache public public throws decl_stmt org.apache.solr.util.RefCounted < = try decl_stmt org.apache.solr.search.SolrIndexSearcher = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() decl_stmt org.apache.solr.search.LFUCache = call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) for = < ++ decl_stmt org.apache.solr.search.LFUCache = call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) = call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) for = < ++ decl_stmt org.apache.solr.search.LFUCache = call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) call org.apache.solr.search.SolrIndexSearcher.getCache(String) = call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) for = < ++ for = < ++ finally call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() private private for : private private for : if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() private private for : if != call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() NoOpRegenerator Object LFUCache NamedList LFUCache Map LFUCache public public throws decl_stmt org.apache.solr.search.LFUCache = new decl_stmt org.apache.solr.search.LFUCache = new decl_stmt org.apache.solr.search.LFUCache = new try decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.apache.solr.search.NoOpRegenerator = new decl_stmt java.lang.Object = call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) for = < ++ call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) + + + call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) = call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.search.LFUCache.getStatistics() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.init(Map,Object,CacheRegenerator) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.warm(SolrIndexSearcher,SolrCache) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.setState(State) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.put(K,V) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) call org.apache.solr.search.LFUCache.get(K) finally if != call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() if != call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() if != call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() call org.apache.solr.search.LFUCache.close() decl ConcurrentLFUCache decl Map public public decl_stmt org.apache.solr.util.ConcurrentLFUCache < = new <> try for = < ++ call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() + + + for = < ++ call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() + call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() + call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() decl_stmt java.util.Map < = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl ConcurrentLFUCache.getLeastUsedItems() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() finally call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() decl ConcurrentLFUCache decl Map public public decl_stmt org.apache.solr.util.ConcurrentLFUCache < = new <> try for = < ++ call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() decl_stmt java.util.Map < = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() for = < ++ call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for = < ++ for = < ++ call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() + call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for = < ++ call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for = < ++ call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for = < ++ call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() finally call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() decl Map decl ConcurrentLFUCache public public decl_stmt org.apache.solr.util.ConcurrentLFUCache < = new <> int + / int * try for = < ++ call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() decl_stmt java.util.Map < = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() for = < ++ call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for = < ++ for = < ++ call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() call decl ConcurrentLFUCache.get() + call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() = call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() call decl ConcurrentLFUCache.getMostUsedItems() for = < ++ call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() finally call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() call decl ConcurrentLFUCache.destroy() ExecutorService decl ConcurrentLFUCache decl AtomicReference public public throws decl_stmt org.apache.solr.util.ConcurrentLFUCache final final final < = new <> decl_stmt java.util.concurrent.ExecutorService = new decl_stmt java.util.concurrent.atomic.AtomicReference final final final < = new <> for = < ++ call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) try call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() call decl ConcurrentLFUCache.put() catch call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) + call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get()