org.apache.solr.handler.component org.apache.lucene.index.* import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.StringHelper import org.apache.solr.common.SolrException import org.apache.solr.common.params.* import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.common.util.StrUtils import org.apache.solr.schema.FieldType import org.apache.solr.schema.StrField import org.apache.solr.request.SimpleFacets.CountPair import org.apache.solr.util.BoundedTreeSet import org.apache.solr.client.solrj.response.TermsResponse import java.io.IOException import java.util.Arrays import java.util.Comparator import java.util.HashMap import java.util.List import java.util.Locale import java.util.regex.Pattern import class org.apache.solr.handler.component.TermsComponent super super extends int String decl List SolrParams String public public throws decl_stmt org.apache.solr.common.params.SolrParams = if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != = if call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() == throw new decl_stmt java.util.List < = = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() LeafReader int boolean String FieldType decl NamedList Pattern int SolrParams BytesRef int int boolean String Terms boolean BytesRef BytesRef CharsRefBuilder String Fields boolean boolean BytesRefBuilder decl NamedList TermsEnum String decl String decl BoundedTreeSet int int BytesRef public public throws decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return decl_stmt java.lang.String = call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() decl_stmt org.apache.solr.common.util.NamedList < = new <> if == || == return decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) if < = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = ! call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) if < = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.util.regex.Pattern = != : decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt org.apache.lucene.index.LeafReader final final = decl_stmt Fields = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() for : decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt org.apache.lucene.index.Terms = call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() if == continue decl_stmt org.apache.solr.schema.FieldType = : if == = new decl_stmt org.apache.lucene.util.BytesRef = == : new decl_stmt org.apache.lucene.util.BytesRef = if != decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt org.apache.lucene.util.BytesRef if == = else = new if = new else decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) call org.apache.solr.schema.FieldType.readableToIndexed(CharSequence,BytesRefBuilder) = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef = if != if call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) == = else = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() if == && call org.apache.lucene.util.BytesRef.equals(Object) call org.apache.lucene.util.BytesRef.equals(Object) call org.apache.lucene.util.BytesRef.equals(Object) call org.apache.lucene.util.BytesRef.equals(Object) call org.apache.lucene.util.BytesRef.equals(Object) = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() else = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() decl_stmt int = decl_stmt org.apache.solr.util.BoundedTreeSet < < = new < < : decl_stmt org.apache.lucene.util.CharsRefBuilder = new while != && < || decl_stmt boolean = if != && ! break if != call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) = if ! call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() continue if != decl_stmt int = call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() if > || == && ! break decl_stmt int = call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() if >= && <= if call decl BoundedTreeSet.add() call decl BoundedTreeSet.add() call decl BoundedTreeSet.add() call decl BoundedTreeSet.add() call decl BoundedTreeSet.add() new <> else if ! call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() ++ = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if for < : if >= break call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() ++ decl String int decl_stmt java.lang.String = if == return decl_stmt int = for : try |= catch throw new + + return ShardRequest TermsHelper public public throws if ! return if == decl_stmt TermsHelper = if == = = new call TermsHelper.init() call TermsHelper.init() call TermsHelper.init() call TermsHelper.init() call TermsHelper.init() decl_stmt org.apache.solr.handler.component.ShardRequest = if < return else return decl NamedList TermsHelper public public if ! || & == return decl_stmt TermsHelper = if != for : decl_stmt org.apache.solr.common.util.NamedList < < = < < call TermsHelper.parse() call TermsHelper.parse() call TermsHelper.parse() call TermsHelper.parse() call TermsHelper.parse() NamedList TermsHelper public public if ! || != return decl_stmt TermsHelper = decl_stmt org.apache.solr.common.util.NamedList = call TermsHelper.buildResponse() call TermsHelper.buildResponse() call TermsHelper.buildResponse() call TermsHelper.buildResponse() call TermsHelper.buildResponse() = ShardRequest private private decl_stmt org.apache.solr.handler.component.ShardRequest = new = = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() - call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() return decl String public public = decl_stmt java.lang.String = if != for : new < decl List decl HashMap String TermsResponse decl TermsResponse public public < < if == return decl_stmt org.apache.solr.client.solrj.response.TermsResponse = new for : decl_stmt HashMap < = decl_stmt java.util.List < = call TermsResponse.getTerms() call TermsResponse.getTerms() call TermsResponse.getTerms() call TermsResponse.getTerms() call TermsResponse.getTerms() if == continue for : decl_stmt java.lang.String = if call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() decl_stmt org.apache.lucene.index.Term = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl TermsResponse.addFrequency() call decl TermsResponse.addFrequency() call decl TermsResponse.addFrequency() call decl TermsResponse.addFrequency() call decl TermsResponse.addFrequency() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() else call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() boolean decl Term long String long long decl TermsResponse decl NamedList decl NamedList public public decl_stmt org.apache.solr.common.util.NamedList < = new <> decl_stmt boolean = ! decl_stmt long = decl_stmt java.lang.String = if != = decl_stmt long = - = if != = if < = decl_stmt long = = if != = if < = for : decl_stmt org.apache.solr.common.util.NamedList < = new <> decl_stmt org.apache.lucene.index.Term = if = else = decl_stmt int = for : if >= && <= call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() ++ if >= break call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return private private if < return int else return decl TermsResponse public public < decl_stmt org.apache.lucene.index.Term = new return decl TermsResponse long decl Term public public < decl_stmt org.apache.lucene.index.Term = new decl_stmt long = decl_stmt long = if < return - else if < return else return return public public return