org.apache.lucene.spatial.composite java.io.IOException import com.carrotsearch.randomizedtesting.annotations.Repeat import org.apache.lucene.spatial.prefix.RandomSpatialOpStrategyTestCase import org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy import org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree import org.apache.lucene.spatial.prefix.tree.QuadPrefixTree import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.serialized.SerializedDVStrategy import org.junit.Test import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.context.SpatialContextFactory import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import org.locationtech.spatial4j.shape.impl.RectangleImpl import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomBoolean import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomDouble import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomIntBetween import class org.apache.lucene.spatial.composite.CompositeStrategyTest super super extends RecursivePrefixTreeStrategy SpatialPrefixTree SpatialContextFactory private private decl_stmt SpatialContextFactory = new = = new - = call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() if == - = = new = private private = if == - = = new = RecursivePrefixTreeStrategy protected protected decl_stmt org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy final final = new + call RecursivePrefixTreeStrategy.setDistErrPct() call RecursivePrefixTreeStrategy.setDistErrPct() call RecursivePrefixTreeStrategy.setDistErrPct() call RecursivePrefixTreeStrategy.setDistErrPct() call RecursivePrefixTreeStrategy.setDistErrPct() return SerializedDVStrategy = public = public throws if - else - decl_stmt org.apache.lucene.spatial.serialized.SerializedDVStrategy = new + = new + for : if == || == continue if == continue protected protected return protected protected return private private return : Rectangle double double Point private private decl_stmt java.awt.Point final final = decl_stmt double if = * else decl_stmt org.apache.lucene.geo.Rectangle final final = decl_stmt double = call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() - call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() = call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() - call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() = call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() - call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() = call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() - call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() = * return