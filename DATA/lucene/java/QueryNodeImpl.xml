org.apache.lucene.queryparser.flexible.core.nodes java.util.ArrayList import java.util.Hashtable import java.util.Iterator import java.util.List import java.util.Locale import java.util.Map import java.util.ResourceBundle import org.apache.lucene.queryparser.flexible.messages.NLS import org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages import org.apache.lucene.queryparser.flexible.core.util.StringUtils import class org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl super super implements String QueryNode decl Hashtable boolean decl List boolean protected protected if == = new <> else public final public final if || == || == throw new public final public final < if || == throw new for : public public return String decl ArrayList ResourceBundle public final public final < if || == decl_stmt java.util.ResourceBundle = decl_stmt java.lang.String = call java.util.ResourceBundle.getObject(String) call java.util.ResourceBundle.getObject(String) call java.util.ResourceBundle.getObject(String) call java.util.ResourceBundle.getObject(String) call java.util.ResourceBundle.getObject(String) throw new for : decl_stmt java.util.ArrayList < = new <> for : decl List QueryNodeImpl public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl = = = new <> if != decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = return public public throws return protected protected = public final < public final < if || == return return new <> public public public public public public return public public return private private if != = public public return protected protected return == protected protected if return if == return if return return public public return public < public < return < decl Iterator public public decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() if call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() == call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() QueryNode public public if != decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.QueryNode = = call org.apache.lucene.queryparser.flexible.core.nodes.QueryNode.removeChildren(QueryNode) call org.apache.lucene.queryparser.flexible.core.nodes.QueryNode.removeChildren(QueryNode) call org.apache.lucene.queryparser.flexible.core.nodes.QueryNode.removeChildren(QueryNode) call org.apache.lucene.queryparser.flexible.core.nodes.QueryNode.removeChildren(QueryNode) call org.apache.lucene.queryparser.flexible.core.nodes.QueryNode.removeChildren(QueryNode)