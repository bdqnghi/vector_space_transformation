org.apache.lucene.queries.payloads java.io.IOException import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.Terms import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.spans.FilterSpans import org.apache.lucene.search.spans.FilterSpans.AcceptStatus import org.apache.lucene.search.spans.SpanCollector import org.apache.lucene.search.spans.SpanQuery import org.apache.lucene.search.spans.SpanScorer import org.apache.lucene.search.spans.SpanWeight import org.apache.lucene.search.spans.Spans import org.apache.lucene.util.BytesRef import class org.apache.lucene.queries.payloads.SpanPayloadCheckQuery super super extends decl List SpanQuery public public return call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() SpanWeight public public throws decl_stmt org.apache.lucene.search.spans.SpanWeight = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() return new : public public < public public < Spans PayloadChecker public public final final throws decl_stmt PayloadChecker final final = new decl_stmt org.apache.lucene.search.spans.Spans = return == : new protected protected throws call PayloadChecker.reset() call PayloadChecker.reset() call PayloadChecker.reset() call PayloadChecker.reset() call PayloadChecker.reset() return call PayloadChecker.match() call PayloadChecker.match() call PayloadChecker.match() call PayloadChecker.match() call PayloadChecker.match() protected protected throws return Terms Spans decl Similarity public public throws if == return decl_stmt org.apache.lucene.index.Terms = if != && call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() == throw new + + + + decl_stmt org.apache.lucene.search.spans.Spans final final = if == return decl_stmt SimScorer final final final final final = return new BytesRef public public throws if ! return if >= call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = return decl_stmt org.apache.lucene.util.BytesRef = if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() == = == ++ return if == = ++ return = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ return && == call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() : public public = = StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() SpanPayloadCheckQuery public public if ! return decl_stmt org.apache.lucene.queries.payloads.SpanPayloadCheckQuery = return int public public decl_stmt int = = * ^ call decl List.hashCode() call decl List.hashCode() call decl List.hashCode() call decl List.hashCode() call decl List.hashCode() return