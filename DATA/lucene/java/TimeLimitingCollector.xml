org.apache.lucene.search java.io.IOException import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.util.Counter import org.apache.lucene.util.ThreadInterruptedException import class org.apache.lucene.search.TimeLimitingCollector super super implements int Counter boolean long long Collector long public public return public public return public public return public public = = + public public call Counter.get() call Counter.get() call Counter.get() call Counter.get() call Counter.get() public public return public public = long public public throws = if == decl_stmt long final final = call Counter.get() call Counter.get() call Counter.get() call Counter.get() call Counter.get() if - > throw new - - - return new call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) public public throws decl_stmt long final final = call Counter.get() call Counter.get() call Counter.get() call Counter.get() call Counter.get() if - > if throw new - - + long public public throws decl_stmt long final final = call Counter.get() call Counter.get() call Counter.get() call Counter.get() call Counter.get() if - > if throw new - - + public public return call Collector.needsScores() call Collector.needsScores() call Collector.needsScores() call Collector.needsScores() call Collector.needsScores() public public = public static public static return public static public static return public public while ! try catch throw new public public return public public = public public return public public =