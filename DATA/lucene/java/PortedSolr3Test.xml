org.apache.lucene.spatial java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Set import com.carrotsearch.randomizedtesting.annotations.ParametersFactory import org.apache.lucene.search.Query import org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy import org.apache.lucene.spatial.prefix.TermQueryPrefixTreeStrategy import org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree import org.apache.lucene.spatial.prefix.tree.QuadPrefixTree import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.vector.PointVectorStrategy import org.junit.Test import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import class org.apache.lucene.spatial.PortedSolr3Test super super extends SpatialPrefixTree SpatialContext decl List SpatialStrategy = public static < = public static < decl_stmt java.util.List < = new <> decl_stmt SpatialContext = decl_stmt org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree decl_stmt org.apache.lucene.spatial.SpatialStrategy = new = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() = new = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() = new = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() call org.apache.lucene.spatial.SpatialStrategy.getFieldName() return private private throws - - - - - - - - - - - public public throws - - - - - - private private private private decl Set SpatialArgs SearchResults Shape Query double SpatialOperation private private decl_stmt org.apache.lucene.spatial.query.SpatialOperation = decl_stmt double = decl_stmt java.awt.Shape = if = call Shape.getBoundingBox() call Shape.getBoundingBox() call Shape.getBoundingBox() call Shape.getBoundingBox() call Shape.getBoundingBox() decl_stmt org.apache.lucene.spatial.query.SpatialArgs = new decl_stmt org.apache.lucene.search.Query = decl_stmt SearchResults = + if != decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains()