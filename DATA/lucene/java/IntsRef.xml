org.apache.lucene.util java.util.Arrays import class org.apache.lucene.util.IntsRef super super implements decl int int decl int int public public return new int int int public public decl_stmt int final final = decl_stmt int = decl_stmt int final final = + for = < ++ = * + return public public if == return if instanceof return return decl int int int public public if == decl_stmt int = decl_stmt int final final final = decl_stmt int final final = + for = < ++ , ++ if != return return else return int decl int int int int decl int int public public if == return decl_stmt int final final final = decl_stmt int = decl_stmt int final final final = decl_stmt int = decl_stmt int final final = + while < decl_stmt int = ++ decl_stmt int = ++ if > return else if < return - return - StringBuilder int public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt int final final = + for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public static public static return new + public public if == throw new if < throw new + if > throw new + + + if < throw new + if > throw new + + + if + < throw new + + + if + > throw new + + + + + return