org.apache.lucene.index org.apache.lucene.util.BytesRef import java.io.IOException import java.util.Arrays import class org.apache.lucene.index.TermContext decl TermState long IndexReaderContext int TermState TermsEnum TermContext BytesRef String Terms public static public static throws assert != && decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.util.BytesRef final final = decl_stmt org.apache.lucene.index.TermContext final final = new for final final : decl_stmt org.apache.lucene.index.Terms final final = if != decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) decl_stmt org.apache.lucene.index.TermState final final = call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermContext.register(TermState,int) call org.apache.lucene.index.TermContext.register(TermState,int) call org.apache.lucene.index.TermContext.register(TermState,int) call org.apache.lucene.index.TermContext.register(TermState,int) call org.apache.lucene.index.TermContext.register(TermState,int) call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() return public public = = public public final final final final final final public public final final assert != : assert >= && < assert == : + + = public public final final final final += if >= && >= += else = - public public assert >= && < return public public return public public return public public for : if != && == return return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()