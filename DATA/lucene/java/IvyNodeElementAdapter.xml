org.apache.lucene.validation.ivyde org.apache.ivy.core.module.id.ModuleId import org.apache.ivy.core.module.id.ModuleRevisionId import org.apache.ivy.core.report.ResolveReport import org.apache.ivy.core.resolve.IvyNode import org.apache.ivy.core.resolve.IvyNodeCallers import java.util.Arrays import java.util.Collection import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.List import java.util.Map import class org.apache.lucene.validation.ivyde.IvyNodeElementAdapter IvyNode IvyNodeElement IvyNodeElement decl IvyNode decl IvyNodeCallers decl List decl Map IvyNodeElement IvyNode IvyNodeElement public static public static decl_stmt java.util.Map < = new <> decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = new call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.List < = for < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt IvyNode = if call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() != continue decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = new call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNodeElement.setModuleRevisionId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() for < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt IvyNode = if call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() call IvyNode.getAllEvictingNodes() != continue decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() call IvyNode.getResolvedId() decl_stmt Caller = call IvyNode.getAllRealCallers() call IvyNode.getAllRealCallers() call IvyNode.getAllRealCallers() call IvyNode.getAllRealCallers() call IvyNode.getAllRealCallers() for = < ++ decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != call org.apache.lucene.validation.ivyde.IvyNodeElement.addCaller(IvyNodeElement) call org.apache.lucene.validation.ivyde.IvyNodeElement.addCaller(IvyNodeElement) call org.apache.lucene.validation.ivyde.IvyNodeElement.addCaller(IvyNodeElement) call org.apache.lucene.validation.ivyde.IvyNodeElement.addCaller(IvyNodeElement) call org.apache.lucene.validation.ivyde.IvyNodeElement.addCaller(IvyNodeElement) call org.apache.lucene.validation.ivyde.IvyNodeElement.setCallerConfigurations(IvyNodeElement,String) call org.apache.lucene.validation.ivyde.IvyNodeElement.setCallerConfigurations(IvyNodeElement,String) call org.apache.lucene.validation.ivyde.IvyNodeElement.setCallerConfigurations(IvyNodeElement,String) call org.apache.lucene.validation.ivyde.IvyNodeElement.setCallerConfigurations(IvyNodeElement,String) call org.apache.lucene.validation.ivyde.IvyNodeElement.setCallerConfigurations(IvyNodeElement,String) decl_stmt IvyNode = for = < ++ decl_stmt IvyNode = decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = new call IvyNode.setModuleRevisionId() call IvyNode.setModuleRevisionId() call IvyNode.setModuleRevisionId() call IvyNode.setModuleRevisionId() call IvyNode.setModuleRevisionId() call decl IvyNode.getResolvedId() call decl IvyNode.getResolvedId() call decl IvyNode.getResolvedId() call decl IvyNode.getResolvedId() call decl IvyNode.getResolvedId() call IvyNode.setEvicted() call IvyNode.setEvicted() call IvyNode.setEvicted() call IvyNode.setEvicted() call IvyNode.setEvicted() decl_stmt Caller = call decl IvyNode.getAllCallers() call decl IvyNode.getAllCallers() call decl IvyNode.getAllCallers() call decl IvyNode.getAllCallers() call decl IvyNode.getAllCallers() for = < ++ decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != call IvyNode.addCaller() call IvyNode.addCaller() call IvyNode.addCaller() call IvyNode.addCaller() call IvyNode.addCaller() call IvyNode.setCallerConfigurations() call IvyNode.setCallerConfigurations() call IvyNode.setCallerConfigurations() call IvyNode.setCallerConfigurations() call IvyNode.setCallerConfigurations() call org.apache.lucene.validation.ivyde.IvyNodeElement.setDepth(int) call org.apache.lucene.validation.ivyde.IvyNodeElement.setDepth(int) call org.apache.lucene.validation.ivyde.IvyNodeElement.setDepth(int) call org.apache.lucene.validation.ivyde.IvyNodeElement.setDepth(int) call org.apache.lucene.validation.ivyde.IvyNodeElement.setDepth(int) return decl Map decl List decl Collection decl IvyNodeElement IvyNodeElement ModuleId private static private static decl_stmt java.util.Map < < = new <> decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = for = < ++ if continue decl_stmt ModuleId = if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt java.util.Collection < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() for < = call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() decl_stmt org.apache.lucene.validation.ivyde.IvyNodeElement = call org.apache.lucene.validation.ivyde.IvyNodeElement.setConflicts(Collection) call org.apache.lucene.validation.ivyde.IvyNodeElement.setConflicts(Collection) call org.apache.lucene.validation.ivyde.IvyNodeElement.setConflicts(Collection) call org.apache.lucene.validation.ivyde.IvyNodeElement.setConflicts(Collection) call org.apache.lucene.validation.ivyde.IvyNodeElement.setConflicts(Collection) else decl_stmt java.util.List < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new <>