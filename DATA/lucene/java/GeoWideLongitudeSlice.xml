org.apache.lucene.spatial3d.geom class org.apache.lucene.spatial3d.geom.GeoWideLongitudeSlice super super extends double decl GeoPoint decl GeoPoint SidedPlane SidedPlane double GeoPoint double double double public public final final decl_stmt double = - if < += * decl_stmt double = - decl_stmt double = + if + * >= * = - = return * - * public public final final final final final final return call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) || call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) double public public decl_stmt double = - if < += * return * * public public return public public return public public final final final final final final final return || public public boolean int public public final final decl_stmt int final final = if == return decl_stmt boolean final final = if == && return if || return if == return if return return double double double double protected protected final final final final final final final final decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = return GeoWideLongitudeSlice public public if ! instanceof return decl_stmt org.apache.lucene.spatial3d.geom.GeoWideLongitudeSlice = return && == && == int long public public decl_stmt int = decl_stmt long = = * + ^ >>> = = * + ^ >>> return public public return + + + + + * / + + + + * / +