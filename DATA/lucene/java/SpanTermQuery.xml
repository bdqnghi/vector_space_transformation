org.apache.lucene.search.spans java.io.IOException import java.util.Collections import java.util.Map import java.util.Objects import java.util.Set import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.TermState import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.IndexSearcher import class org.apache.lucene.search.spans.SpanTermQuery super super extends int Term TermContext int float public public return public public return call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() IndexReaderContext TermContext public public throws decl_stmt org.apache.lucene.index.TermContext final final decl_stmt IndexReaderContext final final = if == || != = else = return new : public public < public public < float TermState Terms PostingsEnum TermsEnum public public final final throws assert == : + + + decl_stmt org.apache.lucene.index.TermState final final = call org.apache.lucene.index.TermContext.get(int) call org.apache.lucene.index.TermContext.get(int) call org.apache.lucene.index.TermContext.get(int) call org.apache.lucene.index.TermContext.get(int) call org.apache.lucene.index.TermContext.get(int) if == assert == : + return decl_stmt org.apache.lucene.index.Terms final final = call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() if == return if call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() call Terms.hasPositions() == throw new + call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() + + call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() + decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() decl_stmt org.apache.lucene.index.PostingsEnum final final = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt float = * return new long float int static static throws decl_stmt int = assert > decl_stmt long = decl_stmt float = < : / float return + * StringBuilder public public decl_stmt java.lang.StringBuilder = new if call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.index.Term.toString() call org.apache.lucene.index.Term.toString() call org.apache.lucene.index.Term.toString() call org.apache.lucene.index.Term.toString() call org.apache.lucene.index.Term.toString() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int int public public decl_stmt int final final = decl_stmt int = = * + call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() return SpanTermQuery public public if ! return decl_stmt org.apache.lucene.search.spans.SpanTermQuery = return call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object) call org.apache.lucene.index.Term.equals(Object)