org.apache.solr.morphlines.solr java.io.IOException import java.io.Reader import java.util.Collection import java.util.Collections import java.util.List import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.kitesdk.morphline.api.Command import org.kitesdk.morphline.api.CommandBuilder import org.kitesdk.morphline.api.MorphlineCompilationException import org.kitesdk.morphline.api.MorphlineContext import org.kitesdk.morphline.api.MorphlineRuntimeException import org.kitesdk.morphline.api.Record import org.kitesdk.morphline.base.AbstractCommand import com.google.common.base.Preconditions import com.typesafe.config.Config import class org.apache.solr.morphlines.solr.TokenizeTextBuilder super super implements public < public < return public public return new String TokenStream List protected protected try decl_stmt java.util.List = for : decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() while call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() if > decl_stmt java.lang.String = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() catch throw new return = = = public public if < return ++ else = return - public public if < = - + += return else = return - public public = =