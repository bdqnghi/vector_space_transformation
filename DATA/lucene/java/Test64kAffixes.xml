org.apache.lucene.analysis.hunspell java.io.BufferedWriter import java.io.InputStream import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.util.List import org.apache.lucene.store.Directory import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.CharsRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.analysis.hunspell.Test64kAffixes super super extends decl List Dictionary Path Path Stemmer BufferedWriter Path BufferedWriter public public throws decl_stmt java.nio.file.Path = decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt BufferedWriter = call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() for = < ++ call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() + + call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() decl_stmt BufferedWriter = call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() try = = = decl_stmt org.apache.lucene.search.spell.Dictionary = new decl_stmt org.apache.lucene.analysis.hunspell.Stemmer = new decl_stmt java.util.List < = call org.apache.lucene.analysis.hunspell.Stemmer.stem(char,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean) call org.apache.lucene.analysis.hunspell.Stemmer.stem(char,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean) call org.apache.lucene.analysis.hunspell.Stemmer.stem(char,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean) call org.apache.lucene.analysis.hunspell.Stemmer.stem(char,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean) call org.apache.lucene.analysis.hunspell.Stemmer.stem(char,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get()