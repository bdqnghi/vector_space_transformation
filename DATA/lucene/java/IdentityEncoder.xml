org.apache.lucene.analysis.payloads java.nio.ByteBuffer import java.nio.CharBuffer import java.nio.charset.Charset import java.nio.charset.StandardCharsets import org.apache.lucene.util.BytesRef import class org.apache.lucene.analysis.payloads.IdentityEncoder super super extends super implements Charset decl byte ByteBuffer public public decl_stmt ByteBuffer final final = call java.nio.charset.Charset.encode(CharBuffer) call java.nio.charset.Charset.encode(CharBuffer) call java.nio.charset.Charset.encode(CharBuffer) call java.nio.charset.Charset.encode(CharBuffer) call java.nio.charset.Charset.encode(CharBuffer) if call ByteBuffer.hasArray() call ByteBuffer.hasArray() call ByteBuffer.hasArray() call ByteBuffer.hasArray() call ByteBuffer.hasArray() return new call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.arrayOffset() call ByteBuffer.arrayOffset() call ByteBuffer.arrayOffset() call ByteBuffer.arrayOffset() call ByteBuffer.arrayOffset() + call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() else decl_stmt byte final final final = new call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.remaining() call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() call ByteBuffer.get() return new