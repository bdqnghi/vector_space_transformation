org.apache.solr.util java.text.ParseException import java.time.Instant import java.time.format.DateTimeFormatter import java.time.format.DateTimeFormatterBuilder import java.time.format.DateTimeParseException import java.util.Calendar import java.util.Date import java.util.HashMap import java.util.Locale import java.util.Map import java.util.TimeZone import java.util.regex.Pattern import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.request.SolrRequestInfo import class org.apache.solr.util.DateMathParser TimeZone TimeZone Locale DateTimeFormatter decl Map TimeZone Pattern Locale Date decl Map private static < private static < decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return Integer public static public static decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new + call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() Integer int public static public static decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new + decl_stmt int = call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() switch case case case case case case break default: throw new + + + DateMathParser int String public static public static decl_stmt java.lang.String decl_stmt org.apache.solr.util.DateMathParser final final = new if != call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() if = else decl_stmt int final final = if == - throw new + + = + try call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() + catch throw new + + if == || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return call org.apache.solr.util.DateMathParser.getNow() call org.apache.solr.util.DateMathParser.getNow() call org.apache.solr.util.DateMathParser.getNow() call org.apache.solr.util.DateMathParser.getNow() call org.apache.solr.util.DateMathParser.getNow() try return call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) catch throw new + + private static private static return new call DateTimeFormatter.parse() call DateTimeFormatter.parse() call DateTimeFormatter.parse() call DateTimeFormatter.parse() call DateTimeFormatter.parse() :: public public return public public return public public = SolrRequestInfo public public if == decl_stmt org.apache.solr.request.SolrRequestInfo = if == = new else = call org.apache.solr.request.SolrRequestInfo.getNOW() call org.apache.solr.request.SolrRequestInfo.getNOW() call org.apache.solr.request.SolrRequestInfo.getNOW() call org.apache.solr.request.SolrRequestInfo.getNOW() call org.apache.solr.request.SolrRequestInfo.getNOW() return call java.util.Date.clone() call java.util.Date.clone() call java.util.Date.clone() call java.util.Date.clone() call java.util.Date.clone() int decl String int char Calendar String public public throws decl_stmt java.util.Calendar = call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) if == return call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() decl_stmt java.lang.String = call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) decl_stmt int = while < if != throw new + + decl_stmt char = ++ switch case if < + throw new + + try ++ catch throw new + - + - break case case if < + throw new + + decl_stmt int = try = ++ catch throw new + - + - if == = - try decl_stmt java.lang.String = ++ catch throw new + - + - break default: throw new + + - return call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime()