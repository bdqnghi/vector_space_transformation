org.apache.lucene.search java.io.IOException import java.util.Arrays import java.util.Objects import org.apache.lucene.index.PointValues import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.document.IntPoint import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.util.DocIdSetBuilder import org.apache.lucene.util.StringHelper import class org.apache.lucene.search.PointRangeQuery super super extends String int decl byte decl byte int public static public static if == throw new if == throw new if == throw new boolean decl byte DocIdSetIterator int boolean PointValues DocIdSetBuilder LeafReader decl byte FieldInfo public final public final throws return new private private throws decl_stmt org.apache.lucene.util.DocIdSetBuilder = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() new public public call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) public public call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public for = < ++ decl_stmt int = * if < return if > return call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public decl_stmt boolean = for = < ++ decl_stmt int = * if > || < return |= < || > if return else return return call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() public public throws decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PointValues = call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() if == return decl_stmt org.apache.lucene.index.FieldInfo = call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() if == return if call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() != throw new + + + call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() + + if != call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() throw new + + + call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() + + decl_stmt boolean if call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) == call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt byte final final final = call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) decl_stmt byte final final final = call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) = for = < ++ decl_stmt int = * if > || < = break else = decl_stmt org.apache.lucene.search.DocIdSetIterator if = call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() else = return new boolean DocIdSetBuilder int private private throws decl_stmt org.apache.lucene.util.DocIdSetBuilder = new new public public call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) call org.apache.lucene.util.DocIdSetBuilder.grow(int) public public call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public for = < ++ decl_stmt int = * if < return if > return call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) public public decl_stmt boolean = for = < ++ decl_stmt int = * if > || < return |= < || > if return else return return call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() public public public public int public public for = < ++ decl_stmt int = * if < return if > return boolean int public public decl_stmt boolean = for = < ++ decl_stmt int = * if > || < return |= < || > if return else return decl byte DocIdSetIterator boolean int PointValues LeafReader decl byte FieldInfo public public throws decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PointValues = call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() if == return decl_stmt org.apache.lucene.index.FieldInfo = call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() if == return if call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() != throw new + + + call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() + + if != call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() throw new + + + call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() + + decl_stmt boolean if call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) == call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt byte final final final = call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMinPackedValue(IndexReader,String) decl_stmt byte final final final = call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) call org.apache.lucene.index.PointValues.getMaxPackedValue(IndexReader,String) = for = < ++ decl_stmt int = * if > || < = break else = decl_stmt org.apache.lucene.search.DocIdSetIterator if = call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() else = return new int public final public final decl_stmt int = = * + call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + = * + = * + = * + return PointRangeQuery public final public final if == return decl_stmt org.apache.lucene.search.PointRangeQuery final final = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) == return if != return if != return if == return if == return return StringBuilder int public final public final decl_stmt java.lang.StringBuilder final final = new if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt int = * call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()