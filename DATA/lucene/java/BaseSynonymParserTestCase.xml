org.apache.lucene.analysis.synonym java.io.IOException import java.util.Arrays import java.util.HashSet import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.fst.Util import class org.apache.lucene.analysis.synonym.BaseSynonymParserTestCase super super extends int int String boolean BytesRef ByteArrayDataInput BytesRef decl Set public static public static throws = decl_stmt org.apache.lucene.util.BytesRef = new new + decl_stmt org.apache.lucene.store.ByteArrayDataInput = new decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() decl_stmt boolean final final = & == + + + decl_stmt int final final = >>> + + + decl_stmt java.util.Set < = new <> decl_stmt org.apache.lucene.util.BytesRef = new for = < ++ call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() decl_stmt java.lang.String = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() BytesRef public static public static throws = decl_stmt org.apache.lucene.util.BytesRef = new new + public static public static throws new public static public static throws