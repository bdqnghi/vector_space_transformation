org.apache.lucene.codecs.blocktreeords java.io.IOException import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.codecs.blocktreeords.FSTOrdsOutputs.Output import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.TermsEnum.SeekStatus import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.fst.FST import class org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame int decl long decl byte int decl FST int long long ByteArrayDataInput int ByteArrayDataInput BlockTermState boolean ByteArrayDataInput int long decl byte decl byte long int decl byte int long long int int OrdsSegmentTermsEnum boolean long boolean boolean boolean long ByteArrayDataInput int public public decl_stmt int final final = - - assert > if > = new + call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & = + call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() public public return : throws assert == || : + + + = = - int int throws call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.initIndexInput() if != - return call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() decl_stmt int = call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() = >>> assert > = & != assert == || || = call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() = & != decl_stmt int = >>> if < = new call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() if < = new call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = = = = - = call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() if == = new = new else if < = new call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() call OrdsSegmentTermsEnum.in() = = = - = if call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() assert > = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & = + call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() public public return : public public assert != - && < : + + + + + + + ++ ++ = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() = return int public public assert != - && < : + + + + + ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = >>> = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() if & == = = ++ ++ return else = = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() += call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - return int long long long public public if ! || <= return decl_stmt int final final = + & if < return assert != decl_stmt long = decl_stmt long = while decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = + >>> = & != = == -- = if = = break else = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & += call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() if < break if != = - = = else long long long public public if ! || < return assert != decl_stmt long = decl_stmt long = while decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = + >>> = & != = == -- = if = = break else = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & += call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() if < break if != = - = = else int boolean public public throws assert >= decl_stmt int final final = decl_stmt boolean = == assert > : + + + + + while < = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() if call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() != = + call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() for = < ++ = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() call OrdsSegmentTermsEnum.fr() ++ = = private private for = < ++ if + != call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() return return long int long public public assert ! if == return assert < : + + + decl_stmt long final final = - while assert < ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) : >>> if & != decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() += call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() if == = return else ++ ++ public public throws return : int int boolean int int int public public throws assert != - = = if == if return assert while ++ ++ = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() decl_stmt int final final = + = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) decl_stmt int final final = + < : decl_stmt int = + decl_stmt int = while decl_stmt int final final decl_stmt boolean final final if < = ++ & - ++ & = else assert == = - = if < if == if break break else continue continue else if > return else if assert return if return int int long boolean int int int int public public throws assert != - if == if = == return assert while ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = >>> = & == decl_stmt int final final = + = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) decl_stmt long = if ++ ++ = else = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() += call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - decl_stmt int final final = + < : decl_stmt int = + decl_stmt int = while decl_stmt int final final decl_stmt boolean final final if < = ++ & - ++ & = else assert == = - = if < if == if break break else continue continue else if > if ! && ! = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() while call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.pushFrame(FST,Output,int) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() call OrdsSegmentTermsEnum.currentFrame() return else if assert return if return int private private decl_stmt int final final = + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum.term()