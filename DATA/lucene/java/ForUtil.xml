org.apache.lucene.codecs.lucene50 java.io.IOException import java.util.Arrays import org.apache.lucene.store.DataInput import org.apache.lucene.store.DataOutput import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.packed.PackedInts.Decoder import org.apache.lucene.util.packed.PackedInts.FormatAndBits import org.apache.lucene.util.packed.PackedInts import static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.BLOCK_SIZE import class org.apache.lucene.codecs.lucene50.ForUtil decl PackedInts int decl Encoder decl PackedInts int int decl int private static private static return int float / long private static private static decl_stmt long final final = assert >= && <= : return int decl Encoder int decl PackedInts int throws if byte return decl_stmt int final final = assert > && <= : decl_stmt org.apache.lucene.search.highlight.Encoder final final final final final = decl_stmt int final final = assert * call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() >= decl_stmt int final final = assert * call decl PackedInts.byteBlockCount() call decl PackedInts.byteBlockCount() call decl PackedInts.byteBlockCount() call decl PackedInts.byteBlockCount() call decl PackedInts.byteBlockCount() >= byte call decl PackedInts.encode() call decl PackedInts.encode() call decl PackedInts.encode() call decl PackedInts.encode() call decl PackedInts.encode() decl Decoder int decl PackedInts int int throws decl_stmt int final final = assert <= : if == decl_stmt int final final = return decl_stmt int final final = decl_stmt org.apache.solr.core.Decoder final final final final final = decl_stmt int final final = assert * call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() call decl PackedInts.byteValueCount() >= call decl PackedInts.decode() call decl PackedInts.decode() call decl PackedInts.decode() call decl PackedInts.decode() call decl PackedInts.decode() int int throws decl_stmt int final final = if == return assert > && <= : decl_stmt int final final = + int private static private static final final final decl_stmt int final final = for = < ++ if != return return long private static private static final final final decl_stmt long = for = < ++ assert >= |= return