org.apache.lucene.replicator.nrt java.io.IOException import java.util.ArrayList import java.util.List import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.SegmentInfos import org.apache.lucene.index.StandardDirectoryReader import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.ReferenceManager import org.apache.lucene.search.SearcherFactory import org.apache.lucene.search.SearcherManager import org.apache.lucene.store.Directory import org.apache.lucene.util.ThreadInterruptedException import class org.apache.lucene.replicator.nrt.SegmentInfosSearcherManager super super extends Node AtomicInteger SegmentInfos SearcherFactory Directory protected protected return protected protected return protected protected throws public public return public public throws if != call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + = DirectoryReader decl List protected protected throws decl_stmt java.util.List < if == = else = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() + + return private private call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() new public public public public synchronized synchronized if call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() ==