org.apache.solr.handler.component java.io.IOException import java.net.MalformedURLException import java.net.URL import java.util.ArrayList import java.util.Arrays import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import com.carrotsearch.hppc.IntHashSet import com.carrotsearch.hppc.IntObjectHashMap import com.carrotsearch.hppc.LongHashSet import com.carrotsearch.hppc.LongObjectHashMap import com.carrotsearch.hppc.LongObjectMap import com.carrotsearch.hppc.cursors.IntObjectCursor import com.carrotsearch.hppc.cursors.LongCursor import com.carrotsearch.hppc.cursors.LongObjectCursor import com.carrotsearch.hppc.cursors.ObjectCursor import org.apache.lucene.index.DocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.FilterLeafReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SortedDocValues import org.apache.lucene.queries.TermsQuery import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Collector import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.LeafCollector import org.apache.lucene.search.Query import org.apache.solr.search.QueryWrapperFilter import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Scorer import org.apache.lucene.search.Sort import org.apache.lucene.search.TopDocs import org.apache.lucene.search.TopDocsCollector import org.apache.lucene.search.TopFieldCollector import org.apache.lucene.search.TopScoreDocCollector import org.apache.lucene.uninverting.UninvertingReader import org.apache.lucene.util.BitSetIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LongValues import org.apache.solr.common.SolrDocumentList import org.apache.solr.common.params.ExpandParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.core.PluginInfo import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.FieldType import org.apache.solr.schema.StrField import org.apache.solr.schema.TrieDoubleField import org.apache.solr.schema.TrieFloatField import org.apache.solr.schema.TrieIntField import org.apache.solr.schema.TrieLongField import org.apache.solr.search.CollapsingQParserPlugin import org.apache.solr.search.DocIterator import org.apache.solr.search.DocList import org.apache.solr.search.DocSlice import org.apache.solr.search.QParser import org.apache.solr.search.SolrConstantScoreQuery import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.SortSpecParsing import org.apache.solr.util.plugin.PluginInfoInitialized import org.apache.solr.util.plugin.SolrCoreAware import class org.apache.solr.handler.component.ExpandComponent super super extends super implements PluginInfo int String public public = public public throws if = public public decl IntObjectHashMap decl List decl float decl List Query decl Map decl CollapsingPostFilter int Sort decl CollapsingQParserPlugin int long FixedBitSet ScoreDoc String UninvertingReader SolrQueryRequest IntHashSet decl MultiDocValues String SolrParams int SolrIndexSearcher NumericDocValues String long BytesRef decl LongObjectMap int QParser int CharsRefBuilder String decl int int decl ProcessedFilter decl TopDocsCollector long decl OrdinalMap decl int decl SortedDocValues LeafReader decl SolrIndexSearcher DocList LongHashSet int BytesRef QParser decl String int Query Query decl ScoreDoc int Collector FieldType TopDocs int String decl List NamedList DocIterator Collector SortedDocValues public public throws if ! return decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.common.params.SolrParams = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = if == decl_stmt java.util.List < = if != for : if instanceof decl_stmt CollapsingPostFilter = = call decl CollapsingQParserPlugin.getField() call decl CollapsingQParserPlugin.getField() call decl CollapsingQParserPlugin.getField() call decl CollapsingQParserPlugin.getField() call decl CollapsingQParserPlugin.getField() = if == throw new decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt org.apache.lucene.search.Sort = if != = decl_stmt org.apache.lucene.search.Query if == = else try decl_stmt org.apache.solr.search.QParser = = call Query.getQuery() call Query.getQuery() call Query.getQuery() call Query.getQuery() call Query.getQuery() catch throw new decl_stmt java.util.List < = new <> if == decl_stmt java.util.List < = if != for : if ! instanceof call QParser.add() call QParser.add() call QParser.add() call QParser.add() call QParser.add() else try for : if != && != && ! decl_stmt org.apache.solr.search.QParser = call QParser.add() call QParser.add() call QParser.add() call QParser.add() call QParser.add() call decl List.getQuery() call decl List.getQuery() call decl List.getQuery() call decl List.getQuery() call decl List.getQuery() catch throw new decl_stmt org.apache.solr.search.SolrIndexSearcher = call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() decl_stmt org.apache.lucene.index.LeafReader = call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() decl_stmt org.apache.solr.schema.FieldType = call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt long = if instanceof if decl_stmt java.util.Map < = new call long.put() call long.put() call long.put() call long.put() call long.put() decl_stmt org.apache.lucene.uninverting.UninvertingReader = new new call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() call QParser.getLeafReader() = call decl Map.getSortedDocValues() call decl Map.getSortedDocValues() call decl Map.getSortedDocValues() call decl Map.getSortedDocValues() call decl Map.getSortedDocValues() else = else decl_stmt java.lang.String = call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() call QParser.getSchema() if != if instanceof || instanceof = else if instanceof = else if instanceof = else if instanceof = else if instanceof = decl_stmt org.apache.lucene.util.FixedBitSet = decl_stmt LongHashSet = decl_stmt org.apache.solr.search.DocList = decl_stmt IntHashSet = new call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() * decl_stmt org.apache.solr.search.DocIterator = call LongHashSet.iterator() call LongHashSet.iterator() call LongHashSet.iterator() call LongHashSet.iterator() call LongHashSet.iterator() decl_stmt int = new call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() decl_stmt int = - while call IntHashSet.hasNext() call IntHashSet.hasNext() call IntHashSet.hasNext() call IntHashSet.hasNext() call IntHashSet.hasNext() ++ = call IntHashSet.nextDoc() call IntHashSet.nextDoc() call IntHashSet.nextDoc() call IntHashSet.nextDoc() call IntHashSet.nextDoc() decl_stmt org.apache.lucene.search.Query = decl_stmt java.util.List < = call QParser.getTopReaderContext() call QParser.getTopReaderContext() call QParser.getTopReaderContext() call QParser.getTopReaderContext() call QParser.getTopReaderContext() decl_stmt int = decl_stmt int = call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() decl_stmt int = + < call Query.size() call Query.size() call Query.size() call Query.size() call Query.size() call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() + : decl_stmt IntObjectHashMap < = if != = new call FieldType.getValueCount() call FieldType.getValueCount() call FieldType.getValueCount() call FieldType.getValueCount() call FieldType.getValueCount() decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap = decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt org.apache.lucene.util.LongValues = decl_stmt org.apache.lucene.index.SortedDocValues = if instanceof = = = = call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() decl_stmt int = = new <> for = < ++ decl_stmt int = while >= ++ = call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() = + < call Query.size() call Query.size() call Query.size() call Query.size() call Query.size() call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() + : if != = = call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() call decl IntObjectHashMap.getGlobalOrds() decl_stmt int = - if != decl_stmt int = call decl SortedDocValues.getOrd() call decl SortedDocValues.getOrd() call decl SortedDocValues.getOrd() call decl SortedDocValues.getOrd() call decl SortedDocValues.getOrd() if > - ++ decl_stmt org.apache.lucene.util.BytesRef = call decl SortedDocValues.lookupOrd() call decl SortedDocValues.lookupOrd() call decl SortedDocValues.lookupOrd() call decl SortedDocValues.lookupOrd() call decl SortedDocValues.lookupOrd() = int call decl OrdinalMap.get() call decl OrdinalMap.get() call decl OrdinalMap.get() call decl OrdinalMap.get() call decl OrdinalMap.get() call int.put() call int.put() call int.put() call int.put() call int.put() call String.set() call String.set() call String.set() call String.set() call String.set() call DocList.add() call DocList.add() call DocList.add() call DocList.add() call DocList.add() else decl_stmt int = call FieldType.getOrd() call FieldType.getOrd() call FieldType.getOrd() call FieldType.getOrd() call FieldType.getOrd() if > - ++ decl_stmt org.apache.lucene.util.BytesRef = call FieldType.lookupOrd() call FieldType.lookupOrd() call FieldType.lookupOrd() call FieldType.lookupOrd() call FieldType.lookupOrd() call int.put() call int.put() call int.put() call int.put() call int.put() call String.set() call String.set() call String.set() call String.set() call String.set() call DocList.add() call DocList.add() call DocList.add() call DocList.add() call DocList.add() if > && < try = catch throw new else = new call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() call LongHashSet.size() decl_stmt NumericDocValues = call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() decl_stmt int = for = < ++ decl_stmt int = while >= ++ = call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() = + < call Query.size() call Query.size() call Query.size() call Query.size() call Query.size() call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() + : = call Query.get() call Query.get() call Query.get() call Query.get() call Query.get() decl_stmt int = - decl_stmt long = call int.get() call int.get() call int.get() call int.get() call int.get() if != ++ call FixedBitSet.add() call FixedBitSet.add() call FixedBitSet.add() call FixedBitSet.add() call FixedBitSet.add() call DocList.add() call DocList.add() call DocList.add() call DocList.add() call DocList.add() if > && < = decl_stmt org.apache.lucene.search.Collector if != = call int.rewrite() call int.rewrite() call int.rewrite() call int.rewrite() call int.rewrite() decl_stmt org.apache.lucene.search.Collector = if != = new else = new if != call QParser.add() call QParser.add() call QParser.add() call QParser.add() call QParser.add() decl_stmt ProcessedFilter = call QParser.getProcessedFilter() call QParser.getProcessedFilter() call QParser.getProcessedFilter() call QParser.getProcessedFilter() call QParser.getProcessedFilter() if != call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() call Collector.postFilter() = else = if == call QParser.search() call QParser.search() call QParser.search() call QParser.search() call QParser.search() else decl_stmt org.apache.lucene.search.Query = new call QParser.search() call QParser.search() call QParser.search() call QParser.search() call QParser.search() decl_stmt LongObjectMap < = decl_stmt org.apache.solr.common.util.NamedList = new decl_stmt org.apache.lucene.util.CharsRefBuilder = new for < : decl_stmt long = decl_stmt org.apache.lucene.search.TopDocsCollector < = decl_stmt org.apache.lucene.search.TopDocs = call NamedList.topDocs() call NamedList.topDocs() call NamedList.topDocs() call NamedList.topDocs() call NamedList.topDocs() decl_stmt org.apache.lucene.search.ScoreDoc = if > decl_stmt int = new decl_stmt float = new for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc = = = decl_stmt org.apache.solr.search.DocSlice = new call CharsRefBuilder.getMaxScore() call CharsRefBuilder.getMaxScore() call CharsRefBuilder.getMaxScore() call CharsRefBuilder.getMaxScore() call CharsRefBuilder.getMaxScore() if instanceof decl_stmt org.apache.lucene.util.BytesRef final final = call int.get() call int.get() call int.get() call int.get() call int.get() int call LeafReader.indexedToReadable() call LeafReader.indexedToReadable() call LeafReader.indexedToReadable() call LeafReader.indexedToReadable() call LeafReader.indexedToReadable() decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() else if instanceof || instanceof call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() else if instanceof call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() int else if instanceof call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() call decl ProcessedFilter.add() public public throws if && < return return SolrParams public public decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return if ! && & == else NamedList String SolrDocumentList SolrQueryRequest NamedList NamedList public public if ! return if & != decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() if == = new call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() call org.apache.solr.request.SolrQueryRequest.getContext() for : decl_stmt org.apache.solr.common.util.NamedList = decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt org.apache.solr.common.SolrDocumentList = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) NamedList public public if ! return if != return decl_stmt org.apache.solr.common.util.NamedList = if == = new public public return int LeafCollector decl LongObjectMap int int public public throws decl_stmt int final final = if != = = decl_stmt LongObjectMap final final final < = new <> for < : call decl LongObjectMap.put() call decl LongObjectMap.put() call decl LongObjectMap.put() call decl LongObjectMap.put() call decl LongObjectMap.put() return new public public throws for < : call decl LongObjectMap.values() call decl LongObjectMap.values() call decl LongObjectMap.values() call decl LongObjectMap.values() call decl LongObjectMap.values() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() call LeafCollector.value() public public throws decl_stmt int = + decl_stmt int = - if != = if > - = int else = if > - && && ! decl_stmt org.apache.lucene.search.LeafCollector = call decl LongObjectMap.get() call decl LongObjectMap.get() call decl LongObjectMap.get() call decl LongObjectMap.get() call decl LongObjectMap.get() call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) public public throws for < : int int LeafCollector public public throws decl_stmt int = + decl_stmt int = - if != = if > - = int else = if > - && && ! decl_stmt org.apache.lucene.search.LeafCollector = call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) public < public < return public public return int decl LongObjectHashMap long int public public throws decl_stmt int final final = = decl_stmt LongObjectHashMap final final final < = new <> for < : call decl LongObjectHashMap.put() call decl LongObjectHashMap.put() call decl LongObjectHashMap.put() call decl LongObjectHashMap.put() call decl LongObjectHashMap.put() return new public public throws for < : call decl LongObjectHashMap.values() call decl LongObjectHashMap.values() call decl LongObjectHashMap.values() call decl LongObjectHashMap.values() call decl LongObjectHashMap.values() public public throws decl_stmt long = decl_stmt int final final if != && = call decl LongObjectHashMap.indexOf() call decl LongObjectHashMap.indexOf() call decl LongObjectHashMap.indexOf() call decl LongObjectHashMap.indexOf() call decl LongObjectHashMap.indexOf() >= && ! + call decl LongObjectHashMap.indexGet() call decl LongObjectHashMap.indexGet() call decl LongObjectHashMap.indexGet() call decl LongObjectHashMap.indexGet() call decl LongObjectHashMap.indexGet() public public throws for < : int long public public throws decl_stmt long = decl_stmt int final final if != && = >= && ! + public < public < return int BytesRefBuilder decl Iterator decl BytesRef LongCursor String private private decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRefBuilder = new decl_stmt java.util.Iterator < = decl_stmt int = - decl_stmt java.lang.String = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt LongCursor = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if instanceof || instanceof = else if instanceof = int else = ++ = call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() return new new new decl IntObjectCursor int decl Iterator decl BytesRef private private < throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt int = - decl_stmt java.util.Iterator < < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt IntObjectCursor < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() ++ = return new new new public public return public public try return new new catch throw new public public return public public return FieldInfo FieldInfos FieldInfo decl Iterator decl List public public decl_stmt java.util.Iterator < = decl_stmt java.util.List < = new <> while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.index.FieldInfo = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() call sun.reflect.FieldInfo.name() decl_stmt org.apache.lucene.index.FieldInfo = new call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasVectors() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.hasPayloads() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.getDocValuesGen() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.attributes() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.index.FieldInfos = new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return