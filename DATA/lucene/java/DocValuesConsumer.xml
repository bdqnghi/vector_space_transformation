org.apache.lucene.codecs java.io.Closeable import java.io.IOException import java.util.ArrayList import java.util.Iterator import java.util.List import java.util.NoSuchElementException import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FilteredTermsEnum import org.apache.lucene.index.MergeState import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.MultiDocValues.OrdinalMap import org.apache.lucene.index.DocValues import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.SortedNumericDocValues import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.TermsEnum import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LongBitSet import org.apache.lucene.util.LongValues import org.apache.lucene.util.packed.PackedInts import class org.apache.lucene.codecs.DocValuesConsumer super super implements decl List decl List Bits SortedNumericDocValues FieldInfo DocValuesProducer DocValuesType public public throws for : if != call DocValuesProducer.checkIntegrity() call DocValuesProducer.checkIntegrity() call DocValuesProducer.checkIntegrity() call DocValuesProducer.checkIntegrity() call DocValuesProducer.checkIntegrity() for : decl_stmt DocValuesType = if != if == decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt NumericDocValues = decl_stmt org.apache.lucene.util.Bits = decl_stmt org.apache.lucene.codecs.DocValuesProducer = if != decl_stmt org.apache.lucene.index.FieldInfo = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == = call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() = call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() if == = = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if == decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt BinaryDocValues = decl_stmt org.apache.lucene.util.Bits = decl_stmt org.apache.lucene.codecs.DocValuesProducer = if != decl_stmt org.apache.lucene.index.FieldInfo = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == = call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() = call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() if == = = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if == decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt org.apache.lucene.codecs.DocValuesProducer = if != decl_stmt org.apache.lucene.index.FieldInfo = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == = call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() if == = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if == decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.index.SortedSetDocValues = decl_stmt org.apache.lucene.codecs.DocValuesProducer = if != decl_stmt org.apache.lucene.index.FieldInfo = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == = call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() if == = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if == decl_stmt java.util.List < = new <> for = < ++ decl_stmt SortedNumericDocValues = decl_stmt org.apache.lucene.codecs.DocValuesProducer = if != decl_stmt org.apache.lucene.index.FieldInfo = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == = call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() if == = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else throw new + int boolean int Bits int boolean long NumericDocValues Bits public public final final final final final final final < final final final < throws new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt boolean decl_stmt int decl_stmt NumericDocValues decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return : private private while if == return if == ++ if < = = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = = call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() if == && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() == = else = ++ return ++ int boolean int Bits int boolean long NumericDocValues Bits public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt boolean decl_stmt int decl_stmt NumericDocValues decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return : private private while if == return if == ++ if < = = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = = call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() if == && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() == = else = ++ return ++ public public return || public public throw new public public if ! throw new assert = return : private private while if == return if == ++ if < = = = = = continue if == || = = if == && == = else = ++ return ++ int boolean int Bits int BytesRef BytesRef BinaryDocValues Bits public public final final final final final < final final final < throws new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt org.apache.lucene.util.BytesRef decl_stmt org.apache.lucene.util.BytesRef decl_stmt int decl_stmt BinaryDocValues decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() = else = ++ return ++ int boolean int Bits int BytesRef BytesRef BinaryDocValues Bits public < public < return new < decl_stmt int = - decl_stmt int decl_stmt org.apache.lucene.util.BytesRef decl_stmt org.apache.lucene.util.BytesRef decl_stmt int decl_stmt BinaryDocValues decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() = else = ++ return ++ public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = = = continue if == || = if = = else = ++ return ++ int boolean int Bits int int SortedNumericDocValues long int SortedNumericDocValues int public public final final < throws decl_stmt int final final = decl_stmt SortedNumericDocValues final final = new new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ return ++ new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean decl_stmt int decl_stmt int public public return || public public throw new public public if ! throw new assert = return private private while if == return if < = ++ = return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() assert < decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ continue ++ int boolean int Bits int int SortedNumericDocValues public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ return ++ public public return || public public throw new public public if ! throw new assert = return SortedNumericDocValues private private while if == return if == ++ if < = = = continue if == || = decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ return ++ int boolean int Bits int SortedNumericDocValues long int int public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean decl_stmt int decl_stmt int public public return || public public throw new public public if ! throw new assert = return private private while if == return if < = ++ = return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() assert < decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ continue ++ public public return || public public throw new public public if ! throw new assert = return SortedNumericDocValues private private while if == return if < = ++ = return if == ++ if < = = = continue if == || assert < decl_stmt SortedNumericDocValues = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() = = call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() ++ continue ++ int OrdinalMap BytesRef boolean int int Bits int int Bits int LongValues TermsEnum int decl long LongBitSet int SortedDocValues int int int public public final final < throws decl_stmt int final final = decl_stmt org.apache.lucene.index.SortedDocValues final final = new decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt long = new for = < ++ decl_stmt org.apache.lucene.index.SortedDocValues = decl_stmt org.apache.lucene.util.Bits = decl_stmt int = if == = call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() = call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() else decl_stmt org.apache.lucene.util.LongBitSet = new call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() call SortedDocValues.getValueCount() for = < ++ if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() decl_stmt int = call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() call SortedDocValues.getOrd() if >= call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) = new call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() call org.apache.lucene.index.SortedDocValues.termsEnum() = call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap final final = new < public < public < return new < decl_stmt int public public return < call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() public public if ! throw new decl_stmt int = call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() decl_stmt int = int call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.LongValues decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt int = = == - - : int call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) ++ return ++ int int BytesRef int public < public < return new < decl_stmt int public public return < public public if ! throw new decl_stmt int = decl_stmt int = int decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new public public return < int BytesRef int public public if ! throw new decl_stmt int = decl_stmt int = int decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new int boolean int Bits int LongValues int int public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.LongValues decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt int = = == - - : int call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) ++ return ++ public public return || public public throw new public public if ! throw new assert = return int private private while if == return if == ++ if < = = = = continue if == || = decl_stmt int = = == - - : int ++ return ++ boolean Bits int int long int int long long OrdinalMap int long LongBitSet SortedSetDocValues long int BytesRef Bits int LongValues decl long int public public final final < throws decl_stmt org.apache.lucene.index.SortedSetDocValues final final = new decl_stmt int final final = decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt long = new for = < ++ decl_stmt org.apache.lucene.index.SortedSetDocValues = decl_stmt org.apache.lucene.util.Bits = decl_stmt int = if == = call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() = call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() else decl_stmt org.apache.lucene.util.LongBitSet = new call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() for = < ++ if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) = new call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() = call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap final final = new < public < public < return new < decl_stmt long public public return < call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() call OrdinalMap.getValueCount() public public if ! throw new decl_stmt int = call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() call OrdinalMap.getFirstSegmentNumber() decl_stmt long = call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() call OrdinalMap.getFirstSegmentOrd() decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = while call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != ++ ++ return ++ new < public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.LongValues decl_stmt boolean decl_stmt long = new decl_stmt int decl_stmt int public public return || public public throw new public public if ! throw new assert = return private private while if == return if < = ++ = return if == ++ if < = call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() call OrdinalMap.getGlobalOrds() = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() assert < decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = = decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != if == = + = call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) ++ ++ continue ++ int long BytesRef long public < public < return new < decl_stmt long public public return < public public if ! throw new decl_stmt int = decl_stmt long = decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new public public return < int BytesRef long public public if ! throw new decl_stmt int = decl_stmt long = decl_stmt org.apache.lucene.util.BytesRef final final = ++ return public public throw new int boolean int Bits int int SortedSetDocValues public < public < return new < decl_stmt int = - decl_stmt int decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt boolean public public return || public public throw new public public if ! throw new assert = return private private while if == return if == ++ if < = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = while call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != ++ ++ return ++ public public return || public public throw new public public if ! throw new assert = return SortedSetDocValues private private while if == return if == ++ if < = = = continue if == || = decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = while call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != ++ ++ return ++ int boolean int Bits int int LongValues long long int SortedSetDocValues long public < public < return new < decl_stmt int = - decl_stmt int decl_stmt long decl_stmt int decl_stmt org.apache.lucene.util.Bits decl_stmt org.apache.lucene.util.LongValues decl_stmt boolean decl_stmt long = new decl_stmt int decl_stmt int public public return || public public throw new public public if ! throw new assert = return private private while if == return if < = ++ = return if == ++ if < = = = = continue if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() assert < decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = = decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != if == = + = call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) call org.apache.lucene.util.LongValues.get(long) ++ ++ continue ++ public public return || public public throw new public public if ! throw new assert = return SortedSetDocValues long private private while if == return if < = ++ = return if == ++ if < = = = = continue if == || assert < decl_stmt org.apache.lucene.index.SortedSetDocValues = call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() = = decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != if == = + = ++ ++ continue ++ protected protected throws if return else return public static public static < for : if > return return int decl Iterator decl Iterator public static < public static < final final final < final final final < final final assert return new < public < public < decl_stmt java.util.Iterator final final final < = decl_stmt java.util.Iterator final final final < = return new < public public return call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() public public decl_stmt int = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if == return else return call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() public public throw new int decl Iterator decl Iterator public < public < decl_stmt java.util.Iterator final final final < = decl_stmt java.util.Iterator final final final < = return new < public public return call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() public public decl_stmt int = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if == return else return call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() public public throw new public public return int public public decl_stmt int = if == return else return public public throw new