org.apache.solr.cloud java.io.IOException import java.lang.invoke.MethodHandles import java.util.Collections import java.util.HashSet import java.util.Set import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.cloud.IpTables boolean Logger decl Set public static public static throws if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() + + + + public static public static throws if && call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() decl Integer public static public static throws if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.lang.Integer final final final = call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() for : int private static private static throws decl_stmt int final final = new if != throw new +