org.apache.lucene.spatial3d java.util.List import java.util.ArrayList import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.index.PointValues import org.apache.lucene.geo.Polygon import org.apache.lucene.geo.GeoUtils import org.apache.lucene.spatial3d.geom.GeoPoint import org.apache.lucene.spatial3d.geom.GeoShape import org.apache.lucene.spatial3d.geom.PlanetModel import org.apache.lucene.spatial3d.geom.GeoCircleFactory import org.apache.lucene.spatial3d.geom.GeoBBoxFactory import org.apache.lucene.spatial3d.geom.GeoPolygonFactory import org.apache.lucene.spatial3d.geom.GeoPathFactory import org.apache.lucene.spatial3d.geom.GeoCompositePolygon import org.apache.lucene.spatial3d.geom.GeoPolygon import org.apache.lucene.search.Query import org.apache.lucene.util.BytesRef import org.apache.lucene.util.NumericUtils import class org.apache.lucene.spatial3d.Geo3DPoint super super extends double FieldType double private static private static final final return * private static private static final final return * GeoShape public static public static final final final final final final final final decl_stmt org.apache.lucene.spatial3d.geom.GeoShape final final = return GeoShape public static public static final final final final final final final final final final decl_stmt org.apache.lucene.spatial3d.geom.GeoShape final final = return GeoShape GeoCompositePolygon public static public static final final final final if < throw new decl_stmt org.apache.lucene.spatial3d.geom.GeoShape final final if == = else decl_stmt GeoCompositePolygon final final = new for final final : call GeoCompositePolygon.addShape() call GeoCompositePolygon.addShape() call GeoCompositePolygon.addShape() call GeoCompositePolygon.addShape() call GeoCompositePolygon.addShape() = return double GeoShape decl GeoPoint double public static public static final final final final final final final final final final if != throw new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final final = new for = < ++ decl_stmt double final final = decl_stmt double final final = = new decl_stmt org.apache.lucene.spatial3d.geom.GeoShape final final = return int decl Polygon decl double decl List decl List decl double protected static protected static final final final final decl_stmt org.apache.lucene.geo.Polygon final final final = decl_stmt java.util.List final final final < = new <> for final final : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() ! decl_stmt double final final final = decl_stmt double final final final = decl_stmt java.util.List final final final < = new <> - for = < - ++ if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else decl_stmt int final final = - - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return decl byte private private decl_stmt byte = new * = new public static public static public static public static return public static public static return new BytesRef StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt org.apache.lucene.util.BytesRef = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + * call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()