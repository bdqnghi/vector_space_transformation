org.apache.lucene.index java.io.Reader import java.io.StringReader import java.util.Collections import java.util.Iterator import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.StoredField import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.TestIndexableField super super extends public public return & == || == public public return public public return != && == && != public public return && != public public return && != public public return && != public public return public public return == : public public return public public return public public return public public return + public public return + decl byte public public if == decl_stmt byte final final final = new for = < ++ = + return new else return int public public decl_stmt int final final = if != && != return + else return public public if == return new + else return public public return public public return public public return != : new Fields TopDocs int int int PostingsEnum boolean decl Builder boolean boolean decl int int boolean int TermsEnum decl BooleanQuery String Terms decl Iterable TopDocs BytesRef int String IndexableField Document int IndexSearcher IndexReader RandomIndexWriter int int int Directory public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt int final final = if + + decl_stmt int final final final = new decl_stmt int = for = < ++ decl_stmt int final final = = - decl_stmt int final final = if + + + decl_stmt int final final = += - decl_stmt java.lang.Iterable < = new < public < public < return new < decl_stmt int public public return < public public assert < if == = return + else return new + ++ - public public throw new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt int = for = < ++ if + + + + + decl_stmt org.apache.lucene.search.TopDocs final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new + decl_stmt int final final = decl_stmt org.apache.lucene.document.Document final final = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) decl_stmt int final final = + while < decl_stmt java.lang.String final final = + decl_stmt int final final = decl_stmt boolean final final = & == || == decl_stmt boolean final final = == decl_stmt boolean final final = != decl_stmt java.lang.String final final if != && != = + else = if decl_stmt org.apache.lucene.index.IndexableField = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() + + + if + + + decl_stmt org.apache.lucene.util.BytesRef final final = call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() for = < ++ + + else assert != call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() if decl_stmt boolean final final = == && != if decl_stmt org.apache.lucene.index.Terms final final = call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() new + call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() decl_stmt org.apache.lucene.index.PostingsEnum = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() else decl_stmt Fields = call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() call IndexReader.getTermVectors() == || call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() == decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new + call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.TopDocs final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new + call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new + decl_stmt org.apache.lucene.search.TopDocs final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() ++ call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int public < public < return new < decl_stmt int public public return < public public assert < if == = return + else return new + ++ - public public throw new public public return < public public assert < if == = return + else return new + ++ - public public throw new public public return public public return public public return public public return public public return public public return public public return FieldType public public decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() return RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new try call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) > new catch call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()