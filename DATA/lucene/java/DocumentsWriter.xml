org.apache.lucene.index java.io.Closeable import java.io.IOException import java.util.Collection import java.util.Locale import java.util.Queue import java.util.concurrent.ConcurrentLinkedQueue import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.analysis.Analyzer import org.apache.lucene.index.DocumentsWriterFlushQueue.SegmentFlushTicket import org.apache.lucene.index.DocumentsWriterPerThread.FlushedSegment import org.apache.lucene.index.DocumentsWriterPerThreadPool.ThreadState import org.apache.lucene.index.IndexWriter.Event import org.apache.lucene.search.Query import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.util.Accountable import org.apache.lucene.util.InfoStream import class org.apache.lucene.index.DocumentsWriter super super implements AtomicInteger DocumentsWriterPerThreadPool boolean boolean DocumentsWriterDeleteQueue IndexWriter DocumentsWriterFlushQueue FlushPolicy DocumentsWriterDeleteQueue InfoStream Directory Directory LiveIndexWriterConfig decl Queue DocumentsWriterFlushControl DocumentsWriterDeleteQueue synchronized synchronized final final throws decl_stmt org.apache.lucene.index.DocumentsWriterDeleteQueue final final = call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() return DocumentsWriterDeleteQueue synchronized synchronized final final throws decl_stmt org.apache.lucene.index.DocumentsWriterDeleteQueue final final = call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDelete(Term) call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() return DocumentsWriterDeleteQueue synchronized synchronized throws decl_stmt org.apache.lucene.index.DocumentsWriterDeleteQueue final final = call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDocValuesUpdates(DocValuesUpdate) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDocValuesUpdates(DocValuesUpdate) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDocValuesUpdates(DocValuesUpdate) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDocValuesUpdates(DocValuesUpdate) call org.apache.lucene.index.DocumentsWriterDeleteQueue.addDocValuesUpdates(DocValuesUpdate) call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() call org.apache.lucene.index.DocumentsWriterFlushControl.doOnDelete() return return private private throws if call org.apache.lucene.index.DocumentsWriterFlushControl.getAndResetApplyAllDeletes() call org.apache.lucene.index.DocumentsWriterFlushControl.getAndResetApplyAllDeletes() call org.apache.lucene.index.DocumentsWriterFlushControl.getAndResetApplyAllDeletes() call org.apache.lucene.index.DocumentsWriterFlushControl.getAndResetApplyAllDeletes() call org.apache.lucene.index.DocumentsWriterFlushControl.getAndResetApplyAllDeletes() if != && ! call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) return return throws if return call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) else return call org.apache.lucene.index.DocumentsWriterFlushQueue.tryPurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.tryPurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.tryPurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.tryPurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.tryPurge(IndexWriter) return call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() private private throws if throw new ThreadState int boolean synchronized synchronized assert ! : decl_stmt boolean = try call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() decl_stmt int final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() for = < ++ decl_stmt ThreadState final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() try finally call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() = finally if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + ThreadState int long boolean synchronized synchronized assert if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() decl_stmt long = decl_stmt boolean = try call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() decl_stmt int final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.setAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.setAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.setAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.setAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.setAbort() for = < ++ decl_stmt ThreadState final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() call ThreadState.lock() += call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterDeleteQueue.clear() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortPendingFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() = return finally if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + if == int private private final final assert if try decl_stmt int = return finally call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() else call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() return ThreadState int synchronized synchronized assert if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() decl_stmt int final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getMaxThreadStates() call org.apache.lucene.index.DocumentsWriterPerThreadPool.clearAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.clearAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.clearAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.clearAbort() call org.apache.lucene.index.DocumentsWriterPerThreadPool.clearAbort() for = < ++ try decl_stmt ThreadState final final = call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) call org.apache.lucene.index.DocumentsWriterPerThreadPool.getThreadState(int) if call ThreadState.isHeldByCurrentThread() call ThreadState.isHeldByCurrentThread() call ThreadState.isHeldByCurrentThread() call ThreadState.isHeldByCurrentThread() call ThreadState.isHeldByCurrentThread() call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() call ThreadState.unlock() catch if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + + + boolean decl_stmt boolean = call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() != || || call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() || if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) && call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() + + + + call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() + + return public public return call org.apache.lucene.index.DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize() call org.apache.lucene.index.DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize() call org.apache.lucene.index.DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize() call org.apache.lucene.index.DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize() call org.apache.lucene.index.DocumentsWriterDeleteQueue.getBufferedUpdatesTermsSize() public public return call org.apache.lucene.index.DocumentsWriterDeleteQueue.numGlobalTermDeletes() call org.apache.lucene.index.DocumentsWriterDeleteQueue.numGlobalTermDeletes() call org.apache.lucene.index.DocumentsWriterDeleteQueue.numGlobalTermDeletes() call org.apache.lucene.index.DocumentsWriterDeleteQueue.numGlobalTermDeletes() call org.apache.lucene.index.DocumentsWriterDeleteQueue.numGlobalTermDeletes() public public return call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() public public = call org.apache.lucene.index.DocumentsWriterFlushControl.setClosed() call org.apache.lucene.index.DocumentsWriterFlushControl.setClosed() call org.apache.lucene.index.DocumentsWriterFlushControl.setClosed() call org.apache.lucene.index.DocumentsWriterFlushControl.setClosed() call org.apache.lucene.index.DocumentsWriterFlushControl.setClosed() boolean DocumentsWriterPerThread private private throws decl_stmt boolean = if call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() || call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() > if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() do decl_stmt org.apache.lucene.index.DocumentsWriterPerThread while = call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() != |= if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) && call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterFlushControl.anyStalledThreads() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterFlushControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.numQueuedFlushes() != if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() return DocumentsWriterPerThread private private throws |= if != |= else decl_stmt org.apache.lucene.index.DocumentsWriterPerThread final final = call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() if != |= return decl FieldInfos private private throws if == decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new = new call org.apache.lucene.index.IndexWriter.newSegmentName() call org.apache.lucene.index.IndexWriter.newSegmentName() call org.apache.lucene.index.IndexWriter.newSegmentName() call org.apache.lucene.index.IndexWriter.newSegmentName() call org.apache.lucene.index.IndexWriter.newSegmentName() boolean int DocumentsWriterPerThread ThreadState boolean DocumentsWriterPerThread final final final < extends extends extends < extends extends final final final final throws decl_stmt boolean = decl_stmt ThreadState final final = call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() decl_stmt org.apache.lucene.index.DocumentsWriterPerThread final final try assert call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() decl_stmt org.apache.lucene.index.DocumentsWriterPerThread final final = decl_stmt int final final = call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() try call org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(Iterable,Analyzer,Term) catch call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() throw finally call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() - decl_stmt boolean final final = != = call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) finally call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) return boolean int DocumentsWriterPerThread ThreadState boolean DocumentsWriterPerThread final final final < extends extends final final final final throws decl_stmt boolean = decl_stmt ThreadState final final = call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() call org.apache.lucene.index.DocumentsWriterFlushControl.obtainAndLock() decl_stmt org.apache.lucene.index.DocumentsWriterPerThread final final try assert call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() call ThreadState.isInitialized() decl_stmt org.apache.lucene.index.DocumentsWriterPerThread final final = decl_stmt int final final = call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() try call org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(Iterable,Analyzer,Term) call org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(Iterable,Analyzer,Term) catch call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call DocumentsWriterFlushControl.doOnAbort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() call org.apache.lucene.index.DocumentsWriterPerThread.abort() throw finally call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() - decl_stmt boolean final final = != = call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterDocument(ThreadState,boolean) finally call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) call org.apache.lucene.index.DocumentsWriterPerThreadPool.release(ThreadState) return int boolean FlushedSegment boolean boolean SegmentFlushTicket double private private throws decl_stmt boolean = while != = decl_stmt boolean = decl_stmt SegmentFlushTicket = try assert == || == : + + + + + call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.isFullFlush() try = call org.apache.lucene.index.DocumentsWriterFlushQueue.addFlushTicket(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushQueue.addFlushTicket(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushQueue.addFlushTicket(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushQueue.addFlushTicket(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushQueue.addFlushTicket(DocumentsWriterPerThread) decl_stmt int final final = decl_stmt boolean = try decl_stmt FlushedSegment final final = call DocumentsWriterFlushQueue.addSegment() call DocumentsWriterFlushQueue.addSegment() call DocumentsWriterFlushQueue.addSegment() call DocumentsWriterFlushQueue.addSegment() call DocumentsWriterFlushQueue.addSegment() = finally if ! new = if ! new = = finally if ! && != call org.apache.lucene.index.DocumentsWriterFlushQueue.markTicketFailed(SegmentFlushTicket) call org.apache.lucene.index.DocumentsWriterFlushQueue.markTicketFailed(SegmentFlushTicket) call org.apache.lucene.index.DocumentsWriterFlushQueue.markTicketFailed(SegmentFlushTicket) call org.apache.lucene.index.DocumentsWriterFlushQueue.markTicketFailed(SegmentFlushTicket) call org.apache.lucene.index.DocumentsWriterFlushQueue.markTicketFailed(SegmentFlushTicket) if call org.apache.lucene.index.DocumentsWriterFlushQueue.getTicketCount() call org.apache.lucene.index.DocumentsWriterFlushQueue.getTicketCount() call org.apache.lucene.index.DocumentsWriterFlushQueue.getTicketCount() call org.apache.lucene.index.DocumentsWriterFlushQueue.getTicketCount() call org.apache.lucene.index.DocumentsWriterFlushQueue.getTicketCount() >= call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() call org.apache.lucene.index.DocumentsWriterPerThreadPool.getActiveThreadStateCount() break finally call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterFlush(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterFlush(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterFlush(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterFlush(DocumentsWriterPerThread) call org.apache.lucene.index.DocumentsWriterFlushControl.doAfterFlush(DocumentsWriterPerThread) = call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() if decl_stmt double final final = call org.apache.lucene.index.LiveIndexWriterConfig.getRAMBufferSizeMB() call org.apache.lucene.index.LiveIndexWriterConfig.getRAMBufferSizeMB() call org.apache.lucene.index.LiveIndexWriterConfig.getRAMBufferSizeMB() call org.apache.lucene.index.LiveIndexWriterConfig.getRAMBufferSizeMB() call org.apache.lucene.index.LiveIndexWriterConfig.getRAMBufferSizeMB() if != && call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() > * * / = if ! if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.getDeleteBytesUsed() / * return int decl_stmt int = call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() while ! call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) call java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int) - = call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() assert call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() >= private synchronized private synchronized = return boolean DocumentsWriterDeleteQueue DocumentsWriterPerThread throws decl_stmt org.apache.lucene.index.DocumentsWriterDeleteQueue final final if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() synchronized = = call org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.markForFullFlush() assert assert != assert != decl_stmt boolean = try decl_stmt org.apache.lucene.index.DocumentsWriterPerThread while = call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.nextPendingFlush() != |= call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.waitForFlush() if ! && call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.addDeletes(DocumentsWriterDeleteQueue) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) call org.apache.lucene.index.DocumentsWriterFlushQueue.forcePurge(IndexWriter) assert ! call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() call org.apache.lucene.index.DocumentsWriterDeleteQueue.anyChanges() && ! call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() call org.apache.lucene.index.DocumentsWriterFlushQueue.hasTickets() finally assert == return assert try if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + + assert if call org.apache.lucene.index.DocumentsWriterFlushControl.finishFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.finishFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.finishFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.finishFullFlush() call org.apache.lucene.index.DocumentsWriterFlushControl.finishFullFlush() else call org.apache.lucene.index.DocumentsWriterFlushControl.abortFullFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortFullFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortFullFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortFullFlushes() call org.apache.lucene.index.DocumentsWriterFlushControl.abortFullFlushes() finally = public public return private private call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() public public return call org.apache.lucene.index.DocumentsWriterFlushControl.ramBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.ramBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.ramBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.ramBytesUsed() call org.apache.lucene.index.DocumentsWriterFlushControl.ramBytesUsed() public public throws call org.apache.lucene.index.IndexWriter.applyDeletesAndPurge(boolean) call org.apache.lucene.index.IndexWriter.applyDeletesAndPurge(boolean) call org.apache.lucene.index.IndexWriter.applyDeletesAndPurge(boolean) call org.apache.lucene.index.IndexWriter.applyDeletesAndPurge(boolean) call org.apache.lucene.index.IndexWriter.applyDeletesAndPurge(boolean) public public throws call org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(boolean,boolean) call org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(boolean,boolean) call org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(boolean,boolean) call org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(boolean,boolean) call org.apache.lucene.index.IndexWriter.doAfterSegmentFlushed(boolean,boolean) public public throws call org.apache.lucene.index.IndexWriter.purge(boolean) call org.apache.lucene.index.IndexWriter.purge(boolean) call org.apache.lucene.index.IndexWriter.purge(boolean) call org.apache.lucene.index.IndexWriter.purge(boolean) call org.apache.lucene.index.IndexWriter.purge(boolean) public public throws call org.apache.lucene.index.IndexWriter.flushFailed(SegmentInfo) call org.apache.lucene.index.IndexWriter.flushFailed(SegmentInfo) call org.apache.lucene.index.IndexWriter.flushFailed(SegmentInfo) call org.apache.lucene.index.IndexWriter.flushFailed(SegmentInfo) call org.apache.lucene.index.IndexWriter.flushFailed(SegmentInfo) public public throws call org.apache.lucene.index.IndexWriter.deleteNewFiles(Collection) call org.apache.lucene.index.IndexWriter.deleteNewFiles(Collection) call org.apache.lucene.index.IndexWriter.deleteNewFiles(Collection) call org.apache.lucene.index.IndexWriter.deleteNewFiles(Collection) call org.apache.lucene.index.IndexWriter.deleteNewFiles(Collection) public < public < return