org.apache.lucene.util java.util.Arrays import java.util.Comparator import class org.apache.lucene.util.BytesRefArray super super implements Counter int int ByteBlockPool decl int public public = = call org.apache.lucene.util.ByteBlockPool.reset() call org.apache.lucene.util.ByteBlockPool.reset() call org.apache.lucene.util.ByteBlockPool.reset() call org.apache.lucene.util.ByteBlockPool.reset() call org.apache.lucene.util.ByteBlockPool.reset() int public public if >= decl_stmt int = = + call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) - * call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) ++ = += return - public public return int int public public if > decl_stmt int = decl_stmt int = == - - : + - call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) return throw new + + + int int private private if < decl_stmt int = decl_stmt int if == - = - else = + - call org.apache.lucene.util.ByteBlockPool.setBytesRef(BytesRef,int) call org.apache.lucene.util.ByteBlockPool.setBytesRef(BytesRef,int) call org.apache.lucene.util.ByteBlockPool.setBytesRef(BytesRef,int) call org.apache.lucene.util.ByteBlockPool.setBytesRef(BytesRef,int) call org.apache.lucene.util.ByteBlockPool.setBytesRef(BytesRef,int) else throw new + + + BytesRef BytesRef BytesRefBuilder BytesRefBuilder int BytesRefBuilder BytesRef int int decl int private private final final final < decl_stmt int final final final = new for = < ++ = new protected protected decl_stmt int final final = = = protected protected decl_stmt int final final = = return protected protected decl_stmt int final final = protected protected decl_stmt int final final = return decl_stmt org.apache.lucene.util.BytesRef private final final = new decl_stmt org.apache.lucene.util.BytesRef private final final = new decl_stmt org.apache.lucene.util.BytesRef private final final = new decl_stmt org.apache.lucene.util.BytesRefBuilder private final final = new decl_stmt org.apache.lucene.util.BytesRefBuilder private final final = new decl_stmt org.apache.lucene.util.BytesRefBuilder private final final = new return int protected protected decl_stmt int final final = = = int protected protected decl_stmt int final final = = return int protected protected decl_stmt int final final = int protected protected decl_stmt int final final = return public public return decl int int BytesRefBuilder BytesRef int public public final final final < decl_stmt org.apache.lucene.util.BytesRefBuilder final final = new decl_stmt org.apache.lucene.util.BytesRef final final = new decl_stmt int final final = decl_stmt int final final final = == : return new decl_stmt int = public public if < == ++ : ++ return return public public if < == ++ : ++ return return