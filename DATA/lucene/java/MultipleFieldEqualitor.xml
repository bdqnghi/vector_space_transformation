org.apache.solr.client.solrj.io.eq java.io.IOException import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.comp.MultipleFieldComparator import org.apache.solr.client.solrj.io.comp.StreamComparator import org.apache.solr.client.solrj.io.stream.expr.Expressible import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import class org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor super super implements decl StreamEqualitor long public public return StringBuilder public public throws decl_stmt java.lang.StringBuilder = new for < : if instanceof if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else throw new return new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() MultipleFieldEqualitor public public if == return if instanceof decl_stmt org.apache.solr.client.solrj.io.eq.MultipleFieldEqualitor = if >= for = < ++ if ! return return return MultipleFieldComparator public public if == return if instanceof decl_stmt org.apache.solr.client.solrj.io.comp.MultipleFieldComparator = if call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() >= for = < ++ if ! call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() return return return public public for < : if ! return return