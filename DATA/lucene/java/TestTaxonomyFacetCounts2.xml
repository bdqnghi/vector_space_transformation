org.apache.lucene.facet.taxonomy java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.Random import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field.Store import org.apache.lucene.document.StringField import org.apache.lucene.facet.FacetField import org.apache.lucene.facet.FacetResult import org.apache.lucene.facet.FacetTestCase import org.apache.lucene.facet.Facets import org.apache.lucene.facet.FacetsCollector import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.LabelAndValue import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.NoMergePolicy import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.TermQuery import org.apache.lucene.store.Directory import org.apache.lucene.util.IOUtils import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class org.apache.lucene.facet.taxonomy.TestTaxonomyFacetCounts2 super super extends Term Directory decl Map decl FacetField String String int int decl FacetField public static public static throws = = decl ArrayList decl ArrayList int decl ArrayList int private static < private static < decl_stmt int = + decl_stmt int = + decl_stmt java.util.ArrayList < = new <> call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() decl_stmt java.util.ArrayList < = new <> call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() decl_stmt java.util.ArrayList < = new <> call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.addAll() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.subList() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return private static private static new call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() String decl List private static private static throws decl_stmt java.util.List < = for : decl_stmt java.lang.String = + + + if + + + + if + + + FacetsConfig private static private static decl_stmt org.apache.lucene.facet.FacetsConfig = new call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setRequireDimCount(String,boolean) call org.apache.lucene.facet.FacetsConfig.setRequireDimCount(String,boolean) call org.apache.lucene.facet.FacetsConfig.setRequireDimCount(String,boolean) call org.apache.lucene.facet.FacetsConfig.setRequireDimCount(String,boolean) call org.apache.lucene.facet.FacetsConfig.setRequireDimCount(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) return Document int private static private static throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.document.Document = new Document int Random FacetsConfig private static private static < throws decl_stmt java.util.Random = decl_stmt int = decl_stmt org.apache.lucene.facet.FacetsConfig = for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) Document int Random FacetsConfig private static private static < throws decl_stmt java.util.Random = decl_stmt int = decl_stmt org.apache.lucene.facet.FacetsConfig = for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) Document int Random FacetsConfig boolean private static private static < throws decl_stmt java.util.Random = decl_stmt int = decl_stmt org.apache.lucene.facet.FacetsConfig = for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt boolean = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() if call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) decl Map private static < private static < decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + return TaxonomyWriter IndexWriter IndexWriterConfig public static public static throws = = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.facet.taxonomy.TaxonomyWriter = new = = call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() IndexSearcher DirectoryReader Facets TermQuery FacetResult TaxonomyReader FacetsCollector public public throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.facet.taxonomy.TaxonomyReader = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.facet.FacetsCollector = new decl_stmt org.apache.lucene.search.TermQuery = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt Facets = decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() - call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() for : + + = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() for : + + IndexSearcher DirectoryReader Facets FacetResult TaxonomyReader FacetsCollector int public public throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.facet.taxonomy.TaxonomyReader = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.facet.FacetsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt Facets = decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() - call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() decl_stmt int = for : + + + + + <= = = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() = for : + + + + + <= = IndexSearcher DirectoryReader Facets FacetResult TaxonomyReader FacetsCollector public public throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.facet.taxonomy.TaxonomyReader = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.facet.FacetsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt Facets = decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() - call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() call FacetResult.value() for : + + = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() for : + + IndexSearcher DirectoryReader Facets FacetResult TaxonomyReader FacetsCollector public public throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.facet.taxonomy.TaxonomyReader = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.facet.FacetsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt Facets = decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() for : + + = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() for : + +