org.apache.lucene.util.automaton java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashSet import java.util.Iterator import java.util.List import java.util.Set import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IntsRef import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.UnicodeUtil import org.apache.lucene.util.automaton.AutomatonTestUtil.RandomAcceptedStrings import org.apache.lucene.util.fst.Util import static static org.apache.lucene.util.automaton.Operations.DEFAULT_MAX_DETERMINIZED_STATES import class org.apache.lucene.util.automaton.TestAutomaton super super extends Automaton int int int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton int int Transition public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) decl_stmt org.apache.lucene.util.automaton.Transition = new call org.apache.lucene.util.automaton.Automaton.initTransition(int,Transition) call org.apache.lucene.util.automaton.Automaton.initTransition(int,Transition) call org.apache.lucene.util.automaton.Automaton.initTransition(int,Transition) call org.apache.lucene.util.automaton.Automaton.initTransition(int,Transition) call org.apache.lucene.util.automaton.Automaton.initTransition(int,Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) call org.apache.lucene.util.automaton.Automaton.getNextTransition(Transition) Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() int Automaton Automaton Automaton public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton int decl int Automaton Automaton int RandomAcceptedStrings public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.automaton.Automaton = if = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = if continue decl_stmt RandomAcceptedStrings = new for = < ++ decl_stmt int = call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() for = < / ++ decl_stmt int = = - - - - = new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) Automaton int int decl Automaton int decl Builder Transition decl List public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt java.util.List < = new <> decl_stmt int = call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() for = < ++ decl_stmt int = call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) call org.apache.lucene.util.automaton.Automaton.getNumTransitions(int) for = < ++ decl_stmt org.apache.lucene.util.automaton.Transition = new call org.apache.lucene.util.automaton.Automaton.getTransition(int,int,Transition) call org.apache.lucene.util.automaton.Automaton.getTransition(int,int,Transition) call org.apache.lucene.util.automaton.Automaton.getTransition(int,int,Transition) call org.apache.lucene.util.automaton.Automaton.getTransition(int,int,Transition) call org.apache.lucene.util.automaton.Automaton.getTransition(int,int,Transition) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ decl_stmt int = call decl Automaton.createState() call decl Automaton.createState() call decl Automaton.createState() call decl Automaton.createState() call decl Automaton.createState() call decl Automaton.setAccept() call decl Automaton.setAccept() call decl Automaton.setAccept() call decl Automaton.setAccept() call decl Automaton.setAccept() call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) call org.apache.lucene.util.automaton.Automaton.isAccept(int) for : call decl Automaton.addTransition() call decl Automaton.addTransition() call decl Automaton.addTransition() call decl Automaton.addTransition() call decl Automaton.addTransition() call decl Automaton.finish() call decl Automaton.finish() call decl Automaton.finish() call decl Automaton.finish() call decl Automaton.finish() Automaton int int public public throws new decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) Automaton int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() = call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() Automaton Automaton Automaton Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = if = else if = decl_stmt org.apache.lucene.util.automaton.Automaton = = = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = = int Automaton int StringBuilder int int int String String String StringBuilder String boolean int String public public throws decl_stmt int = for = < ++ decl_stmt int = decl_stmt int = + decl_stmt int if = else decl_stmt java.lang.String = = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() * call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt org.apache.lucene.util.automaton.Automaton = if = decl_stmt java.lang.String = decl_stmt java.lang.String = if > = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + for = < ++ decl_stmt int = * decl_stmt boolean = >= && <= decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < = call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + else if == decl_stmt int = decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl Set IntsRefBuilder private private decl_stmt java.util.Set < = new <> for : decl_stmt org.apache.lucene.util.IntsRefBuilder = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() Automaton Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() decl_stmt org.apache.lucene.util.automaton.Automaton = call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() = call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton int int Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) decl_stmt org.apache.lucene.util.automaton.Automaton = call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new < = new < Automaton int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton int int public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton int Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() private private switch case if return case if < if return else if + + return case if return case if = = return case if return case if return case if return assert return Automaton decl List decl List private private < decl_stmt org.apache.lucene.util.automaton.Automaton if if decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = else if decl_stmt java.util.List < = new <> = return private private return BytesRef decl Iterator decl List BytesRefBuilder decl int decl Set int RandomAcceptedStrings int decl Set int int int int decl Set boolean decl Set int int int Automaton decl Set boolean Automaton BytesRef StringBuilder int Automaton String String public public throws decl_stmt int = decl_stmt int = if + + + decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new decl_stmt org.apache.lucene.util.automaton.Automaton = for = < ++ if + + + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + + call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() switch case if decl_stmt java.util.Set < = new <> decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRefBuilder = new for : call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() = decl_stmt boolean = call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() = call String.utf8ToString() call String.utf8ToString() call String.utf8ToString() call String.utf8ToString() call String.utf8ToString() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() break case decl_stmt org.apache.lucene.util.BytesRef = new if + decl_stmt java.util.Set < = new <> decl_stmt org.apache.lucene.util.BytesRefBuilder = new for : call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() = = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() break case if = call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() break case if call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() < if = else if + call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() + break case if decl_stmt java.util.Set < = new <> decl_stmt int = while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() decl_stmt org.apache.lucene.util.automaton.Automaton = = break case if = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new break case if if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt RandomAcceptedStrings = new decl_stmt java.util.Set < = new <> decl_stmt int = call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + / while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < decl_stmt int = call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() call RandomAcceptedStrings.getRandomAcceptedString() decl_stmt org.apache.lucene.util.BytesRef = new if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : decl_stmt boolean = call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() decl_stmt org.apache.lucene.util.automaton.Automaton = = break case decl_stmt java.util.List < = new <> decl_stmt int = decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < decl_stmt int = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if + for : decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Iterator < = call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.util.BytesRef = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if > && & == call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() decl_stmt org.apache.lucene.util.automaton.Automaton = = break case decl_stmt int = if + decl_stmt java.util.List < = new <> decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < decl_stmt int = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if + for : decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.apache.lucene.util.automaton.Automaton = if = else if = = decl_stmt java.util.Iterator < = call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.util.BytesRef = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if == || call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() & == if + call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() else if + break case if = decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new new call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() = break case if = break case decl_stmt int = decl_stmt int = + decl_stmt int = if + + + + + = decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() for = <= ++ decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new break case if = call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() new break case if = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new break case if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() <= * if decl_stmt int = : decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new if for : + decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt java.util.Set < = new <> if if = decl_stmt org.apache.lucene.util.BytesRefBuilder = new for : for : call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() else if = decl_stmt org.apache.lucene.util.BytesRefBuilder = new for : for : call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() call org.apache.lucene.util.BytesRefBuilder.toBytesRef() = break default: throw new call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() call org.apache.lucene.util.automaton.Automaton.isDeterministic() if == = int decl int int Transition Automaton decl int private private decl_stmt int = <= decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = new - decl_stmt org.apache.lucene.util.automaton.Transition = new for : decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) - = for : decl_stmt int = for = < ++ assert > call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() return decl Set Automaton IntsRefBuilder decl Set Automaton Automaton decl Set IntsRefBuilder private private < try decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.IntsRefBuilder = new for : + decl_stmt java.util.Set < = new <> for : decl_stmt org.apache.lucene.util.IntsRefBuilder = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() decl_stmt java.util.Set < = if call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() == for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == + + for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == + + throw new decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt java.util.Set < = new <> for : decl_stmt org.apache.lucene.util.IntsRefBuilder = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() catch + + for : + throw IntsRefBuilder private private decl_stmt org.apache.lucene.util.IntsRefBuilder = new return call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() Automaton Automaton private private if + + + + + + + decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.Automaton = if call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() != call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() < call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() + call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() + call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() + + + + + + if call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() return Automaton decl byte public public throws decl_stmt byte = new decl_stmt org.apache.lucene.util.automaton.Automaton = new new new new new new = new new new new new new = new new new new new new = new new new new new new = new new new new new new Automaton BytesRefBuilder int int boolean boolean BytesRef BytesRef BytesRef int boolean public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) decl_stmt int = for = < ++ call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) byte decl_stmt org.apache.lucene.util.BytesRef = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() = new call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) = for = < ++ call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) byte decl_stmt org.apache.lucene.util.BytesRef = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt boolean = decl_stmt boolean = decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt int = - + if == -- if == -- if <= continue else = new call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) if == call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) byte while call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() < call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) byte decl_stmt boolean if call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() == = else = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() Automaton BytesRef BytesRef int IntsRefBuilder boolean boolean BytesRef int int boolean public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = decl_stmt boolean = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt boolean = decl_stmt org.apache.lucene.util.automaton.Automaton = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = decl_stmt int = call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() decl_stmt int = call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() decl_stmt boolean if > || < = else if == && == = && else if == = else if == = else = if + + + decl_stmt org.apache.lucene.util.IntsRefBuilder = new call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() IntsRefBuilder private static private static decl_stmt org.apache.lucene.util.IntsRefBuilder = new new return call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new IntsRefBuilder private static private static decl_stmt org.apache.lucene.util.IntsRefBuilder = new for = = < += = call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) return call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() int Automaton String public public decl_stmt int = for = < ++ decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.automaton.Automaton = Automaton int public public decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() new Automaton public public decl_stmt org.apache.lucene.util.automaton.Automaton = new call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() Automaton int int int public public decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState()