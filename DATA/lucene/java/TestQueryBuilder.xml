org.apache.lucene.util java.io.IOException import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.MultiPhraseQuery import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.Query import org.apache.lucene.search.SynonymQuery import org.apache.lucene.search.TermQuery import org.apache.lucene.util.automaton.CharacterRunAutomaton import org.apache.lucene.util.automaton.RegExp import class org.apache.lucene.util.TestQueryBuilder super super extends TermQuery QueryBuilder public public decl_stmt org.apache.lucene.search.TermQuery = new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) decl BooleanQuery decl Builder public public decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() decl BooleanQuery decl Builder public public decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() QueryBuilder public public decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) QueryBuilder public public decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createMinShouldMatchQuery(String,String,float) decl Builder Query decl BooleanQuery public public decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() call Query.createMinShouldMatchQuery() decl Builder PhraseQuery Analyzer CharacterRunAutomaton decl PhraseQuery public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new decl_stmt org.apache.lucene.search.PhraseQuery = call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new call Analyzer.createPhraseQuery() call Analyzer.createPhraseQuery() call Analyzer.createPhraseQuery() call Analyzer.createPhraseQuery() call Analyzer.createPhraseQuery() QueryBuilder public public decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) MockTokenizer protected protected decl_stmt org.apache.lucene.analysis.MockTokenizer = new return new new public final public final throws if = return if = return else return SynonymQuery QueryBuilder public public throws decl_stmt org.apache.lucene.search.SynonymQuery = new new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) decl MultiPhraseQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() new call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() new new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() int public final public final throws decl_stmt int = if < return char return public public return new new decl BooleanQuery decl Builder SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() call decl Builder.createBooleanQuery() PhraseQuery QueryBuilder SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) PhraseQuery QueryBuilder SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) public final public final throws if = return if = return else return Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new SynonymQuery QueryBuilder public public throws decl_stmt org.apache.lucene.search.SynonymQuery = new new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createPhraseQuery(String,String) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) decl BooleanQuery SynonymQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() decl BooleanQuery SynonymQuery SynonymQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() decl BooleanQuery SynonymQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() decl BooleanQuery SynonymQuery SynonymQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.SynonymQuery = new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() call SynonymQuery.createBooleanQuery() decl MultiPhraseQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() new call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() new new new decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new new call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl MultiPhraseQuery.setSlop() call decl MultiPhraseQuery.setSlop() call decl MultiPhraseQuery.setSlop() call decl MultiPhraseQuery.setSlop() call decl MultiPhraseQuery.setSlop() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() call decl Builder.createPhraseQuery() boolean QueryBuilder Analyzer public public decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected return new new decl_stmt boolean = public public throws = public public throws return decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder = new call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) call org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder.createBooleanQuery(String,String,BooleanClause,Occur) boolean protected protected return new new decl_stmt boolean = public public throws = public public throws return public public throws = public public throws return