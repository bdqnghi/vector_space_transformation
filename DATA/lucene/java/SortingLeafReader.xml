org.apache.lucene.index java.io.IOException import java.util.Arrays import org.apache.lucene.index.Sorter.DocMap import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.Sort import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.store.RAMFile import org.apache.lucene.store.RAMInputStream import org.apache.lucene.store.RAMOutputStream import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.TimSorter import org.apache.lucene.util.automaton.CompiledAutomaton import class org.apache.lucene.index.SortingLeafReader super super extends decl Sorter Terms public public final final throws decl_stmt org.apache.lucene.index.Terms = if == return else return new public public throws return new public public throws return new final final if == return return new public public return call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public return public public return call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public return boolean SortingDocsEnum PostingsEnum boolean PostingsEnum PostingsEnum public public final final throws if && decl_stmt org.apache.lucene.index.PostingsEnum final final decl_stmt SortingPostingsEnum final final if != && instanceof = = call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() else = = decl_stmt org.apache.lucene.index.PostingsEnum final final = decl_stmt boolean final final = >= return new call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() decl_stmt org.apache.lucene.index.PostingsEnum final final decl_stmt SortingDocsEnum final final if != && instanceof = = call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() call SortingDocsEnum.getWrapped() else = = decl_stmt org.apache.lucene.index.PostingsEnum final final = decl_stmt boolean final final = >= && return new call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() public public return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public throws new public public throws call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public throws call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public return public public throws call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public throws call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() call decl Sorter.oldToNew() public public return public public throws return public public throws return public public throws return public public throws return public public return public public return public public return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public return public public return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public return public public call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return public public return public public return public public = = if != && == = new protected protected return - int int protected protected decl_stmt int = = = if != decl_stmt int = = = protected protected = if != = protected protected if != protected protected = if != = protected protected return - if == || ! instanceof return return == public public final final throws return public public return < - : >= : public public throws return && < : public public throws if ++ >= return return return public public throws return - public public throws return - public public throws return - public public throws return public public = = protected protected return - long int protected protected decl_stmt int = = = decl_stmt long = = = protected protected = = protected protected protected protected = = protected protected return - if == || ! instanceof return return == int int int int int int BytesRef int private private final final final final throws decl_stmt int = decl_stmt int = decl_stmt int = for = < ++ decl_stmt int final final = decl_stmt org.apache.lucene.util.BytesRef final final = decl_stmt int final final = - << | == : = if decl_stmt int final final = decl_stmt int final final = - - = if != public public final final throws return public public return < - : >= : public public throws return public public throws return public public throws return == : public public throws if ++ >= return = = = return int public public throws decl_stmt int final final = += >>> if = + = + if & != = = if > = new else = return public public throws return return public static public static throws return new static static if == return if != call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() throw new + + + call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() call decl Sorter.size() assert return new public public final final final final throws call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public throws return new BinaryDocValues public public throws decl_stmt BinaryDocValues = if == return else return new Bits public public decl_stmt org.apache.lucene.util.Bits final final = if == return else return new PointValues public public decl_stmt org.apache.lucene.index.PointValues final final = if == return else return new NumericDocValues public public throws decl_stmt NumericDocValues final final = if == return else return new NumericDocValues public public throws decl_stmt NumericDocValues final final = if == return return new SortedNumericDocValues public public throws decl_stmt SortedNumericDocValues final final = if == return else return new SortedDocValues public public throws decl_stmt org.apache.lucene.index.SortedDocValues = if == return else return new SortedSetDocValues public public throws decl_stmt org.apache.lucene.index.SortedSetDocValues = if == return else return new Bits public public throws decl_stmt org.apache.lucene.util.Bits = if == || instanceof || instanceof return else return new public public final final throws return call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() call decl Sorter.newToOld() public public return + +