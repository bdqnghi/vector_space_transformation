org.apache.lucene.analysis java.io.IOException import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiFields import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import class org.apache.lucene.analysis.TestCachingTokenFilter super super extends decl String int PostingsEnum TokenStream AtomicInteger Document RandomIndexWriter CharTermAttribute IndexReader OffsetAttribute Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new decl_stmt java.util.concurrent.atomic.AtomicInteger = new decl_stmt org.apache.lucene.analysis.TokenStream = new decl_stmt int private = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute private = decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute private = public public throws call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() public public if == return else call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) ++ call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) return = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.PostingsEnum = new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() = new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() = new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws public public if == return else ++ return CachingTokenFilter TokenStream IllegalStateException Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.analysis.TokenStream final final = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) decl_stmt org.apache.lucene.analysis.CachingTokenFilter = new call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() decl_stmt IllegalStateException = call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call org.apache.lucene.analysis.CachingTokenFilter.reset() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() int CharTermAttribute private private throws decl_stmt int = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = while < call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() ++