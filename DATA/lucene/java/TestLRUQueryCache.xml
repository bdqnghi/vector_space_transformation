org.apache.lucene.search java.io.IOException import java.lang.reflect.Field import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.ConcurrentModificationException import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ExecutionException import java.util.concurrent.atomic.AtomicBoolean import java.util.concurrent.atomic.AtomicInteger import java.util.concurrent.atomic.AtomicLong import java.util.concurrent.atomic.AtomicReference import com.carrotsearch.randomizedtesting.generators.RandomPicks import org.apache.lucene.document.Document import org.apache.lucene.document.Field.Store import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NoMergePolicy import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.SerialMergeScheduler import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.store.Directory import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.RamUsageTester import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.TestLRUQueryCache super super extends QueryCachingPolicy public public public public throws return Query long long public public decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt long final final = decl_stmt long final final = / LRUQueryCache IndexSearcher int StringField String Document AtomicBoolean String boolean SearcherManager SearcherFactory decl Thread Query RandomIndexWriter decl AtomicReference int TotalHitCountCollector int Directory public public throws decl_stmt org.apache.lucene.search.LRUQueryCache final final = new + + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public throws decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) return decl_stmt boolean final final = decl_stmt org.apache.lucene.search.SearcherManager final final = new decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.util.concurrent.atomic.AtomicReference final final final < = new <> decl_stmt int final final = decl_stmt java.lang.Thread = new = new public public decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for = call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() && < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() new try call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if & == call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() if call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() if decl_stmt java.lang.String final final = new call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new catch call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() break call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) for = < ++ = new public public while call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() try decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try decl_stmt java.lang.String final final = new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.TotalHitCountCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt int final final = call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() decl_stmt int final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() catch call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() call decl AtomicReference.compareAndSet() for : for : if call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() != throw call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() IndexSearcher public public throws decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) return String Document StringField public public decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for = && < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() new try if & == if if decl_stmt java.lang.String final final = new new catch break int IndexSearcher int String Query TotalHitCountCollector public public while try decl_stmt org.apache.lucene.search.IndexSearcher final final = try decl_stmt java.lang.String final final = new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.TotalHitCountCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt int final final = call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() decl_stmt int final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) finally catch LRUQueryCache IndexSearcher StringField Document Query Query Query RandomIndexWriter DirectoryReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Query IndexSearcher Query StringField Document LRUQueryCache RandomIndexWriter DirectoryReader int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt int final final = for = < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() : call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.LRUQueryCache final final = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() LRUQueryCache decl RamUsageTester int Directory decl Accumulator StringField decl List Document decl Map RandomIndexWriter IndexWriterConfig IndexSearcher int long public public throws decl_stmt org.apache.lucene.search.LRUQueryCache final final = new + + decl_stmt Accumulator final final final final final = new public public < < if instanceof return if instanceof return call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() if instanceof || return if instanceof decl_stmt java.util.Map < = < call decl Accumulator.keySet() call decl Accumulator.keySet() call decl Accumulator.keySet() call decl Accumulator.keySet() call decl Accumulator.keySet() call decl Accumulator.values() call decl Accumulator.values() call decl Accumulator.values() call decl Accumulator.values() call decl Accumulator.values() decl_stmt long final final = instanceof : return * call decl Accumulator.size() call decl Accumulator.size() call decl Accumulator.size() call decl Accumulator.size() call decl Accumulator.size() return public public < < return decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt java.util.List final final final < = decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int final final = for = < ++ decl_stmt int final final = for = < ++ call Document.setStringValue() call Document.setStringValue() call Document.setStringValue() call Document.setStringValue() call Document.setStringValue() call IndexWriterConfig.addDocument() call IndexWriterConfig.addDocument() call IndexWriterConfig.addDocument() call IndexWriterConfig.addDocument() call IndexWriterConfig.addDocument() try final final = call IndexWriterConfig.getReader() call IndexWriterConfig.getReader() call IndexWriterConfig.getReader() call IndexWriterConfig.getReader() call IndexWriterConfig.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = call int.setQueryCache() call int.setQueryCache() call int.setQueryCache() call int.setQueryCache() call int.setQueryCache() call int.setQueryCachingPolicy() call int.setQueryCachingPolicy() call int.setQueryCachingPolicy() call int.setQueryCachingPolicy() call int.setQueryCachingPolicy() for = < ++ decl_stmt org.apache.lucene.search.Query final final = new new call int.search() call int.search() call int.search() call int.search() call int.search() new call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call IndexWriterConfig.close() call IndexWriterConfig.close() call IndexWriterConfig.close() call IndexWriterConfig.close() call IndexWriterConfig.close() call long.close() call long.close() call long.close() call long.close() call long.close() long decl Map public public < < if instanceof return if instanceof return if instanceof || return if instanceof decl_stmt java.util.Map < = < call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl_stmt long final final = instanceof : return * call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() return public public < < return public public throws return new public public throws return public public throws return public public if instanceof == return return == public public return public public return LRUQueryCache decl RamUsageTester DirectoryReader RandomIndexWriter IndexSearcher long Query Directory int int Document decl Accumulator public public throws decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt Accumulator final final final final final = new public public < < if instanceof return if instanceof return call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() if return return decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new decl_stmt int final final = for = < ++ call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() decl_stmt org.apache.lucene.index.DirectoryReader final final = call Directory.getReader() call Directory.getReader() call Directory.getReader() call Directory.getReader() call Directory.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = new call DirectoryReader.setQueryCache() call DirectoryReader.setQueryCache() call DirectoryReader.setQueryCache() call DirectoryReader.setQueryCache() call DirectoryReader.setQueryCache() call DirectoryReader.setQueryCachingPolicy() call DirectoryReader.setQueryCachingPolicy() call DirectoryReader.setQueryCachingPolicy() call DirectoryReader.setQueryCachingPolicy() call DirectoryReader.setQueryCachingPolicy() decl_stmt int final final = for = < ++ decl_stmt org.apache.lucene.search.Query final final = new call DirectoryReader.search() call DirectoryReader.search() call DirectoryReader.search() call DirectoryReader.search() call DirectoryReader.search() new call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() > decl_stmt long final final = decl_stmt long final final = call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() * / call int.close() call int.close() call int.close() call int.close() call int.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call decl Accumulator.close() call decl Accumulator.close() call decl Accumulator.close() call decl Accumulator.close() call decl Accumulator.close() public public < < if instanceof return if instanceof return if return return LRUQueryCache IndexSearcher decl Map Query int StringField Document decl Map decl Query QueryCachingPolicy RandomIndexWriter DirectoryReader int Directory public public throws decl_stmt org.apache.lucene.search.LRUQueryCache final final = new + + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt int final final = for = < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = new decl_stmt java.util.Map final final final < = new <> decl_stmt java.util.Map final final final < = new <> decl_stmt org.apache.lucene.search.QueryCachingPolicy final final = new public public throws return public public call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() decl_stmt org.apache.lucene.search.Query = new + for = < ++ = new new new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) for = < ++ decl_stmt int final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt org.apache.lucene.search.Query = while instanceof = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() call decl Map.getOrDefault() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws return public public + LRUQueryCache IndexSearcher int StringField Document Query decl List RandomIndexWriter DirectoryReader Query Directory public public throws decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt java.util.List final final final < = decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for = < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt int final final = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.search.IndexSearcher final final = new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() * call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() * call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() * call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() * call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() * call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() * call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() * call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() * call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() * call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() * call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() * call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() * call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() * call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() * call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() * call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() call org.apache.lucene.search.LRUQueryCache.getTotalCount() * call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() call org.apache.lucene.search.LRUQueryCache.getHitCount() * call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() call org.apache.lucene.search.LRUQueryCache.getMissCount() * call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() * call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Directory Directory decl List RandomIndexWriter RandomIndexWriter Query int int AtomicLong AtomicLong AtomicLong IndexSearcher Query IndexSearcher AtomicLong decl Map LRUQueryCache Query DirectoryReader DirectoryReader StringField Document AtomicLong AtomicLong public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt java.util.List final final final < = decl_stmt org.apache.lucene.document.Document = new decl_stmt StringField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for : for = < ++ call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() call StringField.setStringValue() if decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt int final final = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.search.IndexSearcher final final = new decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt int final final = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.search.IndexSearcher final final = new decl_stmt java.util.Map final final final < = new <> for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt java.util.concurrent.atomic.AtomicLong final final = new decl_stmt org.apache.lucene.search.LRUQueryCache final final = new protected protected switch call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() case call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() break case call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() break default: throw new protected protected switch call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() case call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() break case call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() break default: throw new protected protected call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) protected protected call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) - protected protected call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() protected protected call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) - call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) - protected protected call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) call java.util.concurrent.atomic.AtomicLong.set(long) decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new for : for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() * call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() + * + call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call org.apache.lucene.search.LRUQueryCache.getCacheSize() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call org.apache.lucene.search.LRUQueryCache.ramBytesUsed() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call java.util.concurrent.atomic.AtomicLong.longValue() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() protected protected switch case break case break default: throw new protected protected switch case break case break default: throw new protected protected protected protected - protected protected protected protected - - protected protected decl Builder IndexReader RandomIndexWriter Query Directory Document IndexSearcher decl BooleanQuery LRUQueryCache public public throws decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new call RandomIndexWriter.add() call RandomIndexWriter.add() call RandomIndexWriter.add() call RandomIndexWriter.add() call RandomIndexWriter.add() new call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() call Directory.addDocument() call Directory.commit() call Directory.commit() call Directory.commit() call Directory.commit() call Directory.commit() decl_stmt org.apache.lucene.index.IndexReader final final = call Directory.getReader() call Directory.getReader() call Directory.getReader() call Directory.getReader() call Directory.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl_stmt org.apache.lucene.search.QueryCachingPolicy final final = new public public throws return public public call IndexReader.setQueryCache() call IndexReader.setQueryCache() call IndexReader.setQueryCache() call IndexReader.setQueryCache() call IndexReader.setQueryCache() call IndexReader.setQueryCachingPolicy() call IndexReader.setQueryCachingPolicy() call IndexReader.setQueryCachingPolicy() call IndexReader.setQueryCachingPolicy() call IndexReader.setQueryCachingPolicy() call IndexReader.search() call IndexReader.search() call IndexReader.search() call IndexReader.search() call IndexReader.search() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() new call Document.close() call Document.close() call Document.close() call Document.close() call Document.close() call LRUQueryCache.close() call LRUQueryCache.close() call LRUQueryCache.close() call LRUQueryCache.close() call LRUQueryCache.close() public public throws return public public LRUQueryCache IndexSearcher TermQuery Document decl Builder TermQuery TermQuery decl BooleanQuery RandomIndexWriter IndexReader Directory TermQuery public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.LRUQueryCache final final = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt org.apache.lucene.search.TermQuery = new new decl_stmt org.apache.lucene.search.TermQuery = new new decl_stmt org.apache.lucene.search.TermQuery = new new decl_stmt org.apache.lucene.search.TermQuery = new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.util.fst.Builder = new call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() call TermQuery.add() new <> call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() new <> new <> call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() call org.apache.lucene.search.LRUQueryCache.clear() new <> call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() new <> call TermQuery.build() call TermQuery.build() call TermQuery.build() call TermQuery.build() call TermQuery.build() new <> call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() String private static private static decl_stmt java.lang.String final final = return new Term decl Builder decl List Term Occur int decl BooleanQuery PhraseQuery int private static private static if == return new switch case return new case decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt int final final = decl_stmt int = for = < ++ decl_stmt Occur final final = call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() + if == ++ call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() case decl_stmt org.apache.lucene.index.Term = decl_stmt org.apache.lucene.index.Term = decl_stmt org.apache.lucene.search.PhraseQuery = new call Occur.field() call Occur.field() call Occur.field() call Occur.field() call Occur.field() call Occur.bytes() call Occur.bytes() call Occur.bytes() call Occur.bytes() call Occur.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() return case return new case return new + case decl_stmt java.util.List < = new <> decl_stmt int final final = for = < ++ call org.apache.lucene.search.PhraseQuery.add(Term,int) call org.apache.lucene.search.PhraseQuery.add(Term,int) call org.apache.lucene.search.PhraseQuery.add(Term,int) call org.apache.lucene.search.PhraseQuery.add(Term,int) call org.apache.lucene.search.PhraseQuery.add(Term,int) + return new default: throw new LRUQueryCache IndexSearcher TextField int Document long Query int RandomIndexWriter IndexReader IndexSearcher Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.TextField = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt int final final decl_stmt long final final decl_stmt int final final if = = = else = = = decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.IndexSearcher = for = < ++ if == || == call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call TextField.setStringValue() call TextField.setStringValue() call TextField.setStringValue() call TextField.setStringValue() call TextField.setStringValue() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() = call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) = call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) if call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() call org.apache.lucene.search.LRUQueryCache.assertConsistent() public public throws return new public public throws return public public throws return public public return public public return ^ LRUQueryCache IndexSearcher RandomIndexWriter IndexReader BadQuery Throwable Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.search.IndexSearcher final final = call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) decl_stmt BadQuery = new call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) += try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new catch catch decl_stmt java.lang.Throwable = instanceof call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() instanceof LRUQueryCache IndexSearcher RandomIndexWriter Directory IndexReader public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new for = < ++ call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.LRUQueryCache final final = new decl_stmt org.apache.lucene.search.IndexSearcher final final = call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) new call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.search.LRUQueryCache.getEvictionCount() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Query Document IndexSearcher FrequencyCountingPolicy decl BooleanQuery Query public public throws try final final = try final final = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new if = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new try final final = decl_stmt FrequencyCountingPolicy final final = new decl_stmt org.apache.lucene.search.IndexSearcher final final = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) new call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.search.Query final final = new new decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new if call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() else call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() call FrequencyCountingPolicy.frequency() AtomicInteger public public final final decl_stmt java.util.concurrent.atomic.AtomicInteger synchronized = return != call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() : AtomicInteger public public final final decl_stmt java.util.concurrent.atomic.AtomicInteger synchronized = if == = new call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() public public throws return public public < public public throws return public public throws return public public public public throws return public public throws return IndexSearcher LeafReaderContext Weight AtomicBoolean LRUQueryCache RandomIndexWriter IndexReader Directory AtomicBoolean public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.index.LeafReaderContext = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt java.util.concurrent.atomic.AtomicBoolean = new decl_stmt java.util.concurrent.atomic.AtomicBoolean = new decl_stmt org.apache.lucene.search.LRUQueryCache = new decl_stmt org.apache.lucene.search.Weight = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) new = new = call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) new = new = call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call org.apache.lucene.search.LRUQueryCache.doCache(Weight,QueryCachingPolicy) call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.LRUQueryCache.getCacheCount() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() LRUQueryCache IndexSearcher RandomIndexWriter DirectoryReader Query Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new decl_stmt org.apache.lucene.index.DirectoryReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt org.apache.lucene.search.LRUQueryCache final final = new protected protected > call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) call org.apache.lucene.search.IndexSearcher.setQueryCachingPolicy(QueryCachingPolicy) decl_stmt org.apache.lucene.search.Query = new call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.cachedQueries() call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call org.apache.lucene.search.LRUQueryCache.clearQuery(Query) call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() protected protected >