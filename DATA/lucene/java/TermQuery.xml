org.apache.lucene.search java.io.IOException import java.util.Objects import java.util.Set import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.TermState import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.similarities.Similarity.SimScorer import class org.apache.lucene.search.TermQuery super super extends Term TermContext public public < public public return + + public public return public public PostingsEnum TermsEnum public public throws assert == : + + + decl_stmt org.apache.lucene.index.TermsEnum final final = if == return decl_stmt org.apache.lucene.index.PostingsEnum = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) : assert != return new TermState TermsEnum private private throws decl_stmt org.apache.lucene.index.TermState final final = if == assert : + return decl_stmt org.apache.lucene.index.TermsEnum final final = call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() return private private throws return == Scorer SimScorer Explanation int float Explanation public public throws decl_stmt org.apache.lucene.search.Scorer = if != decl_stmt int = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() if == decl_stmt float = call Scorer.freq() call Scorer.freq() call Scorer.freq() call Scorer.freq() call Scorer.freq() decl_stmt SimScorer = decl_stmt org.apache.lucene.search.Explanation = + decl_stmt org.apache.lucene.search.Explanation = call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() return call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() + + + + + + return public public return TermContext IndexReaderContext public public throws decl_stmt IndexReaderContext final final = decl_stmt org.apache.lucene.index.TermContext final final if == || != = else = return new StringBuilder public public decl_stmt java.lang.StringBuilder = new if ! call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() TermQuery public public if ! instanceof return decl_stmt org.apache.lucene.search.TermQuery = return && public public return ^ call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode() call org.apache.lucene.index.Term.hashCode()