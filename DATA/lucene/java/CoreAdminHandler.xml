org.apache.solr.handler.admin java.io.File import java.lang.invoke.MethodHandles import java.util.Collections import java.util.HashMap import java.util.Iterator import java.util.LinkedHashMap import java.util.Locale import java.util.Map import java.util.concurrent.ExecutorService import com.google.common.collect.ImmutableMap import org.apache.commons.lang.StringUtils import org.apache.solr.cloud.CloudDescriptor import org.apache.solr.cloud.ZkController import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CommonAdminParams import org.apache.solr.common.params.CoreAdminParams import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.NamedList import org.apache.solr.core.CoreContainer import org.apache.solr.core.CoreDescriptor import org.apache.solr.handler.RequestHandlerBase import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.util.DefaultSolrThreadFactory import org.slf4j.Logger import org.slf4j.LoggerFactory import org.slf4j.MDC import static static org.apache.solr.common.params.CoreAdminParams.ACTION import static static org.apache.solr.common.params.CoreAdminParams.CoreAdminAction.STATUS import class org.apache.solr.handler.admin.CoreAdminHandler super super extends Logger String String int String String decl ImmutableMap decl Map String CoreContainer ExecutorService String decl Map final public final public throw new + public public return boolean TaskObject String CoreContainer CallInfo CoreAdminOperation public public throws try decl_stmt org.apache.solr.core.CoreContainer = if == throw new decl_stmt java.lang.String final final = decl_stmt TaskObject final final = new if != if || || throw new decl_stmt CoreAdminOperation = if == return decl_stmt CallInfo final final = new if == call CallInfo.call() call CallInfo.call() call CallInfo.call() call CallInfo.call() call CallInfo.call() else try call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call CoreAdminOperation.action() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() decl_stmt boolean = try call CallInfo.call() call CallInfo.call() call CallInfo.call() call CallInfo.call() call CallInfo.call() call TaskObject.setRspObject() call TaskObject.setRspObject() call TaskObject.setRspObject() call TaskObject.setRspObject() call TaskObject.setRspObject() catch = call TaskObject.setRspObjectFromException() call TaskObject.setRspObjectFromException() call TaskObject.setRspObjectFromException() call TaskObject.setRspObjectFromException() call TaskObject.setRspObjectFromException() finally if else finally finally protected protected throw new + decl Iterator decl Map String String String String protected static < protected static < decl_stmt java.util.Map < = new <> for : call decl ImmutableMap.keySet() call decl ImmutableMap.keySet() call decl ImmutableMap.keySet() call decl ImmutableMap.keySet() call decl ImmutableMap.keySet() decl_stmt java.lang.String = if call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl ImmutableMap.get() call decl ImmutableMap.get() call decl ImmutableMap.get() call decl ImmutableMap.get() call decl ImmutableMap.get() decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return protected static protected static if == return = = return ModifiableSolrParams public static public static decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new for = < += call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) + return public public return public public return public public = + public public = String synchronized if && == decl_stmt java.lang.String = private private synchronized private private synchronized < < return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public public if != && ! call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() throws