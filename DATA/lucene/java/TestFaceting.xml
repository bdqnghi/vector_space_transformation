org.apache.solr.request java.util.ArrayList import java.util.List import java.util.Locale import java.util.Random import org.apache.lucene.index.DocValues import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.Term import org.apache.lucene.index.TermsEnum import org.apache.lucene.uninverting.DocTermOrds import org.apache.lucene.util.BytesRef import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.params.FacetParams import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.util.RefCounted import org.junit.After import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.request.TestFaceting super super extends SolrQueryRequest Term public static public static throws public public throws public public throws return for = < ++ call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() if != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = decl TermsEnum int Random String SortedSetDocValues TermsEnum decl SeekStatus throws = decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() decl_stmt java.util.Random = new for = < * + ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.BytesRef final final if == = else decl_stmt SeekStatus = call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) new if == = else = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() != < if < int call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() if > > call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) new != call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() if > for = < * + ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) long decl_stmt org.apache.lucene.util.BytesRef = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() int call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() int public public throws decl_stmt int final final = << - + * + StringBuilder public public throws decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() for : new + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() for : new + + + + + + + + + + int int int int int StringBuilder int public public throws decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt int = decl_stmt int = decl_stmt int = / for = < ++ + + + * + if == decl_stmt int final final = for = < += / + + == : + + + + + + * + + decl_stmt int = - + + == : + + + + + + * + + decl List String decl String public public decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String final final final = new for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new for : for : new for : new for : new decl_stmt java.lang.String final final = + + + + + + + + + + public public String String String public public decl_stmt java.lang.String = for : new new new + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = for : new + : : private private String String String String String String String String String String private private for = < ++ decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl String public public throws decl_stmt java.lang.String = new : new SortedSetDocValues SolrIndexSearcher SortedSetDocValues decl String SortedSetDocValues SortedSetDocValues SortedSetDocValues SortedSetDocValues SortedSetDocValues SortedSetDocValues SortedSetDocValues SortedSetDocValues decl RefCounted public public throws decl_stmt java.lang.String = new : new decl_stmt org.apache.solr.util.RefCounted < = try decl_stmt org.apache.solr.search.SolrIndexSearcher = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() call org.apache.solr.search.SolrIndexSearcher.getLeafReader() finally call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref()