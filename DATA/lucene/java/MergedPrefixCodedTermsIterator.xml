org.apache.lucene.index java.util.List import org.apache.lucene.index.PrefixCodedTerms.TermIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.PriorityQueue import class org.apache.lucene.index.MergedPrefixCodedTermsIterator super super extends String FieldMergeQueue TermMergeQueue int protected protected decl_stmt int = if < return else if > return else return > protected protected return < TermIterator TermIterator public public if call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() == if call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() == = return decl_stmt TermIterator = call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() = assert != while call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() call FieldMergeQueue.size() != && call FieldMergeQueue.top() call FieldMergeQueue.top() call FieldMergeQueue.top() call FieldMergeQueue.top() call FieldMergeQueue.top() call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt TermIterator = call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() call FieldMergeQueue.pop() assert call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() = call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() call TermMergeQueue.add() return call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() else decl_stmt TermIterator = call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() if call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() == call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() else if call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() != call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() call TermMergeQueue.pop() call FieldMergeQueue.add() call FieldMergeQueue.add() call FieldMergeQueue.add() call FieldMergeQueue.add() call FieldMergeQueue.add() else call TermMergeQueue.updateTop() call TermMergeQueue.updateTop() call TermMergeQueue.updateTop() call TermMergeQueue.updateTop() call TermMergeQueue.updateTop() if call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() call TermMergeQueue.size() == return else return call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() public public return public public return call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top() call TermMergeQueue.top()