org.apache.lucene.util java.io.IOException import java.util.Collection import java.util.Collections import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.junit.Ignore import class annotation super super extends decl java decl util static static assert <= decl_stmt org.apache.lucene.util.BitSet final final final final final final final final final = new if == call decl java.set() call decl java.set() call decl java.set() call decl java.set() call decl java.set() else for = < ++ while decl_stmt int final final = if ! call decl java.get() call decl java.get() call decl java.get() call decl java.get() call decl java.get() call decl java.set() call decl java.set() call decl java.set() call decl java.set() call decl java.set() break return static static return * protected protected for = < ++ + BitSet T int public public throws decl_stmt int final final = + for : new decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = call BitSet.cardinality() call BitSet.cardinality() call BitSet.cardinality() call BitSet.cardinality() call BitSet.cardinality() call T.cardinality() call T.cardinality() call T.cardinality() call T.cardinality() call T.cardinality() BitSet T int public public throws decl_stmt int final final = + for : new decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = for = < ++ call BitSet.prevSetBit() call BitSet.prevSetBit() call BitSet.prevSetBit() call BitSet.prevSetBit() call BitSet.prevSetBit() call T.prevSetBit() call T.prevSetBit() call T.prevSetBit() call T.prevSetBit() call T.prevSetBit() BitSet T int public public throws decl_stmt int final final = + for : new decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = for = < ++ call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call T.nextSetBit() call T.nextSetBit() call T.nextSetBit() call T.nextSetBit() call T.nextSetBit() int int BitSet T int public public throws decl_stmt int final final = + decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = decl_stmt int final final = + for = < ++ decl_stmt int final final = call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call T.set() call T.set() call T.set() call T.set() call T.set() int int BitSet T int public public throws decl_stmt int final final = + for : new decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = decl_stmt int final final = + * for = < ++ decl_stmt int final final = call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call T.clear() call T.clear() call T.clear() call T.clear() call T.clear() int int int int BitSet T public public throws decl_stmt int final final = + for : new decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = decl_stmt int final final = + for = < ++ decl_stmt int final final = decl_stmt int final final = + call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call java.util.BitSet.clear(int) call T.clear() call T.clear() call T.clear() call T.clear() call T.clear() decl Builder decl RoaringDocIdSet FixedBitSet private private throws switch case return new case return new case decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new for = != = + >= : + call decl RoaringDocIdSet.add() call decl RoaringDocIdSet.add() call decl RoaringDocIdSet.add() call decl RoaringDocIdSet.add() call decl RoaringDocIdSet.add() return call decl RoaringDocIdSet.build() call decl RoaringDocIdSet.build() call decl RoaringDocIdSet.build() call decl RoaringDocIdSet.build() call decl RoaringDocIdSet.build() case decl_stmt org.apache.lucene.util.FixedBitSet = new call decl Builder.or() call decl Builder.or() call decl Builder.or() call decl Builder.or() call decl Builder.or() new return new case decl_stmt org.apache.lucene.util.SparseFixedBitSet = new call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) new return new default: return T int DocIdSetIterator int DocIdSet BitSet private private throws decl_stmt int final final = + decl_stmt org.apache.lucene.util.BitSet = new decl_stmt T = decl_stmt int final final = for = < ++ decl_stmt org.apache.lucene.search.DocIdSet = new decl_stmt org.apache.lucene.search.DocIdSetIterator = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if != call java.util.BitSet.or(BitSet) call java.util.BitSet.or(BitSet) call java.util.BitSet.or(BitSet) call java.util.BitSet.or(BitSet) call java.util.BitSet.or(BitSet) call T.or() call T.or() call T.or() call T.or() call T.or() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() public public throws public public throws public public throws public public public public return public public return public public return - public < public < return public public public public if >= return public public return public public return int public public decl_stmt int = if == - = return