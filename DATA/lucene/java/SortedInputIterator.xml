org.apache.lucene.search.suggest java.io.IOException import java.util.Comparator import java.util.HashSet import java.util.Set import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.store.ByteArrayDataOutput import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.OfflineSorter.ByteSequencesReader import org.apache.lucene.util.OfflineSorter.ByteSequencesWriter import org.apache.lucene.util.OfflineSorter import class org.apache.lucene.search.suggest.SortedInputIterator super super implements boolean String long decl Comparator IndexOutput decl Set decl Comparator boolean String InputIterator boolean ByteSequencesReader Directory BytesRef ByteArrayDataInput BytesRef boolean public public throws decl_stmt boolean = if return try decl_stmt org.apache.lucene.store.ByteArrayDataInput = new decl_stmt org.apache.lucene.util.BytesRef = call ByteSequencesReader.next() call ByteSequencesReader.next() call ByteSequencesReader.next() call ByteSequencesReader.next() call ByteSequencesReader.next() if != = if = if = = return = = return finally if ! = public public return public public if return return public public return public < public < return public public return long long int public public assert != = = = = = = decl_stmt long = decl_stmt long = if if decl_stmt int = call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() if != return return decl byte ByteArrayDataOutput BytesRef OfflineSorter private private throws decl_stmt org.apache.lucene.util.OfflineSorter = new = call Directory.createTempOutput() call Directory.createTempOutput() call Directory.createTempOutput() call Directory.createTempOutput() call Directory.createTempOutput() try = new decl_stmt org.apache.lucene.util.BytesRef decl_stmt byte = new decl_stmt org.apache.lucene.store.ByteArrayDataOutput = new while = call InputIterator.next() call InputIterator.next() call InputIterator.next() call InputIterator.next() call InputIterator.next() != call org.apache.lucene.search.suggest.InputIterator.payload() call org.apache.lucene.search.suggest.InputIterator.payload() call org.apache.lucene.search.suggest.InputIterator.payload() call org.apache.lucene.search.suggest.InputIterator.payload() call org.apache.lucene.search.suggest.InputIterator.payload() call org.apache.lucene.search.suggest.InputIterator.contexts() call org.apache.lucene.search.suggest.InputIterator.contexts() call org.apache.lucene.search.suggest.InputIterator.contexts() call org.apache.lucene.search.suggest.InputIterator.contexts() call org.apache.lucene.search.suggest.InputIterator.contexts() call org.apache.lucene.search.suggest.InputIterator.weight() call org.apache.lucene.search.suggest.InputIterator.weight() call org.apache.lucene.search.suggest.InputIterator.weight() call org.apache.lucene.search.suggest.InputIterator.weight() call org.apache.lucene.search.suggest.InputIterator.weight() = call org.apache.lucene.util.OfflineSorter.sort(String) call org.apache.lucene.util.OfflineSorter.sort(String) call org.apache.lucene.util.OfflineSorter.sort(String) call org.apache.lucene.util.OfflineSorter.sort(String) call org.apache.lucene.util.OfflineSorter.sort(String) call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() return new call org.apache.lucene.store.Directory.openChecksumInput(String,IOContext) call org.apache.lucene.store.Directory.openChecksumInput(String,IOContext) call org.apache.lucene.store.Directory.openChecksumInput(String,IOContext) call org.apache.lucene.store.Directory.openChecksumInput(String,IOContext) call org.apache.lucene.store.Directory.openChecksumInput(String,IOContext) private private throws try finally == : call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() call org.apache.lucene.store.IndexOutput.getName() int protected protected < throws decl_stmt int = + + + : if for : += + += if >= = if for : short short call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() if short protected protected - -= return decl Set BytesRef short short protected < protected < - decl_stmt short = -= decl_stmt java.util.Set final final final < = new <> for = < ++ + - decl_stmt short = -= + - decl_stmt org.apache.lucene.util.BytesRef = new = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() -= return BytesRef short protected protected - decl_stmt short = assert >= : + - - decl_stmt org.apache.lucene.util.BytesRef = new = -= -= return