org.apache.lucene.codecs.asserting java.io.IOException import java.util.Collection import java.util.Iterator import org.apache.lucene.codecs.DocValuesConsumer import org.apache.lucene.codecs.DocValuesFormat import org.apache.lucene.codecs.DocValuesProducer import org.apache.lucene.index.AssertingLeafReader import org.apache.lucene.index.AssertingLeafReader.AssertingRandomAccessOrds import org.apache.lucene.index.AssertingLeafReader.AssertingSortedSetDocValues import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.RandomAccessOrds import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.SortedNumericDocValues import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.util.Accountable import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LongBitSet import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.asserting.AssertingDocValuesFormat super super extends DocValuesFormat DocValuesConsumer public public throws decl_stmt org.apache.lucene.codecs.DocValuesConsumer = call DocValuesFormat.fieldsConsumer() call DocValuesFormat.fieldsConsumer() call DocValuesFormat.fieldsConsumer() call DocValuesFormat.fieldsConsumer() call DocValuesFormat.fieldsConsumer() assert != return new DocValuesProducer public public throws assert decl_stmt org.apache.lucene.codecs.DocValuesProducer = call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() assert != return new int public public < throws decl_stmt int = for : ++ assert == call DocValuesFormat.addNumericField() call DocValuesFormat.addNumericField() call DocValuesFormat.addNumericField() call DocValuesFormat.addNumericField() call DocValuesFormat.addNumericField() int public public < throws decl_stmt int = for : assert == || ++ assert == call DocValuesFormat.addBinaryField() call DocValuesFormat.addBinaryField() call DocValuesFormat.addBinaryField() call DocValuesFormat.addBinaryField() call DocValuesFormat.addBinaryField() int int int BytesRef FixedBitSet public public < < throws decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef = for : assert != assert if > assert > = ++ assert <= decl_stmt org.apache.lucene.util.FixedBitSet = new decl_stmt int = for : assert != decl_stmt int = assert >= - && < if >= call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) ++ assert == assert call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() == call DocValuesFormat.addSortedField() call DocValuesFormat.addSortedField() call DocValuesFormat.addSortedField() call DocValuesFormat.addSortedField() call DocValuesFormat.addSortedField() long long Number decl Iterator long public public < < throws decl_stmt long = decl_stmt java.util.Iterator < = for : assert != assert >= += decl_stmt long = for = < ++ assert call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.Number = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() assert != decl_stmt long = call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() assert >= = assert call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() == call DocValuesFormat.addSortedNumericField() call DocValuesFormat.addSortedNumericField() call DocValuesFormat.addSortedNumericField() call DocValuesFormat.addSortedNumericField() call DocValuesFormat.addSortedNumericField() decl Iterator int BytesRef LongBitSet long Number long int long long public public < < < throws decl_stmt long = decl_stmt org.apache.lucene.util.BytesRef = for : assert != assert if > assert > = ++ decl_stmt int = decl_stmt long = decl_stmt org.apache.lucene.util.LongBitSet = new decl_stmt java.util.Iterator < = for : assert != decl_stmt int = assert >= ++ += decl_stmt long = - for = < ++ decl_stmt java.lang.Number = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() assert != decl_stmt long = call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() assert >= && < assert > : + + + call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) = assert call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() == assert == assert call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() call LongBitSet.cardinality() == call DocValuesFormat.addSortedSetField() call DocValuesFormat.addSortedSetField() call DocValuesFormat.addSortedSetField() call DocValuesFormat.addSortedSetField() call DocValuesFormat.addSortedSetField() public public throws call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() NumericDocValues public public throws assert == decl_stmt NumericDocValues = call DocValuesFormat.getNumeric() call DocValuesFormat.getNumeric() call DocValuesFormat.getNumeric() call DocValuesFormat.getNumeric() call DocValuesFormat.getNumeric() assert != return new BinaryDocValues public public throws assert == decl_stmt BinaryDocValues = call DocValuesFormat.getBinary() call DocValuesFormat.getBinary() call DocValuesFormat.getBinary() call DocValuesFormat.getBinary() call DocValuesFormat.getBinary() assert != return new SortedDocValues public public throws assert == decl_stmt org.apache.lucene.index.SortedDocValues = call DocValuesFormat.getSorted() call DocValuesFormat.getSorted() call DocValuesFormat.getSorted() call DocValuesFormat.getSorted() call DocValuesFormat.getSorted() assert != return new SortedNumericDocValues public public throws assert == decl_stmt SortedNumericDocValues = call DocValuesFormat.getSortedNumeric() call DocValuesFormat.getSortedNumeric() call DocValuesFormat.getSortedNumeric() call DocValuesFormat.getSortedNumeric() call DocValuesFormat.getSortedNumeric() assert != return new SortedSetDocValues public public throws assert == decl_stmt org.apache.lucene.index.SortedSetDocValues = call DocValuesFormat.getSortedSet() call DocValuesFormat.getSortedSet() call DocValuesFormat.getSortedSet() call DocValuesFormat.getSortedSet() call DocValuesFormat.getSortedSet() assert != if instanceof return new else return new Bits public public throws assert != decl_stmt org.apache.lucene.util.Bits = call DocValuesFormat.getDocsWithField() call DocValuesFormat.getDocsWithField() call DocValuesFormat.getDocsWithField() call DocValuesFormat.getDocsWithField() call DocValuesFormat.getDocsWithField() assert != assert call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() == return new public public throws call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() call DocValuesFormat.close() long public public decl_stmt long = call DocValuesFormat.ramBytesUsed() call DocValuesFormat.ramBytesUsed() call DocValuesFormat.ramBytesUsed() call DocValuesFormat.ramBytesUsed() call DocValuesFormat.ramBytesUsed() assert >= return decl Collection public < public < decl_stmt java.util.Collection < = call DocValuesFormat.getChildResources() call DocValuesFormat.getChildResources() call DocValuesFormat.getChildResources() call DocValuesFormat.getChildResources() call DocValuesFormat.getChildResources() return public public throws call DocValuesFormat.checkIntegrity() call DocValuesFormat.checkIntegrity() call DocValuesFormat.checkIntegrity() call DocValuesFormat.checkIntegrity() call DocValuesFormat.checkIntegrity() public public throws return new call DocValuesFormat.getMergeInstance() call DocValuesFormat.getMergeInstance() call DocValuesFormat.getMergeInstance() call DocValuesFormat.getMergeInstance() call DocValuesFormat.getMergeInstance() public public return + + call org.apache.lucene.codecs.DocValuesFormat.toString() call org.apache.lucene.codecs.DocValuesFormat.toString() call org.apache.lucene.codecs.DocValuesFormat.toString() call org.apache.lucene.codecs.DocValuesFormat.toString() call org.apache.lucene.codecs.DocValuesFormat.toString() +