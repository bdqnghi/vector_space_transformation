org.apache.lucene.queryparser.flexible.core.builders junit.framework.Assert import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl import org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax import org.apache.lucene.queryparser.flexible.core.util.UnescapedCharSequence import org.apache.lucene.util.LuceneTestCase import org.junit.Test import class org.apache.lucene.queryparser.flexible.core.builders.TestQueryTreeBuilder super super extends QueryTreeBuilder Object public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder = new call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) new decl_stmt java.lang.Object = call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() new new = new call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) call org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder.setBuilder(Class,QueryBuilder) new = call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() call QueryTreeBuilder.build() new public public return public public throws return