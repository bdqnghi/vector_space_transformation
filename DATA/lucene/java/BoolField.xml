org.apache.solr.schema java.io.IOException import java.util.Map import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.DocValues import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.IndexableField import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.BoolDocValues import org.apache.lucene.search.SortField import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.mutable.MutableValue import org.apache.lucene.util.mutable.MutableValueBool import org.apache.solr.analysis.SolrAnalyzer import org.apache.solr.response.TextResponseWriter import org.apache.solr.search.QParser import org.apache.solr.search.function.OrdFieldSource import class org.apache.solr.schema.BoolField super super extends decl char CharsRef Analyzer decl char CharsRef public public return public public if return else return public public return new boolean int CharTermAttribute Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = decl_stmt boolean = public public throws = public public throws if return = decl_stmt int = if == - return call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) == || == || == : return return new public public throws = int public public throws if return = decl_stmt int = if == - return == || == || == : return public public return public public return char public public decl_stmt char = != && > : return == || == || == : public public return public public return public public return == char public public decl_stmt char = return == : public public if > && == else return public public throws == public public return public public return