org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.List import java.util.Random import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.index.ConcurrentMergeScheduler import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.FilterDirectoryReader import org.apache.lucene.index.FilterLeafReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.NamedThreadFactory import org.apache.lucene.util.TestUtil import class annotation org.apache.lucene.search.TestSearcherManager super super extends decl List SearcherManager decl Pruner decl SearcherLifetimeManager SearcherLifetimeManager boolean public public throws = new : protected protected throws if ! call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() || call decl Pruner.isSearcherCurrent() call decl Pruner.isSearcherCurrent() call decl Pruner.isSearcherCurrent() call decl Pruner.isSearcherCurrent() call decl Pruner.isSearcherCurrent() return call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() IndexSearcher SearcherFactory protected protected final final throws decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public throws decl_stmt org.apache.lucene.search.IndexSearcher = new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new return if = new = else = new = = = new IndexSearcher public public throws decl_stmt org.apache.lucene.search.IndexSearcher = new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new return boolean Thread protected protected final final throws decl_stmt java.lang.Thread = new public public try if + + while < decl_stmt boolean = if call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() else if call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() catch if throw new call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) boolean public public try if + + while < decl_stmt boolean = if call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call decl Pruner.maybeRefreshBlocking() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() else if call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() catch if throw new IndexSearcher Long protected protected throws if == if call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call decl Pruner.maybeRefresh() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() call SearcherManager.prune() decl_stmt org.apache.lucene.search.IndexSearcher = synchronized while call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() != && < decl_stmt java.lang.Long final final = call SearcherLifetimeManager.get() call SearcherLifetimeManager.get() call SearcherLifetimeManager.get() call SearcherLifetimeManager.get() call SearcherLifetimeManager.get() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() call SearcherLifetimeManager.size() = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if == call SearcherLifetimeManager.remove() call SearcherLifetimeManager.remove() call SearcherLifetimeManager.remove() call SearcherLifetimeManager.remove() call SearcherLifetimeManager.remove() else break if == = call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() call decl Pruner.acquire() if call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != decl_stmt java.lang.Long = call SearcherManager.record() call SearcherManager.record() call SearcherManager.record() call SearcherManager.record() call SearcherManager.record() synchronized if ! call SearcherLifetimeManager.contains() call SearcherLifetimeManager.contains() call SearcherLifetimeManager.contains() call SearcherLifetimeManager.contains() call SearcherLifetimeManager.contains() call SearcherLifetimeManager.add() call SearcherLifetimeManager.add() call SearcherLifetimeManager.add() call SearcherLifetimeManager.add() call SearcherLifetimeManager.add() return protected protected throws protected protected throws if call decl Pruner.close() call decl Pruner.close() call decl Pruner.close() call decl Pruner.close() call decl Pruner.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() SearcherManager CountDownLatch AtomicBoolean IndexSearcher CountDownLatch IndexWriter SearcherFactory Thread Directory AtomicBoolean ExecutorService decl Throwable public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.util.concurrent.ExecutorService final final = : new decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public try if call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) catch return new decl_stmt org.apache.lucene.search.SearcherManager final final = new : new if decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.lang.Throwable final final final = new decl_stmt java.lang.Thread = new new public public try call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) if call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) catch catch if = call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() if call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) if call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() + call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() if != call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) public public try if catch return new public public try if catch catch if = SearcherManager Directory public public throws decl_stmt org.apache.lucene.store.Directory = new new decl_stmt org.apache.lucene.search.SearcherManager = new call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexSearcher IndexSearcher IndexWriter SearcherManager Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new new decl_stmt org.apache.lucene.search.SearcherManager = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexSearcher SearcherManager Directory public public throws decl_stmt org.apache.lucene.store.Directory = new new decl_stmt org.apache.lucene.search.SearcherManager = new decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() SearcherManager AtomicBoolean IndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt org.apache.lucene.search.SearcherManager = new new call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() new public public public public if call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public public public if IndexReader Random SearcherFactory RandomIndexWriter Directory public public throws decl_stmt java.util.Random final final = decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() decl_stmt org.apache.lucene.index.IndexReader final final = decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public return new new call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public return SearcherManager RandomIndexWriter Directory Thread public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.SearcherManager final final = new decl_stmt java.lang.Thread = new public public try call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() catch throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public try catch throw new FilterLeafReader public public decl_stmt org.apache.lucene.index.FilterLeafReader = new call org.apache.lucene.index.FilterLeafReader.getDelegate() call org.apache.lucene.index.FilterLeafReader.getDelegate() call org.apache.lucene.index.FilterLeafReader.getDelegate() call org.apache.lucene.index.FilterLeafReader.getDelegate() call org.apache.lucene.index.FilterLeafReader.getDelegate() return protected protected throws return new DirectoryReader SearcherManager IndexSearcher RandomIndexWriter FilterDirectoryReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.FilterDirectoryReader = new call org.apache.lucene.index.FilterDirectoryReader.getDelegate() call org.apache.lucene.index.FilterDirectoryReader.getDelegate() call org.apache.lucene.index.FilterDirectoryReader.getDelegate() call org.apache.lucene.index.FilterDirectoryReader.getDelegate() call org.apache.lucene.index.FilterDirectoryReader.getDelegate() decl_stmt org.apache.lucene.search.SearcherManager = new for = < ++ call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() instanceof for : call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() instanceof finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() SearcherManager IndexSearcher MySearcherFactory IndexReader IndexWriter IndexReader int Directory public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.IndexWriter final final = new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new class class extends extends decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.IndexReader = decl_stmt int = public public throws ++ = = return decl_stmt MySearcherFactory = new decl_stmt org.apache.lucene.search.SearcherManager final final = new decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws ++ = = return