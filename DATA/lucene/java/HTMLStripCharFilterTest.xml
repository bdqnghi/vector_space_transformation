org.apache.lucene.analysis.charfilter java.io.BufferedReader import java.io.InputStream import java.io.InputStreamReader import java.io.Reader import java.io.StringReader import java.nio.charset.StandardCharsets import java.util.Arrays import java.util.HashSet import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.util.TestUtil import class org.apache.lucene.analysis.charfilter.HTMLStripCharFilterTest super super extends Tokenizer static private static private return new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new String String public public throws decl_stmt java.lang.String = + + decl_stmt java.lang.String = + + StringBuilder int String InputStream HTMLStripCharFilter public public throws decl_stmt java.io.InputStream = decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter = new new decl_stmt java.lang.StringBuilder = new decl_stmt int = - while = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - && call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() StringBuilder int String InputStream HTMLStripCharFilter public public throws decl_stmt java.io.InputStream = decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter = new new decl_stmt java.lang.String = decl_stmt java.lang.StringBuilder = new decl_stmt int = while = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws new <> String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = new <> String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = new <> decl Set StringBuilder int String Reader String public public throws decl_stmt java.lang.String = decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.io.Reader = new new decl_stmt java.lang.StringBuilder = new decl_stmt int = while = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == + call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == + call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - decl String public public throws decl_stmt java.lang.String = for = < += + StringBuilder String Reader public public throws decl_stmt java.lang.StringBuilder = new + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + decl_stmt java.io.Reader = new new new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) * + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int private private decl_stmt int = / for = < ++ String StringBuilder String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = = = decl_stmt java.lang.StringBuilder = new = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int int int int HTMLStripCharFilter public public throws decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter = new new new decl_stmt int = decl_stmt int = decl_stmt int = - while = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() != - decl_stmt int = call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() if == = + ++ public public throws int int int int HTMLStripCharFilter static static throws decl_stmt int = decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter = new new new decl_stmt int = decl_stmt int = while = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() != - decl_stmt int = call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() call HTMLStripCharFilter.correctOffset() + + + + + <= ++ public public throws Analyzer int public public throws decl_stmt int = * decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Analyzer int public public throws decl_stmt int = * decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() String String public public throws decl_stmt java.lang.String = + + decl_stmt java.lang.String = = = String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = = = String decl Set String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Set < = new <> String String public public throws decl_stmt java.lang.String = + + + + decl_stmt java.lang.String = String decl Set String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Set < = new <> decl String public public throws decl_stmt java.lang.String = for = < += + String decl Set String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Set < = new <> String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = String int decl String String String String public public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = + + decl_stmt java.lang.String = decl_stmt java.lang.String = + + decl_stmt java.lang.String = for = < += + public public throws String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = Analyzer String int public public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() int StringBuilder int Reader int int int public public throws decl_stmt java.lang.StringBuilder = new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = switch case for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break case for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break default: for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.io.Reader = new new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() while call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) != - Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new new new new new new new new new new new new new new new new new new new new call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() public static public static < throws new StringBuilder int HTMLStripCharFilter public static public static < throws decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter if == = new else = new decl_stmt int = decl_stmt java.lang.StringBuilder = new try while = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char catch if call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() throw throw new + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + + + + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()