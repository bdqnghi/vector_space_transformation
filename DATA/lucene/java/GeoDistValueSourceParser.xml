org.apache.solr.search.function.distance java.util.Arrays import java.util.Collections import java.util.List import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Point import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.valuesource.ConstNumberSource import org.apache.lucene.queries.function.valuesource.DoubleConstValueSource import org.apache.lucene.queries.function.valuesource.MultiValueSource import org.apache.lucene.queries.function.valuesource.VectorValueSource import org.apache.lucene.spatial.SpatialStrategy import org.apache.solr.common.params.SpatialParams import org.apache.solr.schema.AbstractSpatialFieldType import org.apache.solr.schema.FieldType import org.apache.solr.schema.SchemaField import org.apache.solr.search.FunctionQParser import org.apache.solr.search.SyntaxError import org.apache.solr.search.ValueSourceParser import org.apache.solr.util.DistanceUnits import org.apache.solr.util.SpatialUtils import class org.apache.solr.search.function.distance.GeoDistValueSourceParser super super extends ValueSource MultiValueSource MultiValueSource ValueSource SpatialStrategy decl List ValueSource Point DistanceUnits MultiValueSource decl double public public throws decl_stmt java.util.List < = decl_stmt MultiValueSource = decl_stmt MultiValueSource = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.lucene.queries.function.ValueSource = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if ! instanceof throw new + = else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.lucene.queries.function.ValueSource = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.queries.function.ValueSource = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if instanceof && instanceof = = else = else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.lucene.queries.function.ValueSource = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.queries.function.ValueSource = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if instanceof = = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() else = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if ! instanceof throw new + = else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > throw new + if == = = else if == = if == = if == || == throw new + decl_stmt double = decl_stmt MultiValueSource = if == = = if instanceof if == throw new + decl_stmt org.apache.lucene.spatial.SpatialStrategy = decl_stmt org.apache.solr.util.DistanceUnits = decl_stmt java.awt.Point = call org.apache.lucene.spatial.SpatialStrategy.getSpatialContext() call org.apache.lucene.spatial.SpatialStrategy.getSpatialContext() call org.apache.lucene.spatial.SpatialStrategy.getSpatialContext() call org.apache.lucene.spatial.SpatialStrategy.getSpatialContext() call org.apache.lucene.spatial.SpatialStrategy.getSpatialContext() return call org.apache.lucene.spatial.SpatialStrategy.makeDistanceValueSource(Point) call org.apache.lucene.spatial.SpatialStrategy.makeDistanceValueSource(Point) call org.apache.lucene.spatial.SpatialStrategy.makeDistanceValueSource(Point) call org.apache.lucene.spatial.SpatialStrategy.makeDistanceValueSource(Point) call org.apache.lucene.spatial.SpatialStrategy.makeDistanceValueSource(Point) call org.apache.solr.util.DistanceUnits.multiplierFromDegreesToThisUnit() call org.apache.solr.util.DistanceUnits.multiplierFromDegreesToThisUnit() call org.apache.solr.util.DistanceUnits.multiplierFromDegreesToThisUnit() call org.apache.solr.util.DistanceUnits.multiplierFromDegreesToThisUnit() call org.apache.solr.util.DistanceUnits.multiplierFromDegreesToThisUnit() if != && instanceof return new return new ValueSource ValueSource private private < < throws decl_stmt org.apache.lucene.queries.function.ValueSource = decl_stmt org.apache.lucene.queries.function.ValueSource = if instanceof || instanceof throw new + return new String Point private private throws decl_stmt java.lang.String = if == return decl_stmt java.awt.Point = return new > new call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() call java.awt.Point.getY() new call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() call java.awt.Point.getX() decl List private private if ! instanceof return decl_stmt java.util.List < = if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof return new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return AbstractSpatialFieldType ValueSource FieldType SchemaField String private private throws decl_stmt java.lang.String = if == return decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() if instanceof decl_stmt org.apache.solr.schema.AbstractSpatialFieldType = return new call org.apache.solr.schema.AbstractSpatialFieldType.getStrategy(String) call org.apache.solr.schema.AbstractSpatialFieldType.getStrategy(String) call org.apache.solr.schema.AbstractSpatialFieldType.getStrategy(String) call org.apache.solr.schema.AbstractSpatialFieldType.getStrategy(String) call org.apache.solr.schema.AbstractSpatialFieldType.getStrategy(String) call org.apache.solr.schema.AbstractSpatialFieldType.getDistanceUnits() call org.apache.solr.schema.AbstractSpatialFieldType.getDistanceUnits() call org.apache.solr.schema.AbstractSpatialFieldType.getDistanceUnits() call org.apache.solr.schema.AbstractSpatialFieldType.getDistanceUnits() call org.apache.solr.schema.AbstractSpatialFieldType.getDistanceUnits() decl_stmt org.apache.lucene.queries.function.ValueSource = call org.apache.solr.schema.FieldType.getValueSource(SchemaField,QParser) call org.apache.solr.schema.FieldType.getValueSource(SchemaField,QParser) call org.apache.solr.schema.FieldType.getValueSource(SchemaField,QParser) call org.apache.solr.schema.FieldType.getValueSource(SchemaField,QParser) call org.apache.solr.schema.FieldType.getValueSource(SchemaField,QParser) if instanceof return throw new + public < public < throw new