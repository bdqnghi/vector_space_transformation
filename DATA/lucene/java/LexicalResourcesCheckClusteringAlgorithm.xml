org.apache.solr.handler.clustering.carrot2 java.util.List import org.carrot2.core.Cluster import org.carrot2.core.IClusteringAlgorithm import org.carrot2.core.LanguageCode import org.carrot2.core.ProcessingComponentBase import org.carrot2.core.ProcessingException import org.carrot2.core.attribute.AttributeNames import org.carrot2.core.attribute.Processing import org.carrot2.text.linguistic.ILexicalData import org.carrot2.text.preprocessing.pipeline.BasicPreprocessingPipeline import org.carrot2.text.util.MutableCharArray import org.carrot2.util.attribute.Attribute import org.carrot2.util.attribute.Bindable import org.carrot2.util.attribute.Input import org.carrot2.util.attribute.Output import com.google.common.collect.Lists import class annotation org.apache.solr.handler.clustering.carrot2.LexicalResourcesCheckClusteringAlgorithm super super extends super implements decl List BasicPreprocessingPipeline String ILexicalData public public throws = if == return decl_stmt ILexicalData = call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() call BasicPreprocessingPipeline.lexicalDataFactory() for : call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) if ! call ILexicalData.isCommonWord() call ILexicalData.isCommonWord() call ILexicalData.isCommonWord() call ILexicalData.isCommonWord() call ILexicalData.isCommonWord() new && ! call ILexicalData.isStopLabel() call ILexicalData.isStopLabel() call ILexicalData.isStopLabel() call ILexicalData.isStopLabel() call ILexicalData.isStopLabel() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new