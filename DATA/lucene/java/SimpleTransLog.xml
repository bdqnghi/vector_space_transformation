org.apache.lucene.replicator.nrt java.io.Closeable import java.io.EOFException import java.io.IOException import java.nio.ByteBuffer import java.nio.channels.FileChannel import java.nio.file.Path import java.nio.file.StandardOpenOption import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.store.DataInput import org.apache.lucene.store.RAMOutputStream import class org.apache.lucene.replicator.nrt.SimpleTransLog super super implements byte decl byte ByteBuffer byte RAMOutputStream byte FileChannel public synchronized public synchronized throws return call FileChannel.position() call FileChannel.position() call FileChannel.position() call FileChannel.position() call FileChannel.position() public synchronized public synchronized throws assert call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() == call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) return public synchronized public synchronized throws assert call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() == call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) return public synchronized public synchronized throws assert call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() == call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() return decl byte long int private synchronized private synchronized throws decl_stmt long = call FileChannel.position() call FileChannel.position() call FileChannel.position() call FileChannel.position() call FileChannel.position() decl_stmt int = int call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() call org.apache.lucene.store.RAMOutputStream.getFilePointer() decl_stmt byte = new call org.apache.lucene.store.RAMOutputStream.writeTo(DataOutput) call org.apache.lucene.store.RAMOutputStream.writeTo(DataOutput) call org.apache.lucene.store.RAMOutputStream.writeTo(DataOutput) call org.apache.lucene.store.RAMOutputStream.writeTo(DataOutput) call org.apache.lucene.store.RAMOutputStream.writeTo(DataOutput) call org.apache.lucene.store.RAMOutputStream.reset() call org.apache.lucene.store.RAMOutputStream.reset() call org.apache.lucene.store.RAMOutputStream.reset() call org.apache.lucene.store.RAMOutputStream.reset() call org.apache.lucene.store.RAMOutputStream.reset() = >> = >> = >> = byte call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() return int private private throws decl_stmt int = while != -= call java.nio.channels.FileChannel.write(ByteBuffer) call java.nio.channels.FileChannel.write(ByteBuffer) call java.nio.channels.FileChannel.write(ByteBuffer) call java.nio.channels.FileChannel.write(ByteBuffer) call java.nio.channels.FileChannel.write(ByteBuffer) int long int private private throws decl_stmt int = - decl_stmt long = + while < decl_stmt int = call java.nio.channels.FileChannel.read(ByteBuffer) call java.nio.channels.FileChannel.read(ByteBuffer) call java.nio.channels.FileChannel.read(ByteBuffer) call java.nio.channels.FileChannel.read(ByteBuffer) call java.nio.channels.FileChannel.read(ByteBuffer) if < throw new += decl byte ByteBuffer decl byte long int ByteArrayDataInput byte public public throws try = new decl_stmt byte = new decl_stmt ByteBuffer = decl_stmt org.apache.lucene.store.ByteArrayDataInput = new decl_stmt long = while < call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() += decl_stmt int = & << | & << | & << | & decl_stmt byte = new += call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) decl_stmt byte = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() switch case break case break case break default: throw new + assert == String Document String String String private private throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt java.lang.String = if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt java.lang.String = if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt java.lang.String = if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new String private private throws decl_stmt java.lang.String = private synchronized private synchronized throws assert : + + + call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() private synchronized private synchronized throws if == call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) byte else call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) call org.apache.lucene.store.RAMOutputStream.writeByte(byte) byte call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() call RAMOutputStream.writeString() byte private private throws decl_stmt byte = if == return else if == return else throw new + public synchronized public synchronized throws call FileChannel.close() call FileChannel.close() call FileChannel.close() call FileChannel.close() call FileChannel.close()