org.apache.solr.cloud org.apache.commons.lang.StringUtils import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.JSONTestUtil import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.AbstractUpdateRequest import org.apache.solr.client.solrj.request.ContentStreamUpdateRequest import org.apache.solr.client.solrj.request.CoreAdminRequest.Create import org.apache.solr.client.solrj.request.CoreAdminRequest.Unload import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.client.solrj.response.UpdateResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CollectionParams.CollectionAction import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.UpdateParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.NamedList import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.RTimer import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.Callable import java.util.concurrent.CompletionService import java.util.concurrent.ExecutorCompletionService import java.util.concurrent.Future import java.util.concurrent.SynchronousQueue import java.util.concurrent.ThreadPoolExecutor import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicInteger import class annotation annotation org.apache.solr.cloud.BasicDistributedZkTest super super extends String String String decl Map Logger decl CompletionService String String String boolean ThreadPoolExecutor String String decl Set AtomicInteger StringBuilder protected protected if else decl_stmt java.lang.StringBuilder = new for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() UpdateRequest int ModifiableSolrParams UpdateRequest decl String ZkStateReader long = public = public throws decl_stmt org.apache.solr.common.cloud.ZkStateReader = for = < ++ call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) + decl_stmt int = for : ++ - - - new new new decl_stmt java.lang.String = new for = < ++ = + for = < ++ for : new + new + new + new + new + new new new + new + new new new new new new new new new new new new - new - new - new - new new new new new new + + + new new new new + new new + if >= for = < ++ new new new new new new new new decl_stmt long = new for : + new decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) + decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() + decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.setCommitWithin() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() if long ClusterState long RTimer DocCollection private private throws decl_stmt org.apache.solr.util.RTimer = new decl_stmt long = long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() + decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt org.apache.solr.common.cloud.DocCollection = call org.apache.solr.common.cloud.ClusterState.getCollection(String) call org.apache.solr.common.cloud.ClusterState.getCollection(String) call org.apache.solr.common.cloud.ClusterState.getCollection(String) call org.apache.solr.common.cloud.ClusterState.getCollection(String) call org.apache.solr.common.cloud.ClusterState.getCollection(String) decl_stmt long = - while != && > long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() = if != for : new long SolrQuery QueryResponse long long private private throws decl_stmt long = for : decl_stmt long = - for : try = decl_stmt org.apache.solr.client.solrj.SolrQuery = new call org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean) call org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean) call org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean) call org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean) call org.apache.solr.client.solrj.SolrQuery.setDistrib(boolean) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt long = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() if == - = += else if != return - return long decl ArrayList long String decl List String String decl ArrayList decl ArrayList SolrQuery long decl Map decl List private private throws decl_stmt org.apache.solr.client.solrj.SolrQuery = new decl_stmt java.util.Map < = new <> for : decl_stmt java.util.List < = new <> for : call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = + + + <= if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.List < = new <> decl_stmt java.util.ArrayList < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() * for : decl_stmt java.lang.String = call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() if == || call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() < call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() = + + + <= + + + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() = + + + <= + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt long = decl_stmt java.util.ArrayList < = new <> call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() if || call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() < decl_stmt java.lang.String = += if call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() else decl_stmt java.util.ArrayList < = new <> for : if == || == call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() decl_stmt java.lang.String = call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() for : + + + = new decl_stmt long = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() += for : + < int SolrClient String ThreadPoolExecutor private private throws decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt java.lang.String = try final final = decl_stmt java.util.concurrent.ThreadPoolExecutor = try = new new < new decl_stmt int = finally if != try catch throw String int Create protected protected final final final final final final for = < ++ decl_stmt int final final = call java.util.concurrent.ThreadPoolExecutor.execute(Runnable) call java.util.concurrent.ThreadPoolExecutor.execute(Runnable) call java.util.concurrent.ThreadPoolExecutor.execute(Runnable) call java.util.concurrent.ThreadPoolExecutor.execute(Runnable) call java.util.concurrent.ThreadPoolExecutor.execute(Runnable) decl_stmt Create = new call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() + call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() try decl_stmt java.lang.String = call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() catch throw new String protected protected decl_stmt java.lang.String = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - return SolrRequest decl List String ModifiableSolrParams CollectionAdminResponse int protected protected < < throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) if != call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt int = > : decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.SolrRequest = new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new if == decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - try = call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() else call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() call CollectionAdminResponse.setResponse() return ClusterState ZkNodeProps protected protected decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt org.apache.solr.common.cloud.ZkNodeProps = call org.apache.solr.common.cloud.ClusterState.getLeader(String,String) call org.apache.solr.common.cloud.ClusterState.getLeader(String,String) call org.apache.solr.common.cloud.ClusterState.getLeader(String,String) call org.apache.solr.common.cloud.ClusterState.getLeader(String,String) call org.apache.solr.common.cloud.ClusterState.getLeader(String,String) if == throw new + + + return new ModifiableSolrParams int String UpdateResponse SolrDocument String SolrClient String String String QueryResponse private private final final throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt org.apache.solr.common.params.ModifiableSolrParams final final = new call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) decl_stmt int final final = for = < ++ decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt org.apache.solr.common.SolrInputDocument = new decl_stmt UpdateResponse = + call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() = call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) + call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() for = < ++ decl_stmt java.lang.String final final = + + decl_stmt org.apache.solr.client.solrj.response.QueryResponse = new + + call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() + + call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.common.SolrDocument = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() for : new + + + + call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) QueryRequest int decl List NamedList String SolrInputDocument private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.common.SolrInputDocument = - for : try catch = decl_stmt java.util.List < = new <> decl_stmt int = for : += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new for : += decl_stmt org.apache.solr.common.util.NamedList = decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != throw new long ContentStreamUpdateRequest long decl NamedList private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt long = decl_stmt org.apache.solr.client.solrj.request.ContentStreamUpdateRequest = new call org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(File,String) call org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(File,String) call org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(File,String) call org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(File,String) call org.apache.solr.client.solrj.request.ContentStreamUpdateRequest.addFile(File,String) call ContentStreamUpdateRequest.setCommitWithin() call ContentStreamUpdateRequest.setCommitWithin() call ContentStreamUpdateRequest.setCommitWithin() call ContentStreamUpdateRequest.setCommitWithin() call ContentStreamUpdateRequest.setCommitWithin() call ContentStreamUpdateRequest.setAction() call ContentStreamUpdateRequest.setAction() call ContentStreamUpdateRequest.setAction() call ContentStreamUpdateRequest.setAction() call ContentStreamUpdateRequest.setAction() decl_stmt org.apache.solr.common.util.NamedList < = decl_stmt long = + NamedList NamedList NamedList decl NamedList QueryRequest NamedList ModifiableSolrParams private private throws try = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new decl_stmt org.apache.solr.common.util.NamedList < = decl_stmt org.apache.solr.common.util.NamedList = call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) return call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) long String String long decl Map SolrClient SolrClient SolrClient SolrClient String SolrClient long long int decl Future Unload SolrQuery decl List ZkStateReader ZkCoreNodeProps long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - while != && call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) decl_stmt org.apache.solr.client.solrj.SolrQuery = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) decl_stmt java.util.Map < = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new try = decl_stmt Unload = new call Unload.setCoreName() call Unload.setCoreName() call Unload.setCoreName() call Unload.setCoreName() call Unload.setCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() decl_stmt int = while call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(String,String,int) call org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(String,String,int) call org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(String,String,int) call org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(String,String,int) call org.apache.solr.common.cloud.ZkStateReader.getLeaderUrl(String,String,int) if -- == SolrQuery SolrClient String long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - try = decl_stmt org.apache.solr.client.solrj.SolrQuery = new decl_stmt long = SolrClient String private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - try = long long SolrClient SolrClient SolrClient SolrClient String SolrClient long long decl Future SolrQuery decl List long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.client.solrj.SolrClient = decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - while != && call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() if == return call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) call org.apache.solr.client.solrj.SolrClient.commit(String,boolean,boolean) decl_stmt org.apache.solr.client.solrj.SolrQuery = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt long = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = private private < Callable Create private private final final < final final final final final final decl_stmt org.apache.solr.core.Callable = try = decl_stmt Create = new call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setRoles() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() + call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() call Create.setCollection() if call Create.setCoreNodeName() call Create.setCoreNodeName() call Create.setCoreNodeName() call Create.setCoreNodeName() call Create.setCoreNodeName() + call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() if == call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setNumShards() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() if != call Create.setShardId() call Create.setShardId() call Create.setShardId() call Create.setShardId() call Create.setShardId() catch return call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() + long long decl Future long SolrQuery long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) while != && call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() if == return call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt long = new decl_stmt long = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new + decl_stmt long = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new + decl_stmt org.apache.solr.client.solrj.SolrQuery = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() decl_stmt long = + = new call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() = + + = + + call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() = + call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() call SolrQuery.set() = call SolrQuery.remove() call SolrQuery.remove() call SolrQuery.remove() call SolrQuery.remove() call SolrQuery.remove() = - SolrInputDocument protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = new return decl List int SolrClient protected protected throws decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt int = & call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.solr.client.solrj.SolrClient = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) Create String decl Future Callable int decl List int private private final final throws decl_stmt java.util.List final final final < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt int = for final final : ++ decl_stmt java.lang.String final final = - call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - decl_stmt int final final = decl_stmt org.apache.solr.core.Callable = try = decl_stmt Create = new call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setCoreName() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() call Create.setDataDir() catch return call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() while != && call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() if == return call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() HttpSolrClient protected protected try decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = + + return catch throw new QueryResponse protected protected throws if return if decl_stmt org.apache.solr.client.solrj.response.QueryResponse = return decl List public public throws if != for < : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() = decl_stmt java.util.List < = call java.util.concurrent.ThreadPoolExecutor.shutdownNow() call java.util.concurrent.ThreadPoolExecutor.shutdownNow() call java.util.concurrent.ThreadPoolExecutor.shutdownNow() call java.util.concurrent.ThreadPoolExecutor.shutdownNow() call java.util.concurrent.ThreadPoolExecutor.shutdownNow() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty()