org.apache.solr.handler org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.UpdateResponse import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.update.CdcrUpdateLog import org.apache.solr.update.UpdateLog import org.apache.solr.update.processor.CdcrUpdateProcessor import org.apache.solr.update.processor.DistributedUpdateProcessor import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.nio.charset.Charset import java.util.List import class org.apache.solr.handler.CdcrReplicator super super implements CdcrReplicatorState int Logger decl CdcrLogReader decl CdcrUpdateLog Object decl CdcrUpdateLog UpdateRequest decl CdcrLogReader public public decl_stmt CdcrLogReader = call org.apache.solr.handler.CdcrReplicatorState.getLogReader() call org.apache.solr.handler.CdcrReplicatorState.getLogReader() call org.apache.solr.handler.CdcrReplicatorState.getLogReader() call org.apache.solr.handler.CdcrReplicatorState.getLogReader() call org.apache.solr.handler.CdcrReplicatorState.getLogReader() decl_stmt CdcrLogReader = if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() return try decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call decl CdcrUpdateLog.setParam() call decl CdcrUpdateLog.setParam() call decl CdcrUpdateLog.setParam() call decl CdcrUpdateLog.setParam() call decl CdcrUpdateLog.setParam() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() decl_stmt long = = call decl CdcrUpdateLog.getSubReader() call decl CdcrUpdateLog.getSubReader() call decl CdcrUpdateLog.getSubReader() call decl CdcrUpdateLog.getSubReader() call decl CdcrUpdateLog.getSubReader() for = < ++ decl_stmt java.lang.Object = call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() if == break if decl_stmt java.util.List < = call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() if != && call Object.size() call Object.size() call Object.size() call Object.size() call Object.size() > call decl CdcrLogReader.resetToLastPosition() call decl CdcrLogReader.resetToLastPosition() call decl CdcrLogReader.resetToLastPosition() call decl CdcrLogReader.resetToLastPosition() call decl CdcrLogReader.resetToLastPosition() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() = call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() call decl CdcrLogReader.next() += call Object.size() call Object.size() call Object.size() call Object.size() call Object.size() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() ++ call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() call decl CdcrUpdateLog.clear() else decl_stmt java.util.List < = call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() call decl CdcrUpdateLog.getDocuments() if != && call Object.size() call Object.size() call Object.size() call Object.size() call Object.size() > += call Object.size() call Object.size() call Object.size() call Object.size() call Object.size() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call decl CdcrUpdateLog.forwardSeek() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() call org.apache.solr.handler.CdcrReplicatorState.getTargetCollection() catch finally call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() if != call decl CdcrLogReader.close() call decl CdcrLogReader.close() call decl CdcrLogReader.close() call decl CdcrLogReader.close() call decl CdcrLogReader.close() UpdateResponse private private throws decl_stmt UpdateResponse = call org.apache.solr.handler.CdcrReplicatorState.getClient() call org.apache.solr.handler.CdcrReplicatorState.getClient() call org.apache.solr.handler.CdcrReplicatorState.getClient() call org.apache.solr.handler.CdcrReplicatorState.getClient() call org.apache.solr.handler.CdcrReplicatorState.getClient() if call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() call UpdateResponse.getStatus() != throw new call org.apache.solr.handler.CdcrReplicatorState.resetConsecutiveErrors() call org.apache.solr.handler.CdcrReplicatorState.resetConsecutiveErrors() call org.apache.solr.handler.CdcrReplicatorState.resetConsecutiveErrors() call org.apache.solr.handler.CdcrReplicatorState.resetConsecutiveErrors() call org.apache.solr.handler.CdcrReplicatorState.resetConsecutiveErrors() int List int private private decl_stmt java.util.List = decl_stmt int = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) decl_stmt int = & return == || == UpdateRequest UpdateResponse private private if instanceof decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = decl_stmt UpdateResponse = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) else if instanceof call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) call org.apache.solr.handler.CdcrReplicatorState.reportError(ErrorType) int int SolrInputDocument long decl byte String List private private decl_stmt java.util.List = decl_stmt int = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) decl_stmt int = & decl_stmt long = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() call org.apache.solr.handler.CdcrReplicatorState.getBenchmarkTimer() switch case decl_stmt org.apache.solr.common.SolrInputDocument = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() - return case decl_stmt byte = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) new return case decl_stmt java.lang.String = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) return case return default: throw new +