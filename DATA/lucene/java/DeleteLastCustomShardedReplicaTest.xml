org.apache.solr.cloud org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.ImplicitDocRouter import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.Utils import org.apache.solr.util.TimeOut import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.TimeUnit import static static org.apache.solr.cloud.OverseerCollectionMessageHandler.NUM_SLICES import static static org.apache.solr.cloud.OverseerCollectionMessageHandler.SHARDS_PROP import static static org.apache.solr.common.util.Utils.makeMap import static static org.apache.solr.common.params.CollectionParams.CollectionAction.DELETEREPLICA import class org.apache.solr.cloud.DeleteLastCustomShardedReplicaTest super super extends Logger protected protected return int String int DocCollection Replica decl Map decl Map = public = public throws try = decl_stmt int = decl_stmt int = decl_stmt java.util.Map < = decl_stmt java.util.Map < < = new <> decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt org.apache.solr.common.cloud.Replica = call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) - Slice boolean SolrRequest Map DocCollection SolrParams TimeOut int protected protected final final throws decl_stmt java.util.Map = decl_stmt org.apache.solr.common.params.SolrParams = new decl_stmt org.apache.solr.client.solrj.SolrRequest = new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl_stmt org.apache.solr.util.TimeOut = new decl_stmt boolean = decl_stmt org.apache.solr.common.cloud.DocCollection = while ! call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() = decl_stmt org.apache.solr.common.cloud.Slice final final = call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) decl_stmt int final final = == : call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() = == if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) break