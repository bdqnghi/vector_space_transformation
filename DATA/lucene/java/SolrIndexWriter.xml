org.apache.solr.update java.io.IOException import java.lang.invoke.MethodHandles import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.codecs.Codec import org.apache.lucene.index.IndexDeletionPolicy import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.store.Directory import org.apache.lucene.util.InfoStream import org.apache.solr.common.util.IOUtils import org.apache.solr.core.DirectoryFactory.DirContext import org.apache.solr.core.DirectoryFactory import org.apache.solr.core.SolrCore import org.apache.solr.schema.IndexSchema import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.SolrIndexWriter super super extends Object AtomicLong boolean Logger String DirectoryFactory InfoStream Directory AtomicLong String Directory SolrIndexWriter public static public static throws decl_stmt org.apache.solr.update.SolrIndexWriter = decl_stmt org.apache.lucene.store.Directory final final = call DirectoryFactory.get() call DirectoryFactory.get() call DirectoryFactory.get() call DirectoryFactory.get() call DirectoryFactory.get() try = new call org.apache.solr.update.SolrIndexWriter.setDirectoryFactory(DirectoryFactory) call org.apache.solr.update.SolrIndexWriter.setDirectoryFactory(DirectoryFactory) call org.apache.solr.update.SolrIndexWriter.setDirectoryFactory(DirectoryFactory) call org.apache.solr.update.SolrIndexWriter.setDirectoryFactory(DirectoryFactory) call org.apache.solr.update.SolrIndexWriter.setDirectoryFactory(DirectoryFactory) return finally if == && != call DirectoryFactory.doneWithDirectory() call DirectoryFactory.doneWithDirectory() call DirectoryFactory.doneWithDirectory() call DirectoryFactory.doneWithDirectory() call DirectoryFactory.doneWithDirectory() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() private private = public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + try catch if instanceof throw call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally public public throws call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + try catch if instanceof throw call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally boolean private private throws decl_stmt boolean = synchronized if ! = = if if != call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call java.util.concurrent.atomic.AtomicLong.incrementAndGet() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() call DirectoryFactory.release() protected protected throws try if ! assert : call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally