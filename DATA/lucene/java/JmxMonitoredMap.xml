org.apache.solr.core javax.management.Attribute import javax.management.AttributeList import javax.management.AttributeNotFoundException import javax.management.DynamicMBean import javax.management.InvalidAttributeValueException import javax.management.MBeanAttributeInfo import javax.management.MBeanException import javax.management.MBeanInfo import javax.management.MBeanServer import javax.management.MBeanServerFactory import javax.management.MalformedObjectNameException import javax.management.ObjectName import javax.management.Query import javax.management.QueryExp import javax.management.ReflectionException import javax.management.openmbean.OpenMBeanAttributeInfoSupport import javax.management.openmbean.OpenType import javax.management.openmbean.SimpleType import javax.management.remote.JMXConnectorServer import javax.management.remote.JMXConnectorServerFactory import javax.management.remote.JMXServiceURL import java.lang.invoke.MethodHandles import java.lang.reflect.Field import java.lang.reflect.Method import java.util.ArrayList import java.util.HashSet import java.util.Hashtable import java.util.List import java.util.Locale import java.util.Set import java.util.concurrent.ConcurrentHashMap import org.apache.lucene.store.AlreadyClosedException import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrConfig.JmxConfiguration import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.NAME import class super super extends String boolean Logger String MBeanServer ObjectName decl Set QueryExp public public if != decl_stmt QueryExp = decl_stmt java.util.Set < = try decl_stmt ObjectName = new + = call MBeanServer.queryNames() call MBeanServer.queryNames() call MBeanServer.queryNames() call MBeanServer.queryNames() call MBeanServer.queryNames() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if != for : try call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() ObjectName SolrDynamicMBean public public if != && != try decl_stmt ObjectName = if call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() decl_stmt SolrDynamicMBean = new call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return SolrInfoMBean public public decl_stmt org.apache.solr.core.SolrInfoMBean = if != try catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return ObjectName private private if == return try decl_stmt ObjectName = if call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() call MBeanServer.isRegistered() && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() catch throw new + decl Hashtable private private throws decl_stmt java.util.Hashtable < = new <> call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() if != && ! call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() return public public return public public return String Class OpenType decl MBeanAttributeInfo decl ArrayList NamedList public public decl_stmt java.util.ArrayList < = new <> for : call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new try decl_stmt org.apache.solr.common.util.NamedList = if = if != for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) if continue decl_stmt java.lang.Class = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt java.awt.font.OpenType = if call Class.equals() call Class.equals() call Class.equals() call Class.equals() call Class.equals() || == call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) else call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) catch if ! instanceof call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl_stmt javax.management.MBeanAttributeInfo = call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() return new SimpleType private private try for : if decl_stmt javax.management.openmbean.SimpleType = if call SimpleType.getTypeName() call SimpleType.getTypeName() call SimpleType.getTypeName() call SimpleType.getTypeName() call SimpleType.getTypeName() return catch throw new return NamedList Method String NamedList Object public public throws decl_stmt java.lang.Object if = else if && != && > try decl_stmt java.lang.String = + + decl_stmt com.sun.jdi.Method = = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch throw new else decl_stmt org.apache.solr.common.util.NamedList = if decl_stmt org.apache.solr.common.util.NamedList = if != = if == = = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != for : if call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() return return call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return AttributeList public public decl_stmt javax.swing.text.html.parser.AttributeList = new for : try call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return public public throws throw new public public throw new public public throws throw new