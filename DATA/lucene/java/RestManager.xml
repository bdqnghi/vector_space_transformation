org.apache.solr.rest java.io.FileNotFoundException import java.io.IOException import java.lang.invoke.MethodHandles import java.lang.reflect.Constructor import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.TreeMap import java.util.regex.Matcher import java.util.regex.Pattern import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrResourceLoader import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.rest.ManagedResourceStorage.StorageIO import org.noggit.ObjectBuilder import org.restlet.Request import org.restlet.data.MediaType import org.restlet.data.Method import org.restlet.data.Status import org.restlet.representation.Representation import org.restlet.resource.ResourceException import org.restlet.routing.Router import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.rest.RestManager Pattern decl Map Logger String String SolrResourceLoader boolean RestManagerManagedResource Registry Router Router StorageIO decl Map public < public < decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public < public < return StringBuilder boolean private private decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt boolean = for : if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public < public < return Matcher Matcher ManagedResourceRegistration String public synchronized public synchronized < extends extends if == throw new decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if ! call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() decl_stmt java.lang.String = throw new decl_stmt java.util.regex.Matcher = if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() throw new call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) + decl_stmt ManagedResourceRegistration = if != if ! call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() decl_stmt java.lang.String = call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() call ManagedResourceRegistration.implClass() throw new if != call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if != SolrQueryRequest RestManager public static public static if == throw new decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.rest.RestManager = != call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() : if == throw new return String public static public static decl_stmt java.lang.String = if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = + return String String RestManager String int public public throws decl_stmt java.lang.String = decl_stmt org.apache.solr.rest.RestManager = = call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) if == decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) if != - decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) call org.apache.solr.rest.RestManager.getManagedResourceOrNull(String) if != if ! instanceof decl_stmt java.lang.String = throw new = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if == if || = else throw new + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + public public try catch return new public public try catch return new RestManager public public if != try catch else try decl_stmt org.apache.solr.rest.RestManager = call org.apache.solr.rest.RestManager.deleteManagedResource(ManagedResource) call org.apache.solr.rest.RestManager.deleteManagedResource(ManagedResource) call org.apache.solr.rest.RestManager.deleteManagedResource(ManagedResource) call org.apache.solr.rest.RestManager.deleteManagedResource(ManagedResource) call org.apache.solr.rest.RestManager.deleteManagedResource(ManagedResource) catch return new public public try catch return new String String Object protected protected if == if ! decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt java.lang.String = try = catch decl_stmt java.lang.String = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new if == || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() == throw new decl_stmt java.lang.Object = try = catch decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return protected protected Object String Object protected synchronized protected synchronized throws decl_stmt java.lang.String = decl_stmt java.lang.Object = try = catch catch throw new + + + decl_stmt java.lang.Object = if == = new <> if != decl Map String ManagedResourceRegistration String decl Class decl List protected protected < throws if == return decl_stmt java.util.List < = < for : decl_stmt java.util.Map < = < decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.Class < extends extends = decl_stmt ManagedResourceRegistration = if == decl Map String public synchronized public synchronized if instanceof decl_stmt java.lang.String = call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() decl_stmt java.util.Map < = < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else throw new + decl Map String String decl List decl Class protected protected decl_stmt java.util.Map < = < decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.lang.Class < extends extends = decl_stmt java.util.List < < = new <> for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throw new String String decl List Matcher public public decl_stmt java.lang.String = call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() call RestManagerManagedResource.getRequest() decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if ! call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() throw new decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.util.List < < = new <> for : if ! continue if continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call RestManagerManagedResource.getSolrResponse() call RestManagerManagedResource.getSolrResponse() call RestManagerManagedResource.getSolrResponse() call RestManagerManagedResource.getSolrResponse() call RestManagerManagedResource.getSolrResponse() public public < throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if == throw new = = = call org.apache.solr.core.SolrResourceLoader.getManagedResourceRegistry() call org.apache.solr.core.SolrResourceLoader.getManagedResourceRegistry() call org.apache.solr.core.SolrResourceLoader.getManagedResourceRegistry() call org.apache.solr.core.SolrResourceLoader.getManagedResourceRegistry() call org.apache.solr.core.SolrResourceLoader.getManagedResourceRegistry() = new call RestManagerManagedResource.loadManagedDataAndNotify() call RestManagerManagedResource.loadManagedDataAndNotify() call RestManagerManagedResource.loadManagedDataAndNotify() call RestManagerManagedResource.loadManagedDataAndNotify() call RestManagerManagedResource.loadManagedDataAndNotify() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() for : call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = ManagedResource ManagedResourceRegistration public synchronized public synchronized < extends extends decl_stmt org.apache.solr.rest.ManagedResource = decl_stmt ManagedResourceRegistration = call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() if == call Registry.registerManagedResource() call Registry.registerManagedResource() call Registry.registerManagedResource() call Registry.registerManagedResource() call Registry.registerManagedResource() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() else = return Matcher String Router String ManagedResource String boolean private synchronized private synchronized decl_stmt java.lang.String = decl_stmt org.apache.solr.rest.ManagedResource = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) decl_stmt boolean = call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() assert : + + decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt Router = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) : if != return ManagedResource String decl Constructor protected protected throws decl_stmt org.apache.solr.rest.ManagedResource = try decl_stmt java.lang.reflect.Constructor < extends extends = = call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call org.apache.solr.rest.ManagedResource.loadManagedDataAndNotify(List) call org.apache.solr.rest.ManagedResource.loadManagedDataAndNotify(List) call org.apache.solr.rest.ManagedResource.loadManagedDataAndNotify(List) call org.apache.solr.rest.ManagedResource.loadManagedDataAndNotify(List) call org.apache.solr.rest.ManagedResource.loadManagedDataAndNotify(List) catch decl_stmt java.lang.String = throw new return ManagedResource public public decl_stmt org.apache.solr.rest.ManagedResource = if == throw new + return public synchronized public synchronized return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() String ManagedResourceRegistration int String public synchronized public synchronized decl_stmt java.lang.String = decl_stmt ManagedResourceRegistration = call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() decl_stmt int = call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() call ManagedResourceRegistration.observers() if > decl_stmt java.lang.String = throw new call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call Registry.registered() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + String int public synchronized public synchronized if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = else throw new + decl_stmt int = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) protected protected call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if +