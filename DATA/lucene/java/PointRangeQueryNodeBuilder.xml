org.apache.lucene.queryparser.flexible.standard.builders org.apache.lucene.document.DoublePoint import org.apache.lucene.document.FloatPoint import org.apache.lucene.document.IntPoint import org.apache.lucene.document.LongPoint import org.apache.lucene.index.PointValues import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.util.StringUtils import org.apache.lucene.queryparser.flexible.messages.MessageImpl import org.apache.lucene.queryparser.flexible.standard.config.PointsConfig import org.apache.lucene.queryparser.flexible.standard.nodes.PointQueryNode import org.apache.lucene.queryparser.flexible.standard.nodes.PointRangeQueryNode import org.apache.lucene.search.Query import class org.apache.lucene.queryparser.flexible.standard.builders.PointRangeQueryNodeBuilder super super implements Double Double PointsConfig Number boolean decl Class Number PointQueryNode boolean String PointQueryNode PointRangeQueryNode public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.nodes.PointRangeQueryNode = decl_stmt org.apache.lucene.queryparser.flexible.standard.nodes.PointQueryNode = call PointRangeQueryNode.getLowerBound() call PointRangeQueryNode.getLowerBound() call PointRangeQueryNode.getLowerBound() call PointRangeQueryNode.getLowerBound() call PointRangeQueryNode.getLowerBound() decl_stmt org.apache.lucene.queryparser.flexible.standard.nodes.PointQueryNode = call PointRangeQueryNode.getUpperBound() call PointRangeQueryNode.getUpperBound() call PointRangeQueryNode.getUpperBound() call PointRangeQueryNode.getUpperBound() call PointRangeQueryNode.getUpperBound() decl_stmt java.lang.Number = call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() decl_stmt java.lang.Number = call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() call PointQueryNode.getValue() decl_stmt org.apache.lucene.queryparser.flexible.standard.config.PointsConfig = call PointRangeQueryNode.getPointsConfig() call PointRangeQueryNode.getPointsConfig() call PointRangeQueryNode.getPointsConfig() call PointRangeQueryNode.getPointsConfig() call PointRangeQueryNode.getPointsConfig() decl_stmt java.lang.Class < extends extends = call org.apache.lucene.queryparser.flexible.standard.config.PointsConfig.getType() call org.apache.lucene.queryparser.flexible.standard.config.PointsConfig.getType() call org.apache.lucene.queryparser.flexible.standard.config.PointsConfig.getType() call org.apache.lucene.queryparser.flexible.standard.config.PointsConfig.getType() call org.apache.lucene.queryparser.flexible.standard.config.PointsConfig.getType() decl_stmt java.lang.String = call PointRangeQueryNode.getField() call PointRangeQueryNode.getField() call PointRangeQueryNode.getField() call PointRangeQueryNode.getField() call PointRangeQueryNode.getField() decl_stmt boolean = call PointRangeQueryNode.isLowerInclusive() call PointRangeQueryNode.isLowerInclusive() call PointRangeQueryNode.isLowerInclusive() call PointRangeQueryNode.isLowerInclusive() call PointRangeQueryNode.isLowerInclusive() decl_stmt boolean = call PointRangeQueryNode.isUpperInclusive() call PointRangeQueryNode.isUpperInclusive() call PointRangeQueryNode.isUpperInclusive() call PointRangeQueryNode.isUpperInclusive() call PointRangeQueryNode.isUpperInclusive() if decl_stmt java.lang.Integer = if == = if == = + decl_stmt java.lang.Integer = if == = if == = - return else if decl_stmt java.lang.Long = if == = if == = + decl_stmt java.lang.Long = if == = if == = - return else if decl_stmt java.lang.Float = if == = if == = decl_stmt java.lang.Float = if == = if == = return else if decl_stmt java.lang.Double = if == = if == = decl_stmt java.lang.Double = if == = if == = return else throw new new