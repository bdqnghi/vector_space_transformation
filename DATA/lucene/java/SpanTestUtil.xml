org.apache.lucene.search.spans java.io.IOException import org.apache.lucene.index.Term import org.apache.lucene.search.QueryUtils import static static org.junit.Assert.* import class org.apache.lucene.search.spans.SpanTestUtil public static public static return new public static public static return new new decl SpanQuery public static public static decl_stmt org.apache.lucene.search.spans.SpanQuery = new for = < ++ = return public static public static return new public static public static return new public static public static return new public static public static return new public static public static return new public static public static return new public static public static return new decl SpanQuery public static public static decl_stmt org.apache.lucene.search.spans.SpanQuery = new for = < ++ = return public static public static return new decl SpanNearQuery public static public static decl_stmt org.apache.lucene.util.fst.Builder = call decl SpanNearQuery.setSlop() call decl SpanNearQuery.setSlop() call decl SpanNearQuery.setSlop() call decl SpanNearQuery.setSlop() call decl SpanNearQuery.setSlop() for : call decl SpanNearQuery.addClause() call decl SpanNearQuery.addClause() call decl SpanNearQuery.addClause() call decl SpanNearQuery.addClause() call decl SpanNearQuery.addClause() new new return call decl SpanNearQuery.build() call decl SpanNearQuery.build() call decl SpanNearQuery.build() call decl SpanNearQuery.build() call decl SpanNearQuery.build() public static public static return new public static public static throws if >= else if >= if != - - if != public static public static throws if != - -