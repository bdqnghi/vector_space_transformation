org.apache.lucene.search.spell java.io.IOException import java.util.Comparator import java.util.PriorityQueue import java.util.Queue import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import org.apache.lucene.search.spell.SuggestMode import org.apache.lucene.util.BytesRef import class org.apache.lucene.search.spell.WordBreakSpellChecker int int int Term int int decl Queue decl SuggestWord decl Comparator int int int public public throws if < return new if == = if == = decl_stmt int = > : decl_stmt java.util.Comparator < = == new : new decl_stmt java.util.Queue < = new <> decl_stmt int = if > && == return new decl_stmt int = if == = == : new decl_stmt SuggestWord = new call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() for = call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() - >= -- = call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() return int SuggestWord Term String decl int decl Queue String int int decl CombineSuggestion decl Comparator int int CombineSuggestionWrapper int String int decl int int public public throws if < return new decl_stmt int = if != = new for = < ++ = decl_stmt int = > : decl_stmt java.util.Comparator < = new decl_stmt java.util.Queue < = new <> decl_stmt int = for = < - ++ if continue decl_stmt java.lang.String = decl_stmt int = call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if > continue decl_stmt int = decl_stmt int = if != = = decl_stmt java.lang.String = decl_stmt int = for = + < && - <= ++ if break decl_stmt java.lang.String = decl_stmt int = call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() += += if > break if != = = decl_stmt org.apache.lucene.index.Term = new decl_stmt int = if != || >= if != || == if >= decl_stmt int = new - + = for = < ++ = + decl_stmt SuggestWord = new = = - = call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() decl_stmt CombineSuggestionWrapper = new new - call decl Queue.offer() call decl Queue.offer() call decl Queue.offer() call decl Queue.offer() call decl Queue.offer() if call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() > call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() call decl Queue.poll() ++ if == break decl_stmt CombineSuggestion = new call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() for = call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() - >= -- = call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() return SuggestWord int int int String String String int SuggestWordArrayWrapper int SuggestWord int private private < throws decl_stmt java.lang.String = decl_stmt int = call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int = if < = if < * return decl_stmt int = for = <= - ++ decl_stmt int = call java.lang.String.offsetByCodePoints(int,int) call java.lang.String.offsetByCodePoints(int,int) call java.lang.String.offsetByCodePoints(int,int) call java.lang.String.offsetByCodePoints(int,int) call java.lang.String.offsetByCodePoints(int,int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt SuggestWord = if >= decl_stmt SuggestWord = if >= decl_stmt SuggestWordArrayWrapper = new if > decl_stmt int = + if <= decl_stmt int = new += ++ ++ if >= break return decl SuggestWord private private decl_stmt SuggestWord = new + - = return decl SuggestWord SuggestWord int private private decl_stmt SuggestWord = new + decl_stmt int = + for = < ++ decl_stmt SuggestWord = new = = = = = = - = - = return Term SuggestWord int private private throws decl_stmt org.apache.lucene.index.Term = new decl_stmt int = decl_stmt SuggestWord = new = = = return public public return public public return public public return public public return public public return public public = public public = public public = public public = public public = public public if != return - if != return - return public public if != return - if != return - return public public if != return - if != return - return