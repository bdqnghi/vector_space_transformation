org.apache.solr.util.stats java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicLong import class org.apache.solr.util.stats.Meter AtomicLong TimeUnit long Clock String EWMA long EWMA AtomicLong EWMA public public return public public return call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() call EWMA.tick() public public public public call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call java.util.concurrent.atomic.AtomicLong.addAndGet(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) call org.apache.solr.util.stats.EWMA.update(long) long long long long private private decl_stmt long final final = call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() decl_stmt long final final = call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() decl_stmt long final final = - if > && call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) decl_stmt long final final = / for = < ++ public public return call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() public public return call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) public public return call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) long public public if == return else decl_stmt long final final = call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() call org.apache.solr.util.stats.Clock.getTick() - return / double public public return call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) call org.apache.solr.util.stats.EWMA.getRate(TimeUnit) private private return * double call TimeUnit.toNanos() call TimeUnit.toNanos() call TimeUnit.toNanos() call TimeUnit.toNanos() call TimeUnit.toNanos()