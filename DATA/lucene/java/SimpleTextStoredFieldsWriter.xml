org.apache.lucene.codecs.simpletext java.io.IOException import org.apache.lucene.codecs.StoredFieldsWriter import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexableField import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IOUtils import class org.apache.lucene.codecs.simpletext.SimpleTextStoredFieldsWriter super super extends BytesRef BytesRef BytesRef BytesRef String BytesRef BytesRef BytesRef BytesRef Directory BytesRef BytesRef BytesRefBuilder int BytesRef String BytesRef IndexOutput public public throws ++ BytesRef Number public public throws decl_stmt java.lang.Number final final = if != if instanceof || instanceof || instanceof call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() call Number.intValue() else if instanceof call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() else if instanceof call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() else if instanceof call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() else throw new + call Number.getClass() call Number.getClass() call Number.getClass() call Number.getClass() call Number.getClass() else decl_stmt org.apache.lucene.util.BytesRef = if != else if == throw new + + else public public throws if != throw new + + + + + call IndexOutput.toString() call IndexOutput.toString() call IndexOutput.toString() call IndexOutput.toString() call IndexOutput.toString() + public public throws try finally = private private throws private private throws private private throws