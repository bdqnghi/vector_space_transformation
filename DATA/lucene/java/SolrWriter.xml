org.apache.solr.handler.dataimport org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.UpdateParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.update.AddUpdateCommand import org.apache.solr.update.CommitUpdateCommand import org.apache.solr.update.DeleteUpdateCommand import org.apache.solr.update.RollbackUpdateCommand import org.apache.solr.update.processor.UpdateRequestProcessor import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.* import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import class org.apache.solr.handler.dataimport.SolrWriter super super extends super implements SolrQueryRequest int UpdateRequestProcessor Logger String public public try call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() catch throw new finally = AddUpdateCommand public public try decl_stmt org.apache.solr.update.AddUpdateCommand = new = = call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return return DeleteUpdateCommand public public try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt org.apache.solr.update.DeleteUpdateCommand = new call org.apache.solr.update.DeleteUpdateCommand.setId(String) call org.apache.solr.update.DeleteUpdateCommand.setId(String) call org.apache.solr.update.DeleteUpdateCommand.setId(String) call org.apache.solr.update.DeleteUpdateCommand.setId(String) call org.apache.solr.update.DeleteUpdateCommand.setId(String) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + DeleteUpdateCommand public public try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt org.apache.solr.update.DeleteUpdateCommand = new = call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + CommitUpdateCommand public public try decl_stmt org.apache.solr.update.CommitUpdateCommand = new call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() RollbackUpdateCommand public public try decl_stmt org.apache.solr.update.RollbackUpdateCommand = new call org.apache.solr.update.processor.UpdateRequestProcessor.processRollback(RollbackUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processRollback(RollbackUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processRollback(RollbackUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processRollback(RollbackUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processRollback(RollbackUpdateCommand) catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() DeleteUpdateCommand public public try decl_stmt org.apache.solr.update.DeleteUpdateCommand = new = call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) catch throw new ByteArrayOutputStream decl byte int static static throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt byte = new decl_stmt int = try while = != - call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) finally try catch return new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() static static if != return + + else return public public