org.apache.solr.handler.dataimport java.lang.invoke.MethodHandles import java.util.Iterator import java.util.Map import org.apache.solr.handler.data.DIHCacheSupport.Relation import org.slf4j.Logger import org.slf4j.LoggerFactory import com.google.common.base.Supplier import com.google.common.collect.Iterators import com.google.common.collect.PeekingIterator import class org.apache.solr.handler.dataimport.Zipper Logger decl Iterator Comparable Comparable decl DIHCacheSupport decl Relation decl DIHCacheSupport public static public static if decl_stmt javax.management.relation.Relation = new if return new return decl Map decl Map Comparable int public < public < < < while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.peek() call decl Iterator.peek() call decl Iterator.peek() call decl Iterator.peek() call decl Iterator.peek() decl_stmt java.lang.Comparable = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != && call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() > throw new + + + + + = decl_stmt int = call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() if == decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() assert == : + + + call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() return else if < decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() assert == : + + + call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() else call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() return return private private < < if == = = else assert == : + + + Comparable public public decl_stmt java.lang.Comparable = if != && call decl Relation.compareTo() call decl Relation.compareTo() call decl Relation.compareTo() call decl Relation.compareTo() call decl Relation.compareTo() >= throw new + + + + + call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() =