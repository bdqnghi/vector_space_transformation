org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.List import org.apache.lucene.index.MultiTermsEnum.TermsEnumIndex import org.apache.lucene.index.MultiTermsEnum.TermsEnumWithSlice import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.InPlaceMergeSorter import org.apache.lucene.util.LongValues import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.packed.PackedInts import org.apache.lucene.util.packed.PackedLongValues import class org.apache.lucene.index.MultiDocValues decl int decl List NumericDocValues decl NumericDocValues LeafReaderContext boolean FieldInfo int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.index.FieldInfo = if == || call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() call org.apache.lucene.index.FieldInfo.hasNorms() == return decl_stmt boolean = decl_stmt NumericDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt NumericDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = else = = = = assert return new public public decl_stmt int = return - int public public decl_stmt int = return - boolean decl List NumericDocValues decl NumericDocValues LeafReaderContext decl int int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt NumericDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt NumericDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = else = = = = if ! return else return new public public decl_stmt int = return - int public public decl_stmt int = return - boolean boolean decl List Bits decl Bits LeafReaderContext decl int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt boolean = decl_stmt org.apache.lucene.util.Bits final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.util.Bits = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = new call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() = else = if instanceof == = = = = if ! return else if ! return new else return new boolean decl List BinaryDocValues decl BinaryDocValues LeafReaderContext decl int int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt BinaryDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt BinaryDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = else = = = = if ! return else return new public public decl_stmt int = return - int public public decl_stmt int = return - boolean decl List SortedNumericDocValues SortedNumericDocValues decl SortedNumericDocValues LeafReaderContext decl int int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt SortedNumericDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt SortedNumericDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() else = = = = if ! return else return new decl_stmt SortedNumericDocValues public public decl_stmt int = = call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() call SortedNumericDocValues.setDocument() - public public return call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() call SortedNumericDocValues.valueAt() public public return call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() call SortedNumericDocValues.count() int public public decl_stmt int = = - public public return public public return boolean decl List SortedDocValues OrdinalMap decl SortedDocValues LeafReaderContext decl int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt org.apache.lucene.index.SortedDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.index.SortedDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = else = = = = if ! return else decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap = return new boolean decl List SortedSetDocValues OrdinalMap decl SortedSetDocValues LeafReaderContext decl int int public static public static final final final final throws decl_stmt java.util.List final final final < = decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == return else if == return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt boolean = decl_stmt org.apache.lucene.index.SortedSetDocValues final final final = new decl_stmt int final final final = new + for = < ++ decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.index.SortedSetDocValues = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() if == = else = = = = if ! return else decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap = return new int decl int private static private static final final final decl_stmt int final final final = new for = < ++ = new protected protected decl_stmt int final final = = = protected protected return return int protected protected decl_stmt int final final = = = protected protected return decl int private static private static decl_stmt int final final final = new for = < ++ = return return return public public return + + decl long decl TermsEnum public static public static throws decl_stmt org.apache.lucene.index.TermsEnum final final final = new decl_stmt long final final final = new for = < ++ = = return decl long decl TermsEnum public static public static throws decl_stmt org.apache.lucene.index.TermsEnum final final final = new decl_stmt long final final final = new for = < ++ = = return SegmentMap public static public static throws if != throw new decl_stmt SegmentMap final final = new return new public public return + int public public return + public public return public public return - public public return int public public return public public return decl List public < public < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return int int public public decl_stmt int = decl_stmt int = - return == - : int int int public public decl_stmt int = decl_stmt int = int return public public return int long public public decl_stmt long = if == return else return public public = = - int long public public decl_stmt int = decl_stmt long = return public public return