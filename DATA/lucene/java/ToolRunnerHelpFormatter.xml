org.apache.solr.hadoop java.io.BufferedReader import java.io.ByteArrayOutputStream import java.io.IOException import java.io.PrintStream import java.io.PrintWriter import java.io.StringReader import java.io.StringWriter import java.io.UnsupportedEncodingException import java.nio.charset.StandardCharsets import net.sourceforge.argparse4j.ArgumentParsers import net.sourceforge.argparse4j.helper.ASCIITextWidthCounter import net.sourceforge.argparse4j.helper.TextHelper import org.apache.hadoop.util.ToolRunner import class org.apache.solr.hadoop.ToolRunnerHelpFormatter String String int PrintWriter StringBuilder BufferedReader String StringWriter ByteArrayOutputStream String public static public static decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.lang.String try new = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() catch throw new decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.StringBuilder = new while decl_stmt java.lang.String try = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) catch throw new if == return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + else = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if < = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if < call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + else decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() >= && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) = + decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt StringWriter = new decl_stmt PrintWriter = new new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString()