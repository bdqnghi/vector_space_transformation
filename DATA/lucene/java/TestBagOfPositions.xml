org.apache.lucene.index java.util.ArrayList import java.util.Collections import java.util.List import java.util.Random import java.util.concurrent.ConcurrentLinkedQueue import java.util.concurrent.CountDownLatch import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class annotation comment org.apache.lucene.index.TestBagOfPositions super super extends Random StringBuilder DirectoryReader RandomIndexWriter int Terms boolean Field int Document decl ConcurrentLinkedQueue IndexWriterConfig CountDownLatch decl Thread FieldType int BytesRef Field TermsEnum int LeafReader decl List String int Directory public public throws decl_stmt java.util.List < = new <> decl_stmt int = decl_stmt int final final = decl_stmt boolean = decl_stmt org.apache.lucene.index.IndexWriterConfig = new if || call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() instanceof && || > /= if + + for = < ++ decl_stmt java.lang.String = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.concurrent.ConcurrentLinkedQueue final final final < = new <> decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt int = if + call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() + decl_stmt org.apache.solr.handler.dataimport.config.Field = decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() call org.apache.solr.handler.dataimport.config.Field.fieldType() if call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) decl_stmt int = if == call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) else if == call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt java.lang.Thread = new decl_stmt java.util.concurrent.CountDownLatch final final = new for = < ++ decl_stmt java.util.Random final final = new decl_stmt org.apache.lucene.document.Document final final = new decl_stmt org.apache.solr.handler.dataimport.config.Field final final = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) = new public public try call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) while ! call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() decl_stmt java.lang.StringBuilder = new decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) for = < ++ decl_stmt java.lang.String = call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() if == break call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) catch throw new call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() for : call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.LeafReader = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.Terms = call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) - call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef while = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt int = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call org.apache.lucene.index.TermsEnum.totalTermFreq() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() StringBuilder String int public public try while ! decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ decl_stmt java.lang.String = if == break call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() catch throw new