org.apache.solr.search.function.distance org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.DoubleDocValues import org.apache.lucene.queries.function.valuesource.MultiValueSource import org.apache.lucene.search.IndexSearcher import org.apache.solr.common.SolrException import java.io.IOException import java.util.Map import class org.apache.solr.search.function.distance.VectorDistanceFunction super super extends float MultiValueSource float protected protected return decl double decl double protected protected decl_stmt double = new call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() decl_stmt double = new call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() call MultiValueSource.dimension() return double public static public static decl_stmt double = == || == || == : / return double public static public static decl_stmt double = if == for = < ++ += - == : else if == for = < ++ += - else if == = else if == || for = < ++ = else for = < ++ += - = return double double public static public static decl_stmt double = for = < ++ decl_stmt double = - += * return FunctionValues StringBuilder FunctionValues boolean public public throws decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() call MultiValueSource.getValues() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call float.getValues() call float.getValues() call float.getValues() call float.getValues() call float.getValues() return new public public return public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt boolean = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return StringBuilder boolean public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt boolean = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call MultiValueSource.createWeight() call float.createWeight() call float.createWeight() call float.createWeight() call float.createWeight() call float.createWeight() VectorDistanceFunction public public if == return if ! instanceof return decl_stmt org.apache.solr.search.function.distance.VectorDistanceFunction = if != return if ! call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() call MultiValueSource.equals() return if ! call float.equals() call float.equals() call float.equals() call float.equals() call float.equals() return return int public public decl_stmt int = call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() call MultiValueSource.hashCode() = * + call float.hashCode() call float.hashCode() call float.hashCode() call float.hashCode() call float.hashCode() = * + return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()