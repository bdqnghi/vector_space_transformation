org.apache.solr.cloud java.io.IOException import java.lang.invoke.MethodHandles import java.util.Arrays import java.util.Collections import java.util.List import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrRequest.METHOD import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.GenericSolrRequest import org.apache.solr.client.solrj.response.SimpleSolrResponse import org.apache.solr.cloud.overseer.OverseerAction import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Replica.State import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CoreAdminParams import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.Utils import org.apache.zookeeper.KeeperException import org.apache.zookeeper.KeeperException.NoNodeException import org.junit.Ignore import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.cloud.ZkStateReader.CORE_NAME_PROP import class org.apache.solr.cloud.ForceLeaderTest super super extends Logger public public throws int decl CollectionAdminRequest Replica String ZkController ClusterState ModifiableSolrParams int decl List JettySolrRunner Replica public public throws decl_stmt java.lang.String = try decl_stmt java.util.List < = + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.cloud.ZkController = call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt int = + + + decl_stmt int = for : call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) if call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() call org.apache.solr.common.cloud.ClusterState.getLiveNodes() ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) decl_stmt org.apache.solr.common.cloud.Replica = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() call org.apache.solr.common.cloud.Replica.getState() = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) finally call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) try decl_stmt Delete = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() String decl CollectionAdminRequest ZkController decl List JettySolrRunner Replica public public throws decl_stmt java.lang.String = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + try decl_stmt java.util.List < = + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.cloud.ZkController = call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() for : call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() for : finally call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) try decl_stmt Delete = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() Replica boolean ZkNodeProps ClusterState DistributedQueue ZkStateReader protected protected throws decl_stmt org.apache.solr.cloud.DistributedQueue = decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt org.apache.solr.common.cloud.ZkNodeProps = new call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt boolean = for = > -- = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt org.apache.solr.common.cloud.Replica = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) if == = break if ! throw new + + boolean ZkNodeProps String decl State DistributedQueue decl Replica ZkStateReader protected protected throws decl_stmt org.apache.solr.cloud.DistributedQueue = decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) decl_stmt org.apache.solr.common.cloud.ZkNodeProps = new call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) decl_stmt boolean = decl_stmt sun.security.provider.certpath.State = for = > -- decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() = call decl State.getSlice() call decl State.getSlice() call decl State.getSlice() call decl State.getSlice() call decl State.getSlice() if == = break if ! throw new + + + + + NamedList decl SolrRequest String String ModifiableSolrParams ZkStateReader protected protected throws decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) call org.apache.solr.common.cloud.ZkStateReader.getBaseUrlForNodeName(String) decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.SolrRequest < = new decl_stmt org.apache.solr.common.util.NamedList = try = = decl_stmt java.lang.String = < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) return throws try call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) ClusterState State JettySolrRunner decl SocketProxy boolean < throws decl_stmt org.apache.solr.cloud.SocketProxy = new for = < ++ = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) for : call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) for = < ++ decl_stmt sun.security.provider.certpath.State = new for = < ++ = decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt boolean = for : if == = if && call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) == break call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) for : call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt sun.security.provider.certpath.State = new for = < ++ = for : + == || == int ClusterState JettySolrRunner protected protected < throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() decl_stmt org.apache.solr.common.cloud.ClusterState = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) decl_stmt int = + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + StringBuilder String protected protected throws decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.String = if == return try catch return return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() SolrInputDocument protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + return decl CollectionAdminRequest private private throws decl_stmt ForceLeader = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setShardName() call decl CollectionAdminRequest.setShardName() call decl CollectionAdminRequest.setShardName() call decl CollectionAdminRequest.setShardName() call decl CollectionAdminRequest.setShardName() int protected protected decl_stmt int = for : if ++ return