org.apache.solr.handler.dataimport java.util.* import class org.apache.solr.handler.dataimport.TestSolrEntityProcessorUnit super super extends String decl List MockSolrEntityProcessor public public decl_stmt java.util.List < = decl_stmt org.apache.solr.handler.dataimport.MockSolrEntityProcessor = try call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() finally call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() private private < return decl List MockSolrEntityProcessor int public public decl_stmt java.util.List < = decl_stmt int = decl_stmt org.apache.solr.handler.dataimport.MockSolrEntityProcessor = try call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() finally call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() decl HashMap MockSolrEntityProcessor private private < decl_stmt org.apache.solr.handler.dataimport.MockSolrEntityProcessor = new decl_stmt HashMap < = new < call MockSolrEntityProcessor.init() call MockSolrEntityProcessor.init() call MockSolrEntityProcessor.init() call MockSolrEntityProcessor.init() call MockSolrEntityProcessor.init() return decl List decl Map decl List Doc MockSolrEntityProcessor decl List public public decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new new decl_stmt javax.print.Doc = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.handler.dataimport.MockSolrEntityProcessor = try decl_stmt java.util.Map < = call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() decl_stmt java.util.List < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.getQueryCount() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() call MockSolrEntityProcessor.nextRow() finally call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() call MockSolrEntityProcessor.destroy() decl Set decl List decl List Doc private < private < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new new decl_stmt java.util.Set < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt javax.print.Doc = while call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl Map private static private static < for : decl_stmt java.util.Map < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get()