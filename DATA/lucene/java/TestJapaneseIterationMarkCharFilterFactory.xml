org.apache.lucene.analysis.ja org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.CharFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import java.io.IOException import java.io.StringReader import java.util.HashMap import java.util.Map import class org.apache.lucene.analysis.ja.TestJapaneseIterationMarkCharFilterFactory super super extends CharFilter String TokenStream JapaneseIterationMarkCharFilterFactory public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory = new new < decl_stmt org.apache.lucene.analysis.CharFilter = call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) new decl_stmt org.apache.lucene.analysis.TokenStream = new new CharFilter JapaneseIterationMarkCharFilterFactory TokenStream JapaneseTokenizerFactory public public throws decl_stmt org.apache.lucene.analysis.ja.JapaneseTokenizerFactory = new new < call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() new decl_stmt org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory = new new < decl_stmt org.apache.lucene.analysis.CharFilter = call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) new decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) new CharFilter JapaneseIterationMarkCharFilterFactory decl Map TokenStream JapaneseTokenizerFactory public public throws decl_stmt org.apache.lucene.analysis.ja.JapaneseTokenizerFactory = new new < call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory = new decl_stmt org.apache.lucene.analysis.CharFilter = call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) new decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) new CharFilter JapaneseIterationMarkCharFilterFactory decl Map TokenStream JapaneseTokenizerFactory public public throws decl_stmt org.apache.lucene.analysis.ja.JapaneseTokenizerFactory = new new < call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory = new decl_stmt org.apache.lucene.analysis.CharFilter = call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) call org.apache.lucene.analysis.ja.JapaneseIterationMarkCharFilterFactory.create(Reader) new decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) new IllegalArgumentException public public throws decl_stmt IllegalArgumentException = new new < call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage()