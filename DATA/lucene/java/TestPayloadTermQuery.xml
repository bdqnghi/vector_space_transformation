org.apache.lucene.queries.payloads java.io.IOException import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.FieldInvertState import org.apache.lucene.index.IndexReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.CheckHits import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.QueryUtils import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TopDocs import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.spans.SpanQuery import org.apache.lucene.search.spans.SpanTermQuery import org.apache.lucene.search.spans.SpanWeight import org.apache.lucene.search.spans.Spans import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.English import org.apache.lucene.util.LuceneTestCase import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.queries.payloads.TestPayloadTermQuery super super extends IndexSearcher decl byte Similarity decl byte decl byte IndexReader Directory Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new boolean public public throws decl_stmt boolean = if if new else if if == new else new ++ return else return public public throws = Document RandomIndexWriter Field public static public static throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + + call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) public static public static throws = call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = SpanQuery TopDocs Spans ScoreDoc public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) != + + + == call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() + + call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() == for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc = + + == decl_stmt org.apache.lucene.search.spans.Spans = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != SpanQuery SpanQuery SpanTermQuery public public decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() == call org.apache.lucene.search.spans.SpanTermQuery.equals(Object) call org.apache.lucene.search.spans.SpanTermQuery.equals(Object) call org.apache.lucene.search.spans.SpanTermQuery.equals(Object) call org.apache.lucene.search.spans.SpanTermQuery.equals(Object) call org.apache.lucene.search.spans.SpanTermQuery.equals(Object) decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new int TopDocs ScoreDoc int Spans SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) != + + + == call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() + + call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() == decl_stmt int = for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc = if == ++ + + == else + + == + + == decl_stmt org.apache.lucene.search.spans.Spans = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != decl_stmt int = while call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() != while call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() != ++ + + == SpanQuery TopDocs public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) != + + + == SpanQuery decl Builder SpanQuery TopDocs decl BooleanQuery BooleanClause BooleanClause public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.spans.SpanQuery = new new new new decl_stmt org.apache.lucene.search.BooleanClause = new decl_stmt org.apache.lucene.search.BooleanClause = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() != + + + == decl_stmt int = new = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public public return public public return public public return public public return public public return public public return public public return == : public public return