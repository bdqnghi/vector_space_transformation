org.apache.lucene.queries.function.valuesource org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.ReaderUtil import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.FloatDocValues import org.apache.lucene.search.IndexSearcher import java.io.IOException import java.util.List import java.util.Map import class org.apache.lucene.queries.function.valuesource.ScaleFloatFunction super super extends ValueSource float float public public return + call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() + + + + + float int float float decl List ScaleInfo FunctionValues private private throws decl_stmt java.util.List final final final < = decl_stmt float = decl_stmt float = for : decl_stmt int = decl_stmt org.apache.lucene.queries.function.FunctionValues = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() for = < ++ if ! call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) continue decl_stmt float = call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) if & << == << continue if < = if > = if == = = decl_stmt ScaleInfo = new = = return float FunctionValues float float ScaleInfo public public throws decl_stmt ScaleInfo = if == = decl_stmt float final final = - == : - / - decl_stmt float final final = decl_stmt float final final = decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() return new public public return call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) public public return call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) call org.apache.lucene.queries.function.FunctionValues.floatVal(int) - * + public public return + call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() + + + + + + + + + public public return public public return - * + public public return + + + + + + + + + + public public throws call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) int public public decl_stmt int = = * += = * += call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() return ScaleFloatFunction public public if != return decl_stmt org.apache.lucene.queries.function.valuesource.ScaleFloatFunction = return == && == &&