org.apache.solr.search.facet java.io.IOException import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Set import org.apache.lucene.index.DocValues import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NumericDocValues import org.apache.lucene.util.Bits import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.schema.SchemaField import class org.apache.solr.search.facet.UniqueAgg super super extends String String SchemaField public public throws decl_stmt org.apache.solr.schema.SchemaField = if call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() || call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() if call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() call org.apache.solr.schema.SchemaField.hasDocValues() return new else return new else if call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() != return new else return new public public return new List SimpleOrderedMap long int public public decl_stmt org.apache.solr.common.util.SimpleOrderedMap = decl_stmt long = call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() += decl_stmt int = decl_stmt java.util.List = call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() call SimpleOrderedMap.get() if != if == = new <> call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() * = call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() += += - = - long double private private if >= return = == : if == = return decl_stmt double = double / decl_stmt long = * = + return public public return public public return int long if == = return if >= decl_stmt int = + >>> + >>> for = & = + & decl_stmt long = if == = ++ break else if == break decl long int private private decl_stmt long = decl_stmt int = << = new = - = * = for : if != return + public public = new public public = public public throws = = LongSet long public public throws decl_stmt long = if == && ! return decl_stmt LongSet = if == = = new call LongSet.add() call LongSet.add() call LongSet.add() call LongSet.add() call LongSet.add() public public throws if return return LongSet private private decl_stmt LongSet = return == : call LongSet.cardinality() call LongSet.cardinality() call LongSet.cardinality() call LongSet.cardinality() call LongSet.cardinality() SimpleOrderedMap int LongSet List int public public throws decl_stmt LongSet = decl_stmt int = decl_stmt org.apache.solr.common.util.SimpleOrderedMap = new call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() decl_stmt int = if <= decl_stmt java.util.List = new if != if > call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) for : if != call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() return public public return -