org.apache.lucene.search.join java.io.IOException import java.io.PrintStream import java.util.Locale import java.util.Set import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.Explanation import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import org.apache.lucene.util.BitSetIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefHash import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LegacyNumericUtils import class org.apache.lucene.search.join.TermsIncludingScoreQuery super super extends BytesRefHash Query String decl float boolean Query decl int public public return Query public public throws decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) if != return new else return TermsIncludingScoreQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.search.join.TermsIncludingScoreQuery = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if ! call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() return return int int public public decl_stmt int final final = decl_stmt int = += * call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() += * call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() return Terms TermsEnum Weight float BytesRef PostingsEnum long public public throws decl_stmt org.apache.lucene.search.Weight final final = call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) return new public public < public public throws decl_stmt org.apache.lucene.index.Terms = if != decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.index.PostingsEnum = for = < ++ if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) if call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() == decl_stmt float final final = return + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() return public public throws return call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() public public call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() public public throws decl_stmt org.apache.lucene.index.Terms = if == return decl_stmt long final final = * call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if return new else return new public public < BytesRef float Terms PostingsEnum TermsEnum public public throws decl_stmt org.apache.lucene.index.Terms = if != decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.index.PostingsEnum = for = < ++ if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) if call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() == decl_stmt float final final = return + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() return public public throws return public public long Terms TermsEnum public public throws decl_stmt org.apache.lucene.index.Terms = if == return decl_stmt long final final = * call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if return new else return new float BytesRef PostingsEnum protected protected throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.index.PostingsEnum = for = < call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() ++ if call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) = decl_stmt float = for = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() = public public throws return public public throws return public public return public public return float BytesRef PostingsEnum protected protected throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.index.PostingsEnum = for = < call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() ++ if call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) = decl_stmt float = for = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if ! = BytesRef + decl_stmt org.apache.lucene.util.BytesRef final final = new for = < call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() ++ call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) call org.apache.lucene.util.BytesRefHash.get(int,BytesRef) + + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + try + catch try + catch +