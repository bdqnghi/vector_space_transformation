org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.List import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutorService import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.TextField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexCommit import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.IndexableField import org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy import org.apache.lucene.index.NoMergePolicy import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.SnapshotDeletionPolicy import org.apache.lucene.index.Term import org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase import org.apache.lucene.index.TrackingIndexWriter import org.apache.lucene.store.Directory import org.apache.lucene.store.NRTCachingDirectory import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.ThreadInterruptedException import class annotation org.apache.lucene.search.TestControlledRealTimeReopenThread super super extends decl ThreadLocal long decl ControlledRealTimeReopenThread TrackingIndexWriter SearcherManager SearcherManager boolean decl ControlledRealTimeReopenThread public public throws protected protected throws if + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() return call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() protected protected if if return new else return IndexSearcher long protected protected < extends extends extends < extends extends throws decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.updateDocuments(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocuments(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocuments(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocuments(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocuments(Term,Iterable) if == if + + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() <= call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if + + try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() IndexSearcher long protected protected < extends extends extends < extends extends throws decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.addDocuments(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocuments(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocuments(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocuments(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocuments(Iterable) if == if + + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() <= call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if + + try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() IndexSearcher long protected protected < extends extends throws decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) if == if + + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() <= call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if + + try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() IndexSearcher long protected protected < extends extends throws decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) if == if + + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() <= call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if + + try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() IndexSearcher long protected protected throws decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) if == if + + call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() <= call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() call decl ControlledRealTimeReopenThread.getSearchingGen() decl_stmt org.apache.lucene.search.IndexSearcher final final = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() if + + try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() IndexSearcher double SearcherFactory double protected protected final final throws decl_stmt double final final = + * decl_stmt double final final = * + * if + + + = new decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public throws = decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new return = new = new = new <> call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() + call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() = new <> call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setName() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() call decl ControlledRealTimeReopenThread.setPriority() + call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() IndexSearcher public public throws = decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new return Long protected protected decl_stmt java.lang.Long = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if != private synchronized private synchronized = protected protected throws SearcherManager protected protected throws decl_stmt org.apache.lucene.search.SearcherManager final final if = else = return call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() protected protected throws call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() protected protected throws if call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() LatchedIndexWriter Directory decl ControlledRealTimeReopenThread IndexSearcher Thread Document CountDownLatch TrackingIndexWriter AtomicBoolean SearcherManager Thread IndexWriterConfig long CountDownLatch public public throws decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) decl_stmt org.apache.lucene.store.Directory = decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt LatchedIndexWriter = new decl_stmt org.apache.lucene.index.TrackingIndexWriter final final = new decl_stmt org.apache.lucene.search.SearcherManager final final = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() decl_stmt java.lang.Thread = new public public try call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.TrackingIndexWriter.deleteDocuments(Query) new new call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() catch finally call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() = decl_stmt long final final = call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.TrackingIndexWriter.updateDocument(Term,Iterable) new call org.apache.lucene.search.SearcherManager.isSearcherCurrent() call org.apache.lucene.search.SearcherManager.isSearcherCurrent() call org.apache.lucene.search.SearcherManager.isSearcherCurrent() call org.apache.lucene.search.SearcherManager.isSearcherCurrent() call org.apache.lucene.search.SearcherManager.isSearcherCurrent() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() decl_stmt org.apache.lucene.search.ControlledRealTimeReopenThread final final final < = new <> call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() if + decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.lang.Thread = new public public try call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() catch throw new call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call SearcherManager.maybeRefresh() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) if ! call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.join() call decl ControlledRealTimeReopenThread.join() call decl ControlledRealTimeReopenThread.join() call decl ControlledRealTimeReopenThread.join() call decl ControlledRealTimeReopenThread.join() call LatchedIndexWriter.close() call LatchedIndexWriter.close() call LatchedIndexWriter.close() call LatchedIndexWriter.close() call LatchedIndexWriter.close() public public try new new catch finally public public try catch throw new public public < extends extends throws try if catch throw new IndexReader SearcherFactory RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() decl_stmt org.apache.lucene.index.IndexReader final final = decl_stmt org.apache.lucene.search.SearcherFactory final final = new public public return new call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public return SearcherManager AtomicBoolean IndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt org.apache.lucene.search.SearcherManager = new new call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() call SearcherManager.addListener() new public public public public if call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public public public if IndexSearcher int SnapshotDeletionPolicy Document decl ControlledRealTimeReopenThread StringBuilder TrackingIndexWriter long IndexWriter Thread String long String TopDocs SearcherManager decl List IndexCommit IndexWriterConfig decl char Directory long = public = public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt char = call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() decl_stmt java.lang.StringBuilder = new for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt org.apache.lucene.index.SnapshotDeletionPolicy final final = new new decl_stmt org.apache.lucene.store.Directory final final = new decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCommitOnClose(boolean) call org.apache.lucene.index.IndexWriterConfig.setCommitOnClose(boolean) call org.apache.lucene.index.IndexWriterConfig.setCommitOnClose(boolean) call org.apache.lucene.index.IndexWriterConfig.setCommitOnClose(boolean) call org.apache.lucene.index.IndexWriterConfig.setCommitOnClose(boolean) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) decl_stmt org.apache.lucene.index.IndexWriter final final = new decl_stmt org.apache.lucene.search.SearcherManager = new new decl_stmt org.apache.lucene.index.TrackingIndexWriter final final = new decl_stmt org.apache.lucene.search.ControlledRealTimeReopenThread < = new <> call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.setDaemon() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() call decl ControlledRealTimeReopenThread.start() decl_stmt java.util.List < = new <> for = < ++ if > && == decl_stmt java.lang.Thread = new new public public try call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt org.apache.lucene.index.IndexCommit = call org.apache.lucene.index.SnapshotDeletionPolicy.snapshot() call org.apache.lucene.index.SnapshotDeletionPolicy.snapshot() call org.apache.lucene.index.SnapshotDeletionPolicy.snapshot() call org.apache.lucene.index.SnapshotDeletionPolicy.snapshot() call org.apache.lucene.index.SnapshotDeletionPolicy.snapshot() for : call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() catch throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt long = decl_stmt long = call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call org.apache.lucene.index.TrackingIndexWriter.addDocument(Iterable) call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() call decl ControlledRealTimeReopenThread.waitForGeneration() decl_stmt long = - + < * decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new + call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() for : call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call decl ControlledRealTimeReopenThread.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexCommit public public try decl_stmt org.apache.lucene.index.IndexCommit = for : call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() catch throw new