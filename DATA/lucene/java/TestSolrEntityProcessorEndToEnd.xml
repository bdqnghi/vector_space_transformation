org.apache.solr.handler.dataimport org.apache.commons.io.FileUtils import org.apache.lucene.util.IOUtils import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.common.SolrInputDocument import org.junit.After import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.nio.file.Files import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import java.util.Map.Entry import java.util.Properties import class org.apache.solr.handler.dataimport.TestSolrEntityProcessorEndToEnd super super extends String String Logger String String String JettySolrRunner decl List SolrInstance String decl List private private return + + + + + + + + + + + + + + + private private return + + + + : + + + + + private private return call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() public static public static = public static public static if == else public public throws = new call SolrInstance.setUp() call SolrInstance.setUp() call SolrInstance.setUp() call SolrInstance.setUp() call SolrInstance.setUp() = public public throws try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call SolrInstance.tearDown() call SolrInstance.tearDown() call SolrInstance.tearDown() call SolrInstance.tearDown() call SolrInstance.tearDown() public public try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl Map public public try decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() public public try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() try catch decl List decl Map decl Map public public try decl_stmt java.util.List < < = new <> decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() = new <> decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally public public try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() public public try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl List decl Map private static < < private static < < decl_stmt java.util.List < < = new <> for = <= ++ decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl List SolrInputDocument private private < < throws decl_stmt java.util.List < = new <> for < : decl_stmt org.apache.solr.common.SolrInputDocument = new for < : call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() try = public public return public public return + public public return public public return + public public return + File public public throws = = new + = new + new decl_stmt File = new = new = new + public public throws Properties JettySolrRunner private private throws decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call SolrInstance.getDataDir() call SolrInstance.getDataDir() call SolrInstance.getDataDir() call SolrInstance.getDataDir() call SolrInstance.getDataDir() decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = new call SolrInstance.getHomeDir() call SolrInstance.getHomeDir() call SolrInstance.getHomeDir() call SolrInstance.getHomeDir() call SolrInstance.getHomeDir() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() return