org.apache.solr.cloud java.nio.charset.Charset import java.util.NoSuchElementException import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import java.util.concurrent.Future import java.util.concurrent.TimeUnit import java.util.concurrent.TimeoutException import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.SolrjNamedThreadFactory import org.junit.After import org.junit.Before import org.junit.Test import class org.apache.solr.cloud.DistributedQueueTest super super extends SolrZkClient Charset ZkTestServer ExecutorService public public throws String QueueChangerThread decl byte DistributedQueue public public throws decl_stmt java.lang.String = decl_stmt byte = decl_stmt org.apache.solr.cloud.DistributedQueue = call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() try call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() catch call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.take() call org.apache.solr.cloud.DistributedQueue.take() call org.apache.solr.cloud.DistributedQueue.take() call org.apache.solr.cloud.DistributedQueue.take() call org.apache.solr.cloud.DistributedQueue.take() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() new call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call DistributedQueue.remove() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() decl_stmt QueueChangerThread = new call QueueChangerThread.start() call QueueChangerThread.start() call QueueChangerThread.start() call QueueChangerThread.start() call QueueChangerThread.start() call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call QueueChangerThread.join() call QueueChangerThread.join() call QueueChangerThread.join() call QueueChangerThread.join() call QueueChangerThread.join() String decl Future String DistributedQueue public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.cloud.DistributedQueue = call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) decl_stmt java.util.concurrent.Future < = call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) new call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) try call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() catch call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() call org.apache.solr.cloud.DistributedQueue.hasWatcher() = call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) new call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) call org.apache.solr.cloud.DistributedQueue.peek(boolean) try call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() catch call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call decl Future.isDone() call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() call org.apache.solr.cloud.DistributedQueue.poll() long private private throws decl_stmt long = call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.cloud.ZkTestServer.expire(long) call org.apache.solr.cloud.ZkTestServer.expire(long) call org.apache.solr.cloud.ZkTestServer.expire(long) call org.apache.solr.cloud.ZkTestServer.expire(long) call org.apache.solr.cloud.ZkTestServer.expire(long) call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() call org.apache.solr.common.cloud.SolrZkClient.getConnectionManager() for = < ++ if call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() break call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() == call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() call org.apache.solr.common.cloud.SolrZkClient.getSolrZooKeeper() protected protected throws return new public public try catch catch throw new protected protected throws if ! call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) if call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.clean(String) call org.apache.solr.common.cloud.SolrZkClient.clean(String) call org.apache.solr.common.cloud.SolrZkClient.clean(String) call org.apache.solr.common.cloud.SolrZkClient.clean(String) call org.apache.solr.common.cloud.SolrZkClient.clean(String) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) return public public throws try catch call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() protected protected throws = new call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() = new call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() call org.apache.solr.common.cloud.SolrZkClient.isConnected() protected protected throws if != call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown()