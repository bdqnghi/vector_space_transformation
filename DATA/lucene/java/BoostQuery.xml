org.apache.lucene.search java.io.IOException import java.util.Objects import java.util.Set import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import class org.apache.lucene.search.BoostQuery super super extends Query float public public return public public return BoostQuery public public if == return decl_stmt org.apache.lucene.search.BoostQuery = return call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() && == int public public decl_stmt int = = * + call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() = * + return Query BoostQuery public public throws decl_stmt org.apache.lucene.search.Query final final = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) if == return if call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() == decl_stmt org.apache.lucene.search.BoostQuery = return new * if == && call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() != return new new if != return new return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() Weight public public throws decl_stmt org.apache.lucene.search.Weight final final = call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) if == return call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() return new public public < call Weight.extractTerms() call Weight.extractTerms() call Weight.extractTerms() call Weight.extractTerms() call Weight.extractTerms() public public throws return call Weight.explain() call Weight.explain() call Weight.explain() call Weight.explain() call Weight.explain() public public throws return call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() call Weight.getValueForNormalization() public public call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() call Weight.normalize() * public public throws return call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() public public throws return call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) call org.apache.lucene.search.Weight.bulkScorer(LeafReaderContext) public public < public public throws return public public throws return public public * public public throws return public public throws return