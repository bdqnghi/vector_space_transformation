org.apache.solr.internal.csv java.io.IOException import java.io.StringReader import java.io.StringWriter import java.util.Arrays import java.util.Random import junit.framework.Test import junit.framework.TestCase import junit.framework.TestSuite import class org.apache.solr.internal.csv.CSVPrinterTest super super extends String Random CSVStrategy CSVPrinter StringWriter decl String public public throws decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() CSVPrinter StringWriter decl String public public throws decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() CSVPrinter StringWriter decl String public public throws decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() CSVPrinter StringWriter decl String public public throws decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() CSVPrinter StringWriter decl String public public throws decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() int public public throws decl_stmt int = = = = new public public throws for = < ++ decl String CSVPrinter StringWriter CSVParser decl String int String StringReader decl String int public public throws decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + decl_stmt java.lang.String = new for = < ++ decl_stmt java.lang.String = new = for = < ++ = decl_stmt StringWriter = new decl_stmt org.apache.solr.internal.csv.CSVPrinter = new for = < ++ call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.println() call org.apache.solr.internal.csv.CSVPrinter.flush() call org.apache.solr.internal.csv.CSVPrinter.flush() call org.apache.solr.internal.csv.CSVPrinter.flush() call org.apache.solr.internal.csv.CSVPrinter.flush() call org.apache.solr.internal.csv.CSVPrinter.flush() decl_stmt java.lang.String = call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() decl_stmt java.io.StringReader = new decl_stmt org.apache.solr.internal.csv.CSVParser = new decl_stmt java.lang.String = call org.apache.solr.internal.csv.CSVParser.getAllValues() call org.apache.solr.internal.csv.CSVParser.getAllValues() call org.apache.solr.internal.csv.CSVParser.getAllValues() call org.apache.solr.internal.csv.CSVParser.getAllValues() call org.apache.solr.internal.csv.CSVParser.getAllValues() if ! + String String decl String decl String public static public static if != return for = < ++ decl_stmt java.lang.String = decl_stmt java.lang.String = if != return for = < ++ decl_stmt java.lang.String = decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + return return StringBuilder char public static public static decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt char = if <= || >= call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) int else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int int char decl char public public decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt char = new for = < ++ decl_stmt char decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) switch case = break case = break case = break case = break case = break case = break case = break case = break case = break default: = char call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) break = return new