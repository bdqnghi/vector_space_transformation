org.apache.solr.search java.io.IOException import java.util.Map import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.ConstantScoreScorer import org.apache.lucene.search.ConstantScoreWeight import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import class org.apache.solr.search.SolrConstantScoreQuery super super extends super implements Filter boolean int public public return public public = public public return public public public public return public public = public public return DocIdSet DocIdSetIterator public public throws decl_stmt org.apache.lucene.search.DocIdSet = instanceof : call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() if == return decl_stmt org.apache.lucene.search.DocIdSetIterator = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if == return return new public public throws return new public public return + + call Filter.toString() call Filter.toString() call Filter.toString() call Filter.toString() call Filter.toString() + SolrConstantScoreQuery public public if == return if == return decl_stmt org.apache.solr.search.SolrConstantScoreQuery = return call Filter.equals() call Filter.equals() call Filter.equals() call Filter.equals() call Filter.equals() public public return * + call Filter.hashCode() call Filter.hashCode() call Filter.hashCode() call Filter.hashCode() call Filter.hashCode()