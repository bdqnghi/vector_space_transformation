org.apache.lucene.search.join java.io.IOException import java.util.Collections import java.util.Map import java.util.WeakHashMap import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.ReaderUtil import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import org.apache.lucene.util.BitDocIdSet import org.apache.lucene.util.BitSet import class org.apache.lucene.search.join.QueryBitSetProducer super super implements Query decl Map public public return IndexSearcher DocIdSet Weight Scorer Object LeafReader IndexReaderContext public public throws decl_stmt org.apache.lucene.index.LeafReader final final = decl_stmt java.lang.Object final final = call LeafReader.getCoreCacheKey() call LeafReader.getCoreCacheKey() call LeafReader.getCoreCacheKey() call LeafReader.getCoreCacheKey() call LeafReader.getCoreCacheKey() decl_stmt org.apache.lucene.search.DocIdSet = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt IndexReaderContext final final = decl_stmt org.apache.lucene.search.IndexSearcher final final = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) decl_stmt org.apache.lucene.search.Weight final final = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) decl_stmt org.apache.lucene.search.Scorer final final = call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() if == = else = new call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return == : public public return + + call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() + QueryBitSetProducer public public if == || != return decl_stmt org.apache.lucene.search.join.QueryBitSetProducer final final = return public public return * + call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode()