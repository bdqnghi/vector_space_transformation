org.apache.lucene.benchmark.byTask.tasks org.apache.lucene.benchmark.byTask.PerfRunData import org.apache.lucene.benchmark.byTask.feeds.DocMaker import org.apache.lucene.document.Document import org.apache.lucene.index.Term import org.apache.lucene.index.IndexWriter import class org.apache.lucene.benchmark.byTask.tasks.UpdateDocTask super super extends Document int DocMaker public public throws decl_stmt org.apache.lucene.benchmark.byTask.feeds.DocMaker = if > = call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) else = call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) call org.apache.lucene.benchmark.byTask.feeds.DocMaker.makeDocument(int) public public throws = String IndexWriter public public throws decl_stmt java.lang.String final final = call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) if == throw new decl_stmt org.apache.lucene.index.IndexWriter final final = call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) new return protected protected return + + public public = int public public return