org.apache.solr.cloud org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.RoutingRule import org.apache.solr.common.cloud.Slice import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.Utils import org.apache.solr.util.TimeOut import org.apache.zookeeper.KeeperException import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.TimeUnit import static static org.apache.solr.cloud.OverseerCollectionMessageHandler.NUM_SLICES import static static org.apache.solr.common.cloud.ZkStateReader.MAX_SHARDS_PER_NODE import static static org.apache.solr.common.cloud.ZkStateReader.REPLICATION_FACTOR import class org.apache.solr.cloud.MigrateRouteKeyTest super super extends Logger public public throws if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) Slice boolean SolrInputDocument long decl Map ClusterState private private throws decl_stmt org.apache.solr.common.cloud.ClusterState decl_stmt org.apache.solr.common.cloud.Slice decl_stmt boolean = decl_stmt long = + while < = = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) decl_stmt java.util.Map < = call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() if == || call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() || ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = break decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + return decl CollectionAdminRequest protected protected throws decl_stmt Migrate = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setTargetCollection() call decl CollectionAdminRequest.setTargetCollection() call decl CollectionAdminRequest.setTargetCollection() call decl CollectionAdminRequest.setTargetCollection() call decl CollectionAdminRequest.setTargetCollection() call decl CollectionAdminRequest.setSplitKey() call decl CollectionAdminRequest.setSplitKey() call decl CollectionAdminRequest.setSplitKey() call decl CollectionAdminRequest.setSplitKey() call decl CollectionAdminRequest.setSplitKey() call decl CollectionAdminRequest.setForwardTimeout() call decl CollectionAdminRequest.setForwardTimeout() call decl CollectionAdminRequest.setForwardTimeout() call decl CollectionAdminRequest.setForwardTimeout() call decl CollectionAdminRequest.setForwardTimeout() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() SolrRequest String protected protected throws decl_stmt org.apache.solr.client.solrj.SolrRequest = new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl_stmt java.lang.String = = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - try = * decl List decl HashMap decl Map private private throws decl_stmt HashMap < < = new <> try = decl_stmt java.util.Map < = decl_stmt java.util.List < = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() long boolean Slice String String SolrInputDocument String Indexer decl int ClusterState String QueryResponse int SolrQuery String protected protected throws new == decl_stmt java.lang.String final final = decl_stmt int final final = decl_stmt int final final final = new for = < * ++ decl_stmt java.lang.String = + + decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) += + decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + + call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) ++ > decl_stmt java.lang.String = decl_stmt Indexer = new call Indexer.start() call Indexer.start() call Indexer.start() call Indexer.start() call Indexer.start() decl_stmt java.lang.String = try = decl_stmt org.apache.solr.client.solrj.SolrQuery = new + + + decl_stmt long = call Indexer.join() call Indexer.join() call Indexer.join() call Indexer.join() call Indexer.join() += call Indexer.getSplitKeyCount() call Indexer.getSplitKeyCount() call Indexer.getSplitKeyCount() call Indexer.getSplitKeyCount() call Indexer.getSplitKeyCount() try + + -- catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + = new decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt org.apache.solr.common.cloud.Slice = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() + call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() + decl_stmt boolean = SolrInputDocument String TimeOut public public decl_stmt org.apache.solr.util.TimeOut = new for = * < && ! call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() ++ decl_stmt java.lang.String = + + decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + != - + : + + call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) try if ++ catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) try catch public public return