org.apache.lucene.replicator.nrt java.io.Closeable import java.io.IOException import java.util.concurrent.atomic.AtomicBoolean import java.util.concurrent.locks.ReentrantLock import org.apache.lucene.document.Document import class org.apache.lucene.replicator.nrt.NodeProcess super super implements Thread boolean long ReentrantLock AtomicBoolean Process int long boolean int public public if return + + + else return + + + public synchronized public synchronized if = call Process.destroy() call Process.destroy() call Process.destroy() call Process.destroy() call Process.destroy() try call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) catch throw new public public throws try = new if != throw new return public public throws try = new public public throws try = new return public synchronized public synchronized throws assert try = new return public public public synchronized public synchronized call java.util.concurrent.locks.ReentrantLock.lock() call java.util.concurrent.locks.ReentrantLock.lock() call java.util.concurrent.locks.ReentrantLock.lock() call java.util.concurrent.locks.ReentrantLock.lock() call java.util.concurrent.locks.ReentrantLock.lock() try if = try = new if != throw new catch try call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) catch throw new return finally call java.util.concurrent.locks.ReentrantLock.unlock() call java.util.concurrent.locks.ReentrantLock.unlock() call java.util.concurrent.locks.ReentrantLock.unlock() call java.util.concurrent.locks.ReentrantLock.unlock() call java.util.concurrent.locks.ReentrantLock.unlock() public public throws try = new String String int String String public public throws if == throw new decl_stmt int = decl_stmt java.lang.String = if != ++ decl_stmt java.lang.String = assert != ++ decl_stmt java.lang.String = if != ++ decl_stmt java.lang.String = if != ++ : if != if != if != public public throws if == throw new public public throws if == throw new public public throws if == throw new