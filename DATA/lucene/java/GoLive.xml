org.apache.solr.hadoop java.io.IOException import java.lang.invoke.MethodHandles import java.util.Arrays import java.util.HashSet import java.util.List import java.util.Set import java.util.concurrent.Callable import java.util.concurrent.CompletionService import java.util.concurrent.ExecutionException import java.util.concurrent.ExecutorCompletionService import java.util.concurrent.Future import java.util.concurrent.LinkedBlockingQueue import java.util.concurrent.ThreadPoolExecutor import java.util.concurrent.TimeUnit import org.apache.hadoop.fs.FileStatus import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CoreAdminRequest import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.hadoop.MapReduceIndexerTool.Options import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.hadoop.GoLive Logger int decl Callable boolean decl CompletionService Request decl Future decl CoreAdminRequest String long int decl MergeIndexes decl List ThreadPoolExecutor int String decl Set String public public call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt boolean = decl_stmt long = decl_stmt int = decl_stmt java.util.concurrent.ThreadPoolExecutor = new new < try decl_stmt java.util.concurrent.CompletionService < = new <> decl_stmt java.util.Set < < = new <> decl_stmt int = - for final final : call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ decl_stmt java.util.List < = for : decl_stmt java.lang.String = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) if == - call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + return decl_stmt java.lang.String final final = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.lang.String final final = decl_stmt org.apache.solr.core.Callable < = decl_stmt sun.net.httpserver.Request = new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + try final final = new decl_stmt MergeIndexes = new call decl CoreAdminRequest.setCoreName() call decl CoreAdminRequest.setCoreName() call decl CoreAdminRequest.setCoreName() call decl CoreAdminRequest.setCoreName() call decl CoreAdminRequest.setCoreName() call decl CoreAdminRequest.setIndexDirs() call decl CoreAdminRequest.setIndexDirs() call decl CoreAdminRequest.setIndexDirs() call decl CoreAdminRequest.setIndexDirs() call decl CoreAdminRequest.setIndexDirs() + call decl CoreAdminRequest.process() call decl CoreAdminRequest.process() call decl CoreAdminRequest.process() call decl CoreAdminRequest.process() call decl CoreAdminRequest.process() = catch = return call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() while != && call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > try decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() if == break call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() try decl_stmt sun.net.httpserver.Request = call decl MergeIndexes.get() call decl MergeIndexes.get() call decl MergeIndexes.get() call decl MergeIndexes.get() call decl MergeIndexes.get() if ! call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return = - try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if != try = new else for < : for : try = new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return = return finally decl_stmt float = - / ^ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String)