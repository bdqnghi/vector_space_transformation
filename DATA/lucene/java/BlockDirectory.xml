org.apache.solr.store.blockcache java.io.File import java.io.FileNotFoundException import java.io.IOException import java.lang.invoke.MethodHandles import java.util.Set import org.apache.lucene.index.IndexFileNames import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.store.FilterDirectory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.solr.core.ShutdownAwareDirectory import org.apache.solr.store.hdfs.HdfsDirectory import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.store.blockcache.BlockDirectory super super extends super implements boolean long boolean Logger int boolean Cache long boolean Cache String int decl Set public static public static return >>> public static public static return & public static public static return << + public public public public return public public public public return public public public public IndexInput private private throws decl_stmt org.apache.lucene.store.IndexInput final final = if return new return private private for : if return return public public final final throws return CachedIndexInput public public decl_stmt CachedIndexInput = = return public public return protected protected throws long int protected protected throws decl_stmt long = while > decl_stmt int = += -= += int int long private private throws decl_stmt long = decl_stmt int = int decl_stmt int = - if return else return long int decl byte private private throws decl_stmt long = decl_stmt int = int - decl_stmt byte = call org.apache.solr.common.util.Cache.update(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.update(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.update(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.update(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.update(String,long,int,byte,int,int) private private return call org.apache.solr.common.util.Cache.fetch(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.fetch(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.fetch(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.fetch(String,long,int,byte,int,int) call org.apache.solr.common.util.Cache.fetch(String,long,int,byte,int,int) protected protected throws public public throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl String public public throws try decl_stmt java.lang.String = for : call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) catch finally call Cache.releaseResources() call Cache.releaseResources() call Cache.releaseResources() call Cache.releaseResources() call Cache.releaseResources() throws return + + File File private private throws if instanceof decl_stmt File = decl_stmt File = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + + return call File.lastModified() call File.lastModified() call File.lastModified() call File.lastModified() call File.lastModified() else if instanceof return else throw new return + + public public return if ! return if != && ! return switch case return case if return else return default: return if ! || return if != && ! return switch case return default: return IndexOutput public public throws decl_stmt org.apache.lucene.store.IndexOutput final final = if return new return public public throws call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) call org.apache.solr.common.util.Cache.delete(String) public public return public public return