org.apache.solr.search org.apache.lucene.index.IndexReader import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Weight import java.io.IOException import class org.apache.solr.search.WrappedQuery super super extends Query public public return public public = public public throws return call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.Query.createWeight(IndexSearcher,boolean) public public throws return call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) public public return call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() public public if instanceof return return call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() public public return + call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString()