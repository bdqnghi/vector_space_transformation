org.apache.solr.update.processor org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.BoolField import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import java.util.Arrays import java.util.Collection import java.util.HashSet import java.util.Locale import java.util.Set import class org.apache.solr.update.processor.ParseBooleanFieldUpdateProcessorFactory super super extends String decl Set boolean String decl Set String String public public return new protected protected if instanceof decl_stmt java.lang.String = : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return else if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return else return if instanceof return return String protected protected if instanceof decl_stmt java.lang.String = : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return else if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return else return if instanceof return return decl Collection decl Collection Object String public public decl_stmt java.lang.Object = if != if instanceof = else = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() : decl_stmt java.util.Collection < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() for : decl_stmt java.lang.String final final = : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() throw new + + + + + + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() FieldType IndexSchema public public final final return new public public final final decl_stmt org.apache.solr.schema.IndexSchema final final = decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) return == || instanceof FieldType IndexSchema public public final final decl_stmt org.apache.solr.schema.IndexSchema final final = decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) return == || instanceof