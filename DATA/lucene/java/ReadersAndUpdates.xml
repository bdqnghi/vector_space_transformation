org.apache.lucene.index java.io.IOException import java.util.HashMap import java.util.Iterator import java.util.Map import java.util.Map.Entry import java.util.NoSuchElementException import java.util.Set import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.codecs.Codec import org.apache.lucene.codecs.DocValuesConsumer import org.apache.lucene.codecs.DocValuesFormat import org.apache.lucene.codecs.FieldInfosFormat import org.apache.lucene.codecs.LiveDocsFormat import org.apache.lucene.store.Directory import org.apache.lucene.store.FlushInfo import org.apache.lucene.store.IOContext import org.apache.lucene.store.TrackingDirectoryWrapper import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.MutableBits import class org.apache.lucene.index.ReadersAndUpdates SegmentCommitInfo Bits boolean IndexWriter AtomicInteger boolean SegmentReader decl Map int int public public decl_stmt int final final = call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() assert > int public public decl_stmt int final final = call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() assert >= int public public decl_stmt int final final = call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() assert >= return public synchronized public synchronized return int public synchronized public synchronized decl_stmt int if != = for = < call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() ++ if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() ++ else = call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() assert call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() - call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() - == : + call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() + + call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() + + + + return public public throws if == = new if == = call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() return public synchronized public synchronized throws assert == boolean public synchronized public synchronized assert != assert assert >= && < call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() : + + + call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() + + + + call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() assert ! decl_stmt boolean final final = call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() if ++ return public synchronized public synchronized throws if != try call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() finally = public synchronized public synchronized throws if == assert != = if != return new call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() - call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() - else assert call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() call org.apache.lucene.index.SegmentReader.getLiveDocs() == call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() call SegmentReader.incRef() return LiveDocsFormat public synchronized public synchronized throws assert assert call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() > if decl_stmt LiveDocsFormat = call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() if == = call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() else = call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() call LiveDocsFormat.newLiveDocs() = public synchronized public synchronized assert return public synchronized public synchronized assert = return public synchronized public synchronized = TrackingDirectoryWrapper Codec boolean public synchronized public synchronized throws assert if == return assert call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() == call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.store.TrackingDirectoryWrapper = new decl_stmt boolean = try decl_stmt org.apache.lucene.codecs.Codec = call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call Codec.liveDocsFormat() call Codec.liveDocsFormat() call Codec.liveDocsFormat() call Codec.liveDocsFormat() call Codec.liveDocsFormat() = finally if ! call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDelGen() for : call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.index.SegmentCommitInfo.advanceDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDelGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDelGen() call org.apache.lucene.index.SegmentCommitInfo.setDelCount(int) call org.apache.lucene.index.SegmentCommitInfo.setDelCount(int) call org.apache.lucene.index.SegmentCommitInfo.setDelCount(int) call org.apache.lucene.index.SegmentCommitInfo.setDelCount(int) call org.apache.lucene.index.SegmentCommitInfo.setDelCount(int) call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() + = return NumericDocValuesFieldUpdates decl NumericDocValuesFieldUpdates IOContext Bits int long int TrackingDirectoryWrapper decl Iterator int String SegmentWriteState long NumericDocValues FieldInfos FieldInfo String private private < final final < < throws for < : decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.index.NumericDocValuesFieldUpdates final final = decl_stmt long final final = call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() decl_stmt java.lang.String final final = decl_stmt long final final = call org.apache.lucene.index.NumericDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.NumericDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.NumericDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.NumericDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.NumericDocValuesFieldUpdates.ramBytesPerDoc() * call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.store.IOContext final final = new new call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.index.FieldInfo final final = assert != call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) decl_stmt org.apache.lucene.index.FieldInfos final final = new new decl_stmt org.apache.lucene.store.TrackingDirectoryWrapper final final = new decl_stmt org.apache.lucene.index.SegmentWriteState final final = new try final final = new < decl_stmt NumericDocValues final final = call SegmentReader.getNumericDocValues() call SegmentReader.getNumericDocValues() call SegmentReader.getNumericDocValues() call SegmentReader.getNumericDocValues() call SegmentReader.getNumericDocValues() decl_stmt org.apache.lucene.util.Bits final final = call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() decl_stmt int final final = call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() decl_stmt java.util.Iterator final final final final final = call org.apache.lucene.index.NumericDocValuesFieldUpdates.iterator() call org.apache.lucene.index.NumericDocValuesFieldUpdates.iterator() call org.apache.lucene.index.NumericDocValuesFieldUpdates.iterator() call org.apache.lucene.index.NumericDocValuesFieldUpdates.iterator() call org.apache.lucene.index.NumericDocValuesFieldUpdates.iterator() public < public < call decl NumericDocValuesFieldUpdates.reset() call decl NumericDocValuesFieldUpdates.reset() call decl NumericDocValuesFieldUpdates.reset() call decl NumericDocValuesFieldUpdates.reset() call decl NumericDocValuesFieldUpdates.reset() return new < decl_stmt int = - decl_stmt int = call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() public public return < - public public if ++ >= throw new if == decl_stmt java.lang.Long = call decl NumericDocValuesFieldUpdates.value() call decl NumericDocValuesFieldUpdates.value() call decl NumericDocValuesFieldUpdates.value() call decl NumericDocValuesFieldUpdates.value() call decl NumericDocValuesFieldUpdates.value() = call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() call decl NumericDocValuesFieldUpdates.nextDoc() return else assert < if != && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() return call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() else return public public throw new call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() assert ! call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() int int Long public < public < return new < decl_stmt int = - decl_stmt int = public public return < - public public if ++ >= throw new if == decl_stmt java.lang.Long = = return else assert < if != && return else return public public throw new public public return < - Long public public if ++ >= throw new if == decl_stmt java.lang.Long = = return else assert < if != && return else return public public throw new BinaryDocValuesFieldUpdates decl BinaryDocValuesFieldUpdates IOContext Bits int long int TrackingDirectoryWrapper decl Iterator int String SegmentWriteState long BinaryDocValues FieldInfos FieldInfo String private private < final final < < throws for < : decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.index.BinaryDocValuesFieldUpdates final final = decl_stmt long final final = call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.getNextDocValuesGen() decl_stmt java.lang.String final final = decl_stmt long final final = call org.apache.lucene.index.BinaryDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.ramBytesPerDoc() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.ramBytesPerDoc() * call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.store.IOContext final final = new new call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.index.FieldInfo final final = assert != call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) call org.apache.lucene.index.FieldInfo.setDocValuesGen(long) decl_stmt org.apache.lucene.index.FieldInfos final final = new new decl_stmt org.apache.lucene.store.TrackingDirectoryWrapper final final = new decl_stmt org.apache.lucene.index.SegmentWriteState final final = new try final final = new < decl_stmt BinaryDocValues final final = call SegmentReader.getBinaryDocValues() call SegmentReader.getBinaryDocValues() call SegmentReader.getBinaryDocValues() call SegmentReader.getBinaryDocValues() call SegmentReader.getBinaryDocValues() decl_stmt org.apache.lucene.util.Bits final final = call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() call SegmentReader.getDocsWithField() decl_stmt int final final = call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() call org.apache.lucene.index.SegmentReader.maxDoc() decl_stmt java.util.Iterator final final final final final = call org.apache.lucene.index.BinaryDocValuesFieldUpdates.iterator() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.iterator() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.iterator() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.iterator() call org.apache.lucene.index.BinaryDocValuesFieldUpdates.iterator() public < public < call decl BinaryDocValuesFieldUpdates.reset() call decl BinaryDocValuesFieldUpdates.reset() call decl BinaryDocValuesFieldUpdates.reset() call decl BinaryDocValuesFieldUpdates.reset() call decl BinaryDocValuesFieldUpdates.reset() return new < decl_stmt int = - decl_stmt int = call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() public public return < - public public if ++ >= throw new if == decl_stmt org.apache.lucene.util.BytesRef = call decl BinaryDocValuesFieldUpdates.value() call decl BinaryDocValuesFieldUpdates.value() call decl BinaryDocValuesFieldUpdates.value() call decl BinaryDocValuesFieldUpdates.value() call decl BinaryDocValuesFieldUpdates.value() = call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() call decl BinaryDocValuesFieldUpdates.nextDoc() return else assert < if != && call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() return call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() else return public public throw new call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceDocValuesGen() assert ! call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() int int BytesRef public < public < return new < decl_stmt int = - decl_stmt int = public public return < - public public if ++ >= throw new if == decl_stmt org.apache.lucene.util.BytesRef = = return else assert < if != && return else return public public throw new public public return < - BytesRef public public if ++ >= throw new if == decl_stmt org.apache.lucene.util.BytesRef = = return else assert < if != && return else return public public throw new long IOContext TrackingDirectoryWrapper long String private < private < throws decl_stmt long final final = call org.apache.lucene.index.SegmentCommitInfo.getNextFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.getNextFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.getNextFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.getNextFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.getNextFieldInfosGen() decl_stmt java.lang.String final final = decl_stmt long final final = + * decl_stmt org.apache.lucene.store.IOContext final final = new new call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.store.TrackingDirectoryWrapper final final = new call org.apache.lucene.index.SegmentCommitInfo.advanceFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceFieldInfosGen() return call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() decl Builder FieldInfo boolean FieldInfos decl FieldInfos TrackingDirectoryWrapper SegmentReader SegmentReader DocValuesFieldUpdates decl Set DocValuesFieldUpdates decl Map FieldInfo Codec public synchronized public synchronized throws assert assert decl_stmt org.apache.lucene.store.TrackingDirectoryWrapper = new decl_stmt java.util.Map final final final < < = new <> decl_stmt java.util.Set < = decl_stmt org.apache.lucene.index.FieldInfos = decl_stmt boolean = try decl_stmt org.apache.lucene.codecs.Codec final final = call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() decl_stmt org.apache.lucene.index.SegmentReader final final = == new : try decl_stmt org.apache.lucene.util.fst.Builder = new for : call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() decl_stmt org.apache.lucene.index.FieldInfo = call decl FieldInfos.add() call decl FieldInfos.add() call decl FieldInfos.add() call decl FieldInfos.add() call decl FieldInfos.add() for < : call decl Builder.putAttribute() call decl Builder.putAttribute() call decl Builder.putAttribute() call decl Builder.putAttribute() call decl Builder.putAttribute() call decl Builder.setDocValuesGen() call decl Builder.setDocValuesGen() call decl Builder.setDocValuesGen() call decl Builder.setDocValuesGen() call decl Builder.setDocValuesGen() for : decl_stmt org.apache.lucene.index.FieldInfo = call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) for : decl_stmt org.apache.lucene.index.FieldInfo = call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call decl FieldInfos.getOrAdd() call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) call org.apache.lucene.index.FieldInfo.setDocValuesType(DocValuesType) = call decl FieldInfos.finish() call decl FieldInfos.finish() call decl FieldInfos.finish() call decl FieldInfos.finish() call decl FieldInfos.finish() decl_stmt org.apache.lucene.codecs.DocValuesFormat final final = call Codec.docValuesFormat() call Codec.docValuesFormat() call Codec.docValuesFormat() call Codec.docValuesFormat() call Codec.docValuesFormat() = call Codec.fieldInfosFormat() call Codec.fieldInfosFormat() call Codec.fieldInfosFormat() call Codec.fieldInfosFormat() call Codec.fieldInfosFormat() finally if != call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() = finally if ! call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteFieldInfosGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDocValuesGen() call org.apache.lucene.index.SegmentCommitInfo.advanceNextWriteDocValuesGen() for : call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() call org.apache.lucene.store.TrackingDirectoryWrapper.getCreatedFiles() if for < : decl_stmt org.apache.lucene.index.DocValuesFieldUpdates = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() for < : decl_stmt org.apache.lucene.index.DocValuesFieldUpdates = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() call DocValuesFieldUpdates.merge() assert != call org.apache.lucene.index.SegmentCommitInfo.setFieldInfosFiles(Set) call org.apache.lucene.index.SegmentCommitInfo.setFieldInfosFiles(Set) call org.apache.lucene.index.SegmentCommitInfo.setFieldInfosFiles(Set) call org.apache.lucene.index.SegmentCommitInfo.setFieldInfosFiles(Set) call org.apache.lucene.index.SegmentCommitInfo.setFieldInfosFiles(Set) assert ! call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() for < < : call org.apache.lucene.index.SegmentCommitInfo.getDocValuesUpdatesFiles() call org.apache.lucene.index.SegmentCommitInfo.getDocValuesUpdatesFiles() call org.apache.lucene.index.SegmentCommitInfo.getDocValuesUpdatesFiles() call org.apache.lucene.index.SegmentCommitInfo.getDocValuesUpdatesFiles() call org.apache.lucene.index.SegmentCommitInfo.getDocValuesUpdatesFiles() if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.lucene.index.SegmentCommitInfo.setDocValuesUpdatesFiles(Map) call org.apache.lucene.index.SegmentCommitInfo.setDocValuesUpdatesFiles(Map) call org.apache.lucene.index.SegmentCommitInfo.setDocValuesUpdatesFiles(Map) call org.apache.lucene.index.SegmentCommitInfo.setDocValuesUpdatesFiles(Map) call org.apache.lucene.index.SegmentCommitInfo.setDocValuesUpdatesFiles(Map) call org.apache.lucene.index.IndexWriter.checkpoint() call org.apache.lucene.index.IndexWriter.checkpoint() call org.apache.lucene.index.IndexWriter.checkpoint() call org.apache.lucene.index.IndexWriter.checkpoint() call org.apache.lucene.index.IndexWriter.checkpoint() if != decl_stmt org.apache.lucene.index.SegmentReader = new call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() call SegmentCommitInfo.info() - call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() call org.apache.lucene.index.SegmentCommitInfo.getDelCount() - decl_stmt boolean = try call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() call SegmentReader.decRef() = = finally if ! call DocValuesFieldUpdates.decRef() call DocValuesFieldUpdates.decRef() call DocValuesFieldUpdates.decRef() call DocValuesFieldUpdates.decRef() call DocValuesFieldUpdates.decRef() synchronized synchronized throws assert = return public synchronized public synchronized call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() = public synchronized < public synchronized < return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()