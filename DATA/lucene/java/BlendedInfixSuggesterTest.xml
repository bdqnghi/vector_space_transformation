org.apache.lucene.search.suggest.analyzing java.io.IOException import java.nio.file.Path import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.standard.StandardAnalyzer import org.apache.lucene.analysis.util.CharArraySet import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.suggest.Input import org.apache.lucene.search.suggest.InputArrayIterator import org.apache.lucene.search.suggest.Lookup import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggesterTest super super extends Analyzer long Input long long long BlendedInfixSuggester long Path BytesRef public public throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.search.suggest.Input = new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new decl_stmt long = decl_stmt long = decl_stmt long = decl_stmt long = decl_stmt long = > > > < call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() Analyzer BlendedInfixSuggester Input long Path BytesRef public public throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt long = decl_stmt org.apache.lucene.search.suggest.Input = new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new * - * * - * call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new * / + * / + call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new * / + * / + call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() Analyzer BytesRef long BytesRef BytesRef Input long long BlendedInfixSuggester long Path public public throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.search.suggest.Input = new new new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) decl_stmt long = < call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) decl_stmt long = > call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new decl_stmt long = > decl_stmt long = < call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() Path Analyzer Input BytesRef BlendedInfixSuggester public public throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.search.suggest.Input = new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() decl Input decl List public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new new new new = new new new new new = new new new = new new new new = new new new new decl_stmt java.util.List < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new new new new new = new new new new new Analyzer String decl List Input BlendedInfixSuggester Path public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new decl_stmt java.lang.String = decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() Analyzer BytesRef decl List BytesRef BytesRef Input BlendedInfixSuggester Path public public throws decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.search.suggest.Input = new new new new decl_stmt java.nio.file.Path = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) for : call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() decl List private static private static throws decl_stmt java.util.List < = for : if return return - Analyzer InputArrayIterator decl List BlendedInfixSuggester private < private < throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester = new decl_stmt org.apache.lucene.search.suggest.InputArrayIterator = new call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() call BlendedInfixSuggester.build() decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call org.apache.lucene.search.suggest.analyzing.BlendedInfixSuggester.lookup(CharSequence,Set,int,boolean,boolean) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call BlendedInfixSuggester.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() return