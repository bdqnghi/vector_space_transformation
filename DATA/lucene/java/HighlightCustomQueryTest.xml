org.apache.lucene.search.highlight.custom org.apache.lucene.analysis.CannedTokenStream import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.search.highlight.Highlighter import org.apache.lucene.search.highlight.InvalidTokenOffsetsException import org.apache.lucene.search.highlight.QueryScorer import org.apache.lucene.search.highlight.SimpleFragmenter import org.apache.lucene.search.highlight.SimpleHTMLFormatter import org.apache.lucene.search.highlight.WeightedSpanTerm import org.apache.lucene.search.highlight.WeightedSpanTermExtractor import org.apache.lucene.util.LuceneTestCase import java.io.IOException import java.util.Collections import java.util.Map import class org.apache.lucene.search.highlight.custom.HighlightCustomQueryTest super super extends String CustomQuery String String String public public throws decl_stmt java.lang.String = decl_stmt CustomQuery = new new decl_stmt java.lang.String = decl_stmt java.lang.String = if + + + + = new new = = if + + + + WeightedSpanTermExtractor decl Map public public throws decl_stmt org.apache.lucene.search.highlight.WeightedSpanTermExtractor = new protected protected < throws call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt java.util.Map < = call org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(Query,float,TokenStream) call org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(Query,float,TokenStream) call org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(Query,float,TokenStream) call org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(Query,float,TokenStream) call org.apache.lucene.search.highlight.WeightedSpanTermExtractor.getWeightedSpanTerms(Query,float,TokenStream) new new new call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() protected protected < throws new String SimpleHTMLFormatter TokenStream Highlighter MyQueryScorer private private throws decl_stmt org.apache.lucene.analysis.TokenStream = new decl_stmt org.apache.lucene.search.highlight.SimpleHTMLFormatter = new decl_stmt MyQueryScorer = new decl_stmt org.apache.lucene.search.highlight.Highlighter = new call org.apache.lucene.search.highlight.Highlighter.setTextFragmenter(Fragmenter) call org.apache.lucene.search.highlight.Highlighter.setTextFragmenter(Fragmenter) call org.apache.lucene.search.highlight.Highlighter.setTextFragmenter(Fragmenter) call org.apache.lucene.search.highlight.Highlighter.setTextFragmenter(Fragmenter) call org.apache.lucene.search.highlight.Highlighter.setTextFragmenter(Fragmenter) new decl_stmt java.lang.String = call org.apache.lucene.search.highlight.Highlighter.getBestFragments(Analyzer,String,String,int) call org.apache.lucene.search.highlight.Highlighter.getBestFragments(Analyzer,String,String,int) call org.apache.lucene.search.highlight.Highlighter.getBestFragments(Analyzer,String,String,int) call org.apache.lucene.search.highlight.Highlighter.getBestFragments(Analyzer,String,String,int) call org.apache.lucene.search.highlight.Highlighter.getBestFragments(Analyzer,String,String,int) return call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == : float BoostQuery protected protected < throws decl_stmt float = while instanceof decl_stmt org.apache.lucene.search.BoostQuery = *= call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() if instanceof new protected protected return == new : new public public return new public public throws return new int int public public decl_stmt int final final = decl_stmt int = = * + == : return CustomQuery public public if == return if ! return if != return decl_stmt CustomQuery = if == if != return else if ! return return