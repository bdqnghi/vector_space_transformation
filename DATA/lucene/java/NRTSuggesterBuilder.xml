org.apache.lucene.search.suggest.document java.io.IOException import java.util.PriorityQueue import org.apache.lucene.store.DataOutput import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.fst.Builder import org.apache.lucene.util.fst.ByteSequenceOutputs import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.PairOutputs import org.apache.lucene.util.fst.PositiveIntOutputs import org.apache.lucene.util.fst.Util import static static org.apache.lucene.search.suggest.document.NRTSuggester.encode import class org.apache.lucene.search.suggest.document.NRTSuggesterBuilder int int decl PairOutputs decl Builder int int decl PriorityQueue BytesRefBuilder int IntsRefBuilder public public byte BytesRef public public throws decl_stmt org.apache.lucene.util.BytesRef = call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() new int int public public throws decl_stmt int = decl_stmt int = call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() + call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() + for : if == call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() + call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() + = ++ call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - byte ++ call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call decl PairOutputs.newPair() call decl PairOutputs.newPair() call decl PairOutputs.newPair() call decl PairOutputs.newPair() call decl PairOutputs.newPair() = call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.clear() call decl PriorityQueue.clear() call decl PriorityQueue.clear() call decl PriorityQueue.clear() call decl PriorityQueue.clear() decl FST public public throws decl_stmt org.apache.lucene.util.fst.FST final final final < < = call decl Builder.finish() call decl Builder.finish() call decl Builder.finish() call decl Builder.finish() call decl Builder.finish() if == return call decl FST.save() call decl FST.save() call decl FST.save() call decl FST.save() call decl FST.save() assert > return int private static private static decl_stmt int = + * if > *= return public public return