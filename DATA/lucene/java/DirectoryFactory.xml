org.apache.solr.core java.io.Closeable import java.io.File import java.io.FileFilter import java.io.IOException import java.lang.invoke.MethodHandles import java.util.Collection import java.util.Collections import org.apache.commons.io.FileUtils import org.apache.lucene.store.Directory import org.apache.lucene.store.FlushInfo import org.apache.lucene.store.IOContext import org.apache.lucene.store.LockFactory import org.apache.solr.common.SolrException import org.apache.solr.core.CachingDirectoryFactory.CloseListener import org.apache.solr.util.plugin.NamedListInitializedPlugin import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.core.DirectoryFactory super super implements Logger IOContext String CoreContainer String String String String String public public throws public public return public public throws return public public return new decl String long public static public static throws decl_stmt java.lang.String final final final = decl_stmt long = for final final : += if < break return public static public static throws try return catch return boolean String public static public static decl_stmt boolean = decl_stmt java.lang.String try = if != for : catch = return public public return public public throws return public < public < return File File String decl File String public public final final final final decl_stmt File = new if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return decl_stmt File final final = new decl_stmt File = call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() new public public decl_stmt java.lang.String = return && ! && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) if == || == return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) for : decl_stmt java.lang.String = try if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() String public public decl_stmt java.lang.String = return && ! && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) File protected protected throws decl_stmt File = new return ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() public public =