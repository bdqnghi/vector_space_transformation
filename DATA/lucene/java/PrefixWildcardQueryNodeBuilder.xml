org.apache.lucene.queryparser.flexible.standard.builders org.apache.lucene.index.Term import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode import org.apache.lucene.queryparser.flexible.standard.processors.MultiTermRewriteMethodProcessor import org.apache.lucene.search.MultiTermQuery import org.apache.lucene.search.PrefixQuery import class org.apache.lucene.queryparser.flexible.standard.builders.PrefixWildcardQueryNodeBuilder super super implements PrefixQuery String decl MultiTermQuery PrefixWildcardQueryNode public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.nodes.PrefixWildcardQueryNode = decl_stmt java.lang.String = call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() call PrefixWildcardQueryNode.getText() - decl_stmt org.apache.lucene.search.PrefixQuery = new new call PrefixWildcardQueryNode.getFieldAsString() call PrefixWildcardQueryNode.getFieldAsString() call PrefixWildcardQueryNode.getFieldAsString() call PrefixWildcardQueryNode.getFieldAsString() call PrefixWildcardQueryNode.getFieldAsString() decl_stmt RewriteMethod = if != call PrefixQuery.setRewriteMethod() call PrefixQuery.setRewriteMethod() call PrefixQuery.setRewriteMethod() call PrefixQuery.setRewriteMethod() call PrefixQuery.setRewriteMethod() return