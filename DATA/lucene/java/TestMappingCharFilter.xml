org.apache.lucene.analysis.charfilter java.io.Reader import java.io.StringReader import java.util.ArrayList import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Random import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.CharFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.util.TestUtil import org.apache.lucene.util.UnicodeUtil import class org.apache.lucene.analysis.charfilter.TestMappingCharFilter super super extends NormalizeCharMap decl NormalizeCharMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() CharFilter decl char int public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt char = new decl_stmt int = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() - call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() call CharFilter.reset() = call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() call CharFilter.read() CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter TokenStream public public throws decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new CharFilter String TokenStream public public throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.analysis.CharFilter = new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() CharFilter String TokenStream public public throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.analysis.CharFilter = new new new decl_stmt org.apache.lucene.analysis.TokenStream = new new new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() int Tokenizer Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl_stmt int = * call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl Builder decl NormalizeCharMap Analyzer NormalizeCharMap Tokenizer public public throws decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() decl_stmt org.apache.lucene.analysis.charfilter.NormalizeCharMap final final = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl_stmt java.lang.String = call NormalizeCharMap.close() call NormalizeCharMap.close() call NormalizeCharMap.close() call NormalizeCharMap.close() call NormalizeCharMap.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new int int Tokenizer Analyzer NormalizeCharMap public public throws decl_stmt int = for = < ++ decl_stmt org.apache.lucene.analysis.charfilter.NormalizeCharMap final final = decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl_stmt int = call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new protected protected return new decl Builder decl NormalizeCharMap Random String decl Set int private private decl_stmt java.util.Random = decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt java.util.Set < = new <> decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) for = < ++ decl_stmt java.lang.String = if ! call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() && call int.length() call int.length() call int.length() call int.length() call int.length() != decl_stmt java.lang.String = call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() return call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() decl List decl Map Random StringBuilder String MappingCharFilter String String NormalizeCharMap int int int String int decl Builder int int int boolean int int StringBuilder decl char decl NormalizeCharMap int String String char String decl List public public throws decl_stmt java.util.Random final final = decl_stmt int final final = for = < ++ if + decl_stmt char final final = char decl_stmt java.util.Map final final final < = new <> decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new decl_stmt int final final = if while call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() < decl_stmt java.lang.String final final = if call int.length() call int.length() call int.length() call int.length() call int.length() != && ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt java.lang.String final final = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() call decl NormalizeCharMap.add() if + + + decl_stmt org.apache.lucene.analysis.charfilter.NormalizeCharMap final final = call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() call decl NormalizeCharMap.build() if for = < ++ decl_stmt java.lang.String final final = if + decl_stmt java.lang.StringBuilder final final = new decl_stmt java.util.List final final final < = new <> decl_stmt int = decl_stmt int = while < call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() decl_stmt int = - decl_stmt java.lang.String = for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String final final = if + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() <= call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() call NormalizeCharMap.length() decl_stmt int final final = + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt boolean = for = < ++ if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) - != call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() = break if decl_stmt java.lang.String final final = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() = if != - if + call NormalizeCharMap.substring() call NormalizeCharMap.substring() call NormalizeCharMap.substring() call NormalizeCharMap.substring() call NormalizeCharMap.substring() + + + + + call String.append() call String.append() call String.append() call String.append() call String.append() decl_stmt int final final = call int.length() call int.length() call int.length() call int.length() call int.length() for = < ++ call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - call int.length() call int.length() call int.length() call int.length() call int.length() + + += - call int.length() call int.length() call int.length() call int.length() call int.length() += if call int.length() call int.length() call int.length() call int.length() call int.length() < else if call int.length() call int.length() call int.length() call int.length() call int.length() > for = < call int.length() call int.length() call int.length() call int.length() call int.length() ++ call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + - else assert call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() == call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() : + call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() + + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() else call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() + call String.append() call String.append() call String.append() call String.append() call String.append() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() call NormalizeCharMap.charAt() ++ decl_stmt java.lang.String final final = call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() if for = < call int.length() call int.length() call int.length() call int.length() call int.length() ++ + call int.charAt() call int.charAt() call int.charAt() call int.charAt() call int.charAt() + + call StringBuilder.get() call StringBuilder.get() call StringBuilder.get() call StringBuilder.get() call StringBuilder.get() decl_stmt org.apache.lucene.analysis.charfilter.MappingCharFilter final final = new new decl_stmt java.lang.StringBuilder final final = new decl_stmt java.util.List final final final < = new <> while if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt int final final = call String.read() call String.read() call String.read() call String.read() call String.read() if == - break call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() char else decl_stmt char final final final = new decl_stmt int final final = == : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - decl_stmt int final final = call String.read() call String.read() call String.read() call String.read() call String.read() - if == - break else call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() call MappingCharFilter.append() if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == while call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() < call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call String.correctOffset() call String.correctOffset() call String.correctOffset() call String.correctOffset() call String.correctOffset() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() while call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() < call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call MappingCharFilter.length() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call StringBuilder.add() call String.correctOffset() call String.correctOffset() call String.correctOffset() call String.correctOffset() call String.correctOffset() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() call StringBuilder.size() decl_stmt java.lang.String final final = call MappingCharFilter.toString() call MappingCharFilter.toString() call MappingCharFilter.toString() call MappingCharFilter.toString() call MappingCharFilter.toString()