org.apache.solr.cloud java.io.IOException import java.util.HashMap import java.util.Map import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.CoreAdminRequest import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.client.solrj.response.CoreAdminResponse import org.apache.solr.cloud.overseer.OverseerAction import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.Slice.State import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CollectionParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.Utils import org.apache.solr.util.FileUtils import org.apache.zookeeper.KeeperException import org.junit.Test import class org.apache.solr.cloud.DeleteShardTest super super extends ClusterState Slice Slice = public = public throws decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt org.apache.solr.common.cloud.Slice = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) decl_stmt org.apache.solr.common.cloud.Slice = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() try catch = = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() call org.apache.solr.common.cloud.Slice.getState() ClusterState int ZkStateReader protected protected throws decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt int = while -- > = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() if call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) == break call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) SolrRequest ModifiableSolrParams String protected protected throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.SolrRequest = new call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) call org.apache.solr.client.solrj.SolrRequest.setPath(String) decl_stmt java.lang.String = = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - try = State boolean ZkNodeProps ClusterState DistributedQueue decl Map ZkStateReader protected protected throws decl_stmt org.apache.solr.cloud.DistributedQueue = decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.ZkNodeProps = new decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) call org.apache.solr.cloud.DistributedQueue.offer(byte) decl_stmt boolean = for = > -- decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt sun.security.provider.certpath.State = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) if == = break if ! throw new + + + String String CoreAdminResponse String NamedList String CollectionAdminResponse Replica public public throws decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt java.lang.String = call Replica.get() call Replica.get() call Replica.get() call Replica.get() call Replica.get() decl_stmt java.lang.String = call Replica.get() call Replica.get() call Replica.get() call Replica.get() call Replica.get() decl_stmt java.lang.String decl_stmt java.lang.String try = decl_stmt org.apache.solr.client.solrj.response.CoreAdminResponse = decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() = call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) new = = call Replica.get() call Replica.get() call Replica.get() call Replica.get() call Replica.get() = call Replica.get() call Replica.get() call Replica.get() call Replica.get() call Replica.get() try = decl_stmt org.apache.solr.client.solrj.response.CoreAdminResponse = decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() call org.apache.solr.client.solrj.response.CoreAdminResponse.getCoreStatus() = call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) call org.apache.solr.common.util.NamedList.findRecursive(String) = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) new