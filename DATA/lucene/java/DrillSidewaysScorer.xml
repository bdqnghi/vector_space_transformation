org.apache.lucene.facet java.io.IOException import java.util.Collection import java.util.Collections import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.search.BulkScorer import org.apache.lucene.search.Collector import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.LeafCollector import org.apache.lucene.search.Scorer import org.apache.lucene.search.TwoPhaseIterator import org.apache.lucene.search.Weight import org.apache.lucene.util.Bits import org.apache.lucene.util.FixedBitSet import class org.apache.lucene.facet.DrillSidewaysScorer super super extends float DocIdSetIterator int int Scorer Collector decl DocsAndCost LeafCollector LeafReaderContext int boolean public public return call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() long int long FakeScorer long public public throws if != throw new + if != throw new decl_stmt org.apache.lucene.search.FakeScorer = new if != = call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() else = for : = decl_stmt long = call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() call org.apache.lucene.search.DocIdSetIterator.cost() decl_stmt int final final = decl_stmt long = for = < ++ += decl_stmt long = if > = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() for : if || < / else if > && < / else return boolean int LeafCollector private private throws decl_stmt int = call Scorer.docID() call Scorer.docID() call Scorer.docID() call Scorer.docID() call Scorer.docID() while != if != && == = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() continue decl_stmt org.apache.lucene.search.LeafCollector = for : if < decl_stmt boolean = if == if == = else = if == if != = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() continue continue else = = = call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() if == else = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() int int int int int int decl int DocsAndCost int int decl int decl float FixedBitSet decl int int decl int private private throws decl_stmt int final final = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() decl_stmt int final final = decl_stmt int = new decl_stmt int = new decl_stmt float = new decl_stmt int = new decl_stmt int = new = - decl_stmt int = decl_stmt org.apache.lucene.util.FixedBitSet final final = new while decl_stmt DocsAndCost = decl_stmt int = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() while < if == || decl_stmt int = & if != && == || call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) = = = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() while < if == || && == || call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() decl_stmt int = & if != call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) = = = else if >= = = else = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() decl_stmt int = decl_stmt int = while < && = call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) != decl_stmt int = assert != - decl_stmt int = call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() if < = call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) call org.apache.lucene.search.DocIdSetIterator.advance(int) if == = call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() ++ = ++ else = - ++ call org.apache.lucene.util.FixedBitSet.clear(int) call org.apache.lucene.util.FixedBitSet.clear(int) call org.apache.lucene.util.FixedBitSet.clear(int) call org.apache.lucene.util.FixedBitSet.clear(int) call org.apache.lucene.util.FixedBitSet.clear(int) if == if >= break += continue for = < ++ = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() while < decl_stmt int = & if == && >= && == || call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() if >= = + = + else = + = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() for = < ++ decl_stmt int = = = if == + else if == if >= break += int int int int int decl int DocsAndCost decl int decl float decl int int decl int private private throws decl_stmt int final final = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() decl_stmt int final final = decl_stmt int = new decl_stmt int = new decl_stmt float = new decl_stmt int = new decl_stmt int = new = - decl_stmt int = while decl_stmt int = decl_stmt int = call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() while < if == || decl_stmt int = & assert != : + + + = = call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() ++ = = = = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() if == if >= break += continue decl_stmt DocsAndCost = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() while < decl_stmt int = & if == && == || call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() = = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() for = < ++ decl_stmt DocsAndCost = = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() while < decl_stmt int = & if == && >= && == || call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() call DocsAndCost.twoPhase() if >= = + = + else = + = call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() call DocsAndCost.approximation() for = < ++ decl_stmt int = = = if == + else if == if >= break += private private throws if != call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) for : private private throws public public return public public return + public public throw new public public return public < public < return new public public throw new