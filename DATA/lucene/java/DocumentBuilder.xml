org.apache.solr.update java.util.List import java.util.Set import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.IndexableField import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.schema.CopyField import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import com.google.common.collect.Sets import class org.apache.solr.update.DocumentBuilder private static private static if instanceof return for : if != String SchemaField private static private static decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = if != = + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + return boolean SchemaField String Object float float float decl Set float boolean boolean decl List SchemaField String boolean Document public static public static decl_stmt org.apache.lucene.document.Document = new decl_stmt float final final = decl_stmt java.util.Set < = for : decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = decl_stmt boolean = if != && ! call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() && > throw new + + + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + decl_stmt float = decl_stmt boolean = != && call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() && ! call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() if == && != throw new + + + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + decl_stmt float = * decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = decl_stmt boolean = try for : if == continue = if != = : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() if != for : decl_stmt org.apache.solr.schema.SchemaField = decl_stmt boolean final final = call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() if ! call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() && throw new + + + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() + + = decl_stmt java.lang.Object = if instanceof && > = decl_stmt float final final = call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() && ! call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() call org.apache.solr.schema.SchemaField.omitNorms() : : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() = = catch throw catch throw new + + + + + + + if ! && throw new + + + + for : if call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() == if != else decl_stmt java.lang.String = + + throw new return