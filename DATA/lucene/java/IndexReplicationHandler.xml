org.apache.lucene.replicator java.io.IOException import java.util.Collections import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.Callable import java.util.regex.Matcher import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexCommit import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexNotFoundException import org.apache.lucene.index.IndexWriter import org.apache.lucene.replicator.ReplicationClient.ReplicationHandler import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.util.IOUtils import org.apache.lucene.util.InfoStream import class org.apache.lucene.replicator.IndexReplicationHandler super super implements String Directory decl Callable String InfoStream decl Map decl List public static public static throws try if decl_stmt java.util.List < = return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - catch return String public static public static < if if return else throw new decl_stmt java.lang.String = - if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throw new + + return public static public static < for : IndexCommit decl Set Matcher public static public static try decl_stmt org.apache.lucene.index.IndexCommit = if != && call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() call IndexCommit.getSegmentsFileName() decl_stmt java.util.Set < = new <> call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() call IndexCommit.getFileNames() decl_stmt java.util.regex.Matcher = for : if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) || catch if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + public static public static < throws if ! for : public public return public < < public < < return decl List String Directory String boolean public public < < < < < throws if > throw new + decl_stmt org.apache.lucene.store.Directory = decl_stmt java.util.List < = decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt boolean = try call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.copyFrom() call Directory.copyFrom() call Directory.copyFrom() call Directory.copyFrom() call Directory.copyFrom() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() = finally if ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = = if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + + + if != try call decl Callable.call() call decl Callable.call() call decl Callable.call() call decl Callable.call() call decl Callable.call() catch throw new public public if == = =