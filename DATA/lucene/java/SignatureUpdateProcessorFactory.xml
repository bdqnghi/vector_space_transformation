org.apache.solr.update.processor java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.List import org.apache.lucene.index.Term import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.StrUtils import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.update.AddUpdateCommand import org.apache.solr.core.SolrCore import org.apache.solr.schema.SchemaField import org.apache.solr.util.plugin.SolrCoreAware import class org.apache.solr.update.processor.SignatureUpdateProcessorFactory super super extends super implements boolean boolean Term String SolrParams String decl List boolean SolrParams Object public public final final if != decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = decl_stmt java.lang.Object = = == : if != SchemaField public public decl_stmt org.apache.solr.schema.SchemaField final final = if == throw new + if && ! call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() throw new + public < public < return public public return public public return public public return public public return public public return new decl Collection String decl char int int SolrInputField SolrInputDocument Object Signature decl byte decl List boolean public public throws if decl_stmt org.apache.solr.common.SolrInputDocument = decl_stmt java.util.List < = decl_stmt boolean = if == || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == if throw new decl_stmt java.util.Collection < = call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() = new <> call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else = decl_stmt org.apache.solr.update.processor.Signature = call sun.reflect.generics.tree.Signature.init(SignatureSpi,int,Key,SecureRandom) call sun.reflect.generics.tree.Signature.init(SignatureSpi,int,Key,SecureRandom) call sun.reflect.generics.tree.Signature.init(SignatureSpi,int,Key,SecureRandom) call sun.reflect.generics.tree.Signature.init(SignatureSpi,int,Key,SecureRandom) call sun.reflect.generics.tree.Signature.init(SignatureSpi,int,Key,SecureRandom) for : decl_stmt org.apache.solr.common.SolrInputField = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) if != if throw new + + call Signature.add() call Signature.add() call Signature.add() call Signature.add() call Signature.add() decl_stmt java.lang.Object = call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() if instanceof for : call Signature.add() call Signature.add() call Signature.add() call Signature.add() call Signature.add() else call Signature.add() call Signature.add() call Signature.add() call Signature.add() call Signature.add() decl_stmt byte = call Signature.getSignature() call Signature.getSignature() call Signature.getSignature() call Signature.getSignature() call Signature.getSignature() decl_stmt char = new << for = < ++ decl_stmt int = decl_stmt int = << = >> & + = & decl_stmt java.lang.String = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) if = new if != =