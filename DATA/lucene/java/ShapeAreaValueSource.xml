org.apache.lucene.spatial.util java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.List import java.util.Map import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.DoubleDocValues import org.apache.lucene.search.Explanation import org.apache.lucene.search.IndexSearcher import class org.apache.lucene.spatial.util.ShapeAreaValueSource super super extends boolean SpatialContext ValueSource double public public return + call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() + + + public public throws call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) FunctionValues Shape Explanation decl List public public throws decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() return new public public decl_stmt java.awt.Shape = call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) if == || call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() return return call Shape.getArea() call Shape.getArea() call Shape.getArea() call Shape.getArea() call Shape.getArea() : * public public return call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) call org.apache.lucene.queries.function.FunctionValues.exists(int) public public decl_stmt org.apache.lucene.search.Explanation = decl_stmt java.util.List < = new <> call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.lucene.queries.function.FunctionValues.explain(int) call org.apache.lucene.queries.function.FunctionValues.explain(int) call org.apache.lucene.queries.function.FunctionValues.explain(int) call org.apache.lucene.queries.function.FunctionValues.explain(int) call org.apache.lucene.queries.function.FunctionValues.explain(int) return call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() Shape public public decl_stmt java.awt.Shape = if == || call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() call Shape.isEmpty() return return call Shape.getArea() call Shape.getArea() call Shape.getArea() call Shape.getArea() call Shape.getArea() : * public public return decl List Explanation public public decl_stmt org.apache.lucene.search.Explanation = decl_stmt java.util.List < = new <> call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call org.apache.lucene.search.Explanation.getDetails() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() call Explanation.getDescription() ShapeAreaValueSource public public if == return if == || != return decl_stmt org.apache.lucene.spatial.util.ShapeAreaValueSource = if != return if ! call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() return return int public public decl_stmt int = call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() = * + : return