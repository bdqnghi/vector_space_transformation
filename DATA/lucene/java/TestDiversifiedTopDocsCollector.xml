org.apache.lucene.search java.io.IOException import java.util.HashMap import java.util.Map import org.apache.lucene.document.Document import org.apache.lucene.document.Field.Store import org.apache.lucene.document.Field import org.apache.lucene.document.FloatDocValuesField import org.apache.lucene.document.LegacyFloatField import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DocValues import org.apache.lucene.index.FieldInvertState import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.SlowCompositeReaderWrapper import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.search.TestDiversifiedTopDocsCollector super super extends SortedDocValues IndexSearcher decl Map decl String IndexReader Directory TopDocs int int public public throws decl_stmt int = decl_stmt int = decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) >= DiversifiedTopDocsCollector int decl ScoreDoc int public public throws decl_stmt int = decl_stmt int = decl_stmt org.apache.lucene.search.DiversifiedTopDocsCollector = decl_stmt org.apache.lucene.search.ScoreDoc = call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() <= int DiversifiedTopDocsCollector int decl ScoreDoc int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt org.apache.lucene.search.DiversifiedTopDocsCollector = * decl_stmt org.apache.lucene.search.ScoreDoc = call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() <= int DiversifiedTopDocsCollector public public throws decl_stmt int = decl_stmt org.apache.lucene.search.DiversifiedTopDocsCollector = call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() - call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() + call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() - call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() call DiversifiedTopDocsCollector.topDocs() protected protected final final return new public public return + public public return + protected protected return new public public return == - : public public return == - : public public throws = return public public return + + + + + + + + + + private private throws if return else return DiversifiedTopDocsCollector private private throws decl_stmt org.apache.lucene.search.DiversifiedTopDocsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) return DiversifiedTopDocsCollector private private throws decl_stmt org.apache.lucene.search.DiversifiedTopDocsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) return decl BooleanQuery private private decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() Field Field Document RandomIndexWriter Field Record String LeafReader SortedDocValuesField Field Field Similarity Field public public throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = decl_stmt SortedDocValuesField = new new decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt org.apache.solr.handler.dataimport.config.Field = decl_stmt org.apache.solr.handler.dataimport.config.Field = decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() for = < ++ decl_stmt java.lang.String = decl_stmt Record = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call SortedDocValuesField.setBytesValue() call SortedDocValuesField.setBytesValue() call SortedDocValuesField.setBytesValue() call SortedDocValuesField.setBytesValue() call SortedDocValuesField.setBytesValue() new call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.solr.handler.dataimport.config.Field.setFloatValue(float) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if == call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = decl_stmt org.apache.lucene.index.LeafReader = = call LeafReader.getSortedDocValues() call LeafReader.getSortedDocValues() call LeafReader.getSortedDocValues() call LeafReader.getSortedDocValues() call LeafReader.getSortedDocValues() decl_stmt org.apache.lucene.search.similarities.Similarity final final = call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) new public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = Integer int Document decl HashMap Record int private private throws decl_stmt int = decl_stmt HashMap < = new < for = < ++ decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) decl_stmt Record = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) decl_stmt java.lang.Integer = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() decl_stmt int = if != = call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() + = call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() return public public return public public return NumericDocValues SimScorer public public throws decl_stmt SimScorer final final = decl_stmt NumericDocValues final final = return new public public return int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() public public return call SimScorer.computeSlopFactor() call SimScorer.computeSlopFactor() call SimScorer.computeSlopFactor() call SimScorer.computeSlopFactor() call SimScorer.computeSlopFactor() public public return call SimScorer.computePayloadFactor() call SimScorer.computePayloadFactor() call SimScorer.computePayloadFactor() call SimScorer.computePayloadFactor() call SimScorer.computePayloadFactor() public public return int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() + + public public return int public public return public public return public public return int + +