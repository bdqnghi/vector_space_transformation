org.apache.lucene.search java.util.ArrayList import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.CountDownLatch import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.MultiFields import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LineFileDocs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.TestSameScoresWithThreads super super extends int int decl List CountDownLatch TopDocs int Terms LineFileDocs int MockAnalyzer double decl Thread decl Map BytesRef TopDocs Thread TermsEnum Document IndexSearcher IndexReader RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.analysis.MockAnalyzer = new call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.util.LineFileDocs = new decl_stmt int = decl_stmt int = while < decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() += call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt org.apache.lucene.index.Terms = decl_stmt int = decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != ++ > decl_stmt double = / = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt java.util.Map final final final < = new <> while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != if <= decl_stmt org.apache.lucene.util.BytesRef = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new if ! call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt int = decl_stmt java.lang.Thread = new for = < ++ decl_stmt java.lang.Thread = new public public try call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) for = < ++ decl_stmt java.util.List < < = new <> call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() for < : decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt org.apache.lucene.search.TopDocs = + for = < ++ == catch throw new = call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() for : call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TopDocs TopDocs decl List public public try for = < ++ decl_stmt java.util.List < < = new <> for < : decl_stmt org.apache.lucene.search.TopDocs = new new decl_stmt org.apache.lucene.search.TopDocs = + for = < ++ == catch throw new