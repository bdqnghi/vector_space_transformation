org.apache.lucene.spatial.prefix java.io.IOException import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Circle import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import org.locationtech.spatial4j.shape.SpatialRelation import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.DocIdSet import org.apache.lucene.spatial.prefix.tree.Cell import org.apache.lucene.spatial.prefix.tree.CellIterator import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.util.BitDocIdSet import org.apache.lucene.util.FixedBitSet import class org.apache.lucene.spatial.prefix.WithinPrefixTreeQuery super super extends Shape WithinPrefixTreeQuery public public if ! return decl_stmt org.apache.lucene.spatial.prefix.WithinPrefixTreeQuery = if != ! call Shape.equals() call Shape.equals() call Shape.equals() call Shape.equals() call Shape.equals() : != return return int public public decl_stmt int = = * + != call Shape.hashCode() call Shape.hashCode() call Shape.hashCode() call Shape.hashCode() call Shape.hashCode() : return public public return + + + + + + + + + + + + + double SpatialContext double double Rectangle Circle double double protected protected if <= throw new decl_stmt SpatialContext = if instanceof return call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() else if instanceof decl_stmt Circle = decl_stmt double = call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() + if call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() && > = return call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() call SpatialContext.makeCircle() call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() else decl_stmt org.apache.lucene.geo.Rectangle = decl_stmt double = call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() - decl_stmt double = call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() + decl_stmt double = call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() - decl_stmt double = call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() + if call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() call SpatialContext.isGeo() if < - = - if > = if == - || == || call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() + * > = - = else = = else = call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() = call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() = call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() = call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() return call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() Cell SpatialRelation FixedBitSet FixedBitSet CellIterator SpatialRelation protected protected throws return new decl_stmt org.apache.lucene.util.FixedBitSet private decl_stmt org.apache.lucene.util.FixedBitSet private protected protected = new = new protected protected call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) return new protected protected return protected protected throws decl_stmt SpatialRelation = if == call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() : return else if == return else if == return return protected protected throws if else private private decl_stmt SpatialRelation = if == return call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() if == return if == return decl_stmt org.apache.lucene.spatial.prefix.tree.CellIterator = while call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() if ! return return protected protected throws protected protected = new = new protected protected return new protected protected return SpatialRelation protected protected throws decl_stmt SpatialRelation = if == call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() : return else if == return else if == return return protected protected throws if else Cell SpatialRelation CellIterator private private decl_stmt SpatialRelation = if == return call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() call SpatialRelation.intersects() if == return if == return decl_stmt org.apache.lucene.spatial.prefix.tree.CellIterator = while call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() call CellIterator.hasNext() decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() call org.apache.lucene.spatial.prefix.tree.CellIterator.next() if ! return return protected protected throws