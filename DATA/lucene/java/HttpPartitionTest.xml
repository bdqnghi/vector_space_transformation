org.apache.solr.cloud java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.Collection import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Properties import java.util.Set import java.util.concurrent.TimeUnit import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.JSONTestUtil import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.NamedList import org.apache.solr.core.CoreContainer import org.apache.solr.core.SolrCore import org.apache.solr.update.UpdateLog import org.apache.solr.util.MockCoreContainer.MockCoreDescriptor import org.apache.solr.util.RTimer import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import class annotation annotation org.apache.solr.cloud.HttpPartitionTest super super extends Logger long int public public throws return public public throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) ZkCoreNodeProps Replica String String ZkController String JettySolrRunner decl Map SolrZkClient CoreContainer String MockCoreDescriptor Replica protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = decl_stmt org.apache.solr.core.CoreContainer = call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() decl_stmt org.apache.solr.cloud.ZkController = call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() decl_stmt MockCoreDescriptor = new public public return new call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() new public public return call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() public public return call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() decl_stmt java.util.Map < = call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.solr.common.cloud.SolrZkClient = call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() decl_stmt java.lang.String = call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryZnodePath(String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryZnodePath(String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryZnodePath(String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryZnodePath(String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryZnodePath(String,String) call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) call org.apache.solr.common.cloud.SolrZkClient.setData(String,File,boolean) = call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryStateObject(String,String,String) call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.solr.common.cloud.SolrZkClient.delete(String,int,boolean) call org.apache.solr.common.cloud.SolrZkClient.delete(String,int,boolean) call org.apache.solr.common.cloud.SolrZkClient.delete(String,int,boolean) call org.apache.solr.common.cloud.SolrZkClient.delete(String,int,boolean) call org.apache.solr.common.cloud.SolrZkClient.delete(String,int,boolean) - try new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() public public return new new public public return public public return public public return public public return Slice SocketProxy decl Collection String int Replica ClusterState decl List SocketProxy Replica ZkStateReader protected protected throws decl_stmt java.lang.String = decl_stmt java.util.List < = + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.solr.cloud.SocketProxy = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() decl_stmt int = decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt java.util.Collection < = call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) decl_stmt org.apache.solr.common.cloud.Slice = call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() decl_stmt org.apache.solr.common.cloud.Replica = call Slice.getReplica() call Slice.getReplica() call Slice.getReplica() call Slice.getReplica() call Slice.getReplica() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() = = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() decl_stmt org.apache.solr.cloud.SocketProxy = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() = call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() = decl_stmt org.apache.solr.common.cloud.Replica = try = for : try = = ZkCoreNodeProps boolean UpdateLog Replica String String Long JettySolrRunner Long CoreContainer SocketProxy decl List int protected protected throws decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.cloud.SocketProxy = call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() decl_stmt java.util.List < = decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = decl_stmt org.apache.solr.core.CoreContainer = call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getCoreContainer() decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt java.lang.Long = try = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) + + + call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() decl_stmt org.apache.solr.update.UpdateLog = = call org.apache.solr.update.UpdateLog.getCurrentMaxVersion() call org.apache.solr.update.UpdateLog.getCurrentMaxVersion() call org.apache.solr.update.UpdateLog.getCurrentMaxVersion() call org.apache.solr.update.UpdateLog.getCurrentMaxVersion() call org.apache.solr.update.UpdateLog.getCurrentMaxVersion() + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + decl_stmt int = decl_stmt boolean = for = < ++ if == if call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() = else if >= call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() = + if call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() = try = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) + + + call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() decl_stmt java.lang.Long = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + > + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + try new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl List String decl CollectionAdminRequest SocketProxy SocketProxy protected protected throws decl_stmt java.lang.String = decl_stmt java.util.List < = + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.solr.cloud.SocketProxy = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() decl_stmt org.apache.solr.cloud.SocketProxy = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.close() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() call org.apache.solr.cloud.SocketProxy.reopen() = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + try decl_stmt Delete = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl List long String SolrInputDocument String decl CollectionAdminRequest Replica decl Set String JettySolrRunner String decl List Replica protected protected throws decl_stmt java.lang.String = decl_stmt java.util.List < = + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt java.lang.String = call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() + + + decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt long = + while < decl_stmt java.lang.String = try decl_stmt org.apache.solr.common.cloud.Replica = = call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() catch if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) break decl_stmt org.apache.solr.common.cloud.Replica = call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() try = try = catch try = decl_stmt java.util.List < = decl_stmt java.util.Set < = new <> for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + try decl_stmt Delete = new call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.setCollectionName() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() ClusterState decl Replica decl State ZkStateReader decl Map protected < protected < throws decl_stmt java.util.Map < = new < decl_stmt org.apache.solr.common.cloud.ZkStateReader = decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() for : call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) if for : decl_stmt sun.security.provider.certpath.State final final final final final = if == || == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.List < = new < call decl State.addAll() call decl State.addAll() call decl State.addAll() call decl State.addAll() call decl State.addAll() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() return decl List String Replica HttpSolrClient protected protected < throws decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() try for = <= ++ decl_stmt java.lang.String = for : finally if != call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() for : String ZkCoreNodeProps protected protected throws decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() + + return protected protected throws return SolrInputDocument UpdateRequest protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new if != call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) return NamedList String protected protected throws decl_stmt org.apache.solr.common.util.NamedList = decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) new + + + + + + + == NamedList String protected protected throws decl_stmt org.apache.solr.common.util.NamedList = decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) new + + + + + + + != QueryRequest private private throws decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new return String String protected protected decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) + if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) return long decl Collection boolean Slice RTimer long decl Replica ClusterState ZkStateReader protected protected < throws decl_stmt org.apache.solr.util.RTimer final final = new decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt java.util.Collection < = call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) call org.apache.solr.common.cloud.ClusterState.getActiveSlices(String) decl_stmt boolean = decl_stmt long = decl_stmt long = * while < && ! = decl_stmt org.apache.solr.common.cloud.Slice = call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) call org.apache.solr.common.cloud.ClusterState.getSlice(String,String) + = for : call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() if ! continue decl_stmt sun.security.provider.certpath.State final final final final final = if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + = if ! try catch += if ! + + + + + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime()