org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.util.BytesRef import org.apache.lucene.util.automaton.CompiledAutomaton import class org.apache.lucene.index.MultiTerms super super extends decl ReaderSlice decl Terms boolean boolean boolean boolean public public return public public return decl List TermsEnum public public throws decl_stmt java.util.List final final final < = new <> for = < ++ decl_stmt org.apache.lucene.index.TermsEnum final final = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > return new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() else return BytesRef BytesRef public public throws decl_stmt org.apache.lucene.util.BytesRef = for : decl_stmt org.apache.lucene.util.BytesRef = if == || call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() < = return BytesRef BytesRef public public throws decl_stmt org.apache.lucene.util.BytesRef = for : decl_stmt org.apache.lucene.util.BytesRef = if == || call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() call BytesRef.compareTo() > = return decl List TermsEnum public public throws decl_stmt java.util.List final final final < = new <> for = < ++ decl_stmt org.apache.lucene.index.TermsEnum final final = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > return new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() else return public public return - long long public public throws decl_stmt long = for : decl_stmt long final final = if == - return - += return long long public public throws decl_stmt long = for : decl_stmt long final final = if == - return - += return int int public public throws decl_stmt int = for : decl_stmt int final final = if == - return - += return public public return public public return public public return public public return