org.apache.lucene.search.postingshighlight java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Comparator import java.util.List import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Term import org.apache.lucene.search.AutomatonQuery import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.DisjunctionMaxQuery import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.search.spans.SpanMultiTermQueryWrapper import org.apache.lucene.search.spans.SpanNearQuery import org.apache.lucene.search.spans.SpanNotQuery import org.apache.lucene.search.spans.SpanOrQuery import org.apache.lucene.search.spans.SpanPositionCheckQuery import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.UnicodeUtil import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.CharacterRunAutomaton import org.apache.lucene.util.automaton.LevenshteinAutomata import org.apache.lucene.util.automaton.Operations import class org.apache.lucene.search.postingshighlight.MultiTermHighlighting FuzzyQuery PrefixQuery boolean String decl Comparator int CharsRef LevenshteinAutomata int decl List int CharsRef TermRangeQuery AutomatonQuery String CharsRef boolean Automaton int String static static decl_stmt java.util.List < = new <> if instanceof for : if ! call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof for : call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof for : call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof for : call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() < else if instanceof decl_stmt org.apache.lucene.search.AutomatonQuery final final = if call AutomatonQuery.getField() call AutomatonQuery.getField() call AutomatonQuery.getField() call AutomatonQuery.getField() call AutomatonQuery.getField() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call AutomatonQuery.getAutomaton() call AutomatonQuery.getAutomaton() call AutomatonQuery.getAutomaton() call AutomatonQuery.getAutomaton() call AutomatonQuery.getAutomaton() public public return call org.apache.lucene.search.AutomatonQuery.toString(String) call org.apache.lucene.search.AutomatonQuery.toString(String) call org.apache.lucene.search.AutomatonQuery.toString(String) call org.apache.lucene.search.AutomatonQuery.toString(String) call org.apache.lucene.search.AutomatonQuery.toString(String) else if instanceof decl_stmt org.apache.lucene.search.PrefixQuery final final = decl_stmt org.apache.lucene.index.Term = call org.apache.lucene.search.PrefixQuery.getPrefix() call org.apache.lucene.search.PrefixQuery.getPrefix() call org.apache.lucene.search.PrefixQuery.getPrefix() call org.apache.lucene.search.PrefixQuery.getPrefix() call org.apache.lucene.search.PrefixQuery.getPrefix() if call String.field() call String.field() call String.field() call String.field() call String.field() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call String.text() call String.text() call String.text() call String.text() call String.text() public public return call org.apache.lucene.search.PrefixQuery.toString(String) call org.apache.lucene.search.PrefixQuery.toString(String) call org.apache.lucene.search.PrefixQuery.toString(String) call org.apache.lucene.search.PrefixQuery.toString(String) call org.apache.lucene.search.PrefixQuery.toString(String) else if instanceof decl_stmt org.apache.lucene.search.FuzzyQuery final final = if call FuzzyQuery.getField() call FuzzyQuery.getField() call FuzzyQuery.getField() call FuzzyQuery.getField() call FuzzyQuery.getField() decl_stmt java.lang.String = call FuzzyQuery.getTerm() call FuzzyQuery.getTerm() call FuzzyQuery.getTerm() call FuzzyQuery.getTerm() call FuzzyQuery.getTerm() decl_stmt int = new call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.codePointCount(int,int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() for = = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() += ++ = = call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) decl_stmt int = decl_stmt int = call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() decl_stmt java.lang.String = - decl_stmt org.apache.lucene.util.automaton.LevenshteinAutomata = new call org.apache.lucene.search.FuzzyQuery.getTranspositions() call org.apache.lucene.search.FuzzyQuery.getTranspositions() call org.apache.lucene.search.FuzzyQuery.getTranspositions() call org.apache.lucene.search.FuzzyQuery.getTranspositions() call org.apache.lucene.search.FuzzyQuery.getTranspositions() decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.automaton.Automaton = call org.apache.lucene.util.automaton.LevenshteinAutomata.toAutomaton(int) call org.apache.lucene.util.automaton.LevenshteinAutomata.toAutomaton(int) call org.apache.lucene.util.automaton.LevenshteinAutomata.toAutomaton(int) call org.apache.lucene.util.automaton.LevenshteinAutomata.toAutomaton(int) call org.apache.lucene.util.automaton.LevenshteinAutomata.toAutomaton(int) call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new public public return call org.apache.lucene.search.FuzzyQuery.toString(String) call org.apache.lucene.search.FuzzyQuery.toString(String) call org.apache.lucene.search.FuzzyQuery.toString(String) call org.apache.lucene.search.FuzzyQuery.toString(String) call org.apache.lucene.search.FuzzyQuery.toString(String) else if instanceof decl_stmt org.apache.lucene.search.TermRangeQuery final final = if call TermRangeQuery.getField() call TermRangeQuery.getField() call TermRangeQuery.getField() call TermRangeQuery.getField() call TermRangeQuery.getField() decl_stmt org.apache.lucene.util.CharsRef final final if call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() == = else = new call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() call TermRangeQuery.getLowerTerm() decl_stmt org.apache.lucene.util.CharsRef final final if call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() == = else = new call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() call org.apache.lucene.search.TermRangeQuery.getUpperTerm() decl_stmt boolean final final = call org.apache.lucene.search.TermRangeQuery.includesLower() call org.apache.lucene.search.TermRangeQuery.includesLower() call org.apache.lucene.search.TermRangeQuery.includesLower() call org.apache.lucene.search.TermRangeQuery.includesLower() call org.apache.lucene.search.TermRangeQuery.includesLower() decl_stmt boolean final final = call org.apache.lucene.search.TermRangeQuery.includesUpper() call org.apache.lucene.search.TermRangeQuery.includesUpper() call org.apache.lucene.search.TermRangeQuery.includesUpper() call org.apache.lucene.search.TermRangeQuery.includesUpper() call org.apache.lucene.search.TermRangeQuery.includesUpper() decl_stmt org.apache.lucene.util.CharsRef final final = new decl_stmt java.util.Comparator final final final < = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new public public = = = if != decl_stmt int = call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() if < || ! && == return if != decl_stmt int = call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() call decl Comparator.compare() if > || ! && == return return public public return call org.apache.lucene.search.TermRangeQuery.toString(String) call org.apache.lucene.search.TermRangeQuery.toString(String) call org.apache.lucene.search.TermRangeQuery.toString(String) call org.apache.lucene.search.TermRangeQuery.toString(String) call org.apache.lucene.search.TermRangeQuery.toString(String) return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public public return public public return public public return int public public = = = if != decl_stmt int = if < || ! && == return if != decl_stmt int = if > || ! && == return return public public return TokenStream int BytesRef int OffsetAttribute CharTermAttribute int int static static final final final final final throws decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute final final = return new decl_stmt int = - decl_stmt int = - decl_stmt int = - decl_stmt int = - decl_stmt org.apache.lucene.analysis.TokenStream = decl_stmt org.apache.lucene.util.BytesRef final final = new public public throws if != while call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() for = < ++ if call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() = call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() = return call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() = = = return public public throws return public public throws assert >= return public public throws assert >= return public public throws if == = new return public public return public public throws throw new public public throws return = public public return public public throws if != while for = < ++ if = = = return = = = return public public throws return public public throws assert >= return public public throws assert >= return public public throws if == = new return public public return public public throws throw new public public throws return = public public return