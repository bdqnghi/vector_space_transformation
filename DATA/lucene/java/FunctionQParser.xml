org.apache.solr.search org.apache.lucene.queries.function.FunctionQuery import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.valuesource.* import org.apache.lucene.search.Query import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.SchemaField import org.apache.solr.search.facet.AggValueSource import java.util.ArrayList import java.util.List import class org.apache.solr.search.FunctionQParser super super extends boolean int boolean int StrParser int boolean public public if != = new public public = public public return public public = public public return decl List ValueSource ValueSource public public throws decl_stmt org.apache.lucene.queries.function.ValueSource = decl_stmt java.util.List < = for decl_stmt org.apache.lucene.queries.function.ValueSource = & ~ call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() if ! = break else if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else = if call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() != break if == = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if && < throw new + call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() if != = new return new int public public throws decl_stmt int = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() return ! == || == String public public throws decl_stmt java.lang.String = if throw new + return float String public public throws decl_stmt java.lang.String = if throw new + decl_stmt float = return double String public public throws decl_stmt java.lang.String = if throw new + decl_stmt double = return int String public public throws decl_stmt java.lang.String = if throw new + decl_stmt int = return public public return char char String String int public public throws = call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() decl_stmt char = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() decl_stmt java.lang.String = switch case return case ++ decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) = break case case = call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() = break default: decl_stmt int = for if >= throw new + + + + decl_stmt char = call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() if == || == || = call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() call StrParser.val() break ++ call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() call org.apache.solr.search.StrParser.eatws() return decl List public < public < throws decl_stmt java.util.List < = new <> while call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() | return public public throws return | String int QParser Query ModifiableSolrParams String String int String public public throws decl_stmt org.apache.lucene.search.Query if call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) decl_stmt java.lang.String = = == : = else decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new decl_stmt int = decl_stmt org.apache.solr.search.QParser if > if call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) call org.apache.solr.common.params.ModifiableSolrParams.get(String) != = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) else = throw new + + else throw new + + += - = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() return protected protected throws return | : & ~ ValueSourceParser int String SchemaField String Query Number String QParser ValueSource protected protected throws decl_stmt org.apache.lucene.queries.function.ValueSource decl_stmt int = call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() call org.apache.solr.search.StrParser.peek() if >= && <= || == || == || == decl_stmt java.lang.Number = call org.apache.solr.search.StrParser.getNumber() call org.apache.solr.search.StrParser.getNumber() call org.apache.solr.search.StrParser.getNumber() call org.apache.solr.search.StrParser.getNumber() call org.apache.solr.search.StrParser.getNumber() if instanceof = new call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() else if instanceof = new call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() call Number.doubleValue() else = new call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() call Number.floatValue() else if == || == = new call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() call org.apache.solr.search.StrParser.getQuotedString() else if == ++ decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) decl_stmt java.lang.String = if == throw new + + + + decl_stmt org.apache.solr.search.QParser = if instanceof decl_stmt org.apache.lucene.search.Query = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() if instanceof = else = new else decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) if call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) decl_stmt org.apache.solr.search.ValueSourceParser = if == throw new + + + + = call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) else if = new else if = new else decl_stmt org.apache.solr.schema.SchemaField = = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() if & != return ValueSourceParser AggValueSource boolean String ValueSource public public throws decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) decl_stmt org.apache.solr.search.facet.AggValueSource = decl_stmt boolean = if = call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) = | else if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = + = call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) decl_stmt org.apache.solr.search.ValueSourceParser = = if == throw new + + + + decl_stmt org.apache.lucene.queries.function.ValueSource = call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) call org.apache.solr.search.ValueSourceParser.parse(FunctionQParser) if ! instanceof if == throw new + + + + + + = if call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) if & != return protected protected throws if call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) call org.apache.solr.search.StrParser.expect(String) return return