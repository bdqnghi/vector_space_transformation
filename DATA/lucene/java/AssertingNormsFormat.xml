org.apache.lucene.codecs.asserting java.io.IOException import java.util.Collection import org.apache.lucene.codecs.NormsConsumer import org.apache.lucene.codecs.NormsFormat import org.apache.lucene.codecs.NormsProducer import org.apache.lucene.index.AssertingLeafReader import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.util.Accountable import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.asserting.AssertingNormsFormat super super extends NormsFormat NormsConsumer public public throws decl_stmt org.apache.lucene.codecs.NormsConsumer = call NormsFormat.normsConsumer() call NormsFormat.normsConsumer() call NormsFormat.normsConsumer() call NormsFormat.normsConsumer() call NormsFormat.normsConsumer() assert != return new NormsProducer public public throws assert decl_stmt org.apache.lucene.codecs.NormsProducer = call NormsFormat.normsProducer() call NormsFormat.normsProducer() call NormsFormat.normsProducer() call NormsFormat.normsProducer() call NormsFormat.normsProducer() assert != return new int public public < throws decl_stmt int = for : assert != ++ assert == call NormsFormat.addNormsField() call NormsFormat.addNormsField() call NormsFormat.addNormsField() call NormsFormat.addNormsField() call NormsFormat.addNormsField() public public throws call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() NumericDocValues public public throws assert decl_stmt NumericDocValues = call NormsFormat.getNorms() call NormsFormat.getNorms() call NormsFormat.getNorms() call NormsFormat.getNorms() call NormsFormat.getNorms() assert != return new public public throws call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() call NormsFormat.close() long public public decl_stmt long = call NormsFormat.ramBytesUsed() call NormsFormat.ramBytesUsed() call NormsFormat.ramBytesUsed() call NormsFormat.ramBytesUsed() call NormsFormat.ramBytesUsed() assert >= return decl Collection public < public < decl_stmt java.util.Collection < = call NormsFormat.getChildResources() call NormsFormat.getChildResources() call NormsFormat.getChildResources() call NormsFormat.getChildResources() call NormsFormat.getChildResources() return public public throws call NormsFormat.checkIntegrity() call NormsFormat.checkIntegrity() call NormsFormat.checkIntegrity() call NormsFormat.checkIntegrity() call NormsFormat.checkIntegrity() public public throws return new call NormsFormat.getMergeInstance() call NormsFormat.getMergeInstance() call NormsFormat.getMergeInstance() call NormsFormat.getMergeInstance() call NormsFormat.getMergeInstance() public public return + + call NormsFormat.toString() call NormsFormat.toString() call NormsFormat.toString() call NormsFormat.toString() call NormsFormat.toString() +