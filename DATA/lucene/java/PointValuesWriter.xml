org.apache.lucene.index java.io.IOException import org.apache.lucene.codecs.PointsReader import org.apache.lucene.codecs.PointsWriter import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.ByteBlockPool import org.apache.lucene.util.BytesRef import org.apache.lucene.util.Counter import class org.apache.lucene.index.PointValuesWriter Counter int ByteBlockPool int decl byte decl int FieldInfo int public public if == throw new + + if != call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() * call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() throw new + + + + + call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() * call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() call org.apache.lucene.index.FieldInfo.getPointNumBytes() if == = + call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) call org.apache.lucene.util.Counter.addAndGet(long) - * call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) call org.apache.lucene.util.ByteBlockPool.append(BytesRef) = if != ++ = ++ public public throws new public public throws if == throw new for = < ++ call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) * public public throw new public public return public public public public throw new public public throw new public public throw new public public throw new public public return public public return public public throws if == throw new for = < ++ call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) call org.apache.lucene.util.ByteBlockPool.readBytes(long,byte,int,int) * public public throw new public public return public public public public throw new public public throw new public public throw new public public throw new public public return public public return