org.apache.solr.search.join java.io.IOException import java.util.Map import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.IndexReader import org.apache.lucene.search.Query import org.apache.lucene.search.join.JoinUtil import org.apache.lucene.search.join.ScoreMode import org.apache.lucene.uninverting.UninvertingReader import org.apache.solr.cloud.ZkController import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.Aliases import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.CoreContainer import org.apache.solr.core.SolrCore import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.search.JoinQParserPlugin import org.apache.solr.search.QParser import org.apache.solr.search.QParserPlugin import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.SyntaxError import org.apache.solr.util.RefCounted import class org.apache.solr.search.join.ScoreJoinQParserPlugin super super extends String SolrRequestInfo decl RefCounted CoreContainer SolrCore Query public public throws decl_stmt org.apache.solr.request.SolrRequestInfo = decl_stmt org.apache.solr.core.CoreContainer = call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() decl_stmt org.apache.solr.core.SolrCore final final = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) if == throw new + decl_stmt org.apache.solr.util.RefCounted < = = call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() decl_stmt org.apache.lucene.search.Query final final try = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() finally call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() return call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) int int public public decl_stmt int final final = decl_stmt int = = * + ^ >>> = * + == : return OtherCoreJoinQuery public public if == return if ! return if != return decl_stmt OtherCoreJoinQuery = if != return if == if != return else if ! return return public public return + + + + + + SolrRequestInfo Query public public throws decl_stmt org.apache.solr.request.SolrRequestInfo = decl_stmt org.apache.lucene.search.Query final final = call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() return call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) public public return + + + + + + + + int int public public decl_stmt int final final = decl_stmt int = = * + == : = * + == : = * + == : = * + == : return SameCoreJoinQuery public public if == return if ! return if != return decl_stmt SameCoreJoinQuery = if == if != return else if ! return if == if != return else if ! return if != return if == if != return else if ! return return decl RefCounted CoreContainer LocalSolrQueryRequest ScoreMode String String SolrCore Query QParser String String String String long Query public public return new public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt ScoreMode final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.search.Query final final = return private private final final final final final final final final throws decl_stmt java.lang.String final final = if != && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || decl_stmt org.apache.solr.core.CoreContainer = decl_stmt java.lang.String final final = decl_stmt org.apache.solr.core.SolrCore final final = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) decl_stmt org.apache.solr.util.RefCounted < = if == throw new + decl_stmt long = decl_stmt org.apache.solr.request.LocalSolrQueryRequest = new try decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() = call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() if != = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() return new finally call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() else decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query final final = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() return new ScoreMode String Query String String String public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt ScoreMode final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.search.Query final final = return CoreContainer LocalSolrQueryRequest String SolrCore decl RefCounted QParser String long Query private private final final final final final final final final throws decl_stmt java.lang.String final final = if != && ! || decl_stmt org.apache.solr.core.CoreContainer = decl_stmt java.lang.String final final = decl_stmt org.apache.solr.core.SolrCore final final = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) decl_stmt org.apache.solr.util.RefCounted < = if == throw new + decl_stmt long = decl_stmt org.apache.solr.request.LocalSolrQueryRequest = new try decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() = call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() call org.apache.solr.core.SolrCore.getRegisteredSearcher() if != = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() return new finally call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call LocalSolrQueryRequest.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() call org.apache.solr.core.SolrCore.close() if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() else decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query final final = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() return new String ZkController public static public static final final if decl_stmt org.apache.solr.cloud.ZkController = decl_stmt java.lang.String final final = call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() call org.apache.solr.cloud.ZkController.getClusterState() : if == throw new + + return return String decl Map Aliases private static private static decl_stmt org.apache.solr.common.cloud.Aliases final final = if != decl_stmt java.lang.String final final decl_stmt java.util.Map < = call org.apache.solr.common.cloud.Aliases.getCollectionAliasMap() call org.apache.solr.common.cloud.Aliases.getCollectionAliasMap() call org.apache.solr.common.cloud.Aliases.getCollectionAliasMap() call org.apache.solr.common.cloud.Aliases.getCollectionAliasMap() call org.apache.solr.common.cloud.Aliases.getCollectionAliasMap() = != call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() : if != if call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) > throw new + + + + return return String String private static private static decl_stmt java.lang.String = decl_stmt java.lang.String = for : if != throw new + for : if = if != throw new + + + + + + + break if == throw new + + + return