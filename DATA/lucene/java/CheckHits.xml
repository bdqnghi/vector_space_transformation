org.apache.lucene.search java.io.IOException import java.util.Locale import java.util.Set import java.util.TreeSet import java.util.Random import junit.framework.Assert import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.IndexReader import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.search.CheckHits float float decl Set Explanation String int public static public static throws decl_stmt java.lang.String = decl_stmt java.util.Set < = new <> for = < ++ call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt int = for = < ++ if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() continue decl_stmt org.apache.lucene.search.Explanation = + + + + + + + + + call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() IndexSearcher Collector decl Set decl Set public static public static throws decl_stmt java.util.Set < = new <> for = < ++ call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.util.Set final final final < = new <> decl_stmt org.apache.lucene.search.Collector final final = new + for = - < ++ call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) + + + public public throws public public + protected protected throws = public public return decl ScoreDoc decl Set decl Set public static public static throws decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt java.util.Set < = new <> for = < ++ call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.util.Set < = new <> for = < ++ call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() public static public static + for = < ++ + + public static public static float public static public static decl_stmt float final final = if != + + + for = < ++ if != + + + + + if != || - > + + + + + + + + + + + StringBuilder int int public static public static decl_stmt java.lang.StringBuilder = new decl_stmt int = == : decl_stmt int = == : if <= = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if < call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if < call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() StringBuilder public static public static decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if <= = else = for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public static public static throws public static public static throws new public static public static return * float float String float float int float boolean boolean int Explanation boolean float float boolean public static public static decl_stmt float = + + + + + + + + if ! return decl_stmt org.apache.lucene.search.Explanation = if return if > if == if ! else decl_stmt float = decl_stmt java.lang.String = decl_stmt boolean = call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt boolean = call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt boolean = call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt boolean = if ! || || decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if >= += decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) try = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = catch + + + + + || || || decl_stmt float = decl_stmt float = decl_stmt float = for = < ++ decl_stmt float = *= += = decl_stmt float = if = else if = else if = else if = + * - else + + + + + + protected protected throws new public public throws return public public throws public public throws return public public throws = Explanation public public throws decl_stmt org.apache.lucene.search.Explanation = = + try = catch throw new + + + + + + + + + + + + call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.toString(int) call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() call org.apache.lucene.search.Explanation.isMatch() protected protected throws = public public return