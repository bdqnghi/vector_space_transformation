org.apache.lucene.util java.util.Arrays import class org.apache.lucene.util.TestCharsRef super super extends int CharsRef String public public decl_stmt int final final = decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.CharsRef = new for = < ++ decl_stmt java.lang.String = = new = new for = < ++ int StringBuilder decl char int int CharsRefBuilder public public decl_stmt org.apache.lucene.util.CharsRefBuilder = new decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ decl_stmt char = decl_stmt int = decl_stmt int = - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.util.CharsRefBuilder.append(char) call org.apache.lucene.util.CharsRefBuilder.append(char) call org.apache.lucene.util.CharsRefBuilder.append(char) call org.apache.lucene.util.CharsRefBuilder.append(char) call org.apache.lucene.util.CharsRefBuilder.append(char) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() call org.apache.lucene.util.CharsRefBuilder.get() decl char int int String int CharsRefBuilder public public decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.CharsRefBuilder = new decl_stmt char = decl_stmt int = decl_stmt int = - decl_stmt java.lang.String = new call org.apache.lucene.util.CharsRefBuilder.copyChars(CharsRef) call org.apache.lucene.util.CharsRefBuilder.copyChars(CharsRef) call org.apache.lucene.util.CharsRefBuilder.copyChars(CharsRef) call org.apache.lucene.util.CharsRefBuilder.copyChars(CharsRef) call org.apache.lucene.util.CharsRefBuilder.copyChars(CharsRef) call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() CharsRef public public decl_stmt org.apache.lucene.util.CharsRef = new call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) - call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) call org.apache.lucene.util.CharsRef.charAt(int) CharSequence public public decl_stmt java.lang.CharSequence = new new new new for : private private - -