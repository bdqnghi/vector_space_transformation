org.apache.lucene.index java.io.ByteArrayOutputStream import java.io.IOException import java.io.PrintStream import java.util.Arrays import java.util.Random import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.MockVariableLengthPayloadFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.IntPoint import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.SortedNumericDocValuesField import org.apache.lucene.document.SortedSetDocValuesField import org.apache.lucene.document.StoredField import org.apache.lucene.document.TextField import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.MockDirectoryWrapper.Failure import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.Rethrow import org.apache.lucene.util.TestUtil import class annotation org.apache.lucene.index.TestIndexWriterOnVMError super super extends int FieldType MockTokenizer TokenStream Document Document DirectoryReader long Analyzer ByteArrayOutputStream IndexWriter IndexWriterConfig int PrintStream MockDirectoryWrapper int private private throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.io.PrintStream = new decl_stmt long final final = decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.TokenStream = if = new new return new decl_stmt org.apache.lucene.store.MockDirectoryWrapper = decl_stmt int final final = : for = < ++ try if != call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() = call org.apache.lucene.store.MockDirectoryWrapper.setThrottling(Throttling) call org.apache.lucene.store.MockDirectoryWrapper.setThrottling(Throttling) call org.apache.lucene.store.MockDirectoryWrapper.setThrottling(Throttling) call org.apache.lucene.store.MockDirectoryWrapper.setThrottling(Throttling) call org.apache.lucene.store.MockDirectoryWrapper.setThrottling(Throttling) call org.apache.lucene.store.MockDirectoryWrapper.setUseSlowOpenClosers(boolean) call org.apache.lucene.store.MockDirectoryWrapper.setUseSlowOpenClosers(boolean) call org.apache.lucene.store.MockDirectoryWrapper.setUseSlowOpenClosers(boolean) call org.apache.lucene.store.MockDirectoryWrapper.setUseSlowOpenClosers(boolean) call org.apache.lucene.store.MockDirectoryWrapper.setUseSlowOpenClosers(boolean) decl_stmt org.apache.lucene.index.IndexWriterConfig = call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) new decl_stmt int = decl_stmt org.apache.lucene.index.IndexWriter = new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) call org.apache.lucene.store.MockDirectoryWrapper.failOn(Failure) for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new - call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new - call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new if > try call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt int = if == call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new else if == call org.apache.lucene.index.IndexWriter.updateNumericDocValue(Term,String,long) call org.apache.lucene.index.IndexWriter.updateNumericDocValue(Term,String,long) call org.apache.lucene.index.IndexWriter.updateNumericDocValue(Term,String,long) call org.apache.lucene.index.IndexWriter.updateNumericDocValue(Term,String,long) call org.apache.lucene.index.IndexWriter.updateNumericDocValue(Term,String,long) new + else if == call org.apache.lucene.index.IndexWriter.updateBinaryDocValue(Term,String,BytesRef) call org.apache.lucene.index.IndexWriter.updateBinaryDocValue(Term,String,BytesRef) call org.apache.lucene.index.IndexWriter.updateBinaryDocValue(Term,String,BytesRef) call org.apache.lucene.index.IndexWriter.updateBinaryDocValue(Term,String,BytesRef) call org.apache.lucene.index.IndexWriter.updateBinaryDocValue(Term,String,BytesRef) new new + catch continue continue else decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) - call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) try call org.apache.lucene.index.IndexWriter.addDocuments(Iterable) call org.apache.lucene.index.IndexWriter.addDocuments(Iterable) call org.apache.lucene.index.IndexWriter.addDocuments(Iterable) call org.apache.lucene.index.IndexWriter.addDocuments(Iterable) call org.apache.lucene.index.IndexWriter.addDocuments(Iterable) if call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new new - catch continue continue if == try if decl_stmt org.apache.lucene.index.DirectoryReader = try = finally else call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) if catch continue continue try call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() catch continue continue catch call java.io.PrintStream.flush() call java.io.PrintStream.flush() call java.io.PrintStream.flush() call java.io.PrintStream.flush() call java.io.PrintStream.flush() call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() call org.apache.lucene.store.MockDirectoryWrapper.close() if call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) TokenStream MockTokenizer protected protected decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.TokenStream = if = new new return new Throwable private private decl_stmt java.lang.Throwable = if instanceof = call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() if instanceof && call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() != && call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() + call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) try catch return else return StackTraceElement Random boolean public public throws decl_stmt java.util.Random final final = new new public public throws if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if = if throw new StackTraceElement boolean public public throws if == decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if = if throw new StackTraceElement Random boolean public public throws decl_stmt java.util.Random final final = new new public public throws if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if = if throw new StackTraceElement boolean public public throws if == decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if = if throw new StackTraceElement Random boolean public public throws decl_stmt java.util.Random final final = new new public public throws decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if && = if && call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == throw new StackTraceElement boolean public public throws decl_stmt java.lang.StackTraceElement = decl_stmt boolean = for = < ++ if && = if && == throw new