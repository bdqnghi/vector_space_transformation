org.apache.solr.request.macro org.apache.solr.common.SolrException import org.apache.solr.search.StrParser import org.apache.solr.search.SyntaxError import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import class org.apache.solr.request.macro.MacroExpander int decl Map String char String int decl Map MacroExpander public static < public static < < decl_stmt org.apache.solr.request.macro.MacroExpander = new call org.apache.solr.request.macro.MacroExpander.expand(String) call org.apache.solr.request.macro.MacroExpander.expand(String) call org.apache.solr.request.macro.MacroExpander.expand(String) call org.apache.solr.request.macro.MacroExpander.expand(String) call org.apache.solr.request.macro.MacroExpander.expand(String) return String decl List String boolean decl String String public public = new <> call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl_stmt boolean = for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.List < = for : decl_stmt java.lang.String = if != if == = new <> for : if == break call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = if != = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public ++ try if >= throw new + + + + return finally -- char int int int String StrParser String boolean int int decl String String StringBuilder String private private decl_stmt int = call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) if < return decl_stmt int = decl_stmt int = decl_stmt java.lang.StringBuilder = for = decl_stmt int = if > decl_stmt char = - if == += call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() continue else if < if == return call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() += call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int = if == - continue if == = new * if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = + decl_stmt org.apache.solr.search.StrParser = new try decl_stmt java.lang.String = call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) call org.apache.solr.search.StrParser.getId(String) decl_stmt java.lang.String = decl_stmt boolean = call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) call org.apache.solr.search.StrParser.opt(char) if = decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = != : if != decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) catch call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) continue