org.apache.lucene.misc org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.search.similarities.PerFieldSimilarityWrapper import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.similarities.TFIDFSimilarity import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.index.FieldInvertState import class org.apache.lucene.misc.SweetSpotSimilarityTest super super extends public static public static return public static public static return byte byte Similarity SweetSpotSimilarity Similarity SweetSpotSimilarity SweetSpotSimilarity byte FieldInvertState Similarity byte SweetSpotSimilarity SweetSpotSimilarity public public decl_stmt org.apache.lucene.misc.SweetSpotSimilarity final final = new call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() decl_stmt org.apache.lucene.search.similarities.Similarity = new decl_stmt org.apache.lucene.search.similarities.Similarity = decl_stmt org.apache.lucene.index.FieldInvertState = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = < ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) + call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() for = <= ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) + for = < ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) - decl_stmt byte final final = call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = + decl_stmt org.apache.lucene.misc.SweetSpotSimilarity final final = new call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() decl_stmt org.apache.lucene.misc.SweetSpotSimilarity final final = new call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() decl_stmt org.apache.lucene.misc.SweetSpotSimilarity final final = new call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() decl_stmt org.apache.lucene.misc.SweetSpotSimilarity final final = new call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() call SweetSpotSimilarity.setLengthNormFactors() decl_stmt org.apache.lucene.search.similarities.Similarity = new public public if return else if return else if return else if return else return = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = <= ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) + for = < ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) - decl_stmt byte final final = call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = + = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = <= ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) + = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = <= ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) + = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = < ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) - decl_stmt byte final final = call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = + = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) for = < ++ call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) - decl_stmt byte final final = call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = + for = < ++ = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = = new call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setBoost(float) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) call org.apache.lucene.index.FieldInvertState.setLength(int) decl_stmt byte final final = + + + + + < public public if return else if return else if return else if return else return SweetSpotSimilarity TFIDFSimilarity TFIDFSimilarity public public decl_stmt org.apache.lucene.misc.SweetSpotSimilarity = new decl_stmt org.apache.lucene.search.similarities.TFIDFSimilarity = new decl_stmt org.apache.lucene.search.similarities.TFIDFSimilarity = call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) for = < ++ + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) for = < ++ + + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() < call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) for = <= ++ + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) call org.apache.lucene.misc.SweetSpotSimilarity.setBaselineTfFactors(float,float) for = <= ++ + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() for = <= ++ + + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() < call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() SweetSpotSimilarity TFIDFSimilarity public public decl_stmt org.apache.lucene.misc.SweetSpotSimilarity = new public public return call org.apache.lucene.misc.SweetSpotSimilarity.setHyperbolicTfFactors(float,float,double,float) call org.apache.lucene.misc.SweetSpotSimilarity.setHyperbolicTfFactors(float,float,double,float) call org.apache.lucene.misc.SweetSpotSimilarity.setHyperbolicTfFactors(float,float,double,float) call org.apache.lucene.misc.SweetSpotSimilarity.setHyperbolicTfFactors(float,float,double,float) call org.apache.lucene.misc.SweetSpotSimilarity.setHyperbolicTfFactors(float,float,double,float) decl_stmt org.apache.lucene.search.similarities.TFIDFSimilarity = for = <= ++ + + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() <= call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() + + + call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() <= + - / call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() call TFIDFSimilarity.tf() public public return