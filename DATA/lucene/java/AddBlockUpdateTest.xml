org.apache.solr.update java.io.ByteArrayInputStream import java.io.IOException import java.io.InputStream import java.io.OutputStream import java.io.StringReader import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.List import java.util.concurrent.Callable import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import java.util.concurrent.Future import java.util.concurrent.atomic.AtomicInteger import javax.xml.stream.XMLInputFactory import javax.xml.stream.XMLStreamException import javax.xml.stream.XMLStreamReader import org.apache.commons.io.output.ByteArrayOutputStream import org.apache.lucene.index.Term import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.search.join.QueryBitSetProducer import org.apache.lucene.search.join.ScoreMode import org.apache.lucene.search.join.ToParentBlockJoinQuery import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.request.RequestWriter import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.JavaBinCodec import org.apache.solr.handler.loader.XMLLoader import org.apache.solr.search.QueryWrapperFilter import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.RefCounted import org.dom4j.Document import org.dom4j.DocumentHelper import org.dom4j.Element import org.junit.After import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import org.xml.sax.SAXException import class org.apache.solr.update.AddBlockUpdateTest super super extends SolrIndexSearcher ExecutorService Logger String decl RefCounted AtomicInteger boolean String XMLInputFactory String String public static public static throws decl_stmt java.lang.String = = : if != = = new : new public public private private if == = = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() return public public if != || != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() = = public static public static throws call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() = = = String String String TopDocs SolrIndexSearcher public public throws decl_stmt java.lang.String = : decl_stmt java.lang.String = == : + + + + decl_stmt org.apache.solr.search.SolrIndexSearcher final final = decl_stmt org.apache.lucene.search.TopDocs final final = call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) decl_stmt java.lang.String final final = call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) + call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) && call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == + + XmlDoc private static private static decl_stmt XmlDoc = new = call String.xml() call String.xml() call String.xml() call String.xml() call String.xml() call String.xml() call String.xml() call String.xml() call String.xml() + return SolrIndexSearcher decl List int public public throws decl_stmt java.util.List < = new <> call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() for < : call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) call java.util.concurrent.ExecutorService.invokeAll(Collection,long,TimeUnit) decl_stmt org.apache.solr.search.SolrIndexSearcher final final = decl_stmt int = + + + + + - + - + + - + + + String SolrIndexSearcher Element Document Element Element Element public public throws decl_stmt java.lang.String final final = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.lucene.document.Document = decl_stmt javax.swing.text.Element = call Document.addElement() call Document.addElement() call Document.addElement() call Document.addElement() call Document.addElement() decl_stmt javax.swing.text.Element = call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() decl_stmt javax.swing.text.Element = call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() decl_stmt javax.swing.text.Element = call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() call Document.asXML() call Document.asXML() call Document.asXML() call Document.asXML() call Document.asXML() decl_stmt org.apache.solr.search.SolrIndexSearcher final final = + + + + + SolrInputDocument SolrInputDocument SolrIndexSearcher decl List UpdateRequest decl ArrayList RequestWriter OutputStream String public public throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.common.SolrInputDocument = new decl_stmt java.lang.String final final = decl_stmt java.util.ArrayList < = new <> new new decl_stmt org.apache.solr.common.SolrInputDocument = new decl_stmt java.lang.String final final = new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) decl_stmt org.apache.solr.client.solrj.request.RequestWriter = new decl_stmt java.io.OutputStream = new call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() decl_stmt org.apache.solr.search.SolrIndexSearcher final final = SolrInputDocument SolrInputDocument XMLStreamReader String String SolrIndexSearcher decl List UpdateRequest XMLLoader XMLStreamReader RequestWriter OutputStream public public throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new decl_stmt java.util.List < = new <> decl_stmt java.lang.String = + + + + + + + + + + + decl_stmt java.lang.String = + + + + + + + + + + + decl_stmt XMLStreamReader = call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() new call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() decl_stmt org.apache.solr.handler.loader.XMLLoader = new decl_stmt org.apache.solr.common.SolrInputDocument = call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) decl_stmt XMLStreamReader = call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() new call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() decl_stmt org.apache.solr.common.SolrInputDocument = call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call org.apache.solr.handler.loader.XMLLoader.readDoc(XMLStreamReader) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) decl_stmt org.apache.solr.client.solrj.request.RequestWriter = new decl_stmt java.io.OutputStream = new call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call RequestWriter.write() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() call OutputStream.toString() decl_stmt org.apache.solr.search.SolrIndexSearcher final final = decl List int decl byte InputStream int decl List SolrInputDocument SolrInputDocument SolrInputDocument SolrInputDocument ByteArrayOutputStream int public public throws decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) decl_stmt int = for = < ++ decl_stmt java.io.ByteArrayOutputStream = new new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.io.InputStream = new decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.size() call org.apache.solr.common.SolrInputDocument.size() call org.apache.solr.common.SolrInputDocument.size() call org.apache.solr.common.SolrInputDocument.size() call org.apache.solr.common.SolrInputDocument.size() call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) decl_stmt java.util.List < = call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() decl_stmt int = == : call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() for = < ++ + + call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) + + decl_stmt java.util.List < = call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() call org.apache.solr.common.SolrInputDocument.getChildDocuments() decl_stmt int = == : call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() * for = < * ++ decl_stmt org.apache.solr.common.SolrInputDocument = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() for = < ++ + + call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) call org.apache.solr.common.SolrInputDocument.getFieldValue(String) + + SolrInputDocument private private decl_stmt org.apache.solr.common.SolrInputDocument = new for = < ++ call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + + + + if ! for = < * ++ Element Document Element String int private private decl_stmt org.apache.lucene.document.Document = decl_stmt javax.swing.text.Element = call Document.addElement() call Document.addElement() call Document.addElement() call Document.addElement() call Document.addElement() decl_stmt javax.swing.text.Element = call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() call Element.addElement() if > - decl_stmt int = for = < - += decl_stmt java.lang.String = + - ++ return Element private private for = < ++ decl_stmt javax.swing.text.Element = call String.addElement() call String.addElement() call String.addElement() call String.addElement() call String.addElement() decl List private private decl_stmt java.util.List < = for : return Element private private decl_stmt javax.swing.text.Element = call Element.addAttribute() call Element.addAttribute() call Element.addAttribute() call Element.addAttribute() call Element.addAttribute() call Element.addText() call Element.addText() call Element.addText() call Element.addText() call Element.addText() private static private static return + call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() private private return + String TopDocs protected protected final final final final throws decl_stmt org.apache.lucene.search.TopDocs final final = decl_stmt java.lang.String final final = protected protected final final return new new new new new decl List String private < extends extends extends < private < extends extends extends < < decl_stmt java.util.List final final final < < = new <> for : decl_stmt java.lang.String final final = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return return private private final final private private final final try catch String private private final final try decl_stmt java.lang.String = if != + + + catch throw new