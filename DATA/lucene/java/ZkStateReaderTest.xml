org.apache.solr.cloud.overseer java.util.HashMap import java.util.Map import org.apache.lucene.util.IOUtils import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.cloud.AbstractZkTestCase import org.apache.solr.cloud.Overseer import org.apache.solr.cloud.OverseerTest import org.apache.solr.cloud.ZkController import org.apache.solr.cloud.ZkTestServer import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.DocRouter import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.Utils import class org.apache.solr.cloud.overseer.ZkStateReaderTest super super extends public public throws public public throws public public throws public public throws Map String boolean ZkStateWriter DocCollection DocCollection ZkTestServer ZkStateReader SolrZkClient ZkWriteCommand ZkWriteCommand DocCollection public public throws decl_stmt java.lang.String = decl_stmt org.apache.solr.cloud.ZkTestServer = new decl_stmt org.apache.solr.common.cloud.SolrZkClient = try call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() = new call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() decl_stmt org.apache.solr.common.cloud.ZkStateReader = new call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() if call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) decl_stmt org.apache.solr.cloud.overseer.ZkStateWriter = new new call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) + decl_stmt org.apache.solr.common.cloud.DocCollection = new new < new < decl_stmt org.apache.solr.cloud.overseer.ZkWriteCommand = new call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() decl_stmt java.util.Map = call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl_stmt boolean = call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) + if call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) else for = < ++ if call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() break decl_stmt org.apache.solr.common.cloud.DocCollection = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() decl_stmt org.apache.solr.common.cloud.DocCollection = new new < new < + decl_stmt org.apache.solr.cloud.overseer.ZkWriteCommand = new call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() decl_stmt java.util.Map = call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl_stmt boolean = call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.exists(String,Watcher,boolean) + if call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) else for = < ++ if call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() == break decl_stmt org.apache.solr.common.cloud.DocCollection = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() finally call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() ZkStateWriter ZkTestServer ZkStateReader SolrZkClient ZkWriteCommand String public public throws decl_stmt java.lang.String = decl_stmt org.apache.solr.cloud.ZkTestServer = new decl_stmt org.apache.solr.common.cloud.SolrZkClient = try call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.run() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() call org.apache.solr.cloud.ZkTestServer.getZkHost() = new call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() call org.apache.solr.cloud.ZkTestServer.getZkAddress() decl_stmt org.apache.solr.common.cloud.ZkStateReader = new call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() decl_stmt org.apache.solr.cloud.overseer.ZkStateWriter = new new call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) call org.apache.solr.common.cloud.SolrZkClient.makePath(String,CreateMode,Watcher,boolean) + decl_stmt org.apache.solr.cloud.overseer.ZkWriteCommand = new new new < new < + call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.cloud.overseer.ZkStateWriter.enqueueUpdate(ClusterState,ZkWriteCommand,ZkWriteCallback) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.cloud.overseer.ZkStateWriter.writePendingUpdates() call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.addCollectionWatch(String) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(String) call org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(String) call org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(String) call org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(String) call org.apache.solr.common.cloud.ZkStateReader.removeZKWatch(String) call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() finally call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown() call org.apache.solr.cloud.ZkTestServer.shutdown()