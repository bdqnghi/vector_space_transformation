org.apache.lucene.search.spans org.apache.lucene.index.IndexReader import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import java.io.IOException import class org.apache.lucene.search.spans.AssertingSpanQuery super super extends SpanQuery public public return call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() public public return + call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() + SpanWeight public public throws decl_stmt org.apache.lucene.search.spans.SpanWeight = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() return new Query public public throws decl_stmt org.apache.lucene.search.Query = call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() if == return else if instanceof return new else return public public return new int int public public decl_stmt int final final = decl_stmt int = = * + == : call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() return AssertingSpanQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.search.spans.AssertingSpanQuery = if == if != return else if ! call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() return return