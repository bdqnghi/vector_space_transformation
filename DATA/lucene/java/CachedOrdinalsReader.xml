org.apache.lucene.facet.taxonomy java.io.IOException import java.util.Collection import java.util.Map import java.util.WeakHashMap import org.apache.lucene.codecs.DocValuesFormat import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.IntsRef import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.facet.taxonomy.CachedOrdinalsReader super super extends super implements OrdinalsReader decl Map Object CachedOrds private synchronized private synchronized throws decl_stmt java.lang.Object = decl_stmt CachedOrds = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new call OrdinalsReader.getReader() call OrdinalsReader.getReader() call OrdinalsReader.getReader() call OrdinalsReader.getReader() call OrdinalsReader.getReader() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public return call OrdinalsReader.getIndexFieldName() call OrdinalsReader.getIndexFieldName() call OrdinalsReader.getIndexFieldName() call OrdinalsReader.getIndexFieldName() call OrdinalsReader.getIndexFieldName() CachedOrds public public throws decl_stmt CachedOrds final final = return new public public = = = + - public public = = = + - long public public decl_stmt long = + if != += return long public synchronized public synchronized decl_stmt long = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() += return public synchronized < public synchronized < return