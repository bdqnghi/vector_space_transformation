org.apache.lucene.facet.taxonomy java.io.IOException import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.facet.FacetField import org.apache.lucene.facet.FacetResult import org.apache.lucene.facet.FacetTestCase import org.apache.lucene.facet.Facets import org.apache.lucene.facet.FacetsCollector import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.LabelAndValue import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.MemoryOrdinalMap import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.junit.Before import org.junit.Test import class org.apache.lucene.facet.taxonomy.TestOrdinalMappingLeafReader super super extends FacetsConfig int public public throws call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setIndexFieldName(String,String) call org.apache.lucene.facet.FacetsConfig.setIndexFieldName(String,String) call org.apache.lucene.facet.FacetsConfig.setIndexFieldName(String,String) call org.apache.lucene.facet.FacetsConfig.setIndexFieldName(String,String) call org.apache.lucene.facet.FacetsConfig.setIndexFieldName(String,String) Directory Directory IndexWriter Directory DirectoryTaxonomyWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter = new try new finally IndexSearcher DirectoryReader FacetResult BinaryDocValues FacetResult DirectoryTaxonomyReader Facets FacetsCollector BinaryDocValues Facets private private throws decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.facet.FacetsCollector = new new decl_stmt Facets = new decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() for : if decl_stmt Facets = new decl_stmt org.apache.lucene.facet.FacetResult = call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() call Facets.getTopChildren() * decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = for = < call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() ++ call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() * Document DirectoryTaxonomyWriter RandomIndexWriter IndexWriterConfig int private private throws decl_stmt org.apache.lucene.index.IndexWriterConfig = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter = new for = <= ++ decl_stmt org.apache.lucene.document.Document = new for = <= ++ decl_stmt int = : - call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new * call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.commit() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.commit() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.commit() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.commit() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.commit() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.close() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.close() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.close() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.close() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter.close() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close()