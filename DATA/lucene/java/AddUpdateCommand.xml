org.apache.solr.update java.util.ArrayList import java.util.Iterator import java.util.List import org.apache.lucene.document.Document import org.apache.lucene.index.Term import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import class org.apache.solr.update.AddUpdateCommand super super extends super implements SolrInputDocument int BytesRef Term int boolean boolean public public return public public = = = = = public public return public public return int SolrInputField BytesRefBuilder SchemaField IndexSchema public public if == decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) if != if != decl_stmt org.apache.solr.common.SolrInputField = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() decl_stmt int = == : call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() if == if throw new + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() else if > throw new + else decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() return public public = SolrInputField SchemaField IndexSchema public public if != decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) if != && != decl_stmt org.apache.solr.common.SolrInputField = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() if != return call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() return int SolrInputField SchemaField String IndexSchema public public decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) if != if != decl_stmt org.apache.solr.common.SolrInputField = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() decl_stmt int = == : call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() call org.apache.solr.common.SolrInputField.getValueCount() if == if throw new + call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() else if > throw new + else return call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() call org.apache.solr.common.SolrInputField.getFirstValue() return public public return call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() call org.apache.solr.common.SolrInputDocument.hasChildDocuments() decl List SchemaField String decl Iterator public < public < return new < decl_stmt java.util.Iterator < decl_stmt java.util.List < = decl_stmt org.apache.solr.schema.SchemaField = decl_stmt java.lang.String = for : = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() public public return call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() public public return call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() public public throw new public public return public public return public public throw new decl List private < private < decl_stmt java.util.List < = new <> return decl List private private < decl_stmt java.util.List < = if != for : StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()