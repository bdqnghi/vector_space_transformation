org.apache.lucene.benchmark.quality.utils org.apache.lucene.analysis.standard.StandardAnalyzer import org.apache.lucene.benchmark.quality.QualityQuery import org.apache.lucene.benchmark.quality.QualityQueryParser import org.apache.lucene.queryparser.classic.ParseException import org.apache.lucene.queryparser.classic.QueryParser import org.apache.lucene.queryparser.classic.QueryParserBase import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import org.apache.lucene.util.Version import class org.apache.lucene.benchmark.quality.utils.SimpleQQParser super super implements decl ThreadLocal String String QueryParser decl BooleanQuery public public throws decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = new new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build()