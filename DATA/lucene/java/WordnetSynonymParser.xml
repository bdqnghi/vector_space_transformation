org.apache.lucene.analysis.synonym java.io.IOException import java.io.LineNumberReader import java.io.Reader import java.text.ParseException import java.util.Arrays import org.apache.lucene.analysis.Analyzer import org.apache.lucene.util.CharsRef import org.apache.lucene.util.CharsRefBuilder import class org.apache.lucene.analysis.synonym.WordnetSynonymParser super super extends boolean int String CharsRef String LineNumberReader String ParseException public public throws decl_stmt java.io.LineNumberReader = new try decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.CharsRef = new decl_stmt int = while = call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() != decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = if <= + = * = new ++ = catch decl_stmt org.apache.lucene.queryparser.surround.parser.ParseException = new + call java.io.LineNumberReader.getLineNumber() call java.io.LineNumberReader.getLineNumber() call java.io.LineNumberReader.getLineNumber() call java.io.LineNumberReader.getLineNumber() call java.io.LineNumberReader.getLineNumber() call ParseException.initCause() call ParseException.initCause() call ParseException.initCause() call ParseException.initCause() call ParseException.initCause() throw finally call LineNumberReader.close() call LineNumberReader.close() call LineNumberReader.close() call LineNumberReader.close() call LineNumberReader.close() int int String private private throws if == = new decl_stmt int = + decl_stmt int = decl_stmt java.lang.String = return private private if <= return if for = < ++ for = < ++ else for = < ++