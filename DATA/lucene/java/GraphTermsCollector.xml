org.apache.solr.search.join java.io.IOException import org.apache.lucene.index.DocValues import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.search.Collector import org.apache.lucene.search.SimpleCollector import org.apache.lucene.util.BitSet import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefHash import org.apache.lucene.util.FixedBitSet import org.apache.solr.search.BitDocSet import org.apache.solr.search.DocSet import class org.apache.solr.search.join.GraphTermsCollector super super extends super implements Bits int int int boolean SortedSetDocValues String int DocSet BytesRefHash BitSet public public throws += if call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() = return if ! call org.apache.solr.search.DocSet.exists(int) call org.apache.solr.search.DocSet.exists(int) call org.apache.solr.search.DocSet.exists(int) call org.apache.solr.search.DocSet.exists(int) call org.apache.solr.search.DocSet.exists(int) - long BytesRef private private throws call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != = call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call org.apache.lucene.util.BytesRefHash.add(BytesRef) call org.apache.lucene.util.BytesRefHash.add(BytesRef) call org.apache.lucene.util.BytesRefHash.add(BytesRef) call org.apache.lucene.util.BytesRefHash.add(BytesRef) call org.apache.lucene.util.BytesRefHash.add(BytesRef) private private call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) ++ public public if == = new return new public public throws = = = public public return public public return