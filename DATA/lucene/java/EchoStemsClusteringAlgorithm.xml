org.apache.solr.handler.clustering.carrot2 java.util.List import org.carrot2.core.Cluster import org.carrot2.core.Document import org.carrot2.core.IClusteringAlgorithm import org.carrot2.core.LanguageCode import org.carrot2.core.ProcessingComponentBase import org.carrot2.core.ProcessingException import org.carrot2.core.attribute.AttributeNames import org.carrot2.core.attribute.Processing import org.carrot2.text.preprocessing.PreprocessingContext import org.carrot2.text.preprocessing.PreprocessingContext.AllStems import org.carrot2.text.preprocessing.PreprocessingContext.AllTokens import org.carrot2.text.preprocessing.PreprocessingContext.AllWords import org.carrot2.text.preprocessing.pipeline.BasicPreprocessingPipeline import org.carrot2.util.attribute.Attribute import org.carrot2.util.attribute.Bindable import org.carrot2.util.attribute.Input import org.carrot2.util.attribute.Output import com.google.common.collect.Lists import class annotation org.apache.solr.handler.clustering.carrot2.EchoStemsClusteringAlgorithm super super extends super implements decl List decl List BasicPreprocessingPipeline AllStems AllTokens PreprocessingContext AllWords public public throws decl_stmt PreprocessingContext final final = call BasicPreprocessingPipeline.preprocess() call BasicPreprocessingPipeline.preprocess() call BasicPreprocessingPipeline.preprocess() call BasicPreprocessingPipeline.preprocess() call BasicPreprocessingPipeline.preprocess() decl_stmt AllTokens final final = decl_stmt AllWords final final = decl_stmt AllStems final final = = for = < ++ if >= call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new