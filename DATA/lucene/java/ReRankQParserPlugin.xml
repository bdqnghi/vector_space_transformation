org.apache.solr.search java.io.IOException import java.util.Arrays import java.util.Comparator import java.util.Map import java.util.Set import com.carrotsearch.hppc.IntFloatHashMap import com.carrotsearch.hppc.IntIntHashMap import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.search.Explanation import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LeafCollector import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.Query import org.apache.lucene.search.QueryRescorer import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Scorer import org.apache.lucene.search.Sort import org.apache.lucene.search.TopDocs import org.apache.lucene.search.TopDocsCollector import org.apache.lucene.search.TopFieldCollector import org.apache.lucene.search.TopScoreDocCollector import org.apache.lucene.search.Weight import org.apache.lucene.util.BytesRef import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.handler.component.MergeStrategy import org.apache.solr.handler.component.QueryElevationComponent import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import class org.apache.solr.search.ReRankQParserPlugin super super extends String String double String int String Query public public return new int QParser Query int int String double int public public throws decl_stmt java.lang.String = if == || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() == throw new + decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query = call QParser.parse() call QParser.parse() call QParser.parse() call QParser.parse() call QParser.parse() decl_stmt int = = decl_stmt double = decl_stmt int = decl_stmt int = decl_stmt int = + return new public public return * + + + int + ReRankQuery public public if == return decl_stmt ReRankQuery = return && && == && == public public if != = return public public return SolrRequestInfo Map public public throws if == decl_stmt org.apache.solr.request.SolrRequestInfo = if != decl_stmt java.util.Map = call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() = < call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) return new StringBuilder public public decl_stmt java.lang.StringBuilder final final = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() Query public public throws decl_stmt org.apache.lucene.search.Query = if != return new return public public throws return new public public < public public throws return public public throws return public public float Explanation public public throws decl_stmt org.apache.lucene.search.Explanation = return new protected protected decl_stmt float = if += * return + float protected protected decl_stmt float = if += * return public public return public public throws return public public return SolrRequestInfo decl ScoreDoc TopDocs decl ScoreDoc Map float TopDocs decl ScoreDoc IntIntHashMap public public try decl_stmt org.apache.lucene.search.TopDocs = if == || == return if != decl_stmt org.apache.solr.request.SolrRequestInfo = decl_stmt java.util.Map = if != = call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() call org.apache.solr.request.SolrRequestInfo.getReq() decl_stmt IntIntHashMap = decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt org.apache.lucene.search.ScoreDoc = new = decl_stmt org.apache.lucene.search.TopDocs = new protected protected decl_stmt float = if += * return new call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() = if == return else if > decl_stmt org.apache.lucene.search.ScoreDoc = new = return else decl_stmt org.apache.lucene.search.ScoreDoc = new = return else decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt org.apache.lucene.search.ScoreDoc = new = decl_stmt org.apache.lucene.search.TopDocs = new protected protected decl_stmt float = if += * return = if == return else if > decl_stmt org.apache.lucene.search.ScoreDoc = new = return else decl_stmt org.apache.lucene.search.ScoreDoc = new = return catch throw new float protected protected decl_stmt float = if += * return float protected protected decl_stmt float = if += * return ScoreDoc int ScoreDoc float float public public decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt float = decl_stmt float = decl_stmt int if = >= = if = >= = return -