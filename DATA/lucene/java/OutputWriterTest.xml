org.apache.solr java.io.IOException import java.io.Writer import org.apache.solr.common.params.CommonParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.PluginBag import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.QueryResponseWriter import org.apache.solr.response.SolrQueryResponse import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.OutputWriterTest super super extends String public static public static throws public public String public public throws decl_stmt java.lang.String = String public public throws decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) String public public throws decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl PluginBag public public decl_stmt org.apache.solr.core.PluginBag < = instanceof = call decl PluginBag.isLoaded() call decl PluginBag.isLoaded() call decl PluginBag.isLoaded() call decl PluginBag.isLoaded() call decl PluginBag.isLoaded() call decl PluginBag.getClass() call decl PluginBag.getClass() call decl PluginBag.getClass() call decl PluginBag.getClass() call decl PluginBag.getClass() == public public public public throws public public return