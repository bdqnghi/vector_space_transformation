org.apache.lucene.codecs.autoprefix java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Set import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.codecs.Codec import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.StringField import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.MultiFields import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.SerialMergeScheduler import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.store.Directory import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.MathUtil import org.apache.lucene.util.StringHelper import org.apache.lucene.util.TestUtil import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.CompiledAutomaton import class org.apache.lucene.codecs.autoprefix.TestAutoPrefixTerms super super extends int int Codec int int TermsEnum boolean IndexWriterConfig VerifyAutoPrefixTerms decl List BytesRef int int NumericDocValues decl Set int String int int int BytesRef int CompiledAutomaton long int Document int IndexReader IndexWriter int boolean Directory PostingsEnum public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt int = decl_stmt java.util.Set < = new <> decl_stmt int = decl_stmt int = for = < ++ *= decl_stmt java.lang.String = + + while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) if decl_stmt org.apache.lucene.index.IndexReader = decl_stmt java.util.List < = new <> if decl_stmt int = for : + + ++ decl_stmt int = for = < ++ decl_stmt int while = = if == continue else if > decl_stmt int = = = break if + + + + + decl_stmt boolean = decl_stmt boolean = decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() decl_stmt NumericDocValues = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt VerifyAutoPrefixTerms = new call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() while call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() != if + call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call int.sawTerm() call int.sawTerm() call int.sawTerm() call int.sawTerm() call int.sawTerm() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() = call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() decl_stmt int while = call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() != decl_stmt long = call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() assert >= && <= : + + + if + + + call int.sawDoc() call int.sawDoc() call int.sawDoc() call int.sawDoc() call int.sawDoc() decl_stmt int = if < = - - else if == ++ decl_stmt int = if < = - - else if == -- call int.finish() call int.finish() call int.finish() call int.finish() call int.finish() - + call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int int BytesRef private static private static decl_stmt int = ^ decl_stmt org.apache.lucene.util.BytesRef = new = decl_stmt int = while >= = & -- >>>= return TermsEnum BytesRef IndexWriterConfig VerifyAutoPrefixTerms decl List int BytesRef int int NumericDocValues decl Set int int int boolean CompiledAutomaton long int Document int IndexReader IndexWriter boolean boolean int Directory PostingsEnum public public throws if + + + + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt int = decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt java.util.List < = new <> if decl_stmt int = for : + + ++ decl_stmt int = for = < ++ decl_stmt int while = = if == continue else if > decl_stmt int = = = break if + + + + + + + + + + decl_stmt boolean = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt boolean = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() call TermsEnum.getTermsEnum() decl_stmt NumericDocValues = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt VerifyAutoPrefixTerms = new call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() while call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() call NumericDocValues.next() != if + call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() + + call NumericDocValues.docFreq() call NumericDocValues.docFreq() call NumericDocValues.docFreq() call NumericDocValues.docFreq() call NumericDocValues.docFreq() call int.sawTerm() call int.sawTerm() call int.sawTerm() call int.sawTerm() call int.sawTerm() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() call NumericDocValues.term() = call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() call NumericDocValues.postings() decl_stmt int while = call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() call VerifyAutoPrefixTerms.nextDoc() != decl_stmt long = call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() assert >= && <= : + + + call int.sawDoc() call int.sawDoc() call int.sawDoc() call int.sawDoc() call int.sawDoc() decl_stmt int = if < = - - else if == ++ decl_stmt int = if < = - - else if == -- decl_stmt int = - + try call int.finish() call int.finish() call int.finish() call int.finish() call int.finish() catch for = < ++ if call int.allHits() call int.allHits() call int.allHits() call int.allHits() call int.allHits() call int.allHits() call int.allHits() call int.allHits() call int.allHits() == decl_stmt int = int call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() call PostingsEnum.get() decl_stmt boolean = > || == && && < || == && if + + + + + throw call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() CompiledAutomaton String IndexWriterConfig PostingsEnum BytesRef decl List int VerifyAutoPrefixTerms int TermsEnum decl Set IndexWriter int BinaryDocValues int int Document String IndexReader int int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) call org.apache.lucene.index.IndexWriterConfig.setMergeScheduler(MergeScheduler) new decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt int = decl_stmt java.util.Set < = new <> while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt java.util.List < = new <> if decl_stmt int = for : + + ++ if + decl_stmt int = for = < ++ if + decl_stmt java.lang.String if == = else = decl_stmt org.apache.lucene.util.BytesRef = new if + decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() decl_stmt BinaryDocValues = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt VerifyAutoPrefixTerms = new call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != if + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() + + call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt int while = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != + + + call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() decl_stmt int = if < = - - decl_stmt int = + + if < = - - decl_stmt int = - + try call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() catch for = < ++ if call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() call VerifyAutoPrefixTerms.allHits() == decl_stmt java.lang.String = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) + + + throw call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() IndexWriterConfig Document CompiledAutomaton PrefixQuery int VerifyAutoPrefixTerms IndexReader PostingsEnum IndexWriter Terms int TermsEnum Directory public public throws if + + + + + + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt int = for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + + call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + + call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.Terms = if decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new new decl_stmt org.apache.lucene.index.TermsEnum = call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() call CompiledAutomaton.getTermsEnum() decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt VerifyAutoPrefixTerms = new call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() new while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call VerifyAutoPrefixTerms.sawTerm() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt int while = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.sawDoc() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() call VerifyAutoPrefixTerms.finish() decl_stmt org.apache.lucene.search.PrefixQuery = new new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Integer BytesRef public public if != < = ++ += for = <= ++ decl_stmt org.apache.lucene.util.BytesRef = = decl_stmt java.lang.Integer = if == = else += public public long int int int int int int BytesRef BytesRef long BytesRef public public if != - decl_stmt long if == if == = else = else assert == decl_stmt org.apache.lucene.util.BytesRef = decl_stmt org.apache.lucene.util.BytesRef = decl_stmt int = for = < && < ++ if + != + = break = * - + - if == decl_stmt int if == = else = & decl_stmt int if == = else = & if > += - + + + <= decl_stmt int = for < : decl_stmt org.apache.lucene.util.BytesRef = if + + + if != - decl_stmt int = for : decl_stmt int = decl_stmt int = for = < ++ if + != + = break += - decl_stmt long = + * long + + + + + + + + + <= += FieldType Document IndexWriter IllegalStateException IndexWriterConfig Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt IllegalStateException = call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() FieldType Document IndexWriter IllegalStateException IndexWriterConfig Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt IllegalStateException = call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() FieldType Document IndexWriter IllegalStateException IndexWriterConfig Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new new call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt IllegalStateException = call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int decl Set int int int Terms decl List char String decl List char int String int int IndexWriterConfig decl char int boolean int String boolean Document TermsEnum int TermRangeQuery IndexSearcher IndexReader RandomIndexWriter int Directory public public throws decl_stmt java.util.List < = new <> for = < ++ decl_stmt char = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.Set < = new <> decl_stmt int = while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() + decl_stmt char decl_stmt char decl_stmt int decl_stmt boolean = decl_stmt boolean = decl_stmt java.lang.String decl_stmt java.lang.String while = char = char + = = + = + for : decl_stmt int = call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) decl_stmt int = call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) if < || && == && > || && == ++ if > break if + + + + + + + decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt int = decl_stmt int = - * + decl_stmt int = decl_stmt int = - * + : if + + call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new if for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if + if call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.Terms final final = decl_stmt org.apache.lucene.search.IndexSearcher = new decl_stmt int final final = if + + + + + + + decl_stmt org.apache.lucene.search.TermRangeQuery = new new new public public throws decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt int = while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != if + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() ++ if + + + < return decl_stmt int = try if + call TermRangeQuery.getRewriteMethod() call TermRangeQuery.getRewriteMethod() call TermRangeQuery.getRewriteMethod() call TermRangeQuery.getRewriteMethod() call TermRangeQuery.getRewriteMethod() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) finally decl_stmt java.util.List < = new <> for = < * ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = new new new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int TermsEnum public public throws decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt int = while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != if + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() ++ if + + + < return int Terms IndexWriterConfig decl Set TermsEnum Document decl char int int int decl List IndexSearcher IndexReader int int RandomIndexWriter int int int PrefixQuery Directory public public throws decl_stmt java.util.List < = new <> for = < ++ decl_stmt char = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.Set < = new <> decl_stmt int = while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() + decl_stmt int = for : if ++ decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt int = decl_stmt int = - * + decl_stmt int = decl_stmt int = - * + : call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.Terms final final = decl_stmt org.apache.lucene.search.IndexSearcher = new decl_stmt int final final = decl_stmt org.apache.lucene.search.PrefixQuery = new new public public throws decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt int = while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != ++ < return decl_stmt int = try call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) finally call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int TermsEnum public public throws decl_stmt org.apache.lucene.index.TermsEnum = new decl_stmt int = while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != ++ < return