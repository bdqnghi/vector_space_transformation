org.apache.lucene.queryparser.simple org.apache.lucene.analysis.Analyzer import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.MatchNoDocsQuery import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.util.QueryBuilder import org.apache.lucene.util.automaton.LevenshteinAutomata import java.util.Collections import java.util.Map import class org.apache.lucene.queryparser.simple.SimpleQueryParser super super extends int int int int int int int int int decl BooleanClause int decl Map int char State public public decl_stmt char = decl_stmt char = new decl_stmt sun.security.provider.certpath.State = new if == return new else return private private while < if == && & != else if == && & != ++ else if == && & != else if == && & != if == && != = ++ else if == && & != if == && != = ++ else if == && & != ++ ++ continue else if == || == || == || == && & != ++ else = boolean int State int private private assert & != decl_stmt int = ++ decl_stmt int = decl_stmt boolean = while < if ! if == && & != = ++ continue else if == ++ else if == -- if == break = ++ if == = else if == = ++ else decl_stmt sun.security.provider.certpath.State = new ++ boolean int Query String int boolean private private assert & != decl_stmt int = ++ decl_stmt int = decl_stmt boolean = decl_stmt boolean = while < if ! if == && & != = ++ continue else if == if > + && + == && & != ++ if > + = break else break = ++ = ++ if == = else if == = ++ else decl_stmt java.lang.String = new decl_stmt org.apache.lucene.search.Query if = else = ++ String boolean boolean Query boolean int int private private decl_stmt int = decl_stmt boolean = decl_stmt boolean = decl_stmt boolean = while < if ! if == && & != = = ++ continue else if break else if > && == && & != = break = > && == && & != = ++ = ++ if > decl_stmt org.apache.lucene.search.Query final final if && & != decl_stmt java.lang.String = new decl_stmt int = = if == = else = else if decl_stmt java.lang.String = new - = else decl_stmt java.lang.String = new = decl BooleanQuery private static private static decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl Builder private private if != if == decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() if == = else if == = if != decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() = call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() = = = char int int private private decl_stmt char = new decl_stmt int = if == while < ++ if < if break = ++ decl_stmt int = try = new catch if < = return return private private if == && & != || == && & != || == && & != || == && & != || == && & != || == || == || == || == && & != return return decl Builder Query decl BooleanQuery protected protected decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.search.Query = if != decl_stmt float = if != = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl Builder Query decl BooleanQuery protected protected decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.search.Query = new new decl_stmt float = if != = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl Builder Query decl BooleanQuery protected protected decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.search.Query = if != decl_stmt float = if != = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl Builder Query decl BooleanQuery protected protected decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.search.Query = new new decl_stmt float = if != = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() protected protected if return else if == return else return public public return public public if != && != throw new =