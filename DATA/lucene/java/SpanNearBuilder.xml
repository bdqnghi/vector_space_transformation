org.apache.lucene.queryparser.xml.builders org.apache.lucene.search.spans.SpanBoostQuery import org.apache.lucene.search.spans.SpanNearQuery import org.apache.lucene.search.spans.SpanQuery import org.apache.lucene.queryparser.xml.DOMUtils import org.apache.lucene.queryparser.xml.ParserException import org.w3c.dom.Element import org.w3c.dom.Node import java.util.ArrayList import java.util.List import class org.apache.lucene.queryparser.xml.builders.SpanNearBuilder super super extends SpanQueryBuilder int String float decl List SpanQuery decl SpanQuery boolean public public throws decl_stmt java.lang.String = decl_stmt int = decl_stmt boolean = decl_stmt java.util.List < = new <> for = != = if == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call SpanQueryBuilder.getSpanQuery() call SpanQueryBuilder.getSpanQuery() call SpanQueryBuilder.getSpanQuery() call SpanQueryBuilder.getSpanQuery() call SpanQueryBuilder.getSpanQuery() decl_stmt org.apache.lucene.search.spans.SpanQuery = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.search.spans.SpanQuery = new decl_stmt float = return new