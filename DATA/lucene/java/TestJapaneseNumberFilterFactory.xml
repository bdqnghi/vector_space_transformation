org.apache.lucene.analysis.ja java.io.IOException import java.io.StringReader import java.util.HashMap import java.util.Map import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import class org.apache.lucene.analysis.ja.TestJapaneseNumberFilterFactory super super extends decl Map TokenStream JapaneseNumberFilterFactory JapaneseTokenizerFactory public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.analysis.ja.JapaneseTokenizerFactory = new call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() call JapaneseTokenizerFactory.inform() new decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) call org.apache.lucene.analysis.ja.JapaneseTokenizerFactory.create(AttributeFactory) new decl_stmt org.apache.lucene.analysis.ja.JapaneseNumberFilterFactory = new new <> = call JapaneseNumberFilterFactory.create() call JapaneseNumberFilterFactory.create() call JapaneseNumberFilterFactory.create() call JapaneseNumberFilterFactory.create() call JapaneseNumberFilterFactory.create() new IllegalArgumentException public public throws decl_stmt IllegalArgumentException = new new < call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage()