org.apache.solr.handler.component java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.concurrent.ConcurrentHashMap import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.Token import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.core.WhitespaceAnalyzer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.FlagsAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.TypeAttribute import org.apache.lucene.index.IndexReader import org.apache.lucene.search.Query import org.apache.lucene.search.spell.SuggestMode import org.apache.lucene.search.spell.SuggestWord import org.apache.solr.client.solrj.response.SpellCheckResponse import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.ShardParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.params.SpellingParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.core.SolrConfig import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrEventListener import org.apache.solr.core.SolrResourceLoader import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.search.DocSet import org.apache.solr.search.QParser import org.apache.solr.search.QParserPlugin import org.apache.solr.search.SyntaxError import org.apache.solr.search.SolrCache import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.spelling.AbstractLuceneSpellChecker import org.apache.solr.spelling.ConjunctionSolrSpellChecker import org.apache.solr.spelling.IndexBasedSpellChecker import org.apache.solr.spelling.QueryConverter import org.apache.solr.spelling.SolrSpellChecker import org.apache.solr.spelling.SpellCheckCollation import org.apache.solr.spelling.SpellCheckCollator import org.apache.solr.spelling.SpellingOptions import org.apache.solr.spelling.SpellingQueryConverter import org.apache.solr.spelling.SpellingResult import org.apache.solr.util.plugin.SolrCoreAware import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.component.SpellCheckComponent super super extends super implements decl Map Logger boolean NamedList QueryConverter String public public = SolrSpellChecker SolrParams public public throws decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return decl_stmt org.apache.solr.spelling.SolrSpellChecker = if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call SolrSpellChecker.build() call SolrSpellChecker.build() call SolrSpellChecker.build() call SolrSpellChecker.build() call SolrSpellChecker.build() else if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call SolrSpellChecker.reload() call SolrSpellChecker.reload() call SolrSpellChecker.reload() call SolrSpellChecker.reload() call SolrSpellChecker.reload() boolean Integer boolean SolrSpellChecker SpellingResult SuggestMode SolrParams boolean IndexReader float ModifiableSolrParams NamedList decl Collection Integer boolean NamedList int long int boolean String SpellingOptions public public throws decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() return decl_stmt boolean = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt org.apache.solr.spelling.SolrSpellChecker = decl_stmt java.util.Collection < = if != = call SolrSpellChecker.getQueryAnalyzer() call SolrSpellChecker.getQueryAnalyzer() call SolrSpellChecker.getQueryAnalyzer() call SolrSpellChecker.getQueryAnalyzer() call SolrSpellChecker.getQueryAnalyzer() else = if == = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = call QueryConverter.convert() call QueryConverter.convert() call QueryConverter.convert() call QueryConverter.convert() call QueryConverter.convert() if != && call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() == if != decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt float = call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt java.lang.Integer = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new for : call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) decl_stmt java.lang.Integer = decl_stmt long = if == = else = call java.lang.Integer.longValue() call java.lang.Integer.longValue() call java.lang.Integer.longValue() call java.lang.Integer.longValue() call java.lang.Integer.longValue() decl_stmt org.apache.solr.spelling.SpellingResult = if == || <= decl_stmt SuggestMode = if = else if > = decl_stmt org.apache.lucene.index.IndexReader = decl_stmt SpellingOptions = new = call SolrSpellChecker.getSuggestions() call SolrSpellChecker.getSuggestions() call SolrSpellChecker.getSuggestions() call SolrSpellChecker.getSuggestions() call SolrSpellChecker.getSuggestions() else = new decl_stmt boolean = > == : decl_stmt org.apache.solr.common.util.NamedList = new decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if call org.apache.solr.spelling.SolrSpellChecker.isSuggestionsMayOverlap() call org.apache.solr.spelling.SolrSpellChecker.isSuggestionsMayOverlap() call org.apache.solr.spelling.SolrSpellChecker.isSuggestionsMayOverlap() call org.apache.solr.spelling.SolrSpellChecker.isSuggestionsMayOverlap() call org.apache.solr.spelling.SolrSpellChecker.isSuggestionsMayOverlap() if else throw new + SolrIndexSearcher String float QParser Integer DocSet SolrParams decl List int private private decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt float = call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) call org.apache.solr.common.params.SolrParams.getFloat(String) decl_stmt java.lang.Integer = if > if == int = int else decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt int = decl_stmt org.apache.solr.search.SolrIndexSearcher = try if != decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() = call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() else decl_stmt java.util.List < = if != for : decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) if != = call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return if != = * return int boolean decl List int boolean SpellCheckCollator int NamedList int NamedList protected protected decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt boolean = decl_stmt int = if ! = decl_stmt boolean = decl_stmt org.apache.solr.spelling.SpellCheckCollator = new decl_stmt java.util.List < = call org.apache.solr.spelling.SpellCheckCollator.collate(SpellingResult,String,ResponseBuilder) call org.apache.solr.spelling.SpellCheckCollator.collate(SpellingResult,String,ResponseBuilder) call org.apache.solr.spelling.SpellCheckCollator.collate(SpellingResult,String,ResponseBuilder) call org.apache.solr.spelling.SpellCheckCollator.collate(SpellingResult,String,ResponseBuilder) call org.apache.solr.spelling.SpellCheckCollator.collate(SpellingResult,String,ResponseBuilder) decl_stmt org.apache.solr.common.util.NamedList = new for : if decl_stmt org.apache.solr.common.util.NamedList = new call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if > && call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) else call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if > && call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) decl List private private < decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() String String ModifiableSolrParams decl Iterator protected protected decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new decl_stmt java.util.Iterator < = decl_stmt java.lang.String = + + + while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() return int SolrParams int public public decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return decl_stmt int = : if & != decl_stmt int = if < = else NamedList boolean int SpellingResult NamedList SolrSpellChecker SolrParams boolean decl SpellCheckCollation int SpellCheckMergeData boolean boolean NamedList Integer SpellCheckCollation NamedList SimpleOrderedMap int long String int int public public decl_stmt org.apache.solr.common.params.SolrParams = if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || != return decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt java.lang.Integer = decl_stmt int = decl_stmt int = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if == = if == = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt long = : decl_stmt boolean = > == : decl_stmt org.apache.solr.handler.component.SpellCheckMergeData = new if == || ! for : for : decl_stmt org.apache.solr.common.util.NamedList = try = catch if continue throw new + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + if != ++ decl_stmt org.apache.solr.spelling.SolrSpellChecker = decl_stmt org.apache.solr.spelling.SpellingResult = call org.apache.solr.spelling.SolrSpellChecker.mergeSuggestions(SpellCheckMergeData,int,int,boolean) call org.apache.solr.spelling.SolrSpellChecker.mergeSuggestions(SpellCheckMergeData,int,int,boolean) call org.apache.solr.spelling.SolrSpellChecker.mergeSuggestions(SpellCheckMergeData,int,int,boolean) call org.apache.solr.spelling.SolrSpellChecker.mergeSuggestions(SpellCheckMergeData,int,int,boolean) call org.apache.solr.spelling.SolrSpellChecker.mergeSuggestions(SpellCheckMergeData,int,int,boolean) decl_stmt org.apache.solr.common.util.NamedList = new decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) if decl_stmt org.apache.solr.spelling.SpellCheckCollation = call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() new call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() call SpellCheckMergeData.collations() decl_stmt org.apache.solr.common.util.NamedList = new decl_stmt int = while < && < decl_stmt org.apache.solr.spelling.SpellCheckCollation = ++ if decl_stmt org.apache.solr.common.util.SimpleOrderedMap = new call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call org.apache.solr.spelling.SpellCheckCollation.getMisspellingsAndCorrections() call org.apache.solr.spelling.SpellCheckCollation.getMisspellingsAndCorrections() call org.apache.solr.spelling.SpellCheckCollation.getMisspellingsAndCorrections() call org.apache.solr.spelling.SpellCheckCollation.getMisspellingsAndCorrections() call org.apache.solr.spelling.SpellCheckCollation.getMisspellingsAndCorrections() call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) else call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) decl HashSet SuggestWord SpellCheckResponse Integer Integer decl Iterable int String Integer private private decl_stmt org.apache.solr.client.solrj.response.SpellCheckResponse = new decl_stmt java.lang.Iterable < = < if != = new <> for : for : call org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions() call org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions() call org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions() call org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions() call org.apache.solr.client.solrj.response.SpellCheckResponse.getSuggestions() decl_stmt java.util.HashSet < = if == = new <> decl_stmt int = decl_stmt java.lang.Integer = if != += += decl_stmt java.lang.Integer = if == else ++ for = < ++ decl_stmt java.lang.String = call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() decl_stmt SuggestWord = if == = new = if != && > decl_stmt java.lang.Integer = if != += int decl Map SpellCheckCollation SpellCheckCollation decl List decl List NamedList NamedList private private decl_stmt java.util.Map < = decl_stmt org.apache.solr.common.util.NamedList = if != decl_stmt java.util.List < = call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) decl_stmt java.util.List < = call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) decl_stmt int = if != for : if instanceof decl_stmt org.apache.solr.spelling.SpellCheckCollation = new call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) if != && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ decl_stmt org.apache.solr.spelling.SpellCheckCollation = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() if != call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() else decl_stmt org.apache.solr.common.util.NamedList = decl_stmt org.apache.solr.spelling.SpellCheckCollation = new call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.spelling.SpellCheckCollation.setCollationQuery(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if > call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.spelling.SpellCheckCollation.setMisspellingsAndCorrections(NamedList) call org.apache.solr.spelling.SpellCheckCollation.setMisspellingsAndCorrections(NamedList) call org.apache.solr.spelling.SpellCheckCollation.setMisspellingsAndCorrections(NamedList) call org.apache.solr.spelling.SpellCheckCollation.setMisspellingsAndCorrections(NamedList) call org.apache.solr.spelling.SpellCheckCollation.setMisspellingsAndCorrections(NamedList) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.spelling.SpellCheckCollation = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() if != call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call SpellCheckCollation.setHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() + call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.getHits() call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.setInternalRank(int) call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call org.apache.solr.spelling.SpellCheckCollation.getInternalRank() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() call org.apache.solr.spelling.SpellCheckCollation.getCollationQuery() PositionIncrementAttribute Token CharTermAttribute decl Collection FlagsAttribute OffsetAttribute TypeAttribute PayloadAttribute private < private < throws decl_stmt java.util.Collection < = new <> assert != try = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.TypeAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.FlagsAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute = while decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.copyBuffer() call Token.copyBuffer() call Token.copyBuffer() call Token.copyBuffer() call Token.copyBuffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call Token.setOffset() call Token.setOffset() call Token.setOffset() call Token.setOffset() call Token.setOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call Token.setType() call Token.setType() call Token.setType() call Token.setType() call Token.setType() call TypeAttribute.type() call TypeAttribute.type() call TypeAttribute.type() call TypeAttribute.type() call TypeAttribute.type() call org.apache.lucene.queryparser.surround.parser.Token.setFlags(int) call org.apache.lucene.queryparser.surround.parser.Token.setFlags(int) call org.apache.lucene.queryparser.surround.parser.Token.setFlags(int) call org.apache.lucene.queryparser.surround.parser.Token.setFlags(int) call org.apache.lucene.queryparser.surround.parser.Token.setFlags(int) call FlagsAttribute.getFlags() call FlagsAttribute.getFlags() call FlagsAttribute.getFlags() call FlagsAttribute.getFlags() call FlagsAttribute.getFlags() call org.apache.lucene.queryparser.surround.parser.Token.setPayload(BytesRef) call org.apache.lucene.queryparser.surround.parser.Token.setPayload(BytesRef) call org.apache.lucene.queryparser.surround.parser.Token.setPayload(BytesRef) call org.apache.lucene.queryparser.surround.parser.Token.setPayload(BytesRef) call org.apache.lucene.queryparser.surround.parser.Token.setPayload(BytesRef) call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return String decl String ConjunctionSolrSpellChecker SolrSpellChecker protected protected decl_stmt java.lang.String = if == return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else decl_stmt java.lang.String = decl_stmt org.apache.solr.spelling.SolrSpellChecker = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt org.apache.solr.spelling.ConjunctionSolrSpellChecker = new for : call org.apache.solr.spelling.ConjunctionSolrSpellChecker.addChecker(SolrSpellChecker) call org.apache.solr.spelling.ConjunctionSolrSpellChecker.addChecker(SolrSpellChecker) call org.apache.solr.spelling.ConjunctionSolrSpellChecker.addChecker(SolrSpellChecker) call org.apache.solr.spelling.ConjunctionSolrSpellChecker.addChecker(SolrSpellChecker) call org.apache.solr.spelling.ConjunctionSolrSpellChecker.addChecker(SolrSpellChecker) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = return StringBuilder private private decl_stmt java.lang.StringBuilder = new for : if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl String private private decl_stmt java.lang.String = if == return new return public public return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() String Token String boolean decl Iterator SimpleOrderedMap decl Map Integer decl ArrayList boolean NamedList boolean decl Map SimpleOrderedMap protected protected decl_stmt org.apache.solr.common.util.NamedList = new decl_stmt java.util.Map < < = decl_stmt boolean = decl_stmt boolean = decl_stmt boolean = for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.queryparser.surround.parser.Token = decl_stmt java.lang.String = new call Token.buffer() call Token.buffer() call Token.buffer() call Token.buffer() call Token.buffer() call Token.length() call Token.length() call Token.length() call Token.length() call Token.length() decl_stmt java.util.Map < = new <> decl_stmt java.util.Iterator < = call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() if call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() > = if != && call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() > || decl_stmt org.apache.solr.common.util.SimpleOrderedMap = new call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call Token.startOffset() call Token.startOffset() call Token.startOffset() call Token.startOffset() call Token.startOffset() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call Token.endOffset() call Token.endOffset() call Token.endOffset() call Token.endOffset() call Token.endOffset() if && call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() decl_stmt java.util.ArrayList < = new <> call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.solr.common.util.SimpleOrderedMap = new call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() else call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if decl_stmt java.lang.Integer = if == || == = call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) return String Object decl Map boolean Analyzer FieldType IndexSchema public public if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt boolean = for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ if call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt java.lang.Object = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) if instanceof else if instanceof new else if instanceof for : if instanceof new decl_stmt java.util.Map < = new <> if call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new if call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() == = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() decl_stmt org.apache.lucene.analysis.Analyzer = == new : call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.spelling.QueryConverter.setAnalyzer(Analyzer) call org.apache.solr.spelling.QueryConverter.setAnalyzer(Analyzer) call org.apache.solr.spelling.QueryConverter.setAnalyzer(Analyzer) call org.apache.solr.spelling.QueryConverter.setAnalyzer(Analyzer) call org.apache.solr.spelling.QueryConverter.setAnalyzer(Analyzer) String boolean boolean SolrResourceLoader String SolrSpellChecker boolean private private decl_stmt java.lang.String = if == = if == = decl_stmt org.apache.solr.core.SolrResourceLoader = decl_stmt org.apache.solr.spelling.SolrSpellChecker = call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) call org.apache.solr.core.SolrResourceLoader.newInstance(String,Class,String,Class,Object) if != decl_stmt java.lang.String = call org.apache.solr.spelling.SolrSpellChecker.init(NamedList,SolrCore) call org.apache.solr.spelling.SolrSpellChecker.init(NamedList,SolrCore) call org.apache.solr.spelling.SolrSpellChecker.init(NamedList,SolrCore) call org.apache.solr.spelling.SolrSpellChecker.init(NamedList,SolrCore) call org.apache.solr.spelling.SolrSpellChecker.init(NamedList,SolrCore) if != decl_stmt boolean = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if && ! = else if && throw new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if ! call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = else throw new new decl_stmt boolean = decl_stmt boolean = if || call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.spelling.SolrSpellChecker.getDictionaryName() call org.apache.solr.spelling.SolrSpellChecker.getDictionaryName() call org.apache.solr.spelling.SolrSpellChecker.getDictionaryName() call org.apache.solr.spelling.SolrSpellChecker.getDictionaryName() call org.apache.solr.spelling.SolrSpellChecker.getDictionaryName() new else throw new + return public public public public if == try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + else if else if if == else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + private private try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + public public public public public < public < return public public return