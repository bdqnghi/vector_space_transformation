org.apache.lucene.codecs.compressing static static org.apache.lucene.util.BitUtil.zigZagDecode import java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.List import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.SegmentInfo import org.apache.lucene.store.IndexInput import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.packed.PackedInts import class org.apache.lucene.codecs.compressing.CompressingStoredFieldsIndexReader super super implements long int decl long decl long decl Reader decl int decl int decl PackedInts int int int private private decl_stmt int = = - while <= decl_stmt int final final = + >>> decl_stmt int final final = if == return else if < = + else = - return int long private private decl_stmt int final final = * decl_stmt long final final = return + int long long private private decl_stmt long final final = * decl_stmt long final final = return + int int int private private decl_stmt int = = - while <= decl_stmt int final final = + >>> decl_stmt int final final = if == return else if < = + else = - return int int if < || >= throw new + + + decl_stmt int final final = decl_stmt int final final = - return + public public return long public public decl_stmt long = += for : += += for : += += += += += return long long decl List public < public < decl_stmt java.util.List < = new <> decl_stmt long = for : += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt long = for : += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public return + + +