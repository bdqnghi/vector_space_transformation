org.apache.solr.handler.dataimport org.apache.lucene.analysis.charfilter.HTMLStripCharFilter import java.io.IOException import java.io.StringReader import java.io.BufferedReader import java.util.ArrayList import java.util.List import java.util.Map import class org.apache.solr.handler.dataimport.HTMLStripTransformer super super extends String String decl List decl List List String Object String String Object public public < decl_stmt java.util.List < < = for < : decl_stmt java.lang.String = decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue decl_stmt java.lang.Object = if == continue if instanceof decl_stmt java.util.List < = < decl_stmt java.util.List = new for : if == continue decl_stmt java.lang.Object = if != call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) else decl_stmt java.lang.String = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() decl_stmt java.lang.Object = if != return int StringReader HTMLStripCharFilter decl char StringBuilder private private decl_stmt java.lang.StringBuilder = new decl_stmt java.io.StringReader = new try decl_stmt org.apache.lucene.analysis.charfilter.HTMLStripCharFilter = new call java.io.StringReader.markSupported() call java.io.StringReader.markSupported() call java.io.StringReader.markSupported() call java.io.StringReader.markSupported() call java.io.StringReader.markSupported() : new decl_stmt char = new * while decl_stmt int = call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.read() if == - break if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.close() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.close() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.close() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.close() call org.apache.lucene.analysis.charfilter.HTMLStripCharFilter.close() catch throw new + return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()