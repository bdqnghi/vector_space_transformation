org.apache.lucene.payloads java.io.IOException import java.nio.charset.StandardCharsets import java.util.Collection import java.util.HashSet import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.IndexReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.TermQuery import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.payloads.TestPayloadSpanUtil super super extends String IndexSearcher Document RandomIndexWriter decl Collection IndexReader Directory PayloadSpanUtil public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.payloads.PayloadSpanUtil = new call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() decl_stmt java.util.Collection < = call org.apache.lucene.payloads.PayloadSpanUtil.getPayloadsForQuery(Query) call org.apache.lucene.payloads.PayloadSpanUtil.getPayloadsForQuery(Query) call org.apache.lucene.payloads.PayloadSpanUtil.getPayloadsForQuery(Query) call org.apache.lucene.payloads.PayloadSpanUtil.getPayloadsForQuery(Query) call org.apache.lucene.payloads.PayloadSpanUtil.getPayloadsForQuery(Query) new new if + call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() for final final final : new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new String public public throws if decl_stmt java.lang.String = if ! if new + + else new + + += return return public public throws =