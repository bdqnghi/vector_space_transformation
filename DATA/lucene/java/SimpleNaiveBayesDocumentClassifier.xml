org.apache.lucene.classification.document java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.LinkedHashMap import java.util.LinkedList import java.util.List import java.util.Map import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.classification.ClassificationResult import org.apache.lucene.classification.SimpleNaiveBayesClassifier import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.IndexableField import org.apache.lucene.index.LeafReader import org.apache.lucene.index.MultiFields import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TotalHitCountCollector import org.apache.lucene.search.WildcardQuery import org.apache.lucene.util.BytesRef import class org.apache.lucene.classification.document.SimpleNaiveBayesDocumentClassifier super super extends super implements decl Map decl List double decl ClassificationResult public < public < throws decl_stmt java.util.List < < = decl_stmt org.apache.lucene.classification.ClassificationResult < = decl_stmt double = - for < : if > = = return decl List public < < public < < throws decl_stmt java.util.List < < = return decl List public < < public < < throws decl_stmt java.util.List < < = return call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() int BytesRef decl List double decl Map TermsEnum Term Terms double decl Map decl List private < < private < < throws decl_stmt java.util.List < < = new <> decl_stmt java.util.Map < < = new <> decl_stmt java.util.Map < = new <> decl_stmt org.apache.lucene.index.Terms = decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef decl_stmt int = while = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt double = decl_stmt org.apache.lucene.index.Term = new for : decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt double = for : += + * call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() call org.apache.lucene.index.Term.bytes() return decl String TokenStream decl List decl String String float decl IndexableField private private < < < throws for = < ++ decl_stmt java.lang.String = decl_stmt float = decl_stmt java.util.List < = new <> if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) = = decl_stmt org.apache.lucene.index.IndexableField = for : decl_stmt org.apache.lucene.analysis.TokenStream = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = decl BooleanQuery TotalHitCountCollector int protected protected throws decl_stmt int = if == - decl_stmt org.apache.lucene.search.TotalHitCountCollector = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new if != call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() call org.apache.lucene.search.TotalHitCountCollector.getTotalHits() return decl Collection CharTermAttribute protected protected throws decl_stmt java.util.Collection < = new <> decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = while call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() return call decl Collection.toArray() call decl Collection.toArray() call decl Collection.toArray() call decl Collection.toArray() call decl Collection.toArray() new call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() int double double double double double private private throws decl_stmt double = for : decl_stmt int = decl_stmt double = + decl_stmt double = + decl_stmt double = / += decl_stmt double = / return Terms double int long private private throws decl_stmt double decl_stmt org.apache.lucene.index.Terms = decl_stmt long = call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() = / double call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() decl_stmt int = return * decl Builder decl BooleanQuery decl BooleanQuery private private throws decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new if != call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.TotalHitCountCollector = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return call decl BooleanQuery.getTotalHits() call decl BooleanQuery.getTotalHits() call decl BooleanQuery.getTotalHits() call decl BooleanQuery.getTotalHits() call decl BooleanQuery.getTotalHits() private private throws return double - private private throws return