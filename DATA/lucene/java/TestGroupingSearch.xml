org.apache.solr java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.TreeMap import org.apache.lucene.index.LogDocMergePolicy import org.apache.solr.client.solrj.impl.BinaryResponseParser import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.GroupParams import org.apache.solr.index.LogDocMergePolicyFactory import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.response.BinaryResponseWriter import org.apache.solr.response.ResultContext import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.IndexSchema import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.noggit.JSONUtil import org.noggit.ObjectBuilder import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.TestGroupingSearch super super extends String Logger String String String String String public static public static throws public static public static public public public public public public public public public public public public throws public public throws BinaryResponseWriter SolrQueryRequest SolrQueryResponse String ByteArrayOutputStream public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.response.SolrQueryResponse = new decl_stmt java.io.ByteArrayOutputStream = new try new decl_stmt java.lang.String = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt org.apache.solr.response.BinaryResponseWriter = new call org.apache.solr.response.BinaryResponseWriter.write(OutputStream,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.BinaryResponseWriter.write(OutputStream,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.BinaryResponseWriter.write(OutputStream,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.BinaryResponseWriter.write(OutputStream,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.BinaryResponseWriter.write(OutputStream,SolrQueryRequest,SolrQueryResponse) finally call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() call org.apache.solr.response.SolrQueryResponse.getResponse() new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() public public throws public public throws SolrQueryRequest public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = + + = + + = + + = + + = + + = + + = + + SolrQueryRequest public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = + + public static public static String String public public throws decl_stmt java.lang.String = + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + decl_stmt java.lang.String = + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + SolrQueryRequest String boolean String String decl Comparator int decl String decl List int int int String decl List int int Doc decl Comparator IndexSchema int decl Map Object decl Map boolean decl List int boolean String int Doc String String decl Map Object public public throws decl_stmt int = decl_stmt int = while -- >= decl_stmt int = * decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new + / call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new + / decl_stmt java.util.Map < = if call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() decl_stmt javax.print.Doc = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for = < ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = == call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() + : - decl_stmt int = == call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() + : decl_stmt int = == call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() + : - decl_stmt int = == call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() + : decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = new decl_stmt java.util.Comparator < = decl_stmt java.lang.String = decl_stmt java.util.Comparator < = : decl_stmt java.lang.String = if == && != = if = = = + = = + = = = = decl_stmt java.util.Map < = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if != for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl_stmt java.util.List < = new <> call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() == : decl_stmt boolean = decl_stmt java.lang.Object = decl_stmt boolean = decl_stmt java.util.Map < = new <> if for : decl_stmt javax.print.Doc = if call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() == continue decl_stmt java.lang.String = call Doc.getFirstValue() call Doc.getFirstValue() call Doc.getFirstValue() call Doc.getFirstValue() call Doc.getFirstValue() decl_stmt boolean = call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt int = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() ++ else for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() == continue for : call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() call Doc.getValues() decl_stmt java.lang.String = decl_stmt boolean = call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt int = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() ++ decl_stmt java.util.List < = new <> for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = decl_stmt org.apache.solr.request.SolrQueryRequest = == : == : == || == : == : + + + + : : decl_stmt java.lang.String = decl_stmt java.lang.Object = decl_stmt java.lang.String = + if != call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + + + + + decl_stmt java.lang.String = = + if != call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + + + List decl Map Grp long List decl Map decl Map public static public static < decl_stmt java.util.Map < = new <> decl_stmt long = for : += call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.List = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for = < ++ if != - && call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() >= break decl_stmt java.util.Map < = new <> call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) decl_stmt Grp = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.List = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for = < call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() ++ if != - && call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() >= break call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() return Doc Doc public static < public static < final final final < return decl_stmt javax.print.Doc = decl_stmt javax.print.Doc = return Doc Doc public static < public static < final final final < return decl_stmt javax.print.Doc = decl_stmt javax.print.Doc = return decl List Grp decl Map public static < public static < < decl_stmt java.util.Map < = new <> for : decl_stmt java.util.List < = if == decl_stmt Grp = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new = = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() else for : decl_stmt Grp = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new = = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() call Grp.docs() return decl Doc public public < decl_stmt javax.print.Doc = new = > : public public return + + + +