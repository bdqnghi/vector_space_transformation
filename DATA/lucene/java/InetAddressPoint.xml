org.apache.lucene.document java.net.InetAddress import java.net.UnknownHostException import java.util.Arrays import java.util.Comparator import org.apache.lucene.index.PointValues import org.apache.lucene.search.PointInSetQuery import org.apache.lucene.search.PointRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.util.BytesRef import org.apache.lucene.util.StringHelper import class org.apache.lucene.document.InetAddressPoint super super extends FieldType decl byte int public public if == throw new = new public public throw new BytesRef StringBuilder InetAddress public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt org.apache.lucene.util.BytesRef = decl_stmt java.net.InetAddress = if call java.net.InetAddress.getAddress() call java.net.InetAddress.getAddress() call java.net.InetAddress.getAddress() call java.net.InetAddress.getAddress() call java.net.InetAddress.getAddress() == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.net.InetAddress.getHostAddress() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl byte decl byte public static public static decl_stmt byte = if == decl_stmt byte = new = else if != throw new return public static public static try return catch throw new public static public static return byte public static public static if == throw new if < || || * throw new + + decl_stmt byte = decl_stmt byte = for = < * ++ >> &= ~ << & >> |= << & try return catch throw new public static public static return new protected protected return protected protected return int BytesRef decl byte public static public static decl_stmt byte = new for = < ++ = new < public public return decl_stmt org.apache.lucene.util.BytesRef final final = new new return new new decl_stmt int public public if == return else = assert == ++ return protected protected assert == return public public return public public if == return else = assert == ++ return protected protected assert == return