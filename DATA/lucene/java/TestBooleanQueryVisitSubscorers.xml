org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field.Store import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.Scorer.ChildScorer import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.search.TestBooleanQueryVisitSubscorers super super extends IndexSearcher String String IndexReader Analyzer IndexSearcher Directory RandomIndexWriter IndexWriterConfig public public throws = new = decl_stmt org.apache.lucene.index.IndexWriterConfig = call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) decl_stmt org.apache.lucene.index.RandomIndexWriter = new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = new call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) new = new call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) new public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl BooleanQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt java.util.Map < = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() decl Builder decl BooleanQuery decl BooleanQuery public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() decl_stmt java.util.Map < = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.size() call decl BooleanQuery.size() call decl BooleanQuery.size() call decl BooleanQuery.size() call decl BooleanQuery.size() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() call decl BooleanQuery.get() decl BooleanQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt java.util.Map < = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() Document static static decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new return MyCollector static < static < throws decl_stmt MyCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) return int int public public throws decl_stmt int final final = return new public public throws public public throws decl_stmt int = for : if == += + public public throws int public public throws decl_stmt int = for : if == += + private private < if instanceof else for : public public return < public public throws return decl BooleanQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new decl_stmt ScorerSummarizingCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() for : call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() + + + + + decl BooleanQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt ScorerSummarizingCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getNumHits() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() for : call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() call decl Builder.getSummaries() + public public return public < public < return public public return StringBuilder public public throws return new public public throws decl_stmt java.lang.StringBuilder final final = new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws ++ StringBuilder public public throws decl_stmt java.lang.StringBuilder final final = new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws ++ TermQuery private static private static final final final final final final if instanceof decl_stmt org.apache.lucene.search.TermQuery = call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() call org.apache.lucene.search.TermQuery.getTerm() for final final : + + private static private static final final final final if != for = < ++ return