org.apache.lucene.analysis.standard org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer import org.apache.lucene.analysis.standard.WordBreakTestUnicode_6_3_0 import org.apache.lucene.analysis.tokenattributes.TypeAttribute import org.apache.lucene.util.IOUtils import org.apache.lucene.util.TestUtil import java.io.BufferedReader import java.io.IOException import java.io.InputStreamReader import java.io.Reader import java.io.StringReader import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.Arrays import java.util.List import java.util.Random import class org.apache.lucene.analysis.standard.TestUAX29URLEmailTokenizer super super extends Analyzer decl char int String StringBuilder UAX29URLEmailTokenizer int int public public throws decl_stmt char = decl_stmt java.lang.StringBuilder = new decl_stmt int = * * * for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt int = decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() new call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() while call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() ++ call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() > = decl_stmt int = call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() new call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.reset() while call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() call UAX29URLEmailTokenizer.incrementToken() ++ call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.end() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.close() > StringBuilder char UAX29URLEmailTokenizer String public public throws decl_stmt java.lang.StringBuilder = new decl_stmt char = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() call UAX29URLEmailTokenizer.setReader() new new TokenFilter UAX29URLEmailTokenizer public public throws = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new = new protected protected decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) decl_stmt org.apache.lucene.analysis.TokenFilter = new return new = new protected protected decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new decl_stmt org.apache.lucene.analysis.TokenFilter = new return new Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new TokenFilter UAX29URLEmailTokenizer protected protected decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) call org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer.setMaxTokenLength(int) decl_stmt org.apache.lucene.analysis.TokenFilter = new return new TokenFilter UAX29URLEmailTokenizer protected protected decl_stmt org.apache.lucene.analysis.standard.UAX29URLEmailTokenizer = new decl_stmt org.apache.lucene.analysis.TokenFilter = new return new public public throws boolean public final public final throws decl_stmt boolean = while if == = break return boolean public final public final throws decl_stmt boolean = while if == = break return public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new new new public public throws new public public throws new new public public throws new new new public public throws new new new new new new public public throws new new new public public throws new public public throws new new new new public public throws new public public throws new new new public public throws new new int decl char StringBuilder BufferedReader String decl String Reader decl List String public public throws decl_stmt java.io.Reader = decl_stmt java.lang.String try = new decl_stmt java.lang.StringBuilder = new decl_stmt char = new decl_stmt int while - != = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() finally if != call Reader.close() call Reader.close() call Reader.close() call Reader.close() call Reader.close() != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt java.io.BufferedReader = decl_stmt java.lang.String try decl_stmt java.util.List < = new <> = new new decl_stmt java.lang.String while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() finally if != call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() != && > int String decl char decl List StringBuilder BufferedReader Reader String decl String public public throws decl_stmt java.io.Reader = decl_stmt java.lang.String try = new decl_stmt java.lang.StringBuilder = new decl_stmt char = new decl_stmt int while - != = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() finally if != call Reader.close() call Reader.close() call Reader.close() call Reader.close() call Reader.close() != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt java.io.BufferedReader = decl_stmt java.lang.String try decl_stmt java.util.List < = new <> = new new decl_stmt java.lang.String while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() finally if != call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() != && > public public throws new new + new new int decl char StringBuilder decl List BufferedReader decl String Reader String String public public throws decl_stmt java.io.Reader = decl_stmt java.lang.String try = new decl_stmt java.lang.StringBuilder = new decl_stmt char = new decl_stmt int while - != = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() finally if != call Reader.close() call Reader.close() call Reader.close() call Reader.close() call Reader.close() != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt java.io.BufferedReader = decl_stmt java.lang.String try decl_stmt java.util.List < = new <> = new new decl_stmt java.lang.String while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() finally if != call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() != && > WordBreakTestUnicode_6_3_0 public public throws decl_stmt org.apache.lucene.analysis.standard.WordBreakTestUnicode_6_3_0 = new call WordBreakTestUnicode_6_3_0.test() call WordBreakTestUnicode_6_3_0.test() call WordBreakTestUnicode_6_3_0.test() call WordBreakTestUnicode_6_3_0.test() call WordBreakTestUnicode_6_3_0.test() public public throws new new public public throws new new public public throws new new public public throws public public throws new new new new new new new new new new new new new new new new new new new new new new new new public public throws * Random public public throws decl_stmt java.util.Random = *