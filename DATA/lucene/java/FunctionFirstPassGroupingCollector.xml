org.apache.lucene.search.grouping.function org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.Sort import org.apache.lucene.search.grouping.AbstractFirstPassGroupingCollector import org.apache.lucene.util.mutable.MutableValue import java.io.IOException import java.util.Map import class org.apache.lucene.search.grouping.function.FunctionFirstPassGroupingCollector super super extends decl FunctionValues ValueSource decl ValueFiller decl Map protected protected call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() return protected protected if != return return FunctionValues protected protected throws decl_stmt org.apache.lucene.queries.function.FunctionValues = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() = call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() = call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue()