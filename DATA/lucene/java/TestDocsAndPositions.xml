org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Arrays import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.TestDocsAndPositions super super extends String public public throws = + int FieldType PostingsEnum Document RandomIndexWriter BytesRef IndexReaderContext String int IndexReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + + + call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt IndexReaderContext = call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() for : call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt org.apache.lucene.index.PostingsEnum = if == continue decl_stmt int final final = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() do decl_stmt java.lang.String = + + + call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TermsEnum Terms public public throws decl_stmt org.apache.lucene.index.Terms = if != decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) return call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) return int FieldType int int PostingsEnum int decl ArrayList RandomIndexWriter BytesRef IndexReader IndexReaderContext int Document decl Integer decl Integer int int int int StringBuilder Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt java.lang.Integer = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt java.util.ArrayList < = new <> decl_stmt java.lang.StringBuilder = new decl_stmt int = for = < ++ decl_stmt int = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if == call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() if call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() = call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new + decl_stmt IndexReaderContext = call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() for : call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt int = decl_stmt int = if = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() else = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() do decl_stmt int = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() if == break decl_stmt java.lang.Integer = + call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() decl_stmt int final final = == - : for = < ++ + + + + + + + + + call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() if == if call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() + + - == break call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int FieldType int int int StringBuilder RandomIndexWriter BytesRef IndexReader decl int IndexReaderContext int int PostingsEnum Document int int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt int = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if == ++ call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new + decl_stmt IndexReaderContext = call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() for : call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt int = decl_stmt org.apache.lucene.index.PostingsEnum = if + == continue call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() for = < ++ if + != call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() + if == && == decl_stmt int = + + + - decl_stmt int = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() if >= else + + + >= else call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() + + + + + call PostingsEnum.getClass() call PostingsEnum.getClass() call PostingsEnum.getClass() call PostingsEnum.getClass() call PostingsEnum.getClass() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private static private static for = < ++ if != return return FieldType int int PostingsEnum Document StringBuilder RandomIndexWriter BytesRef IndexReaderContext int IndexReader String int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt int = decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt java.lang.StringBuilder = new for = < ++ if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt int = for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt IndexReaderContext = call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() call IndexReader.getContext() for : call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt int = decl_stmt int = if = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() else = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() decl_stmt java.lang.String = + + + / call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() for = < += + + + call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() + + call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int Document RandomIndexWriter LeafReader DirectoryReader PostingsEnum TermsEnum Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PostingsEnum = new decl_stmt int = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() - call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) new = = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() - call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int Document RandomIndexWriter LeafReader DirectoryReader PostingsEnum TermsEnum Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.PostingsEnum = call org.apache.lucene.index.LeafReader.postings(Term,int) call org.apache.lucene.index.LeafReader.postings(Term,int) call org.apache.lucene.index.LeafReader.postings(Term,int) call org.apache.lucene.index.LeafReader.postings(Term,int) call org.apache.lucene.index.LeafReader.postings(Term,int) new decl_stmt int = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() - call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) new = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) = call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() call PostingsEnum.docID() - call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()