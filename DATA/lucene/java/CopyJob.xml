org.apache.lucene.replicator.nrt java.io.IOException import java.util.Iterator import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.util.IOUtils import class org.apache.lucene.replicator.nrt.CopyJob super super implements decl Map CopyOneFile long Throwable decl List ReplicaNode AtomicLong long boolean String long String OnceDone long decl Map public synchronized public synchronized throws synchronized call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + try catch call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() long decl Iterator String decl Map long String private synchronized private synchronized throws assert if != call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() return = new decl_stmt java.util.Iterator < < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt long = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt java.lang.String = call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() decl_stmt java.lang.String = if != decl_stmt long = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() += call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + + + + + + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() else if != && call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + + + + + + + += assert == = assert <= = += call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() else call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + + call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + + + call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + if != if call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() = public public throws if != return call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() == : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if == = new = = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() if != if call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() call ReplicaNode.message() + call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() call ReplicaNode.deleter() =