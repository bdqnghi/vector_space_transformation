org.apache.solr.request org.apache.lucene.index.DocValues import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.PriorityQueue import org.apache.lucene.util.UnicodeUtil import org.apache.solr.common.SolrException import org.apache.solr.common.params.FacetParams import org.apache.solr.common.util.NamedList import org.apache.solr.schema.FieldType import org.apache.solr.search.DocSet import org.apache.solr.search.Filter import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.util.BoundedTreeSet import java.io.IOException import java.util.LinkedList import java.util.List import java.util.concurrent.Callable import java.util.concurrent.CompletionService import java.util.concurrent.ExecutionException import java.util.concurrent.Executor import java.util.concurrent.ExecutorCompletionService import java.util.concurrent.Future import class org.apache.solr.request.PerSegmentSingleValuedFaceting String SolrIndexSearcher int Filter boolean DocSet String int boolean String String int int public public = int SegFacet FacetCollector decl Callable FieldType BytesRefBuilder decl CompletionService int Throwable int decl List boolean decl PriorityQueue boolean boolean decl Future int decl NamedList SegFacet decl LinkedList < < throws decl_stmt java.util.concurrent.CompletionService < = new <> = call org.apache.solr.search.DocSet.getTopFilter() call org.apache.solr.search.DocSet.getTopFilter() call org.apache.solr.search.DocSet.getTopFilter() call org.apache.solr.search.DocSet.getTopFilter() call org.apache.solr.search.DocSet.getTopFilter() decl_stmt java.util.List final final final < = call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() decl_stmt java.util.LinkedList < < = new <> decl_stmt int = <= : for final final : decl_stmt SegFacet final final = new decl_stmt org.apache.solr.core.Callable < = call SegFacet.countTerms() call SegFacet.countTerms() call SegFacet.countTerms() call SegFacet.countTerms() call SegFacet.countTerms() return if -- >= call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() else call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() decl_stmt org.apache.lucene.util.PriorityQueue < = new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() protected protected return < decl_stmt boolean = decl_stmt int = for = = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < ++ decl_stmt SegFacet = try decl_stmt java.util.concurrent.Future < = call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() call decl CompletionService.take() = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() if ! call decl LinkedList.isEmpty() call decl LinkedList.isEmpty() call decl LinkedList.isEmpty() call decl LinkedList.isEmpty() call decl LinkedList.isEmpty() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl CompletionService.submit() call decl LinkedList.removeFirst() call decl LinkedList.removeFirst() call decl LinkedList.removeFirst() call decl LinkedList.removeFirst() call decl LinkedList.removeFirst() catch throw new catch decl_stmt java.lang.Throwable = if instanceof throw else throw new + if < if == - = += = else = if < && < || = call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.si() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() = call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() decl_stmt FacetCollector if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = new else = new decl_stmt org.apache.lucene.util.BytesRefBuilder = new while call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() > decl_stmt SegFacet = call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() decl_stmt boolean = == || call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() call SegFacet.tempBR() if call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) decl_stmt int = do if += - do ++ < && call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() != || && > && - == if >= call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() = call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() call decl PriorityQueue.top() else = call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() call SegFacet.tenum() = call decl PriorityQueue.updateTop() call decl PriorityQueue.updateTop() call decl PriorityQueue.updateTop() call decl PriorityQueue.updateTop() call decl PriorityQueue.updateTop() != && call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() == if decl_stmt boolean = call FacetCollector.collect() call FacetCollector.collect() call FacetCollector.collect() call FacetCollector.collect() call FacetCollector.collect() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() if break decl_stmt org.apache.solr.common.util.NamedList < = call FacetCollector.getFacetCounts() call FacetCollector.getFacetCounts() call FacetCollector.getFacetCounts() call FacetCollector.getFacetCounts() call FacetCollector.getFacetCounts() decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() decl_stmt int = call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() for = < ++ call decl NamedList.setName() call decl NamedList.setName() call decl NamedList.setName() call decl NamedList.setName() call decl NamedList.setName() call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call org.apache.solr.schema.FieldType.indexedToReadable(String) call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() if if ! = call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return protected protected return < BytesRefBuilder int int DocIdSetIterator int int decl int DocIdSet int throws = if != decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() if < = - - call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) call org.apache.lucene.util.BytesRefBuilder.append(byte) = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() assert < = - - else = - = decl_stmt int final final = - if == return decl_stmt int final final final = = new decl_stmt org.apache.lucene.search.DocIdSet = call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() call Filter.getDocIdSet() decl_stmt org.apache.lucene.search.DocIdSetIterator = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if == decl_stmt int while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() < decl_stmt int = + = || > ++ else decl_stmt int while = call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() call org.apache.lucene.search.DocIdSetIterator.nextDoc() < decl_stmt int = decl_stmt int = - if >= && < ++ =