org.apache.solr.response java.io.File import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.StringWriter import java.io.Writer import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.HashMap import java.util.Locale import java.util.Map import java.util.Properties import java.util.ResourceBundle import org.apache.commons.lang.StringUtils import org.apache.solr.client.solrj.SolrResponse import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.client.solrj.response.SolrResponseBase import org.apache.solr.common.params.CommonParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.util.plugin.SolrCoreAware import org.apache.velocity.Template import org.apache.velocity.VelocityContext import org.apache.velocity.app.VelocityEngine import org.apache.velocity.runtime.RuntimeConstants import org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader import org.apache.velocity.tools.ConversionUtils import org.apache.velocity.tools.generic.ComparisonDateTool import org.apache.velocity.tools.generic.DisplayTool import org.apache.velocity.tools.generic.EscapeTool import org.apache.velocity.tools.generic.ListTool import org.apache.velocity.tools.generic.LocaleConfig import org.apache.velocity.tools.generic.MathTool import org.apache.velocity.tools.generic.NumberTool import org.apache.velocity.tools.generic.ResourceTool import org.apache.velocity.tools.generic.SortTool import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.response.VelocityResponseWriter super super implements String String String String String String String String SolrVelocityLogger boolean String decl Map File String String String String Properties String boolean Logger decl Map NamedList String Boolean Boolean public public = decl_stmt java.lang.String = if != && ! call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + = else if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + = decl_stmt java.lang.Boolean = = == : decl_stmt java.lang.Boolean = = == : = decl_stmt org.apache.solr.common.util.NamedList = if != for : decl_stmt Entry = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() InputStream public public if != decl_stmt java.io.InputStream = try call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + String public public decl_stmt java.lang.String = return != : == : VelocityEngine VelocityContext String StringWriter String boolean boolean Template public public throws decl_stmt VelocityEngine = decl_stmt Template = decl_stmt VelocityContext = call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() decl_stmt java.lang.String = decl_stmt boolean = && != decl_stmt java.lang.String = decl_stmt boolean = || != if ! call Template.merge() call Template.merge() call Template.merge() call Template.merge() call Template.merge() else decl_stmt StringWriter = new call Template.merge() call Template.merge() call Template.merge() call Template.merge() call Template.merge() if call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() = new try call VelocityEngine.getTemplate() call VelocityEngine.getTemplate() call VelocityEngine.getTemplate() call VelocityEngine.getTemplate() call VelocityEngine.getTemplate() + catch throw new if != + call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() else call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() MathTool DisplayTool ResourceTool Map String decl NamedList VelocityContext NumberTool SolrResponse Object private private decl_stmt VelocityContext = new decl_stmt java.lang.String = decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() new call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() new call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() new call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() new decl_stmt MathTool = new call MathTool.configure() call MathTool.configure() call MathTool.configure() call MathTool.configure() call MathTool.configure() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() decl_stmt NumberTool = new call NumberTool.configure() call NumberTool.configure() call NumberTool.configure() call NumberTool.configure() call NumberTool.configure() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() decl_stmt DisplayTool = new call DisplayTool.configure() call DisplayTool.configure() call DisplayTool.configure() call DisplayTool.configure() call DisplayTool.configure() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() decl_stmt ResourceTool = new call ResourceTool.configure() call ResourceTool.configure() call ResourceTool.configure() call ResourceTool.configure() call ResourceTool.configure() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() + if instanceof call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() decl_stmt org.apache.solr.client.solrj.SolrResponse = new decl_stmt org.apache.solr.common.util.NamedList < = try call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() new call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() catch = new call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call SolrResponse.setResponse() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() call VelocityContext.put() return VelocityEngine decl ArrayList private private decl_stmt VelocityEngine = new call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() decl_stmt java.util.ArrayList < = new < if call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() new if != call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() if call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() new call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() new call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() return String String Template String private private throws decl_stmt Template decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if == && != = if == && != = if == = try = + catch throw new return String String private private decl_stmt java.lang.String = = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) decl_stmt java.lang.String = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) return + + protected protected return + == : String private private if == return if instanceof return decl_stmt java.lang.String = return