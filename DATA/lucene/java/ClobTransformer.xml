org.apache.solr.handler.dataimport static static org.apache.solr.handler.data.HTMLStripTransformer.TRUE import java.io.IOException import java.io.Reader import java.sql.Clob import java.util.ArrayList import java.util.List import java.util.Map import class org.apache.solr.handler.dataimport.ClobTransformer super super extends String decl List Clob String String decl List Object public public < for < : if ! continue decl_stmt java.lang.String = decl_stmt java.lang.String = if == = decl_stmt java.lang.Object = if instanceof decl_stmt java.util.List < = < decl_stmt java.util.List < = new <> for : if instanceof decl_stmt java.sql.Clob = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if instanceof decl_stmt java.sql.Clob = return StringBuilder decl char int Reader private private decl_stmt java.io.Reader = decl_stmt java.lang.StringBuilder = new decl_stmt char = new decl_stmt int try while = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) catch return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()