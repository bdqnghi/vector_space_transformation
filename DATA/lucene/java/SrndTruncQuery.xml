org.apache.lucene.queryparser.surround.query org.apache.lucene.index.Term import org.apache.lucene.index.TermsEnum import org.apache.lucene.index.Terms import org.apache.lucene.util.BytesRef import org.apache.lucene.util.StringHelper import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiFields import java.io.IOException import java.util.regex.Pattern import java.util.regex.Matcher import class org.apache.lucene.queryparser.surround.query.SrndTruncQuery super super extends char BytesRef String Pattern char String public public return public public return protected protected return != && != protected protected if == else if == else int StringBuilder protected protected decl_stmt int = while < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) ++ = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = new decl_stmt java.lang.StringBuilder = new while < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) ++ = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl TermsEnum Terms TermsEnum decl SeekStatus BytesRef Matcher int public public throws decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt org.apache.lucene.index.Terms = if != decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) try decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt SeekStatus = call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) decl_stmt org.apache.lucene.util.BytesRef if == = else if == = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() else = while != if != && decl_stmt java.lang.String = call decl SeekStatus.utf8ToString() call decl SeekStatus.utf8ToString() call decl SeekStatus.utf8ToString() call decl SeekStatus.utf8ToString() call decl SeekStatus.utf8ToString() call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call BytesRef.substring() call BytesRef.substring() call BytesRef.substring() call BytesRef.substring() call BytesRef.substring() if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() new else break = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() finally call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence) call java.util.regex.Matcher.reset(CharSequence)