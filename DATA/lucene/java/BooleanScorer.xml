org.apache.lucene.search java.io.IOException import java.util.Arrays import java.util.Collection import org.apache.lucene.util.Bits import org.apache.lucene.util.PriorityQueue import class org.apache.lucene.search.BooleanScorer super super extends HeadPriorityQueue int int decl Bucket int int decl BulkScorerAndDoc TailPriorityQueue long int decl float FakeScorer OrCollector decl long int throws throws = decl PriorityQueue long private static private static < decl_stmt org.apache.lucene.util.PriorityQueue final final final < = new < - + protected protected return > for : call decl PriorityQueue.insertWithOverflow() call decl PriorityQueue.insertWithOverflow() call decl PriorityQueue.insertWithOverflow() call decl PriorityQueue.insertWithOverflow() call decl PriorityQueue.insertWithOverflow() decl_stmt long = for = call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() != = call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() call decl PriorityQueue.pop() += return protected protected return > protected protected return < protected protected return < public public if < || >= throw new return + public public = int Bucket int public public throws decl_stmt int final final = & decl_stmt int final final = >>> |= << decl_stmt org.apache.solr.client.solrj.io.stream.metrics.Bucket final final = ++ += public public return FakeScorer Bucket int private private throws decl_stmt org.apache.lucene.search.FakeScorer final final = decl_stmt org.apache.solr.client.solrj.io.stream.metrics.Bucket final final = if >= = = float * decl_stmt int final final = | = = = int long int long private private throws decl_stmt long = for = < ++ decl_stmt long = while != decl_stmt int = decl_stmt int = << | ^= << BulkScorerAndDoc private private throws for = < ++ decl_stmt BulkScorerAndDoc final final = assert < call BulkScorerAndDoc.score() call BulkScorerAndDoc.score() call BulkScorerAndDoc.score() call BulkScorerAndDoc.score() call BulkScorerAndDoc.score() BulkScorerAndDoc BulkScorerAndDoc HeadPriorityQueue TailPriorityQueue BulkScorerAndDoc private private throws assert call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() == - decl_stmt HeadPriorityQueue final final = decl_stmt TailPriorityQueue final final = decl_stmt BulkScorerAndDoc = call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() decl_stmt BulkScorerAndDoc = call TailPriorityQueue.top() call TailPriorityQueue.top() call TailPriorityQueue.top() call TailPriorityQueue.top() call TailPriorityQueue.top() while < if == || <= call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() = call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() else decl_stmt BulkScorerAndDoc final final = call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() = call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() call HeadPriorityQueue.updateTop() = call TailPriorityQueue.updateTop() call TailPriorityQueue.updateTop() call TailPriorityQueue.updateTop() call TailPriorityQueue.updateTop() call TailPriorityQueue.updateTop() return BulkScorerAndDoc BulkScorerAndDoc private private throws while < && + call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() >= decl_stmt BulkScorerAndDoc final final = call TailPriorityQueue.pop() call TailPriorityQueue.pop() call TailPriorityQueue.pop() call TailPriorityQueue.pop() call TailPriorityQueue.pop() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() call BulkScorerAndDoc.advance() if < ++ = else call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() if >= for = < call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() ++ ++ = call TailPriorityQueue.get() call TailPriorityQueue.get() call TailPriorityQueue.get() call TailPriorityQueue.get() call TailPriorityQueue.get() call TailPriorityQueue.clear() call TailPriorityQueue.clear() call TailPriorityQueue.clear() call TailPriorityQueue.clear() call TailPriorityQueue.clear() for = < ++ decl_stmt BulkScorerAndDoc final final = call HeadPriorityQueue.insertWithOverflow() call HeadPriorityQueue.insertWithOverflow() call HeadPriorityQueue.insertWithOverflow() call HeadPriorityQueue.insertWithOverflow() call HeadPriorityQueue.insertWithOverflow() if != call TailPriorityQueue.add() call TailPriorityQueue.add() call TailPriorityQueue.add() call TailPriorityQueue.add() call TailPriorityQueue.add() int int private private throws assert call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() call TailPriorityQueue.size() == decl_stmt int final final = call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() & ~ decl_stmt int final final = int int int BulkScorerAndDoc int private private throws decl_stmt int final final = & ~ decl_stmt int final final = decl_stmt int final final = + = call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() decl_stmt int = while call HeadPriorityQueue.size() call HeadPriorityQueue.size() call HeadPriorityQueue.size() call HeadPriorityQueue.size() call HeadPriorityQueue.size() > && call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() < ++ = call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() call HeadPriorityQueue.pop() if == && == decl_stmt BulkScorerAndDoc final final = return call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() call HeadPriorityQueue.add() else return call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() call HeadPriorityQueue.top() LeafCollector BulkScorerAndDoc public public throws = - decl_stmt org.apache.lucene.search.LeafCollector final final if == = else = new public public throws new decl_stmt BulkScorerAndDoc = while < = return public public throws new