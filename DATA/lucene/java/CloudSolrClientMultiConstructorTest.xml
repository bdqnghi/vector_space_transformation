org.apache.solr.client.solrj.impl org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.junit.Test import java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.LinkedHashSet import class org.apache.solr.client.solrj.impl.CloudSolrClientMultiConstructorTest super super extends decl Collection String boolean boolean String int String StringBuilder public public throws decl_stmt boolean = decl_stmt int = decl_stmt boolean = decl_stmt java.lang.String final final = decl_stmt java.lang.StringBuilder = new if = new <> else = new <> for = < ++ decl_stmt java.lang.String = + + call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if < - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = try = new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() = public = public = new <> call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() new