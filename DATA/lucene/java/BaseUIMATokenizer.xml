org.apache.lucene.analysis.uima org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.uima.ae.AEProviderFactory import org.apache.lucene.util.AttributeFactory import org.apache.uima.analysis_engine.AnalysisEngine import org.apache.uima.analysis_engine.AnalysisEngineProcessException import org.apache.uima.cas.CAS import org.apache.uima.cas.FSIterator import org.apache.uima.cas.text.AnnotationFS import org.apache.uima.resource.ResourceInitializationException import java.io.IOException import java.io.Reader import java.util.Map import class org.apache.lucene.analysis.uima.BaseUIMATokenizer super super extends String decl Map CAS AnalysisEngine decl FSIterator protected protected throws if == = if == = call AnalysisEngine.newCAS() call AnalysisEngine.newCAS() call AnalysisEngine.newCAS() call AnalysisEngine.newCAS() call AnalysisEngine.newCAS() else call CAS.reset() call CAS.reset() call CAS.reset() call CAS.reset() call CAS.reset() call CAS.setDocumentText() call CAS.setDocumentText() call CAS.setDocumentText() call CAS.setDocumentText() call CAS.setDocumentText() call AnalysisEngine.process() call AnalysisEngine.process() call AnalysisEngine.process() call AnalysisEngine.process() call AnalysisEngine.process() StringBuilder int private private throws decl_stmt java.lang.StringBuilder = new decl_stmt int while = > - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws =