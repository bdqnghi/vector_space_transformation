org.apache.lucene.queries java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashSet import java.util.List import java.util.Set import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.document.Document import org.apache.lucene.document.Field.Store import org.apache.lucene.document.StringField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.Fields import org.apache.lucene.index.FilterDirectoryReader import org.apache.lucene.index.FilterLeafReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.QueryUtils import org.apache.lucene.search.Sort import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.search.UsageTrackingQueryCachingPolicy import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.RamUsageTester import org.apache.lucene.util.TestUtil import com.carrotsearch.randomizedtesting.generators.RandomPicks import com.carrotsearch.randomizedtesting.generators.RandomStrings import class org.apache.lucene.queries.TermsQueryTest super super extends int IndexSearcher Term Query decl Builder int Document decl List decl List String String RandomIndexWriter IndexReader int int float Directory decl BooleanQuery public public throws decl_stmt int final final = for = < ++ decl_stmt java.util.List final final final < = new <> decl_stmt int final final = << for = < ++ decl_stmt java.lang.String final final = : decl_stmt java.lang.String final final = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int final final = for = < ++ decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.lucene.index.Term final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if > && call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher final final = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() if call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() == continue for = < ++ decl_stmt float final final = * decl_stmt int final final = << decl_stmt java.util.List < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.fst.Builder final final final final final = new for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new decl_stmt org.apache.lucene.search.Query final final = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.search.Query final final = new new new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TopDocs TopDocs int private private throws decl_stmt int final final = decl_stmt org.apache.lucene.search.TopDocs final final = : decl_stmt org.apache.lucene.search.TopDocs final final = : for = < ++ if private private return TermsQuery String decl List private private < if ! return new new <> decl_stmt org.apache.lucene.search.join.TermsQuery final final decl_stmt java.util.List < = new <> decl_stmt java.lang.String = for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != = = new return TermsQuery TermsQuery decl List String TermsQuery String int decl Set TermsQuery boolean decl List TermsQuery public public decl_stmt int = decl_stmt boolean final final = decl_stmt java.util.List < = new <> decl_stmt java.util.Set < = new <> for = < ++ decl_stmt java.lang.String = + : decl_stmt java.lang.String = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new decl_stmt org.apache.lucene.search.join.TermsQuery = : decl_stmt org.apache.lucene.search.join.TermsQuery = : call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > decl_stmt java.util.List < = new <> call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() decl_stmt org.apache.lucene.search.join.TermsQuery = : call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) decl_stmt org.apache.lucene.search.join.TermsQuery = new new decl_stmt org.apache.lucene.search.join.TermsQuery = new new call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() == call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() = new new = new new call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() == call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() call org.apache.lucene.search.join.TermsQuery.hashCode() TermsQuery TermsQuery public public decl_stmt org.apache.lucene.search.join.TermsQuery = new new decl_stmt org.apache.lucene.search.join.TermsQuery = new new call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) call org.apache.lucene.search.join.TermsQuery.equals(Object) TermsQuery public public decl_stmt org.apache.lucene.search.join.TermsQuery = new new new new call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) Query Query public public decl_stmt org.apache.lucene.search.Query = new new decl_stmt org.apache.lucene.search.Query = new new new Query Query public public decl_stmt org.apache.lucene.search.Query = new new new decl_stmt org.apache.lucene.search.Query = new new new = new new new = new new new int long decl List long TermsQuery public public decl_stmt java.util.List < = new <> decl_stmt int final final = + for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.apache.lucene.search.join.TermsQuery = new decl_stmt long final final = decl_stmt long final final = call org.apache.lucene.search.join.TermsQuery.ramBytesUsed() call org.apache.lucene.search.join.TermsQuery.ramBytesUsed() call org.apache.lucene.search.join.TermsQuery.ramBytesUsed() call org.apache.lucene.search.join.TermsQuery.ramBytesUsed() call org.apache.lucene.search.join.TermsQuery.ramBytesUsed() / public public return new Terms public public throws return new call Terms.fields() call Terms.fields() call Terms.fields() call Terms.fields() call Terms.fields() public public throws decl_stmt org.apache.lucene.index.Terms final final = if == return return new public public throws return Terms public public throws decl_stmt org.apache.lucene.index.Terms final final = if == return return new public public throws return public public throws return protected protected throws return new BytesRef decl List decl Set Document AtomicInteger String RandomIndexWriter DirectoryReader DirectoryReader int Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt org.apache.lucene.index.DirectoryReader = new decl_stmt java.util.List final final final < = new <> decl_stmt java.util.Set final final final < = new <> decl_stmt int final final = + for = < ++ decl_stmt java.lang.String final final = new decl_stmt org.apache.lucene.util.BytesRef final final = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TermsQuery public public decl_stmt org.apache.lucene.search.join.TermsQuery = new new new new byte byte call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) call org.apache.lucene.search.join.TermsQuery.toString(String) IndexWriterConfig Document IndexWriter DirectoryReader UsageTrackingQueryCachingPolicy TermsQuery Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new for = < ++ call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.search.join.TermsQuery = new new new decl_stmt org.apache.lucene.search.UsageTrackingQueryCachingPolicy = new call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.onUse(Query) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call org.apache.lucene.search.UsageTrackingQueryCachingPolicy.shouldCache(Query,LeafReaderContext) call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()