org.apache.solr.morphlines.solr org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient import org.apache.solr.client.solrj.response.SolrPingResponse import org.apache.solr.client.solrj.response.UpdateResponse import org.apache.solr.common.SolrInputDocument import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.List import class org.apache.solr.morphlines.solr.SolrClientDocumentLoader super super implements int SolrClient Logger long decl List public public call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() = if instanceof public public throws call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() >= public public throws call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > if > if instanceof UpdateResponse private private throws += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() try decl_stmt UpdateResponse = call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) call org.apache.solr.client.solrj.SolrClient.add(Collection,int) finally call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() public public throws call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() if ! instanceof return call org.apache.solr.client.solrj.SolrClient.rollback(String) call org.apache.solr.client.solrj.SolrClient.rollback(String) call org.apache.solr.client.solrj.SolrClient.rollback(String) call org.apache.solr.client.solrj.SolrClient.rollback(String) call org.apache.solr.client.solrj.SolrClient.rollback(String) else return new public public throws call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() public public throws call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() return call org.apache.solr.client.solrj.SolrClient.ping() call org.apache.solr.client.solrj.SolrClient.ping() call org.apache.solr.client.solrj.SolrClient.ping() call org.apache.solr.client.solrj.SolrClient.ping() call org.apache.solr.client.solrj.SolrClient.ping() public public return