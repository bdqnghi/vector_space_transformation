org.apache.lucene.queryparser.flexible.standard.processors java.text.DateFormat import java.util.Calendar import java.util.Date import java.util.List import java.util.Locale import java.util.TimeZone import org.apache.lucene.document.DateTools import org.apache.lucene.document.DateTools.Resolution import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.config.FieldConfig import org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler import org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl import org.apache.lucene.queryparser.flexible.standard.config.StandardQueryConfigHandler.ConfigurationKeys import org.apache.lucene.queryparser.flexible.standard.nodes.TermRangeQueryNode import class org.apache.lucene.queryparser.flexible.standard.processors.TermRangeQueryNodeProcessor super super extends String FieldQueryNode FieldQueryNode String decl Resolution TermRangeQueryNode CharSequence Date boolean String FieldConfig TimeZone decl DateTools Locale Date DateFormat protected protected throws if instanceof decl_stmt TermRangeQueryNode = decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode = call TermRangeQueryNode.getUpperBound() call TermRangeQueryNode.getUpperBound() call TermRangeQueryNode.getUpperBound() call TermRangeQueryNode.getUpperBound() call TermRangeQueryNode.getUpperBound() decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode = call TermRangeQueryNode.getLowerBound() call TermRangeQueryNode.getLowerBound() call TermRangeQueryNode.getLowerBound() call TermRangeQueryNode.getLowerBound() call TermRangeQueryNode.getLowerBound() decl_stmt Resolution = decl_stmt boolean = decl_stmt java.util.Locale = if == = decl_stmt java.util.TimeZone = if == = decl_stmt java.lang.CharSequence = call TermRangeQueryNode.getField() call TermRangeQueryNode.getField() call TermRangeQueryNode.getField() call TermRangeQueryNode.getField() call TermRangeQueryNode.getField() decl_stmt java.lang.String = if != = call TimeZone.toString() call TimeZone.toString() call TimeZone.toString() call TimeZone.toString() call TimeZone.toString() decl_stmt org.apache.lucene.queryparser.flexible.core.config.FieldConfig = if != = call String.get() call String.get() call String.get() call String.get() call String.get() if call TermRangeQueryNode.isUpperInclusive() call TermRangeQueryNode.isUpperInclusive() call TermRangeQueryNode.isUpperInclusive() call TermRangeQueryNode.isUpperInclusive() call TermRangeQueryNode.isUpperInclusive() = decl_stmt java.lang.String = call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() decl_stmt java.lang.String = call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.getTextAsString() try decl_stmt java.text.DateFormat = call String.setLenient() call String.setLenient() call String.setLenient() call String.setLenient() call String.setLenient() if call FieldConfig.length() call FieldConfig.length() call FieldConfig.length() call FieldConfig.length() call FieldConfig.length() > decl_stmt java.util.Date = call String.parse() call String.parse() call String.parse() call String.parse() call String.parse() = call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt java.util.Date = call String.parse() call String.parse() call String.parse() call String.parse() call String.parse() if decl_stmt java.util.Calendar = call java.util.Date.setTime(long) call java.util.Date.setTime(long) call java.util.Date.setTime(long) call java.util.Date.setTime(long) call java.util.Date.setTime(long) call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() call Date.set() = call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() = call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) call org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode.setText(CharSequence) catch return protected protected throws return protected < protected < < throws return