org.apache.lucene.spatial.util org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import java.io.IOException import java.util.HashMap import java.util.Map import class org.apache.lucene.spatial.util.CachingDoubleValueSource super super extends ValueSource decl Map public public return + call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() call ValueSource.description() + FunctionValues int Integer Double public public throws decl_stmt int final final = decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() return new public public decl_stmt java.lang.Integer = + decl_stmt java.lang.Double = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() public public return float public public return + Integer Double public public decl_stmt java.lang.Integer = + decl_stmt java.lang.Double = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() call java.lang.Double.doubleValue() public public return float public public return + CachingDoubleValueSource public public if == return if == || != return decl_stmt org.apache.lucene.spatial.util.CachingDoubleValueSource = if != ! call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() : != return return public public return != call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() :