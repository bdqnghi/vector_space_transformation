org.apache.lucene.queryparser.flexible.spans java.util.List import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder import org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.standard.builders.StandardQueryBuilder import org.apache.lucene.search.spans.SpanOrQuery import org.apache.lucene.search.spans.SpanQuery import class org.apache.lucene.queryparser.flexible.spans.SpanOrQueryNodeBuilder super super implements int BooleanQueryNode decl SpanQuery decl List public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.BooleanQueryNode = decl_stmt java.util.List < = call BooleanQueryNode.getChildren() call BooleanQueryNode.getChildren() call BooleanQueryNode.getChildren() call BooleanQueryNode.getChildren() call BooleanQueryNode.getChildren() decl_stmt org.apache.lucene.search.spans.SpanQuery = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = for : ++ = return new