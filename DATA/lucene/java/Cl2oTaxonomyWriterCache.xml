org.apache.lucene.facet.taxonomy.writercache java.util.concurrent.locks.ReadWriteLock import java.util.concurrent.locks.ReentrantReadWriteLock import org.apache.lucene.facet.taxonomy.FacetLabel import org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache import class org.apache.lucene.facet.taxonomy.writercache.Cl2oTaxonomyWriterCache super super implements ReadWriteLock float CompactLabelToOrdinal int public public call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() try = new finally call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() public synchronized public synchronized = public public return public public call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() try return finally call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() call java.util.concurrent.locks.ReadWriteLock.readLock() public public call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() try return finally call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() call ReadWriteLock.writeLock() public public return == :