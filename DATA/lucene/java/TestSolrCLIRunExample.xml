org.apache.solr.util java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.Closeable import java.io.File import java.io.IOException import java.io.InputStream import java.io.PrintStream import java.lang.invoke.MethodHandles import java.net.ServerSocket import java.nio.charset.Charset import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.util.ArrayList import java.util.List import java.util.Map import org.apache.commons.exec.DefaultExecutor import org.apache.commons.exec.ExecuteResultHandler import org.apache.lucene.util.LuceneTestCase import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.cloud.MiniSolrCloudCluster import org.apache.solr.common.SolrInputDocument import org.junit.After import org.junit.BeforeClass import org.junit.Ignore import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import class annotation annotation org.apache.solr.util.TestSolrCLIRunExample super super extends Logger decl List public static public static throws int public public < throws decl_stmt int = if != throw new + String String int decl String String JettyConfig String int public public throws decl_stmt java.lang.String = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt java.lang.String = if if ! && ! return decl_stmt java.lang.String = decl_stmt int = decl_stmt java.lang.String = new decl_stmt org.apache.solr.client.solrj.embedded.JettyConfig = try if == = new else throw new catch if instanceof throw else throw new else if decl_stmt int = if != decl_stmt int = if == try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + catch if instanceof throw else throw new else throw new + else if != try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch if instanceof throw else throw new else throw new else decl_stmt java.lang.String = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + try return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + throw return StringBuilder protected protected if == || == return decl_stmt java.lang.StringBuilder = new for = < ++ if > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() File Thread int protected protected if != throw new + + if != throw new + decl_stmt int = decl_stmt File = new = new call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl_stmt java.lang.Thread = new public public try catch if instanceof throw else throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() return public public try catch if instanceof throw else throw new protected protected for = < ++ if if + >= throw new + + return + throw new + + + - protected protected for : if return return public public throws if != try catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + if != try catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + = public public throws if != for : try catch call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() = public public throws public public throws File SolrQuery QueryResponse File decl String File decl SolrCLI File PrintStream decl RunExampleTool HttpSolrClient String RunExampleExecutor int ByteArrayOutputStream Path protected protected throws decl_stmt File = new if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() + decl_stmt java.nio.file.Path = decl_stmt File = call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() decl_stmt File = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() decl_stmt int = - try = new = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + decl_stmt java.lang.String = new call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.io.PrintStream = new decl_stmt RunExampleExecutor = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt RunExampleTool = new try call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) throw decl_stmt java.lang.String = call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) decl_stmt File = new + call String.getAbsolutePath() call String.getAbsolutePath() call String.getAbsolutePath() call String.getAbsolutePath() call String.getAbsolutePath() + + + + call String.isDirectory() call String.isDirectory() call String.isDirectory() call String.isDirectory() call String.isDirectory() if decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = + + + decl_stmt org.apache.solr.client.solrj.SolrQuery = new decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call File.query() call File.query() call File.query() call File.query() call File.query() decl_stmt long = call SolrQuery.getResults() call SolrQuery.getResults() call SolrQuery.getResults() call SolrQuery.getResults() call SolrQuery.getResults() if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() try catch = call File.query() call File.query() call File.query() call File.query() call File.query() + + + + + == call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() + File ByteArrayOutputStream File String String PrintStream decl SolrCLI decl RunExampleTool String decl String String decl SolrCLI String int QueryResponse CloudSolrClient File SolrInputDocument int InputStream File Path RunExampleExecutor public public throws decl_stmt File = new if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() + decl_stmt java.nio.file.Path = decl_stmt File = call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() call java.nio.file.Path.toFile() decl_stmt File = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() decl_stmt java.lang.String = new call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl_stmt int = - try = new = decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + decl_stmt java.io.InputStream = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.io.PrintStream = new decl_stmt RunExampleExecutor = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt RunExampleTool = new try call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.runTool() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() call decl SolrCLI.getOptions() catch + + + call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) throw decl_stmt java.lang.String = call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) decl_stmt java.lang.String = + + decl_stmt java.lang.String = + if ! + + + + + decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = try = call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call RunExampleExecutor.solrCloudCluster() call String.connect() call String.connect() call String.connect() call String.connect() call String.connect() call String.setDefaultCollection() call String.setDefaultCollection() call String.setDefaultCollection() call String.setDefaultCollection() call String.setDefaultCollection() decl_stmt int = for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new call int.setField() call int.setField() call int.setField() call int.setField() call int.setField() + call int.setField() call int.setField() call int.setField() call int.setField() call int.setField() call String.add() call String.add() call String.add() call String.add() call String.add() call String.commit() call String.commit() call String.commit() call String.commit() call String.commit() decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call String.query() call String.query() call String.query() call String.query() call String.query() new if call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() != + + + + + call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() call SolrInputDocument.getResults() finally if != try call String.close() call String.close() call String.close() call String.close() call String.close() catch decl_stmt File = new if ! call QueryResponse.isDirectory() call QueryResponse.isDirectory() call QueryResponse.isDirectory() call QueryResponse.isDirectory() call QueryResponse.isDirectory() call QueryResponse.getAbsolutePath() call QueryResponse.getAbsolutePath() call QueryResponse.getAbsolutePath() call QueryResponse.getAbsolutePath() call QueryResponse.getAbsolutePath() + + decl_stmt DeleteTool = new decl_stmt java.lang.String = new call File.runTool() call File.runTool() call File.runTool() call File.runTool() call File.runTool() call File.getOptions() call File.getOptions() call File.getOptions() call File.getOptions() call File.getOptions() call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() call RunExampleExecutor.execute() +