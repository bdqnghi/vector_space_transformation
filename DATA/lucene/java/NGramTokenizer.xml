org.apache.lucene.analysis.ngram java.io.IOException import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute import org.apache.lucene.analysis.util.CharacterUtils import org.apache.lucene.util.AttributeFactory import class org.apache.lucene.analysis.ngram.NGramTokenizer super super extends PositionIncrementAttribute OffsetAttribute int boolean int decl CharacterUtils PositionLengthAttribute decl int int decl CharacterBuffer int int CharTermAttribute int int boolean CharacterUtils int private private = if < throw new if > throw new = = = = * + = new call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call PositionIncrementAttribute.resizeBuffer() call PositionIncrementAttribute.resizeBuffer() call PositionIncrementAttribute.resizeBuffer() call PositionIncrementAttribute.resizeBuffer() call PositionIncrementAttribute.resizeBuffer() * boolean boolean int public final public final throws while if >= - - && ! - -= -= -= = = ! call org.apache.lucene.analysis.util.CharacterUtils.fill(CharacterBuffer,Reader) call org.apache.lucene.analysis.util.CharacterUtils.fill(CharacterBuffer,Reader) call org.apache.lucene.analysis.util.CharacterUtils.fill(CharacterBuffer,Reader) call org.apache.lucene.analysis.util.CharacterUtils.fill(CharacterBuffer,Reader) call org.apache.lucene.analysis.util.CharacterUtils.fill(CharacterBuffer,Reader) - += call org.apache.lucene.analysis.util.CharacterUtils.toCodePoints(char,int,int,int,int) call org.apache.lucene.analysis.util.CharacterUtils.toCodePoints(char,int,int,int,int) call org.apache.lucene.analysis.util.CharacterUtils.toCodePoints(char,int,int,int,int) call org.apache.lucene.analysis.util.CharacterUtils.toCodePoints(char,int,int,int,int) call org.apache.lucene.analysis.util.CharacterUtils.toCodePoints(char,int,int,int,int) call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getBuffer() call decl CharacterUtils.getLength() call decl CharacterUtils.getLength() call decl CharacterUtils.getLength() call decl CharacterUtils.getLength() call decl CharacterUtils.getLength() if > || + > if + + > assert return = decl_stmt boolean final final = >= && < + decl_stmt boolean final final = && != - if || = continue decl_stmt int final final = call org.apache.lucene.analysis.util.CharacterUtils.toChars(int,int,int,char,int) call org.apache.lucene.analysis.util.CharacterUtils.toChars(int,int,int,char,int) call org.apache.lucene.analysis.util.CharacterUtils.toChars(int,int,int,char,int) call org.apache.lucene.analysis.util.CharacterUtils.toChars(int,int,int,char,int) call org.apache.lucene.analysis.util.CharacterUtils.toChars(int,int,int,char,int) call PositionIncrementAttribute.buffer() call PositionIncrementAttribute.buffer() call PositionIncrementAttribute.buffer() call PositionIncrementAttribute.buffer() call PositionIncrementAttribute.buffer() call PositionIncrementAttribute.setLength() call PositionIncrementAttribute.setLength() call PositionIncrementAttribute.setLength() call PositionIncrementAttribute.setLength() call PositionIncrementAttribute.setLength() call PositionLengthAttribute.setPositionIncrement() call PositionLengthAttribute.setPositionIncrement() call PositionLengthAttribute.setPositionIncrement() call PositionLengthAttribute.setPositionIncrement() call PositionLengthAttribute.setPositionIncrement() call OffsetAttribute.setPositionLength() call OffsetAttribute.setPositionLength() call OffsetAttribute.setPositionLength() call OffsetAttribute.setPositionLength() call OffsetAttribute.setPositionLength() + ++ return int private private decl_stmt int final final = + - if > for = > -- if ! = break = private private += ++ protected protected return int public final public final throws assert <= decl_stmt int = for = < ++ += = public final public final throws = = = = - = = = call decl CharacterUtils.reset() call decl CharacterUtils.reset() call decl CharacterUtils.reset() call decl CharacterUtils.reset() call decl CharacterUtils.reset()