org.apache.lucene.analysis.ngram java.io.IOException import java.io.StringReader import java.util.Arrays import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.BaseTokenStreamTestCase import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute import org.apache.lucene.util.TestUtil import com.carrotsearch.randomizedtesting.generators.RandomStrings import class org.apache.lucene.analysis.ngram.NGramTokenizerTest super super extends StringReader public public throws = new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new NGramTokenizer public public throws decl_stmt org.apache.lucene.analysis.ngram.NGramTokenizer = new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() call NGramTokenizer.setReader() new new new new Analyzer int int Tokenizer int public public throws decl_stmt int = : for = < ++ decl_stmt int final final = decl_stmt int final final = decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new * * call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() call org.apache.lucene.analysis.Analyzer.close() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new String private static private static final final throws decl_stmt java.lang.String final final = private static private static throws decl int static static decl_stmt int final final final = new for = = < ++ = += return int static static for = < decl_stmt int final final = if == return += return PositionLengthAttribute Tokenizer decl int PositionIncrementAttribute CharTermAttribute decl int OffsetAttribute static static final final throws decl_stmt int final final final = decl_stmt int final final final = new + for = < ++ + = + decl_stmt org.apache.lucene.analysis.Tokenizer final final = new protected protected return < call org.apache.lucene.analysis.Tokenizer.setReader(Reader) call org.apache.lucene.analysis.Tokenizer.setReader(Reader) call org.apache.lucene.analysis.Tokenizer.setReader(Reader) call org.apache.lucene.analysis.Tokenizer.setReader(Reader) call org.apache.lucene.analysis.Tokenizer.setReader(Reader) new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute final final = call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() decl_stmt org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute final final = call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute final final = call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call Tokenizer.addAttribute() call org.apache.lucene.analysis.Tokenizer.reset() call org.apache.lucene.analysis.Tokenizer.reset() call org.apache.lucene.analysis.Tokenizer.reset() call org.apache.lucene.analysis.Tokenizer.reset() call org.apache.lucene.analysis.Tokenizer.reset() for = < ++ for = + <= + && <= ++ if && > && - continue continue for = < ++ if ! continue continue call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.incrementToken() call Tokenizer.end() call Tokenizer.end() call Tokenizer.end() call Tokenizer.end() call Tokenizer.end() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() protected protected return < int int public public throws decl_stmt int final final = decl_stmt int final final = * * int int public public throws decl_stmt int final final = decl_stmt int final final = * * int int public public throws decl_stmt int final final = decl_stmt int final final = * int int public public throws decl_stmt int final final = decl_stmt int final final = * int int decl char public public throws decl_stmt char final final final = new for = < ++ if < = decl_stmt int final final = decl_stmt int final final = new int int String public public throws decl_stmt int final final = decl_stmt int final final = decl_stmt java.lang.String final final = *