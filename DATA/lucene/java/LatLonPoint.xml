org.apache.lucene.document java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.codecs.lucene60.Lucene60PointsFormat import org.apache.lucene.codecs.lucene60.Lucene60PointsReader import org.apache.lucene.geo.GeoUtils import org.apache.lucene.geo.Polygon import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PointValues import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.FieldDoc import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.MatchNoDocsQuery import org.apache.lucene.search.PointRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.SortField import org.apache.lucene.search.TopFieldDocs import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.NumericUtils import org.apache.lucene.util.bkd.BKDReader import static static org.apache.lucene.geo.GeoEncodingUtils.decodeLatitude import static static org.apache.lucene.geo.GeoEncodingUtils.decodeLongitude import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLatitude import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLatitudeCeil import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLongitude import static static org.apache.lucene.geo.GeoEncodingUtils.encodeLongitudeCeil import class org.apache.lucene.document.LatLonPoint super super extends long FieldType int int decl byte public public decl_stmt byte = new decl_stmt int = decl_stmt int = = new = long << | & StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) >> call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) & call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return decl byte private static private static decl_stmt byte = new * return decl byte private static private static decl_stmt byte = new * return static static if != && != call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() throw new + + + + + call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() call org.apache.solr.schema.FieldType.pointDimensionCount() + if != && != call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() throw new + + + + + call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() call org.apache.solr.schema.FieldType.pointNumBytes() + if != && != call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() throw new + + + + + call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() call org.apache.solr.schema.FieldType.docValuesType() + decl byte decl byte decl byte decl Builder decl BooleanQuery Query decl byte public static public static if == return new if == if == return new else if < = - decl_stmt byte = decl_stmt byte = if < decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() decl_stmt byte = call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new decl_stmt byte = call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new return new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() else return private static private static return new protected protected if == return else if == return else throw new protected protected if == return else if == return else throw new public static public static return new public static public static return new public static public static return new int decl NearestNeighbor decl ScoreDoc decl NearestHit decl List decl List PointValues BKDReader decl List public static public static throws if < throw new + if == throw new if == throw new decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt int = for : decl_stmt org.apache.lucene.index.PointValues = if != if instanceof == throw new + += call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) decl_stmt org.apache.lucene.util.bkd.BKDReader = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt NearestHit = decl_stmt org.apache.lucene.search.ScoreDoc = new for = < ++ decl_stmt NearestHit = = new new return new