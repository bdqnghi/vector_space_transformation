org.apache.lucene.analysis java.io.IOException import java.util.HashMap import java.util.Map import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.PositionLengthAttribute import class org.apache.lucene.analysis.ValidatingTokenFilter super super extends PositionLengthAttribute decl Map String PositionIncrementAttribute int decl Map boolean int CharTermAttribute OffsetAttribute int int int int int int public public throws if ! return decl_stmt int = decl_stmt int = decl_stmt int = if != += call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() call PositionIncrementAttribute.getPositionIncrement() if == - throw new if != = call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() if && call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() < throw new + + + + = call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() = == : call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() call PositionLengthAttribute.getPositionLength() if != && != && if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else decl_stmt int final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != throw new + + + + + + + + decl_stmt int final final = + if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else decl_stmt int final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != throw new + + + + + + + + return public public throws public public throws = - call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() =