org.apache.solr.handler java.io.File import java.io.FileNotFoundException import java.io.FileOutputStream import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.OutputStreamWriter import java.io.Writer import java.lang.invoke.MethodHandles import java.nio.ByteBuffer import java.nio.channels.FileChannel import java.nio.charset.StandardCharsets import java.nio.file.FileSystems import java.nio.file.Files import java.nio.file.NoSuchFileException import java.nio.file.Path import java.nio.file.StandardCopyOption import java.text.SimpleDateFormat import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.Date import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Properties import java.util.Set import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutionException import java.util.concurrent.ExecutorService import java.util.concurrent.Future import java.util.concurrent.TimeUnit import java.util.zip.Adler32 import java.util.zip.Checksum import java.util.zip.InflaterInputStream import org.apache.commons.io.IOUtils import org.apache.http.client.HttpClient import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.index.IndexCommit import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.SegmentInfos import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpClientUtil import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient.Builder import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.FastInputStream import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SuppressForbidden import org.apache.solr.core.DirectoryFactory import org.apache.solr.core.DirectoryFactory.DirContext import org.apache.solr.core.IndexDeletionPolicyWrapper import org.apache.solr.core.SolrCore import org.apache.solr.handler.ReplicationHandler.* import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.update.CdcrUpdateLog import org.apache.solr.update.CommitUpdateCommand import org.apache.solr.update.UpdateLog import org.apache.solr.update.VersionInfo import org.apache.solr.util.DefaultSolrThreadFactory import org.apache.solr.util.FileUtils import org.apache.solr.util.PropertiesInputStream import org.apache.solr.util.PropertiesOutputStream import org.apache.solr.util.RTimer import org.apache.solr.util.RefCounted import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.JAVABIN import static static org.apache.solr.common.params.CommonParams.NAME import static static org.apache.solr.handler.ReplicationHandler.ALIAS import static static org.apache.solr.handler.ReplicationHandler.CHECKSUM import static static org.apache.solr.handler.ReplicationHandler.CMD_DETAILS import static static org.apache.solr.handler.ReplicationHandler.CMD_GET_FILE import static static org.apache.solr.handler.ReplicationHandler.CMD_GET_FILE_LIST import static static org.apache.solr.handler.ReplicationHandler.CMD_INDEX_VERSION import static static org.apache.solr.handler.ReplicationHandler.COMMAND import static static org.apache.solr.handler.ReplicationHandler.COMPRESSION import static static org.apache.solr.handler.ReplicationHandler.CONF_FILES import static static org.apache.solr.handler.ReplicationHandler.CONF_FILE_SHORT import static static org.apache.solr.handler.ReplicationHandler.EXTERNAL import static static org.apache.solr.handler.ReplicationHandler.FILE import static static org.apache.solr.handler.ReplicationHandler.FILE_STREAM import static static org.apache.solr.handler.ReplicationHandler.GENERATION import static static org.apache.solr.handler.ReplicationHandler.INTERNAL import static static org.apache.solr.handler.ReplicationHandler.MASTER_URL import static static org.apache.solr.handler.ReplicationHandler.OFFSET import static static org.apache.solr.handler.ReplicationHandler.SIZE import static static org.apache.solr.handler.ReplicationHandler.TLOG_FILE import static static org.apache.solr.handler.ReplicationHandler.TLOG_FILES import class org.apache.solr.handler.IndexFetcher String Logger int String boolean int String String int ReplicationHandler decl List decl List decl List ExecutorService SolrCore decl List Date String String DirectoryFileFetcher LocalFsFileFetcher String boolean String decl List String String Integer decl List RTimer Exception boolean decl Map String int Integer String decl Map String HttpClient String ModifiableSolrParams private static private static decl_stmt org.apache.solr.common.params.ModifiableSolrParams final final = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) return T T protected < protected < decl_stmt T = if != decl_stmt T = = != : if != && != return QueryRequest ModifiableSolrParams throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new try = new return catch throw new decl List QueryRequest ModifiableSolrParams NamedList private private throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new try = new decl_stmt org.apache.solr.common.util.NamedList = decl_stmt java.util.List < < = < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != = else = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + = < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != = = < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != = catch throw new throws return SolrQueryRequest Directory decl RefCounted decl Collection long long decl RefCounted boolean String decl RefCounted String IndexWriter long boolean boolean File String String long NamedList boolean int Long Directory IndexCommit boolean throws decl_stmt boolean = decl_stmt boolean = decl_stmt org.apache.lucene.store.Directory = decl_stmt java.lang.String decl_stmt org.apache.lucene.store.Directory = decl_stmt java.lang.String decl_stmt boolean = decl_stmt File = if ! call org.apache.solr.core.SolrCore.getSolrCoreState() call org.apache.solr.core.SolrCore.getSolrCoreState() call org.apache.solr.core.SolrCore.getSolrCoreState() call org.apache.solr.core.SolrCore.getSolrCoreState() call org.apache.solr.core.SolrCore.getSolrCoreState() = try decl_stmt org.apache.solr.common.util.NamedList try = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + return decl_stmt long = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt long = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.lucene.index.IndexCommit = call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() call org.apache.solr.core.SolrCore.getDeletionPolicy() if == decl_stmt org.apache.solr.util.RefCounted < = try = call org.apache.solr.core.SolrCore.getNewestSearcher(boolean) call org.apache.solr.core.SolrCore.getNewestSearcher(boolean) call org.apache.solr.core.SolrCore.getNewestSearcher(boolean) call org.apache.solr.core.SolrCore.getNewestSearcher(boolean) call org.apache.solr.core.SolrCore.getNewestSearcher(boolean) if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() finally if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() if == if && call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() != decl_stmt org.apache.solr.util.RefCounted < = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() try call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() finally call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() decl_stmt org.apache.solr.request.SolrQueryRequest = new new call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() new = return if ! && == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = new = new < < decl_stmt boolean = >= || call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() >= || decl_stmt java.lang.String = new new decl_stmt java.lang.String = + = call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() + = call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() if != = new call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() + = call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() = call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() try if ! && = if ! if call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.closeSearcher() call org.apache.solr.core.SolrCore.closeSearcher() call org.apache.solr.core.SolrCore.closeSearcher() call org.apache.solr.core.SolrCore.closeSearcher() call org.apache.solr.core.SolrCore.closeSearcher() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() decl_stmt org.apache.solr.util.RefCounted < = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() try decl_stmt org.apache.lucene.index.IndexWriter = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() decl_stmt int = call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() while call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call org.apache.lucene.index.IndexWriter.deleteUnusedFiles() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) ++ if >= call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() = break if > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + * + finally call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() decl_stmt boolean = try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = decl_stmt long = if != += = decl_stmt long final final = decl_stmt java.lang.Long final final = != new / : call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.util.Collection < < = if ! call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() = if = = else = if != &= if if if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else if = = else = if != &= if finally if ! call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() if && || call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() if if if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() if call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() if ! && ! && ! = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() = return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return catch throw catch throw new catch throw new finally if ! private private final final throws try if ! try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() = = = = = = = = if != && ! call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() = = = finally if && != try catch + if != if != if != String SegmentInfos decl Set decl String private private throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.index.SegmentInfos = decl_stmt java.util.Set < = new <> call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) decl_stmt java.lang.String = for : if ! && ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && ! call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return return Exception private private throws if call java.util.concurrent.ExecutorService.isTerminated() call java.util.concurrent.ExecutorService.isTerminated() call java.util.concurrent.ExecutorService.isTerminated() call java.util.concurrent.ExecutorService.isTerminated() call java.util.concurrent.ExecutorService.isTerminated() return call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) decl_stmt Exception = if != throw long decl List StringBuilder long Properties int int IndexOutput Directory Writer = private = private < < throws decl_stmt java.util.List < = new <> if != && ! for < : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Properties = call org.apache.lucene.replicator.ReplicationHandler.loadReplicationProperties() call org.apache.lucene.replicator.ReplicationHandler.loadReplicationProperties() call org.apache.lucene.replicator.ReplicationHandler.loadReplicationProperties() call org.apache.lucene.replicator.ReplicationHandler.loadReplicationProperties() call org.apache.lucene.replicator.ReplicationHandler.loadReplicationProperties() decl_stmt long = decl_stmt long = decl_stmt org.apache.lucene.store.Directory = try = call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() decl_stmt int = = if call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) + decl_stmt java.lang.StringBuilder = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call int.toString() call int.toString() call int.toString() call int.toString() call int.toString() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if != && ! call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) + call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if ! decl_stmt int = if call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() call Properties.containsKey() = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) + call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call int.toString() call int.toString() call int.toString() call int.toString() call int.toString() decl_stmt org.apache.lucene.store.IndexOutput final final = call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() decl_stmt Writer = new new try call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() finally catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() finally if != call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() decl Map long decl_stmt long = for < : += for < : += decl_stmt java.util.Map < = if != if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() += call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return decl String StringBuilder String decl List private private decl_stmt java.lang.StringBuilder = new decl_stmt java.util.List < = new <> if != && != decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() || < ++ if == call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() || == break decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return IndexCommit decl RefCounted SolrQueryRequest decl Future private private throws decl_stmt org.apache.solr.request.SolrQueryRequest = new new decl_stmt org.apache.solr.util.RefCounted < = decl_stmt org.apache.lucene.index.IndexCommit try decl_stmt java.util.concurrent.Future = new = call org.apache.solr.core.SolrCore.getSearcher() call org.apache.solr.core.SolrCore.getSearcher() call org.apache.solr.core.SolrCore.getSearcher() call org.apache.solr.core.SolrCore.getSearcher() call org.apache.solr.core.SolrCore.getSearcher() if != try catch = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() finally call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() = CountDownLatch private private decl_stmt java.util.concurrent.CountDownLatch final final = new new public public try call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() try call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) catch throw new public public try call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() finally boolean String File private private < < throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + = new <> decl_stmt File = new call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() + new try decl_stmt boolean = call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() if ! throw new + call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() for < : decl_stmt java.lang.String = == : = new = call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> finally boolean String long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + = new <> decl_stmt long = decl_stmt boolean = if ! throw new + for < : decl_stmt java.lang.String = == : = new = call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() call LocalFsFileFetcher.fetchFile() += call LocalFsFileFetcher.getBytesDownloaded() call LocalFsFileFetcher.getBytesDownloaded() call LocalFsFileFetcher.getBytesDownloaded() call LocalFsFileFetcher.getBytesDownloaded() call LocalFsFileFetcher.getBytesDownloaded() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> return CompareResult long long String private private throws if call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + decl_stmt long = for < : decl_stmt java.lang.String = decl_stmt long = decl_stmt CompareResult = if ! || || = new = call DirectoryFileFetcher.fetchFile() call DirectoryFileFetcher.fetchFile() call DirectoryFileFetcher.fetchFile() call DirectoryFileFetcher.fetchFile() call DirectoryFileFetcher.fetchFile() += call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + return private private return ! && || || || < long long CompareResult protected static protected static decl_stmt CompareResult = new try try final final = decl_stmt long = decl_stmt long = if != try = = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if ! if == = return else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() = return if == && == = return else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + = return catch = return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + = return private static private static throws try return catch return Long Long String private private throws for < : decl_stmt java.lang.String = decl_stmt java.lang.Long = decl_stmt java.lang.Long = if if != if ! return else if != call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return return boolean private private call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt boolean = try if call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return catch return try call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() = catch return String String private private if call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() call Logger.isDebugEnabled() try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + catch throw new decl_stmt java.lang.String = for < : decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = continue if ! return if != if ! return return UpdateLog VersionInfo decl BufferedUpdates File decl CdcrUpdateLog private private decl_stmt org.apache.solr.update.UpdateLog = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() decl_stmt org.apache.solr.update.VersionInfo = call org.apache.solr.update.UpdateLog.getVersionInfo() call org.apache.solr.update.UpdateLog.getVersionInfo() call org.apache.solr.update.UpdateLog.getVersionInfo() call org.apache.solr.update.UpdateLog.getVersionInfo() call org.apache.solr.update.UpdateLog.getVersionInfo() call org.apache.solr.update.VersionInfo.blockUpdates() call org.apache.solr.update.VersionInfo.blockUpdates() call org.apache.solr.update.VersionInfo.blockUpdates() call org.apache.solr.update.VersionInfo.blockUpdates() call org.apache.solr.update.VersionInfo.blockUpdates() try decl_stmt org.apache.lucene.index.BufferedUpdates = if ! return if != decl_stmt File = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() decl_stmt File = new = new call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() call decl CdcrUpdateLog.tlog() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return finally call org.apache.solr.update.VersionInfo.unblockUpdates() call org.apache.solr.update.VersionInfo.unblockUpdates() call org.apache.solr.update.VersionInfo.unblockUpdates() call org.apache.solr.update.VersionInfo.unblockUpdates() call org.apache.solr.update.VersionInfo.unblockUpdates() return decl File private < private < < decl_stmt File = for : if else if = return boolean File File File private private decl_stmt boolean = decl_stmt File = new call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() call org.apache.solr.core.SolrCore.getResourceLoader() for : new <> decl_stmt File = new if ! call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() if ! throw new + call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt File = new call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() + + new call File.lastModified() call File.lastModified() call File.lastModified() call File.lastModified() call File.lastModified() if ! call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() if ! throw new + call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() = call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() if ! throw new + + + = if ! throw new + + + Path Path Path private private decl_stmt java.nio.file.Path = call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() call org.apache.solr.core.SolrCore.getUpdateHandler() decl_stmt java.nio.file.Path = call java.nio.file.Path.getParent() call java.nio.file.Path.getParent() call java.nio.file.Path.getParent() call java.nio.file.Path.getParent() call java.nio.file.Path.getParent() try catch + + + return decl_stmt java.nio.file.Path = call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() call java.nio.file.Path.toAbsolutePath() try catch + + + try catch throw new + + + return return private private return new InputStream Properties IndexInput Writer Directory IndexOutput protected static protected static call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt java.util.Properties = new decl_stmt org.apache.lucene.store.Directory = try = call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getDataDir() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() if decl_stmt org.apache.lucene.store.IndexInput final final = call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() decl_stmt java.io.InputStream final final = new try call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) new catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + finally try call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() catch decl_stmt org.apache.lucene.store.IndexOutput final final = call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt Writer = try = new new call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() catch throw new + finally return catch throw new finally if != try call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() catch decl List decl Map decl Map NamedList String private < < private < < < < if == || call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return decl_stmt java.util.Map < < = new <> decl_stmt org.apache.solr.common.util.NamedList = new for < : decl_stmt java.lang.String = == : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) decl_stmt java.util.List < < = call org.apache.lucene.replicator.ReplicationHandler.getConfFileInfoFromCache(NamedList,Map) call org.apache.lucene.replicator.ReplicationHandler.getConfFileInfoFromCache(NamedList,Map) call org.apache.lucene.replicator.ReplicationHandler.getConfFileInfoFromCache(NamedList,Map) call org.apache.lucene.replicator.ReplicationHandler.getConfFileInfoFromCache(NamedList,Map) call org.apache.lucene.replicator.ReplicationHandler.getConfFileInfoFromCache(NamedList,Map) for < : decl_stmt java.lang.String = decl_stmt java.util.Map < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == continue if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() return call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() static static try return catch throw catch return static static try return catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return = = private = private = new = new private private = = return long decl_stmt long = if != = long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() return decl List < < < < decl_stmt java.util.List < < = return == : new <> decl List < < < < decl_stmt java.util.List < < = return == : new <> decl List < < < < decl_stmt java.util.List < < = return == : new <> decl List < < < < decl_stmt java.util.List < < = return == : new <> decl List < < < < decl_stmt java.util.List < < = return == : new <> decl List < < < < decl_stmt java.util.List < < = return == : new <> decl Map DirectoryFileFetcher < < decl_stmt java.util.Map < = decl_stmt DirectoryFileFetcher = if == return = new <> if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() call DirectoryFileFetcher.getBytesDownloaded() return public public return FastInputStream int public public throws try while decl_stmt org.apache.solr.common.util.FastInputStream final final = decl_stmt int try = if == || == return finally finally call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) try catch = decl byte int long long decl byte private private throws decl_stmt byte = new decl_stmt byte = new try while if = = throw new decl_stmt long = - decl_stmt int = if <= call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return if < = new if != = if decl_stmt long = if != call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return += call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() if >= return = catch throw catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() ++ if > throw new + + + + + + + + + + + return private private return & << | & << | & << | & private private return & << | & << | & << | & << | & << | & << | & << | & private private try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() if != try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() if ! throw new + + + + + InputStream QueryRequest ModifiableSolrParams NamedList private private throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) if call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) if call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) if > call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.common.util.NamedList decl_stmt java.io.InputStream = try = new decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new = = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if = new return new catch throw new + + public public throws public public throws public public throws public public throws public public throws public public throws public public throws public public throws QueryRequest ModifiableSolrParams throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) try = new decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new return public public return