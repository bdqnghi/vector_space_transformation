org.apache.lucene.util java.util.Locale import java.util.concurrent.Executors import java.util.concurrent.ThreadFactory import java.util.concurrent.atomic.AtomicInteger import class org.apache.lucene.util.NamedThreadFactory super super implements AtomicInteger ThreadGroup String String AtomicInteger private static private static return == || == : Thread public public decl_stmt java.lang.Thread final final = new call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) call java.lang.Thread.setPriority(int) return