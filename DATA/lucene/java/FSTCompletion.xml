org.apache.lucene.search.suggest.fst java.io.IOException import java.util.* import org.apache.lucene.util.* import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.FST.Arc import class org.apache.lucene.search.suggest.fst.FSTCompletion decl FST int decl ArrayList boolean boolean public public return + + public public return decl FST decl List decl Arc private static < private static < < try decl_stmt java.util.List < < = new <> decl_stmt Arc < = call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() call decl FST.getFirstArc() new <> decl_stmt BytesReader = call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() while call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new <> if call decl Arc.isLast() call decl Arc.isLast() call decl Arc.isLast() call decl Arc.isLast() call decl Arc.isLast() break call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() catch throw new decl FST decl FST decl FST decl BytesReader private private try decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = new <> decl_stmt BytesReader = call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() for < ++ decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = call decl FST.copyFrom() call decl FST.copyFrom() call decl FST.copyFrom() call decl FST.copyFrom() call decl FST.copyFrom() if call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() if == return catch throw new return - BytesRef public < public < if == || == return try decl_stmt org.apache.lucene.util.BytesRef = new if ! && > return else return catch throw new decl List private < private < throws decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() return decl ArrayList decl FST decl FST int BytesRef private < private < throws decl_stmt java.util.ArrayList final final final < = new <> decl_stmt org.apache.lucene.util.BytesRef final final = for = < ++ decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = new <> if = - if && ! if if ! decl_stmt int = if != - while call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() >= call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.remove() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() - call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new break return private private < for = -- >= if return return int decl FST private private < throws decl_stmt int final final = + decl_stmt BytesReader final final final final final = call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() for = < ++ if call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() call decl FST.findTargetArc() & == return return decl BytesReader decl FST private private < < throws if == = assert == ++ = byte decl_stmt BytesReader = call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.getBytesReader() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() call decl FST.readFirstTargetArc() while if == new if >= return else decl_stmt int = if new <> return = if break call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() call decl FST.readNextArc() return public public return public public return new public < public < return