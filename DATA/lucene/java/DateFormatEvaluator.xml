org.apache.solr.handler.dataimport static static org.apache.solr.handler.data.DataImportHandlerException.SEVERE import static static org.apache.solr.handler.data.DataImportHandlerException.wrapAndThrow import java.text.ParseException import java.text.SimpleDateFormat import java.util.Date import java.util.HashMap import java.util.HashSet import java.util.IllformedLocaleException import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.TimeZone import org.apache.solr.common.util.SuppressForbidden import org.apache.solr.handler.data.config.EntityField import org.apache.solr.util.DateMathParser import class org.apache.solr.handler.dataimport.DateFormatEvaluator super super extends String decl Set decl Map SimpleDateFormat private private decl_stmt java.text.SimpleDateFormat final final = new call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() return String Object String Object Locale SimpleDateFormat decl List VariableWrapper Object String Object Date TimeZone public public decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > throw new decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if instanceof decl_stmt VariableWrapper = = call VariableWrapper.resolve() call VariableWrapper.resolve() call VariableWrapper.resolve() call VariableWrapper.resolve() call VariableWrapper.resolve() = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() decl_stmt java.util.Locale = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = if instanceof = else = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == try = new catch throw new + decl_stmt java.util.TimeZone = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = if instanceof = else = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() = else throw new + decl_stmt java.lang.String = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() decl_stmt java.text.SimpleDateFormat = decl_stmt java.util.Date = if instanceof = else = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) Date String Object protected protected decl_stmt java.util.Date = decl_stmt java.lang.Object = if instanceof = else decl_stmt java.lang.String = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() try = catch return Date DateMathParser protected protected decl_stmt java.util.Date = = try decl_stmt org.apache.solr.util.DateMathParser = = catch return protected protected throws return protected protected return protected protected return new public public return new public public return new