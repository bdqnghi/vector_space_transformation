org.apache.lucene.codecs.blocktree java.io.IOException import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.TermsEnum.SeekStatus import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.fst.FST import class org.apache.lucene.codecs.blocktree.SegmentTermsEnumFrame int decl long int decl FST int long ByteArrayDataInput boolean ByteArrayDataInput BlockTermState boolean ByteArrayDataInput int long decl byte decl byte long int decl byte int long int int int SegmentTermsEnum boolean decl byte boolean boolean boolean long ByteArrayDataInput int public public decl_stmt int final final = - - if > = new + call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & public public return : throws assert == || : + + + = = - int int throws call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.initIndexInput() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.initIndexInput() if != - return call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() decl_stmt int = call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() = >>> assert > = & != assert == || || : + + + + + + + = call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() = & != decl_stmt int = >>> if < = new call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() if < = new call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = = = = - = call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() if < = new call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) = call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() call SegmentTermsEnum.in() = = - = if call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() call org.apache.lucene.store.ByteArrayDataInput.rewind() = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() assert > = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & public public throws if return else return public public assert != - && < : + + + + + ++ = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() = int public public throws while if == assert == || && == : + + + if return else continue assert != - && < : + + + + + ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() if == = >>> = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() if & == = = ++ return else = = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - return else = >>> = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() + call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.store.ByteArrayDataInput.readBytes(byte,int,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() switch & case = = ++ return case = = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - return case case ++ call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() continue int long long public public if ! || <= return decl_stmt int final final = + & if < return assert != decl_stmt long = while decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = + >>> = & != = == -- if = break else = call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() & if < break if != = - = else int boolean public public throws decl_stmt int final final = decl_stmt boolean = == assert > while < = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() if call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() != = + call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() for = < ++ = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() call SegmentTermsEnum.fr() ++ = = private private for = < ++ if + != call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() return return long int int long public public assert ! if == return assert < : + + + decl_stmt long final final = - while assert < ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() if == call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) >>> if & != decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() if == = return else ++ else decl_stmt int = & call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) >>> if == decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() if == = return else ++ if == || == call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() public public throws return : int int boolean int int int public public throws assert != - = = if == if return assert while ++ = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() decl_stmt int final final = + = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) decl_stmt int final final = + < : decl_stmt int = + decl_stmt int = while decl_stmt int final final decl_stmt boolean final final if < = ++ & - ++ & = else assert == = - = if < if == break break else continue continue else if > return else if assert return if return int int boolean int int int int public public throws assert != - if == if = == return assert while < ++ decl_stmt int final final = call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() call ByteArrayDataInput.readVInt() if == = >>> else = >>> decl_stmt int final final = + = call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.getPosition() call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) call org.apache.lucene.store.ByteArrayDataInput.skipBytes(long) if == = & == if ++ = else = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - else switch & case = ++ = break case = = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() = - break case case call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() call org.apache.lucene.store.ByteArrayDataInput.readByte() = ++ continue decl_stmt int final final = + < : decl_stmt int = + decl_stmt int = while decl_stmt int final final decl_stmt boolean final final if < = ++ & - ++ & = else assert == = - = if < continue continue else if > if ! && ! = call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() while call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() = call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.pushFrame(FST,BytesRef,int) call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() call SegmentTermsEnum.currentFrame() return else if assert return if return int private private decl_stmt int final final = + call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term() call org.apache.lucene.codecs.blocktree.SegmentTermsEnum.term()