org.apache.lucene.analysis.miscellaneous java.io.IOException import java.util.Collection import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.util.CharArraySet import class org.apache.lucene.analysis.miscellaneous.CapitalizationFilter super super extends int int boolean int CharArraySet int CharTermAttribute decl Collection int boolean char int decl char int int int decl char public public throws if ! return decl_stmt char = call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() decl_stmt int = call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() decl_stmt char = if < = new if < decl_stmt int = decl_stmt int = for = < ++ decl_stmt char = if <= || == decl_stmt int = - if > ++ = + ++ if < - ++ if > call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.copyBuffer(char,int,int) return boolean private private if < return if && > for = < ++ + = + return if != && call org.apache.lucene.analysis.util.CharArraySet.contains(Object) call org.apache.lucene.analysis.util.CharArraySet.contains(Object) call org.apache.lucene.analysis.util.CharArraySet.contains(Object) call org.apache.lucene.analysis.util.CharArraySet.contains(Object) call org.apache.lucene.analysis.util.CharArraySet.contains(Object) if == && = return if < return if != for : if >= decl_stmt boolean = for = < ++ if != + = break if == return = for = < ++ + = +