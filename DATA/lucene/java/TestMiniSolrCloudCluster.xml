org.apache.solr.cloud java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.net.URL import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.concurrent.atomic.AtomicInteger import com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule import org.apache.lucene.index.TieredMergePolicy import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.SuppressSysoutChecks import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.embedded.JettyConfig.Builder import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.client.solrj.response.RequestStatusState import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.core.CoreDescriptor import org.apache.solr.index.TieredMergePolicyFactory import org.apache.solr.util.RevertDefaultThreadHandlerRule import org.junit.ClassRule import org.junit.Rule import org.junit.Test import org.junit.rules.RuleChain import org.junit.rules.TestRule import org.slf4j.Logger import org.slf4j.LoggerFactory import class annotation org.apache.solr.cloud.TestMiniSolrCloudCluster super super extends Logger int TestRule int int TestRule Builder private private throws decl_stmt org.apache.lucene.util.fst.Builder = call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() return new call Builder.build() call Builder.build() call Builder.build() call Builder.build() call Builder.build() boolean String File private private < throws decl_stmt java.lang.String = decl_stmt File = new + + + + decl_stmt boolean final final = != : if == = new <> if else : JettySolrRunner decl HashMap String decl Collection QueryResponse SolrInputDocument String decl List MiniSolrCloudCluster ClusterState RequestStatusState JettySolrRunner String CloudSolrClient String JettySolrRunner SolrQuery ZkStateReader public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() try call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() decl_stmt java.util.List < = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isStopped() - call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.lang.String final final = : + + + if != decl_stmt RequestStatusState final final = decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() decl_stmt org.apache.solr.client.solrj.SolrQuery = new call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) call org.apache.solr.client.solrj.SolrQuery.setQuery(String) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) call org.apache.solr.common.cloud.ZkStateReader.forceUpdateCollection(String) decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() decl_stmt HashMap < = new < for : call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() decl_stmt java.lang.String = + call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() decl_stmt java.util.Collection < = call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) for : call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() for : call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() call decl HashMap.entrySet() = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) - call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) decl_stmt java.lang.String = : + + + if != decl_stmt RequestStatusState final final = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() new call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() new finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() MiniSolrCloudCluster AtomicInteger public public throws decl_stmt java.util.concurrent.atomic.AtomicInteger = new decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = try = new public public throws if call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() != return throw new catch finally if != call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() public public throws if != return throw new MiniSolrCloudCluster JettySolrRunner AtomicInteger public public throws decl_stmt java.util.concurrent.atomic.AtomicInteger = new decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = new protected protected throws decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = if call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() == throw new return try call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() catch JettySolrRunner protected protected throws decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = if == throw new return Builder MiniSolrCloudCluster public public throws decl_stmt org.apache.lucene.util.fst.Builder = call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.withFilter() call Builder.withFilter() call Builder.withFilter() call Builder.withFilter() call Builder.withFilter() decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = new call Builder.build() call Builder.build() call Builder.build() call Builder.build() call Builder.build() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() String int MiniSolrCloudCluster RequestStatusState String CloudSolrClient public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster final final = decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() try call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() decl_stmt java.lang.String final final = : + + + if != decl_stmt RequestStatusState final final = try = new call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() = new decl_stmt int = for < : += call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() decl List String Boolean SolrInputDocument decl List MiniSolrCloudCluster JettySolrRunner ClusterState decl List decl HashSet CloudSolrClient decl HashSet SolrQuery int String QueryResponse decl List URL decl HashMap public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster final final = try call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() decl_stmt java.util.List < = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) decl_stmt org.apache.solr.client.solrj.SolrQuery final final = new decl_stmt org.apache.solr.common.SolrInputDocument final final = new try = new call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() = new decl_stmt int final final = + for = <= ++ call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) + call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() if * == call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() decl_stmt org.apache.solr.client.solrj.response.QueryResponse final final = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() decl_stmt org.apache.solr.common.cloud.ClusterState final final = decl_stmt java.util.HashSet final final final < = new < decl_stmt java.util.HashSet final final final < = new < decl_stmt HashMap final final final < = new < for final final : call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) for final final : call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt java.net.URL final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String final final = call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() + decl_stmt java.lang.Boolean final final = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() if call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() new else if call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() new decl_stmt java.util.List final final final < = new < decl_stmt java.util.List final final final < = new < for : if ! call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() for : call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.stopJettySolrRunner(JettySolrRunner) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List final final final < = new < call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() if for : decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if ! call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() call org.apache.solr.client.solrj.embedded.JettySolrRunner.isRunning() decl_stmt org.apache.solr.client.solrj.response.QueryResponse final final = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() String SegmentTerminateEarlyTestState ZkStateReader MiniSolrCloudCluster decl Map RequestStatusState String CloudSolrClient Builder File public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.cloud.SegmentTerminateEarlyTestState final final = new decl_stmt File = new decl_stmt org.apache.lucene.util.fst.Builder = call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() call Builder.waitForLoadingCoresToFinish() decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster final final = decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) try decl_stmt java.lang.String final final = : + + + decl_stmt java.util.Map final final final < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if != decl_stmt RequestStatusState final final = decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call SegmentTerminateEarlyTestState.queryTimestampDescending() call SegmentTerminateEarlyTestState.queryTimestampDescending() call SegmentTerminateEarlyTestState.queryTimestampDescending() call SegmentTerminateEarlyTestState.queryTimestampDescending() call SegmentTerminateEarlyTestState.queryTimestampDescending() call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.addDocuments(CloudSolrClient,int,int,boolean) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyNo(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyNo(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyNo(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyNo(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyNo(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYesGrouped(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYesGrouped(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYesGrouped(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYesGrouped(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampDescendingSegmentTerminateEarlyYesGrouped(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampAscendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampAscendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampAscendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampAscendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.SegmentTerminateEarlyTestState.queryTimestampAscendingSegmentTerminateEarlyYes(CloudSolrClient) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown()