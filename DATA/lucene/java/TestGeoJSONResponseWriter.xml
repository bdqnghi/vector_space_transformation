org.apache.solr.response java.lang.invoke.MethodHandles import java.util.List import java.util.Map import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.SolrException import org.junit.BeforeClass import org.junit.Test import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.io.SupportedFormats import org.locationtech.spatial4j.shape.Shape import org.slf4j.Logger import org.slf4j.LoggerFactory import com.fasterxml.jackson.databind.ObjectMapper import class org.apache.solr.response.TestGeoJSONResponseWriter super super extends ObjectMapper Logger public static public static throws public static public static protected < protected < try return call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return decl List decl Map decl Map protected < protected < < decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.List < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.util.Map < = < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public public throws try catch try catch String decl Map public public throws decl_stmt java.lang.String = decl_stmt java.util.Map < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map decl Map decl String public public throws decl_stmt java.util.Map < = decl_stmt java.util.Map < = + + + decl_stmt java.lang.String = new for : = = + + + + + List protected < protected < decl_stmt java.util.List = return call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) public static public static = = = return decl Map SupportedFormats String decl String Shape decl String String Object String public public throws decl_stmt java.lang.String = decl_stmt SupportedFormats = decl_stmt java.awt.Shape = call SupportedFormats.read() call SupportedFormats.read() call SupportedFormats.read() call SupportedFormats.read() call SupportedFormats.read() decl_stmt java.lang.String = new decl_stmt java.lang.String = new for : for : decl_stmt java.lang.String = + + + + decl_stmt java.util.Map < = decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call SupportedFormats.getWriter() call SupportedFormats.getWriter() call SupportedFormats.getWriter() call SupportedFormats.getWriter() call SupportedFormats.getWriter() if ! instanceof = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = + + + call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString()