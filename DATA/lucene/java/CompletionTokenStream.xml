org.apache.lucene.search.suggest.document java.io.IOException import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.TokenStreamToAutomaton import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.util.AttributeImpl import org.apache.lucene.util.AttributeReflector import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.IOUtils import org.apache.lucene.util.IntsRef import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.FiniteStringsIterator import org.apache.lucene.util.automaton.LimitedFiniteStringsIterator import org.apache.lucene.util.automaton.Operations import org.apache.lucene.util.automaton.Transition import org.apache.lucene.util.fst.Util import static static org.apache.lucene.search.suggest.document.CompletionAnalyzer.DEFAULT_MAX_GRAPH_EXPANSIONS import static static org.apache.lucene.search.suggest.document.CompletionAnalyzer.DEFAULT_PRESERVE_POSITION_INCREMENTS import static static org.apache.lucene.search.suggest.document.CompletionAnalyzer.DEFAULT_PRESERVE_SEP import static static org.apache.lucene.search.suggest.document.CompletionAnalyzer.SEP_LABEL import class org.apache.lucene.search.suggest.document.CompletionTokenStream super super extends boolean TokenStream PayloadAttribute int CharTermAttribute BytesRefBuilderTermAttribute boolean FiniteStringsIterator BytesRef public public = Automaton IntsRef public public throws if == decl_stmt org.apache.lucene.util.automaton.Automaton = = new decl_stmt org.apache.lucene.util.IntsRef = call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() call FiniteStringsIterator.next() if == return call org.apache.lucene.search.suggest.document.BytesRefBuilderTermAttribute.builder() call org.apache.lucene.search.suggest.document.BytesRefBuilderTermAttribute.builder() call org.apache.lucene.search.suggest.document.BytesRefBuilderTermAttribute.builder() call org.apache.lucene.search.suggest.document.BytesRefBuilderTermAttribute.builder() call org.apache.lucene.search.suggest.document.BytesRefBuilderTermAttribute.builder() if != call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setLength(int) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call BytesRefBuilderTermAttribute.toUTF16() call BytesRefBuilderTermAttribute.toUTF16() call BytesRefBuilderTermAttribute.toUTF16() call BytesRefBuilderTermAttribute.toUTF16() call BytesRefBuilderTermAttribute.toUTF16() if != call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() return public public throws if == call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() public public throws if == call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() public public throws if = = public public throws return Automaton TokenStreamToAutomaton public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = try decl_stmt org.apache.lucene.analysis.TokenStreamToAutomaton final final if = new char else = new call org.apache.lucene.analysis.TokenStreamToAutomaton.setPreservePositionIncrements(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setPreservePositionIncrements(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setPreservePositionIncrements(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setPreservePositionIncrements(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setPreservePositionIncrements(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setUnicodeArcs(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setUnicodeArcs(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setUnicodeArcs(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setUnicodeArcs(boolean) call org.apache.lucene.analysis.TokenStreamToAutomaton.setUnicodeArcs(boolean) = call org.apache.lucene.analysis.TokenStreamToAutomaton.toAutomaton(TokenStream) call org.apache.lucene.analysis.TokenStreamToAutomaton.toAutomaton(TokenStream) call org.apache.lucene.analysis.TokenStreamToAutomaton.toAutomaton(TokenStream) call org.apache.lucene.analysis.TokenStreamToAutomaton.toAutomaton(TokenStream) call org.apache.lucene.analysis.TokenStreamToAutomaton.toAutomaton(TokenStream) finally = return int byte protected protected decl_stmt int = for = < ++ decl_stmt byte = + if == byte + ++ byte ++ else + ++ return int int decl int int Transition Automaton private static private static decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = for = < ++ call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) decl_stmt org.apache.lucene.util.automaton.Transition = new decl_stmt int = for = < ++ decl_stmt int = - - decl_stmt int = for = < ++ if == assert == if call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) else call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) else if == assert == call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) call org.apache.lucene.util.automaton.Automaton.addEpsilon(int,int) else call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() return public public return public public return public public BytesRefBuilderTermAttributeImpl public public decl_stmt BytesRefBuilderTermAttributeImpl = call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() call BytesRefBuilderTermAttributeImpl.bytes() BytesRefBuilderTermAttributeImpl public public decl_stmt BytesRefBuilderTermAttributeImpl = new return public public public public if == = new return