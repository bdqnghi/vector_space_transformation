org.apache.solr org.apache.commons.io.FileUtils import org.apache.lucene.util.LuceneTestCase import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.embedded.EmbeddedSolrServer import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.util.ExternalPaths import org.eclipse.jetty.servlet.ServletHolder import org.junit.After import org.junit.AfterClass import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.File import java.io.OutputStreamWriter import java.lang.invoke.MethodHandles import java.nio.file.Path import java.util.Properties import java.util.SortedMap import class org.apache.solr.SolrJettyTestBase super super extends int SolrClient Logger String JettySolrRunner public static public static throws JettyConfig Properties public static public static < throws = == : = decl_stmt org.apache.solr.client.solrj.embedded.JettyConfig = decl_stmt java.util.Properties = new if != call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if != call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if == && == call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() return public static public static throws return public static public static throws return new public static public static throws return new Path Properties Properties public static public static throws decl_stmt java.nio.file.Path = decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call java.nio.file.Path.toString() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() = new call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() = call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return public public throws if != call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() = public static public static throws if != call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() = public public if == = return String HttpSolrClient public public if != try decl_stmt java.lang.String = call org.apache.solr.client.solrj.embedded.JettySolrRunner.getBaseUrl() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getBaseUrl() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getBaseUrl() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getBaseUrl() call org.apache.solr.client.solrj.embedded.JettySolrRunner.getBaseUrl() + + decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) return catch throw new else return new public public public public public static public static throws public static public static throws if String String String public static public static throws decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt java.lang.String = + File OutputStreamWriter File String String File Properties public static public static decl_stmt java.lang.String = if == throw new decl_stmt java.lang.String = try decl_stmt File = new decl_stmt File = new decl_stmt File = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() decl_stmt java.io.OutputStreamWriter = try = new new call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) finally if != try call OutputStreamWriter.close() call OutputStreamWriter.close() call OutputStreamWriter.close() call OutputStreamWriter.close() call OutputStreamWriter.close() catch = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() catch if instanceof throw else throw new return