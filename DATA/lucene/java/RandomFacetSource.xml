org.apache.lucene.benchmark.byTask.feeds java.io.IOException import java.util.List import java.util.Random import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.facet.FacetField import org.apache.lucene.facet.FacetsConfig import class org.apache.lucene.benchmark.byTask.feeds.RandomFacetSource super super extends int Random int int int FacetField String int int decl String public public < throws decl_stmt int = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) for = < ++ decl_stmt int if == = else = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - decl_stmt java.lang.String = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = new - for = < - ++ = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt org.apache.lucene.facet.FacetField = new call org.apache.lucene.facet.FacetField.toString() call org.apache.lucene.facet.FacetField.toString() call org.apache.lucene.facet.FacetField.toString() call org.apache.lucene.facet.FacetField.toString() call org.apache.lucene.facet.FacetField.toString() public public for = < ++ public public throws public public = new = = = if < throw new + = *