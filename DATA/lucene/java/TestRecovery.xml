org.apache.solr.search static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import org.noggit.ObjectBuilder import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.request.SolrQueryRequest import org.apache.solr.update.DirectUpdateHandler2 import org.apache.solr.update.UpdateLog import org.apache.solr.update.UpdateHandler import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import java.io.File import java.io.RandomAccessFile import java.nio.charset.StandardCharsets import java.nio.file.Files import java.util.ArrayDeque import java.util.Arrays import java.util.Deque import java.util.LinkedList import java.util.List import java.util.Locale import java.util.Map import java.util.concurrent.Future import java.util.concurrent.Semaphore import java.util.concurrent.TimeUnit import org.apache.solr.update.processor.DistributedUpdateProcessor.DistribPhase import class org.apache.solr.search.TestRecovery super super extends String int String public static public static throws = public static public static if == else public public try - catch throw new Semaphore int Semaphore decl Deque public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt java.util.Deque < = new <> call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) decl_stmt int = call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() finally = = = UpdateLog UpdateHandler decl RecoveryInfo Semaphore SolrQueryRequest Long Semaphore decl Future decl UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = :: decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.util.concurrent.Future < = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() == call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() != call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.lang.Long = call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() != call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() + + + + + call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = UpdateLog UpdateHandler Semaphore SolrQueryRequest Semaphore decl Future decl UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.util.concurrent.Future < = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() == call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() + + + + + + + call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() + + + call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = UpdateLog UpdateHandler Semaphore SolrQueryRequest Semaphore decl Future decl UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() decl_stmt java.util.concurrent.Future < try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() + + + + + + + call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = long public public throws decl_stmt long = = = = Semaphore SolrQueryRequest UpdateHandler UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & == call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & == call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = long long long public public throws decl_stmt long = decl_stmt long = decl_stmt long = assert > + + + + Semaphore SolrQueryRequest UpdateHandler Semaphore UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() finally = = = private private < throws for = < ++ + decl String UpdateLog RandomAccessFile int Semaphore decl LinkedList int Semaphore int File int int public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.update.UpdateLog = decl_stmt File = new decl_stmt java.lang.String = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) for : new call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) decl_stmt int = decl_stmt int = decl_stmt java.util.LinkedList < = new <> decl_stmt int = decl_stmt int = call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() * decl_stmt int for = <= call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() + ++ += = + + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() = + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getMaxNumLogsToKeep() call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) = call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() + = call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() += = + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() = - = + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) = - + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() = call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() + = call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() call org.apache.solr.update.UpdateLog.getNumRecordsToKeep() += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() = - + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) new < = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) decl_stmt java.io.RandomAccessFile = new new - call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() finally = = = decl String RandomAccessFile Semaphore UpdateLog Semaphore File public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.update.UpdateLog = decl_stmt File = new decl_stmt java.lang.String = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) decl_stmt java.io.RandomAccessFile = new new - call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) finally = = = decl String UpdateLog RandomAccessFile File long public public throws try = decl_stmt org.apache.solr.update.UpdateLog = decl_stmt File = new decl_stmt java.lang.String = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) decl_stmt java.io.RandomAccessFile = new new - decl_stmt long = call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) new int call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() finally = = = decl String UpdateLog RandomAccessFile Semaphore long String decl byte Semaphore File String public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.update.UpdateLog = decl_stmt File = new decl_stmt java.lang.String = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) decl_stmt java.lang.String = - decl_stmt java.io.RandomAccessFile = new new call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeLong(long) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) call java.io.RandomAccessFile.writeChars(String) decl_stmt byte = new int call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.length() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call RandomAccessFile.seek() call java.io.RandomAccessFile.readFully(byte) call java.io.RandomAccessFile.readFully(byte) call java.io.RandomAccessFile.readFully(byte) call java.io.RandomAccessFile.readFully(byte) call java.io.RandomAccessFile.readFully(byte) call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() decl_stmt long = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) + decl_stmt java.lang.String = + = new new call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.write(byte) call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.io.RandomAccessFile.close() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) finally = = = int private static private static decl_stmt int = - for = + if < break for = < ++ + = private static private static for = < - ++ for = < ++ if + != continue continue return return - decl String UpdateLog File throws decl_stmt org.apache.solr.update.UpdateLog = decl_stmt File = new try decl_stmt java.lang.String = call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) for : new call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) call org.apache.solr.update.UpdateLog.getLogList(File) finally Map List Map String Map private static private static throws decl_stmt java.lang.String = decl_stmt java.util.Map = decl_stmt java.util.Map = if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) else if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() > = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) else if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) decl_stmt java.util.Map = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() > = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) if == return return call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object)