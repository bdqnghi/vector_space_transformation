org.apache.solr.cloud.overseer java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.HashMap import java.util.LinkedHashMap import java.util.List import java.util.Map import org.apache.solr.cloud.OverseerCollectionMessageHandler import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.DocRouter import org.apache.solr.common.cloud.ImplicitDocRouter import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.cloud.overseer.ClusterStateMutator ZkStateReader Logger String decl Map Object decl Map decl Map decl ArrayList decl List int String decl Map DocRouter String String DocCollection public public decl_stmt java.lang.String = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return decl_stmt java.util.ArrayList < = new <> if else decl_stmt int = - if < throw new decl_stmt java.util.Map < = decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.solr.common.cloud.DocRouter = decl_stmt java.util.List < = call org.apache.solr.common.cloud.DocRouter.partitionRange(int,Range) call org.apache.solr.common.cloud.DocRouter.partitionRange(int,Range) call org.apache.solr.common.cloud.DocRouter.partitionRange(int,Range) call org.apache.solr.common.cloud.DocRouter.partitionRange(int,Range) call org.apache.solr.common.cloud.DocRouter.partitionRange(int,Range) call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call org.apache.solr.common.cloud.DocRouter.fullRange() call org.apache.solr.common.cloud.DocRouter.fullRange() call org.apache.solr.common.cloud.DocRouter.fullRange() call org.apache.solr.common.cloud.DocRouter.fullRange() call org.apache.solr.common.cloud.DocRouter.fullRange() decl_stmt java.util.Map < = new <> for = < call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() ++ decl_stmt java.lang.String = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() == : call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt java.util.Map < = new <> for < : decl_stmt java.lang.Object = if == = if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = == : decl_stmt org.apache.solr.common.cloud.DocCollection = new - return new DocCollection String public public decl_stmt java.lang.String final final = if ! return decl_stmt org.apache.solr.common.cloud.DocCollection = if == return return new call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() ClusterState public static public static decl_stmt org.apache.solr.common.cloud.ClusterState = if == = else = return String public static public static < if == throw new + for = < ++ decl_stmt java.lang.String final final = + + public static public static < if == throw new + for : if == || continue if throw new + decl Collection public static public static final final final final final final decl_stmt java.util.Collection < = if != for : if != return return String String String String decl Collection public static public static decl_stmt java.util.Collection < = if != for : for : decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return return DocCollection String public public decl_stmt java.lang.String final final = if ! return decl_stmt org.apache.solr.common.cloud.DocCollection = if == || call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() call org.apache.solr.common.cloud.DocCollection.getStateFormat() == return return new call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() new call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call DocCollection.getProperties() call DocCollection.getProperties() call DocCollection.getProperties() call DocCollection.getProperties() call DocCollection.getProperties() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter()