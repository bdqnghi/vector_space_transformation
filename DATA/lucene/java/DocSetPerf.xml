org.apache.solr.search java.util.Random import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.SuppressForbidden import org.apache.solr.util.RTimer import class org.apache.solr.search.DocSetPerf Random HashDocSet decl int BitDocSet FixedBitSet public static public static if ! throw new = private static = private static return new int int static static = new = new decl_stmt int = if > for = < ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if ! call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) ++ = = new = new String int boolean FixedBitSet int String int DocSet long int String String HashDocSet int int DocSet DocSet DocSet decl DocSet BitDocSet RTimer decl FixedBitSet int decl DocSet public static public static decl_stmt java.lang.String = decl_stmt boolean = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt java.lang.String = decl_stmt int = decl_stmt long = decl_stmt org.apache.lucene.util.FixedBitSet = new decl_stmt org.apache.solr.search.DocSet = new decl_stmt org.apache.solr.search.DocSet = new for = < ++ call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) : = = = decl_stmt org.apache.solr.util.RTimer final final = new if for = < ++ call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) : decl_stmt org.apache.lucene.util.FixedBitSet = decl_stmt org.apache.solr.search.BitDocSet = decl_stmt org.apache.solr.search.HashDocSet = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) : decl_stmt org.apache.lucene.util.FixedBitSet = call org.apache.lucene.util.FixedBitSet.clone() call org.apache.lucene.util.FixedBitSet.clone() call org.apache.lucene.util.FixedBitSet.clone() call org.apache.lucene.util.FixedBitSet.clone() call org.apache.lucene.util.FixedBitSet.clone() call DocSet.and() call DocSet.and() call DocSet.and() call DocSet.and() call DocSet.and() decl_stmt int = call DocSet.cardinality() call DocSet.cardinality() call DocSet.cardinality() call DocSet.cardinality() call DocSet.cardinality() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() == call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) == if call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() != decl_stmt org.apache.solr.search.DocSet = call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() == call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) call org.apache.solr.search.BitDocSet.intersectionSize(DocSet) == call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) == call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() == call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) call org.apache.solr.search.HashDocSet.intersection(DocSet) == call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() call HashDocSet.intersectionSize() == += decl_stmt java.lang.String = decl_stmt java.lang.String = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = if != for = < ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt org.apache.solr.search.DocSet = = if == = = else if == = = else if == if < = = else = = if == decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) += call DocSet.ramBytesUsed() call DocSet.ramBytesUsed() call DocSet.ramBytesUsed() call DocSet.ramBytesUsed() call DocSet.ramBytesUsed() else if == += call org.apache.solr.search.DocSet.intersectionSize(DocSet) call org.apache.solr.search.DocSet.intersectionSize(DocSet) call org.apache.solr.search.DocSet.intersectionSize(DocSet) call org.apache.solr.search.DocSet.intersectionSize(DocSet) call org.apache.solr.search.DocSet.intersectionSize(DocSet) else if == decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) call org.apache.solr.search.DocSet.intersection(DocSet) += call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() call org.apache.solr.search.DocSet.size() + call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() +