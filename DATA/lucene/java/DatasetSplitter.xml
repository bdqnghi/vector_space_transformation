org.apache.lucene.classification.utils java.io.IOException import java.util.HashMap import org.apache.lucene.analysis.Analyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.IndexableField import org.apache.lucene.index.LeafReader import org.apache.lucene.index.Terms import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Sort import org.apache.lucene.search.grouping.GroupDocs import org.apache.lucene.search.grouping.GroupingSearch import org.apache.lucene.search.grouping.TopGroups import org.apache.lucene.store.Directory import org.apache.lucene.uninverting.UninvertingReader import class org.apache.lucene.classification.utils.DatasetSplitter double double int int Terms double Document IndexWriter FieldType decl HashMap IndexWriter int IndexSearcher UninvertingReader IndexWriter int decl TopGroups GroupingSearch double long public public throws decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.index.Terms = decl_stmt long = - if != = call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() if == - = decl_stmt HashMap < = new <> call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() decl_stmt org.apache.lucene.uninverting.UninvertingReader = new try decl_stmt org.apache.lucene.search.IndexSearcher = new decl_stmt org.apache.lucene.search.grouping.GroupingSearch = new call org.apache.lucene.search.grouping.GroupingSearch.setGroupSort(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setGroupSort(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setGroupSort(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setGroupSort(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setGroupSort(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setSortWithinGroup(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setSortWithinGroup(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setSortWithinGroup(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setSortWithinGroup(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setSortWithinGroup(Sort) call org.apache.lucene.search.grouping.GroupingSearch.setAllGroups(boolean) call org.apache.lucene.search.grouping.GroupingSearch.setAllGroups(boolean) call org.apache.lucene.search.grouping.GroupingSearch.setAllGroups(boolean) call org.apache.lucene.search.grouping.GroupingSearch.setAllGroups(boolean) call org.apache.lucene.search.grouping.GroupingSearch.setAllGroups(boolean) call org.apache.lucene.search.grouping.GroupingSearch.setGroupDocsLimit(int) call org.apache.lucene.search.grouping.GroupingSearch.setGroupDocsLimit(int) call org.apache.lucene.search.grouping.GroupingSearch.setGroupDocsLimit(int) call org.apache.lucene.search.grouping.GroupingSearch.setGroupDocsLimit(int) call org.apache.lucene.search.grouping.GroupingSearch.setGroupDocsLimit(int) decl_stmt org.apache.lucene.search.grouping.TopGroups < = call org.apache.lucene.search.grouping.GroupingSearch.search(IndexSearcher,Query,int,int) call org.apache.lucene.search.grouping.GroupingSearch.search(IndexSearcher,Query,int,int) call org.apache.lucene.search.grouping.GroupingSearch.search(IndexSearcher,Query,int,int) call org.apache.lucene.search.grouping.GroupingSearch.search(IndexSearcher,Query,int,int) call org.apache.lucene.search.grouping.GroupingSearch.search(IndexSearcher,Query,int,int) new int decl_stmt org.apache.solr.schema.FieldType = new if call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) decl_stmt int = for : decl_stmt int = decl_stmt double = * decl_stmt int = decl_stmt double = * decl_stmt int = for : decl_stmt org.apache.lucene.document.Document = if == && < call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) ++ else if < call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) ++ else call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) ++ call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) catch throw new finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call UninvertingReader.close() call UninvertingReader.close() call UninvertingReader.close() call UninvertingReader.close() call UninvertingReader.close() Document Document IndexableField private private throws decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.lucene.document.Document = if != && > for : decl_stmt org.apache.lucene.index.IndexableField = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() else for : call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() if call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() call org.apache.lucene.index.IndexableField.readerValue() else if call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() call org.apache.lucene.index.IndexableField.binaryValue() else if call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() call org.apache.lucene.index.IndexableField.stringValue() else if call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() call org.apache.lucene.index.IndexableField.numericValue() return