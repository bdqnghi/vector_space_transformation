org.apache.solr.handler java.io.File import java.io.IOException import java.io.InputStream import java.net.URL import java.net.URLEncoder import java.nio.file.DirectoryStream import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.util.Properties import java.util.regex.Matcher import java.util.regex.Pattern import org.apache.commons.io.IOUtils import org.apache.lucene.index.IndexFileNames import org.apache.lucene.util.TestUtil import org.apache.solr.SolrJettyTestBase import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.util.FileUtils import org.junit.After import org.junit.Before import org.junit.Test import class annotation comment org.apache.solr.handler.TestRestoreCore super super extends JettySolrRunner decl SolrInstance decl TestReplicationHandler String SolrClient JettyConfig Properties JettySolrRunner private static private static throws new new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() decl_stmt org.apache.solr.client.solrj.embedded.JettyConfig = decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = new call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() return HttpSolrClient String private static private static try decl_stmt java.lang.String final final = + + decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) return catch throw new String public public throws decl_stmt java.lang.String = = new call decl TestReplicationHandler.setUp() call decl TestReplicationHandler.setUp() call decl TestReplicationHandler.setUp() call decl TestReplicationHandler.setUp() call decl TestReplicationHandler.setUp() call decl TestReplicationHandler.copyConfigFile() call decl TestReplicationHandler.copyConfigFile() call decl TestReplicationHandler.copyConfigFile() call decl TestReplicationHandler.copyConfigFile() call decl TestReplicationHandler.copyConfigFile() + = = call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() public public throws call decl SolrInstance.close() call decl SolrInstance.close() call decl SolrInstance.close() call decl SolrInstance.close() call decl SolrInstance.close() = call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() = = int String int int int String String SolrInputDocument CheckBackupStatus public public throws decl_stmt int = decl_stmt java.lang.String decl_stmt java.lang.String decl_stmt java.lang.String = if = += + if = += + decl_stmt org.apache.solr.handler.CheckBackupStatus = new while ! call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() decl_stmt int = for = < ++ decl_stmt int = for = < ++ call decl SolrInstance.deleteByQuery() call decl SolrInstance.deleteByQuery() call decl SolrInstance.deleteByQuery() call decl SolrInstance.deleteByQuery() call decl SolrInstance.deleteByQuery() + call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() decl_stmt int = for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + + call decl SolrInstance.add() call decl SolrInstance.add() call decl SolrInstance.add() call decl SolrInstance.add() call decl SolrInstance.add() if call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() call decl SolrInstance.commit() while ! String int Path String String CheckBackupStatus Path public public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = + + + decl_stmt org.apache.solr.handler.CheckBackupStatus = new while ! call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() call CheckBackupStatus.fetchStatus() decl_stmt java.nio.file.Path = + try < = + decl_stmt java.nio.file.Path = try while ! catch = ModifiableSolrParams QueryResponse private private throws decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = call decl SolrInstance.query() call decl SolrInstance.query() call decl SolrInstance.query() call decl SolrInstance.query() call decl SolrInstance.query() call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() call QueryResponse.getStatus() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() InputStream URL Matcher Pattern String String private private throws decl_stmt java.lang.String = call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() + + + + decl_stmt java.util.regex.Pattern final final = decl_stmt java.io.InputStream = try decl_stmt java.net.URL = new = call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() decl_stmt java.lang.String = decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) + call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) return else if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() finally return