org.apache.lucene.spatial java.io.IOException import java.util.ArrayList import java.util.List import java.util.logging.Logger import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TopDocs import org.apache.lucene.store.Directory import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.SuppressSysoutChecks import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomDouble import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomGaussian import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomInt import static static com.carrotsearch.randomizedtesting.RandomizedTest.randomIntBetween import class annotation org.apache.lucene.spatial.SpatialTestCase super super extends Logger DirectoryReader SpatialContext Analyzer IndexSearcher RandomIndexWriter Directory public public throws = = new = new = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() = public public throws protected protected throws call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) protected protected < throws for : call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) protected protected throws call org.apache.lucene.index.RandomIndexWriter.deleteAll() call org.apache.lucene.index.RandomIndexWriter.deleteAll() call org.apache.lucene.index.RandomIndexWriter.deleteAll() call org.apache.lucene.index.RandomIndexWriter.deleteAll() call org.apache.lucene.index.RandomIndexWriter.deleteAll() DirectoryReader protected protected throws call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() decl_stmt org.apache.lucene.index.DirectoryReader = if != = = protected protected call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() TopDocs decl List protected protected try decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) return new catch throw new Rectangle protected protected decl_stmt org.apache.lucene.geo.Rectangle final final = call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() return call SpatialContext.makePoint() call SpatialContext.makePoint() call SpatialContext.makePoint() call SpatialContext.makePoint() call SpatialContext.makePoint() int call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() int call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() int call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() int call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() protected protected return call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() double double double decl double decl double double protected protected decl_stmt double = decl_stmt double = decl_stmt double = + if = = decl_stmt double = decl_stmt double = decl_stmt double = + return call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() call SpatialContext.makeRectangle() int int double double int protected protected if >= && decl_stmt int = int decl_stmt int = + decl_stmt int = - decl_stmt int = int / decl_stmt int = + - return new else decl_stmt double = / decl_stmt double = + - == : - return new private private assert > return - - + double double double double double double double private private assert <= && >= decl_stmt double = decl_stmt double = decl_stmt double = if < = - = - *= - decl_stmt double = - decl_stmt double = / assert >= && >= && >= decl_stmt double if <= = * else = - * - + decl_stmt double = + * return < || || : String StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return public public return + + + + public public return public public return + + + +