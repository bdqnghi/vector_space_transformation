org.apache.solr.common.util java.io.BufferedOutputStream import java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.File import java.io.FileOutputStream import java.io.IOException import java.io.InputStream import java.util.ArrayList import java.util.Arrays import java.util.Date import java.util.HashMap import java.util.List import java.util.Map import java.util.Random import org.apache.commons.io.IOUtils import org.apache.lucene.util.TestUtil import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.common.EnumFieldValue import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.util.ConcurrentLRUCache import org.apache.solr.util.RTimer import org.junit.Test import org.noggit.CharArr import class org.apache.solr.common.util.TestJavaBinCodec super super extends String String String String String ByteArrayOutputStream ByteArrayInputStream Object public public throws for = < * ++ decl_stmt java.lang.String = decl_stmt java.io.ByteArrayOutputStream = new new decl_stmt ByteArrayInputStream = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.lang.Object = new SolrDocument SolrDocument SolrDocument SolrDocument private private decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) call org.apache.solr.common.SolrDocument.addChildDocument(SolrDocument) return SolrInputDocument decl Map SolrInputDocument decl NamedList SimpleOrderedMap SolrDocument SolrInputDocument SolrDocumentList decl List private < private < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() byte call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() short call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() double call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() long - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() long call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() long call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() float call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.common.SolrDocumentList = new call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setMaxScore(Float) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call org.apache.solr.common.SolrDocumentList.setStart(long) call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() byte decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addChildDocument(SolrInputDocument) call org.apache.solr.common.SolrInputDocument.addChildDocument(SolrInputDocument) call org.apache.solr.common.SolrInputDocument.addChildDocument(SolrInputDocument) call org.apache.solr.common.SolrInputDocument.addChildDocument(SolrInputDocument) call org.apache.solr.common.SolrInputDocument.addChildDocument(SolrInputDocument) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() << call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() long decl_stmt org.apache.solr.common.util.SimpleOrderedMap = new call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call SimpleOrderedMap.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return JavaBinCodec InputStream decl byte decl byte decl List decl List public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new public < public < throws return try decl_stmt java.io.InputStream = decl_stmt java.util.List < = < call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof decl_stmt byte = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt byte = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() catch throw public < public < throws return InputStream SolrDocument JavaBinCodec SolrDocument public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new public < public < throws return try decl_stmt java.io.InputStream = decl_stmt org.apache.solr.common.SolrDocument = call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) decl_stmt org.apache.solr.common.SolrDocument = catch throw public < public < throws return JavaBinCodec Object InputStream decl byte decl byte ByteArrayOutputStream public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.lang.Object = try call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.io.InputStream = decl_stmt byte = for = < ++ catch throw JavaBinCodec InputStream SolrDocument decl byte decl byte ByteArrayOutputStream public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt java.io.ByteArrayOutputStream = new decl_stmt org.apache.solr.common.SolrDocument = try call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.io.InputStream = decl_stmt byte = for = < ++ catch throw ByteArrayOutputStream JavaBinCodec SolrDocument decl List decl List public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt java.io.ByteArrayOutputStream = new call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) decl_stmt org.apache.solr.common.SolrDocument = call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call org.apache.solr.common.SolrDocument.size() call org.apache.solr.common.SolrDocument.size() call org.apache.solr.common.SolrDocument.size() call org.apache.solr.common.SolrDocument.size() call org.apache.solr.common.SolrDocument.size() call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.hasChildDocuments() call org.apache.solr.common.SolrDocument.hasChildDocuments() call org.apache.solr.common.SolrDocument.hasChildDocuments() call org.apache.solr.common.SolrDocument.hasChildDocuments() call org.apache.solr.common.SolrDocument.hasChildDocuments() decl_stmt java.util.List < = call org.apache.solr.common.SolrDocument.getChildDocuments() call org.apache.solr.common.SolrDocument.getChildDocuments() call org.apache.solr.common.SolrDocument.getChildDocuments() call org.apache.solr.common.SolrDocument.getChildDocuments() call org.apache.solr.common.SolrDocument.getChildDocuments() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Map decl StringCache ByteArrayOutputStream ByteArrayOutputStream decl Map Map List decl JavaBinCodec List public public throws decl_stmt java.util.Map < = decl_stmt java.io.ByteArrayOutputStream = new new decl_stmt java.util.Map = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.io.ByteArrayOutputStream = new new decl_stmt java.util.Map = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.util.List = new <> call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() decl_stmt java.util.List = new <> call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) == call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) == call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) decl_stmt StringCache = new new < decl_stmt HashMap private < = new <> public public return call decl StringCache.put() call decl StringCache.put() call decl StringCache.put() call decl StringCache.put() call decl StringCache.put() public public return call decl StringCache.get() call decl StringCache.get() call decl StringCache.get() call decl StringCache.get() call decl StringCache.get() public public return call decl StringCache.remove() call decl StringCache.remove() call decl StringCache.remove() call decl StringCache.remove() call decl StringCache.remove() public public call decl StringCache.clear() call decl StringCache.clear() call decl StringCache.clear() call decl StringCache.clear() call decl StringCache.clear() = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() = new <> call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() = new <> call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.Map.keySet() call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) == call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) == call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) public public return public public return public public return public public FileOutputStream JavaBinCodec Object BufferedOutputStream SolrDocument ByteArrayOutputStream decl byte public public throws decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.lang.Object = call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.io.FileOutputStream = new new decl_stmt java.io.BufferedOutputStream = new call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() = new decl_stmt org.apache.solr.common.SolrDocument = = new call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) = new new = new call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call java.io.BufferedOutputStream.write(byte,int,int) call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() call BufferedOutputStream.close() decl JavaBinCodec int decl StringBytes decl HashMap decl StringBytes int decl byte decl StringCache decl ArrayList int int decl JavaBinCodec int RTimer String decl JavaBinCodec decl JavaBinCodec decl Cache private private throws decl_stmt java.util.ArrayList final final final < = new <> decl_stmt org.apache.solr.common.util.Cache < = decl_stmt org.apache.solr.common.util.Cache < = new < decl_stmt HashMap private < = new <> public public call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() public public return call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() public public return call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() public public call decl HashMap.clear() call decl HashMap.clear() call decl HashMap.clear() call decl HashMap.clear() call decl HashMap.clear() decl_stmt StringCache final final final final final = new decl_stmt byte = new decl_stmt StringBytes = new for = < ++ decl_stmt java.lang.String = decl_stmt int = call decl JavaBinCodec.length() call decl JavaBinCodec.length() call decl JavaBinCodec.length() call decl JavaBinCodec.length() call decl JavaBinCodec.length() decl_stmt int = * if == || < = new decl_stmt int = call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl byte.reset() call decl byte.reset() call decl byte.reset() call decl byte.reset() call decl byte.reset() decl_stmt org.apache.solr.util.RTimer = new decl_stmt int final final = decl_stmt int = decl_stmt StringBytes = new new for = < ++ decl_stmt StringBytes = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call int.reset() call int.reset() call int.reset() call int.reset() call int.reset() if call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() call decl JavaBinCodec.get() == throw new + call int.getTime() call int.getTime() call int.getTime() call int.getTime() call int.getTime() = new decl_stmt java.lang.String = decl_stmt CharArr = new for = < ++ decl_stmt StringBytes = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl StringBytes.reset() call decl StringBytes.reset() call decl StringBytes.reset() call decl StringBytes.reset() call decl StringBytes.reset() = call decl StringBytes.toString() call decl StringBytes.toString() call decl StringBytes.toString() call decl StringBytes.toString() call decl StringBytes.toString() + call int.getTime() call int.getTime() call int.getTime() call int.getTime() call int.getTime() public public return public public return public public return public public decl ArrayList private static private static throws decl_stmt java.util.ArrayList < = new for = < ++ call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() new for : for : Runtime int static static + + decl_stmt int = * decl_stmt java.lang.Runtime = + call Runtime.totalMemory() call Runtime.totalMemory() call Runtime.totalMemory() call Runtime.totalMemory() call Runtime.totalMemory() - call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() / + call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() call Runtime.freeMemory() / public static public static try catch throw new StringBuffer static static decl_stmt java.lang.StringBuffer = new for = < ++ call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) + - return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() RTimer JavaBinCodec int long SolrDocument Random int int int decl JavaBinCodec ConcurrentLRUCache decl StringCache ByteArrayOutputStream decl byte int public static public static throws decl_stmt int = decl_stmt int = ++ decl_stmt int = ++ decl_stmt long final final = ++ decl_stmt int = ++ decl_stmt java.util.Random = new decl_stmt byte final final final = new for = < ++ decl_stmt org.apache.solr.common.SolrDocument = new call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) call org.apache.solr.common.SolrDocument.put(String,Collection) + call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt java.io.ByteArrayOutputStream = new call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call org.apache.solr.common.util.JavaBinCodec.marshal(Object,OutputStream) call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt int = decl_stmt org.apache.solr.util.RTimer final final = new decl_stmt org.apache.solr.util.ConcurrentLRUCache = > new <> - / / : decl_stmt StringCache final final final final final = == : new if <= += else try catch decl_stmt long = * + + + * / call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() if != + call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() + + call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() + + call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() call org.apache.solr.util.ConcurrentLRUCache.getStats() JavaBinCodec int int Object FastInputStream decl byte InputStream public static public static throws decl_stmt int = decl_stmt int = - decl_stmt java.io.InputStream = new public public throws return - while -- >= if ++ >= = decl_stmt byte = decl_stmt org.apache.solr.common.util.JavaBinCodec = new decl_stmt org.apache.solr.common.util.FastInputStream = new decl_stmt java.lang.Object = call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) call org.apache.solr.common.util.JavaBinCodec.unmarshal(InputStream) if instanceof += return public public throws return -