org.apache.lucene.search.spans org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.IndexReader import org.apache.lucene.index.NoMergePolicy import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.junit.Test import java.io.IOException import java.util.HashSet import java.util.Set import class org.apache.lucene.search.spans.TestSpanCollection super super extends decl String IndexSearcher FieldType String IndexReader Directory public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document RandomIndexWriter public public throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = public public throws public public private private throws for : + SpanTermQuery SpanTermQuery SpanTermQuery SpanOrQuery SpanTermQuery SpanNearQuery SpanNearQuery Spans TermCollector public public throws decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanOrQuery = new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new new decl_stmt TermCollector = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new new new call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new new new call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new new new SpanTermQuery SpanTermQuery TermCollector Spans SpanOrQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanOrQuery = new decl_stmt TermCollector = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanOrQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanOrQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanOrQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanOrQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanOrQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new SpanTermQuery SpanTermQuery SpanTermQuery SpanNotQuery Spans SpanNearQuery TermCollector public public throws decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new new decl_stmt org.apache.lucene.search.spans.SpanNotQuery = new decl_stmt TermCollector = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() new new