org.apache.lucene.codecs.simpletext java.io.IOException import java.nio.charset.StandardCharsets import java.text.ParseException import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.Set import org.apache.lucene.codecs.SegmentInfoFormat import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentInfo import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.StringHelper import org.apache.lucene.util.Version import class org.apache.lucene.codecs.simpletext.SimpleTextSegmentInfoFormat super super extends BytesRef BytesRef BytesRef BytesRef BytesRef BytesRef BytesRef BytesRef BytesRef String BytesRef BytesRef BytesRef decl Set SegmentInfo int BytesRefBuilder decl Map String String Version String int decl byte decl Map int String int boolean public public throws decl_stmt org.apache.lucene.util.BytesRefBuilder = new decl_stmt java.lang.String = try = assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt org.apache.lucene.util.Version final final try = catch throw new + assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt int final final = assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt boolean final final = assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt int = decl_stmt java.util.Map < = new <> for = < ++ assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt int = decl_stmt java.util.Map < = new <> for = < ++ assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt int = decl_stmt java.util.Set < = new <> for = < ++ assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt java.lang.String = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() assert call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() decl_stmt byte final final final = call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() if ! throw new + + + decl_stmt org.apache.lucene.index.SegmentInfo = new call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) call org.apache.lucene.index.SegmentInfo.setFiles(Collection) return private private return new - decl Set int BytesRefBuilder decl Map decl Map int String public public throws decl_stmt java.lang.String = try = decl_stmt org.apache.lucene.util.BytesRefBuilder = new decl_stmt java.util.Map < = decl_stmt int = == : call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() if > for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.util.Set < = decl_stmt int = == : call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() if > for : new