org.apache.lucene.spatial.prefix.tree java.util.Collection import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import org.locationtech.spatial4j.shape.SpatialRelation import org.apache.lucene.util.BytesRef import org.apache.lucene.util.StringHelper import class org.apache.lucene.spatial.prefix.tree.LegacyCell super super implements SpatialRelation decl byte Shape byte int int boolean protected protected = = = = = short protected protected = > && + - == if -- if == = public public return public public = public public return public public = decl byte public public = if ! || == return if < + + assert : decl_stmt byte = new + - = = + ++ = return public public if == return new = = = return public public return LegacyCell public public assert < if instanceof decl_stmt org.apache.lucene.spatial.prefix.tree.LegacyCell = = return new else return new LegacyCell boolean public public decl_stmt org.apache.lucene.spatial.prefix.tree.LegacyCell = decl_stmt boolean = assert == return int int int private static private static if < return decl_stmt int = decl_stmt int = decl_stmt int final final = + while < if ++ != ++ return return LegacyCell public public decl_stmt org.apache.lucene.spatial.prefix.tree.LegacyCell = return int int int int protected static protected static decl_stmt int final final = + while < decl_stmt int = ++ & decl_stmt int = ++ & decl_stmt int = - if != return return - Cell public public if instanceof decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = return call org.apache.lucene.spatial.prefix.tree.Cell.getTokenBytesWithLeaf(BytesRef) call org.apache.lucene.spatial.prefix.tree.Cell.getTokenBytesWithLeaf(BytesRef) call org.apache.lucene.spatial.prefix.tree.Cell.getTokenBytesWithLeaf(BytesRef) call org.apache.lucene.spatial.prefix.tree.Cell.getTokenBytesWithLeaf(BytesRef) call org.apache.lucene.spatial.prefix.tree.Cell.getTokenBytesWithLeaf(BytesRef) else return public public return public public return