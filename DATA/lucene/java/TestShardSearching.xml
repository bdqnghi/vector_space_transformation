org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.List import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.MultiFields import org.apache.lucene.index.MultiReader import org.apache.lucene.index.Term import org.apache.lucene.index.TermsEnum import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.TestUtil import class annotation org.apache.lucene.search.TestShardSearching super super extends IndexSearcher PreviousSearchState String decl NodeState IndexSearcher decl IndexReader String long int decl ShardIndexSearcher int boolean PreviousSearchState double int Query decl List decl List int IndexReader int Sort TermsEnum public public throws decl_stmt int final final = decl_stmt double final final = decl_stmt int final final = decl_stmt int final final = if + + + + + decl_stmt java.util.List final final final < = new <> decl_stmt java.util.List < = while < decl_stmt boolean final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > && == decl_stmt int final final = decl_stmt ShardIndexSearcher final final final final final decl_stmt PreviousSearchState final final if = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if + - / try = catch if + call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() continue else if = = decl_stmt org.apache.lucene.index.IndexReader final final final = new decl_stmt PreviousSearchState = try decl_stmt int = try for = < ++ decl_stmt long final final = decl_stmt org.apache.lucene.search.IndexSearcher final final = if == -- while >= = -- throw new + + + = call long.getIndexReader() call long.getIndexReader() call long.getIndexReader() call long.getIndexReader() call long.getIndexReader() += catch if + continue decl_stmt org.apache.lucene.index.IndexReader final final = new decl_stmt org.apache.lucene.search.IndexSearcher final final = new decl_stmt org.apache.lucene.search.Query decl_stmt org.apache.lucene.search.Sort if != = = else if == && > decl_stmt org.apache.lucene.index.TermsEnum final final = = new <> while call Sort.next() call Sort.next() call Sort.next() call Sort.next() call Sort.next() != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call Sort.term() call Sort.term() call Sort.term() call Sort.term() call Sort.term() if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = if + call IndexSearcher.maxDoc() call IndexSearcher.maxDoc() call IndexSearcher.maxDoc() call IndexSearcher.maxDoc() call IndexSearcher.maxDoc() if != if = new new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else decl_stmt java.lang.String final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.lang.String final final if call TermsEnum.length() call TermsEnum.length() call TermsEnum.length() call TermsEnum.length() call TermsEnum.length() <= = else = call TermsEnum.substring() call TermsEnum.substring() call TermsEnum.substring() call TermsEnum.substring() call TermsEnum.substring() = new new if = else decl_stmt int final final = if == = new else if == = else if == = new new new else = new new new else = = if != try = catch if + if != call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() finally for : if != call long.decRef() call long.decRef() call long.decRef() call long.decRef() call long.decRef() if != && != && == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() int TopDocs decl List int TopDocs boolean ScoreDoc int decl int ScoreDoc ScoreDoc private private throws decl_stmt int = if != && == += if + + + + + if != + + + + + decl_stmt org.apache.lucene.search.TopDocs final final if == if != && != = else = else = decl_stmt org.apache.lucene.search.TopDocs final final if == if != && != = else = else = decl_stmt int final final = decl_stmt int = new decl_stmt java.util.List final final final < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if + + + call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc final final = + + + + + + call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() call TopDocs.getMaxScore() for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc final final = + + + + + + + + decl_stmt int if != && != = if != += else = decl_stmt boolean final final decl_stmt org.apache.lucene.search.ScoreDoc final final decl_stmt org.apache.lucene.search.ScoreDoc final final if < = if == = - decl_stmt org.apache.lucene.search.ScoreDoc final final = - = new if + else = = else = = = for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc final final = += if return new else return