org.apache.solr.search.join java.io.IOException import java.util.ArrayList import java.util.List import java.util.Set import java.util.TreeSet import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.queries.TermsQuery import org.apache.lucene.search.AutomatonQuery import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.Explanation import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.TermQuery import org.apache.lucene.search.Weight import org.apache.lucene.search.WildcardQuery import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefHash import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.DaciukMihovAutomatonBuilder import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.search.BitDocSet import org.apache.solr.search.DocSet import org.apache.solr.search.Filter import org.apache.solr.search.SolrIndexSearcher import class org.apache.solr.search.join.GraphQuery super super extends boolean boolean Query int String Query boolean String Weight public public throws decl_stmt org.apache.lucene.search.Weight = new return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() + + + + + if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() Scorer decl List boolean public public throws decl_stmt org.apache.lucene.search.Scorer final final = decl_stmt boolean final final = != && call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() == if decl_stmt java.util.List < = new < return else decl_stmt java.util.List < = new < return public public throws return public public = * FrontierQuery int BitDocSet FixedBitSet BitDocSet FixedBitSet Query DocSet BytesRefHash GraphTermsCollector private private throws decl_stmt int = decl_stmt org.apache.lucene.util.FixedBitSet = new decl_stmt org.apache.solr.search.BitDocSet = decl_stmt org.apache.lucene.util.FixedBitSet = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.solr.search.DocSet = do ++ if != - && >= = = else decl_stmt org.apache.solr.search.join.GraphTermsCollector = new = call org.apache.solr.search.join.GraphTermsCollector.getDocSet() call org.apache.solr.search.join.GraphTermsCollector.getDocSet() call org.apache.solr.search.join.GraphTermsCollector.getDocSet() call org.apache.solr.search.join.GraphTermsCollector.getDocSet() call org.apache.solr.search.join.GraphTermsCollector.getDocSet() decl_stmt org.apache.lucene.util.BytesRefHash = call org.apache.solr.search.join.GraphTermsCollector.getCollectorTerms() call org.apache.solr.search.join.GraphTermsCollector.getCollectorTerms() call org.apache.solr.search.join.GraphTermsCollector.getCollectorTerms() call org.apache.solr.search.join.GraphTermsCollector.getCollectorTerms() call org.apache.solr.search.join.GraphTermsCollector.getCollectorTerms() = call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() call org.apache.lucene.util.BytesRefHash.size() decl_stmt org.apache.solr.search.join.FrontierQuery = if == = else = call FrontierQuery.getQuery() call FrontierQuery.getQuery() call FrontierQuery.getQuery() call FrontierQuery.getQuery() call FrontierQuery.getQuery() = call org.apache.solr.search.join.FrontierQuery.getFrontierSize() call org.apache.solr.search.join.FrontierQuery.getFrontierSize() call org.apache.solr.search.join.FrontierQuery.getFrontierSize() call org.apache.solr.search.join.FrontierQuery.getFrontierSize() call org.apache.solr.search.join.FrontierQuery.getFrontierSize() if == && ! = call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.lucene.util.FixedBitSet.or(DocIdSetIterator) call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() if != - && >= break > if ! call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) call org.apache.lucene.util.FixedBitSet.andNot(FixedBitSet) decl_stmt org.apache.solr.search.BitDocSet = new if return call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() call BitDocSet.intersection() else return decl Builder decl BooleanQuery WildcardQuery private private throws decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt org.apache.lucene.search.WildcardQuery = new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.solr.search.DocSet = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return Automaton BytesRef decl TreeSet private private decl_stmt java.util.TreeSet final final final < = new < for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() decl_stmt org.apache.lucene.util.automaton.Automaton final final = return decl List decl Builder Automaton decl BooleanQuery Query AutomatonQuery BytesRef public public if == || == return else decl_stmt org.apache.lucene.search.Query = if decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.search.AutomatonQuery = new new = else decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.util.BytesRef = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = new if != decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.solr.search.join.FrontierQuery = new return DocIdSet public public throws if == = = decl_stmt org.apache.lucene.search.DocIdSet = return new == : call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() public public < public public throws return public public return public public return public public throws return public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = int int public public decl_stmt int final final = decl_stmt int = = * + == : call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + = * + : = * + == : call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() = * + : = * + == : call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + == : call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() call org.apache.lucene.search.Query.hashCode() = * + : return GraphQuery public public if == return if ! return if != return decl_stmt org.apache.solr.search.join.GraphQuery = if == if != return else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if != return if != return if == if != return else if ! call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() return if != return if == if != return else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if == if != return else if ! call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() return if != return return