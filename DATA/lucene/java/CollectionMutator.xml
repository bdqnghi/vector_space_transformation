org.apache.solr.cloud.overseer java.lang.invoke.MethodHandles import java.util.Collections import java.util.HashMap import java.util.LinkedHashMap import java.util.Map import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.ImplicitDocRouter import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.Utils import org.apache.solr.handler.admin.CollectionsHandler import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.cloud.ZkStateReader.COLLECTION_PROP import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.cloud.overseer.CollectionMutator ZkStateReader Logger decl Map String String decl Map DocCollection String Slice String String public public final final decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Slice = if == decl_stmt java.util.Map < = decl_stmt java.util.Map < = new <> decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.DocCollection = new return new else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + return String decl Map DocCollection String DocCollection public public final final decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = if ! return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt java.util.Map < = new <> call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() decl_stmt org.apache.solr.common.cloud.DocCollection = call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) return new DocCollection decl Map public public final final if ! return decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt java.util.Map < = call DocCollection.shallowCopy() call DocCollection.shallowCopy() call DocCollection.shallowCopy() call DocCollection.shallowCopy() call DocCollection.shallowCopy() for : if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return new call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() new call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getName() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call org.apache.solr.common.cloud.DocCollection.getZNodeVersion() call org.apache.solr.common.cloud.DocCollection.getZNodeVersion() call org.apache.solr.common.cloud.DocCollection.getZNodeVersion() call org.apache.solr.common.cloud.DocCollection.getZNodeVersion() call org.apache.solr.common.cloud.DocCollection.getZNodeVersion() call org.apache.solr.common.cloud.DocCollection.getZNode() call org.apache.solr.common.cloud.DocCollection.getZNode() call org.apache.solr.common.cloud.DocCollection.getZNode() call org.apache.solr.common.cloud.DocCollection.getZNode() call org.apache.solr.common.cloud.DocCollection.getZNode() decl Map decl Map DocCollection public static public static decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt java.util.Map < if == = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new new else = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = return static static return String static static decl_stmt java.lang.String = if == || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + return return