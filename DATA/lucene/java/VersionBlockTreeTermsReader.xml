org.apache.lucene.codecs.idversion java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Iterator import java.util.List import java.util.TreeMap import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.FieldsProducer import org.apache.lucene.codecs.PostingsReaderBase import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.Terms import org.apache.lucene.store.IndexInput import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.fst.PairOutputs.Pair import class org.apache.lucene.codecs.idversion.VersionBlockTreeTermsReader super super extends decl TreeMap PostingsReaderBase IndexInput BytesRef private static private static throws decl_stmt org.apache.lucene.util.BytesRef = new = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() = new call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() return long private private throws - - decl_stmt long = public public throws try finally call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() call decl TreeMap.clear() public < public < return call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() call decl TreeMap.keySet() public public throws assert != return call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() call decl TreeMap.get() public public return call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() if == return else try return + + catch return long public public decl_stmt long = call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() call PostingsReaderBase.ramBytesUsed() for : call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() call decl TreeMap.values() += return decl List public < public < decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() call PostingsReaderBase.checkIntegrity() public public return + + call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() call decl TreeMap.size() + + call PostingsReaderBase.toString() call PostingsReaderBase.toString() call PostingsReaderBase.toString() call PostingsReaderBase.toString() call PostingsReaderBase.toString() +