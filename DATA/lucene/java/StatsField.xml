org.apache.solr.handler.component java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.EnumSet import java.util.IdentityHashMap import java.util.Iterator import java.util.List import java.util.Map import java.util.Set import org.apache.commons.lang.StringUtils import org.apache.lucene.document.FieldType import org.apache.lucene.document.FieldType.LegacyNumericType import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionQuery import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.valuesource.FieldCacheSource import org.apache.lucene.queries.function.valuesource.QueryValueSource import org.apache.lucene.search.Query import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.params.StatsParams import org.apache.solr.common.util.StrUtils import org.apache.solr.request.DocValuesStats import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.search.DocIterator import org.apache.solr.search.DocSet import org.apache.solr.search.QParser import org.apache.solr.search.QParserPlugin import org.apache.solr.search.QueryParsing import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.SyntaxError import org.apache.solr.util.hll.HLL import org.apache.solr.util.hll.HLLType import com.google.common.hash.Hashing import com.google.common.hash.HashFunction import class org.apache.solr.handler.component.StatsField decl EnumSet decl List String HllOptions SolrIndexSearcher String decl String SchemaField decl EnumSet boolean decl List SolrParams decl Set ResponseBuilder boolean double decl List decl EnumSet ValueSource String decl List decl_stmt java.lang.String = if != decl_stmt java.util.List < = new < try for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() = return catch throw new + + + + + return try = return != catch throw new + + + + + public static public static try return catch return public < public < return return private static private static return instanceof : new String private static private static if instanceof decl_stmt java.lang.String = return return public public return Object QParser decl IdentityHashMap DocSet decl Map decl List public public throws decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.handler.component.ResponseBuilder.getResults() call org.apache.solr.handler.component.ResponseBuilder.getResults() call org.apache.solr.handler.component.ResponseBuilder.getResults() call org.apache.solr.handler.component.ResponseBuilder.getResults() call org.apache.solr.handler.component.ResponseBuilder.getResults() decl_stmt java.util.Map < = < call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() || == return decl_stmt java.util.IdentityHashMap < = new < for : decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if ! instanceof continue for : < if ! instanceof continue decl_stmt org.apache.solr.search.QParser = try call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() catch throw new + + + if call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() == return decl_stmt java.util.List < = new < if ! call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() if call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() != for : call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() if ! call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) call org.apache.solr.search.SolrIndexSearcher.getDocSet(List) public public throws if call decl EnumSet.isEmpty() call decl EnumSet.isEmpty() call decl EnumSet.isEmpty() call decl EnumSet.isEmpty() call decl EnumSet.isEmpty() return if != && call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() || call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() return else return StatsValues SchemaField decl List LeafReaderContext int decl Iterator IndexSchema private private throws decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() decl_stmt org.apache.solr.handler.component.StatsValues final final = decl_stmt java.util.List < = new <> for : decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) if call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() throw new + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.util.Iterator final final final < = call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() decl_stmt org.apache.lucene.index.LeafReaderContext = for = decl_stmt int final final = if == || >= + call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() do = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() == || >= + call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() assert >= call org.apache.solr.handler.component.StatsValues.setNextReader(LeafReaderContext) call org.apache.solr.handler.component.StatsValues.setNextReader(LeafReaderContext) call org.apache.solr.handler.component.StatsValues.setNextReader(LeafReaderContext) call org.apache.solr.handler.component.StatsValues.setNextReader(LeafReaderContext) call org.apache.solr.handler.component.StatsValues.setNextReader(LeafReaderContext) for : call org.apache.solr.handler.component.StatsValues.accumulate(NamedList) call org.apache.solr.handler.component.StatsValues.accumulate(NamedList) call org.apache.solr.handler.component.StatsValues.accumulate(NamedList) call org.apache.solr.handler.component.StatsValues.accumulate(NamedList) call org.apache.solr.handler.component.StatsValues.accumulate(NamedList) - for : - for : call org.apache.solr.handler.component.StatsValues.addFacet(String,Map) call org.apache.solr.handler.component.StatsValues.addFacet(String,Map) call org.apache.solr.handler.component.StatsValues.addFacet(String,Map) call org.apache.solr.handler.component.StatsValues.addFacet(String,Map) call org.apache.solr.handler.component.StatsValues.addFacet(String,Map) return public public return public public return public public return public < public < return public public return + + String decl Iterator Stat boolean private private decl_stmt boolean = decl_stmt java.util.Iterator < = call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt Stat = if != = if call Stat.parseParams() call Stat.parseParams() call Stat.parseParams() call Stat.parseParams() call Stat.parseParams() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() if ! || call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) for : if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call Stat.name() call Stat.name() call Stat.name() call Stat.name() call Stat.name() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() call decl EnumSet.add() for : call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() call decl EnumSet.addAll() call Stat.getDistribDeps() call Stat.getDistribDeps() call Stat.getDistribDeps() call Stat.getDistribDeps() call Stat.getDistribDeps() public public return call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() public public if return call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() if call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() call decl EnumSet.contains() return return public < public < return public public return public public return public public return decl LegacyNumericType int int int double String decl FieldType public static public static throws decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if return decl_stmt LegacyNumericType final final final final final = decl_stmt int = decl_stmt int = if || -- try decl_stmt double final final = if < || < throw new = + int * - decl_stmt int final final = - = + int * - catch if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) if < || < throw new + + + + + + if < || < throw new + + + decl_stmt HashFunction = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) : if == if == || ! throw new return new public public return public public return public public return public public return new - LegacyNumericType private static private static if == return decl_stmt LegacyNumericType final final = return == :