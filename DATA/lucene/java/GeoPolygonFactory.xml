org.apache.lucene.spatial3d.geom java.util.ArrayList import java.util.BitSet import java.util.List import java.util.Random import java.util.Iterator import java.util.Set import java.util.HashSet import java.util.Map import java.util.HashMap import class org.apache.lucene.spatial3d.geom.GeoPolygonFactory double public static public static final final final final final < final final return GeoCompositePolygon public static public static final final final final final < final final final final final < decl_stmt GeoCompositePolygon final final = new if new + new - + == return return public static public static final final final final final < return GeoPoint Boolean Random public static public static final final final final final < final final final < decl_stmt java.util.Random final final = new while decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = decl_stmt java.lang.Boolean final final = if != return GeoCompositePolygon SidedPlane public static public static final final final final final < final final final < final final final final decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final = new decl_stmt GeoCompositePolygon = new if new == if = new new return = new new new return else if ! return = new new new return double double double double double double double double double double GeoPoint double double int double double double double private static private static final final final final final final final < decl_stmt int final final = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = decl_stmt double final final = * * - decl_stmt double final final = - * decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = * decl_stmt double final final = * decl_stmt double final final = call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() decl_stmt double final final = call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() call GeoPoint.getLatitude() decl_stmt double final final = call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() decl_stmt double final final = call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() call org.apache.lucene.spatial3d.geom.GeoPoint.getLongitude() decl_stmt double final final = * - * decl_stmt double final final = decl_stmt double final final = * + * decl_stmt double final final = * - * decl_stmt double final final = * + * decl_stmt double final final = return double Double double Double Double double double double double double double private static private static final final final final final < decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double = decl_stmt java.lang.Double = for final final : decl_stmt java.lang.Double final final = if == return if != decl_stmt double = - if < - += * if > -= * if - < return += = if != decl_stmt java.lang.Double final final = if == return decl_stmt double = - if < - += * if > -= * if - < return += if < return return > double double double double double private static private static final final final final final final final final final final decl_stmt double final final = * + * decl_stmt double final final = - * + * decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = - * + * if * + * < return return decl Iterator SidedPlane Boolean decl List Edge int decl List decl Iterator BitSet Edge EdgeBuffer decl List Edge GeoPoint BitSet BitSet Edge Edge public static public static final final final final final final final < final final final final final final final final final final final < final final decl_stmt EdgeBuffer final final = new decl_stmt sun.awt.geom.Edge = call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() decl_stmt sun.awt.geom.Edge = while if == break decl_stmt java.lang.Boolean final final = if == return if = call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() call EdgeBuffer.pickOne() = continue = call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() if == break decl_stmt java.util.Iterator final final final < = call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt sun.awt.geom.Edge final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final = new decl_stmt java.util.Iterator final final final < = call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() call EdgeBuffer.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt sun.awt.geom.Edge final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if == continue decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final if != && != && ! call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) = else if != && != && ! call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) call org.apache.lucene.spatial3d.geom.SidedPlane.isWithin(double,double,double) = else = if != decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.util.BitSet final final = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) if == return decl_stmt sun.awt.geom.Edge = call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.util.BitSet final final = new decl_stmt int = while call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if == break call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) ++ = call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call EdgeBuffer.getPrevious() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - new == return decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.util.BitSet final final = new = call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() = while call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if == break call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) ++ = call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call EdgeBuffer.getNext() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - new == return return if == return return GeoPolygon BitSet boolean Edge decl List GeoPolygon private static private static final final final final final final final final final < final final if == return if < throw new + + decl_stmt java.util.List final final final < = new < decl_stmt org.apache.lucene.util.BitSet final final = new - decl_stmt sun.awt.geom.Edge = decl_stmt boolean = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if < - call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) else = = if != && != && > decl_stmt GeoPolygon final final = new if call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() return decl_stmt GeoPolygon final final = new if != && == || == if call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() return return GeoPolygon Edge GeoPolygon BitSet Edge int decl Iterator decl Set decl List boolean decl List Edge Edge Edge SidedPlane boolean SidedPlane Edge private static private static final final final final final final final final final final final < final final decl_stmt java.util.Set final final final < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt sun.awt.geom.Edge = decl_stmt sun.awt.geom.Edge = while if == break decl_stmt sun.awt.geom.Edge final final = if decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final if != = new else = decl_stmt boolean = decl_stmt java.util.Iterator final final final < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt sun.awt.geom.Edge final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && != if != if = break if != if = break if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = continue break while if == break decl_stmt sun.awt.geom.Edge final final = if decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final if != = new else = decl_stmt boolean = decl_stmt java.util.Iterator final final final < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt sun.awt.geom.Edge final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && != if != if = break if != if = break if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = continue break if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < return decl_stmt java.util.List final final final < = new < call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + decl_stmt org.apache.lucene.util.BitSet final final = new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt boolean final final if == if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < throw new decl_stmt sun.awt.geom.Edge = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = while if == break call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) ++ = = else decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final = new decl_stmt sun.awt.geom.Edge final final = new decl_stmt java.util.List final final final < = new < call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() = decl_stmt sun.awt.geom.Edge = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = while call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) call java.util.BitSet.set(int,int,boolean) ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if == break = if != && != && > decl_stmt GeoPolygon final final = new if call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() return decl_stmt GeoPolygon final final = new if != && == || == if call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() return return private static private static final final final final final < final final final final if ! return if != && ! return return private static private static final final final final final < for final final : if ! return return private static private static while < += while >= -= return public public return public public final final return == public public return != Edge public public decl_stmt sun.awt.geom.Edge final final = if != = if == = return public public throw new public public final final return public public final final return Edge Edge public public final final final < final final decl_stmt sun.awt.geom.Edge final final = decl_stmt sun.awt.geom.Edge final final = - for final final : if == = public public = public public return public < public < return new public public return