org.apache.lucene.util java.util.* import java.util.regex.Matcher import java.util.regex.Pattern import junit.framework.Assert import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.junit.runner.JUnitCore import org.junit.runner.Result import org.junit.runner.notification.Failure import class org.apache.lucene.util.TestExceptionInBeforeClassHooks super super extends Thread public static public static throws decl_stmt java.lang.Thread = new public public throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public throw new public public Thread public public throws decl_stmt java.lang.Thread = new public public throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public throw new Thread public public throws decl_stmt java.lang.Thread = new public public throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public throw new Thread public public throws decl_stmt java.lang.Thread = new public public throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public throw new Thread public public throws decl_stmt java.lang.Thread = new public public throw new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public throw new public public throws Result public public decl_stmt javax.naming.spi.Result = call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures() decl ArrayList Matcher Result public public decl_stmt javax.naming.spi.Result = call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() decl_stmt java.util.ArrayList < = new <> for : call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures() decl_stmt java.util.regex.Matcher = while call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() Result public public decl_stmt javax.naming.spi.Result = call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getRunCount() call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures() call Result.getFailures()