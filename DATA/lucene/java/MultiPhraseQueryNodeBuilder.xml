org.apache.lucene.queryparser.flexible.standard.builders java.util.LinkedList import java.util.List import java.util.TreeMap import org.apache.lucene.index.Term import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder import org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.standard.nodes.MultiPhraseQueryNode import org.apache.lucene.search.MultiPhraseQuery import org.apache.lucene.search.TermQuery import class org.apache.lucene.queryparser.flexible.standard.builders.MultiPhraseQueryNodeBuilder super super implements decl List decl Builder decl List decl TreeMap FieldQueryNode decl MultiPhraseQuery MultiPhraseQueryNode public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.nodes.MultiPhraseQueryNode = decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt java.util.List < = call MultiPhraseQueryNode.getChildren() call MultiPhraseQueryNode.getChildren() call MultiPhraseQueryNode.getChildren() call MultiPhraseQueryNode.getChildren() call MultiPhraseQueryNode.getChildren() if != decl_stmt java.util.TreeMap < < = new <> for : decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode = decl_stmt org.apache.lucene.search.TermQuery = call decl TreeMap.getTag() call decl TreeMap.getTag() call decl TreeMap.getTag() call decl TreeMap.getTag() call decl TreeMap.getTag() decl_stmt java.util.List < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() if == = new <> call decl List.put() call decl List.put() call decl List.put() call decl List.put() call decl List.put() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl TreeMap.getPositionIncrement() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call FieldQueryNode.getTerm() call FieldQueryNode.getTerm() call FieldQueryNode.getTerm() call FieldQueryNode.getTerm() call FieldQueryNode.getTerm() for : call decl List.keySet() call decl List.keySet() call decl List.keySet() call decl List.keySet() call decl List.keySet() decl_stmt java.util.List < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl MultiPhraseQuery.add() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build() call decl MultiPhraseQuery.build()