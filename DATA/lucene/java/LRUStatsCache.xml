org.apache.solr.search.stats java.io.IOException import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.List import java.util.Map import java.util.Map.Entry import java.util.concurrent.ConcurrentHashMap import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.search.CollectionStatistics import org.apache.lucene.search.TermStatistics import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.ShardParams import org.apache.solr.core.PluginInfo import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.handler.component.ShardRequest import org.apache.solr.handler.component.ShardResponse import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.FastLRUCache import org.apache.solr.search.SolrCache import org.apache.solr.search.SolrIndexSearcher import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.search.stats.LRUStatsCache super super extends Map decl Map Logger decl Map decl Map decl FastLRUCache public public call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call decl FastLRUCache.size() call decl FastLRUCache.size() call decl FastLRUCache.size() call decl FastLRUCache.size() call decl FastLRUCache.size() return new public public call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call decl FastLRUCache.init() call decl FastLRUCache.init() call decl FastLRUCache.init() call decl FastLRUCache.init() call decl FastLRUCache.init() protected protected < call decl FastLRUCache.put() call decl FastLRUCache.put() call decl FastLRUCache.put() call decl FastLRUCache.put() call decl FastLRUCache.put() protected protected < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() protected < protected < return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl Map decl SolrCache protected protected decl_stmt java.util.Map < = if != decl_stmt org.apache.solr.search.SolrCache < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new <> call decl SolrCache.init() call decl SolrCache.init() call decl SolrCache.init() call decl SolrCache.init() call decl SolrCache.init() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl SolrCache.put() call decl SolrCache.put() call decl SolrCache.put() call decl SolrCache.put() call decl SolrCache.put() decl SolrCache protected protected decl_stmt org.apache.solr.search.SolrCache < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return != call decl SolrCache.get() call decl SolrCache.get() call decl SolrCache.get() call decl SolrCache.get() call decl SolrCache.get() : protected protected < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() protected protected call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() TermStats public public throws decl_stmt org.apache.solr.search.stats.TermStats = if == call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() return else return call org.apache.solr.search.stats.TermStats.toTermStatistics() call org.apache.solr.search.stats.TermStats.toTermStatistics() call org.apache.solr.search.stats.TermStats.toTermStatistics() call org.apache.solr.search.stats.TermStats.toTermStatistics() call org.apache.solr.search.stats.TermStats.toTermStatistics() CollectionStats public public throws decl_stmt org.apache.solr.search.stats.CollectionStats = if == call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() return else return call CollectionStats.toCollectionStatistics() call CollectionStats.toCollectionStatistics() call CollectionStats.toCollectionStatistics() call CollectionStats.toCollectionStatistics() call CollectionStats.toCollectionStatistics()