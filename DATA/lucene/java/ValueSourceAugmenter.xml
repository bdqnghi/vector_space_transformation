org.apache.solr.response.transform java.io.IOException import java.util.List import java.util.Map import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.IndexReader import org.apache.lucene.index.ReaderUtil import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrException import org.apache.solr.response.ResultContext import org.apache.solr.search.QParser import org.apache.solr.search.SolrIndexSearcher import class org.apache.solr.response.transform.ValueSourceAugmenter super super extends SolrIndexSearcher String decl List FunctionValues QParser Map ValueSource public public return IndexReader public public try decl_stmt org.apache.lucene.index.IndexReader = call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() = call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() call org.apache.solr.search.QParser.getReq() = catch throw new LeafReaderContext FunctionValues int int public public try decl_stmt int = decl_stmt org.apache.lucene.index.LeafReaderContext = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.queries.function.FunctionValues = if == = = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() decl_stmt int = - call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) call org.apache.lucene.queries.function.FunctionValues.objectVal(int) catch throw new + + + protected protected if !=