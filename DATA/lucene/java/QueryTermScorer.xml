org.apache.lucene.search.highlight java.util.HashMap import java.util.HashSet import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.index.IndexReader import org.apache.lucene.search.Query import class org.apache.lucene.search.highlight.QueryTermScorer super super implements decl HashMap decl HashSet CharTermAttribute float TextFragment float public public = return public public = new <> = = String WeightedTerm public public decl_stmt java.lang.String = call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() decl_stmt org.apache.lucene.search.highlight.WeightedTerm = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() if == return if ! call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() += call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() return call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() call org.apache.lucene.search.highlight.WeightedTerm.getWeight() public public return public public public public return