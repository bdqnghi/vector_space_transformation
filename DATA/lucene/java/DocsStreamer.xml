org.apache.solr.response java.io.IOException import java.util.ArrayList import java.util.HashSet import java.util.Iterator import java.util.List import java.util.Set import org.apache.lucene.document.Document import org.apache.lucene.index.IndexableField import org.apache.lucene.util.BytesRef import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrException import org.apache.solr.response.transform.DocTransformer import org.apache.solr.schema.BinaryField import org.apache.solr.schema.BoolField import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.schema.StrField import org.apache.solr.schema.TextField import org.apache.solr.schema.TrieDateField import org.apache.solr.schema.TrieDoubleField import org.apache.solr.schema.TrieField import org.apache.solr.schema.TrieFloatField import org.apache.solr.schema.TrieIntField import org.apache.solr.schema.TrieLongField import org.apache.solr.search.DocIterator import org.apache.solr.search.DocList import org.apache.solr.search.SolrReturnFields import class org.apache.solr.response.DocsStreamer super super implements decl solr DocIterator decl Set decl apache DocList DocTransformer decl response decl org decl ResultContext public public return public public return call decl response.hasNext() call decl response.hasNext() call decl response.hasNext() call decl response.hasNext() call decl response.hasNext() Document boolean int SolrDocument public public decl_stmt int = call decl response.nextDoc() call decl response.nextDoc() call decl response.nextDoc() call decl response.nextDoc() call decl response.nextDoc() ++ decl_stmt org.apache.solr.common.SolrDocument = if = new else try decl_stmt org.apache.lucene.document.Document = call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() = call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() if != call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() call decl org.getSearcher() catch throw new + if != decl_stmt boolean = call decl org.wantsScores() call decl org.wantsScores() call decl org.wantsScores() call decl org.wantsScores() call decl org.wantsScores() try call decl solr.transform() call decl solr.transform() call decl solr.transform() call decl solr.transform() call decl solr.transform() call decl response.score() call decl response.score() call decl response.score() call decl response.score() call decl response.score() : catch throw new return decl List Object SchemaField SolrDocument public static public static final final decl_stmt org.apache.solr.common.SolrDocument = new for : decl_stmt java.lang.Object = call org.apache.solr.common.SolrDocument.get(Object) call org.apache.solr.common.SolrDocument.get(Object) call org.apache.solr.common.SolrDocument.get(Object) call org.apache.solr.common.SolrDocument.get(Object) call org.apache.solr.common.SolrDocument.get(Object) if == decl_stmt org.apache.solr.schema.SchemaField = if != && call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() call org.apache.solr.schema.SchemaField.multiValued() decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) else call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) call org.apache.solr.common.SolrDocument.setField(String,Object) else call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) call org.apache.solr.common.SolrDocument.addField(String,Object) return public public BytesRef decl byte FieldType public static public static decl_stmt org.apache.solr.schema.FieldType = if != = if == decl_stmt org.apache.lucene.util.BytesRef = if != if == && == return else decl_stmt byte final final final = new return else return else if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call FieldType.getClass() call FieldType.getClass() call FieldType.getClass() call FieldType.getClass() call FieldType.getClass() return call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) else return call org.apache.solr.schema.FieldType.toExternal(IndexableField) call org.apache.solr.schema.FieldType.toExternal(IndexableField) call org.apache.solr.schema.FieldType.toExternal(IndexableField) call org.apache.solr.schema.FieldType.toExternal(IndexableField) call org.apache.solr.schema.FieldType.toExternal(IndexableField)