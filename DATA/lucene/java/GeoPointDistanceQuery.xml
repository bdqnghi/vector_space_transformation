org.apache.lucene.spatial.geopoint.search org.apache.lucene.index.IndexReader import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding import org.apache.lucene.geo.Rectangle import org.apache.lucene.geo.GeoUtils import class org.apache.lucene.spatial.geopoint.search.GeoPointDistanceQuery super super extends double double double private static private static if == || < throw new + return private static private static return private static private static return decl Builder decl BooleanQuery GeoPointDistanceQueryImpl double public public if < decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt double = if > += - decl_stmt org.apache.lucene.spatial.geopoint.search.GeoPointDistanceQueryImpl = new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new if < += decl_stmt org.apache.lucene.spatial.geopoint.search.GeoPointDistanceQueryImpl = new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return new new GeoPointDistanceQuery public public if == return if ! instanceof return if ! return decl_stmt org.apache.lucene.spatial.geopoint.search.GeoPointDistanceQuery = if != return if != return if != return return int long public public decl_stmt int = decl_stmt long = = * + ^ >>> = = * + ^ >>> = = * + ^ >>> return StringBuilder public public decl_stmt java.lang.StringBuilder final final = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) public public return public public return public public return