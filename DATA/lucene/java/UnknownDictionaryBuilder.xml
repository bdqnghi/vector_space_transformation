org.apache.lucene.analysis.ja.util java.io.File import java.io.FileInputStream import java.io.IOException import java.io.InputStreamReader import java.io.LineNumberReader import java.nio.charset.Charset import java.nio.charset.CharsetDecoder import java.nio.charset.CodingErrorAction import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.List import org.apache.lucene.analysis.ja.dict.CharacterDefinition import class org.apache.lucene.analysis.ja.util.UnknownDictionaryBuilder String String UnknownDictionaryWriter public public throws decl_stmt org.apache.lucene.analysis.ja.util.UnknownDictionaryWriter = + + + + return public public throws return UnknownDictionaryWriter decl String int decl List InputStreamReader int CharsetDecoder Charset String FileInputStream LineNumberReader public public throws decl_stmt org.apache.lucene.analysis.ja.util.UnknownDictionaryWriter = new * * decl_stmt FileInputStream = new decl_stmt java.nio.charset.Charset = decl_stmt CharsetDecoder = call Charset.newDecoder() call Charset.newDecoder() call Charset.newDecoder() call Charset.newDecoder() call Charset.newDecoder() decl_stmt InputStreamReader = new decl_stmt java.io.LineNumberReader = new call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() decl_stmt java.util.List < = new <> decl_stmt java.lang.String = while = call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() != decl_stmt java.lang.String final final final = + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new < public public decl_stmt int = decl_stmt int = return - for : call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() call UnknownDictionaryWriter.put() return int int public public decl_stmt int = decl_stmt int = return - FileInputStream int int int InputStreamReader int decl String int decl String String int String LineNumberReader public public throws decl_stmt FileInputStream = new decl_stmt InputStreamReader = new decl_stmt java.io.LineNumberReader = new decl_stmt java.lang.String = while = call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() call java.io.LineNumberReader.readLine() != = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == continue if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) if ! decl_stmt int = else decl_stmt java.lang.String = decl_stmt int = decl_stmt int = for = <= ++ else decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) decl_stmt java.lang.String = decl_stmt int = decl_stmt int = decl_stmt int =