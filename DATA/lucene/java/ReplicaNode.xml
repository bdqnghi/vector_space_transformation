org.apache.lucene.replicator.nrt java.io.IOException import java.io.PrintStream import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ConcurrentMap import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.SegmentInfos import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.SearcherFactory import org.apache.lucene.search.TermQuery import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.BufferedChecksumIndexInput import org.apache.lucene.store.ByteArrayIndexInput import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexOutput import org.apache.lucene.store.Lock import org.apache.lucene.util.IOUtils import class org.apache.lucene.replicator.nrt.ReplicaNode super super extends Object decl Set Lock long decl Collection decl Set decl ConcurrentMap decl Collection ReplicaFileDeleter CopyJob IndexSearcher boolean decl Collection long CopyJob decl Collection String String long int decl byte boolean SegmentInfos long long SegmentInfos protected synchronized protected synchronized throws if == throw new try decl_stmt java.lang.String = decl_stmt long = - for : if decl_stmt long = + if > = decl_stmt org.apache.lucene.index.SegmentInfos if == = new else + = + call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() + + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() decl_stmt java.util.Collection < = call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) + + + call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteUnknownFiles(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteUnknownFiles(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteUnknownFiles(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteUnknownFiles(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteUnknownFiles(String) + decl_stmt java.lang.String = call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() decl_stmt long if == assert call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() == = - else = + decl_stmt boolean if call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() call org.apache.lucene.index.SegmentInfos.size() > && != - && != assert < decl_stmt long final final = + + + + decl_stmt org.apache.lucene.replicator.nrt.CopyJob = + assert call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.getRefCount(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.getRefCount(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.getRefCount(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.getRefCount(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.getRefCount(String) == call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() if instanceof && throw new + + decl_stmt boolean = call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() call decl Collection.remove() assert while = + + + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() + call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() decl_stmt java.util.Collection < = call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() try call CopyJob.runBlocking() call CopyJob.runBlocking() call CopyJob.runBlocking() call CopyJob.runBlocking() call CopyJob.runBlocking() call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() break catch call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() if + + else throw = call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() decl_stmt byte = call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() decl_stmt org.apache.lucene.index.SegmentInfos = new new call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call org.apache.lucene.index.SegmentInfos.updateGeneration(SegmentInfos) call org.apache.lucene.index.SegmentInfos.updateGeneration(SegmentInfos) call org.apache.lucene.index.SegmentInfos.updateGeneration(SegmentInfos) call org.apache.lucene.index.SegmentInfos.updateGeneration(SegmentInfos) call org.apache.lucene.index.SegmentInfos.updateGeneration(SegmentInfos) = assert call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() == call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() + + call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() + call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() + call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() + = call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() - / call CopyJob.getTotalBytesCopied() call CopyJob.getTotalBytesCopied() call CopyJob.getTotalBytesCopied() call CopyJob.getTotalBytesCopied() call CopyJob.getTotalBytesCopied() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() = else = = if call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() < + call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() call org.apache.lucene.index.SegmentInfos.getGeneration() + + call org.apache.lucene.index.SegmentInfos.setNextWriteGeneration(long) call org.apache.lucene.index.SegmentInfos.setNextWriteGeneration(long) call org.apache.lucene.index.SegmentInfos.setNextWriteGeneration(long) call org.apache.lucene.index.SegmentInfos.setNextWriteGeneration(long) call org.apache.lucene.index.SegmentInfos.setNextWriteGeneration(long) = new decl_stmt org.apache.lucene.search.IndexSearcher = try decl_stmt int = call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) new new + + + call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() finally if = catch if == else String SegmentInfos decl Collection decl Map public public throws synchronized decl_stmt org.apache.lucene.index.SegmentInfos decl_stmt java.util.Collection < synchronized = = call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.index.SegmentInfos.files(boolean) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) + + + call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() + + decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.lucene.index.SegmentInfos.setUserData(Map,boolean) call org.apache.lucene.index.SegmentInfos.setUserData(Map,boolean) call org.apache.lucene.index.SegmentInfos.setUserData(Map,boolean) call org.apache.lucene.index.SegmentInfos.setUserData(Map,boolean) call org.apache.lucene.index.SegmentInfos.setUserData(Map,boolean) call org.apache.lucene.index.SegmentInfos.commit(Directory) call org.apache.lucene.index.SegmentInfos.commit(Directory) call org.apache.lucene.index.SegmentInfos.commit(Directory) call org.apache.lucene.index.SegmentInfos.commit(Directory) call org.apache.lucene.index.SegmentInfos.commit(Directory) if != decl_stmt java.lang.String = call org.apache.lucene.index.SegmentInfos.getSegmentsFileName() call org.apache.lucene.index.SegmentInfos.getSegmentsFileName() call org.apache.lucene.index.SegmentInfos.getSegmentsFileName() call org.apache.lucene.index.SegmentInfos.getSegmentsFileName() call org.apache.lucene.index.SegmentInfos.getSegmentsFileName() + + + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() + + call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() + + call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) + call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() + + CopyState int IndexSearcher decl Collection SegmentInfos decl byte throws decl_stmt org.apache.lucene.replicator.nrt.CopyState = + + : + + synchronized if = if == + = else assert + if return decl_stmt byte = decl_stmt org.apache.lucene.index.SegmentInfos = new new assert call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() == + call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() call org.apache.lucene.index.SegmentInfos.getVersion() + + call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() call org.apache.lucene.index.SegmentInfos.toString() if != decl_stmt java.util.Collection < = call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() call CopyState.files() + call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.incRef(Collection) call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() + + call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() + if call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() call CopyState.completedMergeFiles() == + for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) = decl_stmt int decl_stmt org.apache.lucene.search.IndexSearcher = try = call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) call org.apache.lucene.search.IndexSearcher.count(Query) new new finally - / long decl Collection long CopyJob public synchronized public synchronized throws if throw new + assert != if = decl_stmt long = + if == return if < + + + + return decl_stmt long final final = decl_stmt org.apache.lucene.replicator.nrt.CopyJob = try = + new public public try catch throw new catch + if = return assert == call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() call CopyJob.getCopyState() decl_stmt java.util.Collection < = call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() call CopyJob.getFileNames() + if != call org.apache.lucene.replicator.nrt.CopyJob.transferAndCancel(CopyJob) call org.apache.lucene.replicator.nrt.CopyJob.transferAndCancel(CopyJob) call org.apache.lucene.replicator.nrt.CopyJob.transferAndCancel(CopyJob) call org.apache.lucene.replicator.nrt.CopyJob.transferAndCancel(CopyJob) call org.apache.lucene.replicator.nrt.CopyJob.transferAndCancel(CopyJob) assert call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() = for : call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() assert call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() == : + + synchronized for : if + + + + try call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() catch + if = return return public public try catch throw new public synchronized public synchronized return != public public return || || || public public throws synchronized = if != call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() synchronized + call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call ReplicaFileDeleter.decRef() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() + for : call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() = protected synchronized protected synchronized throws if != + + + + + + for : call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) call org.apache.lucene.replicator.nrt.ReplicaFileDeleter.deleteIfNoRef(String) assert > : + + + = call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() call decl Set.clear() else + CopyJob decl Set boolean long protected synchronized protected synchronized < throws decl_stmt org.apache.lucene.replicator.nrt.CopyJob decl_stmt long final final = decl_stmt java.util.Set < = + + + for : assert call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == : + + assert call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() == : + + = + + + new public public throws call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() + + + call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() synchronized if call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() call CopyJob.getFailed() == if != + call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() else decl_stmt boolean = for : if call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() + + = if call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() + + = if call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() call CopyJob.cancel() else call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() call CopyJob.finish() + for : assert call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == : + + + + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() call CopyJob.start() assert call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() call CopyJob.getFileNamesToCopy() == call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return boolean public public throws call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() + + + synchronized if == if != + else decl_stmt boolean = for : if call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() + + = if call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() + + = if else + for : assert call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == : + + + + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else public public throws return boolean FileMetaData decl List String public < < public < < < throws decl_stmt boolean = decl_stmt java.util.List < < = new <> for < : decl_stmt java.lang.String = decl_stmt FileMetaData = if == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return FileMetaData private private throws decl_stmt FileMetaData = if == return if == || == if + + return else return public public if call decl ConcurrentMap.putIfAbsent() call decl ConcurrentMap.putIfAbsent() call decl ConcurrentMap.putIfAbsent() call decl ConcurrentMap.putIfAbsent() call decl ConcurrentMap.putIfAbsent() != throw new + + public public if call decl ConcurrentMap.remove() call decl ConcurrentMap.remove() call decl ConcurrentMap.remove() call decl ConcurrentMap.remove() call decl ConcurrentMap.remove() == throw new + +