org.apache.lucene.queries java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.List import java.util.Objects import java.util.Set import java.util.SortedSet import org.apache.lucene.index.Fields import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.PrefixCodedTerms import org.apache.lucene.index.PrefixCodedTerms.TermIterator import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.TermState import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BulkScorer import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.ConstantScoreScorer import org.apache.lucene.search.ConstantScoreWeight import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.TermQuery import org.apache.lucene.search.Weight import org.apache.lucene.util.Accountable import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.DocIdSetBuilder import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.queries.TermsQuery super super extends super implements int int long PrefixCodedTerms int decl BooleanQuery decl Builder public public throws decl_stmt int final final = if call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() <= decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt TermIterator = call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() for = call decl Builder.next() call decl Builder.next() call decl Builder.next() call decl Builder.next() call decl Builder.next() != = call decl Builder.next() call decl Builder.next() call decl Builder.next() call decl Builder.next() call decl Builder.next() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl Builder.field() call decl Builder.field() call decl Builder.field() call decl Builder.field() call decl Builder.field() return new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return TermsQuery public public if == return if ! return decl_stmt org.apache.lucene.search.join.TermsQuery = return == && call org.apache.lucene.index.PrefixCodedTerms.equals(Object) call org.apache.lucene.index.PrefixCodedTerms.equals(Object) call org.apache.lucene.index.PrefixCodedTerms.equals(Object) call org.apache.lucene.index.PrefixCodedTerms.equals(Object) call org.apache.lucene.index.PrefixCodedTerms.equals(Object) public public return * + public public return StringBuilder TermIterator boolean public public decl_stmt java.lang.StringBuilder = new decl_stmt boolean = decl_stmt TermIterator = call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() for = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() != = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) new call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return + call org.apache.lucene.index.PrefixCodedTerms.ramBytesUsed() call org.apache.lucene.index.PrefixCodedTerms.ramBytesUsed() call org.apache.lucene.index.PrefixCodedTerms.ramBytesUsed() call org.apache.lucene.index.PrefixCodedTerms.ramBytesUsed() call org.apache.lucene.index.PrefixCodedTerms.ramBytesUsed() public < public < return WeightOrDocIdSet Terms TermIterator PostingsEnum TermsEnum Fields DocIdSetBuilder Query TermContext String decl Builder decl BooleanQuery Scorer LeafReader int Weight decl List String public public throws return new public public < private private throws decl_stmt org.apache.lucene.index.LeafReader final final = decl_stmt int final final = assert call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() > : decl_stmt java.util.List < = new <> decl_stmt org.apache.lucene.util.DocIdSetBuilder = decl_stmt Fields final final = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt java.lang.String = decl_stmt org.apache.lucene.index.Terms = decl_stmt org.apache.lucene.index.TermsEnum = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt TermIterator = call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() for = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() != = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() decl_stmt java.lang.String = call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() if != = call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() if == = else = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() = if != && call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) if == = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else assert call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) for : = call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) = if != assert == decl_stmt org.apache.lucene.util.fst.Builder = new for : decl_stmt org.apache.lucene.index.TermContext final final = new call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.Query = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.search.Weight final final = call Query.normalize() call Query.normalize() call Query.normalize() call Query.normalize() call Query.normalize() return new else assert != return new call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() private private throws if == return decl_stmt org.apache.lucene.search.DocIdSetIterator final final = if == return return new public public throws decl_stmt WeightOrDocIdSet final final = if != return call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() else decl_stmt org.apache.lucene.search.Scorer final final = if == return return new public public throws decl_stmt WeightOrDocIdSet final final = if != return call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() call Scorer.weight() else return public public < Terms TermIterator PostingsEnum TermsEnum Fields DocIdSetBuilder Query TermContext String decl Builder decl BooleanQuery LeafReader int decl List String private private throws decl_stmt org.apache.lucene.index.LeafReader final final = decl_stmt int final final = assert call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() call org.apache.lucene.index.PrefixCodedTerms.size() > : decl_stmt java.util.List < = new <> decl_stmt org.apache.lucene.util.DocIdSetBuilder = decl_stmt Fields final final = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt java.lang.String = decl_stmt org.apache.lucene.index.Terms = decl_stmt org.apache.lucene.index.TermsEnum = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt TermIterator = call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() call org.apache.lucene.index.PrefixCodedTerms.iterator() for = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() != = call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() call TermIterator.next() decl_stmt java.lang.String = call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() call TermIterator.field() if != = call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() if == = else = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() = if != && call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) if == = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else assert call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) for : = call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) call org.apache.lucene.util.DocIdSetBuilder.add(int) = if != assert == decl_stmt org.apache.lucene.util.fst.Builder = new for : decl_stmt org.apache.lucene.index.TermContext final final = new call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl Builder.register() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.Query = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.search.Weight final final = call Query.normalize() call Query.normalize() call Query.normalize() call Query.normalize() call Query.normalize() return new else assert != return new call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() call org.apache.lucene.util.DocIdSetBuilder.build() DocIdSetIterator private private throws if == return decl_stmt org.apache.lucene.search.DocIdSetIterator final final = if == return return new Scorer WeightOrDocIdSet public public throws decl_stmt WeightOrDocIdSet final final = if != return call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() else decl_stmt org.apache.lucene.search.Scorer final final = if == return return new WeightOrDocIdSet public public throws decl_stmt WeightOrDocIdSet final final = if != return call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() call WeightOrDocIdSet.weight() else return