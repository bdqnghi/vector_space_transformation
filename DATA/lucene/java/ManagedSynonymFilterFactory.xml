org.apache.solr.rest.schema.analysis java.io.IOException import java.io.Reader import java.lang.invoke.MethodHandles import java.text.ParseException import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.TreeMap import java.util.TreeSet import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.synonym.SynonymFilterFactory import org.apache.lucene.analysis.synonym.SynonymMap import org.apache.lucene.analysis.util.ResourceLoader import org.apache.lucene.util.CharsRef import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrResourceLoader import org.apache.solr.response.SolrQueryResponse import org.apache.solr.rest.BaseSolrResource import org.apache.solr.rest.ManagedResource import org.apache.solr.rest.ManagedResourceStorage.StorageIO import org.restlet.data.Status import org.restlet.resource.ResourceException import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.rest.schema.analysis.ManagedSynonymFilterFactory super super extends String SynonymFilterFactory Logger String decl Set < < decl_stmt java.util.Set < = if if == return = new <> for < : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() else = return public public return CasePreservedSynonymMappings String Object String boolean decl Map decl NamedList decl Set protected protected < throws decl_stmt org.apache.solr.common.util.NamedList < = < decl_stmt java.lang.String = call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() if != && ! throw new + + if call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() == call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt boolean = = new <> if != decl_stmt java.util.Map < = < for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.lang.String = decl_stmt CasePreservedSynonymMappings = if == = new decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if ! instanceof throw new + + + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt java.util.Set < = new <> call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) boolean boolean protected protected decl_stmt boolean = decl_stmt boolean = if instanceof = < else if instanceof = < else throw new + + return : decl Set String boolean CasePreservedSynonymMappings protected protected < decl_stmt boolean = for : decl_stmt java.lang.String = = decl_stmt CasePreservedSynonymMappings = if == = new decl_stmt java.util.Set < = new <> call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() = if ! && call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() != return String String boolean Object CasePreservedSynonymMappings decl List decl Set protected protected < decl_stmt boolean = for : decl_stmt java.lang.String = = decl_stmt CasePreservedSynonymMappings = if == = new decl_stmt java.util.Set < = call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() decl_stmt java.lang.Object = if instanceof decl_stmt java.lang.String = if == = new <> call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = else if instanceof decl_stmt java.util.List < = < if == = new <> call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() for : if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = else throw new + + + + if ! && call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() != return decl Map protected < < protected < < decl_stmt java.util.Map < < = new <> for : for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return protected protected return && != : public public return Boolean public public < decl_stmt java.lang.Boolean = return == : boolean CasePreservedSynonymMappings SolrQueryResponse String decl Set public public decl_stmt org.apache.solr.response.SolrQueryResponse = if != decl_stmt boolean = decl_stmt java.lang.String = decl_stmt CasePreservedSynonymMappings = decl_stmt java.util.Set < = != call CasePreservedSynonymMappings.getMappings() call CasePreservedSynonymMappings.getMappings() call CasePreservedSynonymMappings.getMappings() call CasePreservedSynonymMappings.getMappings() call CasePreservedSynonymMappings.getMappings() : if == throw new call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) else call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) call org.apache.solr.response.SolrQueryResponse.add(String,Object) boolean CasePreservedSynonymMappings String public synchronized public synchronized decl_stmt boolean = decl_stmt java.lang.String = decl_stmt CasePreservedSynonymMappings = if == throw new if else if call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() if call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() call CasePreservedSynonymMappings.mappings() else throw new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) boolean String String public public throws decl_stmt boolean = for : for : for : decl_stmt java.lang.String = decl_stmt java.lang.String = new new public public return + protected < extends extends protected < extends extends return decl Map decl NamedList ManagedSynonymParser public public < final final throws decl_stmt org.apache.solr.common.util.NamedList < = < call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt java.util.Map < = new <> for < : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new protected protected throws decl_stmt ManagedSynonymParser = new call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() return call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() try call org.apache.lucene.analysis.synonym.SynonymFilterFactory.inform(ResourceLoader) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.inform(ResourceLoader) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.inform(ResourceLoader) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.inform(ResourceLoader) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.inform(ResourceLoader) catch throw new ManagedSynonymParser protected protected throws decl_stmt ManagedSynonymParser = new call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() call ManagedSynonymParser.parse() return call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() call ManagedSynonymParser.build() public public if == throw new + return call org.apache.lucene.analysis.synonym.SynonymFilterFactory.create(TokenStream) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.create(TokenStream) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.create(TokenStream) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.create(TokenStream) call org.apache.lucene.analysis.synonym.SynonymFilterFactory.create(TokenStream)