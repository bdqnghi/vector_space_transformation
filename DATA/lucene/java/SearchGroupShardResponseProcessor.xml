org.apache.solr.search.grouping.distributed.responseprocessor org.apache.lucene.search.Sort import org.apache.lucene.search.grouping.SearchGroup import org.apache.lucene.util.BytesRef import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.common.SolrException import org.apache.solr.common.params.ShardParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.handler.component.ShardRequest import org.apache.solr.handler.component.ShardResponse import org.apache.solr.response.SolrQueryResponse import org.apache.solr.search.SortSpec import org.apache.solr.search.grouping.distributed.ShardResponseProcessor import org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult import org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer import java.io.IOException import java.io.PrintWriter import java.io.StringWriter import java.util.* import class org.apache.solr.search.grouping.distributed.responseprocessor.SearchGroupShardResponseProcessor super super implements decl Map Sort decl Map Integer Integer decl Map decl NamedList Throwable decl Map int StringWriter Sort decl NamedList decl Collection decl List decl SimpleOrderedMap decl Collection SortSpec decl String decl Set int SearchGroupsResultTransformer SearchGroupsFieldCommandResult public public decl_stmt org.apache.solr.search.SortSpec = decl_stmt org.apache.lucene.search.Sort = decl_stmt java.lang.String final final final = decl_stmt org.apache.lucene.search.Sort = if == = decl_stmt java.util.Map final final final < < < < = new <> decl_stmt java.util.Map final final final < < < < = new <> for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new < < < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new < < < if ! new < < < decl_stmt org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer = new try decl_stmt int = decl_stmt int = decl_stmt org.apache.solr.common.util.NamedList < = if = new <> + for : if != decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = new <> if != decl_stmt java.lang.Throwable = if instanceof = call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call Throwable.toString() call Throwable.toString() call Throwable.toString() call Throwable.toString() call Throwable.toString() decl_stmt StringWriter = new call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) call java.lang.Throwable.printStackTrace(PrintStreamOrWriter) new call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() else call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() if != call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() if != call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if && != if == continue = int decl_stmt org.apache.solr.common.util.NamedList < = < decl_stmt java.util.Map final final final < = call org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer.transformToNative(NamedList,Sort,Sort,String) call org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer.transformToNative(NamedList,Sort,Sort,String) call org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer.transformToNative(NamedList,Sort,Sort,String) call org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer.transformToNative(NamedList,Sort,Sort,String) call org.apache.solr.search.grouping.distributed.shardresultserializer.SearchGroupsResultTransformer.transformToNative(NamedList,Sort,Sort,String) for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.Integer final final = call SearchGroupsFieldCommandResult.getGroupCount() call SearchGroupsFieldCommandResult.getGroupCount() call SearchGroupsFieldCommandResult.getGroupCount() call SearchGroupsFieldCommandResult.getGroupCount() call SearchGroupsFieldCommandResult.getGroupCount() if != decl_stmt java.lang.Integer = != + : decl_stmt java.util.Collection final final final < < = call org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult.getSearchGroups() call org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult.getSearchGroups() call org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult.getSearchGroups() call org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult.getSearchGroups() call org.apache.solr.search.grouping.distributed.command.SearchGroupsFieldCommandResult.getSearchGroups() if == continue call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() for < : decl_stmt java.util.Map < < < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.Set < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() += = = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl_stmt java.util.List < < < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.util.Collection < < = call SortSpec.getOffset() call SortSpec.getOffset() call SortSpec.getOffset() call SortSpec.getOffset() call SortSpec.getOffset() call org.apache.solr.search.SortSpec.getCount() call org.apache.solr.search.SortSpec.getCount() call org.apache.solr.search.SortSpec.getCount() call org.apache.solr.search.SortSpec.getCount() call org.apache.solr.search.SortSpec.getCount() if == continue for < : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() catch throw new