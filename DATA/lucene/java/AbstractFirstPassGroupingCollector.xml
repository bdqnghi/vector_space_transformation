org.apache.lucene.search.grouping org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.* import java.io.IOException import java.util.* import class super super extends int int decl TreeSet int boolean decl int int decl LeafFieldComparator decl HashMap public public return int int decl Collection decl SearchGroup public < < public < < if < throw new + + if call int.size() call int.size() call int.size() call int.size() call int.size() <= return if == decl_stmt java.util.Collection final final final < < = new <> decl_stmt int = decl_stmt int final final = for < : if ++ < continue decl_stmt org.apache.lucene.search.grouping.SearchGroup < = new <> = if = new for = < ++ = call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return public public throws for : int decl CollectedSearchGroup int decl CollectedSearchGroup decl CollectedSearchGroup GROUP_VALUE_TYPE decl CollectedSearchGroup int decl CollectedSearchGroup public public throws if != for = ++ decl_stmt int final final = * if < return else if > break else if == return decl_stmt GROUP_VALUE_TYPE final final = decl_stmt CollectedSearchGroup final final final < = call int.get() call int.get() call int.get() call int.get() call int.get() if == if call int.size() call int.size() call int.size() call int.size() call int.size() < decl_stmt CollectedSearchGroup < = new <> = = call int.size() call int.size() call int.size() call int.size() call int.size() = + for : call int.put() call int.put() call int.put() call int.put() call int.put() if call int.size() call int.size() call int.size() call int.size() call int.size() == return decl_stmt CollectedSearchGroup final final final < = call int.pollLast() call int.pollLast() call int.pollLast() call int.pollLast() call int.pollLast() assert call int.size() call int.size() call int.size() call int.size() call int.size() == - call int.remove() call int.remove() call int.remove() call int.remove() call int.remove() = = + for : call int.put() call int.put() call int.put() call int.put() call int.put() call int.add() call int.add() call int.add() call int.add() call int.add() assert call int.size() call int.size() call int.size() call int.size() call int.size() == decl_stmt int final final = call int.last() call int.last() call int.last() call int.last() call int.last() for : return for = ++ decl_stmt int final final = * if < return else if > for = + < ++ break else if == return decl_stmt CollectedSearchGroup final final final < if != = call int.last() call int.last() call int.last() call int.last() call int.last() call int.remove() call int.remove() call int.remove() call int.remove() call int.remove() assert call int.size() call int.size() call int.size() call int.size() call int.size() == - else = = + decl_stmt int final final = = = if != call int.add() call int.add() call int.add() call int.add() call int.add() assert call int.size() call int.size() call int.size() call int.size() call int.size() == decl_stmt CollectedSearchGroup final final final < = call int.last() call int.last() call int.last() call int.last() call int.last() if == || != for : int decl FieldComparator decl Comparator private private decl_stmt java.util.Comparator final final final < < = new < < public public < < for = ++ decl_stmt org.apache.lucene.search.FieldComparator < = decl_stmt int final final = * call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() if != return else if == return - = new <> call int.addAll() call int.addAll() call int.addAll() call int.addAll() call int.addAll() call int.values() call int.values() call int.values() call int.values() call int.values() assert call int.size() call int.size() call int.size() call int.size() call int.size() > for : call decl FieldComparator.setBottom() call decl FieldComparator.setBottom() call decl FieldComparator.setBottom() call decl FieldComparator.setBottom() call decl FieldComparator.setBottom() call int.last() call int.last() call int.last() call int.last() call int.last() int decl FieldComparator public public < < for = ++ decl_stmt org.apache.lucene.search.FieldComparator < = decl_stmt int final final = * call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() call decl FieldComparator.compare() if != return else if == return - protected protected throws = for = < ++ =