org.apache.lucene.index java.util.ArrayList import java.util.Collections import java.util.HashSet import java.util.List import java.util.Set import java.util.concurrent.ConcurrentLinkedQueue import java.util.concurrent.CountDownLatch import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class annotation comment org.apache.lucene.index.TestBagOfPostings super super extends StringBuilder DirectoryReader RandomIndexWriter int IndexWriterConfig boolean Field int Document decl ConcurrentLinkedQueue Terms CountDownLatch decl Thread int BytesRef TermsEnum int LeafReader decl List String decl Set Directory public public throws decl_stmt java.util.List < = new <> decl_stmt int = decl_stmt int final final = decl_stmt boolean = decl_stmt org.apache.lucene.index.IndexWriterConfig = new if || call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() instanceof && || > /= if + + for = < ++ decl_stmt java.lang.String = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.concurrent.ConcurrentLinkedQueue final final final < = new <> decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt int = if + call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() + decl_stmt java.lang.Thread = new decl_stmt java.util.concurrent.CountDownLatch final final = new for = < ++ = new public public try decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) while ! call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() call decl ConcurrentLinkedQueue.isEmpty() decl_stmt java.lang.StringBuilder = new decl_stmt java.util.Set < = new <> for = < ++ decl_stmt java.lang.String = call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() if == break if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl ConcurrentLinkedQueue.add() call decl ConcurrentLinkedQueue.add() call decl ConcurrentLinkedQueue.add() call decl ConcurrentLinkedQueue.add() call decl ConcurrentLinkedQueue.add() break call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) catch throw new call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() for : call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.LeafReader = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.Terms = call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) - call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef while = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt int = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Field decl Set Document String StringBuilder public public try decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) while ! decl_stmt java.lang.StringBuilder = new decl_stmt java.util.Set < = new <> for = < ++ decl_stmt java.lang.String = if == break if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() break call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() catch throw new