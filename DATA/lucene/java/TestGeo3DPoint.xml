org.apache.lucene.spatial3d java.io.IOException import java.io.PrintWriter import java.io.StringWriter import java.util.ArrayList import java.util.Arrays import java.util.HashSet import java.util.List import java.util.Set import org.apache.lucene.codecs.Codec import org.apache.lucene.codecs.FilterCodec import org.apache.lucene.codecs.PointsFormat import org.apache.lucene.codecs.PointsReader import org.apache.lucene.codecs.PointsWriter import org.apache.lucene.codecs.lucene60.Lucene60PointsReader import org.apache.lucene.codecs.lucene60.Lucene60PointsWriter import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.geo.GeoTestUtil import org.apache.lucene.geo.Polygon import org.apache.lucene.geo.Rectangle import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.SimpleCollector import org.apache.lucene.spatial3d.geom.XYZSolid import org.apache.lucene.spatial3d.geom.XYZSolidFactory import org.apache.lucene.spatial3d.geom.GeoArea import org.apache.lucene.spatial3d.geom.GeoAreaFactory import org.apache.lucene.spatial3d.geom.GeoBBox import org.apache.lucene.spatial3d.geom.GeoBBoxFactory import org.apache.lucene.spatial3d.geom.GeoCircleFactory import org.apache.lucene.spatial3d.geom.GeoPathFactory import org.apache.lucene.spatial3d.geom.GeoPoint import org.apache.lucene.spatial3d.geom.GeoPolygon import org.apache.lucene.spatial3d.geom.GeoPolygonFactory import org.apache.lucene.spatial3d.geom.GeoShape import org.apache.lucene.spatial3d.geom.Plane import org.apache.lucene.spatial3d.geom.PlanetModel import org.apache.lucene.spatial3d.geom.SidedPlane import org.apache.lucene.spatial3d.geom.XYZBounds import org.apache.lucene.store.Directory import org.apache.lucene.util.DocIdSetBuilder import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.NumericUtils import org.apache.lucene.util.StringHelper import org.apache.lucene.util.TestUtil import com.carrotsearch.randomizedtesting.generators.RandomInts import class org.apache.lucene.spatial3d.TestGeo3DPoint super super extends double double double double int private static private static if decl_stmt int = decl_stmt double = + * if + + + return new public public return new public public throws return new public public throws return new else return public public return new public public throws return new public public throws return new public public throws return new public public throws return new IndexWriterConfig Document IndexSearcher IndexReader IndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new - call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) - / call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private static private static return * int int int public public decl_stmt int = decl_stmt int = decl_stmt int = return >= && <= && >= && <= && >= && <= public public return + + == : + + + + + + + + + + + + + + + private static private static return private static private static return new boolean GeoPoint GeoPoint int GeoShape boolean PrintWriter Cell decl GeoPoint Cell Cell boolean GeoArea int int decl GeoPoint int decl Set boolean StringWriter XYZBounds decl List boolean Cell public public throws decl_stmt int = if + + decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new for = < ++ = new = if + + + + + decl_stmt int = decl_stmt int = = for = < ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoShape = decl_stmt StringWriter = new decl_stmt PrintWriter = new if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + + decl_stmt org.apache.lucene.spatial3d.geom.XYZBounds = new call org.apache.lucene.spatial3d.geom.GeoShape.getBounds(Bounds) call org.apache.lucene.spatial3d.geom.GeoShape.getBounds(Bounds) call org.apache.lucene.spatial3d.geom.GeoShape.getBounds(Bounds) call org.apache.lucene.spatial3d.geom.GeoShape.getBounds(Bounds) call org.apache.lucene.spatial3d.geom.GeoShape.getBounds(Bounds) decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumX() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumY() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMinimumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumZ() call org.apache.lucene.spatial3d.geom.XYZBounds.getMaximumZ() if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Set < = new <> while call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if == || > if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() for = < ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = decl_stmt boolean = call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() decl_stmt boolean = call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() if call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() if if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + + else decl_stmt org.apache.lucene.spatial3d.geom.GeoArea = if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + + + + + + + + + + switch call GeoArea.getRelationship() call GeoArea.getRelationship() call GeoArea.getRelationship() call GeoArea.getRelationship() call GeoArea.getRelationship() case if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() for = < ++ if call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() continue case if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() break case if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() break case if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() for = < ++ if call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() call Cell.contains() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + continue default: assert switch case decl_stmt int = if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break case decl_stmt int = if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break case decl_stmt int = if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new + if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + decl_stmt boolean = for = < ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = decl_stmt boolean = call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() call GeoShape.isWithin() decl_stmt boolean = call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() if != if call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + else call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + + call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() call PrintWriter.println() + = if call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() + public public throws public public throws public public throws decl double int int boolean int decl double private private throws decl_stmt int = if + decl_stmt double = new decl_stmt double = new decl_stmt boolean = for = < ++ decl_stmt int = if == = if + + continue if > && < && decl_stmt int while = if == break if == = = if + + + + + + + + else if == = = if + + + + + + + + else assert == = = if + + + + + + + + else = = = if + + + + + Query decl double decl double public public decl_stmt double final final final = new decl_stmt double final final final = new - - - decl_stmt org.apache.lucene.search.Query final final = new ! call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() boolean int decl double decl double double int double Rectangle private static private static final final while decl_stmt int final final = switch case decl_stmt boolean final final = < try return new catch continue case decl_stmt double final final = * * try return catch continue case decl_stmt org.apache.lucene.geo.Rectangle final final = try return catch continue case decl_stmt int final final = + decl_stmt double final final = * * * decl_stmt double final final final = new decl_stmt double final final final = new for = < ++ = = try return catch continue default: throw new double double int double int double int double double double decl List int double GeoPoint double decl GeoPoint private static private static while decl_stmt int final final = switch case decl_stmt int final final = + decl_stmt java.util.List final final final < = new <> while call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int final final = try return catch continue case decl_stmt double = decl_stmt double = decl_stmt double = * / try return catch continue case decl_stmt double = decl_stmt double = if < decl_stmt double = = = decl_stmt double = decl_stmt double = if < decl_stmt double = = = return case decl_stmt int final final = + decl_stmt double final final = + decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final final = new for = < ++ = new try return catch continue default: throw new FixedBitSet StringBuilder IndexWriterConfig int GeoPoint int Document int GeoPoint decl Set IndexSearcher decl GeoPoint int IndexWriter Query boolean NumericDocValues IndexReader int Directory private static private static throws decl_stmt org.apache.lucene.index.IndexWriterConfig = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new for = < ++ if == = new decl_stmt int = call org.apache.lucene.index.IndexWriterConfig.getMaxBufferedDocs() call org.apache.lucene.index.IndexWriterConfig.getMaxBufferedDocs() call org.apache.lucene.index.IndexWriterConfig.getMaxBufferedDocs() call org.apache.lucene.index.IndexWriterConfig.getMaxBufferedDocs() call org.apache.lucene.index.IndexWriterConfig.getMaxBufferedDocs() if != - && < / call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) / call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) call org.apache.lucene.index.IndexWriterConfig.setCodec(Codec) decl_stmt org.apache.lucene.store.Directory if > = else = decl_stmt java.util.Set < = new <> decl_stmt org.apache.lucene.index.IndexWriter = new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if > && == decl_stmt int = call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if + if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader final final = if + call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt int final final = decl_stmt NumericDocValues = for = < ++ decl_stmt org.apache.lucene.search.Query = if + decl_stmt org.apache.lucene.util.FixedBitSet final final = new call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt int private public public return protected protected throws = public public call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) + if + call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() for = < call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() ++ decl_stmt int = int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = if != decl_stmt boolean = call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() == && if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) != decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = decl_stmt java.lang.StringBuilder = new if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + + + + + + + + + + + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() else call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) public public return protected protected throws = public public + String Geo3DPoint public public decl_stmt org.apache.lucene.spatial3d.Geo3DPoint = new decl_stmt java.lang.String final final = call org.apache.lucene.spatial3d.Geo3DPoint.toString() call org.apache.lucene.spatial3d.Geo3DPoint.toString() call org.apache.lucene.spatial3d.Geo3DPoint.toString() call org.apache.lucene.spatial3d.Geo3DPoint.toString() call org.apache.lucene.spatial3d.Geo3DPoint.toString() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() String public public decl_stmt java.lang.String final final = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() private static private static return Query GeoShape GeoShape public public decl_stmt org.apache.lucene.spatial3d.geom.GeoShape = decl_stmt org.apache.lucene.search.Query = call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() decl_stmt org.apache.lucene.spatial3d.geom.GeoShape do = call GeoShape.equals() call GeoShape.equals() call GeoShape.equals() call GeoShape.equals() call GeoShape.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() call Query.equals() int GeoPoint Polygon Polygon PlanetModel public public decl_stmt org.apache.lucene.spatial3d.geom.PlanetModel final final = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = new decl_stmt int = for = < ++ decl_stmt org.apache.lucene.geo.Polygon final final = = for = < ++ decl_stmt org.apache.lucene.geo.Polygon final final = double decl double GeoPoint decl Polygon int double Polygon int GeoPolygon double boolean double decl double double decl double decl double decl List int decl List protected static protected static final final final final final final final final decl_stmt int final final = decl_stmt double final final final = new decl_stmt double final final final = new while decl_stmt double = for = < ++ decl_stmt int final final = - decl_stmt double final final = * - if == = else decl_stmt double = - - * if > = decl_stmt double final final = decl_stmt double final final = * - + = += = * - + if for = < ++ = - decl_stmt java.util.List final final final < = decl_stmt GeoPolygon final final try = catch continue decl_stmt int final final = : decl_stmt java.util.List final final final < = new <> for = < ++ for = < ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = new if ! call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() call GeoPolygon.isWithin() continue decl_stmt boolean = for = < ++ decl_stmt org.apache.lucene.geo.Polygon final final = ! if ! continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = if break decl_stmt org.apache.lucene.geo.Polygon final final final = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new decl_stmt double final final final = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + decl_stmt double final final final = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() * / = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() * / call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = return new double double double decl List double protected static < protected static < final final final final final final final final final final decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = decl_stmt java.util.List final final final < = new <> for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return double double double double double double double double double double protected static protected static final final final final final final final final final final final final final final decl_stmt double final final = decl_stmt double final final = decl_stmt double final final = * decl_stmt double final final = * decl_stmt double final final = * - * decl_stmt double final final = decl_stmt double final final = * + * decl_stmt double final final = * - * decl_stmt double final final = * + * decl_stmt double final final = return GeoPoint decl double SidedPlane GeoPoint Plane GeoPoint GeoPoint decl List decl double GeoPoint SidedPlane protected static protected static final final final final final final decl_stmt double final final final = decl_stmt double final final final = decl_stmt java.util.List final final final < = new <> - for = < - ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = new if ! return call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() - call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final = new decl_stmt org.apache.lucene.spatial3d.geom.SidedPlane final final = new decl_stmt org.apache.lucene.spatial3d.geom.Plane final final = new if return return protected static protected static if >= -= if < += return GeoPoint int double double double double double public public throws decl_stmt double final final = decl_stmt int = for = < ++ decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt double = + + + + + - decl_stmt double = + + + + + - decl_stmt double = + + + + + - decl_stmt double = for : new - GeoPoint int double double double double GeoPoint public public throws decl_stmt int = for = < ++ decl_stmt double final final = decl_stmt double final final = decl_stmt double = decl_stmt double = for = < ++ = = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new <= <= <= = = for = < ++ = - = - decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new <= <= <= GeoPoint int double double GeoPoint GeoPoint public public throws decl_stmt int = for = < ++ decl_stmt double = decl_stmt double = decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new decl_stmt org.apache.lucene.spatial3d.geom.GeoPoint = new double private static private static decl_stmt double = if > = else if < - = - return public public if == throw new if == + + = public public throws assert == if == + + double double double public public throws if if == assert == = new <> for : + + else if == decl_stmt double = decl_stmt double = decl_stmt double = * + + + + + + + + Cell Relation public public decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new if while > && - == - return else decl_stmt javax.management.relation.Relation = if < && call Cell.equals() call Cell.equals() call Cell.equals() call Cell.equals() call Cell.equals() + + + ++ return int public public for = < ++ decl_stmt int = * if < return if > return return double double int double String boolean boolean double boolean double XYZSolid double boolean public public decl_stmt double = decl_stmt double = decl_stmt double = * decl_stmt double = * decl_stmt double = * decl_stmt double = * decl_stmt XYZSolid final final = decl_stmt int final final = call XYZSolid.getRelationship() call XYZSolid.getRelationship() call XYZSolid.getRelationship() call XYZSolid.getRelationship() call XYZSolid.getRelationship() decl_stmt boolean final final = decl_stmt boolean final final = call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() decl_stmt boolean final final = decl_stmt boolean final final = call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() call XYZSolid.isWithin() decl_stmt java.lang.String final final switch case = break case = break case = break case = break default: = break return + + + + + + + + + + + + + + + + + + + + + Cell public public if instanceof == return decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = return && public public return + DocIdSetBuilder StringBuilder ExplainingVisitor XYZBounds int LeafReader public static public static throws decl_stmt org.apache.lucene.spatial3d.geom.XYZBounds final final = new decl_stmt int = decl_stmt org.apache.lucene.index.LeafReader = decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) + + + + decl_stmt org.apache.lucene.util.DocIdSetBuilder = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt ExplainingVisitor = new new - call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call ExplainingVisitor.startSecondPhase() call ExplainingVisitor.startSecondPhase() call ExplainingVisitor.startSecondPhase() call ExplainingVisitor.startSecondPhase() call ExplainingVisitor.startSecondPhase() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() call LeafReader.getPointValues() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()