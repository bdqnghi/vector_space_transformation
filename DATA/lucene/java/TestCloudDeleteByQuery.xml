org.apache.solr.cloud java.io.File import java.lang.invoke.MethodHandles import java.net.URL import java.nio.file.Path import java.nio.file.Paths import java.util.ArrayList import java.util.Arrays import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.apache.solr.cloud.SolrCloudTestCase import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.UpdateResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.SimpleOrderedMap import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.cloud.TestCloudDeleteByQuery super super extends String Logger HttpSolrClient String HttpSolrClient HttpSolrClient String int HttpSolrClient HttpSolrClient int int CloudSolrClient private static private static throws call org.apache.solr.client.solrj.impl.CloudSolrClient.close() call org.apache.solr.client.solrj.impl.CloudSolrClient.close() call org.apache.solr.client.solrj.impl.CloudSolrClient.close() call org.apache.solr.client.solrj.impl.CloudSolrClient.close() call org.apache.solr.client.solrj.impl.CloudSolrClient.close() = call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() = call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() = call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() = call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() = call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() = String String String SolrDocumentList String decl Map ClusterState String String decl HashMap URL ZkStateReader Replica Path String private static private static throws decl_stmt java.lang.String final final = decl_stmt java.nio.file.Path final final = decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() decl_stmt HashMap < = new <> for : decl_stmt java.net.URL = decl_stmt java.lang.String = call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() + + call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() + call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() decl_stmt org.apache.solr.common.cloud.ClusterState = call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() for : call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) call org.apache.solr.common.cloud.ClusterState.getSlices(String) decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Replica = + + call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() decl_stmt java.lang.String = call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() + + + call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() + decl_stmt java.lang.String = for : if ! = call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() call decl HashMap.remove() + + + + + if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = + + + = + + + else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = + + + = + + + else + call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() call decl HashMap.size() = call decl HashMap.values() call decl HashMap.values() call decl HashMap.values() call decl HashMap.values() call decl HashMap.values() + + + call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() + call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() call CloudSolrClient.add() + call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() decl_stmt org.apache.solr.common.SolrDocumentList = call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call SolrDocumentList.getNumFound() call SolrDocumentList.getNumFound() call SolrDocumentList.getNumFound() call SolrDocumentList.getNumFound() call SolrDocumentList.getNumFound() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() for : decl_stmt java.lang.String = + + + decl_stmt java.lang.String = + + + + + + + + + call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) private private throws call CloudSolrClient.deleteByQuery() call CloudSolrClient.deleteByQuery() call CloudSolrClient.deleteByQuery() call CloudSolrClient.deleteByQuery() call CloudSolrClient.deleteByQuery() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() UpdateResponse public public throws try decl_stmt UpdateResponse = + call UpdateResponse.toString() call UpdateResponse.toString() call UpdateResponse.toString() call UpdateResponse.toString() call UpdateResponse.toString() catch + public public throws public public throws public public throws public public throws public public throws public public throws UpdateRequest public static public static decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) return SolrInputDocument public static public static decl_stmt org.apache.solr.common.SolrInputDocument = new for : call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) return SolrInputField public static public static decl_stmt org.apache.solr.common.SolrInputField = new call org.apache.solr.common.SolrInputField.setValue(Object,float) call org.apache.solr.common.SolrInputField.setValue(Object,float) call org.apache.solr.common.SolrInputField.setValue(Object,float) call org.apache.solr.common.SolrInputField.setValue(Object,float) call org.apache.solr.common.SolrInputField.setValue(Object,float) return