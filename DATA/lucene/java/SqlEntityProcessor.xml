org.apache.solr.handler.dataimport java.lang.invoke.MethodHandles import java.util.Iterator import java.util.Map import org.slf4j.Logger import org.slf4j.LoggerFactory import java.util.regex.Matcher import java.util.regex.Pattern import class org.apache.solr.handler.dataimport.SqlEntityProcessor super super extends Logger Pattern String String String decl DataSource String String Pattern public public = protected protected try = call decl DataSource.getData() call decl DataSource.getData() call decl DataSource.getData() call decl DataSource.getData() call decl DataSource.getData() = catch throw catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + throw new String public < public < if == decl_stmt java.lang.String = return String public < public < if == decl_stmt java.lang.String = if == return return String public < public < if == decl_stmt java.lang.String = if == return return String public < public < if == decl_stmt java.lang.String = if == return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return String String public public decl_stmt java.lang.String = if return if decl_stmt java.lang.String = if != return call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return StringBuilder Matcher decl String Object boolean public public decl_stmt java.lang.StringBuilder = new if call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt boolean = decl_stmt java.lang.String = for : if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = decl_stmt java.lang.Object = + if == decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) = + call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if instanceof call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()