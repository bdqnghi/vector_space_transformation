org.apache.solr.search.function org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.LegacyFloatField import org.apache.lucene.document.LegacyIntField import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.TextField import org.apache.lucene.document.Field.Store import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.queries.function.FunctionQuery import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.valuesource.FloatFieldSource import org.apache.lucene.queries.function.valuesource.IntFieldSource import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.QueryUtils import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TopDocs import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.search.function.TestOrdValues super super extends String String Analyzer float ValueSource String String Directory String ValueSource int public static public static throws public public throws public public throws String decl ScoreDoc ValueSource Query IndexSearcher IndexReader String private private throws decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.queries.function.ValueSource if = new else = new decl_stmt org.apache.lucene.search.Query = new + decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.lang.String = : for = < ++ decl_stmt java.lang.String = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) + + + + call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) if + + + call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) < else + + + call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) > = call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() public public throws public public throws float float ValueSource IndexSearcher Query ScoreDoc IndexReader TopDocs String String private private throws decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.queries.function.ValueSource if = new else = new decl_stmt org.apache.lucene.search.Query = new decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt org.apache.lucene.search.ScoreDoc = for = < ++ decl_stmt float = decl_stmt java.lang.String = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() + + + call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) call org.apache.lucene.search.IndexSearcher.explain(Weight,int) decl_stmt float = - - + + + + + decl_stmt java.lang.String = - : + + + + + + call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() ReverseOrdFieldSource OrdFieldSource public public throws decl_stmt org.apache.solr.search.function.OrdFieldSource = new call org.apache.solr.search.function.OrdFieldSource.equals(Object) call org.apache.solr.search.function.OrdFieldSource.equals(Object) call org.apache.solr.search.function.OrdFieldSource.equals(Object) call org.apache.solr.search.function.OrdFieldSource.equals(Object) call org.apache.solr.search.function.OrdFieldSource.equals(Object) decl_stmt org.apache.solr.search.function.ReverseOrdFieldSource = new call org.apache.solr.search.function.ReverseOrdFieldSource.equals(Object) call org.apache.solr.search.function.ReverseOrdFieldSource.equals(Object) call org.apache.solr.search.function.ReverseOrdFieldSource.equals(Object) call org.apache.solr.search.function.ReverseOrdFieldSource.equals(Object) call org.apache.solr.search.function.ReverseOrdFieldSource.equals(Object) public static public static throws call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = = int boolean IndexWriterConfig int RandomIndexWriter protected static protected static throws if = = new decl_stmt org.apache.lucene.index.IndexWriterConfig = if call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int = decl_stmt boolean = new decl_stmt int = while > if throw new + + = = + -- if ! if call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() if int FieldType FieldType Document Field private static private static throws decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field decl_stmt int = + decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) = + + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + String int int protected static protected static decl_stmt java.lang.String = + decl_stmt int = + + decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - return + call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) private static private static return protected static protected static return protected static protected static if