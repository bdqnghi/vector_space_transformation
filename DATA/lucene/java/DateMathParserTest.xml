org.apache.solr.util java.text.DateFormat import java.text.ParseException import java.text.SimpleDateFormat import java.time.Instant import java.util.Calendar import java.util.Date import java.util.HashMap import java.util.Locale import java.util.Map import java.util.TimeZone import org.apache.lucene.util.LuceneTestCase import static static org.apache.solr.util.DateMathParser.UTC import class org.apache.solr.util.DateMathParserTest super super extends DateFormat DateFormat Calendar Date protected protected throws decl_stmt java.util.Date = call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) decl_stmt java.util.Calendar = call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) return call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() Calendar Date protected protected throws decl_stmt java.util.Date = call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) decl_stmt java.util.Calendar = call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) call java.util.Calendar.setTime(Date) return call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() protected protected throws return call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) String String protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + + + String String protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + + + + + String String protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) + + + + call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) + + String public public throws decl_stmt java.lang.String = for : try catch + try catch + String public public throws decl_stmt java.lang.String = String public public throws decl_stmt java.lang.String = for : String public public throws decl_stmt java.lang.String = String DateMathParser Date String public public throws decl_stmt org.apache.solr.util.DateMathParser = new call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) decl_stmt java.lang.String = call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) decl_stmt java.util.Date = call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) = call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) = call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) decl_stmt java.lang.String = call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) DateMathParser public public throws decl_stmt org.apache.solr.util.DateMathParser = new call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) String String TimeZone DateMathParser public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = + + decl_stmt java.util.TimeZone = decl_stmt org.apache.solr.util.DateMathParser = new call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) = = new call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) decl Map DateMathParser Date public public throws decl_stmt org.apache.solr.util.DateMathParser = new call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call DateMathParser.setNow() call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() try decl_stmt java.util.Date = call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) + catch + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public public - - - private private final final final final public public throws public public throws Date String private private if == = decl_stmt java.util.Date = decl_stmt java.lang.String = call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() + call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime()