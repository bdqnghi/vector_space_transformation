org.apache.solr.analytics.statistics java.io.IOException import java.util.Locale import java.util.Set import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.FunctionValues.ValueFiller import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.util.mutable.MutableValue import class org.apache.solr.analytics.statistics.MinMaxStatsCollector super super implements decl Set FunctionValues ValueFiller MutableValue long MutableValue ValueSource long MutableValue public public throws = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() = call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() = call ValueFiller.getValue() call ValueFiller.getValue() call ValueFiller.getValue() call ValueFiller.getValue() call ValueFiller.getValue() public public call ValueFiller.fillValue() call ValueFiller.fillValue() call ValueFiller.fillValue() call ValueFiller.fillValue() call ValueFiller.fillValue() if += if == = call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() else if ! || call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) > call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() if == = call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() call MutableValue.duplicate() else if ! || call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) call org.apache.lucene.util.mutable.MutableValue.compareTo(MutableValue) < call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() call MutableValue.copy() else += public public return public public if && != return call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() if && != return call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() call MutableValue.toObject() if return new if return new return public < public < return public public public public return public public return public public return call ValueSource.toString() call ValueSource.toString() call ValueSource.toString() call ValueSource.toString() call ValueSource.toString() public public return + + +