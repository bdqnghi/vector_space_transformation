org.apache.solr.logging org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.solr.core.SolrResourceLoader import org.apache.solr.logging.jul.JulWatcher import org.apache.solr.logging.log4j.Log4jWatcher import org.slf4j.Logger import org.slf4j.LoggerFactory import org.slf4j.impl.StaticLoggerBinder import java.lang.invoke.MethodHandles import java.util.Collection import java.util.Iterator import java.util.List import java.util.concurrent.atomic.AtomicBoolean import class long Logger decl CircularList public public call decl CircularList.add() call decl CircularList.add() call decl CircularList.add() call decl CircularList.add() call decl CircularList.add() = public public return public public return == - : call decl CircularList.getBufferSize() call decl CircularList.getBufferSize() call decl CircularList.getBufferSize() call decl CircularList.getBufferSize() call decl CircularList.getBufferSize() SolrDocumentList E long decl Iterator public public if == return decl_stmt org.apache.solr.common.SolrDocumentList = new decl_stmt java.util.Iterator < = call decl CircularList.iterator() call decl CircularList.iterator() call decl CircularList.iterator() call decl CircularList.iterator() call decl CircularList.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt E = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt long = if == if != if > call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call SolrDocumentList.add() call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call org.apache.solr.common.SolrDocumentList.setNumFound(long) call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() return public public call decl CircularList.clear() call decl CircularList.clear() call decl CircularList.clear() call decl CircularList.clear() call decl CircularList.clear() = - LogWatcher public static public static if ! call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return decl_stmt org.apache.solr.logging.LogWatcher = if != if > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call LogWatcher.getName() call LogWatcher.getName() call LogWatcher.getName() call LogWatcher.getName() call LogWatcher.getName() call LogWatcher.registerListener() call LogWatcher.registerListener() call LogWatcher.registerListener() call LogWatcher.registerListener() call LogWatcher.registerListener() return String String private static private static decl_stmt java.lang.String = decl_stmt java.lang.String try = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if == if = else if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) > = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + if instanceof throw return if == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return if return new if return new try return != : catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if instanceof throw return