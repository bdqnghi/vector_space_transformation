org.apache.lucene.uninverting java.io.IOException import java.io.PrintStream import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.WeakHashMap import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.LeafReader import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.PointValues import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.index.SegmentReader import org.apache.lucene.index.SortedDocValues import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.PagedBytes import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.packed.GrowableWriter import org.apache.lucene.util.packed.PackedInts import org.apache.lucene.util.packed.PackedLongValues import class org.apache.lucene.uninverting.FieldCacheImpl super super implements decl SegmentReader decl CoreClosedListener decl Map private synchronized private synchronized = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new public synchronized public synchronized public synchronized public synchronized for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl Class Cache decl Map decl List Object CacheKey public synchronized public synchronized decl_stmt java.util.List < = new <> for final final final final final final final < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.solr.common.util.Cache final final = decl_stmt java.lang.Class final final final < = synchronized for final final final final final final final < < : call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() call Cache.readerCache() decl_stmt java.lang.Object final final = if == continue decl_stmt java.util.Map final final final < = for final final final final final final final < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt CacheKey = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public public private private public public synchronized decl Map Object public public decl_stmt java.lang.Object final final = synchronized decl_stmt java.util.Map < = if == = new <> if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else CreationPlaceholder decl Map PrintStream Accountable Object public public throws decl_stmt java.util.Map < decl_stmt org.apache.lucene.util.Accountable decl_stmt java.lang.Object final final = synchronized = if == = new <> = else = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if instanceof synchronized decl_stmt org.apache.lucene.uninverting.CreationPlaceholder = if == = synchronized call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if != && != decl_stmt java.io.PrintStream final final = if != return return decl FieldCacheSanityChecker decl FieldCacheSanityChecker decl Insanity private private decl_stmt org.apache.solr.search.Insanity final final final final final = for = < ++ decl_stmt org.apache.solr.search.Insanity final final final final final = decl_stmt sun.misc.CacheEntry final final final = call decl Insanity.getCacheEntries() call decl Insanity.getCacheEntries() call decl Insanity.getCacheEntries() call decl Insanity.getCacheEntries() call decl Insanity.getCacheEntries() for = < ++ if == call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() + call decl Insanity.toString() call decl Insanity.toString() call decl Insanity.toString() call decl Insanity.toString() call decl Insanity.toString() call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() call decl CoreClosedListener.println() new break CacheKey public public if instanceof decl_stmt CacheKey = if call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() call CacheKey.field() if == if == return else if call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() call CacheKey.custom() return return public public return ^ == : final final throws if else BytesRef PointValues boolean int int final final throws decl_stmt int final final = decl_stmt org.apache.lucene.index.PointValues = assert != assert call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() > if decl_stmt int final final = call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) assert <= if == = new = decl_stmt boolean final final = decl_stmt org.apache.lucene.util.BytesRef = new call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() call PointValues.intersect() new public public throws throw new public public throws = = if if == = new public public return public public throws throw new public public throws = = if if == = new public public return BytesRef Terms int FixedBitSet TermsEnum PostingsEnum int int final final throws decl_stmt int final final = decl_stmt org.apache.lucene.index.Terms = if != if decl_stmt int final final = call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() assert <= if == = new = decl_stmt org.apache.lucene.index.TermsEnum final final = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt org.apache.lucene.util.FixedBitSet = while decl_stmt org.apache.lucene.util.BytesRef final final = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) while decl_stmt int final final = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if == break if if == = = new call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) Bits int int decl_stmt int final final = decl_stmt org.apache.lucene.util.Bits final final if == = new else if instanceof decl_stmt int final final = if >= assert == = new else = else = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new new public public = public public return FieldInfo BitsEntry public public throws decl_stmt org.apache.lucene.index.FieldInfo final final = if == return new else if call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != return if instanceof else if call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() == return new decl_stmt BitsEntry = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new return long public public decl_stmt long = if instanceof || instanceof return else return + >>> String Parser protected protected throws decl_stmt java.lang.String final final = decl_stmt org.apache.solr.analytics.util.Parser final final = if instanceof return else return Uninvert PointValues int int private private throws decl_stmt int final final = decl_stmt org.apache.lucene.index.PointValues = assert != assert call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() > decl_stmt int final final = call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) assert <= if == return new new decl_stmt Uninvert = new protected protected throws throw new protected protected protected protected call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() return new protected protected throws throw new protected protected protected protected BytesRef Terms int TermsEnum FixedBitSet int int PostingsEnum int private private throws decl_stmt int final final = decl_stmt org.apache.lucene.util.FixedBitSet = decl_stmt org.apache.lucene.index.Terms = if != decl_stmt int final final = call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() assert <= if == return new new decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.index.PostingsEnum = while decl_stmt org.apache.lucene.util.BytesRef final final = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break if == = new = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) while decl_stmt int final final = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if == break call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) if == return new new decl_stmt int final final = call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() if >= assert == return new new return new FieldInfo NumericDocValues PointValues public public throws if == throw new decl_stmt NumericDocValues final final = if != return else decl_stmt org.apache.lucene.index.FieldInfo final final = if == return else if call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != throw new + + + call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() if instanceof if call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() == return if call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() != throw new + + + call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() decl_stmt org.apache.lucene.index.PointValues = if == || call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() == return if call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() != call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) throw new + + + call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() call PointValues.size() + + call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) call org.apache.lucene.index.PointValues.getDocCount(IndexReader,String) else if call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() == return return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new public public return + public public return + + int long Parser decl HoldsOneThing long GrowableWriterAndMinValue Uninvert protected protected final final throws decl_stmt org.apache.solr.analytics.util.Parser final final = decl_stmt HoldsOneThing final final final < = new <> decl_stmt Uninvert = new instanceof decl_stmt long private decl_stmt long private decl_stmt org.apache.lucene.util.packed.GrowableWriter private public public = call Parser.parseValue() call Parser.parseValue() call Parser.parseValue() call Parser.parseValue() call Parser.parseValue() if == decl_stmt int if < = = == : - else = = = new if != call GrowableWriterAndMinValue.fill() call GrowableWriterAndMinValue.fill() call GrowableWriterAndMinValue.fill() call GrowableWriterAndMinValue.fill() call GrowableWriterAndMinValue.fill() call GrowableWriterAndMinValue.size() call GrowableWriterAndMinValue.size() call GrowableWriterAndMinValue.size() call GrowableWriterAndMinValue.size() call GrowableWriterAndMinValue.size() - call decl HoldsOneThing.set() call decl HoldsOneThing.set() call decl HoldsOneThing.set() call decl HoldsOneThing.set() call decl HoldsOneThing.set() new public public call GrowableWriterAndMinValue.set() call GrowableWriterAndMinValue.set() call GrowableWriterAndMinValue.set() call GrowableWriterAndMinValue.set() call GrowableWriterAndMinValue.set() - protected protected throws return call Parser.termsEnum() call Parser.termsEnum() call Parser.termsEnum() call Parser.termsEnum() call Parser.termsEnum() call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() call Uninvert.uninvert() if decl_stmt GrowableWriterAndMinValue = call decl HoldsOneThing.get() call decl HoldsOneThing.get() call decl HoldsOneThing.get() call decl HoldsOneThing.get() call decl HoldsOneThing.get() if == return new new return new call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() call GrowableWriterAndMinValue.writer() int public public = if == decl_stmt int if < = = == : - else = = = new if != - new public public - protected protected throws return BytesRef public public decl_stmt org.apache.lucene.util.BytesRef final final = new return new public public return public public return int - public public if < throw new + + return public public return public public return int - public public if < throw new + + return public public return + + + * + decl List public < public < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws return FieldInfo SortedDocValues SortedDocValuesImpl public public throws decl_stmt org.apache.lucene.index.SortedDocValues = if != return else decl_stmt org.apache.lucene.index.FieldInfo final final = if == return else if call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != throw new + + + call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() else if call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() == return decl_stmt SortedDocValuesImpl = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new return call SortedDocValuesImpl.iterator() call SortedDocValuesImpl.iterator() call SortedDocValuesImpl.iterator() call SortedDocValuesImpl.iterator() call SortedDocValuesImpl.iterator() long decl Builder PostingsEnum Terms int int GrowableWriter PagedBytes int float TermsEnum BytesRef decl PackedLongValues protected protected throws decl_stmt int final final = decl_stmt org.apache.lucene.index.Terms = decl_stmt float final final = decl_stmt org.apache.lucene.util.PagedBytes final final = new decl_stmt int if != decl_stmt long = call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() if != - if > throw new + + = else = else = decl_stmt org.apache.lucene.util.fst.Builder = decl_stmt org.apache.lucene.util.packed.GrowableWriter final final = new decl_stmt int = if != decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.index.PostingsEnum = while decl_stmt org.apache.lucene.util.BytesRef final final = call int.next() call int.next() call int.next() call int.next() call int.next() if == break if >= throw new + + call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) = call int.postings() call int.postings() call int.postings() call int.postings() call int.postings() while decl_stmt int final final = call TermsEnum.nextDoc() call TermsEnum.nextDoc() call TermsEnum.nextDoc() call TermsEnum.nextDoc() call TermsEnum.nextDoc() if == break call decl Builder.set() call decl Builder.set() call decl Builder.set() call decl Builder.set() call decl Builder.set() + ++ return new call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl Builder.getMutable() call decl Builder.getMutable() call decl Builder.getMutable() call decl Builder.getMutable() call decl Builder.getMutable() BytesRef long public public decl_stmt org.apache.lucene.util.BytesRef final final = new return new public public decl_stmt long final final = if == = else return long public public decl_stmt long final final = if == = else return public public return + + * decl List public < public < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws return FieldInfo BinaryDocValues BinaryDocValuesImpl public public throws decl_stmt BinaryDocValues = if == = if != return decl_stmt org.apache.lucene.index.FieldInfo final final = if == return else if call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != throw new + + + call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() else if call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() == return decl_stmt BinaryDocValuesImpl = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new return call BinaryDocValuesImpl.iterator() call BinaryDocValuesImpl.iterator() call BinaryDocValuesImpl.iterator() call BinaryDocValuesImpl.iterator() call BinaryDocValuesImpl.iterator() int long BytesRef GrowableWriter Terms int TermsEnum decl PackedInts PostingsEnum PagedBytes float int int int long protected protected throws decl_stmt int final final = decl_stmt org.apache.lucene.index.Terms = decl_stmt float final final = decl_stmt int final final = decl_stmt org.apache.lucene.util.PagedBytes final final = new decl_stmt int if != decl_stmt long = call Terms.size() call Terms.size() call Terms.size() call Terms.size() call Terms.size() if != - if > = = * else = else = decl_stmt org.apache.lucene.util.packed.GrowableWriter final final = new call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) new if != decl_stmt int = decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.index.PostingsEnum = while if ++ == break decl_stmt org.apache.lucene.util.BytesRef final final = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break decl_stmt long final final = call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) call org.apache.lucene.util.PagedBytes.copyUsingLengthPrefix(BytesRef) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) while decl_stmt int final final = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if == break call org.apache.lucene.util.packed.GrowableWriter.set(int,long) call org.apache.lucene.util.packed.GrowableWriter.set(int,long) call org.apache.lucene.util.packed.GrowableWriter.set(int,long) call org.apache.lucene.util.packed.GrowableWriter.set(int,long) call org.apache.lucene.util.packed.GrowableWriter.set(int,long) decl_stmt java.io.Reader final final final final final = call org.apache.lucene.util.packed.GrowableWriter.getMutable() call org.apache.lucene.util.packed.GrowableWriter.getMutable() call org.apache.lucene.util.packed.GrowableWriter.getMutable() call org.apache.lucene.util.packed.GrowableWriter.getMutable() call org.apache.lucene.util.packed.GrowableWriter.getMutable() if new public public return call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() != public public return return new call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) call org.apache.lucene.util.PagedBytes.freeze(boolean) public public return != public public return FieldInfo SortedDocValues Terms long SortedSetDocValues DocTermOrds public public throws assert == || == || == decl_stmt org.apache.lucene.index.SortedSetDocValues = if != return decl_stmt org.apache.lucene.index.SortedDocValues = if != return decl_stmt org.apache.lucene.index.FieldInfo final final = if == return else if call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != throw new + + + call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() else if call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() call org.apache.lucene.index.FieldInfo.getIndexOptions() == return decl_stmt org.apache.lucene.index.Terms = if == return else decl_stmt long = call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() call Terms.getSumDocFreq() if != - && == call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() call Terms.getDocCount() return decl_stmt org.apache.lucene.uninverting.DocTermOrds = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() new return call org.apache.lucene.uninverting.DocTermOrds.iterator(LeafReader) call org.apache.lucene.uninverting.DocTermOrds.iterator(LeafReader) call org.apache.lucene.uninverting.DocTermOrds.iterator(LeafReader) call org.apache.lucene.uninverting.DocTermOrds.iterator(LeafReader) call org.apache.lucene.uninverting.DocTermOrds.iterator(LeafReader) BytesRef protected protected throws decl_stmt org.apache.lucene.util.BytesRef = return new public public = public public return