org.apache.lucene.spatial.prefix.tree java.util.Arrays import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.util.BytesRef import class org.apache.lucene.spatial.prefix.tree.LegacyPrefixTree super super extends Cell double Rectangle double public public if < || || throw new decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = decl_stmt org.apache.lucene.geo.Rectangle = call org.apache.lucene.spatial.prefix.tree.Cell.getShape() call org.apache.lucene.spatial.prefix.tree.Cell.getShape() call org.apache.lucene.spatial.prefix.tree.Cell.getShape() call org.apache.lucene.spatial.prefix.tree.Cell.getShape() call org.apache.lucene.spatial.prefix.tree.Cell.getShape() decl_stmt double = call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() decl_stmt double = call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() return * + * LegacyCell public public decl_stmt org.apache.lucene.spatial.prefix.tree.LegacyCell = if == = call LegacyCell.readCell() call LegacyCell.readCell() call LegacyCell.readCell() call LegacyCell.readCell() call LegacyCell.readCell() return Cell decl Cell BytesRef Cell public public if ! instanceof return decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = assert instanceof decl_stmt org.apache.lucene.util.BytesRef = call Cell.getTokenBytesNoLeaf() call Cell.getTokenBytesNoLeaf() call Cell.getTokenBytesNoLeaf() call Cell.getTokenBytesNoLeaf() call Cell.getTokenBytesNoLeaf() decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = new for = < ++ = decl_stmt org.apache.lucene.spatial.prefix.tree.Cell = - = - = return new