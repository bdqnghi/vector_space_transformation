org.apache.solr.cloud.hdfs com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.FileSystem import org.apache.hadoop.fs.Path import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.hadoop.hdfs.server.namenode.NameNodeAdapter import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.cloud.BasicDistributedZkTest import org.apache.solr.cloud.ChaosMonkey import org.apache.solr.common.params.CollectionParams.CollectionAction import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.util.BadHdfsThreadsFilter import org.apache.solr.util.TimeOut import org.apache.zookeeper.KeeperException import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import java.io.IOException import java.net.URI import java.net.URISyntaxException import java.util.ArrayList import java.util.List import java.util.Timer import java.util.TimerTask import java.util.concurrent.TimeUnit import class annotation annotation org.apache.solr.cloud.hdfs.StressHdfsTest super super extends String boolean MiniDFSCluster public static public static throws = public static public static throws = protected protected throws return protected protected return int Timer int public public throws decl_stmt int = + for = < ++ if decl_stmt org.apache.solr.util.stats.Timer = new try call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() decl_stmt int = call java.util.Timer.schedule(TimerTask,Date,long) call java.util.Timer.schedule(TimerTask,Date,long) call java.util.Timer.schedule(TimerTask,Date,long) call java.util.Timer.schedule(TimerTask,Date,long) call java.util.Timer.schedule(TimerTask,Date,long) new public public call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() finally call java.util.Timer.cancel() call java.util.Timer.cancel() call java.util.Timer.cancel() call java.util.Timer.cancel() call java.util.Timer.cancel() public public call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() call MiniDFSCluster.getNameNode() FileSystem decl List Configuration int int QueryRequest decl NamedList String boolean ModifiableSolrParams TimeOut int int int decl NamedList private private throws decl_stmt boolean = decl_stmt int decl_stmt int decl_stmt int if = * = = else = / = = if == = for = < + ++ + decl_stmt java.util.List < = new <> decl_stmt int = for : try = + + decl_stmt int = + for = < ++ ++ if else decl_stmt org.apache.solr.common.util.NamedList < = new decl_stmt org.apache.solr.common.util.NamedList < = < call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() decl_stmt java.lang.String = < call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if new new decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() decl_stmt org.apache.solr.util.TimeOut final final = new while if call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() throw new for : decl_stmt Configuration = call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() decl_stmt java.io.FileSystem = new + call FileSystem.exists() call FileSystem.exists() call FileSystem.exists() call FileSystem.exists() call FileSystem.exists() new call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close()