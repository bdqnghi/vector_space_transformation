org.apache.lucene.codecs.lucene60 java.io.Closeable import java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.PointsReader import org.apache.lucene.codecs.PointsWriter import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.MergeState import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.IOUtils import org.apache.lucene.util.bkd.BKDReader import org.apache.lucene.util.bkd.BKDWriter import class org.apache.lucene.codecs.lucene60.Lucene60PointsWriter super super extends super implements int decl Map boolean IndexOutput SegmentWriteState double boolean public public throws decl_stmt boolean = == try = new call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() new public public throw new public public throws public public return if > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() public public throw new public public throws public public return FieldInfo long long decl List decl List Lucene60PointsReader FieldInfos boolean PointsReader BKDReader decl List public public throws for : if instanceof == return for : if != call PointsReader.checkIntegrity() call PointsReader.checkIntegrity() call PointsReader.checkIntegrity() call PointsReader.checkIntegrity() call PointsReader.checkIntegrity() for : if != if == decl_stmt boolean = decl_stmt long = for = < ++ decl_stmt org.apache.lucene.codecs.PointsReader = if != decl_stmt org.apache.lucene.index.FieldInfos = decl_stmt org.apache.lucene.index.FieldInfo = call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) if != += call PointsReader.size() call PointsReader.size() call PointsReader.size() call PointsReader.size() call PointsReader.size() &= call PointsReader.size() call PointsReader.size() call PointsReader.size() call PointsReader.size() call PointsReader.size() == call PointsReader.getDocCount() call PointsReader.getDocCount() call PointsReader.getDocCount() call PointsReader.getDocCount() call PointsReader.getDocCount() try = new call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.codecs.PointsReader = if != assert instanceof decl_stmt org.apache.lucene.codecs.lucene60.Lucene60PointsReader = decl_stmt org.apache.lucene.index.FieldInfos = decl_stmt org.apache.lucene.index.FieldInfo = call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) if != decl_stmt org.apache.lucene.util.bkd.BKDReader = call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() call Lucene60PointsReader.readers() if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt long = if != - call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else int FieldInfo String public public throws if throw new = decl_stmt java.lang.String = try = call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.directory() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() call SegmentWriteState.segmentInfo() decl_stmt int = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.lucene.index.FieldInfo = call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() call SegmentWriteState.fieldInfos() if == throw new + + public public throws call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close()