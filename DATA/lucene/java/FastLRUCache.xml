org.apache.solr.search org.apache.solr.common.SolrException import org.apache.solr.util.ConcurrentLRUCache import org.slf4j.Logger import org.slf4j.LoggerFactory import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import java.io.Serializable import java.lang.invoke.MethodHandles import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.CopyOnWriteArrayList import java.util.concurrent.TimeUnit import class super super extends super implements decl List Logger int decl ConcurrentLRUCache long String boolean int String int int int public public decl_stmt java.lang.String = decl_stmt int = == : decl_stmt int = if == = * else = if == = if <= = + decl_stmt int = if == = * else = = = decl_stmt int final final = == : = decl_stmt boolean = == : = = == : = = new <> call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() = < if == = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() return String protected protected decl_stmt java.lang.String = + + + + + + + + + if += + += return public public return call decl ConcurrentLRUCache.size() call decl ConcurrentLRUCache.size() call decl ConcurrentLRUCache.size() call decl ConcurrentLRUCache.size() call decl ConcurrentLRUCache.size() public public return call decl ConcurrentLRUCache.put() call decl ConcurrentLRUCache.put() call decl ConcurrentLRUCache.put() call decl ConcurrentLRUCache.put() call decl ConcurrentLRUCache.put() public public return call decl ConcurrentLRUCache.get() call decl ConcurrentLRUCache.get() call decl ConcurrentLRUCache.get() call decl ConcurrentLRUCache.get() call decl ConcurrentLRUCache.get() public public call decl ConcurrentLRUCache.clear() call decl ConcurrentLRUCache.clear() call decl ConcurrentLRUCache.clear() call decl ConcurrentLRUCache.clear() call decl ConcurrentLRUCache.clear() public public call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() call decl ConcurrentLRUCache.setAlive() == long int int Map decl Entry decl Map FastLRUCache public public if == return decl_stmt long = decl_stmt org.apache.solr.search.FastLRUCache = if decl_stmt int = call org.apache.solr.search.FastLRUCache.size() call org.apache.solr.search.FastLRUCache.size() call org.apache.solr.search.FastLRUCache.size() call org.apache.solr.search.FastLRUCache.size() call org.apache.solr.search.FastLRUCache.size() decl_stmt java.util.Map = call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() call FastLRUCache.cache() decl_stmt Entry = new call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() decl_stmt int = for : call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() ++ = for = - >= -- try decl_stmt boolean = if ! break catch + = - public public call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.destroy() call decl ConcurrentLRUCache.destroy() call decl ConcurrentLRUCache.destroy() call decl ConcurrentLRUCache.destroy() call decl ConcurrentLRUCache.destroy() public public return public public return public public return long long decl ConcurrentLRUCache long long long Map long decl Stats long Object decl NamedList String long Object long public public decl_stmt org.apache.solr.common.util.NamedList < = new <> if == return decl_stmt org.apache.lucene.codecs.blocktree.Stats = call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() call decl ConcurrentLRUCache.getStats() decl_stmt long = call decl ConcurrentLRUCache.getCumulativeLookups() call decl ConcurrentLRUCache.getCumulativeLookups() call decl ConcurrentLRUCache.getCumulativeLookups() call decl ConcurrentLRUCache.getCumulativeLookups() call decl ConcurrentLRUCache.getCumulativeLookups() decl_stmt long = call decl ConcurrentLRUCache.getCumulativeHits() call decl ConcurrentLRUCache.getCumulativeHits() call decl ConcurrentLRUCache.getCumulativeHits() call decl ConcurrentLRUCache.getCumulativeHits() call decl ConcurrentLRUCache.getCumulativeHits() decl_stmt long = call decl ConcurrentLRUCache.getCumulativePuts() call decl ConcurrentLRUCache.getCumulativePuts() call decl ConcurrentLRUCache.getCumulativePuts() call decl ConcurrentLRUCache.getCumulativePuts() call decl ConcurrentLRUCache.getCumulativePuts() decl_stmt long = call decl ConcurrentLRUCache.getCumulativeEvictions() call decl ConcurrentLRUCache.getCumulativeEvictions() call decl ConcurrentLRUCache.getCumulativeEvictions() call decl ConcurrentLRUCache.getCumulativeEvictions() call decl ConcurrentLRUCache.getCumulativeEvictions() decl_stmt long = call decl ConcurrentLRUCache.getCurrentSize() call decl ConcurrentLRUCache.getCurrentSize() call decl ConcurrentLRUCache.getCurrentSize() call decl ConcurrentLRUCache.getCurrentSize() call decl ConcurrentLRUCache.getCurrentSize() decl_stmt long = decl_stmt long = decl_stmt long = decl_stmt long = for : += += += += call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if != decl_stmt java.util.Map = call decl ConcurrentLRUCache.getLatestAccessedItems() call decl ConcurrentLRUCache.getLatestAccessedItems() call decl ConcurrentLRUCache.getLatestAccessedItems() call decl ConcurrentLRUCache.getLatestAccessedItems() call decl ConcurrentLRUCache.getLatestAccessedItems() == - : for : < call long.entrySet() call long.entrySet() call long.entrySet() call long.entrySet() call long.entrySet() decl_stmt java.lang.Object = decl_stmt java.lang.Object = decl_stmt java.lang.String = + decl_stmt java.lang.String = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return public public return +