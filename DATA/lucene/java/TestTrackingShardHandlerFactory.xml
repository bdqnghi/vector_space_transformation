org.apache.solr.handler.component java.util.ArrayList import java.util.List import java.util.Map import org.apache.solr.BaseDistributedSearchTestCase import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.cloud.AbstractFullDistribZkTestBase import org.apache.solr.common.SolrInputDocument import org.apache.solr.core.CoreContainer import org.junit.Test import class annotation org.apache.solr.handler.component.TestTrackingShardHandlerFactory super super extends protected protected return TrackingShardHandlerFactory String decl ShardRequestAndParams decl TrackingShardHandlerFactory decl TrackingShardHandlerFactory int decl ShardRequestAndParams decl List decl TrackingShardHandlerFactory CloudSolrClient decl Map SolrInputDocument decl List = public = public throws decl_stmt java.lang.String = decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt RequestTrackingQueue = new for : decl_stmt org.apache.solr.core.CoreContainer = decl_stmt org.apache.solr.handler.component.ShardHandlerFactory = call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() assert instanceof decl_stmt org.apache.solr.handler.component.TrackingShardHandlerFactory = call decl Map.getTrackingQueue() call decl Map.getTrackingQueue() call decl Map.getTrackingQueue() call decl Map.getTrackingQueue() call decl Map.getTrackingQueue() decl_stmt java.util.List < = call decl TrackingShardHandlerFactory.getCoreAdminRequests() call decl TrackingShardHandlerFactory.getCoreAdminRequests() call decl TrackingShardHandlerFactory.getCoreAdminRequests() call decl TrackingShardHandlerFactory.getCoreAdminRequests() call decl TrackingShardHandlerFactory.getCoreAdminRequests() call TrackingShardHandlerFactory.size() call TrackingShardHandlerFactory.size() call TrackingShardHandlerFactory.size() call TrackingShardHandlerFactory.size() call TrackingShardHandlerFactory.size() decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call decl List.setDefaultCollection() call decl List.setDefaultCollection() call decl List.setDefaultCollection() call decl List.setDefaultCollection() call decl List.setDefaultCollection() for = < ++ decl_stmt org.apache.solr.common.SolrInputDocument = new call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() == : + call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() call CloudSolrClient.addField() + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.commit() call decl List.commit() call decl List.commit() call decl List.commit() call decl List.commit() call decl List.query() call decl List.query() call decl List.query() call decl List.query() call decl List.query() new decl_stmt ShardRequestAndParams = call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() = call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() decl_stmt ShardRequestAndParams = call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() = call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl TrackingShardHandlerFactory.getShardRequestByPurpose() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() call decl List.getZkStateReader() decl_stmt int = decl_stmt java.util.Map < < = call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() for < < : call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() += for : decl_stmt org.apache.solr.core.CoreContainer = decl_stmt org.apache.solr.handler.component.ShardHandlerFactory = call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() call decl ShardRequestAndParams.getShardHandlerFactory() assert instanceof decl_stmt org.apache.solr.handler.component.TrackingShardHandlerFactory = call decl Map.isTracking() call decl Map.isTracking() call decl Map.isTracking() call decl Map.isTracking() call decl Map.isTracking() call decl List.query() call decl List.query() call decl List.query() call decl List.query() call decl List.query() new = = call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() call decl TrackingShardHandlerFactory.getAllRequests() for < < : call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() call decl TrackingShardHandlerFactory.entrySet() +=