org.apache.lucene.queryparser.flexible.core.processors java.util.ArrayList import java.util.List import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import class org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessorImpl super super implements QueryConfigHandler decl ArrayList public public throws return private private throws = = return ChildrenList decl List decl List protected protected throws decl_stmt java.util.List < = decl_stmt ChildrenList if != && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = try for : = if == throw new call ChildrenList.add() call ChildrenList.add() call ChildrenList.add() call ChildrenList.add() call ChildrenList.add() decl_stmt java.util.List < = finally = ChildrenList private private decl_stmt ChildrenList = for : if ! = call ChildrenList.clear() call ChildrenList.clear() call ChildrenList.clear() call ChildrenList.clear() call ChildrenList.clear() break if == = new = return public public = public public return