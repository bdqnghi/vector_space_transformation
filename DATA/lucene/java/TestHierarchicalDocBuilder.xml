org.apache.solr.handler.dataimport java.io.IOException import java.text.MessageFormat import java.util.ArrayList import java.util.Collections import java.util.HashMap import java.util.List import java.util.Locale import java.util.Map import org.apache.lucene.document.Document import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.search.join.BitSetProducer import org.apache.lucene.search.join.QueryBitSetProducer import org.apache.lucene.search.join.ScoreMode import org.apache.lucene.search.join.ToParentBlockJoinQuery import org.apache.solr.common.util.StrUtils import org.apache.solr.handler.data.config.ConfigNameConstants import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.SolrIndexSearcher import org.junit.After import org.junit.Before import org.junit.BeforeClass import org.junit.Test import class org.apache.solr.handler.dataimport.TestHierarchicalDocBuilder super super extends String String SolrQueryRequest String String String int public static public static throws public public = public public call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() String decl List int String int decl List Query String String decl List decl List int int String String String ToParentBlockJoinQuery String ToParentBlockJoinQuery String decl List String int public public throws decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.util.List < = decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt int = decl_stmt java.lang.String = + + decl_stmt java.util.List < = decl_stmt java.util.List < = new < += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = + + = + + decl_stmt java.util.List < = += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = + + = + + decl_stmt java.util.List < = += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() = + + = += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = + + + + + + + + + + decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.search.join.ToParentBlockJoinQuery = decl_stmt org.apache.lucene.search.join.ToParentBlockJoinQuery = new Query ContextHolder int Hierarchy String int String public public throws decl_stmt java.lang.String final final = decl_stmt int = + decl_stmt int = + decl_stmt ContextHolder = new decl_stmt java.lang.String = + + + + + - + decl_stmt Hierarchy = call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() call ContextHolder.hierarchies() decl_stmt org.apache.lucene.search.Query = call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() call Hierarchy.elementData() decl List decl Builder private private decl_stmt java.util.List < = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new return call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() decl_stmt org.apache.lucene.search.Query = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return decl BooleanQuery decl Builder private private decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.join.ToParentBlockJoinQuery = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return ToParentBlockJoinQuery private private decl_stmt org.apache.lucene.search.join.ToParentBlockJoinQuery = new return decl List SolrIndexSearcher boolean TopDocs Document private private throws decl_stmt org.apache.solr.search.SolrIndexSearcher = call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) * decl_stmt java.util.List < = new < for = < ++ decl_stmt org.apache.lucene.document.Document = call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call org.apache.solr.search.SolrIndexSearcher.doc(int,Set) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) for : decl_stmt boolean = call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() if ! String decl List decl List decl Map private < private < decl_stmt java.util.List < < = new < < decl_stmt java.util.List < = new < for = < ++ decl_stmt java.lang.String = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Map < = + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() return decl List String String String String private private decl_stmt java.util.List < = + = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt java.lang.String = return Hierarchy decl List decl List String decl Map private < private < decl_stmt java.util.List < = new < decl_stmt java.util.List < < = new < < for = < ++ ++ decl_stmt java.lang.String = decl_stmt java.util.Map < = + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt Hierarchy = new = = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() return decl List int decl List decl Map String String private < private < < decl_stmt java.util.List < = new < for : decl_stmt java.util.Map < = decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = + decl_stmt int = + decl_stmt java.util.List < = call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return String StringBuilder String int String String decl List String private private < if == return decl_stmt int = + decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt java.lang.String = + + decl_stmt java.lang.String = decl_stmt java.lang.String = + + + decl_stmt java.util.List < = decl_stmt java.lang.String = + decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() String StringBuilder private private decl_stmt java.lang.StringBuilder = new for : decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl BooleanQuery private private decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new return new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() private private ++ return