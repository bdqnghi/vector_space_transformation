org.apache.solr.handler.component java.io.IOException import java.lang.invoke.MethodHandles import java.net.URL import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.LinkedHashMap import java.util.LinkedHashSet import java.util.List import java.util.Map import java.util.Map.Entry import org.apache.commons.lang.ArrayUtils import org.apache.commons.lang.StringUtils import org.apache.lucene.util.FixedBitSet import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.FacetParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.ShardParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.common.util.StrUtils import org.apache.solr.request.SimpleFacets import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.FieldType import org.apache.solr.search.QueryParsing import org.apache.solr.search.SyntaxError import org.slf4j.Logger import org.slf4j.LoggerFactory import class annotation org.apache.solr.handler.component.FacetComponent super super extends String String Logger String String decl String String String String String decl HashSet String ModifiableSolrParams decl Iterator SolrParams public public throws if = decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt java.util.Iterator < = call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() call SolrParams.getParameterNamesIterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() continue decl_stmt java.util.HashSet < = new <> call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() new call decl HashSet.size() call decl HashSet.size() call decl HashSet.size() call decl HashSet.size() call decl HashSet.size() decl String RangeFacetRequest decl String decl List decl List public static public static decl_stmt java.util.List < = decl_stmt java.util.List < = decl_stmt java.lang.String = if != = new <> for : decl_stmt org.apache.solr.analytics.request.RangeFacetRequest = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String = if != = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new FacetContext public static public static throws decl_stmt FacetContext = if == throw new return public < public < return public < public < return decl List public < public < decl_stmt java.util.List < = return == : decl List public < public < decl_stmt java.util.List < = return == : decl String SimpleFacets SolrParams decl SimpleOrderedMap decl NamedList PivotFacetProcessor public public throws if decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt org.apache.solr.request.SimpleFacets = new decl_stmt org.apache.solr.common.util.NamedList < = decl_stmt java.lang.String = call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() if ! decl_stmt org.apache.solr.handler.component.PivotFacetProcessor = new decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < < = call org.apache.solr.handler.component.PivotFacetProcessor.process(String) call org.apache.solr.handler.component.PivotFacetProcessor.process(String) call org.apache.solr.handler.component.PivotFacetProcessor.process(String) call org.apache.solr.handler.component.PivotFacetProcessor.process(String) call org.apache.solr.handler.component.PivotFacetProcessor.process(String) if != call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl NamedList RangeFacetProcessor public static < public static < if ! return decl_stmt org.apache.solr.handler.component.RangeFacetProcessor = new decl_stmt org.apache.solr.common.util.NamedList < = new <> try call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetRequest,NamedList) call org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetRequest,NamedList) call org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetRequest,NamedList) call org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetRequest,NamedList) call org.apache.solr.handler.component.RangeFacetProcessor.getFacetRangeCounts(RangeFacetRequest,NamedList) call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() catch throw new catch throw new return boolean decl List String String String decl List String String ShardRequest String public public throws if ! return if != return for = < ++ decl_stmt java.util.List < = for : if ! continue decl_stmt java.util.List < = if == || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == continue decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt java.lang.String = decl_stmt java.lang.String decl_stmt java.lang.String = if != = + + + else = + + + if == = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != decl_stmt java.lang.String = decl_stmt org.apache.solr.handler.component.ShardRequest = decl_stmt boolean = for : if & != && != && == && = break if == = = new = new = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() |= call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ++ call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() if if return private private for : String decl List ShardRequest String String String FacetInfo PivotFacet private private decl_stmt FacetInfo = decl_stmt org.apache.solr.handler.component.ShardRequest = new = new = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() |= call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() - call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() for = < call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() ++ decl_stmt java.lang.String = call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() decl_stmt org.apache.solr.handler.component.PivotFacet = call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() decl_stmt java.util.List < = call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt java.lang.String = + decl_stmt java.lang.String if != = + + + call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() call PivotFacet.facetStr() else = + + + call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() for : decl_stmt java.lang.String = call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() ++ FacetInfo public public if ! return if & != |= decl_stmt FacetInfo = if == = = new call FacetInfo.parse() call FacetInfo.parse() call FacetInfo.parse() call FacetInfo.parse() call FacetInfo.parse() else decl String private private decl_stmt java.lang.String final final final = if != for : + + String private private for : decl_stmt java.lang.String = + + + + = <= : + if if > = = else = else if <= = else = int double / = + + PivotFacet private private < for < : decl_stmt org.apache.solr.handler.component.PivotFacet = for : call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() String int int int int String SolrParams double int int String private private decl_stmt org.apache.solr.common.params.SolrParams final final = decl_stmt java.lang.String final final = + + decl_stmt int final final = call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) + decl_stmt int final final = call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) + decl_stmt double final final = call org.apache.solr.common.params.SolrParams.getFieldDouble(String,String) call org.apache.solr.common.params.SolrParams.getFieldDouble(String,String) call org.apache.solr.common.params.SolrParams.getFieldDouble(String,String) call org.apache.solr.common.params.SolrParams.getFieldDouble(String,String) call org.apache.solr.common.params.SolrParams.getFieldDouble(String,String) + decl_stmt int final final = call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) + decl_stmt int final final = call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) call org.apache.solr.common.params.SolrParams.getFieldInt(String,String) + decl_stmt java.lang.String final final = > : decl_stmt java.lang.String final final = call org.apache.solr.common.params.SolrParams.getFieldParam(String,String) call org.apache.solr.common.params.SolrParams.getFieldParam(String,String) call org.apache.solr.common.params.SolrParams.getFieldParam(String,String) call org.apache.solr.common.params.SolrParams.getFieldParam(String,String) call org.apache.solr.common.params.SolrParams.getFieldParam(String,String) decl_stmt int = + decl_stmt int = if && < && < = int double / = else if if < = = else = + + int private private decl_stmt int = * + return public public if ! return if & != else if & != if & != int long FixedBitSet NamedList ShardFacetCount long decl SimpleOrderedMap long decl List boolean NamedList String QueryFacet FacetInfo int decl ShardFacetCount NamedList private private decl_stmt FacetInfo = for : decl_stmt int = decl_stmt org.apache.solr.common.util.NamedList = try = catch if continue throw new + decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt long = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) decl_stmt QueryFacet = call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() += decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != for : call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < = < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != for < : for : call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() if <= && <= continue if <= && continue if <= && <= continue if <= && continue = decl_stmt ShardFacetCount = decl_stmt int = >= + : decl_stmt long = == : - for = < ++ decl_stmt ShardFacetCount = decl_stmt boolean = if < = else decl_stmt long = for = < ++ decl_stmt org.apache.lucene.util.FixedBitSet = if != && >= call decl List.length() call decl List.length() call decl List.length() call decl List.length() call decl List.length() || ! call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() += if >= = if for = < ++ decl_stmt org.apache.lucene.util.FixedBitSet = if != && >= call decl List.length() call decl List.length() call decl List.length() call decl List.length() call decl List.length() || ! call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() && > = decl_stmt java.util.List < = if == = = new <> decl LinkedHashMap FacetInfo decl Map boolean int private private if != return decl_stmt FacetInfo = decl_stmt java.util.Map < = if == return decl_stmt java.util.LinkedHashMap < = new <> decl_stmt int = decl_stmt boolean = for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() if >= call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() else call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() + + + + + = if = FacetInfo decl RangeFacetRequest decl DistribRangeFacet String private private if != return decl_stmt FacetInfo = for < : call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() decl_stmt java.lang.String final final = decl_stmt DistribRangeFacet final final final final final = decl_stmt int = if == continue call decl RangeFacetRequest.removeRangeFacetsUnderLimits() call decl RangeFacetRequest.removeRangeFacetsUnderLimits() call decl RangeFacetRequest.removeRangeFacetsUnderLimits() call decl RangeFacetRequest.removeRangeFacetsUnderLimits() call decl RangeFacetRequest.removeRangeFacetsUnderLimits() FacetInfo int String private private if != return decl_stmt FacetInfo = if == return for < : call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() decl_stmt java.lang.String = decl_stmt int = if == continue decl Iterator decl SimpleOrderedMap String decl Map decl SimpleOrderedMap decl Iterator decl Map private private decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < = < < if != for < < : decl_stmt java.lang.String final final = decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = if == else decl_stmt java.util.Iterator < < = decl_stmt java.util.Iterator < < = call decl SimpleOrderedMap.iterator() call decl SimpleOrderedMap.iterator() call decl SimpleOrderedMap.iterator() call decl SimpleOrderedMap.iterator() call decl SimpleOrderedMap.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() throw new + call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() throw new + call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.setValue() call decl Map.setValue() call decl Map.setValue() call decl Map.setValue() call decl Map.setValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() + call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() if call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() throw new + call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() PivotFacet String decl SimpleOrderedMap private private decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < < = < < < if != for < < < : decl_stmt java.lang.String final final = decl_stmt org.apache.solr.handler.component.PivotFacet = call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) long NamedList String NamedList NamedList String FacetInfo DistribFieldFacet ShardFacetCount private private decl_stmt FacetInfo = for : decl_stmt org.apache.solr.common.util.NamedList = decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if == continue for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt DistribFieldFacet = call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() if == continue decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt long = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) decl_stmt ShardFacetCount = call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() call DistribFieldFacet.counts() if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + + + + + + continue += int FacetInfo PivotFacet NamedList decl NamedList private private decl_stmt FacetInfo = for : decl_stmt int = decl_stmt org.apache.solr.common.util.NamedList = decl_stmt org.apache.solr.common.util.NamedList < < < = < < < call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if == throw new + for < < < : decl_stmt org.apache.solr.handler.component.PivotFacet = call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.mergeResponseFromShard(int,ResponseBuilder,List) call org.apache.solr.handler.component.PivotFacet.removeAllRefinementsForShard(int) call org.apache.solr.handler.component.PivotFacet.removeAllRefinementsForShard(int) call org.apache.solr.handler.component.PivotFacet.removeAllRefinementsForShard(int) call org.apache.solr.handler.component.PivotFacet.removeAllRefinementsForShard(int) call org.apache.solr.handler.component.PivotFacet.removeAllRefinementsForShard(int) if for < : private private for < : if return return PivotFacet private private for = < ++ decl_stmt org.apache.solr.handler.component.PivotFacet = if ! call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) call org.apache.solr.handler.component.PivotFacet.getQueuedRefinements(int) return return private private for = < ++ if long decl NamedList int decl SimpleOrderedMap int int decl RangeFacetRequest decl NamedList String boolean FacetInfo decl ShardFacetCount decl NamedList decl NamedList public public if ! || != return decl_stmt FacetInfo = decl_stmt org.apache.solr.common.util.NamedList < = new <> decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() for : call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call FacetInfo.queryFacets() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() for : call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() call FacetInfo.facets() decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt ShardFacetCount decl_stmt boolean = if = if == || = else if = else = if decl_stmt int = < : + for = < ++ if < break call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() else decl_stmt int = decl_stmt int = >= : for = < ++ decl_stmt long = if < continue if > -- continue if <= break -- call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < = new <> for < : call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() call FacetInfo.rangeFacets() decl_stmt java.lang.String = decl_stmt DistribRangeFacet = call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() if != && call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() call FacetInfo.pivotFacets() > call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() = decl SimpleOrderedMap PivotFacet decl List String private < < < private < < < decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < < = new <> for < : decl_stmt java.lang.String = decl_stmt org.apache.solr.handler.component.PivotFacet = decl_stmt java.util.List < < = call org.apache.solr.handler.component.PivotFacet.getTrimmedPivotsAsListOfNamedLists() call org.apache.solr.handler.component.PivotFacet.getTrimmedPivotsAsListOfNamedLists() call org.apache.solr.handler.component.PivotFacet.getTrimmedPivotsAsListOfNamedLists() call org.apache.solr.handler.component.PivotFacet.getTrimmedPivotsAsListOfNamedLists() call org.apache.solr.handler.component.PivotFacet.getTrimmedPivotsAsListOfNamedLists() if == = < > call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() return static static if < return int else return static static if < return else return public public return public public return PivotFacet DistribFieldFacet decl String QueryFacet decl String decl String = new <> = new <> decl_stmt java.lang.String = if != for : decl_stmt QueryFacet = new call QueryFacet.getKey() call QueryFacet.getKey() call QueryFacet.getKey() call QueryFacet.getKey() call QueryFacet.getKey() decl_stmt java.lang.String = if != for : decl_stmt DistribFieldFacet = new call DistribFieldFacet.getKey() call DistribFieldFacet.getKey() call DistribFieldFacet.getKey() call DistribFieldFacet.getKey() call DistribFieldFacet.getKey() decl_stmt java.lang.String = if != for : decl_stmt org.apache.solr.handler.component.PivotFacet = new call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() call PivotFacet.getKey() = public public return public public return public < public < return public < public < return public public return Integer Boolean protected protected = = = = decl_stmt java.lang.Integer = if == decl_stmt java.lang.Boolean = = != && ! : = = = > : if = else if = = protected protected = = long int FixedBitSet String int long ShardFacetCount decl_stmt int = == : decl_stmt int = decl_stmt org.apache.lucene.util.FixedBitSet = new + decl_stmt long = for = < ++ decl_stmt java.lang.String = decl_stmt long = if == += -- else decl_stmt ShardFacetCount = if == = new = = == : = ++ += call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) = if < || != && < = += = = decl ShardFacetCount public public decl_stmt ShardFacetCount = new = return decl ShardFacetCount public public decl_stmt ShardFacetCount = new if < return - else if < return return = return return decl HashMap boolean public public decl_stmt HashMap < = new <> decl_stmt boolean = for < : if >= call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() else call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() + + + + + = if = public public return + + + + + +