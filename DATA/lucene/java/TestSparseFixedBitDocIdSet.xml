org.apache.lucene.util java.io.IOException import java.util.ArrayList import java.util.BitSet import java.util.Collections import java.util.List import class org.apache.lucene.util.TestSparseFixedBitDocIdSet super super extends decl List SparseFixedBitSet public public throws decl_stmt org.apache.lucene.util.SparseFixedBitSet final final = new decl_stmt java.util.List < = new <> for = != - = + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() >= for : call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() for : call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) call org.apache.lucene.util.SparseFixedBitSet.set(int) return new call org.apache.lucene.util.SparseFixedBitSet.approximateCardinality() call org.apache.lucene.util.SparseFixedBitSet.approximateCardinality() call org.apache.lucene.util.SparseFixedBitSet.approximateCardinality() call org.apache.lucene.util.SparseFixedBitSet.approximateCardinality() call org.apache.lucene.util.SparseFixedBitSet.approximateCardinality() public public throws for = < ++