org.apache.solr.search java.io.IOException import java.util.List import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.SortedDocValues import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LeafCollector import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Weight import org.apache.lucene.util.BitDocIdSet import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.FixedBitSet import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.StrField import com.google.common.primitives.Longs import class org.apache.solr.search.HashQParserPlugin super super extends String public public return new String int int public public decl_stmt int = decl_stmt int = decl_stmt java.lang.String = return new public public if > return else return public public return * + + + HashQuery public public if == return decl_stmt HashQuery = return && == && == decl String decl List SegmentPartitioner SolrIndexSearcher IndexReaderContext ConstantScoreQuery decl FixedBitSet public public throws decl_stmt java.lang.String = decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt IndexReaderContext = call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() call SolrIndexSearcher.getTopReaderContext() decl_stmt java.util.List < = call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt org.apache.lucene.util.FixedBitSet = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : try decl_stmt SegmentPartitioner = new call SegmentPartitioner.run() call SegmentPartitioner.run() call SegmentPartitioner.run() call SegmentPartitioner.run() call SegmentPartitioner.run() = catch throw new decl_stmt org.apache.lucene.search.ConstantScoreQuery = new new return public public return public public return new int LeafReader public public decl_stmt org.apache.lucene.index.LeafReader = try = new call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt int = call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() for = < ++ if & == catch throw new SolrIndexSearcher FieldType decl String HashKey HashKey String decl HashKey IndexSchema public public decl_stmt java.lang.String = decl_stmt org.apache.solr.client.solrj.io.comp.HashKey = new decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() call org.apache.solr.search.SolrIndexSearcher.getSchema() for = < ++ decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) call org.apache.solr.schema.IndexSchema.getField(String) decl_stmt org.apache.solr.client.solrj.io.comp.HashKey = if instanceof = new else = new = decl_stmt org.apache.solr.client.solrj.io.comp.HashKey = > new : return new public public throws public public throws = public public throws if & == public public throws = BytesRef CharsRef public public decl_stmt org.apache.lucene.util.BytesRef = decl_stmt org.apache.lucene.util.CharsRef = return call org.apache.lucene.util.CharsRef.hashCode() call org.apache.lucene.util.CharsRef.hashCode() call org.apache.lucene.util.CharsRef.hashCode() call org.apache.lucene.util.CharsRef.hashCode() call org.apache.lucene.util.CharsRef.hashCode() public public throws = long public public decl_stmt long = return public public return public public public public throws public public return + + +