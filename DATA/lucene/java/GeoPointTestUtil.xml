org.apache.lucene.spatial.geopoint.search java.util.ArrayList import java.util.Random import org.apache.lucene.geo.GeoUtils import org.apache.lucene.geo.Polygon import org.apache.lucene.geo.Rectangle import com.carrotsearch.randomizedtesting.RandomizedContext import class org.apache.lucene.spatial.geopoint.search.GeoPointTestUtil public static public static return - + * public static public static return - + * public static public static return + - public static public static return + - public static public static return public static public static return public static public static return public static public static return public static public static return public static public static return Rectangle public static public static if return decl_stmt org.apache.lucene.geo.Rectangle = if return else return Rectangle public static public static if return decl_stmt org.apache.lucene.geo.Rectangle = if return else return double private static private static if < decl_stmt double = = = if == && < decl_stmt double = = = return new decl double decl double private static private static assert == decl_stmt double final final final = new decl_stmt double final final final = new = = = = = = = = = = return new decl double decl double private static private static assert == decl_stmt double final final final = new decl_stmt double final final final = new = = = = = = = = return new decl double double decl ArrayList double decl double double double double double double double decl ArrayList private static private static while decl_stmt double final final decl_stmt double final final if == = = else = = decl_stmt double = + * decl_stmt double = decl_stmt java.util.ArrayList < = new <> decl_stmt java.util.ArrayList < = new <> decl_stmt double = while += * if > break decl_stmt double = * - + * decl_stmt double = + * decl_stmt double = + * if <= || >= continue continue if > = - = - else if < - = - - = - if <= || >= continue continue call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() decl_stmt double = new call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() decl_stmt double = new call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() for = < call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() ++ = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() = call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() return new private static private static return + + - * * - double private static private static if >= - && <= return decl_stmt double = + return <= : - - double private static private static if >= - && <= return decl_stmt double = + if < return + else if == && > return else return - + private static private static return