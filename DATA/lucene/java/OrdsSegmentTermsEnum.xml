org.apache.lucene.codecs.blocktreeords java.io.IOException import java.io.PrintStream import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.codecs.blocktreeords.FSTOrdsOutputs.Output import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.TermState import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.store.IndexInput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IntsRef import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.Util import class org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnum super super extends OrdsFieldReader boolean OrdsSegmentTermsEnumFrame decl BytesReader ByteArrayDataInput decl FST decl FST BytesRefBuilder int int boolean boolean IndexInput decl OrdsSegmentTermsEnumFrame OrdsSegmentTermsEnumFrame if == = call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() decl OrdsSegmentTermsEnumFrame private private throws if >= decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame final final final = new + for = < ++ = new = assert == return decl FST private < private < if >= decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = new + for = < ++ = new <> = return long long OrdsSegmentTermsEnumFrame < throws call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() decl_stmt long final final = >>> decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame final final = + = & != = = & != if = call OrdsSegmentTermsEnumFrame.setFloorData() call OrdsSegmentTermsEnumFrame.setFloorData() call OrdsSegmentTermsEnumFrame.setFloorData() call OrdsSegmentTermsEnumFrame.setFloorData() call OrdsSegmentTermsEnumFrame.setFloorData() return OrdsSegmentTermsEnumFrame < throws decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame final final = + = if == && != - if > call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() else assert == assert == else = - = = = = = = = - return private private = return private private = return static static try return + + catch return int int OrdsSegmentTermsEnumFrame int int int decl FST decl FST SeekStatus Output int public public final final throws if == throw new call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) + assert decl_stmt org.apache.lucene.util.fst.FST < decl_stmt int decl_stmt Output = if && != = assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame = assert <= call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() decl_stmt int final final = decl_stmt int = while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break = + assert == + & : + char + + + & if != = if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = + ++ if == decl_stmt int final final = decl_stmt int final final = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break ++ if == = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - = if < = else if > = = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() else assert call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() == if return else else = - = call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() assert != = = = = = while < decl_stmt int final final = + & decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() + if == = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) if ! = call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) + return call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == return else return else = call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte assert != if != = ++ if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) if ! = call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) return call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == return else return int int OrdsSegmentTermsEnumFrame int int int decl FST decl FST SeekStatus Output int public public final final throws if == throw new call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) + assert decl_stmt org.apache.lucene.util.fst.FST < decl_stmt int decl_stmt Output = if && != = assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame = assert <= call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() decl_stmt int final final = decl_stmt int = while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break = + assert == + & : + char + + + & if != = if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = + ++ if == decl_stmt int final final = decl_stmt int final final = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break ++ if == = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - = if < = else if > = = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() else assert call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() == if return else else = - = call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() assert != = = = = = while < decl_stmt int final final = + & decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < = call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() + if == = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = if != return else return else return else call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte = assert != if != = ++ if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = if != return else return else return long OrdsSegmentTermsEnumFrame BytesRef boolean ByteArrayDataInput long Output int private private throws if == else decl_stmt int = decl_stmt boolean = while decl_stmt org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame = assert != decl_stmt org.apache.lucene.util.BytesRef final final = new call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() if == - + : + + + + + + + : + + + + + == - : + + + + + + + + << + : + : + + + + + + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() + + else + : + + + + + + + : + + + + + + + == - : + + + + + + + + << + : + : + + + + + + + + call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() + + if != assert ! || != : + + + if > && && != call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) - & + char + + call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) - & throw new decl_stmt Output = if == throw new else if && ! decl_stmt org.apache.lucene.store.ByteArrayDataInput final final = new decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() decl_stmt long final final = << | : | : if != + + + throw new if == break if == = ++ long decl FST long boolean public public throws if == decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < if != = call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() else = = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() = = assert ! if == || == decl_stmt boolean final final = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() assert while == if ! call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadNextFloorBlock() else if == assert call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() = = return decl_stmt long final final = = - if == - || != call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToSubBlock(long) = while decl_stmt long = if call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() else = return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() public public assert ! return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() public public assert ! assert > return - public public throws assert ! call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() return public public throws assert ! call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() return public public throws assert ! call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() return call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() call OrdsFieldReader.parent() BlockTermState public public assert if call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() != || ! assert != && instanceof decl_stmt org.apache.lucene.codecs.BlockTermState = = call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.getTermBlockOrd() = + assert > = else = BlockTermState public public throws assert ! call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.decodeMetaData() decl_stmt org.apache.lucene.codecs.BlockTermState = call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() call OrdsSegmentTermsEnumFrame.state() assert > = - return decl FST InputOutput public public throws if < || >= throw new + + + + assert decl_stmt InputOutput = call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) if == = else = - decl_stmt org.apache.lucene.util.fst.FST < = = = if > call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.scanToFloorFrame(long) call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.loadBlock() while <= call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.blocktreeords.OrdsSegmentTermsEnumFrame.next() assert == + : + + + assert = = public public return + + public public return + + + + int int long boolean Output int Output int byte IntsRefBuilder InputOutput Output Output int private private throws decl_stmt org.apache.lucene.util.IntsRefBuilder final final = new call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() decl_stmt Output = decl_stmt int = decl_stmt int = decl_stmt Output = while if call boolean.isFinal() call boolean.isFinal() call boolean.isFinal() call boolean.isFinal() call boolean.isFinal() decl_stmt Output final final = if >= && <= - = = if call org.apache.lucene.util.IntsRefBuilder.grow(int) call org.apache.lucene.util.IntsRefBuilder.grow(int) call org.apache.lucene.util.IntsRefBuilder.grow(int) call org.apache.lucene.util.IntsRefBuilder.grow(int) call org.apache.lucene.util.IntsRefBuilder.grow(int) + call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() if != decl_stmt int = decl_stmt int = - decl_stmt int = decl_stmt boolean = while <= = + >>> call decl FST.setPosition() call decl FST.setPosition() call decl FST.setPosition() call decl FST.setPosition() call decl FST.setPosition() call decl FST.skipBytes() call decl FST.skipBytes() call decl FST.skipBytes() call decl FST.skipBytes() call decl FST.skipBytes() * decl_stmt byte final final = call decl FST.readByte() call decl FST.readByte() call decl FST.readByte() call decl FST.readByte() call decl FST.readByte() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() decl_stmt Output final final if & != = else = if > - = + else if < = - else = break if = - else call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() decl_stmt InputOutput = new = call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() = return call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) ++ = else while decl_stmt Output final final = decl_stmt long = - if >= && <= = call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) call org.apache.lucene.util.IntsRefBuilder.setIntAt(int,int) ++ break else if < || call boolean.isLast() call boolean.isLast() call boolean.isLast() call boolean.isLast() call boolean.isLast() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() decl_stmt InputOutput = new = call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() assert != = return else call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() call OrdsFieldReader.index() else call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() call IntsRefBuilder.setLength() decl_stmt InputOutput = new = call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() = return