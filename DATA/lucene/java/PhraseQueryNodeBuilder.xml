org.apache.lucene.queryparser.flexible.standard.builders java.util.List import org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder import org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import class org.apache.lucene.queryparser.flexible.standard.builders.PhraseQueryNodeBuilder super super implements decl PhraseQuery decl List TokenizedPhraseQueryNode TermQuery decl Builder public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.TokenizedPhraseQueryNode = decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt java.util.List < = call TokenizedPhraseQueryNode.getChildren() call TokenizedPhraseQueryNode.getChildren() call TokenizedPhraseQueryNode.getChildren() call TokenizedPhraseQueryNode.getChildren() call TokenizedPhraseQueryNode.getChildren() if != for : decl_stmt org.apache.lucene.search.TermQuery = decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.FieldQueryNode = call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl List.getTerm() call decl List.getTerm() call decl List.getTerm() call decl List.getTerm() call decl List.getTerm() call TermQuery.getPositionIncrement() call TermQuery.getPositionIncrement() call TermQuery.getPositionIncrement() call TermQuery.getPositionIncrement() call TermQuery.getPositionIncrement() return call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build()