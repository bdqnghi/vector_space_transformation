org.apache.lucene.facet.taxonomy.directory java.io.IOException import java.util.Random import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.document.Document import org.apache.lucene.facet.FacetField import org.apache.lucene.facet.FacetTestCase import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.taxonomy.FacetLabel import org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache import org.apache.lucene.facet.taxonomy.writercache.Cl2oTaxonomyWriterCache import org.apache.lucene.facet.taxonomy.writercache.LruTaxonomyWriterCache import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.store.Directory import org.apache.lucene.util.IOUtils import class org.apache.lucene.facet.taxonomy.directory.TestConcurrentFacetedIndexing super super extends TaxonomyWriterCache public public public public return - public public return public public return public public Random String String String static static decl_stmt java.util.Random = decl_stmt java.lang.String = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) return new double static static decl_stmt double final final = if < return new else if && > return else return new / int FacetLabel int Directory Random DirectoryTaxonomyReader IndexWriter FacetLabel int FacetLabel String Document decl ConcurrentHashMap FacetField DirectoryTaxonomyWriter Directory decl int AtomicInteger decl Thread FacetsConfig int public public throws decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.store.Directory final final = decl_stmt java.util.concurrent.ConcurrentHashMap final final final < = new <> decl_stmt org.apache.lucene.index.IndexWriter final final = new decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter final final = new call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() decl_stmt java.lang.Thread final final final = new decl_stmt org.apache.lucene.facet.FacetsConfig final final = new for = < ++ call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) call org.apache.lucene.facet.FacetsConfig.setHierarchical(String,boolean) + call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) call org.apache.lucene.facet.FacetsConfig.setMultiValued(String,boolean) + for = < ++ = new public public decl_stmt java.util.Random = while call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() > try decl_stmt org.apache.lucene.document.Document = new decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + while -- > decl_stmt org.apache.lucene.facet.FacetField = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new decl_stmt int = while > decl_stmt java.lang.String = call decl ConcurrentHashMap.put() call decl ConcurrentHashMap.put() call decl ConcurrentHashMap.put() call decl ConcurrentHashMap.put() call decl ConcurrentHashMap.put() -- call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) call org.apache.lucene.facet.FacetsConfig.build(Document) catch throw new for : for : decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader = new if call decl ConcurrentHashMap.size() call decl ConcurrentHashMap.size() call decl ConcurrentHashMap.size() call decl ConcurrentHashMap.size() call decl ConcurrentHashMap.size() + != call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getSize() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getSize() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getSize() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getSize() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getSize() for : call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new if call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) == - + + decl_stmt int = call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getParallelTaxonomyArrays() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getParallelTaxonomyArrays() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getParallelTaxonomyArrays() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getParallelTaxonomyArrays() call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getParallelTaxonomyArrays() for : call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() call decl ConcurrentHashMap.keySet() decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new + call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) > decl_stmt int = decl_stmt int = decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = for = < ++ = call org.apache.lucene.facet.taxonomy.FacetLabel.subpath(int) call org.apache.lucene.facet.taxonomy.FacetLabel.subpath(int) call org.apache.lucene.facet.taxonomy.FacetLabel.subpath(int) call org.apache.lucene.facet.taxonomy.FacetLabel.subpath(int) call org.apache.lucene.facet.taxonomy.FacetLabel.subpath(int) + decl_stmt int = call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) call org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader.getOrdinal(FacetLabel) + = call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() int int Document Random FacetLabel String FacetField public public decl_stmt java.util.Random = while > try decl_stmt org.apache.lucene.document.Document = new decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + while -- > decl_stmt org.apache.lucene.facet.FacetField = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new decl_stmt int = while > decl_stmt java.lang.String = -- catch throw new