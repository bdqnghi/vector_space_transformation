org.apache.lucene.benchmark.byTask.tasks org.apache.lucene.benchmark.byTask.PerfRunData import org.apache.lucene.benchmark.byTask.feeds.QueryMaker import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.search.Collector import org.apache.lucene.search.TopScoreDocCollector import class org.apache.lucene.benchmark.byTask.tasks.SearchWithCollectorTask super super extends String PerfRunData Config public public throws decl_stmt org.apache.lucene.benchmark.byTask.PerfRunData = decl_stmt org.apache.solr.core.Config = call org.apache.lucene.benchmark.byTask.PerfRunData.getConfig() call org.apache.lucene.benchmark.byTask.PerfRunData.getConfig() call org.apache.lucene.benchmark.byTask.PerfRunData.getConfig() call org.apache.lucene.benchmark.byTask.PerfRunData.getConfig() call org.apache.lucene.benchmark.byTask.PerfRunData.getConfig() = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) public public return Collector protected protected throws decl_stmt org.apache.lucene.search.Collector = if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) == = else if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > = else = return public public return public public return public public return public public return public public return