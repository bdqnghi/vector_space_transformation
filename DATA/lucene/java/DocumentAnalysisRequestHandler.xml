org.apache.solr.handler javax.xml.stream.XMLInputFactory import javax.xml.stream.XMLStreamConstants import javax.xml.stream.XMLStreamException import javax.xml.stream.XMLStreamReader import java.io.IOException import java.io.InputStream import java.lang.invoke.MethodHandles import java.util.Collection import java.util.Iterator import java.util.Set import org.apache.commons.io.IOUtils import org.apache.lucene.analysis.Analyzer import org.apache.lucene.util.BytesRef import org.apache.solr.client.solrj.request.DocumentAnalysisRequest import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.AnalysisParams import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ContentStream import org.apache.solr.common.util.ContentStreamBase import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.common.util.XMLErrorLogger import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.common.EmptyEntityResolver import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.handler.DocumentAnalysisRequestHandler super super extends XMLInputFactory XMLErrorLogger float Logger public public = call XMLInputFactory.setXMLReporter() call XMLInputFactory.setXMLReporter() call XMLInputFactory.setXMLReporter() call XMLInputFactory.setXMLReporter() call XMLInputFactory.setXMLReporter() try call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() catch call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + DocumentAnalysisRequest protected protected throws decl_stmt org.apache.solr.client.solrj.request.DocumentAnalysisRequest = return public public return String ContentStream InputStream XMLStreamReader DocumentAnalysisRequest boolean SolrParams String String SolrInputDocument int throws decl_stmt org.apache.solr.client.solrj.request.DocumentAnalysisRequest = new decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(String) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(String) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(String) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(String) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setQuery(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.setShowMatch(boolean) decl_stmt org.apache.solr.common.util.ContentStream = decl_stmt java.io.InputStream = decl_stmt XMLStreamReader = try = call org.apache.solr.common.util.ContentStream.getStream() call org.apache.solr.common.util.ContentStream.getStream() call org.apache.solr.common.util.ContentStream.getStream() call org.apache.solr.common.util.ContentStream.getStream() call org.apache.solr.common.util.ContentStream.getStream() decl_stmt java.lang.String final final = call ContentStream.getContentType() call ContentStream.getContentType() call ContentStream.getContentType() call ContentStream.getContentType() call ContentStream.getContentType() = == call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() : call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() call XMLInputFactory.createXMLStreamReader() while decl_stmt int = call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() call XMLStreamReader.next() switch case call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() return case decl_stmt java.lang.String = call XMLStreamReader.getLocalName() call XMLStreamReader.getLocalName() call XMLStreamReader.getLocalName() call XMLStreamReader.getLocalName() call XMLStreamReader.getLocalName() if call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() decl_stmt org.apache.solr.common.SolrInputDocument = call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(SolrInputDocument) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(SolrInputDocument) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(SolrInputDocument) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(SolrInputDocument) call org.apache.solr.client.solrj.request.DocumentAnalysisRequest.addDocument(SolrInputDocument) break finally if != call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() call XMLStreamReader.close() decl Set decl NamedList Analyzer SchemaField SchemaField decl NamedList AnalysisContext String decl NamedList decl NamedList decl Collection FieldType < < decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.solr.common.util.NamedList < = new <> for : decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() for : decl_stmt org.apache.solr.schema.SchemaField = if ! call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() call org.apache.solr.schema.SchemaField.indexed() continue decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() decl_stmt org.apache.solr.schema.FieldType = decl_stmt java.lang.String final final = decl_stmt java.util.Set < try = != && call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() : catch = if != try decl_stmt AnalysisContext = new call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call org.apache.solr.schema.FieldType.getQueryAnalyzer() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() catch decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() decl_stmt AnalysisContext = new decl_stmt java.util.Collection < = decl_stmt org.apache.solr.common.util.NamedList < < extends extends = new <> for : call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return String boolean SolrInputDocument String String StringBuilder String int throws decl_stmt org.apache.solr.common.SolrInputDocument = new decl_stmt java.lang.String = decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.String = decl_stmt boolean = while decl_stmt int = switch case case case call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) break case if if ! throw new + call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() call org.apache.solr.common.SolrInputDocument.toString() + return else if call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = break case call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() call StringBuilder.setLength() decl_stmt java.lang.String = if ! call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + throw new + for = < ++ decl_stmt java.lang.String = if = break ContentStream decl Iterable decl Iterator String private private decl_stmt java.lang.Iterable < = decl_stmt java.lang.String = if == throw new decl_stmt java.util.Iterator < = call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() call decl Iterable.iterator() if ! call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() throw new decl_stmt org.apache.solr.common.util.ContentStream = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() throw new return