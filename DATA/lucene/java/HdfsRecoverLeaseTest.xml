org.apache.solr.cloud.hdfs java.io.IOException import java.net.URI import java.util.HashSet import java.util.Set import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.FSDataOutputStream import org.apache.hadoop.fs.FileSystem import org.apache.hadoop.fs.Path import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.util.BadHdfsThreadsFilter import org.apache.solr.util.FSHDFSUtils import org.apache.solr.util.FSHDFSUtils.CallerInfo import org.junit.After import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.junit.Test import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import class annotation org.apache.solr.cloud.hdfs.HdfsRecoverLeaseTest super super extends MiniDFSCluster public static public static throws = public static public static throws = public public throws public public throws FSDataOutputStream long URI FileSystem FileSystem FileSystem Configuration Path Path int Path FSDataOutputStream public public throws decl_stmt long = decl_stmt java.net.URI = call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() decl_stmt java.nio.file.Path = new decl_stmt Configuration = new call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() decl_stmt java.io.FileSystem = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() decl_stmt java.nio.file.Path = new call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) + decl_stmt FSDataOutputStream = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() new public public return - call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() decl_stmt java.io.FileSystem = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() decl_stmt java.nio.file.Path = new call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) + decl_stmt FSDataOutputStream = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() if decl_stmt int = for = < ++ call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() decl_stmt java.io.FileSystem = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() new public public return - call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() public public return public public return RecoverThread decl Set int FileSystem long decl Set URI int WriterThread Configuration Path int Path FSDataOutputStream public public throws decl_stmt long = decl_stmt java.net.URI final final = call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() call MiniDFSCluster.getURI() decl_stmt java.nio.file.Path final final = new decl_stmt Configuration final final = new call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() class class extends extends decl_stmt java.io.FileSystem private decl_stmt int private public public = try = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() catch throw new public public decl_stmt java.nio.file.Path = new call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) + + decl_stmt FSDataOutputStream try = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() if decl_stmt int = for = < ++ call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() catch throw new public public throws call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() public public return class class extends extends decl_stmt java.io.FileSystem private decl_stmt int private public public = try = call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() call java.nio.file.Path.toUri() catch throw new public public decl_stmt java.nio.file.Path = new call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) + + try new public public return catch throw new public public throws call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() call FileSystem.close() decl_stmt java.util.Set < = new < decl_stmt java.util.Set < = new < decl_stmt int = for = < ++ decl_stmt WriterThread = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call WriterThread.run() call WriterThread.run() call WriterThread.run() call WriterThread.run() call WriterThread.run() for : call WriterThread.join() call WriterThread.join() call WriterThread.join() call WriterThread.join() call WriterThread.join() for : decl_stmt RecoverThread = new call WriterThread.getFileId() call WriterThread.getFileId() call WriterThread.getFileId() call WriterThread.getFileId() call WriterThread.getFileId() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call RecoverThread.run() call RecoverThread.run() call RecoverThread.run() call RecoverThread.run() call RecoverThread.run() for : call WriterThread.close() call WriterThread.close() call WriterThread.close() call WriterThread.close() call WriterThread.close() for : call RecoverThread.close() call RecoverThread.close() call RecoverThread.close() call RecoverThread.close() call RecoverThread.close() - int Path FSDataOutputStream public public decl_stmt java.nio.file.Path = new + + decl_stmt FSDataOutputStream try = if decl_stmt int = for = < ++ call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() call FSDataOutputStream.hflush() catch throw new public public throws public public return Path public public decl_stmt java.nio.file.Path = new + + try new public public return catch throw new public public return public public throws