org.apache.lucene.codecs.compressing java.io.IOException import java.util.Arrays import org.apache.lucene.store.DataInput import org.apache.lucene.store.DataOutput import org.apache.lucene.util.packed.PackedInts import class org.apache.lucene.codecs.compressing.LZ4 int int int int int int int private static private static return * - >>> - private static private static return private static private static return & << | + & << | + & << | + & private static private static return == int private static private static assert < decl_stmt int = while < && ++ == ++ ++ return int private static private static decl_stmt int = while > && > && -- == -- ++ return int int int int int int int public static public static throws decl_stmt int final final = do decl_stmt int final final = & decl_stmt int = >>> if != if == decl_stmt byte while = == byte += += & += if >= break decl_stmt int final final = & | & << assert > decl_stmt int = & if == decl_stmt int while = == byte += += & += decl_stmt int final final = + & if < || || + || || + for = - = + < ++ , ++ = else - += < return private static private static throws while >= byte -= byte private static private static throws byte if >= - int private static private static throws decl_stmt int final final = << int int int private static private static throws decl_stmt int final final = - assert >= decl_stmt int final final = << | - decl_stmt int final final = - assert > && < << byte >>> if >= + - - int int decl_stmt int final final = - decl_stmt int final final = - - = + - if == || < << || < = << else int int int int int int int decl PackedInts int int decl Mutable int public static public static throws decl_stmt int final final = decl_stmt int final final = + decl_stmt int = ++ if > + decl_stmt int final final = - decl_stmt int final final = - decl_stmt int final final = decl_stmt Mutable final final final final final = while <= decl_stmt int while if >= break break decl_stmt int final final = decl_stmt int final final = = + int call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() call decl PackedInts.get() assert - <= call decl PackedInts.getBitsPerValue() call decl PackedInts.getBitsPerValue() call decl PackedInts.getBitsPerValue() call decl PackedInts.getBitsPerValue() call decl PackedInts.getBitsPerValue() call decl PackedInts.set() call decl PackedInts.set() call decl PackedInts.set() call decl PackedInts.set() call decl PackedInts.set() - if - < && == break ++ decl_stmt int final final = + + + += = decl_stmt int final final = - assert >= || == - += += -= return + private static private static = = = private private = = - short int int private private decl_stmt int final final = decl_stmt int final final = return private private return - & & int int int private private decl_stmt int final final = decl_stmt int final final = decl_stmt int = - assert > : if >= = - & = short = for < ++ int int int int int int = = decl_stmt int = decl_stmt int = decl_stmt int = if >= - && <= && >= if = - = = + + + = = for = < ++ if < - + || > break if + == + && decl_stmt int final final = + + + if > = = = if != decl_stmt int = decl_stmt int final final = + - - while < - & = short ++ do & = short = ++ < = return != int int int int int = decl_stmt int final final = - decl_stmt int = for = < ++ if < - + || > break if - + == + && decl_stmt int final final = + + + decl_stmt int final final = decl_stmt int final final = + if > = = - = - = return > Match Match Match Match int int int int int int int public static public static throws decl_stmt int final final = + decl_stmt int final final = - decl_stmt int final final = - decl_stmt int = decl_stmt int = ++ decl_stmt Match final final = new decl_stmt Match final final = new decl_stmt Match final final = new decl_stmt Match final final = new while <= if ! ++ continue while assert >= if call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() >= || ! call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - + = = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() continue continue if < if < + assert > if - < continue continue while if - < decl_stmt int = if > = if + > call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - = - + - decl_stmt int final final = - - if > call Match.fix() call Match.fix() call Match.fix() call Match.fix() call Match.fix() if + >= || ! call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - if < call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() = - = = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() = = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() continue continue if < call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() + if >= call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() if < call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() decl_stmt int final final = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - call Match.fix() call Match.fix() call Match.fix() call Match.fix() call Match.fix() if < = = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() continue continue continue continue if < call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() if - < if > = if call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() > call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - - decl_stmt int final final = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() - call Match.fix() call Match.fix() call Match.fix() call Match.fix() call Match.fix() else = - = = call Match.end() call Match.end() call Match.end() call Match.end() call Match.end() continue continue -