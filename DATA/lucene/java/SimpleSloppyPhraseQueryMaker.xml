org.apache.lucene.benchmark.byTask.feeds java.util.ArrayList import java.util.StringTokenizer import org.apache.lucene.index.Term import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.Query import class org.apache.lucene.benchmark.byTask.feeds.SimpleSloppyPhraseQueryMaker super super extends decl PhraseQuery StringTokenizer decl Builder String decl ArrayList decl ArrayList int int protected protected throws decl_stmt java.lang.String decl_stmt java.util.ArrayList < = new <> decl_stmt java.util.StringTokenizer = new while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() && call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() < call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) = call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new decl_stmt java.util.ArrayList < = new <> for = < ++ for = < ++ for = < - - ++ decl_stmt int = decl_stmt int = decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new ++ if > -- ++ call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() decl_stmt org.apache.lucene.search.PhraseQuery = call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() = = + + - = new for = < ++ call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new -- if > -- -- call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() + * = call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new