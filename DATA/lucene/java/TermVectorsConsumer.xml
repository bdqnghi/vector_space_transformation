org.apache.lucene.index java.io.IOException import java.util.Arrays import java.util.Map import org.apache.lucene.codecs.TermVectorsWriter import org.apache.lucene.store.FlushInfo import org.apache.lucene.store.IOContext import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.index.TermVectorsConsumer super super extends ByteSliceReader int ByteSliceReader TermVectorsWriter int boolean DocumentsWriterPerThread decl TermVectorsConsumerPerField BytesRef int < final final throws if != decl_stmt int = assert > try assert != call TermVectorsWriter.finish() call TermVectorsWriter.finish() call TermVectorsWriter.finish() call TermVectorsWriter.finish() call TermVectorsWriter.finish() finally = = = throws while < call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() ++ IOContext private private throws if == decl_stmt org.apache.lucene.store.IOContext = new new call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.getNumDocsInRAM() call org.apache.lucene.index.DocumentsWriterPerThread.bytesUsed() call org.apache.lucene.index.DocumentsWriterPerThread.bytesUsed() call org.apache.lucene.index.DocumentsWriterPerThread.bytesUsed() call org.apache.lucene.index.DocumentsWriterPerThread.bytesUsed() call org.apache.lucene.index.DocumentsWriterPerThread.bytesUsed() = call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call DocumentsWriterPerThread.codec() call org.apache.lucene.index.DocumentsWriterPerThread.getSegmentInfo() call org.apache.lucene.index.DocumentsWriterPerThread.getSegmentInfo() call org.apache.lucene.index.DocumentsWriterPerThread.getSegmentInfo() call org.apache.lucene.index.DocumentsWriterPerThread.getSegmentInfo() call org.apache.lucene.index.DocumentsWriterPerThread.getSegmentInfo() = throws if ! return call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() call TermVectorsWriter.startDocument() for = < ++ call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() call org.apache.lucene.codecs.TermVectorsWriter.finishDocument() assert == : + + + ++ public public = try finally if != = = = public public return new int decl TermVectorsConsumerPerField if == decl_stmt int = + decl_stmt org.apache.lucene.index.TermVectorsConsumerPerField = new = ++ = =