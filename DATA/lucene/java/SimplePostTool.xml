org.apache.solr.util javax.xml.bind.DatatypeConverter import javax.xml.parsers.DocumentBuilderFactory import javax.xml.parsers.ParserConfigurationException import javax.xml.xpath.XPath import javax.xml.xpath.XPathConstants import javax.xml.xpath.XPathExpression import javax.xml.xpath.XPathExpressionException import javax.xml.xpath.XPathFactory import java.io.BufferedReader import java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.File import java.io.FileFilter import java.io.FileInputStream import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.OutputStream import java.net.HttpURLConnection import java.net.MalformedURLException import java.net.ProtocolException import java.net.URL import java.net.URLEncoder import java.nio.BufferOverflowException import java.nio.ByteBuffer import java.nio.charset.Charset import java.nio.charset.StandardCharsets import java.text.SimpleDateFormat import java.util.ArrayList import java.util.Date import java.util.HashMap import java.util.HashSet import java.util.LinkedHashSet import java.util.List import java.util.Locale import java.util.Map import java.util.Set import java.util.TimeZone import java.util.regex.Pattern import java.util.regex.PatternSyntaxException import java.util.zip.GZIPInputStream import java.util.zip.Inflater import java.util.zip.InflaterInputStream import org.w3c.dom.Document import org.w3c.dom.Node import org.w3c.dom.NodeList import org.xml.sax.SAXException import class org.apache.solr.util.SimplePostTool String String decl Set boolean URL String String String OutputStream int String FileFilter boolean int decl HashMap String String int String String int String boolean decl String String int String decl Set PageFetcher String String String String String String String boolean decl List SimplePostTool public static public static + if < && || || else decl_stmt org.apache.solr.util.SimplePostTool final final = call org.apache.solr.util.SimplePostTool.execute() call org.apache.solr.util.SimplePostTool.execute() call org.apache.solr.util.SimplePostTool.execute() call org.apache.solr.util.SimplePostTool.execute() call org.apache.solr.util.SimplePostTool.execute() RTimer public public decl_stmt org.apache.solr.util.RTimer final final = new if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && > else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && > else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && > else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else return if if long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() SimpleDateFormat private private decl_stmt java.text.SimpleDateFormat = new call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() call SimpleDateFormat.setTimeZone() + call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) new String int String String URL boolean String boolean int String String String String boolean String String OutputStream protected static protected static decl_stmt java.lang.String = try decl_stmt java.lang.String final final = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() + decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = = if == && == + if == = = decl_stmt java.net.URL = new decl_stmt boolean = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt int = decl_stmt java.lang.String = try = catch if = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) : decl_stmt int = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) : try = + catch decl_stmt java.io.OutputStream = : decl_stmt java.lang.String = decl_stmt boolean = decl_stmt boolean = return new catch + return int private private = if ! + + ! + == : : + if + if > + + + + decl_stmt int = + private private + + for : int private private decl_stmt int = try if != if return = + = + if > if > = + + if < + + + + = + catch + return private private + + private private = new <> = new <> private static private static + + private static private static + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + decl File File File int GlobFileFilter String public public decl_stmt int = for = < ++ decl_stmt File = new if call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() && call File.canRead() call File.canRead() call File.canRead() call File.canRead() call File.canRead() += else if call File.isFile() call File.isFile() call File.isFile() call File.isFile() call File.isFile() && call File.canRead() call File.canRead() call File.canRead() call File.canRead() call File.canRead() += new else decl_stmt File = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() if == = new decl_stmt java.lang.String = call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() decl_stmt GlobFileFilter = new decl_stmt File = call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() if == || == + continue += call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() return int String GlobFileFilter File decl File public public decl_stmt int = for : if && += else if && += new else decl_stmt File = if == = new decl_stmt java.lang.String = decl_stmt GlobFileFilter = new decl_stmt File = call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() call File.listFiles() if == || == + continue += return int private private if && ! return + + + + + + decl_stmt int = += if > for : if ++ += -- return int decl_stmt int = for : try if ! || continue * ++ catch throw new return decl LinkedHashSet URL public public decl_stmt LinkedHashSet < = new <> for = < ++ try decl_stmt java.net.URL = new call decl LinkedHashSet.add() call decl LinkedHashSet.add() call decl LinkedHashSet.add() call decl LinkedHashSet.add() call decl LinkedHashSet.add() catch + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return protected static protected static if > - = if = - if = - return int boolean decl LinkedHashSet decl Set int PageFetcherResult URL int decl LinkedHashSet protected protected decl_stmt int = decl_stmt LinkedHashSet < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt int = call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.removeAll() call decl LinkedHashSet.removeAll() call decl LinkedHashSet.removeAll() call decl LinkedHashSet.removeAll() call decl LinkedHashSet.removeAll() decl_stmt int = call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() call decl LinkedHashSet.size() decl_stmt LinkedHashSet < = new <> + + + + + + for : try call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt PageFetcherResult = call PageFetcher.readPageFromUrl() call PageFetcher.readPageFromUrl() call PageFetcher.readPageFromUrl() call PageFetcher.readPageFromUrl() call PageFetcher.readPageFromUrl() if == = != : decl_stmt java.net.URL = new call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() + + + decl_stmt boolean = new call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() if + + + + * ++ if > && call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() call PageFetcherResult.contentType() decl_stmt java.util.Set < = call PageFetcher.getLinksFromWebPage() call PageFetcher.getLinksFromWebPage() call PageFetcher.getLinksFromWebPage() call PageFetcher.getLinksFromWebPage() call PageFetcher.getLinksFromWebPage() new call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call PageFetcherResult.content() call decl LinkedHashSet.addAll() call decl LinkedHashSet.addAll() call decl LinkedHashSet.addAll() call decl LinkedHashSet.addAll() call decl LinkedHashSet.addAll() else + else + + + catch + + + catch throw new if ! call decl LinkedHashSet.isEmpty() call decl LinkedHashSet.isEmpty() call decl LinkedHashSet.isEmpty() call decl LinkedHashSet.isEmpty() call decl LinkedHashSet.isEmpty() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() += + return public public return public static public static throws return long BAOS int public static public static throws decl_stmt BAOS = new decl_stmt long = decl_stmt int = while > - if ++ > throw new call BAOS.write() call BAOS.write() call BAOS.write() call BAOS.write() call BAOS.write() = call BAOS.flush() call BAOS.flush() call BAOS.flush() call BAOS.flush() call BAOS.flush() return call BAOS.getByteBuffer() call BAOS.getByteBuffer() call BAOS.getByteBuffer() call BAOS.getByteBuffer() call BAOS.getByteBuffer() String String String int protected protected if == || == return if ! if = + + + else if return decl_stmt java.lang.String = if ! call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) || call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = + + + + + = decl_stmt java.lang.String = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) || call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) || call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) || call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) return return protected protected for : call decl HashMap.keySet() call decl HashMap.keySet() call decl HashMap.keySet() call decl HashMap.keySet() call decl HashMap.keySet() if call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) return return protected static protected static return > - static static + static static static static + public public + + call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() public public + + call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() decl String decl String public static public static decl_stmt java.lang.String = for : if == continue decl_stmt java.lang.String = if == = + > : + + + else + + return URL InputStream String String public public decl_stmt java.io.InputStream = try decl_stmt java.net.URL = decl_stmt java.lang.String = if if == = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! = decl_stmt java.lang.String = = new else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else = decl_stmt java.lang.String = if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - = + if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - = + = new else if == = + + + + : + + = new catch + finally try if != call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch + protected static protected static throws return new + + + + + != + : String String String protected static protected static decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) + decl_stmt java.lang.String = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) return != : public static public static try new catch + + HttpURLConnection String public static public static try if return decl_stmt java.net.HttpURLConnection = if != decl_stmt java.lang.String = call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) + call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() catch + + HttpURLConnection boolean String public public if return decl_stmt boolean = if == = decl_stmt java.net.HttpURLConnection = try try = try call java.net.HttpURLConnection.setRequestMethod(String) call java.net.HttpURLConnection.setRequestMethod(String) call java.net.HttpURLConnection.setRequestMethod(String) call java.net.HttpURLConnection.setRequestMethod(String) call java.net.HttpURLConnection.setRequestMethod(String) catch + call HttpURLConnection.setDoOutput() call HttpURLConnection.setDoOutput() call HttpURLConnection.setDoOutput() call HttpURLConnection.setDoOutput() call HttpURLConnection.setDoOutput() call HttpURLConnection.setDoInput() call HttpURLConnection.setDoInput() call HttpURLConnection.setDoInput() call HttpURLConnection.setDoInput() call HttpURLConnection.setDoInput() call HttpURLConnection.setUseCaches() call HttpURLConnection.setUseCaches() call HttpURLConnection.setUseCaches() call HttpURLConnection.setUseCaches() call HttpURLConnection.setUseCaches() call HttpURLConnection.setAllowUserInteraction() call HttpURLConnection.setAllowUserInteraction() call HttpURLConnection.setAllowUserInteraction() call HttpURLConnection.setAllowUserInteraction() call HttpURLConnection.setAllowUserInteraction() call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) if != decl_stmt java.lang.String = call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) + if != call java.net.HttpURLConnection.setFixedLengthStreamingMode(int) call java.net.HttpURLConnection.setFixedLengthStreamingMode(int) call java.net.HttpURLConnection.setFixedLengthStreamingMode(int) call java.net.HttpURLConnection.setFixedLengthStreamingMode(int) call java.net.HttpURLConnection.setFixedLengthStreamingMode(int) else call java.net.HttpURLConnection.setChunkedStreamingMode(int) call java.net.HttpURLConnection.setChunkedStreamingMode(int) call java.net.HttpURLConnection.setChunkedStreamingMode(int) call java.net.HttpURLConnection.setChunkedStreamingMode(int) call java.net.HttpURLConnection.setChunkedStreamingMode(int) - call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() catch + + + = try final final = call java.net.HttpURLConnection.getOutputStream() call java.net.HttpURLConnection.getOutputStream() call java.net.HttpURLConnection.getOutputStream() call java.net.HttpURLConnection.getOutputStream() call java.net.HttpURLConnection.getOutputStream() catch + = try &= try final final = call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() catch + = finally if != call java.net.HttpURLConnection.disconnect() call java.net.HttpURLConnection.disconnect() call java.net.HttpURLConnection.disconnect() call java.net.HttpURLConnection.disconnect() call java.net.HttpURLConnection.disconnect() return int String int Charset BufferedReader StringBuilder private static private static throws if >= + + + + + decl_stmt java.nio.charset.Charset = decl_stmt java.lang.String final final = if != decl_stmt int = call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) if > = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + try = if != decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.StringBuilder final final = new decl_stmt int while = call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) != - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) char call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() return return public static public static return new int decl byte private static private static throws decl_stmt byte = new decl_stmt int = while = >= if != if != String public public decl_stmt java.lang.String if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = else = + call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) + return new XPathExpression XPath XPathFactory public static public static throws decl_stmt XPathFactory = decl_stmt XPath = call XPathFactory.newXPath() call XPathFactory.newXPath() call XPathFactory.newXPath() call XPathFactory.newXPath() call XPathFactory.newXPath() decl_stmt XPathExpression = call XPath.compile() call XPath.compile() call XPath.compile() call XPath.compile() call XPath.compile() return call XPathExpression.evaluate() call XPathExpression.evaluate() call XPathExpression.evaluate() call XPathExpression.evaluate() call XPathExpression.evaluate() StringBuilder NodeList public static public static throws decl_stmt NodeList = decl_stmt java.lang.StringBuilder = new if call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() > for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() + if ! break return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() else return InputStream Document public static public static throws decl_stmt java.io.InputStream = new decl_stmt org.apache.lucene.document.Document = return public public return String PageFetcherResult InputStream String String HttpURLConnection public public decl_stmt PageFetcherResult = new try if + + = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return = decl_stmt java.net.HttpURLConnection = call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) + + call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.setRequestProperty(String,String) call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() call java.net.HttpURLConnection.connect() = call java.net.HttpURLConnection.getResponseCode() call java.net.HttpURLConnection.getResponseCode() call java.net.HttpURLConnection.getResponseCode() call java.net.HttpURLConnection.getResponseCode() call java.net.HttpURLConnection.getResponseCode() if ! call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() + + + call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() = call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() call HttpURLConnection.getURL() = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if == decl_stmt java.lang.String = call HttpURLConnection.getContentType() call HttpURLConnection.getContentType() call HttpURLConnection.getContentType() call HttpURLConnection.getContentType() call HttpURLConnection.getContentType() decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) if || decl_stmt java.lang.String = call HttpURLConnection.getContentEncoding() call HttpURLConnection.getContentEncoding() call HttpURLConnection.getContentEncoding() call HttpURLConnection.getContentEncoding() call HttpURLConnection.getContentEncoding() decl_stmt java.io.InputStream if != && call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) = new call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() else if != && call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) = new call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() new else = call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() call java.net.HttpURLConnection.getInputStream() = call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() else + = catch + + + return URL String decl List String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = + + + decl_stmt java.util.List < = if == = new <> decl_stmt java.net.URL try = new = call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() catch return catch decl_stmt java.lang.String = for : if || call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == return return decl String BufferedReader String decl List protected < protected < throws decl_stmt java.util.List < = new <> decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) if == continue = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return NodeList Document boolean URL ByteArrayOutputStream decl Set String String URL protected < protected < decl_stmt java.util.Set < = new <> decl_stmt java.net.URL = try decl_stmt java.io.ByteArrayOutputStream = new decl_stmt java.net.URL = new decl_stmt boolean = if decl_stmt org.apache.lucene.document.Document = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt java.lang.String = = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt java.lang.String = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = if == continue = new if call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() == || ! call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() call java.net.URL.getAuthority() continue call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() catch + catch + + + catch throw new return