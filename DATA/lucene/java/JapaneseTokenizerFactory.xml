org.apache.lucene.analysis.ja java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.Reader import java.nio.charset.Charset import java.nio.charset.CharsetDecoder import java.nio.charset.CodingErrorAction import java.util.Locale import java.util.Map import org.apache.lucene.analysis.ja.JapaneseTokenizer.Mode import org.apache.lucene.analysis.ja.dict.UserDictionary import org.apache.lucene.analysis.util.TokenizerFactory import org.apache.lucene.util.AttributeFactory import org.apache.lucene.util.IOUtils import org.apache.lucene.analysis.util.ResourceLoader import org.apache.lucene.analysis.util.ResourceLoaderAware import class org.apache.lucene.analysis.ja.JapaneseTokenizerFactory super super extends super implements String int String UserDictionary String String boolean String String String String String Mode CharsetDecoder Reader InputStream String public public throws if != decl_stmt java.io.InputStream = decl_stmt java.lang.String = if == = decl_stmt CharsetDecoder = decl_stmt java.io.Reader = new = else = JapaneseTokenizer public public decl_stmt org.apache.lucene.analysis.ja.JapaneseTokenizer = new if != = call org.apache.lucene.analysis.ja.JapaneseTokenizer.calcNBestCost(String) call org.apache.lucene.analysis.ja.JapaneseTokenizer.calcNBestCost(String) call org.apache.lucene.analysis.ja.JapaneseTokenizer.calcNBestCost(String) call org.apache.lucene.analysis.ja.JapaneseTokenizer.calcNBestCost(String) call org.apache.lucene.analysis.ja.JapaneseTokenizer.calcNBestCost(String) call org.apache.lucene.analysis.ja.JapaneseTokenizer.setNBestCost(int) call org.apache.lucene.analysis.ja.JapaneseTokenizer.setNBestCost(int) call org.apache.lucene.analysis.ja.JapaneseTokenizer.setNBestCost(int) call org.apache.lucene.analysis.ja.JapaneseTokenizer.setNBestCost(int) call org.apache.lucene.analysis.ja.JapaneseTokenizer.setNBestCost(int) return