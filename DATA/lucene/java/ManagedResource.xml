org.apache.solr.rest java.io.FileNotFoundException import java.io.IOException import java.lang.invoke.MethodHandles import java.util.Date import java.util.LinkedHashMap import java.util.List import java.util.Locale import java.util.Map import java.util.Set import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrResourceLoader import org.apache.solr.rest.ManagedResourceStorage.StorageIO import org.restlet.data.Status import org.restlet.representation.Representation import org.restlet.resource.ResourceException import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.rest.ManagedResource ManagedResourceStorage Logger String String String String String Date String decl NamedList Date SolrResourceLoader public public < throws = new = decl NamedList protected protected < < throws if == || return for : decl_stmt org.apache.solr.common.util.NamedList < = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) protected protected throws return new public public return public public return public < extends extends public < extends extends return boolean protected protected < if == || == return decl_stmt boolean = if ! call decl NamedList.equals() call decl NamedList.equals() call decl NamedList.equals() call decl NamedList.equals() call decl NamedList.equals() = < = return Object String Object protected synchronized protected synchronized throws decl_stmt java.lang.String = decl_stmt java.lang.Object = try = call org.apache.solr.rest.ManagedResourceStorage.load(String) call org.apache.solr.rest.ManagedResourceStorage.load(String) call org.apache.solr.rest.ManagedResourceStorage.load(String) call org.apache.solr.rest.ManagedResourceStorage.load(String) call org.apache.solr.rest.ManagedResourceStorage.load(String) catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() catch throw new + + + decl_stmt java.lang.Object = if == = new <> Object decl Map Object decl Map Object String protected protected throws decl_stmt java.lang.Object = if != if ! instanceof throw new + + decl_stmt java.util.Map < = < decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = new <> call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if ! instanceof decl_stmt java.lang.String = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() throw new = else if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt java.lang.Object = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if ! instanceof decl_stmt java.lang.String = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() throw new = return decl Map String String public synchronized public synchronized decl_stmt java.util.Map < = decl_stmt java.lang.String = try call org.apache.solr.rest.ManagedResourceStorage.store(String,Object) call org.apache.solr.rest.ManagedResourceStorage.store(String,Object) call org.apache.solr.rest.ManagedResourceStorage.store(String,Object) call org.apache.solr.rest.ManagedResourceStorage.store(String,Object) call org.apache.solr.rest.ManagedResourceStorage.store(String,Object) = new catch if != try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + decl_stmt java.lang.String = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new public public return == : call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() public public return == : call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() call Date.toInstant() public public return != decl Map String protected < protected < decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.lang.String = if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if != if instanceof || instanceof call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if instanceof call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else throw new + + return decl Map protected < protected < < decl_stmt java.util.Map < = new <> if != for < : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public Object decl Map decl Map Object boolean public synchronized public synchronized call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt boolean = decl_stmt java.lang.Object = if instanceof decl_stmt java.util.Map < = < if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() || call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() || call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() decl_stmt java.util.Map < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = new <> if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else = else if instanceof = else throw new + decl_stmt java.lang.Object = if != = if || != public public throws call org.apache.solr.rest.ManagedResourceStorage.delete(String) call org.apache.solr.rest.ManagedResourceStorage.delete(String) call org.apache.solr.rest.ManagedResourceStorage.delete(String) call org.apache.solr.rest.ManagedResourceStorage.delete(String) call org.apache.solr.rest.ManagedResourceStorage.delete(String)