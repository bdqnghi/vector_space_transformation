org.apache.lucene.util java.util.Arrays import java.util.HashMap import java.util.Map import class org.apache.lucene.util.FrequencyTrackingRingBuffer super super implements decl int int int long IntBag public public return + call IntBag.ramBytesUsed() call IntBag.ramBytesUsed() call IntBag.ramBytesUsed() call IntBag.ramBytesUsed() call IntBag.ramBytesUsed() + boolean int public public decl_stmt int final final = decl_stmt boolean final final = call IntBag.remove() call IntBag.remove() call IntBag.remove() call IntBag.remove() call IntBag.remove() assert = call IntBag.add() call IntBag.add() call IntBag.add() call IntBag.add() call IntBag.add() += if == = public public return call IntBag.frequency() call IntBag.frequency() call IntBag.frequency() call IntBag.frequency() call IntBag.frequency() < < return call IntBag.asMap() call IntBag.asMap() call IntBag.asMap() call IntBag.asMap() call IntBag.asMap() public public return + + for = & = + & if == return else if == return for = & = + & if == = return = else if == return ++ int for = & = + & if == return else if == decl_stmt int final final = -- if == return int int int private private for = + & = + & decl_stmt int final final = if == break decl_stmt int final final = decl_stmt int final final = & if = = = = private static private static if <= return <= && <= else return >= || <= decl Map < < decl_stmt java.util.Map < = new <> for = < ++ if > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return