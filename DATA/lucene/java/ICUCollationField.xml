org.apache.solr.schema java.io.IOException import java.io.InputStream import java.util.ArrayList import java.util.Collections import java.util.List import java.util.Map import org.apache.commons.io.IOUtils import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.analysis.util.ResourceLoader import org.apache.lucene.collation.ICUCollationKeyAnalyzer import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.SortedSetDocValuesField import org.apache.lucene.index.IndexableField import org.apache.lucene.search.DocValuesRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.search.SortField import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.lucene.util.BytesRef import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.response.TextResponseWriter import org.apache.solr.search.QParser import com.ibm.icu.text.Collator import com.ibm.icu.text.RuleBasedCollator import com.ibm.icu.util.ULocale import class org.apache.solr.schema.ICUCollationField super super extends Analyzer protected protected < |= String String String Collator String String String String String RuleBasedCollator String private private < decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if == && == throw new if != && != throw new + + decl_stmt java.text.Collator final final if != = else = if != if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) call java.text.Collator.setStrength(int) else throw new + if != if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) call java.text.Collator.setDecomposition(int) else throw new + decl_stmt java.text.RuleBasedCollator = if != if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() call RuleBasedCollator.setAlternateHandlingShifted() else throw new + if != call RuleBasedCollator.setCaseLevel() call RuleBasedCollator.setCaseLevel() call RuleBasedCollator.setCaseLevel() call RuleBasedCollator.setCaseLevel() call RuleBasedCollator.setCaseLevel() if != if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call RuleBasedCollator.setLowerCaseFirst() call RuleBasedCollator.setLowerCaseFirst() call RuleBasedCollator.setLowerCaseFirst() call RuleBasedCollator.setLowerCaseFirst() call RuleBasedCollator.setLowerCaseFirst() else if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call RuleBasedCollator.setUpperCaseFirst() call RuleBasedCollator.setUpperCaseFirst() call RuleBasedCollator.setUpperCaseFirst() call RuleBasedCollator.setUpperCaseFirst() call RuleBasedCollator.setUpperCaseFirst() else throw new + if != call RuleBasedCollator.setNumericCollation() call RuleBasedCollator.setNumericCollation() call RuleBasedCollator.setNumericCollation() call RuleBasedCollator.setNumericCollation() call RuleBasedCollator.setNumericCollation() if != call RuleBasedCollator.setVariableTop() call RuleBasedCollator.setVariableTop() call RuleBasedCollator.setVariableTop() call RuleBasedCollator.setVariableTop() call RuleBasedCollator.setVariableTop() = new private private return new String InputStream private private decl_stmt java.io.InputStream = try = decl_stmt java.lang.String = return new catch throw new finally public public throws public public return public public if return else return public public return public public return BytesRef TermToBytesRefAttribute private private try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute = if ! throw new + decl_stmt org.apache.lucene.util.BytesRef = call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() assert ! return catch throw new + BytesRef BytesRef String public public decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.BytesRef = == : decl_stmt org.apache.lucene.util.BytesRef = == : if ! && if return else return else return new public public decl List BytesRef public < public < if decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.util.BytesRef final final = if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return else return public public return public public return