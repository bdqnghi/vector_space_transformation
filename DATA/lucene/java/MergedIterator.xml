org.apache.lucene.util java.util.Iterator import java.util.NoSuchElementException import org.apache.lucene.util.PriorityQueue import class super super implements T decl TermMergeQueue boolean int public public if call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() > return for = < ++ if return return public public if call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() > else = if == throw new return public public throw new private private assert == ++ = call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() if while call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() call decl TermMergeQueue.size() != && call decl TermMergeQueue.top() call decl TermMergeQueue.top() call decl TermMergeQueue.top() call decl TermMergeQueue.top() call decl TermMergeQueue.top() call T.equals() call T.equals() call T.equals() call T.equals() call T.equals() ++ = call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() call decl TermMergeQueue.pop() = private private for = < ++ if = call decl TermMergeQueue.add() call decl TermMergeQueue.add() call decl TermMergeQueue.add() call decl TermMergeQueue.add() call decl TermMergeQueue.add() else = = int protected protected < < decl_stmt int final final = if != return < else return <