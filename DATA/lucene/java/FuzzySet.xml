org.apache.lucene.codecs.bloom java.io.IOException import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.DataInput import org.apache.lucene.store.DataOutput import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.codecs.bloom.FuzzySet super super implements HashFunction int FixedBitSet int int int int public static public static if < throw new + + + else if > throw new + + + return int public static public static decl_stmt int = for = < ++ if <= = return int int public static public static for = < ++ decl_stmt int = * decl_stmt int = if > return return - int public static public static decl_stmt int = return new new + int public static public static decl_stmt int = return new new + int public public decl_stmt int = call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() if < = * - return decl long public public throws decl_stmt long = call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() for = < ++ HashFunction int decl long int int FixedBitSet public static public static throws decl_stmt int = if == decl_stmt HashFunction final final = decl_stmt int = decl_stmt int = decl_stmt long = new for = < ++ = decl_stmt org.apache.lucene.util.FixedBitSet = new + return new int private private assert >= decl_stmt int = & if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) return return int int public public throws decl_stmt int = call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() call HashFunction.hash() if < = * - decl_stmt int = & call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) int int FixedBitSet int int int float public public decl_stmt int = call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() decl_stmt org.apache.lucene.util.FixedBitSet = decl_stmt int = for = < ++ decl_stmt int = decl_stmt float = float / float if <= = break if < = new + decl_stmt int = do = call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) call org.apache.lucene.util.FixedBitSet.nextSetBit(int) if != decl_stmt int = & call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) ++ >= && <= else return return new public public return call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() double double double double public static public static decl_stmt double = decl_stmt double = decl_stmt double = / decl_stmt double = - * - return * int public public decl_stmt int = call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() call org.apache.lucene.util.FixedBitSet.cardinality() return float / float public public return call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() call org.apache.lucene.util.FixedBitSet.getBits() public public return + + +