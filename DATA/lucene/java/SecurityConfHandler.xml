org.apache.solr.handler.admin java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Objects import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ZkStateReader.ConfigData import org.apache.solr.common.params.CommonParams import org.apache.solr.common.util.Utils import org.apache.solr.core.CoreContainer import org.apache.solr.handler.RequestHandlerBase import org.apache.solr.handler.SolrConfigHandler import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.security.AuthorizationContext import org.apache.solr.security.ConfigEditablePlugin import org.apache.solr.security.PermissionNameProvider import org.apache.solr.util.CommandOperation import org.apache.zookeeper.KeeperException import class org.apache.solr.handler.admin.SecurityConfHandler super super extends super implements CoreContainer public public switch case return case return default: return String Object String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) + if else if decl_stmt java.lang.Object = decl List decl Map Map decl List ConfigEditablePlugin ConfigData decl List decl Map private private final final final final throws decl_stmt org.apache.solr.security.ConfigEditablePlugin = if == throw new + + if instanceof = else throw new + if == throw new decl_stmt java.util.List < = if == throw new for decl_stmt ConfigData = decl_stmt java.util.Map < = < call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() if == throw new + decl_stmt java.util.List < = decl_stmt java.util.Map < = call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() if == decl_stmt java.util.List < = if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return return else if ! call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() throw new decl_stmt java.util.Map = call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) + call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() if return Object decl_stmt java.lang.Object = if = call org.apache.solr.core.CoreContainer.getAuthenticationPlugin() call org.apache.solr.core.CoreContainer.getAuthenticationPlugin() call org.apache.solr.core.CoreContainer.getAuthenticationPlugin() call org.apache.solr.core.CoreContainer.getAuthenticationPlugin() call org.apache.solr.core.CoreContainer.getAuthenticationPlugin() if = call org.apache.solr.core.CoreContainer.getAuthorizationPlugin() call org.apache.solr.core.CoreContainer.getAuthorizationPlugin() call org.apache.solr.core.CoreContainer.getAuthorizationPlugin() call org.apache.solr.core.CoreContainer.getAuthorizationPlugin() call org.apache.solr.core.CoreContainer.getAuthorizationPlugin() return return call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() try call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() return catch return catch throw new ConfigData Object private private decl_stmt ConfigData = call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() call org.apache.solr.core.CoreContainer.getZkController() decl_stmt java.lang.Object = == : call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() call ConfigData.data() if == + + else + != decl Map public static < public static < < decl_stmt java.util.Map < = < if == = new <> return List public static public static < decl_stmt java.util.List = if == = new return public public return