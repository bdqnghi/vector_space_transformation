org.apache.lucene.search.suggest.jaspell java.io.IOException import java.util.ArrayList import java.util.List import java.util.Set import org.apache.lucene.search.suggest.InputIterator import org.apache.lucene.search.suggest.Lookup import org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.TSTNode import org.apache.lucene.store.DataInput import org.apache.lucene.store.DataOutput import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.lucene.util.CharsRefBuilder import org.apache.lucene.util.UnicodeUtil import class annotation org.apache.lucene.search.suggest.jaspell.JaspellLookup super super extends super implements long byte JaspellTernarySearchTrie int byte byte byte boolean CharsRefBuilder BytesRef long public public throws if throw new if throw new = = new call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setMatchAlmostDiff(int) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setMatchAlmostDiff(int) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setMatchAlmostDiff(int) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setMatchAlmostDiff(int) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setMatchAlmostDiff(int) decl_stmt org.apache.lucene.util.BytesRef decl_stmt org.apache.lucene.util.CharsRefBuilder final final = new while = != decl_stmt long final final = if == continue call org.apache.lucene.util.CharsRefBuilder.copyUTF8Bytes(byte,int,int) call org.apache.lucene.util.CharsRefBuilder.copyUTF8Bytes(byte,int,int) call org.apache.lucene.util.CharsRefBuilder.copyUTF8Bytes(byte,int,int) call org.apache.lucene.util.CharsRefBuilder.copyUTF8Bytes(byte,int,int) call org.apache.lucene.util.CharsRefBuilder.copyUTF8Bytes(byte,int,int) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() call org.apache.lucene.util.CharsRefBuilder.toString() ++ public public call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.put(CharSequence,Object) return public public return call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) int decl List decl List LookupPriorityQueue String int long public < public < < if != throw new decl_stmt java.util.List < = new <> decl_stmt java.util.List < decl_stmt int = * : if = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchPrefix(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchPrefix(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchPrefix(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchPrefix(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchPrefix(String) else = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchAlmost(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchAlmost(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchAlmost(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchAlmost(String) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.matchAlmost(String) if == || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if decl_stmt LookupPriorityQueue = new for : decl_stmt long = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call LookupPriorityQueue.insertWithOverflow() call LookupPriorityQueue.insertWithOverflow() call LookupPriorityQueue.insertWithOverflow() call LookupPriorityQueue.insertWithOverflow() call LookupPriorityQueue.insertWithOverflow() new new for : call LookupPriorityQueue.getResults() call LookupPriorityQueue.getResults() call LookupPriorityQueue.getResults() call LookupPriorityQueue.getResults() call LookupPriorityQueue.getResults() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else for = < ++ decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt long = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.get(CharSequence) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new return byte TSTNode private private throws = decl_stmt byte = if & != = if & != decl_stmt TSTNode = = if & != decl_stmt TSTNode = = if & != decl_stmt TSTNode = = byte private private throws if == return new new decl_stmt byte = if != |= if != |= if != |= if != |= if != TSTNode public public throws decl_stmt TSTNode = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.getRoot() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.getRoot() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.getRoot() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.getRoot() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.getRoot() if == return return TSTNode public public throws = decl_stmt TSTNode = call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setRoot(TSTNode) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setRoot(TSTNode) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setRoot(TSTNode) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setRoot(TSTNode) call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.setRoot(TSTNode) return public public return call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.ramBytesUsed() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.ramBytesUsed() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.ramBytesUsed() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.ramBytesUsed() call org.apache.lucene.search.suggest.jaspell.JaspellTernarySearchTrie.ramBytesUsed() public public return