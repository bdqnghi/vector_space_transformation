org.apache.lucene.codecs.lucene50 static static org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat.BLOCK_SIZE import static static org.apache.lucene.codecs.lucene50.ForUtil.MAX_DATA_SIZE import static static org.apache.lucene.codecs.lucene50.ForUtil.MAX_ENCODED_SIZE import java.io.IOException import java.util.Arrays import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.store.RAMDirectory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.packed.PackedInts import com.carrotsearch.randomizedtesting.generators.RandomInts import class org.apache.lucene.codecs.lucene50.TestForUtil super super extends Directory IndexInput int float decl int decl int int int long ForUtil IndexOutput public public throws decl_stmt int final final = decl_stmt float final final = decl_stmt int final final final = new - * + for = < ++ decl_stmt int final final = if == decl_stmt int final final = for = < ++ * + = else for = < ++ * + = int decl_stmt org.apache.lucene.store.Directory final final = new decl_stmt long final final decl_stmt org.apache.lucene.store.IndexOutput = call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() decl_stmt org.apache.lucene.codecs.lucene50.ForUtil final final = new for = < ++ call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) call org.apache.lucene.codecs.lucene50.ForUtil.writeBlock(int,byte,IndexOutput) * new = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() decl_stmt org.apache.lucene.store.IndexInput = call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() decl_stmt org.apache.lucene.codecs.lucene50.ForUtil final final = new for = < ++ if call org.apache.lucene.codecs.lucene50.ForUtil.skipBlock(IndexInput) call org.apache.lucene.codecs.lucene50.ForUtil.skipBlock(IndexInput) call org.apache.lucene.codecs.lucene50.ForUtil.skipBlock(IndexInput) call org.apache.lucene.codecs.lucene50.ForUtil.skipBlock(IndexInput) call org.apache.lucene.codecs.lucene50.ForUtil.skipBlock(IndexInput) continue decl_stmt int final final final = new call org.apache.lucene.codecs.lucene50.ForUtil.readBlock(IndexInput,byte,int) call org.apache.lucene.codecs.lucene50.ForUtil.readBlock(IndexInput,byte,int) call org.apache.lucene.codecs.lucene50.ForUtil.readBlock(IndexInput,byte,int) call org.apache.lucene.codecs.lucene50.ForUtil.readBlock(IndexInput,byte,int) call org.apache.lucene.codecs.lucene50.ForUtil.readBlock(IndexInput,byte,int) new * + * call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()