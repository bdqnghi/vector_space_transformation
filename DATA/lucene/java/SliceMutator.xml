org.apache.solr.cloud.overseer java.lang.invoke.MethodHandles import java.util.HashMap import java.util.LinkedHashMap import java.util.Map import java.util.Set import com.google.common.collect.ImmutableSet import org.apache.solr.cloud.Assign import org.apache.solr.cloud.Overseer import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.RoutingRule import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.Utils import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.cloud.OverseerCollectionMessageHandler.COLL_PROP_PREFIX import static static org.apache.solr.cloud.overseer.CollectionMutator.checkCollectionKeyExistence import static static org.apache.solr.common.util.Utils.makeMap import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.cloud.overseer.SliceMutator ZkStateReader String decl Set Logger String String DocCollection String Replica Slice public public call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt org.apache.solr.common.cloud.Slice = call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) call org.apache.solr.common.cloud.DocCollection.getSlice(String) if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Replica = new return new call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() String DocCollection Replica decl Map decl Map String public public decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = if ! return decl_stmt org.apache.solr.common.cloud.DocCollection = if == return new decl_stmt java.util.Map < = new <> for : call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() decl_stmt org.apache.solr.common.cloud.Replica = if != decl_stmt java.util.Map < = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return new call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) call org.apache.solr.common.cloud.DocCollection.copyWithSlices(Map) String Replica decl Map decl Map String String decl Map DocCollection Slice StringBuilder String String String public public decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != && ! call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) == : if ! call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.substring() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() : decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.DocCollection = if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + return decl_stmt java.util.Map < = call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() decl_stmt org.apache.solr.common.cloud.Slice = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.solr.common.cloud.Replica = call org.apache.solr.common.cloud.Slice.getLeader() call org.apache.solr.common.cloud.Slice.getLeader() call org.apache.solr.common.cloud.Slice.getLeader() call org.apache.solr.common.cloud.Slice.getLeader() call org.apache.solr.common.cloud.Slice.getLeader() decl_stmt java.util.Map final final final < = new <> for : call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() call org.apache.solr.common.cloud.Slice.getReplicas() decl_stmt java.lang.String = if == && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = new else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call Slice.getProperties() call Slice.getProperties() call Slice.getProperties() call Slice.getProperties() call Slice.getProperties() return new Slice Slice decl Map String decl Map public public decl_stmt java.lang.String = if ! return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + decl_stmt java.util.Map < = new <> for : if continue if continue decl_stmt org.apache.solr.common.cloud.Slice = if == throw new + + + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + decl_stmt java.util.Map < = call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == && == call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.Slice = new call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() return new decl Map Slice String RoutingRule Slice String String decl Map String RoutingRule String String decl Map String public public final final decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Slice = if == throw new + + + decl_stmt java.util.Map < = call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() if == = new <> decl_stmt org.apache.solr.common.cloud.RoutingRule = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.RoutingRule = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else decl_stmt java.util.Map < = call RoutingRule.shallowCopy() call RoutingRule.shallowCopy() call RoutingRule.shallowCopy() call RoutingRule.shallowCopy() call RoutingRule.shallowCopy() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() + + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt java.util.Map < = call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.Slice = new call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() return new Slice Slice String String decl Map decl Map String public public final final decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = decl_stmt java.lang.String = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + decl_stmt org.apache.solr.common.cloud.Slice = if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return decl_stmt java.util.Map < = call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() call org.apache.solr.common.cloud.Slice.getRoutingRules() if != call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() decl_stmt java.util.Map < = call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call Slice.shallowCopy() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.Slice = new call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() call org.apache.solr.common.cloud.Slice.getReplicasCopy() return new return decl Map Slice public static public static final final final final decl_stmt java.util.Map < = if == call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.common.cloud.Slice = new return