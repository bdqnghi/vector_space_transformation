org.apache.solr.handler org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.util.DefaultSolrThreadFactory import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.invoke.MethodHandles import java.util.concurrent.* import class org.apache.solr.handler.CdcrReplicatorScheduler CdcrReplicatorManager int int int decl ConcurrentLinkedQueue int boolean ExecutorService int ScheduledExecutorService int Logger CdcrReplicatorState int if ! = new = new call java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleWithFixedDelay(Runnable,long,long,TimeUnit) decl_stmt int = call decl ConcurrentLinkedQueue.size() call decl ConcurrentLinkedQueue.size() call decl ConcurrentLinkedQueue.size() call decl ConcurrentLinkedQueue.size() call decl ConcurrentLinkedQueue.size() for = < ++ call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() decl_stmt org.apache.solr.handler.CdcrReplicatorState = call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() call decl ConcurrentLinkedQueue.poll() assert != try new finally call decl ConcurrentLinkedQueue.offer() call decl ConcurrentLinkedQueue.offer() call decl ConcurrentLinkedQueue.offer() call decl ConcurrentLinkedQueue.offer() call decl ConcurrentLinkedQueue.offer() = if call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() try call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() finally call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() =