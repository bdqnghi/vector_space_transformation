org.apache.solr.core javax.xml.xpath.XPath import javax.xml.xpath.XPathConstants import javax.xml.xpath.XPathExpressionException import java.io.ByteArrayInputStream import java.io.InputStream import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.util.HashSet import java.util.Map import java.util.Properties import java.util.Set import com.google.common.base.Strings import org.apache.commons.io.IOUtils import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.logging.LogWatcherConfig import org.apache.solr.update.UpdateShardHandlerConfig import org.apache.solr.util.DOMUtil import org.apache.solr.util.PropertiesUtil import org.slf4j.Logger import org.slf4j.LoggerFactory import org.w3c.dom.Node import org.w3c.dom.NodeList import org.xml.sax.InputSource import static static org.apache.solr.common.params.CommonParams.NAME import class org.apache.solr.core.SolrXmlConfig String Logger String UpdateShardHandlerConfig UpdateShardHandlerConfig decl NodeConfig decl NamedList CloudConfig decl NamedList public static public static decl_stmt org.apache.solr.core.CloudConfig = decl_stmt org.apache.solr.update.UpdateShardHandlerConfig = if > decl_stmt org.apache.solr.common.util.NamedList < = = = decl_stmt org.apache.solr.common.util.NamedList < = decl_stmt java.lang.String = call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() if && != = call org.apache.solr.core.CloudConfig.getHost() call org.apache.solr.core.CloudConfig.getHost() call org.apache.solr.core.CloudConfig.getHost() call org.apache.solr.core.CloudConfig.getHost() call org.apache.solr.core.CloudConfig.getHost() decl_stmt org.apache.solr.update.UpdateShardHandlerConfig if == = else = if != throw new = decl_stmt NodeConfigBuilder = new call decl NodeConfig.setUpdateShardHandlerConfig() call decl NodeConfig.setUpdateShardHandlerConfig() call decl NodeConfig.setUpdateShardHandlerConfig() call decl NodeConfig.setUpdateShardHandlerConfig() call decl NodeConfig.setUpdateShardHandlerConfig() call decl NodeConfig.setShardHandlerFactoryConfig() call decl NodeConfig.setShardHandlerFactoryConfig() call decl NodeConfig.setShardHandlerFactoryConfig() call decl NodeConfig.setShardHandlerFactoryConfig() call decl NodeConfig.setShardHandlerFactoryConfig() call decl NodeConfig.setLogWatcherConfig() call decl NodeConfig.setLogWatcherConfig() call decl NodeConfig.setLogWatcherConfig() call decl NodeConfig.setLogWatcherConfig() call decl NodeConfig.setLogWatcherConfig() call decl NodeConfig.setSolrProperties() call decl NodeConfig.setSolrProperties() call decl NodeConfig.setSolrProperties() call decl NodeConfig.setSolrProperties() call decl NodeConfig.setSolrProperties() if != call decl NodeConfig.setCloudConfig() call decl NodeConfig.setCloudConfig() call decl NodeConfig.setCloudConfig() call decl NodeConfig.setCloudConfig() call decl NodeConfig.setCloudConfig() return public static public static call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) if ! throw new + + try = return catch throw catch throw new public static public static return new Config decl byte public static public static try decl_stmt byte = try = new decl_stmt org.apache.solr.core.Config = new new return catch throw catch throw new public static public static return SolrResourceLoader public static public static decl_stmt org.apache.solr.core.SolrResourceLoader = new return private static private static private static private static if + > throw new + + private static private static if != throw new + + Node XPath Node Properties NodeList private static private static try decl_stmt org.apache.lucene.replicator.nrt.Node = decl_stmt XPath = decl_stmt NodeList = call XPath.evaluate() call XPath.evaluate() call XPath.evaluate() call XPath.evaluate() call XPath.evaluate() decl_stmt java.util.Properties = new for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt org.apache.lucene.replicator.nrt.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() return catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return NodeList private static < private static < decl_stmt NodeList = if == return return decl Set private static < private static < < decl_stmt java.util.Set < = new <> for < : if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() throw new + + + return private static private static try return catch throw new + + + + String String private static private static < for < : decl_stmt java.lang.String = if == continue decl_stmt java.lang.String = switch case break case break case break case break case break case break case break case break case break case break case break default: throw new + return Object int boolean Object int int Object Object int private static private static < if == && ! return if == return decl_stmt boolean = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt java.lang.Object = if != = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = decl_stmt java.lang.Object = if != = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = decl_stmt java.lang.Object = if != = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = decl_stmt java.lang.Object = if != = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = if ! && ! return return new Object private static private static < decl_stmt java.lang.Object = if == return return call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() private static private static if != return throw new + + + String decl CloudConfigBuilder decl CloudConfig String String int private static private static < decl_stmt java.lang.String = decl_stmt int = decl_stmt java.lang.String = decl_stmt CloudConfigBuilder = new for < : decl_stmt java.lang.String = if == continue decl_stmt java.lang.String = switch case call decl CloudConfig.setLeaderVoteWait() call decl CloudConfig.setLeaderVoteWait() call decl CloudConfig.setLeaderVoteWait() call decl CloudConfig.setLeaderVoteWait() call decl CloudConfig.setLeaderVoteWait() break case call decl CloudConfig.setLeaderConflictResolveWait() call decl CloudConfig.setLeaderConflictResolveWait() call decl CloudConfig.setLeaderConflictResolveWait() call decl CloudConfig.setLeaderConflictResolveWait() call decl CloudConfig.setLeaderConflictResolveWait() break case call decl CloudConfig.setZkClientTimeout() call decl CloudConfig.setZkClientTimeout() call decl CloudConfig.setZkClientTimeout() call decl CloudConfig.setZkClientTimeout() call decl CloudConfig.setZkClientTimeout() break case call decl CloudConfig.setAutoReplicaFailoverBadNodeExpiration() call decl CloudConfig.setAutoReplicaFailoverBadNodeExpiration() call decl CloudConfig.setAutoReplicaFailoverBadNodeExpiration() call decl CloudConfig.setAutoReplicaFailoverBadNodeExpiration() call decl CloudConfig.setAutoReplicaFailoverBadNodeExpiration() break case call decl CloudConfig.setAutoReplicaFailoverWaitAfterExpiration() call decl CloudConfig.setAutoReplicaFailoverWaitAfterExpiration() call decl CloudConfig.setAutoReplicaFailoverWaitAfterExpiration() call decl CloudConfig.setAutoReplicaFailoverWaitAfterExpiration() call decl CloudConfig.setAutoReplicaFailoverWaitAfterExpiration() break case call decl CloudConfig.setAutoReplicaFailoverWorkLoopDelay() call decl CloudConfig.setAutoReplicaFailoverWorkLoopDelay() call decl CloudConfig.setAutoReplicaFailoverWorkLoopDelay() call decl CloudConfig.setAutoReplicaFailoverWorkLoopDelay() call decl CloudConfig.setAutoReplicaFailoverWorkLoopDelay() break case call decl CloudConfig.setZkHost() call decl CloudConfig.setZkHost() call decl CloudConfig.setZkHost() call decl CloudConfig.setZkHost() call decl CloudConfig.setZkHost() break case call decl CloudConfig.setUseGenericCoreNames() call decl CloudConfig.setUseGenericCoreNames() call decl CloudConfig.setUseGenericCoreNames() call decl CloudConfig.setUseGenericCoreNames() call decl CloudConfig.setUseGenericCoreNames() break case call decl CloudConfig.setZkACLProviderClass() call decl CloudConfig.setZkACLProviderClass() call decl CloudConfig.setZkACLProviderClass() call decl CloudConfig.setZkACLProviderClass() call decl CloudConfig.setZkACLProviderClass() break case call decl CloudConfig.setZkCredentialsProviderClass() call decl CloudConfig.setZkCredentialsProviderClass() call decl CloudConfig.setZkCredentialsProviderClass() call decl CloudConfig.setZkCredentialsProviderClass() call decl CloudConfig.setZkCredentialsProviderClass() break case call decl CloudConfig.setCreateCollectionWaitTimeTillActive() call decl CloudConfig.setCreateCollectionWaitTimeTillActive() call decl CloudConfig.setCreateCollectionWaitTimeTillActive() call decl CloudConfig.setCreateCollectionWaitTimeTillActive() call decl CloudConfig.setCreateCollectionWaitTimeTillActive() break case call decl CloudConfig.setCreateCollectionCheckLeaderActive() call decl CloudConfig.setCreateCollectionCheckLeaderActive() call decl CloudConfig.setCreateCollectionCheckLeaderActive() call decl CloudConfig.setCreateCollectionCheckLeaderActive() call decl CloudConfig.setCreateCollectionCheckLeaderActive() break default: throw new + return call decl CloudConfig.build() call decl CloudConfig.build() call decl CloudConfig.build() call decl CloudConfig.build() call decl CloudConfig.build() String boolean String String int String private static private static decl_stmt java.lang.String = decl_stmt boolean = decl_stmt int = decl_stmt java.lang.String = for < : decl_stmt java.lang.String = decl_stmt java.lang.String = switch case = break case = break default: throw new + for < : decl_stmt java.lang.String = decl_stmt java.lang.String = switch case = break case = break default: throw new + return new Node private static private static decl_stmt org.apache.lucene.replicator.nrt.Node = return == : new