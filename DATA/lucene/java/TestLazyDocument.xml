org.apache.lucene.document java.io.IOException import java.nio.charset.StandardCharsets import java.util.Arrays import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.Set import org.apache.lucene.analysis.* import org.apache.lucene.index.* import org.apache.lucene.search.* import org.apache.lucene.store.* import org.apache.lucene.util.LuceneTestCase import org.junit.After import org.junit.Before import class org.apache.lucene.document.TestLazyDocument super super extends decl String int Directory int public public if != try call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = catch IndexWriter Document Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.index.IndexWriter = new try for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) for : for = < ++ call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + + + + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) finally call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() int IndexSearcher decl ScoreDoc Document decl Map int LazyTestingStoredFieldVisitor decl LazyDocument decl IndexableField String Query decl LazyField IndexReader int public public throws decl_stmt int final final = decl_stmt org.apache.lucene.index.IndexReader = try decl_stmt org.apache.lucene.search.Query = new new + decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt LazyTestingStoredFieldVisitor = new new call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) decl_stmt org.apache.lucene.document.Document = decl_stmt int = decl_stmt java.util.Map < = new <> for : ++ if if if instanceof else decl_stmt int = call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() : ++ call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + + instanceof decl_stmt LazyField = + call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() if + + * for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() + int call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.index.IndexableField final final final = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() + decl_stmt int final final = + + + + for : if if if instanceof else + + instanceof decl_stmt LazyField = + call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() = new new call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) = for : if if instanceof else + + instanceof decl_stmt LazyField = + call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.name() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call decl LazyDocument.hasBeenLoaded() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() call LazyTestingStoredFieldVisitor.lazyDoc() finally call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() public public if return else if return else if return FieldType String public public throws decl_stmt java.lang.String = new decl_stmt org.apache.solr.schema.FieldType final final = new call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) new