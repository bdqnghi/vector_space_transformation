org.apache.solr.search java.io.IOException import java.util.Collection import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.FilteredDocIdSetIterator import org.apache.lucene.util.Accountable import org.apache.lucene.util.Bits import org.apache.lucene.util.RamUsageEstimator import class org.apache.solr.search.FilteredDocIdSet super super extends DocIdSet public public return public public return + call org.apache.lucene.search.DocIdSet.ramBytesUsed() call org.apache.lucene.search.DocIdSet.ramBytesUsed() call org.apache.lucene.search.DocIdSet.ramBytesUsed() call org.apache.lucene.search.DocIdSet.ramBytesUsed() call org.apache.lucene.search.DocIdSet.ramBytesUsed() public < public < return call DocIdSet.getChildResources() call DocIdSet.getChildResources() call DocIdSet.getChildResources() call DocIdSet.getChildResources() call DocIdSet.getChildResources() Bits public public throws decl_stmt org.apache.lucene.util.Bits final final = call DocIdSet.bits() call DocIdSet.bits() call DocIdSet.bits() call DocIdSet.bits() call DocIdSet.bits() return == : new public public return call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() && public public return call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() call org.apache.lucene.util.Bits.length() public public return && public public return DocIdSetIterator public public throws decl_stmt org.apache.lucene.search.DocIdSetIterator final final = call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() call org.apache.lucene.search.DocIdSet.iterator() if == return return new protected protected return protected protected return