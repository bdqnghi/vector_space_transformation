org.apache.lucene.queryparser.util java.io.IOException import java.text.DateFormat import java.util.Calendar import java.util.Date import java.util.GregorianCalendar import java.util.Locale import java.util.TimeZone import org.apache.lucene.analysis.* import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.DateTools import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.Term import org.apache.lucene.queryparser.classic.QueryParserBase import org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration import org.apache.lucene.search.* import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.CharacterRunAutomaton import org.apache.lucene.util.automaton.RegExp import org.junit.AfterClass import org.junit.BeforeClass import class org.apache.lucene.queryparser.util.QueryParserTestBase super super extends String int Analyzer public static public static = new public static public static = public public throws if = return else while if = = = return else if ! return return Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new protected protected return protected protected = public public throws = public public throws return Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + String public public throws decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + Query String CommonQueryParserConfiguration public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + public public throws Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + CommonQueryParserConfiguration public public throws if == = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = return Query String public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt java.lang.String = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + public public throws int public final public final throws decl_stmt int = if < return char return public public return new new decl BooleanQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl Builder decl BooleanQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new PhraseQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new Query SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.Query = new = new PhraseQuery SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new PhraseQuery CommonQueryParserConfiguration SimpleCJKAnalyzer public public throws decl_stmt SimpleCJKAnalyzer = new decl_stmt org.apache.lucene.search.PhraseQuery = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = public public throws new new instanceof instanceof instanceof Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public return new new public public return new new Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public throws Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new FuzzyQuery public public throws instanceof instanceof instanceof instanceof instanceof decl_stmt org.apache.lucene.search.FuzzyQuery = call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() = call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() call org.apache.lucene.search.FuzzyQuery.getPrefixLength() instanceof try catch if ! try catch if ! CommonQueryParserConfiguration public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) CommonQueryParserConfiguration public public throws instanceof instanceof decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = CommonQueryParserConfiguration public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) public public throws private private if > - return + + else return DateFormat private private throws decl_stmt java.text.DateFormat = return call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) call java.text.DateFormat.parse(String) private private return DateFormat Calendar private private decl_stmt java.text.DateFormat = decl_stmt java.util.Calendar = new call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) return call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() Analyzer String String CommonQueryParserConfiguration String String Calendar String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Calendar = new call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.clear() call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) call java.util.Calendar.set(int,int,int,int,int,int) decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setDateResolution(DateTools,Resolution) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setDateResolution(DateTools,Resolution) call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() call java.util.Calendar.getTime() public public throws + + + + + + + + + + + + + + + + + + Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public throws public public throws CommonQueryParserConfiguration Analyzer Query CharacterRunAutomaton Analyzer CommonQueryParserConfiguration public public throws decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = decl_stmt org.apache.lucene.search.Query = = float float = float float = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = = call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() instanceof public public throws try catch if return public public throws try catch if return public public throws Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new Query CommonQueryParserConfiguration Query public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = WildcardQuery CommonQueryParserConfiguration public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new decl_stmt org.apache.lucene.search.WildcardQuery = new new CommonQueryParserConfiguration Query RegexpQuery decl Builder Query decl BooleanQuery Query public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new decl_stmt org.apache.lucene.search.RegexpQuery = new new call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() call CommonQueryParserConfiguration.setLowercaseExpandedTerms() new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() call RegexpQuery.setRewriteMethod() instanceof instanceof new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setMultiTermRewriteMethod(MultiTermQuery,RewriteMethod) decl_stmt org.apache.lucene.search.Query = new new decl_stmt org.apache.lucene.search.Query = new new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.search.Query = new new = new new = new new new new new new decl_stmt org.apache.lucene.util.fst.Builder = new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() new new call Query.add() call Query.add() call Query.add() call Query.add() call Query.add() new new call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() call Query.build() CommonQueryParserConfiguration Query CharacterRunAutomaton public public throws decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new decl_stmt org.apache.lucene.search.Query = instanceof || instanceof if instanceof = instanceof = instanceof = instanceof if + + + == CommonQueryParserConfiguration int PhraseQuery String public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) decl_stmt java.lang.String = decl_stmt int = decl_stmt org.apache.lucene.search.PhraseQuery = decl_stmt org.apache.lucene.index.Term = call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() decl_stmt int = call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() for = < ++ + + + + CommonQueryParserConfiguration BooleanQuery public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new new new decl_stmt org.apache.lucene.search.BooleanQuery = call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() for : instanceof Query String decl ScoreDoc CommonQueryParserConfiguration private private throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setLocale(Locale) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setLocale(Locale) decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.ScoreDoc = public public throws Analyzer Document Query IndexSearcher IndexReader IndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public final public final throws if = return if = return else return Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new public public return new new String public public throws if decl_stmt java.lang.String = return else return Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new Query CommonQueryParserConfiguration Query public public throws decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = FuzzyQuery public public throws decl_stmt org.apache.lucene.search.FuzzyQuery = new call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() call org.apache.lucene.search.FuzzyQuery.getMaxEdits() PhraseQuery CommonQueryParserConfiguration Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) decl_stmt org.apache.lucene.search.PhraseQuery = call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() CommonQueryParserConfiguration String String Query String String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setAllowLeadingWildcard(boolean) decl_stmt java.lang.String = decl_stmt java.lang.String = for = < ++ for = < ++ decl_stmt java.lang.String = decl_stmt org.apache.lucene.search.Query = call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() for = < ++ for = < ++ decl_stmt java.lang.String = decl_stmt org.apache.lucene.search.Query = call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() CommonQueryParserConfiguration decl PhraseQuery CharacterRunAutomaton public public throws decl_stmt org.apache.lucene.util.automaton.CharacterRunAutomaton = new new decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new = new call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) call org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration.setEnablePositionIncrements(boolean) decl_stmt org.apache.lucene.util.fst.Builder = new call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() new call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() String Query CommonQueryParserConfiguration public public throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration = new new new decl_stmt org.apache.lucene.search.Query = new = new call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() decl BooleanQuery String decl Builder public public throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() new