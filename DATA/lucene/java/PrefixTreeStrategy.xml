org.apache.lucene.spatial.prefix java.io.IOException import java.util.Iterator import java.util.Map import java.util.concurrent.ConcurrentHashMap import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.spatial.SpatialStrategy import org.apache.lucene.spatial.prefix.tree.Cell import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource import org.apache.lucene.util.Bits import class org.apache.lucene.spatial.prefix.PrefixTreeStrategy super super extends FieldType double int boolean SpatialPrefixTree decl Map public public return public public = public public return public public = public public return public public = double public public decl_stmt double = return int public public decl_stmt int = call SpatialPrefixTree.getLevelForDistance() call SpatialPrefixTree.getLevelForDistance() call SpatialPrefixTree.getLevelForDistance() call SpatialPrefixTree.getLevelForDistance() call SpatialPrefixTree.getLevelForDistance() return Field decl Iterator BytesRefIteratorTokenStream CellToBytesRefIterator public public decl_stmt java.util.Iterator < = decl_stmt org.apache.lucene.spatial.prefix.CellToBytesRefIterator = call org.apache.lucene.spatial.prefix.CellToBytesRefIterator.reset(Iterator) call org.apache.lucene.spatial.prefix.CellToBytesRefIterator.reset(Iterator) call org.apache.lucene.spatial.prefix.CellToBytesRefIterator.reset(Iterator) call org.apache.lucene.spatial.prefix.CellToBytesRefIterator.reset(Iterator) call org.apache.lucene.spatial.prefix.CellToBytesRefIterator.reset(Iterator) decl_stmt org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream = new call org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream.setBytesRefIterator(BytesRefIterator) call org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream.setBytesRefIterator(BytesRefIterator) call org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream.setBytesRefIterator(BytesRefIterator) call org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream.setBytesRefIterator(BytesRefIterator) call org.apache.lucene.spatial.prefix.BytesRefIteratorTokenStream.setBytesRefIterator(BytesRefIterator) decl_stmt org.apache.solr.handler.dataimport.config.Field = new return new protected protected return new protected < protected < < if && ! instanceof throw new + + return call org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree.getTreeCellIterator(Shape,int) call org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree.getTreeCellIterator(Shape,int) call org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree.getTreeCellIterator(Shape,int) call org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree.getTreeCellIterator(Shape,int) call org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree.getTreeCellIterator(Shape,int) PointPrefixTreeFieldCacheProvider public public decl_stmt org.apache.lucene.spatial.prefix.PointPrefixTreeFieldCacheProvider = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == synchronized = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return new public public final final throws return