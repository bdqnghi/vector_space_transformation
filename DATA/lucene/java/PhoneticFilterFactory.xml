org.apache.lucene.analysis.phonetic java.io.IOException import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.util.HashMap import java.util.Locale import java.util.Map import org.apache.commons.codec.Encoder import org.apache.commons.codec.language.Caverphone2 import org.apache.commons.codec.language.ColognePhonetic import org.apache.commons.codec.language.DoubleMetaphone import org.apache.commons.codec.language.Metaphone import org.apache.commons.codec.language.Nysiis import org.apache.commons.codec.language.RefinedSoundex import org.apache.commons.codec.language.Soundex import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.util.ResourceLoader import org.apache.lucene.analysis.util.ResourceLoaderAware import org.apache.lucene.analysis.util.TokenFilterFactory import class org.apache.lucene.analysis.phonetic.PhoneticFilterFactory super super extends super implements String String String String Integer boolean Method String decl Class decl Map public public throws = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) call java.lang.String.toUpperCase(Locale) if == = if != try = call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() catch throw new + + + + + String private < extends extends private < extends extends decl_stmt java.lang.String = if call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) == - = + try return catch throw new + + + call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() Throwable Encoder protected protected try decl_stmt org.apache.lucene.search.highlight.Encoder = call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() if != && != call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) return catch decl_stmt java.lang.Throwable final final = instanceof : throw new + + + public public return new