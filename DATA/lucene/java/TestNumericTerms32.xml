org.apache.lucene.uninverting java.util.HashMap import java.util.Map import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.FieldType import org.apache.lucene.document.LegacyIntField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LegacyNumericRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TopDocs import org.apache.lucene.store.Directory import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class org.apache.lucene.uninverting.TestNumericTerms32 super super extends int IndexSearcher int int IndexReader Directory FieldType FieldType decl Map RandomIndexWriter LegacyIntField FieldType int Document FieldType public static public static throws = = << / = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.solr.schema.FieldType final final = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() decl_stmt org.apache.solr.schema.FieldType final final = new call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) decl_stmt org.apache.solr.schema.FieldType final final = new call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) decl_stmt org.apache.solr.schema.FieldType final final = new call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) call org.apache.solr.schema.FieldType.setNumericPrecisionStep(int) decl_stmt LegacyIntField = new = new = new decl_stmt org.apache.lucene.document.Document = new call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() for = < ++ decl_stmt int = * + call LegacyIntField.setIntValue() call LegacyIntField.setIntValue() call LegacyIntField.setIntValue() call LegacyIntField.setIntValue() call LegacyIntField.setIntValue() call Document.setIntValue() call Document.setIntValue() call Document.setIntValue() call Document.setIntValue() call Document.setIntValue() call int.setIntValue() call int.setIntValue() call int.setIntValue() call int.setIntValue() call int.setIntValue() = - / call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt java.util.Map < = new <> = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() public static public static throws = call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() = call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = int int int int TopDocs Query String int int decl ScoreDoc private private throws decl_stmt java.lang.String = + decl_stmt int = for = < ++ decl_stmt int = * * + decl_stmt int = * * + if > decl_stmt int = = = decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new if == continue decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt int = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) for = < ++ decl_stmt int = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) > = public public throws public public throws public public throws