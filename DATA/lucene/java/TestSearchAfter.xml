org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.List import java.util.Random import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.document.DoubleDocValuesField import org.apache.lucene.document.Field import org.apache.lucene.document.FloatDocValuesField import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.StoredField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.English import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.TestSearchAfter super super extends IndexSearcher decl List int Directory IndexReader decl List boolean SortField RandomIndexWriter Random int int Document SortField public public throws = new <> new new new new new new new new new new new new new for : new for = < ++ decl_stmt boolean = == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = new call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : new for = < ++ decl_stmt boolean = == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = new call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ decl_stmt org.apache.lucene.search.SortField = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else if call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() call org.apache.lucene.search.SortField.getType() == decl_stmt org.apache.lucene.search.SortField = new call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getField() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.getReverse() call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int = decl_stmt java.util.Random = for = < ++ decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() == : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new byte call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new short call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call java.util.Random.nextDouble() call java.util.Random.nextDouble() call java.util.Random.nextDouble() call java.util.Random.nextDouble() call java.util.Random.nextDouble() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new + if + for : if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if + call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if == call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = if + public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl BooleanQuery int public public throws decl_stmt int = for = < ++ new new new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() throws for : new new for = < ++ decl SortField decl_stmt org.apache.lucene.search.SortField = new for = < ++ = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return new int TopDocs int int boolean ScoreDoc int TopDocs boolean throws decl_stmt int = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.TopDocs decl_stmt int = * if + ++ + + + + + + decl_stmt boolean final final = decl_stmt boolean final final = if == = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) else if == = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) else = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) if + decl_stmt int = for : + ++ + + call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) + + decl_stmt int = decl_stmt org.apache.lucene.search.ScoreDoc = while < decl_stmt org.apache.lucene.search.TopDocs if == if + = call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) else if + if == = call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) else = call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) call org.apache.lucene.search.IndexSearcher.searchAfter(FieldDoc,Query,int,Sort,boolean,boolean) if + + if == break += = - ScoreDoc ScoreDoc throws for = < ++ decl_stmt org.apache.lucene.search.ScoreDoc = + decl_stmt org.apache.lucene.search.ScoreDoc = if + + + call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) + + + call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) + + if instanceof instanceof