org.apache.lucene.store java.io.IOException import java.nio.file.AtomicMoveNotSupportedException import java.nio.file.NoSuchFileException import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.HashSet import java.util.List import java.util.Set import org.apache.lucene.util.IOUtils import class org.apache.lucene.store.FileSwitchDirectory super super extends boolean decl Set Directory Directory public public return public public return public public throws return public public throws if = decl Set NoSuchFileException decl String public public throws decl_stmt java.util.Set < = new <> decl_stmt NoSuchFileException = try for : call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() catch = try for : call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() catch if != throw if call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() throw if != && call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() throw decl_stmt java.lang.String = call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() return int public static public static decl_stmt int = if == - return return + String private private decl_stmt java.lang.String = if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return else return public public throws if == call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() else call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() public public throws return public public throws return public public throws return + decl List decl List public public < throws decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() Directory public public throws decl_stmt org.apache.lucene.store.Directory = if != throw new call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() call Directory.renameFile() public public throws return