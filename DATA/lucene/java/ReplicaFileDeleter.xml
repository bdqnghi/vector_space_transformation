org.apache.lucene.replicator.nrt java.io.FileNotFoundException import java.io.IOException import java.nio.file.NoSuchFileException import java.util.ArrayList import java.util.Collection import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.index.IndexFileNames import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import class org.apache.lucene.replicator.nrt.ReplicaFileDeleter Node Directory decl Map private static private static throws try call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() return catch return Integer public synchronized public synchronized < throws for : assert : + + decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() + decl Set Integer public synchronized public synchronized < throws decl_stmt java.util.Set < = new <> for : decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != : + assert call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() > if call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() == call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() - private synchronized private synchronized < throws if call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + + for : assert call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() == if for : assert call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() == if == private synchronized private synchronized throws if call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() public synchronized public synchronized return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() public synchronized public synchronized throws if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() == public synchronized public synchronized throws decl Set public synchronized public synchronized throws decl_stmt java.util.Set < = new <> for : call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() == && == && == call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) call org.apache.lucene.replicator.nrt.Node.message(String) + + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add()