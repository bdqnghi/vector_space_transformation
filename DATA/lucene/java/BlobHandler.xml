org.apache.solr.handler java.io.IOException import java.io.OutputStream import java.lang.invoke.MethodHandles import java.math.BigInteger import java.nio.ByteBuffer import java.security.MessageDigest import java.util.Date import java.util.List import java.util.Map import org.apache.lucene.document.Document import org.apache.lucene.index.IndexableField import org.apache.lucene.index.Term import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.search.TopFieldDocs import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.ContentStream import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.StrUtils import org.apache.solr.core.PluginInfo import org.apache.solr.core.SolrCore import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestHandler import org.apache.solr.request.SolrRequestInfo import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.FieldType import org.apache.solr.search.QParser import org.apache.solr.update.AddUpdateCommand import org.apache.solr.update.CommitUpdateCommand import org.apache.solr.update.processor.UpdateRequestProcessor import org.apache.solr.update.processor.UpdateRequestProcessorChain import org.apache.solr.util.SimplePostTool import org.apache.solr.util.plugin.PluginInfoInitialized import org.slf4j.Logger import org.slf4j.LoggerFactory import static static java.util.Collections.singletonMap import static static org.apache.solr.common.params.CommonParams.JSON import static static org.apache.solr.common.util.Utils.makeMap import class org.apache.solr.handler.BlobHandler super super extends super implements long long Logger String QParser String TopDocs IndexableField MessageDigest decl List String String TopDocs int FieldType Document String String Number ByteBuffer ByteBuffer String public public final final throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.List < = decl_stmt java.lang.String = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() >= = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if if == || call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() return decl_stmt java.lang.String = if != call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return for : decl_stmt ByteBuffer = decl_stmt java.security.MessageDigest = call java.security.MessageDigest.update(byte,int,int) call java.security.MessageDigest.update(byte,int,int) call java.security.MessageDigest.update(byte,int,int) call java.security.MessageDigest.update(byte,int,int) call java.security.MessageDigest.update(byte,int,int) call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.position() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() decl_stmt java.lang.String = new call java.security.MessageDigest.digest(byte) call java.security.MessageDigest.digest(byte) call java.security.MessageDigest.digest(byte) call java.security.MessageDigest.digest(byte) call java.security.MessageDigest.digest(byte) decl_stmt org.apache.lucene.search.TopDocs = new new if > new + call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return decl_stmt TopFieldDocs = new new new new decl_stmt long = if > decl_stmt org.apache.lucene.document.Document = decl_stmt java.lang.Number = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() = call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() call Number.longValue() ++ decl_stmt java.lang.String = + + decl_stmt java.util.Map < = new call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() break else decl_stmt int = - if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > try = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() catch + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return if if == throw new else decl_stmt java.lang.String = if != - = decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.TopDocs final final = call QParser.parse() call QParser.parse() call QParser.parse() call QParser.parse() call QParser.parse() new new if > new public public throws decl_stmt org.apache.lucene.document.Document = decl_stmt org.apache.lucene.index.IndexableField = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() decl_stmt org.apache.solr.schema.FieldType = decl_stmt ByteBuffer = call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) if == throw new else call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() else throw new else decl_stmt java.lang.String = if != = if != - = new Document ByteBuffer IndexableField FieldType public public throws decl_stmt org.apache.lucene.document.Document = decl_stmt org.apache.lucene.index.IndexableField = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() decl_stmt org.apache.solr.schema.FieldType = decl_stmt ByteBuffer = call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) call org.apache.solr.schema.FieldType.toObject(SchemaField,BytesRef) if == throw new else call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.array() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() call ByteBuffer.limit() SolrQueryResponse String private private < for decl_stmt org.apache.solr.response.SolrQueryResponse = new decl_stmt java.lang.String = + + new if call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() == return else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) ++ = + + UpdateRequestProcessorChain AddUpdateCommand SolrInputDocument UpdateRequestProcessor public static public static < throws decl_stmt org.apache.solr.common.SolrInputDocument = new for < : call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorChain = decl_stmt org.apache.solr.update.processor.UpdateRequestProcessor = call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() decl_stmt org.apache.solr.update.AddUpdateCommand = new = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processCommit(CommitUpdateCommand) new call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() public public if > return return public public return NamedList Object public public if != decl_stmt org.apache.solr.common.util.NamedList = if != decl_stmt java.lang.Object = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if != = = * * LocalSolrQueryRequest private static private static decl_stmt org.apache.solr.request.LocalSolrQueryRequest = new