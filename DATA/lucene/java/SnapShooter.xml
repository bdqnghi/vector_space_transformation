org.apache.solr.handler java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.text.SimpleDateFormat import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Date import java.util.List import java.util.Locale import org.apache.lucene.index.IndexCommit import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.store.NoLockFactory import org.apache.lucene.store.SimpleFSDirectory import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.core.DirectoryFactory import org.apache.solr.core.DirectoryFactory.DirContext import org.apache.solr.core.SolrCore import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.SnapShooter String String SolrCore File String String Logger final final final final final final new public public if != else public public if != else decl File boolean public public decl_stmt boolean = decl_stmt File = new for : if + = break if == throw new + protected protected final final new public public public public throws = new if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() if ! call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() throw new + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl Collection decl NamedList Directory final final call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + == : + + decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() new try decl_stmt java.util.Collection < = decl_stmt org.apache.lucene.store.Directory = call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getIndexDir() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() call org.apache.solr.core.SolrCore.getSolrConfig() try finally call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call org.apache.solr.core.SolrCore.getDirectoryFactory() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() new call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + == : + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() finally = decl File decl List OldBackupDirectory int private private decl_stmt File = new decl_stmt java.util.List < = new <> for : decl_stmt org.apache.solr.handler.OldBackupDirectory = new if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if > call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - return decl_stmt int = for : if ++ > boolean decl NamedList File protected protected call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt org.apache.solr.common.util.NamedList < = new <> decl_stmt boolean decl_stmt File = new + = if call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() new else call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() + call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + = private static private static < throws try = new for :