org.apache.lucene.search.grouping.function org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.FieldComparator import org.apache.lucene.search.LeafFieldComparator import org.apache.lucene.search.Scorer import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.grouping.AbstractAllGroupHeadsCollector import org.apache.lucene.util.mutable.MutableValue import java.io.IOException import java.util.Collection import java.util.HashMap import java.util.Map import class org.apache.lucene.search.grouping.function.FunctionAllGroupHeadsCollector super super extends MutableValue LeafReaderContext decl Map decl FunctionValues Sort decl Map ValueSource decl ValueFiller GroupHead MutableValue protected protected throws call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() call decl FunctionValues.fillValue() decl_stmt GroupHead = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt org.apache.lucene.util.mutable.MutableValue = call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() call decl ValueFiller.duplicate() = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = else = = protected < protected < return call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() public public throws = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() for : FunctionValues protected protected throws = decl_stmt org.apache.lucene.queries.function.FunctionValues = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() = call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() call org.apache.lucene.queries.function.FunctionValues.getValueFiller() = call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() call decl FunctionValues.getValue() for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() for = < ++ = public public throws return public public throws for : = + public public return call org.apache.lucene.search.Sort.needsScores() call org.apache.lucene.search.Sort.needsScores() call org.apache.lucene.search.Sort.needsScores() call org.apache.lucene.search.Sort.needsScores() call org.apache.lucene.search.Sort.needsScores()