org.apache.solr.handler.dataimport org.apache.http.client.HttpClient import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpClientUtil import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.impl.HttpSolrClient.Builder import org.apache.solr.client.solrj.impl.XMLResponseParser import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.solr.common.params.CommonParams import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.net.MalformedURLException import java.net.URL import java.util.Collection import java.util.HashMap import java.util.Iterator import java.util.Map import static static org.apache.solr.handler.data.DataImportHandlerException.SEVERE import static static org.apache.solr.handler.data.DataImportHandlerException.wrapAndThrow import class org.apache.solr.handler.dataimport.SolrEntityProcessor super super extends int Logger decl String String int String String String int SolrClient String int decl String public public try call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() call SolrClient.close() catch finally protected protected return URL HttpClient String protected protected try decl_stmt java.lang.String = if == throw new decl_stmt sun.net.www.http.HttpClient = decl_stmt java.net.URL = new if = new call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else = new call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch throw new public < public < return SolrDocumentListIterator SolrDocumentList private private if != decl_stmt SolrDocumentListIterator = if ! call SolrDocumentListIterator.hasNext() call SolrDocumentListIterator.hasNext() call SolrDocumentListIterator.hasNext() call SolrDocumentListIterator.hasNext() call SolrDocumentListIterator.hasNext() && call SolrDocumentListIterator.hasMoreRows() call SolrDocumentListIterator.hasMoreRows() call SolrDocumentListIterator.hasMoreRows() call SolrDocumentListIterator.hasMoreRows() call SolrDocumentListIterator.hasMoreRows() decl_stmt org.apache.solr.common.SolrDocumentList = call SolrDocumentListIterator.getStart() call SolrDocumentListIterator.getStart() call SolrDocumentListIterator.getStart() call SolrDocumentListIterator.getStart() call SolrDocumentListIterator.getStart() + call SolrDocumentListIterator.getSize() call SolrDocumentListIterator.getSize() call SolrDocumentListIterator.getSize() call SolrDocumentListIterator.getSize() call SolrDocumentListIterator.getSize() if != = new else decl_stmt org.apache.solr.common.SolrDocumentList = if != = new return String String SolrQuery String QueryResponse String protected protected = if == throw new decl_stmt java.lang.String = if != = decl_stmt java.lang.String = if != = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) decl_stmt java.lang.String = if != = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) = decl_stmt java.lang.String = if != = decl_stmt org.apache.solr.client.solrj.SolrQuery = new call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setStart(Integer) call org.apache.solr.client.solrj.SolrQuery.setStart(Integer) call org.apache.solr.client.solrj.SolrQuery.setStart(Integer) call org.apache.solr.client.solrj.SolrQuery.setStart(Integer) call org.apache.solr.client.solrj.SolrQuery.setStart(Integer) if != for : call org.apache.solr.client.solrj.SolrQuery.addField(String) call org.apache.solr.client.solrj.SolrQuery.addField(String) call org.apache.solr.client.solrj.SolrQuery.addField(String) call org.apache.solr.client.solrj.SolrQuery.addField(String) call org.apache.solr.client.solrj.SolrQuery.addField(String) call org.apache.solr.client.solrj.SolrQuery.setRequestHandler(String) call org.apache.solr.client.solrj.SolrQuery.setRequestHandler(String) call org.apache.solr.client.solrj.SolrQuery.setRequestHandler(String) call org.apache.solr.client.solrj.SolrQuery.setRequestHandler(String) call org.apache.solr.client.solrj.SolrQuery.setRequestHandler(String) call org.apache.solr.client.solrj.SolrQuery.setFilterQueries(String) call org.apache.solr.client.solrj.SolrQuery.setFilterQueries(String) call org.apache.solr.client.solrj.SolrQuery.setFilterQueries(String) call org.apache.solr.client.solrj.SolrQuery.setFilterQueries(String) call org.apache.solr.client.solrj.SolrQuery.setFilterQueries(String) call org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(Integer) call org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(Integer) call org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(Integer) call org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(Integer) call org.apache.solr.client.solrj.SolrQuery.setTimeAllowed(Integer) * decl_stmt org.apache.solr.client.solrj.response.QueryResponse = try = call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) catch if else if return == : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() public public return decl HashMap Object decl Collection SolrDocument public < public < decl_stmt org.apache.solr.common.SolrDocument = decl_stmt HashMap < = new <> decl_stmt java.util.Collection < = call org.apache.solr.common.SolrDocument.getFieldNames() call org.apache.solr.common.SolrDocument.getFieldNames() call org.apache.solr.common.SolrDocument.getFieldNames() call org.apache.solr.common.SolrDocument.getFieldNames() call org.apache.solr.common.SolrDocument.getFieldNames() for : decl_stmt java.lang.Object = call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call org.apache.solr.common.SolrDocument.getFieldValue(String) call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() return public public return public public return public public return > + public public throw new