org.apache.lucene.analysis.standard java.io.BufferedReader import java.io.File import java.io.FileOutputStream import java.io.IOException import java.io.InputStreamReader import java.io.OutputStreamWriter import java.io.Writer import java.net.URL import java.net.URLConnection import java.nio.charset.StandardCharsets import java.text.DateFormat import java.util.Date import java.util.Locale import java.util.SortedSet import java.util.TimeZone import java.util.TreeSet import java.util.regex.Matcher import java.util.regex.Pattern import class org.apache.lucene.analysis.standard.GenerateJflexTLDMacros Pattern Pattern File String URL String long public static public static throws if != || || + + new decl SortedSet public public throws decl_stmt java.util.SortedSet final final final < = + call decl SortedSet.size() call decl SortedSet.size() call decl SortedSet.size() call decl SortedSet.size() call decl SortedSet.size() + + + Matcher URLConnection decl SortedSet String BufferedReader private < private < throws decl_stmt java.util.SortedSet final final final < = new <> decl_stmt sun.net.www.URLConnection final final = call java.net.URL.openConnection(Proxy) call java.net.URL.openConnection(Proxy) call java.net.URL.openConnection(Proxy) call java.net.URL.openConnection(Proxy) call java.net.URL.openConnection(Proxy) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call sun.net.www.URLConnection.addRequestProperty(String,String) call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() call URLConnection.connect() = call sun.net.www.URLConnection.getLastModified() call sun.net.www.URLConnection.getLastModified() call sun.net.www.URLConnection.getLastModified() call sun.net.www.URLConnection.getLastModified() call sun.net.www.URLConnection.getLastModified() decl_stmt java.io.BufferedReader = new new call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() try decl_stmt java.lang.String while != = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) else = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call decl SortedSet.add() call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) finally call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() return Writer boolean DateFormat private private < throws decl_stmt java.text.DateFormat final final = call java.text.DateFormat.setTimeZone(TimeZone) call java.text.DateFormat.setTimeZone(TimeZone) call java.text.DateFormat.setTimeZone(TimeZone) call java.text.DateFormat.setTimeZone(TimeZone) call java.text.DateFormat.setTimeZone(TimeZone) decl_stmt Writer final final = new new try call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call java.net.URL.toString() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() if > call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) call java.text.DateFormat.format(Date) new call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() decl_stmt boolean = for : call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() if = call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() else call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() call Writer.write() finally call Writer.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() StringBuilder char private private decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt char = if || == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()