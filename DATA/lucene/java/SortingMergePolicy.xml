org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.List import java.util.Map import org.apache.lucene.index.LeafReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.MergePolicy import org.apache.lucene.index.MergeState import org.apache.lucene.index.MergeTrigger import org.apache.lucene.index.MultiReader import org.apache.lucene.index.SegmentCommitInfo import org.apache.lucene.index.SegmentInfo import org.apache.lucene.index.SegmentInfos import org.apache.lucene.index.SegmentReader import org.apache.lucene.index.SlowCompositeReaderWrapper import org.apache.lucene.search.Sort import org.apache.lucene.store.Directory import org.apache.lucene.util.Bits import org.apache.lucene.util.InfoStream import org.apache.lucene.util.packed.PackedInts import org.apache.lucene.util.packed.PackedLongValues import class org.apache.lucene.index.SortingMergePolicy super super extends Sort Sorter String decl List CompositeReader String LeafReader public < public < throws if == = if + for : decl_stmt java.lang.String = if == = + + + decl_stmt java.util.List < = new <> for : if instanceof = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.index.LeafReader final final if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else decl_stmt org.apache.lucene.index.CompositeReader final final = new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = new = call org.apache.lucene.util.Sorter.sort(int,DocComparator) call org.apache.lucene.util.Sorter.sort(int,DocComparator) call org.apache.lucene.util.Sorter.sort(int,DocComparator) call org.apache.lucene.util.Sorter.sort(int,DocComparator) call org.apache.lucene.util.Sorter.sort(int,DocComparator) = if == if return else if + return decl Map public public decl_stmt java.util.Map < = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call Sorter.getID() call Sorter.getID() call Sorter.getID() call Sorter.getID() call Sorter.getID() int decl Builder int decl PackedLongValues private private < decl_stmt org.apache.lucene.util.fst.Builder = decl_stmt int = for : decl_stmt int final final = decl_stmt org.apache.lucene.util.Bits final final = for = < ++ if != && ! call int.get() call int.get() call int.get() call int.get() call int.get() ++ else call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() return call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() int int PackedLongValues public public final final if == throw new if == return assert == decl_stmt org.apache.lucene.util.packed.PackedLongValues final final = return new public public decl_stmt int final final = + int call org.apache.lucene.util.packed.PackedLongValues.get(long) call org.apache.lucene.util.packed.PackedLongValues.get(long) call org.apache.lucene.util.packed.PackedLongValues.get(long) call org.apache.lucene.util.packed.PackedLongValues.get(long) call org.apache.lucene.util.packed.PackedLongValues.get(long) decl_stmt int final final = return int int public public decl_stmt int final final = + int decl_stmt int final final = return public public return + + + + public public new public public return + + + + String public static public static decl_stmt java.lang.String = if != && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.lucene.search.Sort.toString() call org.apache.lucene.search.Sort.toString() call org.apache.lucene.search.Sort.toString() call org.apache.lucene.search.Sort.toString() call org.apache.lucene.search.Sort.toString() return return decl Map SegmentReader private static private static if instanceof decl_stmt org.apache.lucene.index.SegmentReader final final = decl_stmt java.util.Map final final final < = call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() call org.apache.lucene.index.SegmentReader.getSegmentInfo() if != return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() else if instanceof return return MergeSpecification private private if == return decl_stmt MergeSpecification = new for : call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() return public public return public public throws return public public < throws return public public throws return public public return + + + +