org.apache.solr.search.facet java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import org.apache.solr.client.solrj.SolrResponse import org.apache.solr.common.SolrException import org.apache.solr.common.params.FacetParams import org.apache.solr.common.params.ShardParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.handler.component.SearchComponent import org.apache.solr.handler.component.ShardRequest import org.apache.solr.handler.component.ShardResponse import org.apache.solr.search.QueryContext import org.apache.solr.search.SyntaxError import org.apache.solr.util.RTimer import class org.apache.solr.search.facet.FacetModule super super extends int String int String public public return boolean RTimer FacetDebugInfo long FacetContext FacetComponentState FacetProcessor public public throws decl_stmt FacetComponentState = if == return decl_stmt boolean = decl_stmt FacetContext = new = = = = if |= decl_stmt org.apache.solr.search.facet.FacetProcessor = call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() if decl_stmt org.apache.solr.search.facet.FacetDebugInfo = new call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() decl_stmt org.apache.solr.util.RTimer final final = new call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() decl_stmt long = long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) long call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() else call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() FacetComponentState decl Map FacetParser decl Map int SolrParams String boolean boolean FacetRequest public public throws decl_stmt java.util.Map < = decl_stmt java.util.Map < = if == decl_stmt int = if <= return decl_stmt boolean = if ! return = new else = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == return decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) if decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if == return decl_stmt FacetParser = new decl_stmt org.apache.solr.search.facet.FacetRequest = try = call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() catch throw new decl_stmt FacetComponentState = new = = = = FacetComponentState public public throws decl_stmt FacetComponentState = if == return return FacetComponentState public public decl_stmt FacetComponentState = if == return if & != |= else Object FacetComponentState SolrResponse decl NamedList public public decl_stmt FacetComponentState = if == return for : decl_stmt org.apache.solr.client.solrj.SolrResponse = decl_stmt org.apache.solr.common.util.NamedList < = call SolrResponse.getResponse() call SolrResponse.getResponse() call SolrResponse.getResponse() call SolrResponse.getResponse() call SolrResponse.getResponse() if == continue decl_stmt java.lang.Object = call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() if == continue if == = call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.facetRequest() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() new FacetComponentState public public if != return decl_stmt FacetComponentState = if == return if != call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() call FacetComponentState.merger() public public return public public return