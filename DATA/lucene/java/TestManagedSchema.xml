org.apache.solr.schema java.io.File import java.io.FileInputStream import java.lang.invoke.MethodHandles import java.nio.file.Files import java.util.Collections import java.util.HashMap import java.util.Map import java.util.regex.Pattern import org.apache.commons.io.FileUtils import org.apache.commons.io.IOUtils import org.apache.solr.common.SolrException import org.apache.solr.common.params.CoreAdminParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.AbstractBadConfigTestBase import org.apache.solr.core.CoreContainer import org.apache.solr.handler.admin.CoreAdminHandler import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.junit.After import org.junit.Before import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.schema.TestManagedSchema super super extends String File File Logger String File private private throws = = new decl_stmt File = new new new new new new new new new new call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() private private throws File String File public public throws decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() File File String File public public throws decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() public public throws call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() File File public public throws decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt File = new call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() CoreAdminHandler CoreContainer SolrQueryRequest SolrQueryResponse public public throws call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt org.apache.solr.core.CoreContainer final final = decl_stmt org.apache.solr.handler.admin.CoreAdminHandler final final = new decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.response.SolrQueryResponse = new call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() NamedList CoreAdminHandler NamedList SolrQueryRequest String NamedList CoreContainer SolrQueryResponse private private throws decl_stmt org.apache.solr.core.CoreContainer final final = decl_stmt org.apache.solr.handler.admin.CoreAdminHandler final final = new decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.response.SolrQueryResponse = new call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.admin.CoreAdminHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt java.lang.String = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) SchemaField String String String IndexSchema IndexSchema decl Map public public throws decl_stmt java.lang.String = try decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Map < = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) catch for = != = if != && - != return throw new + finally File SchemaField String String FileInputStream IndexSchema IndexSchema decl Map String public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt FileInputStream = new = call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) File SchemaField String String String IndexSchema IndexSchema decl Map String public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt java.lang.String = try catch for = != = if != && - != return throw new + finally decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) File SchemaField String String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.lang.String = try decl_stmt java.util.Map < = new <> decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) catch for = != = if != && - != return throw new + finally File SchemaField String String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) decl_stmt java.lang.String = try = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) catch for = != = if != && - != return throw new + finally File SchemaField String String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.lang.String = try decl_stmt java.util.Map < = new <> decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) catch for = != = if != && - != return throw new + finally String File SchemaField String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.lang.String = + + decl_stmt java.lang.String = + + decl_stmt java.util.Map < = new <> decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) + String File SchemaField String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.lang.String = + + decl_stmt java.lang.String = + + decl_stmt java.util.Map < = new <> decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) + File SchemaField IndexSchema String String FileInputStream IndexSchema IndexSchema decl Map String public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt FileInputStream = new = call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) File SchemaField String String IndexSchema IndexSchema decl Map public public throws decl_stmt File = new call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() decl_stmt java.lang.String = + + decl_stmt java.util.Map < = new <> decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt java.lang.String = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) call org.apache.solr.schema.IndexSchema.newField(String,String,Map) decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField) call org.apache.solr.schema.IndexSchema.addField(SchemaField)