org.apache.lucene.codecs.lucene53 java.io.IOException import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.NormsConsumer import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.IOUtils import static static org.apache.lucene.codecs.lucene53.Lucene53NormsFormat.VERSION_CURRENT import class org.apache.lucene.codecs.lucene53.Lucene53NormsConsumer super super extends int IndexOutput int long long long public public < throws call int.writeVInt() call int.writeVInt() call int.writeVInt() call int.writeVInt() call int.writeVInt() decl_stmt long = decl_stmt long = decl_stmt int = for : if == throw new + + + decl_stmt long final final = = = ++ if != throw new + + + + + if == else if >= && <= else if >= && <= else if >= && <= else private private throws call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() byte call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() private private < throws call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() byte call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() for : call IndexOutput.writeByte() call IndexOutput.writeByte() call IndexOutput.writeByte() call IndexOutput.writeByte() call IndexOutput.writeByte() private private < throws call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() byte call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() for : call IndexOutput.writeShort() call IndexOutput.writeShort() call IndexOutput.writeShort() call IndexOutput.writeShort() call IndexOutput.writeShort() private private < throws call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() byte call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() for : call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() private private < throws call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() call int.writeByte() byte call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call int.writeLong() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() for : call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() boolean public public throws decl_stmt boolean = try if != call int.writeVInt() call int.writeVInt() call int.writeVInt() call int.writeVInt() call int.writeVInt() - if != = finally if else = =