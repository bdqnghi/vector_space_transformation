org.apache.lucene.codecs.mockrandom java.io.IOException import java.util.Random import org.apache.lucene.codecs.FieldsConsumer import org.apache.lucene.codecs.FieldsProducer import org.apache.lucene.codecs.PostingsFormat import org.apache.lucene.codecs.PostingsReaderBase import org.apache.lucene.codecs.PostingsWriterBase import org.apache.lucene.codecs.TermStats import org.apache.lucene.codecs.blockterms.BlockTermsReader import org.apache.lucene.codecs.blockterms.BlockTermsWriter import org.apache.lucene.codecs.blockterms.FixedGapTermsIndexReader import org.apache.lucene.codecs.blockterms.FixedGapTermsIndexWriter import org.apache.lucene.codecs.blockterms.TermsIndexReaderBase import org.apache.lucene.codecs.blockterms.TermsIndexWriterBase import org.apache.lucene.codecs.blockterms.VariableGapTermsIndexReader import org.apache.lucene.codecs.blockterms.VariableGapTermsIndexWriter import org.apache.lucene.codecs.blocktree.BlockTreeTermsReader import org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter import org.apache.lucene.codecs.blocktreeords.OrdsBlockTreeTermsReader import org.apache.lucene.codecs.blocktreeords.OrdsBlockTreeTermsWriter import org.apache.lucene.codecs.lucene50.Lucene50PostingsReader import org.apache.lucene.codecs.lucene50.Lucene50PostingsWriter import org.apache.lucene.codecs.memory.FSTOrdTermsReader import org.apache.lucene.codecs.memory.FSTOrdTermsWriter import org.apache.lucene.codecs.memory.FSTTermsReader import org.apache.lucene.codecs.memory.FSTTermsWriter import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat super super extends Random String protected protected throw new Random int int int FieldsConsumer Random int int int long TermsIndexWriterBase long String int int int int decl IndexTermSelector decl VariableGapTermsIndexWriter PostingsWriterBase IndexOutput public public throws decl_stmt int if > = else = decl_stmt int = if + decl_stmt long final final = call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() if + + + + + decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.store.IndexOutput final final = try call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() finally call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() decl_stmt java.util.Random final final = new call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt PostingsWriterBase = new decl_stmt org.apache.lucene.codecs.FieldsConsumer final final decl_stmt int final final = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if == decl_stmt boolean = try = new = finally if ! call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() else if == decl_stmt boolean = try = new = finally if ! call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() else if == if decl_stmt int final final = decl_stmt int final final = - * + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt boolean = try = new = finally if ! call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() else if == if decl_stmt boolean = decl_stmt TermsIndexWriterBase final final try if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt int = if + + = new else decl_stmt IndexTermSelector final final final final final decl_stmt int final final = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if == decl_stmt int final final = = new if + + else if == decl_stmt int final final = decl_stmt int final final = = new else decl_stmt long final final = call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() decl_stmt int final final = if + + = new decl_stmt java.util.Random final final = new public public return call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() call int.nextInt() == / public public = new = finally if ! call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() = try = new = finally if ! try call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() finally call TermsIndexWriterBase.close() call TermsIndexWriterBase.close() call TermsIndexWriterBase.close() call TermsIndexWriterBase.close() call TermsIndexWriterBase.close() else if == if decl_stmt int final final = decl_stmt int final final = - * + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt boolean = try = new = finally if ! call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() call PostingsWriterBase.close() else throw new return public public return == / public public int TermsIndexReaderBase boolean boolean FieldsProducer Random int long String IndexInput int PostingsReaderBase public public throws decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.store.IndexInput final final = decl_stmt long final final = call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) if + + + + + call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() decl_stmt java.util.Random final final = new decl_stmt int = if + decl_stmt PostingsReaderBase = new decl_stmt org.apache.lucene.codecs.FieldsProducer final final decl_stmt int final final = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if == decl_stmt boolean = try = new = finally if ! call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() else if == decl_stmt boolean = try = new = finally if ! call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() else if == if decl_stmt boolean = try = new = finally if ! call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() else if == if decl_stmt TermsIndexReaderBase final final decl_stmt boolean = try decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() if if = new else decl_stmt int final final = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if == call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) else if == call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() if = new = finally if ! call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() = try = new = finally if ! try call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() finally call TermsIndexReaderBase.close() call TermsIndexReaderBase.close() call TermsIndexReaderBase.close() call TermsIndexReaderBase.close() call TermsIndexReaderBase.close() else if == if decl_stmt boolean = try = new = finally if ! call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() call PostingsReaderBase.close() else throw new return