org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import java.util.Objects import java.util.Set import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.TermState import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.similarities.Similarity.SimScorer import class org.apache.lucene.search.SynonymQuery super super extends Term public < public < return StringBuilder Query public public decl_stmt java.lang.StringBuilder = new for = < ++ if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt org.apache.lucene.search.Query = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() int int public public decl_stmt int final final = decl_stmt int = = * + return SynonymQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.search.SynonymQuery = if ! return return public public throws if == return new if == return new return decl BooleanQuery public public throws if return new else decl_stmt org.apache.lucene.util.fst.Builder = new for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public public < for : Scorer SimScorer Explanation int float SynonymScorer Explanation public public throws decl_stmt org.apache.lucene.search.Scorer = if != decl_stmt int = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() if == decl_stmt float final final if instanceof decl_stmt SynonymScorer = = call SynonymScorer.tf() call SynonymScorer.tf() call SynonymScorer.tf() call SynonymScorer.tf() call SynonymScorer.tf() call SynonymScorer.getSubMatches() call SynonymScorer.getSubMatches() call SynonymScorer.getSubMatches() call SynonymScorer.getSubMatches() call SynonymScorer.getSubMatches() else assert instanceof = call Scorer.freq() call Scorer.freq() call Scorer.freq() call Scorer.freq() call Scorer.freq() decl_stmt SimScorer = decl_stmt org.apache.lucene.search.Explanation = + decl_stmt org.apache.lucene.search.Explanation = call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() call SimScorer.explain() return call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() call org.apache.lucene.search.Explanation.getValue() + + + + + + return public public throws return public public decl Similarity decl List TermState TermsEnum decl SimScorer public public throws decl_stmt SimScorer = decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.index.TermState = if != decl_stmt org.apache.lucene.index.TermsEnum = call TermState.seekExact() call TermState.seekExact() call TermState.seekExact() call TermState.seekExact() call TermState.seekExact() decl_stmt org.apache.lucene.index.PostingsEnum = call TermState.postings() call TermState.postings() call TermState.postings() call TermState.postings() call TermState.postings() call decl SimScorer.add() call decl SimScorer.add() call decl SimScorer.add() call decl SimScorer.add() call decl SimScorer.add() new if call decl SimScorer.isEmpty() call decl SimScorer.isEmpty() call decl SimScorer.isEmpty() call decl SimScorer.isEmpty() call decl SimScorer.isEmpty() return else if call decl SimScorer.size() call decl SimScorer.size() call decl SimScorer.size() call decl SimScorer.size() call decl SimScorer.size() == return call decl SimScorer.get() call decl SimScorer.get() call decl SimScorer.get() call decl SimScorer.get() call decl SimScorer.get() else return new protected protected throws return int final final throws decl_stmt int = for = != = += return