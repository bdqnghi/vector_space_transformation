org.apache.solr.client.solrj.impl java.io.IOException import java.io.InputStream import java.io.OutputStream import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.LinkedList import java.util.Locale import java.util.Queue import java.util.Set import java.util.concurrent.BlockingQueue import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutorService import java.util.concurrent.LinkedBlockingQueue import java.util.concurrent.TimeUnit import org.apache.http.HttpResponse import org.apache.http.HttpStatus import org.apache.http.NameValuePair import org.apache.http.client.HttpClient import org.apache.http.client.methods.HttpPost import org.apache.http.entity.ContentProducer import org.apache.http.entity.EntityTemplate import org.apache.solr.client.solrj.ResponseParser import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrRequest import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.request.RequestWriter import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.util.ClientUtils import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.params.UpdateParams import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.common.util.IOUtils import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SolrjNamedThreadFactory import org.apache.solr.common.util.Utils import org.slf4j.Logger import org.slf4j.LoggerFactory import org.slf4j.MDC import class org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient super super extends Logger Integer CountDownLatch boolean int decl BlockingQueue HttpSolrClient int decl Queue ExecutorService boolean Integer long boolean public < public < return public public < public public call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() for try catch if instanceof throw finally synchronized if call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() == && ! call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() && ! call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() else call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() call decl Queue.remove() if call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.notifyAll() call decl Queue.notifyAll() call decl Queue.notifyAll() call decl Queue.notifyAll() call decl Queue.notifyAll() break call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl config decl Builder decl RequestConfig ModifiableSolrParams decl org String UpdateRequest boolean decl byte SolrParams EntityTemplate decl http decl client HttpPost ModifiableSolrParams String Update HttpResponse InputStream String SolrParams int Update decl apache throws while ! call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() call decl BlockingQueue.isEmpty() decl_stmt HttpPost = decl_stmt HttpResponse = decl_stmt java.io.InputStream = try decl_stmt Update final final = call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() if == break decl_stmt java.lang.String = call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() decl_stmt boolean final final = decl_stmt org.apache.solr.common.params.ModifiableSolrParams final final = new call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() decl_stmt EntityTemplate = new new public public throws try if decl_stmt Update = while != decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() decl_stmt org.apache.solr.common.params.SolrParams = new call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() if ! call ModifiableSolrParams.toNamedList() call ModifiableSolrParams.toNamedList() call ModifiableSolrParams.toNamedList() call ModifiableSolrParams.toNamedList() call ModifiableSolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() break call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() if decl_stmt org.apache.solr.common.params.SolrParams = call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() if != decl_stmt java.lang.String = if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = else if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = if != decl_stmt byte = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) + if > && == && call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() = call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() else = call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() if catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() decl_stmt java.lang.String = call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() if call Update.getCollection() call Update.getCollection() call Update.getCollection() call Update.getCollection() call Update.getCollection() != += + call Update.getCollection() call Update.getCollection() call Update.getCollection() call Update.getCollection() call Update.getCollection() = new + + call ModifiableSolrParams.toQueryString() call ModifiableSolrParams.toQueryString() call ModifiableSolrParams.toQueryString() call ModifiableSolrParams.toQueryString() call ModifiableSolrParams.toQueryString() decl_stmt org.apache.lucene.util.fst.Builder = if != call decl org.setSocketTimeout() call decl org.setSocketTimeout() call decl org.setSocketTimeout() call decl org.setSocketTimeout() call decl org.setSocketTimeout() if != call decl org.setConnectTimeout() call decl org.setConnectTimeout() call decl org.setConnectTimeout() call decl org.setConnectTimeout() call decl org.setConnectTimeout() call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() call decl org.build() call decl org.build() call decl org.build() call decl org.build() call decl org.build() call HttpPost.setEntity() call HttpPost.setEntity() call HttpPost.setEntity() call HttpPost.setEntity() call HttpPost.setEntity() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() = call org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient() call org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient() call org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient() call org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient() call org.apache.solr.client.solrj.impl.HttpSolrClient.getHttpClient() = call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() decl_stmt int = call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() if != decl_stmt java.lang.StringBuilder = new call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call HttpResponse.getStatusLine() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call decl http.append() call HttpPost.getURI() call HttpPost.getURI() call HttpPost.getURI() call HttpPost.getURI() call HttpPost.getURI() decl_stmt org.apache.solr.common.SolrException = new call decl http.toString() call decl http.toString() call decl http.toString() call decl http.toString() call decl http.toString() try decl_stmt java.lang.String = if call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() > decl_stmt NameValuePair = call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() if != = call decl RequestConfig.getValue() call decl RequestConfig.getValue() call decl RequestConfig.getValue() call decl RequestConfig.getValue() call decl RequestConfig.getValue() decl_stmt org.apache.solr.common.util.NamedList < = call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() call HttpSolrClient.parser() decl_stmt org.apache.solr.common.util.NamedList < = < call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() call decl Builder.get() if != call decl client.setMetadata() call decl client.setMetadata() call decl client.setMetadata() call decl client.setMetadata() call decl client.setMetadata() < call int.get() call int.get() call int.get() call int.get() call int.get() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() + + else finally try if != call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() call HttpResponse.getEntity() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() Update UpdateRequest SolrParams decl byte SolrParams String public public throws try if decl_stmt Update = while != decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() call Update.getRequest() decl_stmt org.apache.solr.common.params.SolrParams = new call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() if ! call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call org.apache.solr.common.params.SolrParams.toNamedList() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() call decl BlockingQueue.add() break call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() call HttpSolrClient.requestWriter() if decl_stmt org.apache.solr.common.params.SolrParams = call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() if != decl_stmt java.lang.String = if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = else if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = if != decl_stmt byte = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) + if > && == && call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() call org.apache.solr.client.solrj.request.UpdateRequest.isLastDocInBatch() = call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() else = call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() call decl BlockingQueue.poll() if catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() Runner private private call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() call HttpSolrClient.getBaseURL() try decl_stmt Runner = new call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call decl Queue.add() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() finally public public return public public = public public return public public = decl NamedList CountDownLatch boolean UpdateRequest Update SolrParams public < public < final final throws if ! instanceof return call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = if if call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() == || call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() && call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() == || call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteById() && call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() == || call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteByIdMap() if call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery() call org.apache.solr.client.solrj.request.UpdateRequest.getDeleteQuery() == return call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) else if call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() == || call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() call org.apache.solr.client.solrj.request.UpdateRequest.getDocuments() return call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) decl_stmt org.apache.solr.common.params.SolrParams = call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() call UpdateRequest.getParams() if != if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.request(SolrRequest,ResponseParser) try decl_stmt java.util.concurrent.CountDownLatch = if != call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) decl_stmt Update = new decl_stmt boolean = call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() for synchronized if call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() || call decl BlockingQueue.remainingCapacity() call decl BlockingQueue.remainingCapacity() call decl BlockingQueue.remainingCapacity() call decl BlockingQueue.remainingCapacity() call decl BlockingQueue.remainingCapacity() < call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() && call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() call decl Queue.size() < else if break if ! = call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() call decl BlockingQueue.offer() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return int public synchronized public synchronized = new try synchronized while ! call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() try call decl Queue.wait() call decl Queue.wait() call decl Queue.wait() call decl Queue.wait() call decl Queue.wait() catch if call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() call java.util.concurrent.ExecutorService.isShutdown() break decl_stmt int = call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() call decl BlockingQueue.size() if > && call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call decl Queue.isEmpty() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + finally call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() = public public call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() public public public public if if call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() call java.util.concurrent.ExecutorService.shutdown() try if ! call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() if ! call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() catch call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() public public = public public = public public if if call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() try if ! call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call java.util.concurrent.ExecutorService.awaitTermination(long,TimeUnit) call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() catch call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() call java.util.concurrent.ExecutorService.shutdownNow() public public call org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(ResponseParser) call org.apache.solr.client.solrj.impl.HttpSolrClient.setParser(ResponseParser) public public = public public call org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(RequestWriter) call org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(RequestWriter) call org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(RequestWriter) call org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(RequestWriter) call org.apache.solr.client.solrj.impl.HttpSolrClient.setRequestWriter(RequestWriter) public public = return public public if <= throw new = return public public if <= throw new = return public public = return public public = return public public = return public public if == throw new return new