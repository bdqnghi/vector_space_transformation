org.apache.solr.search java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.List import java.util.Map import java.util.Random import org.apache.lucene.analysis.core.SimpleAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.StringField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.Collector import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.FilterCollector import org.apache.lucene.search.FilterLeafCollector import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.LeafCollector import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.SortField.Type import org.apache.lucene.search.TopDocs import org.apache.lucene.search.TopFieldCollector import org.apache.lucene.store.Directory import org.apache.lucene.store.RAMDirectory import org.apache.lucene.uninverting.UninvertingReader import org.apache.lucene.util.BitDocIdSet import org.apache.lucene.util.Bits import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.TestUtil import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.SchemaField import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.search.TestSort super super extends int Logger int int int Random int public static public static throws public public throws = public public return + + + + + + decl boolean int decl List SolrQueryRequest decl String StringBuilder decl SortField Type SortSpec int public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt int final final = decl_stmt int final final = for = < ++ decl_stmt java.lang.StringBuilder final final = new decl_stmt java.lang.String final final final = new decl_stmt boolean final final final = new for = < ++ = for = < && == ++ = = = = = = if == = + + + + = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) : call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call java.lang.StringBuilder.deleteCharAt(int) call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() - decl_stmt org.apache.lucene.search.SortField = decl_stmt java.util.List < = try decl_stmt org.apache.solr.search.SortSpec = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() = call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() = call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() catch throw new + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ + + + decl_stmt sun.tools.java.Type final final = if + + + else if + + + else if || + + + call Type.toString() call Type.toString() call Type.toString() call Type.toString() call Type.toString() + + + + else + + + call Type.toString() call Type.toString() call Type.toString() call Type.toString() call Type.toString() + + + + + call Type.toString() call Type.toString() call Type.toString() call Type.toString() call Type.toString() + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Collector Field Filter TopDocs IndexWriter int boolean int boolean boolean int int decl List int decl List boolean String int DirectoryReader MyDoc Document boolean Sort decl MyDoc String boolean TopFieldCollector boolean decl Map String String boolean boolean boolean IndexSearcher boolean Field boolean decl ScoreDoc Directory int public public throws decl_stmt org.apache.lucene.store.Directory = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new for = < ++ decl_stmt org.apache.lucene.index.IndexWriter = new new new decl_stmt MyDoc final final final = new decl_stmt int = decl_stmt int = decl_stmt int = for = < ++ decl_stmt MyDoc = new = = decl_stmt org.apache.lucene.document.Document = new if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) < = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if -- <= = call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt org.apache.lucene.search.IndexSearcher = new call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() > for = < ++ decl_stmt org.apache.solr.search.Filter = new public public return public public return decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) >> + + decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean final final = ! && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean final final = ! && ! decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt java.util.List < = new <> decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean final final = ! && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean final final = ! && ! decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.apache.lucene.search.Sort = new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.lang.String final final = || && ! || && : decl_stmt java.lang.String final final = || && ! || && : decl_stmt boolean = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt boolean = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt org.apache.lucene.search.TopFieldCollector final final = decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.search.Collector = new public public throws decl_stmt int final final = return new public public throws call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() + call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.lang.String = == : decl_stmt java.lang.String = == : decl_stmt int = call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) if = - if != return if = == : = == : = call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) call java.lang.String.compareTo(String) if = - = == - : return decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.TopFieldCollector.topDocs() call org.apache.lucene.search.TopFieldCollector.topDocs() call org.apache.lucene.search.TopFieldCollector.topDocs() call org.apache.lucene.search.TopFieldCollector.topDocs() call org.apache.lucene.search.TopFieldCollector.topDocs() decl_stmt org.apache.lucene.search.ScoreDoc = for = < ++ decl_stmt int = if != call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + + + + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public return public public return int public public throws decl_stmt int final final = return new public public throws + public public throws + FixedBitSet int public public decl_stmt org.apache.lucene.util.FixedBitSet = new decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) for = < ++ call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) return new