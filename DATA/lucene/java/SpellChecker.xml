org.apache.lucene.search.spell java.io.IOException import java.util.ArrayList import java.util.Comparator import java.util.List import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.StringField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TermQuery import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefIterator import class org.apache.lucene.search.spell.SpellChecker super super implements IndexSearcher float decl Comparator float Object String Directory float boolean Object StringDistance float IndexWriter public public throws synchronized if ! decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() public public < = public < public < return public public = public public return public public = public public return public public throws return public public throws return public public throws return int decl ScoreDoc decl Builder int SuggestWord String SuggestWordQueue int IndexSearcher decl String decl BooleanQuery int int public public throws decl_stmt org.apache.lucene.search.IndexSearcher final final = try if == || == = if == = = decl_stmt int final final = decl_stmt int final final = != && != new : decl_stmt int final final = == : if == && > return new decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt java.lang.String decl_stmt java.lang.String for = <= ++ = + = if == continue if > + if > + - for = < ++ decl_stmt int = * decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.search.spell.SuggestWordQueue = new decl_stmt int = decl_stmt SuggestWord = new for = < ++ = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) if call int.string() call int.string() call int.string() call int.string() call int.string() call int.string() call int.string() call int.string() call int.string() continue = call StringDistance.getDistance() call StringDistance.getDistance() call StringDistance.getDistance() call StringDistance.getDistance() call StringDistance.getDistance() if < continue if != && != = new if == && > || < continue call decl ScoreDoc.insertWithOverflow() call decl ScoreDoc.insertWithOverflow() call decl ScoreDoc.insertWithOverflow() call decl ScoreDoc.insertWithOverflow() call decl ScoreDoc.insertWithOverflow() if call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() == = call decl ScoreDoc.top() call decl ScoreDoc.top() call decl ScoreDoc.top() call decl ScoreDoc.top() call decl ScoreDoc.top() = new decl_stmt java.lang.String = new call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() for = call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() call decl ScoreDoc.size() - >= -- = call decl ScoreDoc.pop() call decl ScoreDoc.pop() call decl ScoreDoc.pop() call decl ScoreDoc.pop() call decl ScoreDoc.pop() return finally Query private static private static decl_stmt org.apache.lucene.search.Query = new new new new private static private static new new new decl String int private static private static decl_stmt int = decl_stmt java.lang.String = new - + for = < - + ++ = + return IndexWriter Directory public public throws synchronized decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.IndexWriter final final = new new call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() IndexSearcher public public throws decl_stmt org.apache.lucene.search.IndexSearcher final final = try return call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() new > finally Terms Document IndexWriter BytesRefIterator IndexSearcher decl List boolean int BytesRef IndexReader String Directory public final public final throws synchronized decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.IndexWriter final final = new decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() if call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() > for final final : call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() decl_stmt org.apache.lucene.index.Terms = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt boolean = call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() try decl_stmt org.apache.lucene.util.BytesRefIterator = decl_stmt org.apache.lucene.util.BytesRef while = call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() != decl_stmt java.lang.String = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if < continue if ! for : if continue continue decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) finally if call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() private static private static if > return if == return return private static private static if > return if == return return Document Field private static private static decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) return FieldType Field int String String String Field Field private static private static decl_stmt int = for = <= ++ decl_stmt java.lang.String = + decl_stmt java.lang.String = for = < - + ++ decl_stmt java.lang.String = + decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.solr.handler.dataimport.config.Field = new if == decl_stmt org.apache.solr.handler.dataimport.config.Field = new + = if != decl_stmt org.apache.solr.handler.dataimport.config.Field = new + private private synchronized call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() return private private final final throws private private if throw new public public throws synchronized = if != call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = IndexSearcher private private final final throws decl_stmt org.apache.lucene.search.IndexSearcher final final = synchronized if call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() throw new if != call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = = final final throws return new return