org.apache.lucene.analysis java.io.BufferedReader import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.junit.Assert import class org.apache.lucene.analysis.VocabularyAssert String BufferedReader String BufferedReader public static public static throws decl_stmt java.io.BufferedReader = new new decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String = while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != decl_stmt java.lang.String = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) String String BufferedReader public static public static throws decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String = while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() == continue decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) Path public static public static throws decl_stmt java.nio.file.Path = try = try = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) Path public static public static throws decl_stmt java.nio.file.Path = try = try = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path)