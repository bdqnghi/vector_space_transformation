org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.Map.Entry import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.IOUtils import class org.apache.lucene.index.PersistentSnapshotDeletionPolicy super super extends int String String long int Directory IndexCommit boolean public synchronized public synchronized throws decl_stmt org.apache.lucene.index.IndexCommit = decl_stmt boolean = try = finally if ! try catch return boolean public synchronized public synchronized throws decl_stmt boolean = try = finally if ! try catch public synchronized public synchronized throws IndexOutput String boolean String synchronized private synchronized private throws decl_stmt java.lang.String = + decl_stmt org.apache.lucene.store.IndexOutput = call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() call Directory.createOutput() decl_stmt boolean = try call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() for < : call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() = finally if ! else call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() call Directory.sync() if > decl_stmt java.lang.String = + - ++ private synchronized private synchronized throws for : call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() if call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() call Directory.deleteFile() public public if == return else return + - int long int decl Map String IndexInput long IOException decl List long private synchronized private synchronized throws decl_stmt long = - decl_stmt IOException = decl_stmt java.util.List < = new <> for : call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() call Directory.listAll() if decl_stmt long = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if == - || > call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Map < = new <> decl_stmt org.apache.lucene.store.IndexInput = call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() call Directory.openInput() try decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() for = < ++ decl_stmt long = call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch if == = finally call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() = if == - if != throw else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > decl_stmt java.lang.String = + for : if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = +