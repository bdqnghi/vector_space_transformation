org.apache.solr.core java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.util.Locale import org.apache.commons.io.FileUtils import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.store.IOContext import org.apache.lucene.store.LockFactory import org.apache.lucene.store.NRTCachingDirectory import org.apache.lucene.store.NativeFSLockFactory import org.apache.lucene.store.NoLockFactory import org.apache.lucene.store.SimpleFSLockFactory import org.apache.lucene.store.SingleInstanceLockFactory import org.apache.solr.common.SolrException import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.core.StandardDirectoryFactory super super extends Logger protected protected throws return new String protected protected throws if == = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + decl_stmt java.lang.String final final = switch case return case return case return new case return default: throw new + String public public throws decl_stmt java.lang.String = new return File public public throws decl_stmt File = new return call File.canRead() call File.canRead() call File.canRead() call File.canRead() call File.canRead() && call File.list() call File.list() call File.list() call File.list() call File.list() > public public return public public return new File protected protected throws decl_stmt File = new File File boolean Directory File Directory File public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.store.Directory = if instanceof && instanceof decl_stmt File = decl_stmt File = decl_stmt File = new decl_stmt File = new decl_stmt boolean = call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() if return Directory private private decl_stmt org.apache.lucene.store.Directory if instanceof = else = return