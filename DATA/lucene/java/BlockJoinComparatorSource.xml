org.apache.lucene.search java.io.IOException import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.SortingMergePolicy import org.apache.lucene.util.BitSet import class org.apache.lucene.search.BlockJoinComparatorSource super super extends Sort Query Sort IndexSearcher decl LeafFieldComparator decl LeafFieldComparator Weight int int BitSet decl FieldComparator Scorer int int public < public < throws decl_stmt int final final = new decl_stmt int final final = new decl_stmt org.apache.lucene.search.SortField = call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() decl_stmt int final final = new decl_stmt org.apache.lucene.search.FieldComparator final final final < = new for = < ++ = - : = decl_stmt org.apache.lucene.search.SortField = call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() call org.apache.lucene.search.Sort.getSort() decl_stmt int final final = new decl_stmt org.apache.lucene.search.FieldComparator final final final < = new for = < ++ = - : = return new < decl_stmt int decl_stmt int decl_stmt org.apache.lucene.util.BitSet decl_stmt org.apache.lucene.search.LeafFieldComparator decl_stmt org.apache.lucene.search.LeafFieldComparator public public try return catch throw new public public throw new public public throws if != throw new decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) decl_stmt org.apache.lucene.search.Weight final final = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) decl_stmt org.apache.lucene.search.Scorer final final = call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() if == throw new + + = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() = new for = < ++ = = new for = < ++ = return new public public throws return public public throws throw new public public throws = = public public = = public public for : call int.setScorer() call int.setScorer() call int.setScorer() call int.setScorer() call int.setScorer() for : call int.setScorer() call int.setScorer() call int.setScorer() call int.setScorer() call int.setScorer() public public throw new return call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) call java.util.BitSet.nextSetBit(int) throws if == if == || == return - else return else decl_stmt int = if == return - else return throws for = < ++ decl_stmt int = * if != return return public public try return catch throw new public public throw new IndexSearcher Scorer Weight public public throws if != throw new decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) call org.apache.lucene.search.IndexSearcher.setQueryCache(QueryCache) decl_stmt org.apache.lucene.search.Weight final final = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) decl_stmt org.apache.lucene.search.Scorer final final = call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() if == throw new + + = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() = new for = < ++ = = new for = < ++ = return new public public throws return public public throws throw new public public throws = = public public = = public public for : for : public public throws return public public throws throw new public public throws = = public public = = public public for : for : public public throw new return int throws if == if == || == return - else return else decl_stmt int = if == return - else return int throws for = < ++ decl_stmt int = * if != return return public public return + + + +