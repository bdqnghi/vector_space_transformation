org.apache.lucene.index java.io.IOException import org.apache.lucene.analysis.* import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.TestDocumentWriter super super extends Directory public public throws = public public throws call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public != SegmentCommitInfo Document IndexWriter SegmentReader decl IndexableField Document public public throws decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt org.apache.lucene.index.SegmentCommitInfo = call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.SegmentReader = new != decl_stmt org.apache.lucene.document.Document = call SegmentReader.document() call SegmentReader.document() call SegmentReader.document() call SegmentReader.document() call SegmentReader.document() != decl_stmt org.apache.lucene.index.IndexableField = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() != && == = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() != && == = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() != && == = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() != && == = call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() call org.apache.lucene.document.Document.getFields() != && == for : call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() call org.apache.lucene.index.SegmentReader.getFieldInfos() if != == call SegmentReader.getNormValues() call SegmentReader.getNormValues() call SegmentReader.getNormValues() call SegmentReader.getNormValues() call SegmentReader.getNormValues() == call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() SegmentCommitInfo PostingsEnum Document IndexWriter Analyzer SegmentReader int public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public return new new public public return decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt org.apache.lucene.index.SegmentCommitInfo = call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.SegmentReader = new decl_stmt org.apache.lucene.index.PostingsEnum = new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != decl_stmt int = call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() public public return new new public public return Document PositionIncrementAttribute decl State Tokenizer IndexWriter PayloadAttribute Analyzer decl AttributeSource SegmentReader boolean CharTermAttribute SegmentCommitInfo PostingsEnum boolean public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new decl_stmt boolean = decl_stmt sun.security.provider.certpath.State public public throws if != call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() = return decl_stmt boolean = if ! return if call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() - if call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() new new = = return public public throws = = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute final final = decl_stmt org.apache.lucene.index.IndexWriter = new decl_stmt org.apache.lucene.document.Document = new call IndexWriter.add() call IndexWriter.add() call IndexWriter.add() call IndexWriter.add() call IndexWriter.add() call PositionIncrementAttribute.addDocument() call PositionIncrementAttribute.addDocument() call PositionIncrementAttribute.addDocument() call PositionIncrementAttribute.addDocument() call PositionIncrementAttribute.addDocument() call PositionIncrementAttribute.commit() call PositionIncrementAttribute.commit() call PositionIncrementAttribute.commit() call PositionIncrementAttribute.commit() call PositionIncrementAttribute.commit() decl_stmt org.apache.lucene.index.SegmentCommitInfo = call PositionIncrementAttribute.newestSegment() call PositionIncrementAttribute.newestSegment() call PositionIncrementAttribute.newestSegment() call PositionIncrementAttribute.newestSegment() call PositionIncrementAttribute.newestSegment() call PositionIncrementAttribute.close() call PositionIncrementAttribute.close() call PositionIncrementAttribute.close() call PositionIncrementAttribute.close() call PositionIncrementAttribute.close() decl_stmt org.apache.lucene.index.SegmentReader = new decl_stmt org.apache.lucene.index.PostingsEnum = new call SegmentReader.nextDoc() call SegmentReader.nextDoc() call SegmentReader.nextDoc() call SegmentReader.nextDoc() call SegmentReader.nextDoc() != decl_stmt int = call SegmentReader.freq() call SegmentReader.freq() call SegmentReader.freq() call SegmentReader.freq() call SegmentReader.freq() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.nextPosition() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentReader.getPayload() call SegmentCommitInfo.close() call SegmentCommitInfo.close() call SegmentCommitInfo.close() call SegmentCommitInfo.close() call SegmentCommitInfo.close() decl State Tokenizer PayloadAttribute decl AttributeSource boolean CharTermAttribute boolean public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new decl_stmt boolean = decl_stmt sun.security.provider.certpath.State public public throws if != call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() call boolean.setEmpty() = return decl_stmt boolean = if ! return if call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call PayloadAttribute.setPositionIncrement() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() call boolean.buffer() - if call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() call CharTermAttribute.setPayload() new new = = return public public throws = = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute final final = boolean public public throws if != = return decl_stmt boolean = if ! return if - if new new = = return public public throws = = SegmentCommitInfo int PostingsEnum Document IndexWriter decl String CharTermAttribute SegmentReader public public throws decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new decl_stmt java.lang.String private = new decl_stmt int private = decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute private = public public if == return else call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setEmpty() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setEmpty() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setEmpty() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setEmpty() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.setEmpty() ++ return call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl_stmt org.apache.lucene.index.SegmentCommitInfo = call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.newestSegment() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.SegmentReader = new decl_stmt org.apache.lucene.index.PostingsEnum = call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() = call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() = call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() call SegmentReader.postings() new call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() call SegmentReader.close() public public if == return else ++ return IndexWriter Field Document FieldType LeafReader FieldInfos FieldType FieldType public public throws decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.FieldInfos = call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call LeafReader.getFieldInfos() call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call org.apache.lucene.index.FieldInfos.fieldInfo(int) call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close()