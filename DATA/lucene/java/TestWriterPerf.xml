org.apache.solr.request java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.OutputStreamWriter import java.io.Writer import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.ArrayList import org.apache.solr.client.solrj.ResponseParser import org.apache.solr.client.solrj.impl.BinaryResponseParser import org.apache.solr.client.solrj.impl.XMLResponseParser import org.apache.solr.response.BinaryQueryResponseWriter import org.apache.solr.response.QueryResponseWriter import org.apache.solr.response.SolrQueryResponse import org.apache.solr.util.AbstractSolrTestCase import org.apache.solr.util.RTimer import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.request.TestWriterPerf super super extends String String String Logger String public static public static throws public public return public public throws public public throws decl ArrayList decl_stmt java.util.ArrayList < = new <> for : call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() - - SolrQueryResponse public public throws decl_stmt org.apache.solr.response.SolrQueryResponse = new if call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() != throw call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() return decl byte BinaryQueryResponseWriter ResponseParser Writer RTimer double double QueryResponseWriter ByteArrayInputStream SolrQueryResponse ByteArrayOutputStream throws decl_stmt org.apache.solr.response.SolrQueryResponse = decl_stmt org.apache.solr.response.QueryResponseWriter = decl_stmt java.io.ByteArrayOutputStream = decl_stmt org.apache.solr.util.RTimer = new for = < ++ if instanceof decl_stmt org.apache.solr.response.BinaryQueryResponseWriter = = new call BinaryQueryResponseWriter.write() call BinaryQueryResponseWriter.write() call BinaryQueryResponseWriter.write() call BinaryQueryResponseWriter.write() call BinaryQueryResponseWriter.write() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() else = new decl_stmt Writer = new call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call org.apache.solr.response.QueryResponseWriter.write(Writer,SolrQueryRequest,SolrQueryResponse) call Writer.close() call Writer.close() call Writer.close() call Writer.close() call Writer.close() decl_stmt double = call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() = new = for = < ++ decl_stmt org.apache.solr.client.solrj.ResponseParser = if == = new else if == = new else break decl_stmt ByteArrayInputStream = new call ResponseParser.processResponse() call ResponseParser.processResponse() call ResponseParser.processResponse() call ResponseParser.processResponse() call ResponseParser.processResponse() decl_stmt double = call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + call java.io.ByteArrayOutputStream.size() call java.io.ByteArrayOutputStream.size() call java.io.ByteArrayOutputStream.size() call java.io.ByteArrayOutputStream.size() call java.io.ByteArrayOutputStream.size() + + * / + + * / SolrQueryRequest int int public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt int = decl_stmt int =