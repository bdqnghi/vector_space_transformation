org.apache.lucene.codecs.asserting java.io.IOException import java.util.Arrays import java.util.Collection import org.apache.lucene.codecs.PointsFormat import org.apache.lucene.codecs.PointsReader import org.apache.lucene.codecs.PointsWriter import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.MergeState import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.index.PointValues import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.StringHelper import org.apache.lucene.util.TestUtil import class org.apache.lucene.codecs.asserting.AssertingPointsFormat super super extends PointsFormat public public throws return new call org.apache.lucene.codecs.PointsFormat.fieldsWriter(SegmentWriteState) call org.apache.lucene.codecs.PointsFormat.fieldsWriter(SegmentWriteState) call org.apache.lucene.codecs.PointsFormat.fieldsWriter(SegmentWriteState) call org.apache.lucene.codecs.PointsFormat.fieldsWriter(SegmentWriteState) call org.apache.lucene.codecs.PointsFormat.fieldsWriter(SegmentWriteState) public public throws return new call org.apache.lucene.codecs.PointsFormat.fieldsReader(SegmentReadState) call org.apache.lucene.codecs.PointsFormat.fieldsReader(SegmentReadState) call org.apache.lucene.codecs.PointsFormat.fieldsReader(SegmentReadState) call org.apache.lucene.codecs.PointsFormat.fieldsReader(SegmentReadState) call org.apache.lucene.codecs.PointsFormat.fieldsReader(SegmentReadState) public public throws assert == call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() int public public throws assert == for = < ++ assert * * <= : + + + + + new assert * * >= : + + + + + new assert == * if == decl_stmt int = if < else if == assert <= : else assert : call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() call PointsFormat.visit() public public call PointsFormat.grow() call PointsFormat.grow() call PointsFormat.grow() call PointsFormat.grow() call PointsFormat.grow() public public for = < ++ assert * * <= * * = call PointsFormat.compare() call PointsFormat.compare() call PointsFormat.compare() call PointsFormat.compare() call PointsFormat.compare() return public public throws call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() public public throws call org.apache.lucene.codecs.PointsFormat.intersect(String,IntersectVisitor) call org.apache.lucene.codecs.PointsFormat.intersect(String,IntersectVisitor) call org.apache.lucene.codecs.PointsFormat.intersect(String,IntersectVisitor) call org.apache.lucene.codecs.PointsFormat.intersect(String,IntersectVisitor) call org.apache.lucene.codecs.PointsFormat.intersect(String,IntersectVisitor) new call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) long public public decl_stmt long = call org.apache.lucene.codecs.PointsFormat.ramBytesUsed() call org.apache.lucene.codecs.PointsFormat.ramBytesUsed() call org.apache.lucene.codecs.PointsFormat.ramBytesUsed() call org.apache.lucene.codecs.PointsFormat.ramBytesUsed() call org.apache.lucene.codecs.PointsFormat.ramBytesUsed() assert >= return decl Collection public < public < decl_stmt java.util.Collection < = call PointsFormat.getChildResources() call PointsFormat.getChildResources() call PointsFormat.getChildResources() call PointsFormat.getChildResources() call PointsFormat.getChildResources() return public public throws call PointsFormat.checkIntegrity() call PointsFormat.checkIntegrity() call PointsFormat.checkIntegrity() call PointsFormat.checkIntegrity() call PointsFormat.checkIntegrity() public public throws return new call PointsFormat.getMergeInstance() call PointsFormat.getMergeInstance() call PointsFormat.getMergeInstance() call PointsFormat.getMergeInstance() call PointsFormat.getMergeInstance() public public return + + call PointsFormat.toString() call PointsFormat.toString() call PointsFormat.toString() call PointsFormat.toString() call PointsFormat.toString() + public public throws return call org.apache.lucene.codecs.PointsFormat.getMinPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMinPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMinPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMinPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMinPackedValue(String) public public throws return call org.apache.lucene.codecs.PointsFormat.getMaxPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMaxPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMaxPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMaxPackedValue(String) call org.apache.lucene.codecs.PointsFormat.getMaxPackedValue(String) public public throws return call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) call org.apache.lucene.codecs.PointsFormat.getNumDimensions(String) public public throws return call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) call org.apache.lucene.codecs.PointsFormat.getBytesPerDimension(String) public public return call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) public public return call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) private private assert call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) >= assert call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) >= assert call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) <= call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) call org.apache.lucene.codecs.PointsFormat.size(String) assert call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) call org.apache.lucene.codecs.PointsFormat.getDocCount(String) <= public public throws if == throw new + + call PointsFormat.writeField() call PointsFormat.writeField() call PointsFormat.writeField() call PointsFormat.writeField() call PointsFormat.writeField() public public throws call PointsFormat.merge() call PointsFormat.merge() call PointsFormat.merge() call PointsFormat.merge() call PointsFormat.merge() public public throws call PointsFormat.finish() call PointsFormat.finish() call PointsFormat.finish() call PointsFormat.finish() call PointsFormat.finish() public public throws call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close() call org.apache.lucene.codecs.PointsFormat.close()