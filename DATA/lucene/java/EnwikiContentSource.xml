org.apache.lucene.benchmark.byTask.feeds java.io.IOException import java.io.InputStream import java.nio.charset.StandardCharsets import java.nio.file.Path import java.nio.file.Paths import java.util.HashMap import java.util.Locale import java.util.Map import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.benchmark.byTask.utils.StreamUtils import org.apache.lucene.util.IOUtils import org.apache.lucene.util.ThreadInterruptedException import org.xml.sax.Attributes import org.xml.sax.InputSource import org.xml.sax.SAXException import org.xml.sax.XMLReader import org.xml.sax.helpers.DefaultHandler import org.xml.sax.helpers.XMLReaderFactory import class org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource super super extends int decl Map int InputStream decl String Parser int int Path int boolean int decl String throws if == = = new decl_stmt java.lang.String synchronized while == && == && ! && ! try catch throw new if != = = return if != = throw throw new StringBuilder decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public int String decl String public public throws decl_stmt int = switch case if != && || ! decl_stmt java.lang.String = new = = = = synchronized while != && ! try catch throw new = break case = decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = break case = break case = break case if == = break default: InputStream XMLReader public public try decl_stmt XMLReader = call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setErrorHandler() call XMLReader.setErrorHandler() call XMLReader.setErrorHandler() call XMLReader.setErrorHandler() call XMLReader.setErrorHandler() while ! decl_stmt java.io.InputStream final final = if != try call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() new catch synchronized if != else throw synchronized if || ! = new return else if == = catch throw new finally synchronized = int public public decl_stmt int = switch case = = = = break case case case case break default: private private synchronized = if != = Integer private final static private final static decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return == - : call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() public public throws synchronized call Parser.stop() call Parser.stop() call Parser.stop() call Parser.stop() call Parser.stop() if != call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() = decl String public synchronized public synchronized throws decl_stmt java.lang.String = call Parser.next() call Parser.next() call Parser.next() call Parser.next() call Parser.next() return public public throws = protected protected throws return String public public = decl_stmt java.lang.String = if != =