org.apache.lucene.index java.io.IOException import java.util.Collection import java.util.Iterator import java.util.List import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.codecs.FieldsProducer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.StringField import org.apache.lucene.index.CodecReader import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.FieldInfos import org.apache.lucene.index.FilterCodecReader import org.apache.lucene.index.FilteredTermsEnum import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.Directory import org.apache.lucene.store.RAMDirectory import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.TestMultiTermsEnum super super extends IndexWriter decl List Directory decl CodecReader DirectoryReader Directory Document public public throws decl_stmt org.apache.lucene.store.Directory = new decl_stmt org.apache.lucene.index.IndexWriter = new new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.store.Directory = new = new new new decl_stmt java.util.List < = call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.CodecReader = new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ = new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) public public return new Terms public public throws if decl_stmt org.apache.lucene.index.Terms = if != return new new return else return protected protected return new int public public throws return new protected protected decl_stmt int = if < return else if > return else return protected protected if == || < return return int protected protected decl_stmt int = if < return else if > return else return protected protected if == || < return return public public throws return - public public throws return - public public throws return - public public throws return - public public return public public return public public return public public return decl Iterator public < public < decl_stmt java.util.Iterator final final final < = return new < public public return call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() public public throw new public public return call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() public public return public public throw new public public return public public return public public throws return public public throws return protected protected return new public public throws public public return public < public < return public public throws