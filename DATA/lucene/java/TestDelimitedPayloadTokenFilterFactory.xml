org.apache.lucene.analysis.payloads java.io.Reader import java.io.StringReader import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.payloads.PayloadHelper import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.util.BaseTokenStreamFactoryTestCase import class org.apache.lucene.analysis.payloads.TestDelimitedPayloadTokenFilterFactory super super extends PayloadAttribute float decl byte TokenStream Reader public public throws decl_stmt java.io.Reader = new decl_stmt org.apache.lucene.analysis.TokenStream = new = call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() while call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute = call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() decl_stmt byte = call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() decl_stmt float = call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() PayloadAttribute float decl byte TokenStream Reader public public throws decl_stmt java.io.Reader = new decl_stmt org.apache.lucene.analysis.TokenStream = new = call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() call org.apache.lucene.analysis.TokenStream.reset() while call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute = call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() decl_stmt byte = call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() call org.apache.lucene.analysis.tokenattributes.PayloadAttribute.getPayload() decl_stmt float = call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.end() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() call org.apache.lucene.analysis.TokenStream.close() IllegalArgumentException public public throws decl_stmt IllegalArgumentException = call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage() call IllegalArgumentException.getMessage()