org.apache.lucene.uninverting java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Objects import java.util.Random import java.util.Set import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.IntPoint import org.apache.lucene.document.StoredField import org.apache.lucene.document.StringField import org.apache.lucene.index.DocValues import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NumericDocValues import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.ConstantScoreScorer import org.apache.lucene.search.ConstantScoreWeight import org.apache.lucene.search.FieldDoc import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TopFieldDocs import org.apache.lucene.search.Weight import org.apache.lucene.store.Directory import org.apache.lucene.uninverting.UninvertingReader.Type import org.apache.lucene.util.BitSetIterator import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.uninverting.TestFieldCacheSortRandom super super extends public public throws public public throws int Random decl Set int RandomIndexWriter boolean int Sort decl Map BytesRef decl List int decl List BytesRef int boolean boolean TopFieldDocs boolean RandomQuery int Document IndexSearcher IndexReader FieldDoc SortField Directory private private throws decl_stmt java.util.Random = new decl_stmt int final final = decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt java.util.Set final final final < = new <> decl_stmt int final final = if + + + + + decl_stmt int = decl_stmt java.util.List final final final < = new <> while < decl_stmt org.apache.lucene.document.Document final final = new decl_stmt org.apache.lucene.util.BytesRef final final if != decl_stmt java.lang.String final final if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() = else = if ! if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() continue call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if + + + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else = if + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) ++ if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() if + decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt int final final = for = < ++ decl_stmt boolean final final = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() decl_stmt TopFieldDocs final final decl_stmt org.apache.lucene.search.SortField final final decl_stmt boolean final final decl_stmt boolean final final = new = = if call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) call org.apache.lucene.search.SortField.setMissingValue(Object) decl_stmt org.apache.lucene.search.Sort final final if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() = new else = new decl_stmt int final final = call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() + decl_stmt RandomQuery final final = new call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) if == = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() else = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() if + + + + + + + + + + + new < public public if == if == return if return else return - else if == if return - else return else return if decl_stmt java.util.List final final final < = if for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.apache.lucene.util.BytesRef = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if == && == = new + + + == : call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() if == - break if for = < ++ decl_stmt org.apache.lucene.search.FieldDoc final final = decl_stmt org.apache.lucene.util.BytesRef = + + + == : call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + + call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) for = < ++ decl_stmt org.apache.lucene.search.FieldDoc final final = decl_stmt org.apache.lucene.util.BytesRef = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if == && == = new decl_stmt org.apache.lucene.util.BytesRef = if == && == = new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public if == if == return if return else return - else if == if return - else return else return NumericDocValues Random FixedBitSet int public public throws return new public public throws decl_stmt java.util.Random = new ^ decl_stmt int final final = decl_stmt NumericDocValues final final = decl_stmt org.apache.lucene.util.FixedBitSet final final = new for = < ++ if call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() <= call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() return new new call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() NumericDocValues Random FixedBitSet int public public throws decl_stmt java.util.Random = new ^ decl_stmt int final final = decl_stmt NumericDocValues final final = decl_stmt org.apache.lucene.util.FixedBitSet final final = new for = < ++ if call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() call java.util.Random.nextFloat() <= call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() return new new call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() call FixedBitSet.approximateCardinality() public public return + + RandomQuery public public if == return decl_stmt RandomQuery = return == && == int public public decl_stmt int = = * + = * + return