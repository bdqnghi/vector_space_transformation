org.apache.lucene.benchmark.byTask.feeds java.io.Closeable import java.io.IOException import java.io.UnsupportedEncodingException import java.nio.charset.StandardCharsets import java.text.ParsePosition import java.text.SimpleDateFormat import java.util.Calendar import java.util.Date import java.util.HashMap import java.util.Locale import java.util.Map import java.util.Properties import java.util.Random import java.util.TimeZone import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.document.Document import org.apache.lucene.document.DoublePoint import org.apache.lucene.document.Field import org.apache.lucene.document.FloatPoint import org.apache.lucene.document.IntPoint import org.apache.lucene.document.FieldType import org.apache.lucene.document.LongPoint import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import class org.apache.lucene.benchmark.byTask.feeds.DocMaker super super implements String String boolean int String ContentSource decl ThreadLocal String FieldType String decl ThreadLocal boolean Random boolean AtomicInteger String decl ThreadLocal FieldType String Config String Field if ! return new decl_stmt org.apache.solr.handler.dataimport.config.Field = if == = new return Field < extends extends decl_stmt org.apache.solr.handler.dataimport.config.Field if = else = if == if = new else if = new else if = new else if = new else throw new + if return String int int String Field Field Properties Field String String Field FieldType DateUtil Field Date DocState Field String Field Document Field Field private private throws decl_stmt DocState final final = decl_stmt org.apache.lucene.document.Document final final = : new call org.apache.lucene.document.Document.clear() call org.apache.lucene.document.Document.clear() call org.apache.lucene.document.Document.clear() call org.apache.lucene.document.Document.clear() call org.apache.lucene.document.Document.clear() decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() decl_stmt int if != = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) else = if == - = call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call java.util.concurrent.atomic.AtomicInteger.getAndIncrement() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt java.lang.String = if == = = < : + + decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt DateUtil = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() decl_stmt java.util.Date = decl_stmt java.lang.String = if != call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() call DateUtil.pos() = call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() call DateUtil.parser() else = decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if == = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call org.apache.solr.handler.dataimport.config.Field.setLongValue(long) call org.apache.solr.handler.dataimport.config.Field.setLongValue(long) call org.apache.solr.handler.dataimport.config.Field.setLongValue(long) call org.apache.solr.handler.dataimport.config.Field.setLongValue(long) call org.apache.solr.handler.dataimport.config.Field.setLongValue(long) call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() decl_stmt int final final = call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() * + call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() * + call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() call DateUtil.cal() decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call DocState.getNumericField() call org.apache.solr.handler.dataimport.config.Field.setIntValue(int) call org.apache.solr.handler.dataimport.config.Field.setIntValue(int) call org.apache.solr.handler.dataimport.config.Field.setIntValue(int) call org.apache.solr.handler.dataimport.config.Field.setIntValue(int) call org.apache.solr.handler.dataimport.config.Field.setIntValue(int) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt java.lang.String = decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) == : call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) decl_stmt java.lang.String = if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt java.lang.String if <= || >= call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() = else for = - < + && < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) = break = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setBytesValue(byte) call org.apache.solr.handler.dataimport.config.Field.setBytesValue(byte) call org.apache.solr.handler.dataimport.config.Field.setBytesValue(byte) call org.apache.solr.handler.dataimport.config.Field.setBytesValue(byte) call org.apache.solr.handler.dataimport.config.Field.setBytesValue(byte) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) if decl_stmt java.util.Properties = if != for final final final final final final final < : call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() decl_stmt org.apache.solr.handler.dataimport.config.Field = call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call DocState.getField() call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) return private private call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() DocState protected protected decl_stmt DocState = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == = new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() return public public throws call ContentSource.close() call ContentSource.close() call ContentSource.close() call ContentSource.close() call ContentSource.close() Document DocData public public throws decl_stmt org.apache.lucene.benchmark.byTask.feeds.DocData = call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() decl_stmt org.apache.lucene.document.Document = - return int LeftOver DocData DocData DocData Document public public throws decl_stmt LeftOver = call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() call decl ThreadLocal.get() if == || == || call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() == || call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() call LeftOver.docdata() == decl_stmt org.apache.lucene.benchmark.byTask.feeds.DocData = decl_stmt org.apache.lucene.benchmark.byTask.feeds.DocData = == call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() : decl_stmt int = == : while call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() == || call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() < decl_stmt org.apache.lucene.benchmark.byTask.feeds.DocData = = call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() call ContentSource.getNextDocData() new = call org.apache.lucene.benchmark.byTask.feeds.DocData.setBody(String) call org.apache.lucene.benchmark.byTask.feeds.DocData.setBody(String) call org.apache.lucene.benchmark.byTask.feeds.DocData.setBody(String) call org.apache.lucene.benchmark.byTask.feeds.DocData.setBody(String) call org.apache.lucene.benchmark.byTask.feeds.DocData.setBody(String) call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() + call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() decl_stmt org.apache.lucene.document.Document = if call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() == || call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() call org.apache.lucene.benchmark.byTask.feeds.DocData.getBody() == else if == = new call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() call decl ThreadLocal.set() = = ++ return public synchronized public synchronized throws call ContentSource.printStatistics() call ContentSource.printStatistics() call ContentSource.printStatistics() call ContentSource.printStatistics() call ContentSource.printStatistics() call ContentSource.resetInputs() call ContentSource.resetInputs() call ContentSource.resetInputs() call ContentSource.resetInputs() call ContentSource.resetInputs() call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) boolean boolean boolean boolean boolean boolean boolean boolean boolean public public = = decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) decl_stmt boolean = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) ! call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() = new call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setStored(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setTokenized(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) ! call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectors(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorPositions(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.setStoreTermVectorOffsets(boolean) call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() call org.apache.solr.schema.FieldType.freeze() = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) = new <> = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) = call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) call org.apache.solr.core.Config.get(String,String) - if != - = new