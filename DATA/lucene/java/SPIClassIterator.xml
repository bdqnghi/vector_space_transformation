org.apache.lucene.util java.io.IOException import java.io.InputStream import java.io.BufferedReader import java.io.InputStreamReader import java.net.URL import java.nio.charset.StandardCharsets import java.util.ArrayList import java.util.Collections import java.util.Enumeration import java.util.Iterator import java.util.Locale import java.util.NoSuchElementException import java.util.Objects import java.util.ServiceConfigurationError import class super super implements ClassLoader decl Class decl Enumeration decl Iterator String ClassLoader public static < < public static < < < decl_stmt java.lang.ClassLoader = if == = call decl Class.getClassLoader() call decl Class.getClassLoader() call decl Class.getClassLoader() call decl Class.getClassLoader() call decl Class.getClassLoader() return new <> public static < < public static < < < return new <> ClassLoader public static public static final final final final try decl_stmt java.lang.ClassLoader = while != if == return = call java.lang.ClassLoader.getParent() call java.lang.ClassLoader.getParent() call java.lang.ClassLoader.getParent() call java.lang.ClassLoader.getParent() call java.lang.ClassLoader.getParent() return catch return boolean URL InputStream decl ArrayList int BufferedReader String private private decl_stmt java.util.ArrayList < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() if != call decl ArrayList.clear() call decl ArrayList.clear() call decl ArrayList.clear() call decl ArrayList.clear() call decl ArrayList.clear() else = new <> decl_stmt java.net.URL final final = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() try decl_stmt java.io.InputStream final final = call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() call java.net.URL.openStream() decl_stmt boolean = try decl_stmt java.io.BufferedReader final final = new new decl_stmt java.lang.String while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != decl_stmt int final final = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if >= = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() = finally if else catch throw new + if ! call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() call decl ArrayList.isEmpty() = call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() call decl ArrayList.iterator() return return public public return call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() || String public < extends extends public < extends extends if ! throw new assert call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String final final = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() try return catch throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() public public throw new