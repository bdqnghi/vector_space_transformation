org.apache.lucene.index java.io.IOException import java.util.Iterator import java.util.NoSuchElementException import org.apache.lucene.codecs.DocValuesConsumer import org.apache.lucene.util.Counter import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.packed.PackedInts import org.apache.lucene.util.packed.PackedLongValues import class org.apache.lucene.index.NumericDocValuesWriter super super extends decl Builder long Counter long FixedBitSet decl PackedLongValues public public if < call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() throw new + + for = int call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() < ++ call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() = call long.set() call long.set() call long.set() call long.set() call long.set() private private return call long.getBits() call long.getBits() call long.getBits() call long.getBits() call long.getBits() + long private private decl_stmt long final final = call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() + call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() - = public public PackedLongValues int public public throws decl_stmt int final final = decl_stmt org.apache.lucene.util.packed.PackedLongValues final final = call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() new < public < public < return new public < public < return new public public return < Long long public public if ! throw new decl_stmt java.lang.Long if < decl_stmt long = if call long.get() call long.get() call long.get() call long.get() call long.get() = else = else = ++ return public public throw new