org.apache.solr.hadoop java.io.IOException import java.lang.invoke.MethodHandles import java.util.Iterator import org.apache.hadoop.io.Text import org.apache.hadoop.mapreduce.Reducer import org.apache.hadoop.util.ReflectionUtils import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.common.SolrInputDocument import org.apache.solr.hadoop.dedup.NoChangeUpdateConflictResolver import org.apache.solr.hadoop.dedup.RetainMostRecentUpdateConflictResolver import org.apache.solr.hadoop.dedup.UpdateConflictResolver import org.slf4j.Logger import org.slf4j.LoggerFactory import org.kitesdk.morphline.api.ExceptionHandler import org.kitesdk.morphline.base.FaultTolerance import com.google.common.base.Preconditions import class org.apache.solr.hadoop.SolrReducer super super extends Logger String HeartBeater UpdateConflictResolver ExceptionHandler decl Class protected protected throws decl_stmt java.lang.Class < extends extends = = = new = new protected protected < throws call org.apache.solr.hadoop.HeartBeater.needHeartBeat() call org.apache.solr.hadoop.HeartBeater.needHeartBeat() call org.apache.solr.hadoop.HeartBeater.needHeartBeat() call org.apache.solr.hadoop.HeartBeater.needHeartBeat() call org.apache.solr.hadoop.HeartBeater.needHeartBeat() try = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + call ExceptionHandler.handleException() call ExceptionHandler.handleException() call ExceptionHandler.handleException() call ExceptionHandler.handleException() call ExceptionHandler.handleException() finally call org.apache.solr.hadoop.HeartBeater.cancelHeartBeat() call org.apache.solr.hadoop.HeartBeater.cancelHeartBeat() call org.apache.solr.hadoop.HeartBeater.cancelHeartBeat() call org.apache.solr.hadoop.HeartBeater.cancelHeartBeat() call org.apache.solr.hadoop.HeartBeater.cancelHeartBeat() private < private < final final final final final < final final if instanceof return return new < public < public < return new call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() new public < public < return new call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() call UpdateConflictResolver.orderUpdates() new protected protected throws call org.apache.solr.hadoop.HeartBeater.close() call org.apache.solr.hadoop.HeartBeater.close() call org.apache.solr.hadoop.HeartBeater.close() call org.apache.solr.hadoop.HeartBeater.close() call org.apache.solr.hadoop.HeartBeater.close() int int String private private if decl_stmt java.lang.String = if == = decl_stmt int = decl_stmt int = == + + + public public return public public return new public public throw new public public return public public return public public throw new