org.apache.solr.search org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.Query import java.util.Collection import class org.apache.solr.search.QueryUtils decl Collection BooleanQuery public static public static if ! instanceof return decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt java.util.Collection < = call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() if call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() == return for : if ! return return Query Query BooleanQuery Query decl Collection decl BooleanQuery public static public static if instanceof decl_stmt org.apache.lucene.search.BoostQuery = decl_stmt org.apache.lucene.search.Query = call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() decl_stmt org.apache.lucene.search.Query = if == return return new call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() if instanceof decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.Query = if == return return new if ! instanceof return decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt java.util.Collection < = call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() if call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() == return for : if ! return if call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() == decl_stmt org.apache.lucene.search.Query = call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() call decl Collection.iterator() return else decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public static public static if instanceof return return : decl Builder decl BooleanQuery float BooleanQuery public static public static decl_stmt float = if instanceof decl_stmt org.apache.lucene.search.BoostQuery = = call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() call BooleanQuery.getBoost() = call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() call BooleanQuery.getQuery() decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new decl_stmt org.apache.lucene.search.BooleanQuery = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() return new