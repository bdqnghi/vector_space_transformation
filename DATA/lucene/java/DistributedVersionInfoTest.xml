org.apache.solr.cloud java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collections import java.util.HashSet import java.util.List import java.util.Random import java.util.Set import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.JSONTestUtil import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.CoreAdminRequest import org.apache.solr.client.solrj.request.QueryRequest import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.client.solrj.response.CoreAdminResponse import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.params.CollectionParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.update.processor.DistributedUpdateProcessor import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import static static org.apache.solr.update.processor.DistributedUpdateProcessor.DISTRIB_FROM import class annotation annotation org.apache.solr.cloud.DistributedVersionInfoTest super super extends Logger int public public throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) Random decl CollectionAdminRequest int decl Set Thread SolrInputDocument String Long Long Thread String int Replica ModifiableSolrParams AtomicInteger Thread Thread decl List Long Replica int protected protected throws decl_stmt java.lang.String final final = decl_stmt java.lang.String = decl_stmt int = decl_stmt org.apache.solr.common.cloud.Replica final final = decl_stmt java.util.List < = = decl_stmt org.apache.solr.common.cloud.Replica = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.Long = decl_stmt java.lang.Long = + try = call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() decl_stmt java.lang.String = decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) call org.apache.solr.common.SolrInputDocument.setField(String,Object,float) - decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() call org.apache.solr.common.cloud.Replica.getCoreUrl() decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call decl CollectionAdminRequest.setParams() call decl CollectionAdminRequest.setParams() call decl CollectionAdminRequest.setParams() call decl CollectionAdminRequest.setParams() call decl CollectionAdminRequest.setParams() call decl CollectionAdminRequest.add() call decl CollectionAdminRequest.add() call decl CollectionAdminRequest.add() call decl CollectionAdminRequest.add() call decl CollectionAdminRequest.add() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + - + decl_stmt java.lang.Long = = = decl_stmt java.util.Set final final final < = new <> decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt java.util.Random final final = new decl_stmt java.lang.Thread = new public public try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch for = < ++ if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + == try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch decl_stmt int = + try call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() catch decl_stmt java.lang.Thread = new public public try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch for = < ++ try catch try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch decl_stmt java.lang.Thread = new public public try catch for = < ++ try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() + if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.lang.Thread = new public public try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch for = < ++ try catch try call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + catch call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + = = = = try decl_stmt Delete = new call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() int public public try + catch for = < ++ if + == try + catch decl_stmt int = + try catch public public try + catch for = < ++ try catch try + catch int public public try catch for = < ++ try + catch decl_stmt int = + if ! public public try + catch for = < ++ try catch try + catch protected protected throws return String Long QueryResponse SolrDocumentList SolrQuery protected protected throws decl_stmt java.lang.Long = decl_stmt java.lang.String = != + : decl_stmt org.apache.solr.client.solrj.SolrQuery = new call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setRows(Integer) call org.apache.solr.client.solrj.SolrQuery.setFields(String) call org.apache.solr.client.solrj.SolrQuery.setFields(String) call org.apache.solr.client.solrj.SolrQuery.setFields(String) call org.apache.solr.client.solrj.SolrQuery.setFields(String) call org.apache.solr.client.solrj.SolrQuery.setFields(String) call org.apache.solr.client.solrj.SolrQuery.addSort(String,ORDER) call org.apache.solr.client.solrj.SolrQuery.addSort(String,ORDER) call org.apache.solr.client.solrj.SolrQuery.addSort(String,ORDER) call org.apache.solr.client.solrj.SolrQuery.addSort(String,ORDER) call org.apache.solr.client.solrj.SolrQuery.addSort(String,ORDER) new call org.apache.solr.client.solrj.SolrQuery.setParam(String,boolean) call org.apache.solr.client.solrj.SolrQuery.setParam(String,boolean) call org.apache.solr.client.solrj.SolrQuery.setParam(String,boolean) call org.apache.solr.client.solrj.SolrQuery.setParam(String,boolean) call org.apache.solr.client.solrj.SolrQuery.setParam(String,boolean) try = decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt org.apache.solr.common.SolrDocumentList = call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() if call SolrDocumentList.isEmpty() call SolrDocumentList.isEmpty() call SolrDocumentList.isEmpty() call SolrDocumentList.isEmpty() call SolrDocumentList.isEmpty() + = call SolrDocumentList.get() call SolrDocumentList.get() call SolrDocumentList.get() call SolrDocumentList.get() call SolrDocumentList.get() if == + + + return call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() call java.lang.Long.longValue() Long decl List String Replica HttpSolrClient protected protected < < throws decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() try for = <= ++ if != && continue decl_stmt java.lang.String = decl_stmt java.lang.Long = for : finally if != call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() call org.apache.solr.client.solrj.impl.HttpSolrClient.close() for : protected protected throws return SolrInputDocument protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = new call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) call org.apache.solr.common.SolrInputDocument.addField(String,Object) + SolrDocument Long QueryRequest NamedList String protected protected throws decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new decl_stmt org.apache.solr.common.util.NamedList = decl_stmt org.apache.solr.common.SolrDocument = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt java.lang.String = new + + + + + + + == decl_stmt java.lang.Long = call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) call org.apache.solr.common.SolrDocument.getFirstValue(String) if != + + + return long boolean QueryRequest String CoreAdminResponse ModifiableSolrParams long ZkCoreNodeProps long protected protected throws decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt boolean = try = call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() decl_stmt org.apache.solr.client.solrj.response.CoreAdminResponse = decl_stmt long = call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.client.solrj.request.QueryRequest = new call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() call QueryRequest.setPath() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt long = + while < = decl_stmt long = call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) call org.apache.solr.client.solrj.response.CoreAdminResponse.getStartTime(String) if > = break return