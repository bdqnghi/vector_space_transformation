org.apache.lucene.search.suggest.analyzing java.io.Closeable import java.io.IOException import java.io.StringReader import java.nio.file.Path import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.AnalyzerWrapper import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.ngram.EdgeNGramTokenFilter import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.document.BinaryDocValuesField import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.document.SortedSetDocValuesField import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.FilterLeafReader import org.apache.lucene.index.IndexOptions import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.MultiDocValues import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.SegmentReader import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.SortingMergePolicy import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Collector import org.apache.lucene.search.EarlyTerminatingSortingCollector import org.apache.lucene.search.FieldDoc import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.SearcherManager import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopFieldCollector import org.apache.lucene.search.TopFieldDocs import org.apache.lucene.search.suggest.InputIterator import org.apache.lucene.search.suggest.Lookup import org.apache.lucene.store.DataInput import org.apache.lucene.store.DataOutput import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.BytesRef import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.search.suggest.analyzing.AnalyzingInfixSuggester super super extends super implements Sort String int int IndexWriter Analyzer String boolean boolean SearcherManager Analyzer boolean boolean String Directory boolean IndexWriterConfig protected protected decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) new call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() call org.apache.lucene.index.IndexWriterConfig.getMergePolicy() return protected protected throws return BytesRef BytesRef boolean public public throws if != call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() = if != call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = decl_stmt boolean = try = new decl_stmt org.apache.lucene.util.BytesRef while = != decl_stmt org.apache.lucene.util.BytesRef if = else = if = new = finally if == && != call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() = public public throws if == throw new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) TokenFilter private private return new protected protected return protected protected if && > decl_stmt org.apache.lucene.analysis.TokenFilter = new return new else return protected protected return TokenFilter protected protected if && > decl_stmt org.apache.lucene.analysis.TokenFilter = new return new else return private synchronized private synchronized throws if == if != call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() = = new = new public public < throws call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) public public < throws call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) call org.apache.lucene.index.IndexWriter.updateDocument(Term,Iterable) new Document FieldType String private private < throws decl_stmt java.lang.String = decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.schema.FieldType = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new if != for : call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new return public public throws if == throw new call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() call SearcherManager.maybeRefreshBlocking() FieldType protected protected decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) call org.apache.solr.schema.FieldType.setOmitNorms(boolean) return public < public < < throws return public < public < throws return public < public < < throws return protected protected throws if < return new new return new new public < public < < throws return decl BooleanQuery private private < if == || return decl_stmt org.apache.lucene.util.fst.Builder = new for < : return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery private private < if == || return decl_stmt org.apache.lucene.util.fst.Builder = new for : return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public public new new SortingMergePolicy boolean OffsetAttribute int decl Builder IndexSearcher Query Collector decl BooleanQuery decl Set String TopFieldCollector decl Occur String Query decl BooleanClause CharTermAttribute public < public < throws if == throw new decl_stmt Occur final final final final final if = else = decl_stmt org.apache.lucene.util.fst.Builder decl_stmt java.util.Set < decl_stmt java.lang.String = try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute final final = decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute final final = decl_stmt java.lang.String = = new decl_stmt int = - = new <> while if != call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() new new = call decl Set.toString() call decl Set.toString() call decl Set.toString() call decl Set.toString() call decl Set.toString() if != = call String.endOffset() call String.endOffset() call String.endOffset() call String.endOffset() call String.endOffset() if != decl_stmt org.apache.lucene.search.Query if == call String.endOffset() call String.endOffset() call String.endOffset() call String.endOffset() call String.endOffset() = = else call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() = new new if != call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() if != decl_stmt boolean = for : if != = break if for : call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() else call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() call decl Occur.add() decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.TopFieldCollector = decl_stmt org.apache.lucene.index.SortingMergePolicy final final = call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() call org.apache.lucene.index.IndexWriter.getConfig() decl_stmt org.apache.lucene.search.Collector = new call Query.getSort() call Query.getSort() call Query.getSort() call Query.getSort() call Query.getSort() decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() decl_stmt java.util.List < = try call SortingMergePolicy.search() call SortingMergePolicy.search() call SortingMergePolicy.search() call SortingMergePolicy.search() call SortingMergePolicy.search() decl_stmt TopFieldDocs = call boolean.topDocs() call boolean.topDocs() call boolean.topDocs() call boolean.topDocs() call boolean.topDocs() = finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() return BytesRef BinaryDocValues decl Set String decl List decl List SortedSetDocValues long FieldDoc LookupResult BytesRef BinaryDocValues long int BytesRef protected < protected < < throws decl_stmt BinaryDocValues = decl_stmt BinaryDocValues = decl_stmt java.util.List < = decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.lucene.search.FieldDoc = decl_stmt org.apache.lucene.util.BytesRef = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() decl_stmt java.lang.String = call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() decl_stmt long = decl_stmt org.apache.lucene.util.BytesRef if != = call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() else = decl_stmt int = decl_stmt org.apache.lucene.index.SortedSetDocValues = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.Set < if != = new < call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() - call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt long while = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != decl_stmt org.apache.lucene.util.BytesRef = call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call SortedSetDocValues.lookupOrd() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else = decl_stmt LookupResult if = new else = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return protected protected return int int String CharTermAttribute int StringBuilder OffsetAttribute protected protected < throws try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) new decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute = decl_stmt java.lang.StringBuilder = new decl_stmt int = while decl_stmt java.lang.String = call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() call CharTermAttribute.toString() decl_stmt int = call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() call OffsetAttribute.startOffset() decl_stmt int = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() if < = else if > continue if = else if != && call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = decl_stmt int = call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.endOffset() if < return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() protected protected protected protected protected protected if >= return public public throws return public public throws return public public throws if != call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() call SearcherManager.close() = if != call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() = long IndexSearcher LeafReader public public decl_stmt long = try if != decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try for : call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.index.LeafReader = if instanceof += finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() return catch throw new IndexSearcher decl List LeafReader public < public < decl_stmt java.util.List < = new <> try if != decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try for : call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.index.LeafReader = if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() return catch throw new IndexSearcher public public throws if == return decl_stmt org.apache.lucene.search.IndexSearcher = call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() call SearcherManager.acquire() try return call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() finally call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release() call SearcherManager.release()