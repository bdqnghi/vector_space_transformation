org.apache.solr.search java.io.IOException import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LSBRadixSorter import org.apache.lucene.util.RamUsageEstimator import class org.apache.solr.search.DocSetBuilder int decl int int int FixedBitSet private private assert == = new for = < ++ call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) = = decl int int private private if < return decl_stmt int = while < = << = decl_stmt int = new = int public public throws int if != else while for = < ++ decl_stmt int final final = if == = return = + = if + >= break + public static public static throws for = != = call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) + int BytesRef PostingsEnum public public throws decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt int = for decl_stmt org.apache.lucene.util.BytesRef = if == break ++ = return long public public if == decl_stmt long final final = + if < int else public public if != call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) else if >= if + >= call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) return + ++ = int int int private static private static decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int final final = if != && == || ++ = = return int LSBRadixSorter public public if != if != call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) return new else decl_stmt org.apache.lucene.util.LSBRadixSorter = new call org.apache.lucene.util.LSBRadixSorter.sort(int,int,int,int,int,int,int) call org.apache.lucene.util.LSBRadixSorter.sort(int,int,int,int,int,int,int) call org.apache.lucene.util.LSBRadixSorter.sort(int,int,int,int,int,int,int) call org.apache.lucene.util.LSBRadixSorter.sort(int,int,int,int,int,int,int) call org.apache.lucene.util.LSBRadixSorter.sort(int,int,int,int,int,int,int) decl_stmt int final final = assert <= return new int public public if != if != call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) call org.apache.lucene.util.FixedBitSet.and(long,int) return new else decl_stmt int = if != = return new