org.apache.lucene.mockfile java.io.FileNotFoundException import java.io.IOException import java.nio.file.CopyOption import java.nio.file.FileSystem import java.nio.file.Files import java.nio.file.NoSuchFileException import java.nio.file.Path import java.nio.file.attribute.BasicFileAttributeView import java.nio.file.attribute.BasicFileAttributes import java.util.HashMap import java.util.Map import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ConcurrentMap import class org.apache.lucene.mockfile.WindowsFS super super extends decl Map BasicFileAttributes BasicFileAttributeView private private throws decl_stmt java.nio.file.attribute.BasicFileAttributeView = decl_stmt java.nio.file.attribute.BasicFileAttributes = call BasicFileAttributeView.readAttributes() call BasicFileAttributeView.readAttributes() call BasicFileAttributeView.readAttributes() call BasicFileAttributeView.readAttributes() call BasicFileAttributeView.readAttributes() return call java.nio.file.attribute.BasicFileAttributes.fileKey() call java.nio.file.attribute.BasicFileAttributes.fileKey() call java.nio.file.attribute.BasicFileAttributes.fileKey() call java.nio.file.attribute.BasicFileAttributes.fileKey() call java.nio.file.attribute.BasicFileAttributes.fileKey() Object Integer protected protected throws synchronized decl_stmt java.lang.Object final final = decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != = call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() Object Integer protected protected throws decl_stmt java.lang.Object = synchronized decl_stmt java.lang.Integer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != if != if call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() == call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() else = call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() - call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() Object private private throws decl_stmt java.lang.Object = try = catch if != synchronized if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() throw new + public public throws synchronized public public throws synchronized public public throws synchronized return