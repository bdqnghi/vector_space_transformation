org.apache.lucene.benchmark.byTask.feeds org.apache.lucene.analysis.Analyzer import org.apache.lucene.queryparser.classic.ParseException import org.apache.lucene.queryparser.classic.QueryParser import org.apache.lucene.search.Query import org.apache.lucene.benchmark.byTask.tasks.NewAnalyzerTask import org.apache.lucene.util.IOUtils import java.io.* import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.nio.file.Paths import java.util.ArrayList import java.util.List import class org.apache.lucene.benchmark.byTask.feeds.FileBasedQueryMaker super super extends super implements decl List QueryParser Analyzer BufferedReader Reader String int Path InputStream String String protected protected throws decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt java.lang.String = decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = new call QueryParser.setAllowLeadingWildcard() call QueryParser.setAllowLeadingWildcard() call QueryParser.setAllowLeadingWildcard() call QueryParser.setAllowLeadingWildcard() call QueryParser.setAllowLeadingWildcard() decl_stmt java.util.List < = new <> decl_stmt java.lang.String = if != decl_stmt java.nio.file.Path = decl_stmt java.io.Reader = if = else decl_stmt java.io.InputStream = if != = if != try decl_stmt java.io.BufferedReader = new decl_stmt java.lang.String = decl_stmt int = while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() != && ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) try call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) catch + + + + + ++ finally call Reader.close() call Reader.close() call Reader.close() call Reader.close() call Reader.close() else + return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size()