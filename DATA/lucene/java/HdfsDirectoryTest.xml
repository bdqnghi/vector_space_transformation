org.apache.solr.store.hdfs java.io.IOException import java.util.HashSet import java.util.Random import java.util.Set import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.Path import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.store.IndexInput import org.apache.lucene.store.IndexOutput import org.apache.lucene.store.NoLockFactory import org.apache.lucene.store.RAMDirectory import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.cloud.hdfs.HdfsTestUtil import org.apache.solr.util.BadHdfsThreadsFilter import org.junit.After import org.junit.AfterClass import org.junit.Before import org.junit.BeforeClass import org.junit.Test import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import class annotation org.apache.solr.store.hdfs.HdfsDirectoryTest super super extends int int int MiniDFSCluster Random int int int HdfsDirectory public static public static throws = public static public static throws = Configuration public public throws decl_stmt Configuration = call Configuration.set() call Configuration.set() call Configuration.set() call Configuration.set() call Configuration.set() = new new + + = public public throws IndexInput IndexOutput IndexInput decl String IndexInput public public throws decl_stmt java.lang.String = call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() for : call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) decl_stmt org.apache.lucene.store.IndexOutput = call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) new call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() decl_stmt org.apache.lucene.store.IndexInput = call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) new call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() = call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) decl_stmt org.apache.lucene.store.IndexInput = call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) new decl_stmt org.apache.lucene.store.IndexInput = call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) IndexOutput decl String IndexInput public public throws decl_stmt java.lang.String = call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() call org.apache.solr.store.hdfs.HdfsDirectory.listAll() for : call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) decl_stmt org.apache.lucene.store.IndexOutput = call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.createOutput(String,IOContext) new call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.writeInt() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call org.apache.solr.store.hdfs.HdfsDirectory.renameFile(String,String) call org.apache.solr.store.hdfs.HdfsDirectory.renameFile(String,String) call org.apache.solr.store.hdfs.HdfsDirectory.renameFile(String,String) call org.apache.solr.store.hdfs.HdfsDirectory.renameFile(String,String) call org.apache.solr.store.hdfs.HdfsDirectory.renameFile(String,String) decl_stmt org.apache.lucene.store.IndexInput = call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) new call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) call org.apache.solr.store.hdfs.HdfsDirectory.deleteFile(String) long Directory String long public public throws decl_stmt org.apache.lucene.store.Directory = new decl_stmt java.lang.String = decl_stmt long = call Directory.fileLength() call Directory.fileLength() call Directory.fileLength() call Directory.fileLength() call Directory.fileLength() decl_stmt long = call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) call org.apache.solr.store.hdfs.HdfsDirectory.fileLength(String) IndexInput private private throws decl_stmt org.apache.lucene.store.IndexInput = call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) call org.apache.solr.store.hdfs.HdfsDirectory.openInput(String,IOContext) new call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() try call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) catch int Directory decl Set String public public throws decl_stmt int = try decl_stmt java.util.Set < = new <> for < ++ decl_stmt org.apache.lucene.store.Directory = new decl_stmt java.lang.String = + + + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() + call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() catch + + decl byte int IndexInput int int int int IndexInput decl byte int private private throws decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt org.apache.lucene.store.IndexInput = new decl_stmt org.apache.lucene.store.IndexInput = new call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() decl_stmt int = int call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() for = < ++ decl_stmt int = - decl_stmt byte = new call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) > : + decl_stmt byte = new decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) = - decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) > : = - decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) > : call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() for = < ++ if != call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() int int IndexOutput int IndexOutput int decl byte private private throws decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - + decl_stmt org.apache.lucene.store.IndexOutput = new decl_stmt org.apache.lucene.store.IndexOutput = new for = < ++ decl_stmt byte = new call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - + call java.util.Random.nextBytes(byte) call java.util.Random.nextBytes(byte) call java.util.Random.nextBytes(byte) call java.util.Random.nextBytes(byte) call java.util.Random.nextBytes(byte) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() call IndexOutput.close() private private return call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong()