org.apache.lucene.demo java.io.BufferedReader import java.io.IOException import java.io.InputStreamReader import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Paths import java.util.Date import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.standard.StandardAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.queryparser.classic.QueryParser import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TopDocs import org.apache.lucene.store.FSDirectory import class org.apache.lucene.demo.SearchFiles String QueryParser int BufferedReader String IndexSearcher IndexReader String int Analyzer Date boolean String String Query String Date public static public static throws decl_stmt java.lang.String = if > && || decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt int = decl_stmt boolean = decl_stmt java.lang.String = decl_stmt int = for = < ++ if = + ++ else if = + ++ else if = + ++ else if = + ++ else if = + ++ else if = else if = + if <= ++ decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt java.io.BufferedReader = if != = else = new new decl_stmt org.apache.lucene.queryparser.surround.parser.QueryParser = new while if == && == decl_stmt java.lang.String = != : call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == - break = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == break decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) call org.apache.lucene.queryparser.surround.parser.QueryParser.parse(String) + call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() call org.apache.lucene.search.Query.toString() if > decl_stmt java.util.Date = new for = < ++ call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.util.Date = new + call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() - call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() call java.util.Date.getTime() + == && == if != break call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() boolean decl ScoreDoc int String Document TopDocs int int String String int public static public static throws decl_stmt org.apache.lucene.search.TopDocs = * decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt int = + decl_stmt int = decl_stmt int = while if > + + + + decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == || call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == break = = + for = < ++ if + + + continue decl_stmt org.apache.lucene.document.Document = decl_stmt java.lang.String = call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) if != + + + decl_stmt java.lang.String = call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) if != + call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) else + + + if ! || == break if >= decl_stmt boolean = while if - >= if + < decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == || call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == = break if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == = - break else if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == if + < += break else decl_stmt int = if - * < = - * break else if break = +