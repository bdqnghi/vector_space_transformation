org.apache.lucene.search.spans java.io.IOException import java.util.List import class org.apache.lucene.search.spans.NearSpansOrdered super super extends int int int int throws assert = while != && ! if && <= return = return private private for : if != - return return public public throws if = return = while != && ! if && <= return return = = Spans Spans private private throws decl_stmt org.apache.lucene.search.spans.Spans = = call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() assert call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() != : + assert call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() != = for = < ++ decl_stmt org.apache.lucene.search.spans.Spans = assert call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() != assert call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() != if call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() == = return += call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() call Spans.startPosition() - call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() = = - return private static private static throws if instanceof return while < return public public return - : public public return - : public public return public public throws for :