org.apache.solr.core java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.util.List import java.util.Locale import org.apache.lucene.index.IndexCommit import org.apache.lucene.index.IndexDeletionPolicy import org.apache.lucene.store.Directory import org.apache.lucene.store.FSDirectory import org.apache.solr.common.util.NamedList import org.apache.solr.util.DateMathParser import org.apache.solr.util.plugin.NamedListInitializedPlugin import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.core.SolrDeletionPolicy super super extends super implements int String int Logger String String String String boolean public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if != && call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() > = if != && call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() > = + if != && call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() > = if != && call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() > decl_stmt boolean = if = = public public < extends extends throws if return call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) new call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() new public public < extends extends throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) new call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() new StringBuilder public final public final decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() FSDirectory Directory protected protected decl_stmt org.apache.lucene.store.Directory = if instanceof decl_stmt org.apache.lucene.store.FSDirectory = call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() else protected protected try catch IndexCommit int DateMathParser long int IndexCommit private private < extends extends synchronized decl_stmt long = - decl_stmt org.apache.lucene.index.IndexCommit = - call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() call IndexCommit.getGeneration() decl_stmt int = call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() == : decl_stmt int = for = - >= -- decl_stmt org.apache.lucene.index.IndexCommit = try if != if == - decl_stmt org.apache.solr.util.DateMathParser = new = call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) call org.apache.solr.util.DateMathParser.parseMath(String) if < call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() continue catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if < && call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() call IndexCommit.getSegmentCount() == ++ ++ continue if < ++ continue call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() call IndexCommit.delete() StringBuilder FSDirectory Directory File private private decl_stmt java.lang.StringBuilder = new decl_stmt org.apache.lucene.store.Directory = if instanceof decl_stmt org.apache.lucene.store.FSDirectory = decl_stmt File = call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call org.apache.lucene.store.FSDirectory.getDirectory() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call File.getPath() call File.getPath() call File.getPath() call File.getPath() call File.getPath() else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return public public return public public return public public synchronized = public public synchronized =