org.apache.solr.update.processor org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.SchemaField import org.apache.solr.update.AddUpdateCommand import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.HashMap import java.util.HashSet import java.util.List import java.util.regex.Pattern import class org.apache.solr.update.processor.LanguageIdentifierUpdateProcessor super super extends super implements decl HashSet String Pattern decl HashMap double boolean String Logger Pattern decl String decl HashMap String IndexSchema decl HashSet String boolean Pattern int boolean boolean boolean decl String boolean decl HashSet boolean int decl String String SchemaField decl String decl String private private if != if > = = = decl_stmt org.apache.solr.schema.SchemaField = call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) call org.apache.solr.schema.IndexSchema.getUniqueKeyField(org,apache,lucene,document,Document) = == : call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() call org.apache.solr.schema.SchemaField.getName() = if > = = = new <> = if > for : call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() = if > = else = = = = decl_stmt java.lang.String = if > = else = = new <> = new <> if call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() = new <> if != for : decl_stmt java.lang.String = if == call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + = new <> if != for : decl_stmt java.lang.String = if == call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() else call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + = = = = = if > if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + + + + + + = else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + + + + + + = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() if == throw new public public throws if else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() String String decl HashSet SolrInputField String String decl List protected protected decl_stmt java.lang.String = decl_stmt java.util.HashSet < = new <> decl_stmt java.lang.String = if == || ! || && decl_stmt java.util.List < = = call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + if && call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() != else = call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + + if for : if decl_stmt java.lang.String if && call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() decl_stmt java.util.List < = = call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + else = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + decl_stmt java.lang.String = if != call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt org.apache.solr.common.SolrInputField = call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getValue() call org.apache.solr.common.SolrInputField.getBoost() call org.apache.solr.common.SolrInputField.getBoost() call org.apache.solr.common.SolrInputField.getBoost() call org.apache.solr.common.SolrInputField.getBoost() call org.apache.solr.common.SolrInputField.getBoost() if ! call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() else throw new + + + if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() != call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() return String private private decl_stmt java.lang.String = for : if = call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + break if == call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + = return decl List protected protected decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return DetectedLanguage String String protected protected < decl_stmt java.lang.String if == call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() = else decl_stmt org.apache.solr.update.processor.DetectedLanguage = decl_stmt java.lang.String = call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() if call decl HashSet.isEmpty() call decl HashSet.isEmpty() call decl HashSet.isEmpty() call decl HashSet.isEmpty() call decl HashSet.isEmpty() || call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call decl HashSet.contains() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() if call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() call org.apache.solr.update.processor.DetectedLanguage.getCertainty() >= = else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() = else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() call DetectedLanguage.getLangCode() = if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() = return String protected protected if call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() decl_stmt java.lang.String = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + return return String String protected protected decl_stmt java.lang.String = call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.containsKey() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() : decl_stmt java.lang.String = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if && call org.apache.solr.schema.IndexSchema.getFieldOrNull(String) call org.apache.solr.schema.IndexSchema.getFieldOrNull(String) call org.apache.solr.schema.IndexSchema.getFieldOrNull(String) call org.apache.solr.schema.IndexSchema.getFieldOrNull(String) call org.apache.solr.schema.IndexSchema.getFieldOrNull(String) == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + + + return public public return public public =