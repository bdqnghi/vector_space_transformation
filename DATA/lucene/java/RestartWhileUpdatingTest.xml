org.apache.solr.cloud java.io.IOException import java.util.ArrayList import java.util.List import org.apache.lucene.util.LuceneTestCase.Nightly import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.SolrTestCaseJ4.SuppressObjectReleaseTracker import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.common.SolrInputDocument import org.apache.solr.util.TestInjection import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class annotation annotation annotation org.apache.solr.cloud.RestartWhileUpdatingTest super super extends decl List decl RandVal decl String boolean protected protected return protected protected return public static public static = = public static public static decl int int StoppableIndexingThread int Thread int public public throws decl_stmt int = new decl_stmt int = - decl_stmt int = + = new <> decl_stmt java.lang.Thread = new public public while ! try catch throw new decl_stmt org.apache.solr.cloud.StoppableIndexingThread for = < ++ = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() decl_stmt int = for = < ++ for : = call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) public public while ! try catch throw new public public throws if for : protected protected throws public public throws if != for : SolrInputDocument protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = new