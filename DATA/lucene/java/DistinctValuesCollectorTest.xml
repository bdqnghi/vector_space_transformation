org.apache.lucene.search.grouping java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Locale import java.util.Map import java.util.Random import java.util.Set import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.SortedDocValuesField import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.queries.function.valuesource.BytesRefFieldSource import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TermQuery import org.apache.lucene.search.grouping.function.FunctionDistinctValuesCollector import org.apache.lucene.search.grouping.function.FunctionFirstPassGroupingCollector import org.apache.lucene.search.grouping.term.TermDistinctValuesCollector import org.apache.lucene.search.grouping.term.TermFirstPassGroupingCollector import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.TestUtil import org.apache.lucene.util.mutable.MutableValue import org.apache.lucene.util.mutable.MutableValueStr import class org.apache.lucene.search.grouping.DistinctValuesCollectorTest super super extends String NullComparator String decl AbstractDistinctValuesCollector Document Random IndexSearcher decl AbstractFirstPassGroupingCollector decl List RandomIndexWriter decl List Directory decl Comparator public public throws decl_stmt java.util.Random = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt java.util.Comparator < < < = new < < < public public < < < < if == if == return return - else if == return else return decl_stmt org.apache.lucene.search.grouping.AbstractFirstPassGroupingCollector < < = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt org.apache.lucene.search.grouping.AbstractDistinctValuesCollector < extends extends extends extends extends extends < < = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt java.util.List < extends extends extends extends extends extends < < = call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < < = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new = call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new < < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public < < < < if == if == return return - else if == return else return IndexSearcher String decl AbstractDistinctValuesCollector decl AbstractFirstPassGroupingCollector decl List Random decl List Sort int IndexContext decl AbstractDistinctValuesCollector decl List decl AbstractDistinctValuesCollector int decl List public public throws decl_stmt java.util.Random = decl_stmt int = for = < ++ decl_stmt IndexContext = for = < ++ decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt java.lang.String = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt org.apache.lucene.search.Sort = new new decl_stmt int = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.util.List < < < = decl_stmt org.apache.lucene.search.grouping.AbstractFirstPassGroupingCollector < < = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt org.apache.lucene.search.grouping.AbstractDistinctValuesCollector < extends extends extends extends extends extends < < = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new decl_stmt java.util.List < < < = < < < call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() call decl AbstractDistinctValuesCollector.getGroups() if + + + call decl AbstractFirstPassGroupingCollector.getClass() call decl AbstractFirstPassGroupingCollector.getClass() call decl AbstractFirstPassGroupingCollector.getClass() call decl AbstractFirstPassGroupingCollector.getClass() call decl AbstractFirstPassGroupingCollector.getClass() + call decl AbstractDistinctValuesCollector.getClass() call decl AbstractDistinctValuesCollector.getClass() call decl AbstractDistinctValuesCollector.getClass() call decl AbstractDistinctValuesCollector.getClass() call decl AbstractDistinctValuesCollector.getClass() + + call decl AbstractFirstPassGroupingCollector.getTopGroups() call decl AbstractFirstPassGroupingCollector.getTopGroups() call decl AbstractFirstPassGroupingCollector.getTopGroups() call decl AbstractFirstPassGroupingCollector.getTopGroups() call decl AbstractFirstPassGroupingCollector.getTopGroups() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.apache.lucene.search.grouping.AbstractDistinctValuesCollector < < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.search.grouping.AbstractDistinctValuesCollector < < = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() call decl AbstractDistinctValuesCollector.uniqueValues() decl_stmt java.util.List < < = new <> decl_stmt java.util.List < < = new <> for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.indexReader() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() call IndexContext.directory() Object decl AbstractDistinctValuesCollector private private < < < for = < ++ decl_stmt org.apache.lucene.search.grouping.AbstractDistinctValuesCollector < < = decl_stmt java.lang.Object = if instanceof + + else + + for : if instanceof + else + private private if == else MutableValueStr private private if else if else if else if decl_stmt org.apache.lucene.util.mutable.MutableValueStr = new call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() else private private if == return if else if else if else if else private private new new decl Collection Random private < extends extends < < private < extends extends < < < decl_stmt java.util.Random = decl_stmt java.util.Collection < < = if return new new <> new new else return new Random private < < private < < throws decl_stmt java.util.Random = if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() return < new new new <> else return < new int decl Map decl Set List private < < < private < < < class class extends extends extends extends extends extends extends < < decl_stmt java.util.List = new decl_stmt java.util.Map < < = decl_stmt int = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if <= ++ break decl_stmt java.util.Set < = new <> for : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() != new : call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new != new : return decl Map decl List String Document String Random decl Map String decl Set RandomIndexWriter DirectoryReader decl String int decl String Directory private private throws decl_stmt java.util.Random = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt int = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) * decl_stmt java.lang.String = new / decl_stmt java.lang.String = new / for = < ++ = for = < ++ = decl_stmt java.util.List < = new <> decl_stmt java.util.Map < < < = new <> for = <= ++ decl_stmt java.lang.String = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt java.lang.String = + call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) / decl_stmt java.util.Map < < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.util.Set < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new if != if != call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() if for = < call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() call DirectoryReader.maxDoc() ++ decl_stmt org.apache.lucene.document.Document = call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() call DirectoryReader.document() + + + call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) + + call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) + + call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) + + call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() return new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public public if == return else if == return - else if == return else return