org.apache.lucene.index java.io.IOException import java.util.HashMap import java.util.List import java.util.Map import org.apache.lucene.codecs.DocValuesFormat import org.apache.lucene.codecs.DocValuesProducer import org.apache.lucene.store.Directory import org.apache.lucene.store.IOContext import org.apache.lucene.util.IOUtils import org.apache.lucene.util.RefCount import class org.apache.lucene.index.SegmentDocValues decl Map SegmentReadState Directory String DocValuesFormat private < private < final final throws decl_stmt org.apache.lucene.store.Directory = decl_stmt java.lang.String = if != - = = decl_stmt SegmentReadState = new decl_stmt org.apache.lucene.codecs.DocValuesFormat = return new < call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() call DocValuesFormat.fieldsProducer() protected protected throws synchronized call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() protected protected throws synchronized call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() decl RefCount synchronized synchronized throws decl_stmt org.apache.lucene.util.RefCount < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = assert != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call decl RefCount.incRef() call decl RefCount.incRef() call decl RefCount.incRef() call decl RefCount.incRef() call decl RefCount.incRef() return call decl RefCount.get() call decl RefCount.get() call decl RefCount.get() call decl RefCount.get() call decl RefCount.get() Throwable decl RefCount synchronized synchronized < throws decl_stmt java.lang.Throwable = for : decl_stmt org.apache.lucene.util.RefCount < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != : + try call decl RefCount.decRef() call decl RefCount.decRef() call decl RefCount.decRef() call decl RefCount.decRef() call decl RefCount.decRef() catch if != = if !=