org.apache.solr.update.processor static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import java.lang.invoke.MethodHandles import java.util.Arrays import java.util.ArrayList import java.util.List import org.apache.solr.core.SolrCore import org.apache.solr.response.SolrQueryResponse import org.apache.solr.util.AbstractSolrTestCase import org.junit.BeforeClass import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.processor.UpdateRequestProcessorFactoryTest super super extends Logger public static public static throws SolrCore LogUpdateProcessorFactory UpdateRequestProcessorChain UpdateRequestProcessorChain CustomUpdateRequestProcessorFactory UpdateRequestProcessorFactory public public throws decl_stmt org.apache.solr.core.SolrCore = decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorChain = call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorFactory = call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call UpdateRequestProcessorFactory.getClass() call UpdateRequestProcessorFactory.getClass() call UpdateRequestProcessorFactory.getClass() call UpdateRequestProcessorFactory.getClass() call UpdateRequestProcessorFactory.getClass() decl_stmt org.apache.solr.update.processor.LogUpdateProcessorFactory = decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorChain = call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) decl_stmt org.apache.solr.update.processor.CustomUpdateRequestProcessorFactory = call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() call CustomUpdateRequestProcessorFactory.args() SolrCore UpdateRequestProcessor int UpdateRequestProcessorChain decl List public public throws + call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() decl_stmt int final final = decl_stmt org.apache.solr.core.SolrCore = for final final : decl_stmt org.apache.solr.update.processor.UpdateRequestProcessor decl_stmt java.util.List < decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorChain = call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) call org.apache.solr.core.SolrCore.getUpdateProcessingChain(String) + + call UpdateRequestProcessorChain.toString() call UpdateRequestProcessorChain.toString() call UpdateRequestProcessorChain.toString() call UpdateRequestProcessorChain.toString() call UpdateRequestProcessorChain.toString() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() call org.apache.solr.update.processor.UpdateRequestProcessorChain.getProcessors() = call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() new = + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() - : call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof = call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() new = + + call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() instanceof && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - instanceof + + call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() call decl List.toString() - : call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl List public static < public static < decl_stmt java.util.List < = new < while != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = return