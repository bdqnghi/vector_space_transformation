org.apache.lucene.replicator java.io.ByteArrayOutputStream import java.io.Closeable import java.io.IOException import java.io.PrintStream import java.nio.file.Path import java.util.HashMap import java.util.concurrent.Callable import java.util.concurrent.atomic.AtomicBoolean import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.document.Document import org.apache.lucene.facet.DrillDownQuery import org.apache.lucene.facet.FacetField import org.apache.lucene.facet.Facets import org.apache.lucene.facet.FacetsCollector import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.taxonomy.FastTaxonomyFacetCounts import org.apache.lucene.facet.taxonomy.TaxonomyReader import org.apache.lucene.facet.taxonomy.TaxonomyWriter import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader import org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter import org.apache.lucene.index.CheckIndex import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.SnapshotDeletionPolicy import org.apache.lucene.replicator.IndexAndTaxonomyRevision.SnapshotDirectoryTaxonomyWriter import org.apache.lucene.replicator.ReplicationClient.ReplicationHandler import org.apache.lucene.replicator.ReplicationClient.SourceDirectoryFactory import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.store.Directory import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.IOUtils import org.apache.lucene.util.TestUtil import org.apache.lucene.util.ThreadInterruptedException import org.junit.After import org.junit.Before import org.junit.Test import class org.apache.lucene.replicator.IndexAndTaxonomyReplicationClientTest super super extends SnapshotDirectoryTaxonomyWriter SourceDirectoryFactory String IndexWriter ReplicationHandler FacetsConfig Replicator IndexAndTaxonomyReadyCallback Path ReplicationClient MockDirectoryWrapper Directory IndexSearcher DirectoryReader TopDocs Facets DirectoryTaxonomyReader int FacetsCollector DrillDownQuery long public public throws if == = = = new else decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt long = call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() + + + > = = decl_stmt org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyReader = if != = decl_stmt int = decl_stmt org.apache.lucene.search.IndexSearcher = new decl_stmt org.apache.lucene.facet.FacetsCollector = new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new decl_stmt Facets = new call Facets.getSpecificValue() call Facets.getSpecificValue() call Facets.getSpecificValue() call Facets.getSpecificValue() call Facets.getSpecificValue() decl_stmt org.apache.lucene.facet.DrillDownQuery = new call org.apache.lucene.facet.DrillDownQuery.add(String,String) call org.apache.lucene.facet.DrillDownQuery.add(String,String) call org.apache.lucene.facet.DrillDownQuery.add(String,String) call org.apache.lucene.facet.DrillDownQuery.add(String,String) call org.apache.lucene.facet.DrillDownQuery.add(String,String) decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) return public public throws int DirectoryReader private private throws while call IndexWriter.isUpdateThreadAlive() call IndexWriter.isUpdateThreadAlive() call IndexWriter.isUpdateThreadAlive() call IndexWriter.isUpdateThreadAlive() call IndexWriter.isUpdateThreadAlive() try catch throw new try decl_stmt org.apache.lucene.index.DirectoryReader = try decl_stmt int = call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() if == return finally call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() catch private private final final throws call FacetsConfig.addDocument() call FacetsConfig.addDocument() call FacetsConfig.addDocument() call FacetsConfig.addDocument() call FacetsConfig.addDocument() call FacetsConfig.setCommitData() call FacetsConfig.setCommitData() call FacetsConfig.setCommitData() call FacetsConfig.setCommitData() call FacetsConfig.setCommitData() new < call FacetsConfig.commit() call FacetsConfig.commit() call FacetsConfig.commit() call FacetsConfig.commit() call FacetsConfig.commit() call IndexAndTaxonomyReadyCallback.commit() call IndexAndTaxonomyReadyCallback.commit() call IndexAndTaxonomyReadyCallback.commit() call IndexAndTaxonomyReadyCallback.commit() call IndexAndTaxonomyReadyCallback.commit() return new Document private private throws decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new return call Path.build() call Path.build() call Path.build() call Path.build() call Path.build() IndexWriterConfig public public throws = = = = = = new = new = new = new = new decl_stmt org.apache.lucene.index.IndexWriterConfig = call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) call org.apache.lucene.index.IndexWriterConfig.setIndexDeletionPolicy(IndexDeletionPolicy) new call org.apache.lucene.index.IndexWriterConfig.getIndexDeletionPolicy() call org.apache.lucene.index.IndexWriterConfig.getIndexDeletionPolicy() call org.apache.lucene.index.IndexWriterConfig.getIndexDeletionPolicy() call org.apache.lucene.index.IndexWriterConfig.getIndexDeletionPolicy() call org.apache.lucene.index.IndexWriterConfig.getIndexDeletionPolicy() = new = new = new call Path.setHierarchical() call Path.setHierarchical() call Path.setHierarchical() call Path.setHierarchical() call Path.setHierarchical() public public throws call FacetsConfig.close() call FacetsConfig.close() call FacetsConfig.close() call FacetsConfig.close() call FacetsConfig.close() public public throws call SnapshotDirectoryTaxonomyWriter.currentVersion() call SnapshotDirectoryTaxonomyWriter.currentVersion() call SnapshotDirectoryTaxonomyWriter.currentVersion() call SnapshotDirectoryTaxonomyWriter.currentVersion() call SnapshotDirectoryTaxonomyWriter.currentVersion() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() public public throws call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.stopUpdateThread() call IndexWriter.stopUpdateThread() call IndexWriter.stopUpdateThread() call IndexWriter.stopUpdateThread() call IndexWriter.stopUpdateThread() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = new call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() public public throws call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() Directory public public throws call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() decl_stmt org.apache.lucene.store.Directory = new call IndexAndTaxonomyReadyCallback.replaceTaxonomy() call IndexAndTaxonomyReadyCallback.replaceTaxonomy() call IndexAndTaxonomyReadyCallback.replaceTaxonomy() call IndexAndTaxonomyReadyCallback.replaceTaxonomy() call IndexAndTaxonomyReadyCallback.replaceTaxonomy() call FacetsConfig.deleteAll() call FacetsConfig.deleteAll() call FacetsConfig.deleteAll() call FacetsConfig.deleteAll() call FacetsConfig.deleteAll() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int AtomicBoolean SourceDirectoryFactory decl CheckIndex double int ByteArrayOutputStream Directory int long AtomicInteger decl Status MockDirectoryWrapper Directory DirectoryReader public public throws call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call IndexWriter.updateNow() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call String.close() call String.close() call String.close() call String.close() call String.close() call Replicator.setPreventDoubleWrite() call Replicator.setPreventDoubleWrite() call Replicator.setPreventDoubleWrite() call Replicator.setPreventDoubleWrite() call Replicator.setPreventDoubleWrite() call SourceDirectoryFactory.setPreventDoubleWrite() call SourceDirectoryFactory.setPreventDoubleWrite() call SourceDirectoryFactory.setPreventDoubleWrite() call SourceDirectoryFactory.setPreventDoubleWrite() call SourceDirectoryFactory.setPreventDoubleWrite() decl_stmt SourceDirectoryFactory final final = decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new = new decl_stmt long private = = = decl_stmt double private = = = public public throws call SourceDirectoryFactory.cleanupSession() call SourceDirectoryFactory.cleanupSession() call SourceDirectoryFactory.cleanupSession() call SourceDirectoryFactory.cleanupSession() call SourceDirectoryFactory.cleanupSession() public public throws decl_stmt org.apache.lucene.store.Directory = call SourceDirectoryFactory.getDirectory() call SourceDirectoryFactory.getDirectory() call SourceDirectoryFactory.getDirectory() call SourceDirectoryFactory.getDirectory() call SourceDirectoryFactory.getDirectory() if && call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() > decl_stmt org.apache.lucene.store.MockDirectoryWrapper = new call int.setRandomIOExceptionRateOnOpen() call int.setRandomIOExceptionRateOnOpen() call int.setRandomIOExceptionRateOnOpen() call int.setRandomIOExceptionRateOnOpen() call int.setRandomIOExceptionRateOnOpen() call int.setMaxSizeInBytes() call int.setMaxSizeInBytes() call int.setMaxSizeInBytes() call int.setMaxSizeInBytes() call int.setMaxSizeInBytes() call int.setRandomIOExceptionRate() call int.setRandomIOExceptionRate() call int.setRandomIOExceptionRate() call int.setRandomIOExceptionRate() call int.setRandomIOExceptionRate() call int.setCheckIndexOnClose() call int.setCheckIndexOnClose() call int.setCheckIndexOnClose() call int.setCheckIndexOnClose() call int.setCheckIndexOnClose() *= /= return if call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() > && if call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() *= /= else call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() *= /= else call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() return = new new < public public throws if < && call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() > throw new return decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new = new protected protected if instanceof try if + decl_stmt org.apache.lucene.index.DirectoryReader = call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() try decl_stmt int = call decl CheckIndex.numDocs() call decl CheckIndex.numDocs() call decl CheckIndex.numDocs() call decl CheckIndex.numDocs() call decl CheckIndex.numDocs() decl_stmt int = call decl CheckIndex.getIndexCommit() call decl CheckIndex.getIndexCommit() call decl CheckIndex.getIndexCommit() call decl CheckIndex.getIndexCommit() call decl CheckIndex.getIndexCommit() finally call decl CheckIndex.close() call decl CheckIndex.close() call decl CheckIndex.close() call decl CheckIndex.close() call decl CheckIndex.close() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() decl_stmt java.io.ByteArrayOutputStream = new decl_stmt Status = try = new call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() new try = catch catch call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() throw new catch call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() throw finally call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() call java.util.concurrent.atomic.AtomicInteger.decrementAndGet() assert call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() >= : + call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() if if call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() == else + call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() else call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() call ByteArrayOutputStream.set() if instanceof throw throw new call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() call IndexWriter.startUpdateThread() decl_stmt org.apache.lucene.store.Directory final final = call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() decl_stmt int = + for = < && call ByteArrayOutputStream.get() call ByteArrayOutputStream.get() call ByteArrayOutputStream.get() call ByteArrayOutputStream.get() call ByteArrayOutputStream.get() == ++ call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call ReplicationClient.publish() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() public public throws MockDirectoryWrapper Directory public public throws decl_stmt org.apache.lucene.store.Directory = if && > decl_stmt org.apache.lucene.store.MockDirectoryWrapper = new call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRateOnOpen(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRateOnOpen(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRateOnOpen(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRateOnOpen(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRateOnOpen(double) call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call MockDirectoryWrapper.setMaxSizeInBytes() call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRate(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRate(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRate(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRate(double) call org.apache.lucene.store.MockDirectoryWrapper.setRandomIOExceptionRate(double) call MockDirectoryWrapper.setCheckIndexOnClose() call MockDirectoryWrapper.setCheckIndexOnClose() call MockDirectoryWrapper.setCheckIndexOnClose() call MockDirectoryWrapper.setCheckIndexOnClose() call MockDirectoryWrapper.setCheckIndexOnClose() *= /= return if > && if call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() *= /= else call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() call SourceDirectoryFactory.setCheckIndexOnClose() *= /= else call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setMaxSizeInBytes() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRate() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call Replicator.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setMaxSizeInBytes() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRate() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() call SourceDirectoryFactory.setRandomIOExceptionRateOnOpen() return public public throws if < && > throw new return decl CheckIndex int int ByteArrayOutputStream DirectoryReader protected protected if instanceof try if + decl_stmt org.apache.lucene.index.DirectoryReader = call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() try decl_stmt int = call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() decl_stmt int = call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() call DirectoryReader.getIndexCommit() finally call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() call Replicator.getDelegate() decl_stmt java.io.ByteArrayOutputStream = new decl_stmt Status = try = new call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() call SourceDirectoryFactory.getDelegate() new try = catch catch throw new catch throw finally assert >= : + if if == else + else if instanceof throw throw new