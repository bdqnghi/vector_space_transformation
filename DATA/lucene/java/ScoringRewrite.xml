org.apache.lucene.search java.io.IOException import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.index.TermState import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.MultiTermQuery.RewriteMethod import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.ByteBlockPool import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefHash.DirectBytesStartArray import org.apache.lucene.util.BytesRefHash import org.apache.lucene.util.RamUsageEstimator import class super super extends decl ScoringRewrite RewriteMethod decl BooleanQuery protected protected decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() return protected protected return TermQuery protected protected decl_stmt org.apache.lucene.search.TermQuery final final = new new protected protected if > throw new Query public public throws decl_stmt org.apache.lucene.search.Query final final = call decl ScoringRewrite.rewrite() call decl ScoringRewrite.rewrite() call decl ScoringRewrite.rewrite() call decl ScoringRewrite.rewrite() call decl ScoringRewrite.rewrite() return new Term B int int decl float ParallelArraysTermCollector decl TermContext int public final public final final final final final throws decl_stmt B final final = decl_stmt ParallelArraysTermCollector final final = new decl_stmt int final final = call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() if > decl_stmt int final final = call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() decl_stmt float final final final = decl_stmt org.apache.lucene.index.TermContext final final final = for = < ++ decl_stmt int final final = decl_stmt org.apache.lucene.index.Term final final = new call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() call ParallelArraysTermCollector.terms() new assert == || == return public public = = TermState int int public public throws decl_stmt int final final = decl_stmt org.apache.lucene.index.TermState final final = assert != if < decl_stmt int final final = - - assert == : else = = new return decl int public public decl_stmt int final final final = = new = new assert >= && >= return decl TermContext decl int public public decl_stmt int final final final = = if < decl_stmt org.apache.lucene.index.TermContext = new = assert >= && >= return public public = = return