org.apache.solr.search.join java.io.IOException import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.Query import org.apache.lucene.search.join.BitSetProducer import org.apache.lucene.search.join.QueryBitSetProducer import org.apache.lucene.search.join.ScoreMode import org.apache.lucene.search.join.ToParentBlockJoinQuery import org.apache.lucene.util.BitDocIdSet import org.apache.lucene.util.BitSet import org.apache.lucene.util.Bits import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.BitsFilteredDocIdSet import org.apache.solr.search.Filter import org.apache.solr.search.QParser import org.apache.solr.search.QueryParsing import org.apache.solr.search.SolrCache import org.apache.solr.search.SolrConstantScoreQuery import org.apache.solr.search.SyntaxError import class org.apache.solr.search.join.BlockJoinParentQParser super super extends String protected protected return QParser String String SolrConstantScoreQuery Query String Query QParser public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() decl_stmt java.lang.String = if == || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == decl_stmt org.apache.solr.search.SolrConstantScoreQuery = new call org.apache.solr.search.SolrConstantScoreQuery.setCache(boolean) call org.apache.solr.search.SolrConstantScoreQuery.setCache(boolean) call org.apache.solr.search.SolrConstantScoreQuery.setCache(boolean) call org.apache.solr.search.SolrConstantScoreQuery.setCache(boolean) call org.apache.solr.search.SolrConstantScoreQuery.setCache(boolean) return decl_stmt org.apache.solr.search.QParser = decl_stmt org.apache.lucene.search.Query = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() return protected protected final final throws return new Filter SolrCache BitDocIdSetFilterWrapper decl_stmt org.apache.solr.search.SolrCache = decl_stmt org.apache.solr.search.Filter = if != = call org.apache.solr.search.SolrCache.get(K) call org.apache.solr.search.SolrCache.get(K) call org.apache.solr.search.SolrCache.get(K) call org.apache.solr.search.SolrCache.get(K) call org.apache.solr.search.SolrCache.get(K) decl_stmt BitDocIdSetFilterWrapper if instanceof = else = new if != call org.apache.solr.search.SolrCache.put(K,V) call org.apache.solr.search.SolrCache.put(K,V) call org.apache.solr.search.SolrCache.put(K,V) call org.apache.solr.search.SolrCache.put(K,V) call org.apache.solr.search.SolrCache.put(K,V) return private private return new public public return BitSet public public throws decl_stmt org.apache.lucene.util.BitSet = if == return return new public public return + + + public public if == return return public public return * +