org.apache.lucene.search java.io.IOException import org.apache.lucene.index.DocValues import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.util.Bits import org.apache.lucene.util.LongBitSet import class org.apache.lucene.search.DocValuesRewriteMethod super super extends public public return new new public public return MultiTermQueryDocValuesWrapper public final public final final final if == return decl_stmt MultiTermQueryDocValuesWrapper = return public final public final return * + public final public final return LongBitSet long SortedSetDocValues TermsEnum public public throws return new protected protected throws decl_stmt org.apache.lucene.index.SortedSetDocValues final final = decl_stmt org.apache.lucene.index.TermsEnum = new public public return call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() public public return - public public return - public public return - public public return - public public return public public return public public return public public return assert != if call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() == return decl_stmt org.apache.lucene.util.LongBitSet final final = new call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() do decl_stmt long = call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() if >= call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != return new public public call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() for = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() if call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) return return public public return LongBitSet long SortedSetDocValues TermsEnum protected protected throws decl_stmt org.apache.lucene.index.SortedSetDocValues final final = decl_stmt org.apache.lucene.index.TermsEnum = new public public return call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() call org.apache.lucene.index.SortedSetDocValues.termsEnum() public public return - public public return - public public return - public public return - public public return public public return public public return public public return assert != if call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() == return decl_stmt org.apache.lucene.util.LongBitSet final final = new call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() call SortedSetDocValues.getValueCount() do decl_stmt long = call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() call org.apache.lucene.index.TermsEnum.ord() if >= call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call org.apache.lucene.util.LongBitSet.set(long) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != return new public public call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() call SortedSetDocValues.setDocument() for = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() != = call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() call SortedSetDocValues.nextOrd() if call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) call org.apache.lucene.util.LongBitSet.get(long) return return public public return public public return public public return - public public return - public public return - public public return - public public return public public return public public return public public return public public for = != = if return return public public return public public if == return if == return if != return return public public return