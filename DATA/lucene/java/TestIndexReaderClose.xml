org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Collections import java.util.List import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.TestIndexReaderClose super super extends int AtomicInteger LeafReader boolean int IndexWriter FilterLeafReader IllegalStateException boolean DirectoryReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) new call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt int final final = + + for = < ++ decl_stmt org.apache.lucene.index.DirectoryReader = decl_stmt boolean final final = ! decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.FilterLeafReader = new protected protected throws if throw new decl_stmt int = decl_stmt java.util.concurrent.atomic.AtomicInteger = new decl_stmt boolean = for = < ++ if = call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() new else call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() new if ! && ! call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() call FilterLeafReader.addReaderClosedListener() new decl_stmt IllegalStateException = call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() if call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() else call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call IllegalStateException.getMessage() call org.apache.lucene.index.FilterLeafReader.fields() call org.apache.lucene.index.FilterLeafReader.fields() call org.apache.lucene.index.FilterLeafReader.fields() call org.apache.lucene.index.FilterLeafReader.fields() call org.apache.lucene.index.FilterLeafReader.fields() if call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() call FilterLeafReader.close() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() protected protected throws if throw new Object int int AtomicInteger CountCoreListener decl List RandomIndexWriter IndexReader int LeafReader public public throws decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int final final = for = < ++ call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) new if call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.index.IndexReader final final = call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() decl_stmt java.lang.Object final final = new decl_stmt org.apache.lucene.index.LeafReader final final = new public public return decl_stmt int final final = decl_stmt java.util.List final final final < = new <> decl_stmt java.util.concurrent.atomic.AtomicInteger = new for = < ++ decl_stmt CountCoreListener = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() for = < ++ call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call LeafReader.addCoreClosedListener() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int final final = for = < ++ call LeafReader.removeCoreClosedListener() call LeafReader.removeCoreClosedListener() call LeafReader.removeCoreClosedListener() call LeafReader.removeCoreClosedListener() call LeafReader.removeCoreClosedListener() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() if call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() else call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call LeafReader.close() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() call RandomIndexWriter.w() public public return public public public public public public throw new