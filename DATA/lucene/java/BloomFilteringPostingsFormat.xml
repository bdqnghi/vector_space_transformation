org.apache.lucene.codecs.bloom java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import java.util.Map.Entry import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.FieldsConsumer import org.apache.lucene.codecs.FieldsProducer import org.apache.lucene.codecs.PostingsFormat import org.apache.lucene.codecs.bloom.FuzzySet.ContainsResult import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.Fields import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentReadState import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.DataOutput import org.apache.lucene.store.IndexOutput import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.automaton.CompiledAutomaton import class org.apache.lucene.codecs.bloom.BloomFilteringPostingsFormat super super extends String BloomFilterFactory PostingsFormat String int int FieldsConsumer public public throws if == throw new + + decl_stmt org.apache.lucene.codecs.FieldsConsumer = call PostingsFormat.fieldsConsumer() call PostingsFormat.fieldsConsumer() call PostingsFormat.fieldsConsumer() call PostingsFormat.fieldsConsumer() call PostingsFormat.fieldsConsumer() return new public public throws return new public < public < return public public throws FuzzySet Terms public public throws decl_stmt org.apache.lucene.codecs.bloom.FuzzySet = if == return else decl_stmt org.apache.lucene.index.Terms = if == return return new public public return public public final final throws return public public throws return new public public throws return public public throws return public public throws return public public throws return public public return public public return public public return public public return public public throws return public public throws return throws = = private private throws if == = return public public throws return public public throws if == return return public public throws return public public throws public public throws return public public throws return public public throws return public public throws return public public throws return long public public decl_stmt long = != : for < : += * += return decl List public < public < decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws public public return + + + + + BytesRef Terms TermsEnum FieldInfo FuzzySet PostingsEnum public public throws for : decl_stmt org.apache.lucene.index.Terms = if == continue decl_stmt org.apache.lucene.index.FieldInfo = decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.codecs.bloom.FuzzySet = decl_stmt org.apache.lucene.index.PostingsEnum = while decl_stmt org.apache.lucene.util.BytesRef = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if == break if == = call BloomFilterFactory.getSetForField() call BloomFilterFactory.getSetForField() call BloomFilterFactory.getSetForField() call BloomFilterFactory.getSetForField() call BloomFilterFactory.getSetForField() if == break assert == = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) if call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call org.apache.lucene.codecs.bloom.FuzzySet.addValue(BytesRef) call org.apache.lucene.codecs.bloom.FuzzySet.addValue(BytesRef) call org.apache.lucene.codecs.bloom.FuzzySet.addValue(BytesRef) call org.apache.lucene.codecs.bloom.FuzzySet.addValue(BytesRef) call org.apache.lucene.codecs.bloom.FuzzySet.addValue(BytesRef) FuzzySet decl List FieldInfo String public public throws if return = decl_stmt java.util.List < < = new <> for < : decl_stmt org.apache.lucene.codecs.bloom.FuzzySet = if ! call BloomFilterFactory.isSaturated() call BloomFilterFactory.isSaturated() call BloomFilterFactory.isSaturated() call BloomFilterFactory.isSaturated() call BloomFilterFactory.isSaturated() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String = try = call org.apache.lucene.codecs.PostingsFormat.getName() call org.apache.lucene.codecs.PostingsFormat.getName() call org.apache.lucene.codecs.PostingsFormat.getName() call org.apache.lucene.codecs.PostingsFormat.getName() call org.apache.lucene.codecs.PostingsFormat.getName() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for < : decl_stmt org.apache.lucene.index.FieldInfo = decl_stmt org.apache.lucene.codecs.bloom.FuzzySet = FuzzySet private private throws decl_stmt org.apache.lucene.codecs.bloom.FuzzySet = call BloomFilterFactory.downsize() call BloomFilterFactory.downsize() call BloomFilterFactory.downsize() call BloomFilterFactory.downsize() call BloomFilterFactory.downsize() if == = call org.apache.lucene.codecs.bloom.FuzzySet.serialize(DataOutput) call org.apache.lucene.codecs.bloom.FuzzySet.serialize(DataOutput) call org.apache.lucene.codecs.bloom.FuzzySet.serialize(DataOutput) call org.apache.lucene.codecs.bloom.FuzzySet.serialize(DataOutput) call org.apache.lucene.codecs.bloom.FuzzySet.serialize(DataOutput) public public return + +