org.apache.lucene.index java.util.IdentityHashMap import java.util.Map import org.apache.lucene.index.DocumentsWriterPerThreadPool.ThreadState import org.apache.lucene.util.InfoStream import org.apache.lucene.util.ThreadInterruptedException import class org.apache.lucene.index.DocumentsWriterStallControl long boolean decl Map int boolean InfoStream synchronized synchronized = if = if synchronized if try catch throw new return private private = if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) && == call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() ++ assert call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() == assert > long private private -- assert call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() != assert >= if call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) call org.apache.lucene.util.InfoStream.isEnabled(String) && == decl_stmt long = call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() call InfoStream.message() + - / + synchronized synchronized return > return ! synchronized synchronized return call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() synchronized synchronized return