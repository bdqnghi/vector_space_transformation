org.apache.lucene.queries.function.valuesource java.io.IOException import java.util.Map import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.BinaryDocValues import org.apache.lucene.index.DocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.FieldInfo import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.docvalues.DocTermsIndexDocValues import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.mutable.MutableValue import org.apache.lucene.util.mutable.MutableValueStr import class org.apache.lucene.queries.function.valuesource.BytesRefFieldSource super super extends FieldInfo MutableValueStr BytesRefBuilder BinaryDocValues Bits public public throws decl_stmt org.apache.lucene.index.FieldInfo final final = if != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() == decl_stmt BinaryDocValues final final = decl_stmt org.apache.lucene.util.Bits final final = return new public public return call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() public public call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() return > public public decl_stmt org.apache.lucene.util.BytesRefBuilder final final = new return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() : public public return public public return + + public public return new decl_stmt org.apache.lucene.util.mutable.MutableValueStr private final final = new public public return public public = call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() call BinaryDocValues.get() else return new protected protected return public public return public public return + + public public return public public return > BytesRefBuilder public public decl_stmt org.apache.lucene.util.BytesRefBuilder final final = new return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() : public public return public public return + + MutableValueStr public public return new decl_stmt org.apache.lucene.util.mutable.MutableValueStr private final final = new public public return public public = call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() call MutableValueStr.value() public public return public public = protected protected return public public return public public return + +