org.apache.solr.handler.dataimport java.text.NumberFormat import java.text.ParseException import java.text.ParsePosition import java.util.ArrayList import java.util.IllformedLocaleException import java.util.List import java.util.Locale import java.util.Map import class org.apache.solr.handler.dataimport.NumberFormatTransformer super super extends String String String String String String decl List String String Object String String List String Locale public public < for < : decl_stmt java.lang.String = if != decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if == = decl_stmt java.util.Locale = if != try = new catch throw new + + + decl_stmt java.lang.Object = decl_stmt java.lang.String = call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) if instanceof decl_stmt java.util.List < = decl_stmt java.util.List = new for : try call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) catch throw new + else if == || call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() continue try call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() catch throw new + return private private throws if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return return Number ParsePosition private private throws decl_stmt java.text.ParsePosition = new decl_stmt java.lang.Number = if call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() != throw new call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() call java.text.ParsePosition.getIndex() return