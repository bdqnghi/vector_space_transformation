org.apache.lucene.search.highlight java.io.IOException import java.util.HashSet import java.util.Iterator import org.apache.lucene.index.IndexReader import org.apache.lucene.index.MultiReader import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import class org.apache.lucene.search.highlight.QueryTermExtractor IndexSearcher public static final public static final return float int decl WeightedTerm int public static final public static final decl_stmt org.apache.lucene.search.highlight.WeightedTerm = decl_stmt int = for = < ++ try decl_stmt int = new decl_stmt float = / + + *= catch return decl HashSet public static final public static final decl_stmt java.util.HashSet < = new <> return call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() call decl HashSet.toArray() new public static final public static final return BoostQuery Term decl HashSet private static final private static final < try if instanceof decl_stmt org.apache.lucene.search.BoostQuery = call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() call org.apache.lucene.search.BoostQuery.getQuery() * call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() call org.apache.lucene.search.BoostQuery.getBoost() else if instanceof else decl_stmt java.util.HashSet < = new <> try call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) catch throw new for < = call decl HashSet.iterator() call decl HashSet.iterator() call decl HashSet.iterator() call decl HashSet.iterator() call decl HashSet.iterator() decl_stmt org.apache.lucene.index.Term = if == || call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() call org.apache.lucene.index.Term.field() new call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() call org.apache.lucene.index.Term.text() catch private static final private static final < for : if || !=