org.apache.lucene.spatial.vector org.apache.lucene.document.DoubleDocValuesField import org.apache.lucene.document.DoublePoint import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.LegacyDoubleField import org.apache.lucene.document.StoredField import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.IndexOptions import org.apache.lucene.queries.function.FunctionRangeQuery import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.LegacyNumericRangeQuery import org.apache.lucene.search.Query import org.apache.lucene.spatial.SpatialStrategy import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.query.UnsupportedSpatialOperation import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Circle import org.locationtech.spatial4j.shape.Point import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import class org.apache.lucene.spatial.vector.PointVectorStrategy super super extends String String FieldType String String boolean int FieldType boolean boolean FieldType public static public static return new public static public static return new return return public public if instanceof return throw new + decl Field int public public decl_stmt org.apache.solr.handler.dataimport.config.Field = new decl_stmt int = - if ++ = new ++ = new if ++ = new ++ = new if ++ = new ++ = new if != ++ = new ++ = new assert == - return public public return new Query decl BooleanQuery Shape Rectangle decl Builder Circle public public if ! throw new decl_stmt java.awt.Shape = if instanceof decl_stmt org.apache.lucene.geo.Rectangle = return new else if instanceof decl_stmt Circle = decl_stmt org.apache.lucene.geo.Rectangle = call Circle.getBoundingBox() call Circle.getBoundingBox() call Circle.getBoundingBox() call Circle.getBoundingBox() call Circle.getBoundingBox() decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt org.apache.lucene.queries.function.FunctionRangeQuery = new call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() call Circle.getCenter() call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() call Circle.getRadius() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() else throw new + + call Shape.getClass() call Shape.getClass() call Shape.getClass() call Shape.getClass() call Shape.getClass() + decl BooleanQuery decl Builder private private decl_stmt org.apache.lucene.util.fst.Builder = new decl_stmt Occur = if call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() else call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() private private if if == = if == = return else if != return call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() call org.apache.solr.schema.FieldType.numericPrecisionStep() throw new