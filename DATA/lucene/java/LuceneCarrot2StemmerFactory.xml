org.apache.solr.handler.clustering.carrot2 java.lang.invoke.MethodHandles import java.nio.CharBuffer import java.util.HashMap import org.apache.lucene.analysis.ar.ArabicNormalizer import org.apache.lucene.analysis.ar.ArabicStemmer import org.carrot2.core.LanguageCode import org.carrot2.text.linguistic.IStemmer import org.carrot2.text.linguistic.IStemmerFactory import org.carrot2.util.ReflectionUtils import org.slf4j.Logger import org.slf4j.LoggerFactory import org.tartarus.snowball.SnowballProgram import org.tartarus.snowball.ext.DanishStemmer import org.tartarus.snowball.ext.DutchStemmer import org.tartarus.snowball.ext.EnglishStemmer import org.tartarus.snowball.ext.FinnishStemmer import org.tartarus.snowball.ext.FrenchStemmer import org.tartarus.snowball.ext.GermanStemmer import org.tartarus.snowball.ext.HungarianStemmer import org.tartarus.snowball.ext.ItalianStemmer import org.tartarus.snowball.ext.NorwegianStemmer import org.tartarus.snowball.ext.PortugueseStemmer import org.tartarus.snowball.ext.RomanianStemmer import org.tartarus.snowball.ext.RussianStemmer import org.tartarus.snowball.ext.SpanishStemmer import org.tartarus.snowball.ext.SwedishStemmer import org.tartarus.snowball.ext.TurkishStemmer import class org.apache.solr.handler.clustering.carrot2.LuceneCarrot2StemmerFactory super super implements Logger public public switch case return case return default: return public public if return else return decl Class public static public static decl_stmt java.lang.Class final final final < extends extends = if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + return try return new call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() call decl Class.newInstance() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return int public public if > = new for = < ++ = decl_stmt int = = if != || ! return return private private assert == for = < ++ if != return return public static public static try return new catch return public public return