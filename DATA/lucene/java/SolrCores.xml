org.apache.solr.core com.google.common.collect.Lists import org.apache.solr.common.SolrException import org.apache.solr.common.util.ExecutorUtil import org.apache.solr.logging.MDCLoggingContext import org.apache.solr.util.DefaultSolrThreadFactory import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import java.util.TreeSet import java.util.concurrent.Callable import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ExecutorService import java.util.concurrent.Future import java.util.concurrent.TimeUnit import class org.apache.solr.core.SolrCores CoreContainer Logger decl Set decl Map decl List decl Map decl Map Object decl Set decl Map SolrCore protected protected final final final final if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = new < protected protected < if > synchronized decl_stmt org.apache.solr.core.SolrCore = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() return return SolrCore protected protected < if > synchronized decl_stmt org.apache.solr.core.SolrCore = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call org.apache.solr.core.SolrCore.getName() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() return return protected protected synchronized call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl Collection ExecutorService protected protected decl_stmt java.util.Collection < = new <> do call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() call decl Collection.clear() synchronized call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl Collection.addAll() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() decl_stmt java.util.concurrent.ExecutorService = new try for : call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) call java.util.concurrent.ExecutorService.submit(Runnable,T) try catch if instanceof throw finally return finally call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() > SolrCore protected protected decl_stmt org.apache.solr.core.SolrCore call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) synchronized = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return protected protected synchronized return call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl List < < decl_stmt java.util.List < = new <> synchronized call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() return decl Set < < decl_stmt java.util.Set < = new <> synchronized call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() return decl List < < decl_stmt java.util.List < = new <> synchronized for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() if == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() if == call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl Set public < public < decl_stmt java.util.Set < = new <> synchronized call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() return synchronized return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() SolrCore SolrCore protected protected synchronized decl_stmt org.apache.solr.core.SolrCore = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.solr.core.SolrCore = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) if == throw new + if == = call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) call org.apache.solr.core.CoreContainer.getCore(String) if == throw new + call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) call org.apache.solr.core.SolrCore.setName(String) SolrCore SolrCore protected protected synchronized decl_stmt org.apache.solr.core.SolrCore = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() decl_stmt org.apache.solr.core.SolrCore = = == : = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() = == : = call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() = == : call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() return SolrCore synchronized decl_stmt org.apache.solr.core.SolrCore = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != && call org.apache.solr.core.SolrCore.open() call org.apache.solr.core.SolrCore.open() call org.apache.solr.core.SolrCore.open() call org.apache.solr.core.SolrCore.open() call org.apache.solr.core.SolrCore.open() return protected protected synchronized return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() protected protected synchronized if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() for : if return return return protected protected synchronized if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return return CoreDescriptor protected protected synchronized decl_stmt org.apache.solr.core.CoreDescriptor = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == return return new boolean protected protected synchronized decl_stmt boolean do = call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() if ! for : if = break if call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() return if try call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) catch return if ! call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() if ! call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return return protected protected synchronized if ! call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() call Object.notifyAll() protected protected return protected protected synchronized for : if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() return return protected protected synchronized call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() public public synchronized if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return CoreDescriptor decl List public < public < decl_stmt java.util.List < = synchronized for : decl_stmt org.apache.solr.core.CoreDescriptor = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public synchronized call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() public public synchronized call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() call decl Set.remove() long long public public decl_stmt long = decl_stmt long = + synchronized while ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() try call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) catch if >= call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() break long long public public decl_stmt long = decl_stmt long = + synchronized while try call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) call java.lang.Object.wait(long,int) catch if >= call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() break public public if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() return return