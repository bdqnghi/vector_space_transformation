org.apache.solr.spelling java.io.IOException import java.io.InputStreamReader import java.lang.invoke.MethodHandles import java.util.List import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LogByteSizeMergePolicy import org.apache.lucene.index.LogMergePolicy import org.apache.solr.schema.IndexSchema import org.slf4j.Logger import org.slf4j.LoggerFactory import org.apache.lucene.document.Document import org.apache.lucene.document.TextField import org.apache.lucene.search.spell.HighFrequencyDictionary import org.apache.lucene.search.spell.PlainTextDictionary import org.apache.lucene.store.RAMDirectory import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrCore import org.apache.solr.schema.FieldType import org.apache.solr.search.SolrIndexSearcher import class org.apache.solr.spelling.FileBasedSpellChecker super super extends String String Logger String public public = return public public throws new protected protected return RAMDirectory Document IndexWriter decl List LogMergePolicy IndexSchema FieldType private private try decl_stmt org.apache.solr.schema.IndexSchema = == : if != && call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) call org.apache.solr.schema.IndexSchema.getFieldTypeNoEx(String) != decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() call org.apache.solr.schema.IndexSchema.getFieldTypes() decl_stmt org.apache.lucene.store.RAMDirectory = new decl_stmt org.apache.lucene.index.LogMergePolicy = new call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) call org.apache.lucene.index.LogMergePolicy.setMergeFactor(int) decl_stmt org.apache.lucene.index.IndexWriter = new new call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() call org.apache.solr.schema.FieldType.getIndexAnalyzer() decl_stmt java.util.List < = for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.forceMerge(int) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() = new else if == = new else = new new catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() public public return