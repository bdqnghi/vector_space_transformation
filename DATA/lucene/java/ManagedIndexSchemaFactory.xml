org.apache.solr.schema java.io.ByteArrayInputStream import java.io.File import java.io.IOException import java.io.InputStream import java.lang.invoke.MethodHandles import org.apache.commons.io.IOUtils import org.apache.solr.cloud.ZkController import org.apache.solr.cloud.ZkSolrResourceLoader import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkCmdExecutor import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.CloseHook import org.apache.solr.core.CoreContainer import org.apache.solr.core.SolrConfig import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrResourceLoader import org.apache.solr.util.SystemIdResolver import org.apache.solr.util.plugin.SolrCoreAware import org.apache.zookeeper.KeeperException import org.apache.zookeeper.data.Stat import org.slf4j.Logger import org.slf4j.LoggerFactory import org.xml.sax.InputSource import class org.apache.solr.schema.ManagedIndexSchemaFactory super super extends super implements SolrCore Logger String String Object SolrResourceLoader ZkIndexSchemaReader String boolean String String String ManagedIndexSchema SolrConfig String boolean public public return public public return String SolrParams public public decl_stmt org.apache.solr.common.params.SolrParams = = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.String = + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new if > decl_stmt java.lang.String = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new Stat int ZkSolrResourceLoader String InputSource String SolrZkClient InputStream decl byte public public = = = call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() decl_stmt java.io.InputStream = if == = decl_stmt int = - if ! instanceof = else decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader final final = decl_stmt org.apache.solr.common.cloud.SolrZkClient final final = call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() decl_stmt java.lang.String final final = call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() + + decl_stmt Stat = new try decl_stmt byte = call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) = call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() = new = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + catch decl_stmt java.lang.String = + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new if == try = call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) = = catch try decl_stmt byte = call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) call org.apache.solr.common.cloud.SolrZkClient.getData(String,Watcher,Stat,boolean) = call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() call Stat.getVersion() = new catch if instanceof decl_stmt java.lang.String final final = + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() try = new catch decl_stmt java.lang.String final final = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() if return String InputStream private private decl_stmt java.io.InputStream = try = call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) = catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + if == try = call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) = = catch decl_stmt java.lang.String final final = + + + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() throw new return String InputStream ZkSolrResourceLoader boolean SolrResourceLoader private private if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt boolean = decl_stmt org.apache.solr.core.SolrResourceLoader = call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() if instanceof decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader = decl_stmt java.lang.String = call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() + + try = call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + else decl_stmt java.io.InputStream = try = call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) call org.apache.solr.core.SolrResourceLoader.openSchema(String) if != = catch finally if call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + File File SolrResourceLoader private private decl_stmt org.apache.solr.core.SolrResourceLoader = call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() if instanceof else call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + else decl_stmt File final final = if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + else decl_stmt File = new + if call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() call File.renameTo() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + call File.toString() call File.toString() call File.toString() call File.toString() call File.toString() + + call File.toString() call File.toString() call File.toString() call File.toString() call File.toString() + String private private decl_stmt java.lang.String = call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() call SolrConfig.getResourceLoader() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) return return new ZkCmdExecutor ZkSolrResourceLoader decl byte String String String ZkController private private call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchemaToZooKeeper(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchemaToZooKeeper(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchemaToZooKeeper(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchemaToZooKeeper(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchemaToZooKeeper(boolean) if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + else decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader = decl_stmt java.lang.String final final = call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() call org.apache.solr.cloud.ZkSolrResourceLoader.getConfigSetZkPath() + + try decl_stmt org.apache.solr.cloud.ZkController = call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() decl_stmt org.apache.solr.common.cloud.ZkCmdExecutor = new call org.apache.solr.cloud.ZkController.getClientTimeout() call org.apache.solr.cloud.ZkController.getClientTimeout() call org.apache.solr.cloud.ZkController.getClientTimeout() call org.apache.solr.cloud.ZkController.getClientTimeout() call org.apache.solr.cloud.ZkController.getClientTimeout() if call org.apache.solr.cloud.ZkController.pathExists(String) call org.apache.solr.cloud.ZkController.pathExists(String) call org.apache.solr.cloud.ZkController.pathExists(String) call org.apache.solr.cloud.ZkController.pathExists(String) call org.apache.solr.cloud.ZkController.pathExists(String) decl_stmt byte = call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() decl_stmt java.lang.String final final = + call org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(String,SolrZkClient) call org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(String,SolrZkClient) call org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(String,SolrZkClient) call org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(String,SolrZkClient) call org.apache.solr.common.cloud.ZkCmdExecutor.ensureExists(String,SolrZkClient) call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() call org.apache.solr.cloud.ZkController.getZkClient() - call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call ManagedIndexSchema.setResourceName() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + catch if instanceof decl_stmt java.lang.String final final = + call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() public public return ZkSolrResourceLoader public public = if instanceof = new decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader = call org.apache.solr.cloud.ZkSolrResourceLoader.setZkIndexSchemaReader(ZkIndexSchemaReader) call org.apache.solr.cloud.ZkSolrResourceLoader.setZkIndexSchemaReader(ZkIndexSchemaReader) call org.apache.solr.cloud.ZkSolrResourceLoader.setZkIndexSchemaReader(ZkIndexSchemaReader) call org.apache.solr.cloud.ZkSolrResourceLoader.setZkIndexSchemaReader(ZkIndexSchemaReader) call org.apache.solr.cloud.ZkSolrResourceLoader.setZkIndexSchemaReader(ZkIndexSchemaReader) else = public public return public public = call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) public public return public public return