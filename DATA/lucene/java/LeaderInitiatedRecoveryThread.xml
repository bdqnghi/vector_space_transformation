org.apache.solr.cloud org.apache.http.NoHttpResponseException import org.apache.http.conn.ConnectTimeoutException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CoreAdminRequest.RequestRecovery import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction import org.apache.solr.common.util.Utils import org.apache.solr.core.CoreContainer import org.apache.solr.core.CoreDescriptor import org.apache.zookeeper.KeeperException import org.apache.solr.util.RTimer import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.invoke.MethodHandles import java.net.ConnectException import java.net.SocketException import java.util.List import class org.apache.solr.cloud.LeaderInitiatedRecoveryThread super super extends Logger int String ZkCoreNodeProps String CoreContainer CoreDescriptor ZkController boolean String String RTimer String String public public decl_stmt org.apache.solr.util.RTimer = new decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() decl_stmt java.lang.String final final = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() if ! call org.apache.solr.cloud.ZkController.isReplicaInRecoveryHandling(String) call org.apache.solr.cloud.ZkController.isReplicaInRecoveryHandling(String) call org.apache.solr.cloud.ZkController.isReplicaInRecoveryHandling(String) call org.apache.solr.cloud.ZkController.isReplicaInRecoveryHandling(String) call org.apache.solr.cloud.ZkController.isReplicaInRecoveryHandling(String) throw new + + decl_stmt boolean = if try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + if instanceof throw else throw new finally call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) else call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() boolean boolean ZkNodeProps Throwable public public decl_stmt boolean = decl_stmt boolean = if call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + = catch decl_stmt java.lang.Throwable = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() + + if instanceof || instanceof || instanceof = = else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + = = try if || decl_stmt org.apache.solr.common.cloud.ZkNodeProps = new call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call org.apache.solr.cloud.ZkController.getOverseerJobQueue() call org.apache.solr.cloud.ZkController.getOverseerJobQueue() call org.apache.solr.cloud.ZkController.getOverseerJobQueue() call org.apache.solr.cloud.ZkController.getOverseerJobQueue() call org.apache.solr.cloud.ZkController.getOverseerJobQueue() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return protected protected call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) call org.apache.solr.cloud.ZkController.updateLeaderInitiatedRecoveryState(String,String,String,Replica,State,CoreDescriptor,boolean) RequestRecovery String String String Throwable ZkStateReader String String String String int decl List boolean long decl Replica String decl State boolean String protected protected throws decl_stmt int = decl_stmt long = decl_stmt boolean = decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getBaseUrl() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeName() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreName() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() call org.apache.solr.common.cloud.ZkCoreNodeProps.getNodeProps() decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + * / + decl_stmt RequestRecovery = new call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() while && ++ <= if > call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + try = new try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + = catch decl_stmt java.lang.Throwable = decl_stmt boolean = instanceof || instanceof || instanceof || instanceof + if ! = if try catch if call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call org.apache.solr.core.CoreContainer.isShutDown() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + = break decl_stmt org.apache.solr.common.cloud.ZkStateReader = call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() if ! call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + = break decl_stmt java.lang.String = call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() if != && != decl_stmt java.lang.String = try = call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() call org.apache.solr.cloud.ZkController.getZkStateReader() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + + + + + + if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + + + + = break if ! call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + + + = break if != && != try decl_stmt sun.security.provider.certpath.State final final final final final = call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryState(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryState(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryState(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryState(String,String,String) call org.apache.solr.cloud.ZkController.getLeaderInitiatedRecoveryState(String,String,String) if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + + + = break if == = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + else decl_stmt java.lang.String = call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) decl_stmt java.util.List < = call org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(String,String,String) call org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(String,String,String) call org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(String,String,String) call org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(String,String,String) call org.apache.solr.common.cloud.ZkStateReader.getReplicaProps(String,String,String) if != && call String.size() call String.size() call String.size() call String.size() call String.size() > for : decl_stmt org.apache.solr.common.cloud.Replica final final = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call decl List.getName() call decl List.getName() call decl List.getName() call decl List.getName() call decl List.getName() if call decl List.getState() call decl List.getState() call decl List.getState() call decl List.getState() call decl List.getState() == if == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + call String.get() call String.get() call String.get() call String.get() call String.get() break catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) call org.apache.solr.cloud.ZkController.removeReplicaFromLeaderInitiatedRecoveryHandling(String) if call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + * / + + +