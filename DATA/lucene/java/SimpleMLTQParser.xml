org.apache.solr.search.mlt org.apache.lucene.index.Term import org.apache.lucene.queries.mlt.MoreLikeThis import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.Query import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.LegacyNumericUtils import org.apache.solr.common.SolrException import org.apache.solr.common.StringUtils import org.apache.solr.common.params.SolrParams import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.SchemaField import org.apache.solr.search.QParser import org.apache.solr.search.QueryParsing import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.util.SolrPluginUtils import java.io.IOException import java.util.ArrayList import java.util.HashMap import java.util.Map import java.util.regex.Pattern import class org.apache.solr.search.mlt.SimpleMLTQParser super super extends Pattern SolrIndexSearcher BooleanQuery decl ScoreDoc decl ArrayList Query decl Map decl Map String decl Builder Query float MoreLikeThis decl String String TopDocs decl BooleanQuery BoostQuery decl String Query Float public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt org.apache.lucene.search.Query = decl_stmt java.util.Map < = new <> try decl_stmt org.apache.lucene.search.TopDocs = call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) if != throw new + + + decl_stmt org.apache.lucene.search.ScoreDoc = decl_stmt org.apache.lucene.queries.mlt.MoreLikeThis = new if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMinWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinWordLen(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxWordLen(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxWordLen(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxNumTokensParsed(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxNumTokensParsed(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxNumTokensParsed(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxNumTokensParsed(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxNumTokensParsed(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxDocFreq(int) if != call org.apache.lucene.queries.mlt.MoreLikeThis.setBoost(boolean) call org.apache.lucene.queries.mlt.MoreLikeThis.setBoost(boolean) call org.apache.lucene.queries.mlt.MoreLikeThis.setBoost(boolean) call org.apache.lucene.queries.mlt.MoreLikeThis.setBoost(boolean) call org.apache.lucene.queries.mlt.MoreLikeThis.setBoost(boolean) = decl_stmt java.util.ArrayList < = new <> if != for : if ! decl_stmt java.lang.String = call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) call java.util.regex.Pattern.split(CharSequence,int) for : if ! call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() else decl_stmt java.util.Map < = for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() && call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() if call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() < throw new call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() call decl ArrayList.toArray() new call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call decl ArrayList.size() call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) decl_stmt org.apache.lucene.search.BooleanQuery = if call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() > decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.getMinimumNumberShouldMatch() for : decl_stmt org.apache.lucene.search.Query = decl_stmt float = if instanceof decl_stmt org.apache.lucene.search.BoostQuery = = call float.getQuery() call float.getQuery() call float.getQuery() call float.getQuery() call float.getQuery() = call float.getBoost() call float.getBoost() call float.getBoost() call float.getBoost() call float.getBoost() decl_stmt java.lang.Float = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = != new * : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt org.apache.lucene.util.fst.Builder = new call Float.setDisableCoord() call Float.setDisableCoord() call Float.setDisableCoord() call Float.setDisableCoord() call Float.setDisableCoord() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() call Float.add() return call Float.build() call Float.build() call Float.build() call Float.build() call Float.build() catch throw new + private private return new != : new BytesRefBuilder private private decl_stmt org.apache.lucene.util.BytesRefBuilder = new call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) return new