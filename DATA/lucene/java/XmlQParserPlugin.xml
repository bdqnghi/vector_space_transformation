org.apache.solr.search java.io.ByteArrayInputStream import java.nio.charset.StandardCharsets import org.apache.lucene.analysis.Analyzer import org.apache.lucene.queryparser.xml.ParserException import org.apache.lucene.search.Query import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.IndexSchema import class org.apache.solr.search.XmlQParserPlugin super super extends String String String SolrCoreParser Analyzer IndexSchema public public throws decl_stmt java.lang.String final final = if == || call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() return decl_stmt org.apache.solr.schema.IndexSchema final final = decl_stmt java.lang.String final final = decl_stmt org.apache.lucene.analysis.Analyzer final final = call org.apache.solr.schema.IndexSchema.getQueryAnalyzer() call org.apache.solr.schema.IndexSchema.getQueryAnalyzer() call org.apache.solr.schema.IndexSchema.getQueryAnalyzer() call org.apache.solr.schema.IndexSchema.getQueryAnalyzer() call org.apache.solr.schema.IndexSchema.getQueryAnalyzer() decl_stmt SolrCoreParser final final = new try return call SolrCoreParser.parse() call SolrCoreParser.parse() call SolrCoreParser.parse() call SolrCoreParser.parse() call SolrCoreParser.parse() new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) catch throw new + + public public return new