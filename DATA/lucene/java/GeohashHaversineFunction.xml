org.apache.solr.search.function.distance org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.distance.GeodesicSphereDistCalc import org.locationtech.spatial4j.io.GeohashUtils import org.locationtech.spatial4j.shape.Point import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.DoubleDocValues import org.apache.lucene.search.IndexSearcher import java.io.IOException import java.util.Map import class org.apache.solr.search.function.distance.GeohashHaversineFunction super super extends ValueSource SpatialContext double protected protected return FunctionValues FunctionValues StringBuilder public public throws decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call SpatialContext.getValues() call SpatialContext.getValues() call SpatialContext.getValues() call SpatialContext.getValues() call SpatialContext.getValues() return new public public return public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() String Point String double Point protected protected decl_stmt double = decl_stmt java.lang.String = decl_stmt java.lang.String = if != && != && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) == decl_stmt java.awt.Point = decl_stmt java.awt.Point = = call double.getDistCalc() call double.getDistCalc() call double.getDistCalc() call double.getDistCalc() call double.getDistCalc() * else if == || == = return public public throws call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call SpatialContext.createWeight() call SpatialContext.createWeight() call SpatialContext.createWeight() call SpatialContext.createWeight() call SpatialContext.createWeight() GeohashHaversineFunction public public if != return decl_stmt org.apache.solr.search.function.distance.GeohashHaversineFunction = return call GeohashHaversineFunction.name() call GeohashHaversineFunction.name() call GeohashHaversineFunction.name() call GeohashHaversineFunction.name() call GeohashHaversineFunction.name() && call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() call ValueSource.equals() && call SpatialContext.equals() call SpatialContext.equals() call SpatialContext.equals() call SpatialContext.equals() call SpatialContext.equals() && == int long public public decl_stmt int = call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() call ValueSource.hashCode() = * + call SpatialContext.hashCode() call SpatialContext.hashCode() call SpatialContext.hashCode() call SpatialContext.hashCode() call SpatialContext.hashCode() = * + decl_stmt long = = * + ^ >>> return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()