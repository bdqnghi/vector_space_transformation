org.apache.lucene.queries.function.valuesource java.io.IOException import java.util.Map import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.Fields import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.docvalues.IntDocValues import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.BytesRef import class org.apache.lucene.queries.function.valuesource.TermFreqValueSource super super extends public public return int Terms TermsEnum Fields int PostingsEnum public public throws decl_stmt Fields = decl_stmt org.apache.lucene.index.Terms final final = call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() call Fields.terms() return new decl_stmt org.apache.lucene.index.PostingsEnum decl_stmt int decl_stmt int = - public public throws if != decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) else = else = if == = new public public return public public throws return - public public throws return - public public throws return - public public throws throw new public public return public public return public public return public public return = - public public try if < = if < = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() if > return return call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() catch throw new + + + TermsEnum public public throws if != decl_stmt org.apache.lucene.index.TermsEnum final final = if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) else = else = if == = new public public return public public throws return - public public throws return - public public throws return - public public throws throw new public public return public public return public public return public public return = - public public return public public throws return - public public throws return - public public throws return - public public throws throw new public public return public public return public public return public public return public public try if < = if < = if > return return catch throw new + + +