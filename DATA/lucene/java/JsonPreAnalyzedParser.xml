org.apache.solr.schema java.io.IOException import java.io.Reader import java.lang.invoke.MethodHandles import java.util.LinkedHashMap import java.util.Iterator import java.util.LinkedList import java.util.List import java.util.Map import java.util.Map.Entry import java.util.TreeMap import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.FlagsAttribute import org.apache.lucene.analysis.tokenattributes.OffsetAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.analysis.tokenattributes.TypeAttribute import org.apache.lucene.document.Field import org.apache.lucene.util.Attribute import org.apache.lucene.util.AttributeSource import org.apache.lucene.util.AttributeSource.State import org.apache.lucene.util.BytesRef import org.noggit.JSONUtil import org.noggit.JSONWriter import org.noggit.ObjectBuilder import org.apache.solr.common.util.Base64 import org.apache.solr.schema.PreAnalyzedField.ParseResult import org.apache.solr.schema.PreAnalyzedField.PreAnalyzedParser import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.schema.JsonPreAnalyzedParser super super implements String String Logger String String String String String String String String String String TypeAttribute int OffsetAttribute int String ParseResult int decl Map State String CharTermAttribute String decl Map boolean PositionIncrementAttribute decl char int decl List String int decl byte Object int Object PayloadAttribute FlagsAttribute String StringBuilder boolean public public throws decl_stmt ParseResult = new decl_stmt java.lang.StringBuilder = new decl_stmt char = new decl_stmt int while = > call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == return decl_stmt java.lang.Object = if ! instanceof throw new + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() + decl_stmt java.util.Map < = < decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == throw new if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) throw new + + + if call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() && call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() throw new = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt java.lang.String = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != decl_stmt byte = = decl_stmt java.util.List < = < call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == return decl_stmt int = decl_stmt int = for : = + decl_stmt java.util.Map < = < decl_stmt boolean = decl_stmt boolean = decl_stmt int = - for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = decl_stmt java.lang.String = call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.append(char) = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.Object = = if instanceof = else try = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + = else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = decl_stmt java.lang.Object = if instanceof = else try = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + = else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.Object = decl_stmt int = if instanceof = else try = catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + decl_stmt org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute = call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) call org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute.setPositionIncrement(int) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > decl_stmt byte = decl_stmt org.apache.lucene.analysis.tokenattributes.PayloadAttribute = if != && > call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() call PayloadAttribute.setPayload() new else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) try decl_stmt int = decl_stmt org.apache.lucene.analysis.tokenattributes.FlagsAttribute = call org.apache.lucene.analysis.tokenattributes.FlagsAttribute.setFlags(int) call org.apache.lucene.analysis.tokenattributes.FlagsAttribute.setFlags(int) call org.apache.lucene.analysis.tokenattributes.FlagsAttribute.setFlags(int) call org.apache.lucene.analysis.tokenattributes.FlagsAttribute.setFlags(int) call org.apache.lucene.analysis.tokenattributes.FlagsAttribute.setFlags(int) catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt org.apache.lucene.analysis.tokenattributes.TypeAttribute = call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) call org.apache.lucene.analysis.tokenattributes.TypeAttribute.setType(String) else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + decl_stmt org.apache.lucene.analysis.tokenattributes.OffsetAttribute = if ! && > - = + call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) call org.apache.lucene.analysis.tokenattributes.OffsetAttribute.setOffset(int,int) if ! = + decl_stmt sun.security.provider.certpath.State = call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call ParseResult.states() call State.clone() call State.clone() call State.clone() call State.clone() call State.clone() return decl Map String String String decl Class decl Iterator BytesRef TokenStream decl List decl Map Attribute CharTermAttribute BytesRef TermToBytesRefAttribute String public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if decl_stmt java.lang.String = if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.util.BytesRef = if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.analysis.TokenStream = if != decl_stmt java.util.List < < = new <> while call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() call TokenStream.incrementToken() decl_stmt java.util.Iterator < < extends extends = call TokenStream.getAttributeClassesIterator() call TokenStream.getAttributeClassesIterator() call TokenStream.getAttributeClassesIterator() call TokenStream.getAttributeClassesIterator() call TokenStream.getAttributeClassesIterator() decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Map < = new <> while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.Class < extends extends = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() decl_stmt javax.management.Attribute = call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() call TokenStream.getAttribute() if == continue if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() decl_stmt org.apache.lucene.analysis.tokenattributes.CharTermAttribute = = new call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call org.apache.lucene.analysis.tokenattributes.CharTermAttribute.buffer() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() call CharTermAttribute.length() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute = = call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() decl_stmt org.apache.lucene.util.BytesRef = if != && > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call javax.management.Attribute.toString() call javax.management.Attribute.toString() call javax.management.Attribute.toString() call javax.management.Attribute.toString() call javax.management.Attribute.toString() decl_stmt java.lang.String = if != = else = if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return -