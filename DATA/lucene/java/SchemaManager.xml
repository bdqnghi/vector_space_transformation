org.apache.solr.schema org.apache.solr.cloud.ZkController import org.apache.solr.cloud.ZkSolrResourceLoader import org.apache.solr.common.SolrException import org.apache.solr.core.CoreDescriptor import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrResourceLoader import org.apache.solr.request.SolrQueryRequest import org.apache.solr.rest.BaseSolrResource import org.apache.solr.util.CommandOperation import org.apache.zookeeper.KeeperException import org.slf4j.Logger import org.slf4j.LoggerFactory import org.xml.sax.InputSource import java.io.IOException import java.io.InputStream import java.io.Reader import java.io.StringWriter import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.TimeUnit import static static java.util.Collections.singleton import static static java.util.Collections.singletonList import static static java.util.Collections.singletonMap import static static org.apache.solr.schema.FieldType.CLASS_NAME import static static org.apache.solr.schema.IndexSchema.DESTINATION import static static org.apache.solr.schema.IndexSchema.MAX_CHARS import static static org.apache.solr.schema.IndexSchema.NAME import static static org.apache.solr.schema.IndexSchema.SOURCE import static static org.apache.solr.schema.IndexSchema.TYPE import class org.apache.solr.schema.SchemaManager ManagedIndexSchema SolrQueryRequest Logger String List IndexSchema decl List public public throws decl_stmt java.util.List < try = catch decl_stmt java.lang.String = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return + + decl_stmt java.util.List = if ! call List.isEmpty() call List.isEmpty() call List.isEmpty() call List.isEmpty() call List.isEmpty() return decl_stmt org.apache.solr.schema.IndexSchema = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() if ! instanceof return synchronized call org.apache.solr.schema.IndexSchema.getSchemaUpdateLock() call org.apache.solr.schema.IndexSchema.getSchemaUpdateLock() call org.apache.solr.schema.IndexSchema.getSchemaUpdateLock() call org.apache.solr.schema.IndexSchema.getSchemaUpdateLock() call org.apache.solr.schema.IndexSchema.getSchemaUpdateLock() return SolrCore OpType int StringWriter ZkSolrResourceLoader SolrResourceLoader String long List long private private < throws decl_stmt int = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() - decl_stmt long = decl_stmt long = > + * * : decl_stmt org.apache.solr.core.SolrCore = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() while < = for : decl_stmt OpType = if != call OpType.perform() call OpType.perform() call OpType.perform() call OpType.perform() call OpType.perform() else + decl_stmt java.util.List = if ! call List.isEmpty() call List.isEmpty() call List.isEmpty() call List.isEmpty() call List.isEmpty() return decl_stmt org.apache.solr.core.SolrResourceLoader = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() if instanceof decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader = decl_stmt StringWriter = new try call ManagedIndexSchema.persist() call ManagedIndexSchema.persist() call ManagedIndexSchema.persist() call ManagedIndexSchema.persist() call ManagedIndexSchema.persist() catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) throw new try call org.apache.solr.schema.ManagedIndexSchema.getSchemaZkVersion() call org.apache.solr.schema.ManagedIndexSchema.getSchemaZkVersion() call org.apache.solr.schema.ManagedIndexSchema.getSchemaZkVersion() call org.apache.solr.schema.ManagedIndexSchema.getSchemaZkVersion() call org.apache.solr.schema.ManagedIndexSchema.getSchemaZkVersion() call ManagedIndexSchema.getResourceName() call ManagedIndexSchema.getResourceName() call ManagedIndexSchema.getResourceName() call ManagedIndexSchema.getResourceName() call ManagedIndexSchema.getResourceName() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() return catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch decl_stmt java.lang.String = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return + else try call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.schema.ManagedIndexSchema.persistManagedSchema(boolean) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) call org.apache.solr.core.SolrCore.setLatestSchema(IndexSchema) return catch decl_stmt java.lang.String = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() catch decl_stmt java.lang.String = call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return + return ZkSolrResourceLoader long String CoreDescriptor private private if > && call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() instanceof decl_stmt org.apache.solr.core.CoreDescriptor = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt java.lang.String = call org.apache.solr.core.CoreDescriptor.getCollectionName() call org.apache.solr.core.CoreDescriptor.getCollectionName() call org.apache.solr.core.CoreDescriptor.getCollectionName() call org.apache.solr.core.CoreDescriptor.getCollectionName() call org.apache.solr.core.CoreDescriptor.getCollectionName() if != decl_stmt org.apache.solr.cloud.ZkSolrResourceLoader = call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() call ManagedIndexSchema.getResourceLoader() decl_stmt long = - - if <= throw new call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.core.CoreDescriptor.getCloudDescriptor() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() call org.apache.solr.cloud.ZkSolrResourceLoader.getZkController() int String String FieldType public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return try decl_stmt org.apache.solr.schema.FieldType = = return catch return String decl List String int public public decl_stmt java.lang.String = decl_stmt java.util.List < = decl_stmt int = decl_stmt java.lang.String = if != try = catch + + + + + if < + + + if return if ! + + + + + + return try = return catch return FieldType String String SchemaField public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return decl_stmt org.apache.solr.schema.FieldType = if == + + return try decl_stmt org.apache.solr.schema.SchemaField = = return catch return FieldType String String SchemaField public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return decl_stmt org.apache.solr.schema.FieldType = if == + + return try decl_stmt org.apache.solr.schema.SchemaField = = return catch return String public public decl_stmt java.lang.String = if return if ! + + return try = return catch return String decl List public public decl_stmt java.lang.String = decl_stmt java.util.List < = if return if ! + + + + return try = return catch return String public public decl_stmt java.lang.String = if return if ! + + return try = return catch return String public public decl_stmt java.lang.String = if return if ! + + return try = return catch return String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return try = return catch return FieldType String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return decl_stmt org.apache.solr.schema.FieldType = if == + + return try = return catch return FieldType String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = if return decl_stmt org.apache.solr.schema.FieldType = if == + + return try = return catch return public static public static return StringBuilder Throwable public static public static decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.Throwable = for = < ++ call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() if call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() == || call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() == break = call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() SolrResourceLoader int InputStream public public throws decl_stmt org.apache.solr.core.SolrResourceLoader = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() if instanceof decl_stmt java.io.InputStream = call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call org.apache.solr.core.SolrResourceLoader.openResource(String) call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() if instanceof decl_stmt int = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return new call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() new call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() else return call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() else return call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore()