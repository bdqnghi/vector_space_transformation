org.apache.lucene.uninverting java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.List import org.apache.lucene.codecs.PostingsFormat import org.apache.lucene.index.DocValues import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.LeafReader import org.apache.lucene.index.SortedSetDocValues import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.Accountable import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.PagedBytes import org.apache.lucene.util.StringHelper import class org.apache.lucene.uninverting.DocTermOrds super super implements int decl int int long int long int BytesRef decl BytesRef boolean String int long int int int decl byte int int PostingsEnum long public public if != return decl_stmt long = * + if != += * if != for : if != += = return public public throws assert != if == return else return new public public return public public return == protected protected throws protected protected throws decl byte long int decl byte decl int int int int PagedBytes TermsEnum BytesRef decl List int Terms int int int int int long int int BytesRef FieldInfo int decl byte int int decl byte decl int int BytesRef decl byte long decl byte protected protected final final final final throws decl_stmt org.apache.lucene.index.FieldInfo final final = if && != && call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() != throw new + + + call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() call org.apache.lucene.index.FieldInfo.getDocValuesType() decl_stmt long final final = = == : decl_stmt int final final = decl_stmt int final final final = new decl_stmt int final final final = new decl_stmt byte final final final = new decl_stmt org.apache.lucene.index.Terms final final = if == return decl_stmt org.apache.lucene.index.TermsEnum final final = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() decl_stmt org.apache.lucene.util.BytesRef final final = != : new if call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) == return decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.util.PagedBytes final final = new decl_stmt byte = new decl_stmt int = = for decl_stmt org.apache.lucene.util.BytesRef final final = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() if == || != && ! break if & == += decl_stmt org.apache.lucene.util.BytesRef = new call org.apache.lucene.util.PagedBytes.copy(IndexInput,long) call org.apache.lucene.util.PagedBytes.copy(IndexInput,long) call org.apache.lucene.util.PagedBytes.copy(IndexInput,long) call org.apache.lucene.util.PagedBytes.copy(IndexInput,long) call org.apache.lucene.util.PagedBytes.copy(IndexInput,long) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt int final final = call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() if <= = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt int = for decl_stmt int = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if == break ++ ++ decl_stmt int = - + = decl_stmt int = if & == decl_stmt int = >>> decl_stmt int = decl_stmt byte = decl_stmt int = + if > decl_stmt int = + & decl_stmt byte = new = = = = << | else decl_stmt int if == = else if & == = else if & == = else if & == = else = decl_stmt int = if <= for = < ++ |= & << << = else for = < ++ = byte >>>= = << | = = new ++ if call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() == break = decl_stmt long = if == = else = for = < ++ decl_stmt byte = decl_stmt int = if != = else = new for = << < += << decl_stmt int = + << for = < ++ decl_stmt int = if & == decl_stmt int = >>> = << | if & != throw new + decl_stmt byte = = if <= + decl_stmt int = while <= + <<= decl_stmt byte = new = += + if < decl_stmt byte = new = = if << > break = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt long = = - = - private static private static if & << * == return if & << * == return if & << * == return if & << * == return return int private static private static decl_stmt int = >>> * if != ++ = | = >>> * if != ++ = | = >>> * if != ++ = | = >>> * if != ++ = | ++ = & return public public throws return public public return public public throws if ++ < = if == = return return public public throws return public public throws return public public return + int decl TermsEnum public public throws if != && return decl_stmt int = if >= decl_stmt SeekStatus = assert == = << assert != return = - - if == decl_stmt SeekStatus = assert == = assert != return -- if >> == && != && <= else decl_stmt SeekStatus = assert == = << assert != while != && < if == return else if == return else return BytesRef decl TermsEnum decl SeekStatus int int public public throws decl_stmt int = - - if < || || decl_stmt int final final = >>> decl_stmt org.apache.lucene.util.BytesRef final final = = << = - decl_stmt SeekStatus final final final final final = assert == else while -- >= decl_stmt org.apache.lucene.util.BytesRef = if == assert return ++ assert != private private throws = if != && ! = return public public throws return public public throws if return else return new public public while == if < return else = = return ++ byte int int int decl_stmt int = if == decl_stmt int = decl_stmt int = for = << | & if & == if == break += - ++ = + = >>>= else for decl_stmt int = for decl_stmt byte = ++ = << | & if & == break if == break += - ++ = + if == break return int int public public = decl_stmt int final final = if & == = >>> decl_stmt int = >>> & = else = = = = public public try return int catch throw new public public return public public try switch case assert >= return case assert >= return - - default: return - - catch throw new public public try return catch throw new