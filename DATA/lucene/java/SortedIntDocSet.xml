org.apache.solr.search java.util.Collection import java.util.Collections import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.DocIdSet import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.util.Accountable import org.apache.lucene.util.Bits import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.RamUsageEstimator import class org.apache.solr.search.SortedIntDocSet super super extends decl int decl int SortedIntDocSet long public public return public public return decl int public static public static if == return decl_stmt int = new return int int int public static public static if <= return - decl_stmt int = decl_stmt int = + for = + < ++ decl_stmt int = if <= for = - > -- if < return + return = return - int int int int int int int int int int public static public static decl_stmt int final final = decl_stmt int final final = decl_stmt int = / + = + decl_stmt int = decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int = decl_stmt int = decl_stmt int = + if < if >= = else = + = + if < if >= = else = + while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else ++ = + break return int int int int int int int int int public static public static decl_stmt int final final = decl_stmt int final final = decl_stmt int = / + = + decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int = decl_stmt int = decl_stmt int = + if < if >= = else = + = + if < if >= = else = + while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else return return decl int decl int decl int int int int public public if ! instanceof decl_stmt int = for = < ++ if ++ return decl_stmt int = decl_stmt int final final final = < : decl_stmt int final final final = < : if == return if >> >= return decl_stmt int = decl_stmt int = = decl_stmt int = = for if > if ++ >= break = else if < if ++ >= break = else ++ if ++ >= break = if ++ >= break = return decl int int decl int decl int int public public if ! instanceof for = < ++ if return return decl_stmt int = decl_stmt int final final final = < : decl_stmt int final final final = < : if == return if >> >= return decl_stmt int = = decl_stmt int = = for if > if ++ >= break = else if < if ++ >= break = else return return int int decl int int int public static public static if > decl_stmt int = = = decl_stmt int = = = if == return if >> >= return decl_stmt int = decl_stmt int = = decl_stmt int = = for if > if ++ >= break = else if < if ++ >= break = else ++ = if ++ >= break = if ++ >= break = return int int int int int int int int int protected static protected static decl_stmt int = / + = + decl_stmt int = decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int = decl_stmt int = decl_stmt int = + if < if >= = else = + = + if < if >= = else = + while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else ++ = = + break return int decl int decl int int int int int public public if ! instanceof decl_stmt int = decl_stmt int = new for = < ++ decl_stmt int = if ++ = return new decl_stmt int = decl_stmt int = decl_stmt int = new decl_stmt int = return new int int int int int int int int int protected static protected static decl_stmt int = / + = + decl_stmt int = decl_stmt int = decl_stmt int = - for = < ++ decl_stmt int = decl_stmt int = decl_stmt int = + if < if >= = else = + = + if < if >= = else = + while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else = + continue continue ++ = return int int int int public static public static if == return if == return if >> >= return decl_stmt int = decl_stmt int = = decl_stmt int = = for if > if ++ >= break = else if < ++ = if ++ >= break = else if ++ >= break = if ++ >= break = decl_stmt int = - if > += return int int decl int decl int int int public public if == return if ! instanceof decl_stmt int = decl_stmt int = new for = < ++ decl_stmt int = if ! ++ = return new decl_stmt int = decl_stmt int = new decl_stmt int = return new public public for : int int int int public public decl_stmt int = decl_stmt int = - while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else return return int public public return new decl_stmt int = public public return < public public return public public throw new public public return ++ public public return public public return < public public return public public throw new public public return ++ public public return int FixedBitSet public public decl_stmt int = > - : decl_stmt org.apache.lucene.util.FixedBitSet = new + for : call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) return int int public static public static while <= decl_stmt int = + >>> decl_stmt int = if < = + else if > = - else return return int int int int int int int int int int int int Bits LeafReader int public public return new decl_stmt int = public public final final final final decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.util.Bits final final = == : call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() == : decl_stmt int final final = decl_stmt int final final = call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt int final final = + decl_stmt int = if > && - >= = if < && < = - decl_stmt int final final = decl_stmt int = + - = - decl_stmt int final final = = return new public public return new decl_stmt int = decl_stmt int = - public public return public public return = > : ++ - public public if > || == return = += decl_stmt int = ++ if >= return = - decl_stmt int = while <= decl_stmt int = + >>> = if < = + else if > = - else = + return = - if <= return = ++ - else return = public public return public public return public public return public public return int int int int int int int int int int int Bits LeafReader int public public final final final final decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.util.Bits final final = == : call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() call LeafReader.getLiveDocs() == : decl_stmt int final final = decl_stmt int final final = call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() decl_stmt int final final = + decl_stmt int = if > && - >= = if < && < = - decl_stmt int final final = decl_stmt int = + - = - decl_stmt int final final = = return new public public return new decl_stmt int = decl_stmt int = - public public return public public return = > : ++ - public public if > || == return = += decl_stmt int = ++ if >= return = - decl_stmt int = while <= decl_stmt int = + >>> = if < = + else if > = - else = + return = - if <= return = ++ - else return = public public return public public return public public return int int int int int public public return new decl_stmt int = decl_stmt int = - public public return public public return = > : ++ - public public if > || == return = += decl_stmt int = ++ if >= return = - decl_stmt int = while <= decl_stmt int = + >>> = if < = + else if > = - else = + return = - if <= return = ++ - else return = public public return public public return public public return = > : ++ - int int int public public if > || == return = += decl_stmt int = ++ if >= return = - decl_stmt int = while <= decl_stmt int = + >>> = if < = + else if > = - else = + return = - if <= return = ++ - else return = public public return public public return public public return public public return protected protected return new call decl int.clone() call decl int.clone() call decl int.clone() call decl int.clone() call decl int.clone() public public return + << public < public < return