org.apache.solr.cloud java.io.File import java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.List import java.util.Map import java.util.Objects import java.util.Properties import java.util.concurrent.TimeUnit import org.apache.commons.codec.binary.StringUtils import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.client.solrj.request.CoreAdminRequest import org.apache.solr.client.solrj.response.CollectionAdminResponse import org.apache.solr.client.solrj.response.CoreAdminResponse import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.params.CoreAdminParams import org.apache.solr.common.util.NamedList import org.apache.solr.util.TimeOut import org.apache.zookeeper.KeeperException import org.junit.Ignore import org.junit.Test import static static org.apache.solr.cloud.ReplicaPropertiesBase.verifyUniqueAcrossCollection import class annotation org.apache.solr.cloud.CollectionsAPISolrJTest super super extends public public throws decl Map decl NamedList CollectionAdminResponse String decl CollectionAdminRequest decl CollectionAdminRequest decl Create protected protected throws decl_stmt java.lang.String = decl_stmt Create = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() decl_stmt java.util.Map < < = call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() for = < ++ decl_stmt org.apache.solr.common.util.NamedList < = call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() + + / + + + + int call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() > decl_stmt Delete = new = call decl NamedList.process() call decl NamedList.process() call decl NamedList.process() call decl NamedList.process() call decl NamedList.process() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() decl_stmt java.util.Map < < = call decl Create.getCollectionNodesStatus() call decl Create.getCollectionNodesStatus() call decl Create.getCollectionNodesStatus() call decl Create.getCollectionNodesStatus() call decl Create.getCollectionNodesStatus() + + call decl CollectionAdminRequest.size() call decl CollectionAdminRequest.size() call decl CollectionAdminRequest.size() call decl CollectionAdminRequest.size() call decl CollectionAdminRequest.size() = = new = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() decl Map String decl CollectionAdminRequest CollectionAdminResponse decl DeleteShard protected protected throws decl_stmt java.lang.String = decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() decl_stmt java.util.Map < < = call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() = call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.getCollectionCoresStatus() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() int call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() + decl_stmt DeleteShard = new = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() call org.apache.solr.client.solrj.response.CollectionAdminResponse.isSuccess() decl_stmt java.util.Map < < = call CollectionAdminResponse.getCollectionNodesStatus() call CollectionAdminResponse.getCollectionNodesStatus() call CollectionAdminResponse.getCollectionNodesStatus() call CollectionAdminResponse.getCollectionNodesStatus() call CollectionAdminResponse.getCollectionNodesStatus() call decl DeleteShard.size() call decl DeleteShard.size() call decl DeleteShard.size() call decl DeleteShard.size() call decl DeleteShard.size() decl CollectionAdminRequest decl Reload protected protected throws decl_stmt Reload = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl Reload.getStatus() call decl Reload.getStatus() call decl Reload.getStatus() call decl Reload.getStatus() call decl Reload.getStatus() decl CollectionAdminRequest CollectionAdminResponse decl CreateAlias protected protected throws decl_stmt CreateAlias = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() decl_stmt DeleteAlias = new call CollectionAdminResponse.process() call CollectionAdminResponse.process() call CollectionAdminResponse.process() call CollectionAdminResponse.process() call CollectionAdminResponse.process() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() call decl CreateAlias.getStatus() decl Create String CollectionAdminResponse decl Map decl SplitShard decl CollectionAdminRequest decl CollectionAdminRequest protected protected throws decl_stmt java.lang.String = decl_stmt Create = new call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() decl_stmt SplitShard = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl Create.process() call decl Create.process() call decl Create.process() call decl Create.process() call decl Create.process() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() decl_stmt java.util.Map < < = call decl CollectionAdminRequest.getCollectionCoresStatus() call decl CollectionAdminRequest.getCollectionCoresStatus() call decl CollectionAdminRequest.getCollectionCoresStatus() call decl CollectionAdminRequest.getCollectionCoresStatus() call decl CollectionAdminRequest.getCollectionCoresStatus() int call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() + int call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() call decl SplitShard.get() + = new = call decl Create.process() call decl Create.process() call decl Create.process() call decl Create.process() call decl Create.process() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.getStatus() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() call decl CollectionAdminRequest.isSuccess() decl_stmt org.apache.solr.common.cloud.ClusterState = decl_stmt java.util.Collection < = call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() + call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call CollectionAdminResponse.getActiveSlices() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() Replica String DocCollection decl NamedList CoreAdminResponse decl CollectionAdminRequest File CollectionAdminResponse File String decl Map decl Create Properties File private private throws decl_stmt java.lang.String = decl_stmt File = decl_stmt File = new + decl_stmt File = new + decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl_stmt Create = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.getStatus() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() call decl Create.isSuccess() decl_stmt java.util.Map < < = call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call decl Create.getCollectionCoresStatus() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() call CollectionAdminResponse.size() decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt org.apache.solr.common.cloud.Replica = call decl Map.getReplica() call decl Map.getReplica() call decl Map.getReplica() call decl Map.getReplica() call decl Map.getReplica() try = call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() decl_stmt org.apache.solr.client.solrj.response.CoreAdminResponse = call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() decl_stmt org.apache.solr.common.util.NamedList < = call Replica.getCoreStatus() call Replica.getCoreStatus() call Replica.getCoreStatus() call Replica.getCoreStatus() call Replica.getCoreStatus() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() call DocCollection.getStr() decl_stmt java.lang.String = call CoreAdminResponse.get() call CoreAdminResponse.get() call CoreAdminResponse.get() call CoreAdminResponse.get() call CoreAdminResponse.get() new call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() decl_stmt Delete = new call String.setCollectionName() call String.setCollectionName() call String.setCollectionName() call String.setCollectionName() call String.setCollectionName() call String.process() call String.process() call String.process() call String.process() call String.process() String decl ArrayList Slice String decl CollectionAdminRequest CollectionAdminResponse TimeOut decl CollectionAdminRequest decl AddReplica private private throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.ArrayList < = new <> decl_stmt AddReplica = new call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.isSuccess() call decl AddReplica.isSuccess() call decl AddReplica.isSuccess() call decl AddReplica.isSuccess() call decl AddReplica.isSuccess() decl_stmt org.apache.solr.util.TimeOut = new decl_stmt org.apache.solr.common.cloud.Replica = while ! call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() && == decl_stmt org.apache.solr.common.cloud.Slice = = call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call decl ArrayList.get() call TimeOut.getStr() call TimeOut.getStr() call TimeOut.getStr() call TimeOut.getStr() call TimeOut.getStr() decl_stmt DeleteReplica = new = call Slice.process() call Slice.process() call Slice.process() call Slice.process() call Slice.process() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() call decl AddReplica.getStatus() = new while ! call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() && != decl_stmt org.apache.solr.common.cloud.Slice = = call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() call decl CollectionAdminRequest.getReplica() CollectionAdminResponse TimeOut decl ClusterProp decl CollectionAdminRequest private private throws decl_stmt ClusterProp = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl ClusterProp.getStatus() call decl ClusterProp.getStatus() call decl ClusterProp.getStatus() call decl ClusterProp.getStatus() call decl ClusterProp.getStatus() decl_stmt org.apache.solr.util.TimeOut = new decl_stmt boolean = while ! call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() = if break = new call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() = new = while ! call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() call CollectionAdminResponse.hasTimedOut() = == if break decl AddRole decl NamedList decl CollectionAdminRequest CollectionAdminResponse Replica decl NamedList decl ClusterStatus decl CollectionAdminRequest private private throws decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt AddRole = new call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() call decl CollectionAdminRequest.process() decl_stmt org.apache.solr.handler.admin.ClusterStatus = new decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() decl_stmt org.apache.solr.common.util.NamedList < = call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() decl_stmt org.apache.solr.common.util.NamedList < = < call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() decl_stmt java.util.Map < = < call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() decl_stmt java.util.List < = < call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() new call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() = new call decl AddRole.setCollectionName() call decl AddRole.setCollectionName() call decl AddRole.setCollectionName() call decl AddRole.setCollectionName() call decl AddRole.setCollectionName() = call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() call decl AddRole.process() = call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() call decl CollectionAdminRequest.getResponse() = < call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() call decl ClusterStatus.get() = < call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() call CollectionAdminResponse.get() = < call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call decl NamedList.contains() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() call org.apache.solr.common.cloud.Replica.getNodeName() CollectionAdminResponse private private throws decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() CollectionAdminResponse private private throws decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() call CollectionAdminResponse.getResponse() boolean TimeOut String ClusterState Replica String CollectionAdminResponse private private throws decl_stmt org.apache.solr.common.cloud.Replica = decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() decl_stmt org.apache.solr.util.TimeOut = new decl_stmt java.lang.String = decl_stmt java.lang.String = call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() call org.apache.solr.common.cloud.Replica.getName() while ! call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() decl_stmt org.apache.solr.common.cloud.ClusterState = = call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) = call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() if break + = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() = new decl_stmt boolean = while ! call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() call org.apache.solr.util.TimeOut.hasTimedOut() decl_stmt org.apache.solr.common.cloud.ClusterState = = call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) call org.apache.solr.common.cloud.ClusterState.getReplica(DocCollection,String) = call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() call Replica.getStr() == if break CollectionAdminResponse private private throws decl_stmt org.apache.solr.client.solrj.response.CollectionAdminResponse = new call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus() call CollectionAdminResponse.getStatus()