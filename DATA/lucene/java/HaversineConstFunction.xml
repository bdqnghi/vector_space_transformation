org.apache.solr.search.function.distance org.locationtech.spatial4j.distance.DistanceUtils import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.docvalues.DoubleDocValues import org.apache.lucene.queries.function.valuesource.VectorValueSource import org.apache.lucene.search.IndexSearcher import java.io.IOException import java.util.Map import static static org.locationtech.spatial4j.distance.DistanceUtils.DEGREES_TO_RADIANS import class org.apache.solr.search.function.distance.HaversineConstFunction super super extends VectorValueSource ValueSource double double ValueSource double double protected protected return FunctionValues FunctionValues double double double double double double double double double double public public throws decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() call ValueSource.getValues() decl_stmt double final final = * decl_stmt double final final = * decl_stmt double final final = return new public public decl_stmt double = call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) * decl_stmt double = call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) * decl_stmt double = - decl_stmt double = - decl_stmt double = * decl_stmt double = * decl_stmt double = * + * * * return * - public public return + + call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() + + call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() call FunctionValues.toString() + + + + + double double double double double double double public public decl_stmt double = * decl_stmt double = * decl_stmt double = - decl_stmt double = - decl_stmt double = * decl_stmt double = * decl_stmt double = * + * * * return * - public public return + + + + + + + + + public public throws call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) call org.apache.lucene.queries.function.ValueSource.createWeight(Map,IndexSearcher) HaversineConstFunction public public if ! instanceof return decl_stmt org.apache.solr.search.function.distance.HaversineConstFunction = return == && == && int long public public decl_stmt int = call org.apache.lucene.queries.function.valuesource.VectorValueSource.hashCode() call org.apache.lucene.queries.function.valuesource.VectorValueSource.hashCode() call org.apache.lucene.queries.function.valuesource.VectorValueSource.hashCode() call org.apache.lucene.queries.function.valuesource.VectorValueSource.hashCode() call org.apache.lucene.queries.function.valuesource.VectorValueSource.hashCode() decl_stmt long = = * + ^ >>> = = * + ^ >>> return public public return + + + + + + +