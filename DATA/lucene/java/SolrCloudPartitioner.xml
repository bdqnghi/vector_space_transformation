org.apache.solr.hadoop java.lang.invoke.MethodHandles import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import org.apache.hadoop.conf.Configurable import org.apache.hadoop.conf.Configuration import org.apache.hadoop.io.Text import org.apache.hadoop.mapreduce.Partitioner import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.DocRouter import org.apache.solr.common.cloud.Slice import org.apache.solr.common.params.MapSolrParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.Hash import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.hadoop.SolrCloudPartitioner super super extends super implements String decl Map String SolrParams int String Configuration DocCollection Logger DocRouter String String decl List public public = = call Configuration.getInt() call Configuration.getInt() call Configuration.getInt() call Configuration.getInt() call Configuration.getInt() - if <= throw new + decl_stmt java.lang.String = call Configuration.get() call Configuration.get() call Configuration.get() call Configuration.get() call Configuration.get() if == throw new decl_stmt java.lang.String = call Configuration.get() call Configuration.get() call Configuration.get() call Configuration.get() call Configuration.get() if == throw new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = new if == throw new if call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() call org.apache.solr.common.cloud.DocCollection.getSlicesMap() != throw new + + + decl_stmt java.util.List < = new call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() != throw new + + + = new * call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt org.apache.solr.common.cloud.DocRouter = call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() if == throw new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() public public return Slice String int SolrInputDocument int DocRouter int int public public decl_stmt org.apache.solr.common.cloud.DocRouter = call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() call DocCollection.getRouter() decl_stmt org.apache.solr.common.SolrInputDocument = decl_stmt java.lang.String = decl_stmt org.apache.solr.common.cloud.Slice = call DocRouter.getTargetSlice() call DocRouter.getTargetSlice() call DocRouter.getTargetSlice() call DocRouter.getTargetSlice() call DocRouter.getTargetSlice() if == throw new + call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() call DocRouter.getClass() decl_stmt int = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() call org.apache.solr.common.cloud.Slice.getName() if < || >= throw new + + + + + assert == decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int = & / decl_stmt int = * / + assert >= && < return