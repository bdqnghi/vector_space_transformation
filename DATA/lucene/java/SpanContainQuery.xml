org.apache.lucene.search.spans org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import java.io.IOException import java.util.ArrayList import java.util.Map import java.util.Objects import java.util.Set import class org.apache.lucene.search.spans.SpanContainQuery super super extends super implements SpanQuery SpanQuery public public return call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() public public return public public return public public < Spans Spans decl ArrayList < < final final throws decl_stmt org.apache.lucene.search.spans.Spans = if == return decl_stmt org.apache.lucene.search.spans.Spans = if == return decl_stmt java.util.ArrayList < = new <> call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() return public public < StringBuilder decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call SpanQuery.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() SpanQuery SpanContainQuery SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() decl_stmt org.apache.lucene.search.spans.SpanQuery = call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() if != || != try decl_stmt org.apache.lucene.search.spans.SpanContainQuery = = = return catch throw new return SpanContainQuery public public if ! return decl_stmt org.apache.lucene.search.spans.SpanContainQuery = return call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() && call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() int public public decl_stmt int = ^= call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() = ^= call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() return