org.apache.lucene.search.spans java.io.IOException import java.util.Map import java.util.Objects import java.util.Set import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.Term import org.apache.lucene.index.TermContext import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.spans.FilterSpans.AcceptStatus import class org.apache.lucene.search.spans.SpanPositionCheckQuery super super extends super implements SpanQuery public public return public public return call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() call SpanQuery.getField() SpanWeight public public throws decl_stmt org.apache.lucene.search.spans.SpanWeight = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() return new : public public < public public < Spans public public final final throws decl_stmt org.apache.lucene.search.spans.Spans = return == : new protected protected throws return protected protected throws return SpanPositionCheckQuery SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() call SpanQuery.rewrite() if != try decl_stmt org.apache.lucene.search.spans.SpanPositionCheckQuery = = return catch throw new return SpanPositionCheckQuery public public if ! return decl_stmt org.apache.lucene.search.spans.SpanPositionCheckQuery = return call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() call SpanQuery.equals() public public return call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() call SpanQuery.hashCode() ^