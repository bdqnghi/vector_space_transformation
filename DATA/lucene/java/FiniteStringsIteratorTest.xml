org.apache.lucene.util.automaton org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IntsRef import org.apache.lucene.util.IntsRefBuilder import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import org.apache.lucene.util.fst.Util import java.util.ArrayList import java.util.Collections import java.util.HashSet import java.util.List import java.util.Set import static static org.apache.lucene.util.automaton.Operations.DEFAULT_MAX_DETERMINIZED_STATES import class org.apache.lucene.util.automaton.FiniteStringsIteratorTest super super extends int Automaton decl List FiniteStringsIterator IntsRefBuilder int String decl List decl List decl List decl Set public public decl_stmt int = if + decl_stmt java.util.Set < = new <> decl_stmt java.util.List < = new <> decl_stmt org.apache.lucene.util.IntsRefBuilder = new for = < ++ decl_stmt java.lang.String = call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if + decl_stmt org.apache.lucene.util.automaton.Automaton = if = if + call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() call org.apache.lucene.util.automaton.Automaton.getNumStates() else if if = else if if = decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new decl_stmt java.util.List < = if ! call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() new <> + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < ++ + + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Automaton decl List IntsRefBuilder FiniteStringsIterator IntsRefBuilder public public decl_stmt org.apache.lucene.util.automaton.Automaton = = decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.IntsRefBuilder = new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() decl_stmt org.apache.lucene.util.IntsRefBuilder = new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() Automaton decl List FiniteStringsIterator IntsRefBuilder decl char String String public public decl_stmt char = new decl_stmt java.lang.String = new decl_stmt java.lang.String = new decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.IntsRefBuilder = new call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.toCharArray() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() Automaton FiniteStringsIterator public public throws decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new Automaton IntsRefBuilder decl List FiniteStringsIterator public public decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.IntsRefBuilder = new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() Automaton IntsRefBuilder IntsRefBuilder decl List FiniteStringsIterator public public decl_stmt org.apache.lucene.util.automaton.Automaton = = decl_stmt org.apache.lucene.util.automaton.FiniteStringsIterator = new decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.util.IntsRefBuilder = new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() decl_stmt org.apache.lucene.util.IntsRefBuilder = new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() call org.apache.lucene.util.IntsRefBuilder.get() Automaton int IntsRefBuilder decl Set int public public decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() decl_stmt int = call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.createState() call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.setAccept(int,boolean) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.addTransition(int,int,int,int) call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() call org.apache.lucene.util.automaton.Automaton.finishState() decl_stmt java.util.Set < = call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt org.apache.lucene.util.IntsRefBuilder = new call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call org.apache.lucene.util.IntsRefBuilder.append(int) call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() call org.apache.lucene.util.IntsRefBuilder.toIntsRef() decl List static < static < decl_stmt java.util.List < = new <> for = != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl Set private private < decl_stmt java.util.Set < = - call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() new <> BytesRef private static private static decl_stmt org.apache.lucene.util.BytesRef = new for = < ++ = byte = return call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString()