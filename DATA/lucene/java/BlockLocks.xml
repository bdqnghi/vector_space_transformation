org.apache.solr.store.blockcache java.util.concurrent.atomic.AtomicLongArray import org.apache.lucene.util.LongBitSet import class org.apache.solr.store.blockcache.BlockLocks int AtomicLongArray int int long public public decl_stmt int = >> if >= return - decl_stmt int = & decl_stmt long = ~ call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) >> if != return << + + while ++ < = ~ call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) if != return << + return - int long long int public public decl_stmt int = >> decl_stmt int = & decl_stmt long = << decl_stmt long do = call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) if & != return = |= ! call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) return int long long int public public decl_stmt int = >> decl_stmt int = & decl_stmt long = << decl_stmt long do = call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) call java.util.concurrent.atomic.AtomicLongArray.get(int) = &= ~ ! call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long) call java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long)