org.apache.lucene.queries.function.valuesource java.io.IOException import java.util.Map import org.apache.lucene.index.DocValues import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.NumericDocValues import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSourceScorer import org.apache.lucene.queries.function.docvalues.IntDocValues import org.apache.lucene.util.Bits import org.apache.lucene.util.mutable.MutableValue import org.apache.lucene.util.mutable.MutableValueInt import class org.apache.lucene.queries.function.valuesource.EnumFieldSource super super extends Integer decl Map decl Map Integer private static private static decl_stmt java.lang.Integer = try = catch return String private private if == return decl_stmt java.lang.String final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return return call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() call java.lang.Integer.toString() Integer Integer String private private if == return decl_stmt java.lang.Integer decl_stmt java.lang.Integer final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return = if == = decl_stmt java.lang.String final final = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return return public public return + + Integer Integer int int int NumericDocValues Integer Bits MutableValueInt public public throws decl_stmt NumericDocValues final final = decl_stmt org.apache.lucene.util.Bits final final = return new decl_stmt org.apache.lucene.util.mutable.MutableValueInt final final = new public public return int call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() public public decl_stmt java.lang.Integer = return public public return call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() public public decl_stmt java.lang.Integer = decl_stmt java.lang.Integer = if == = else if ! && < ++ if == = else if ! && > -- decl_stmt int final final = decl_stmt int final final = return new public public if ! return decl_stmt int = return >= && <= public public return new decl_stmt org.apache.lucene.util.mutable.MutableValueInt private final final = new public public return public public = = call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() public public return int Integer public public decl_stmt java.lang.Integer = return public public return int Integer Integer int int public public decl_stmt java.lang.Integer = decl_stmt java.lang.Integer = if == = else if ! && < ++ if == = else if ! && > -- decl_stmt int final final = decl_stmt int final final = return new public public if ! return decl_stmt int = return >= && <= int public public if ! return decl_stmt int = return >= && <= MutableValueInt public public return new decl_stmt org.apache.lucene.util.mutable.MutableValueInt private final final = new public public return public public = = public public return public public = = EnumFieldSource public public if == return if == || != return if ! return decl_stmt org.apache.lucene.queries.function.valuesource.EnumFieldSource = if ! call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() return if ! call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() return return int public public decl_stmt int = = * + call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() = * + call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() return