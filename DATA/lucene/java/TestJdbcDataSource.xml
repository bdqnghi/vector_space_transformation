org.apache.solr.handler.dataimport java.io.File import java.nio.charset.StandardCharsets import java.nio.file.Files import java.sql.Connection import java.sql.Driver import java.sql.DriverManager import java.sql.SQLException import java.util.* import javax.sql.DataSource import org.easymock.EasyMock import org.easymock.IMocksControl import org.junit.After import org.junit.Before import org.junit.Ignore import org.junit.Test import class org.apache.solr.handler.dataimport.TestJdbcDataSource super super extends Context decl List String Driver Connection DataSource JdbcDataSource Properties IMocksControl public public throws = = call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() = call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() = call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() call IMocksControl.createMock() public public throws if == else call IMocksControl.reset() call IMocksControl.reset() call IMocksControl.reset() call IMocksControl.reset() call IMocksControl.reset() Connection public public throws call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() decl_stmt org.apache.lucene.replicator.nrt.Connection = call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() Connection public public throws call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() decl_stmt org.apache.lucene.replicator.nrt.Connection = call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() decl byte Connection File public public throws decl_stmt File = call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.mkdir() call File.mkdir() call File.mkdir() call File.mkdir() call File.mkdir() decl_stmt byte = call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() decl_stmt org.apache.lucene.replicator.nrt.Connection = call org.apache.solr.handler.dataimport.JdbcDataSource.getConnection() call org.apache.solr.handler.dataimport.JdbcDataSource.getConnection() call org.apache.solr.handler.dataimport.JdbcDataSource.getConnection() call org.apache.solr.handler.dataimport.JdbcDataSource.getConnection() call org.apache.solr.handler.dataimport.JdbcDataSource.getConnection() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() SQLException public public throws call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt java.sql.SQLException = new call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() try call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) catch call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() SQLException public public throws call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt java.sql.SQLException = new call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call javax.sql.DataSource.getConnection() call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call sun.rmi.transport.Connection.close() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() try call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) catch call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() Connection public public throws try call java.sql.Driver.connect(String,java,util,Properties) call java.sql.Driver.connect(String,java,util,Properties) call java.sql.Driver.connect(String,java,util,Properties) call java.sql.Driver.connect(String,java,util,Properties) call java.sql.Driver.connect(String,java,util,Properties) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call sun.rmi.transport.Connection.setAutoCommit(boolean) call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Connection.setHoldability() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Driver.getClass() call Driver.getClass() call Driver.getClass() call Driver.getClass() call Driver.getClass() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() call IMocksControl.replay() decl_stmt org.apache.lucene.replicator.nrt.Connection = call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.createConnectionFactory(Context,Properties) call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() call IMocksControl.verify() catch throw finally int decl Map Context decl Map decl Iterator decl List Properties Object JdbcDataSource Object public public throws decl_stmt org.apache.solr.handler.dataimport.JdbcDataSource = new decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt java.util.List < < = new <> decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt sun.tools.tree.Context = call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) call org.apache.solr.handler.dataimport.JdbcDataSource.init(Context,Properties) decl_stmt java.util.Iterator < < = call JdbcDataSource.getData() call JdbcDataSource.getData() call JdbcDataSource.getData() call JdbcDataSource.getData() call JdbcDataSource.getData() decl_stmt int = decl_stmt java.lang.Object = decl_stmt java.lang.Object = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() ++ call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass()