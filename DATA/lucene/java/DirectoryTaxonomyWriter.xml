org.apache.lucene.facet.taxonomy.directory java.io.BufferedInputStream import java.io.BufferedOutputStream import java.io.DataInputStream import java.io.DataOutputStream import java.io.IOException import java.nio.file.Files import java.nio.file.Path import java.util.HashMap import java.util.Map import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.StringField import org.apache.lucene.document.TextField import org.apache.lucene.facet.FacetsConfig import org.apache.lucene.facet.taxonomy.FacetLabel import org.apache.lucene.facet.taxonomy.TaxonomyReader import org.apache.lucene.facet.taxonomy.TaxonomyWriter import org.apache.lucene.facet.taxonomy.writercache.Cl2oTaxonomyWriterCache import org.apache.lucene.facet.taxonomy.writercache.LruTaxonomyWriterCache import org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache import org.apache.lucene.index.CorruptIndexException import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.index.LeafReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.LogByteSizeMergePolicy import org.apache.lucene.index.ReaderManager import org.apache.lucene.index.SegmentInfos import org.apache.lucene.index.Terms import org.apache.lucene.index.TermsEnum import org.apache.lucene.index.TieredMergePolicy import org.apache.lucene.store.AlreadyClosedException import org.apache.lucene.store.Directory import org.apache.lucene.store.LockObtainFailedException import org.apache.lucene.util.BytesRef import class org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter super super implements boolean ReaderManager Field boolean boolean TaxonomyWriterCache SinglePositionTokenStream AtomicInteger boolean IndexWriter TaxonomyIndexArrays int boolean long int Field String Directory SegmentInfos private static < private static < throws decl_stmt org.apache.lucene.index.SegmentInfos = return call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() call org.apache.lucene.index.SegmentInfos.getUserData() protected protected throws return new protected protected return new new private private throws if ! synchronized if ! = new = = public static public static return new public synchronized public synchronized throws if ! call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() private private throws = protected synchronized protected synchronized throws if call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() = = if != call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.close() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.close() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.close() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.close() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.close() Terms PostingsEnum TermsEnum int BytesRef int DirectoryReader protected synchronized protected synchronized throws decl_stmt int = call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) if >= || return call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() = call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) if >= || return decl_stmt int = - decl_stmt org.apache.lucene.index.DirectoryReader = call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() try decl_stmt org.apache.lucene.util.BytesRef final final = new decl_stmt org.apache.lucene.index.PostingsEnum = for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.Terms = if != decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() + break finally call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() if > return int public public throws decl_stmt int = call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.get(FacetLabel) if < synchronized = if < = return int int FacetLabel private private throws decl_stmt int if > decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = - = if < = else if == = else = decl_stmt int = return protected final protected final if throw new Document int private private throws call SinglePositionTokenStream.set() call SinglePositionTokenStream.set() call SinglePositionTokenStream.set() call SinglePositionTokenStream.set() call SinglePositionTokenStream.set() + decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.solr.handler.dataimport.config.Field.setStringValue(String) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) decl_stmt int = ++ = = return public public = = public public throws if return = return private private throws if call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) = private synchronized private synchronized throws if && call ReaderManager.maybeRefresh() call ReaderManager.maybeRefresh() call ReaderManager.maybeRefresh() call ReaderManager.maybeRefresh() call ReaderManager.maybeRefresh() = String public synchronized public synchronized throws decl_stmt java.lang.String = call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() if == || != call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) decl Map private < private < < decl_stmt java.util.Map < = new <> if != call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public < call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) public < public < return call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() String public synchronized public synchronized throws decl_stmt java.lang.String = call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() if == || != call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.setCommitData(Map,boolean) call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.getCommitData() call org.apache.lucene.index.IndexWriter.prepareCommit() call org.apache.lucene.index.IndexWriter.prepareCommit() call org.apache.lucene.index.IndexWriter.prepareCommit() call org.apache.lucene.index.IndexWriter.prepareCommit() call org.apache.lucene.index.IndexWriter.prepareCommit() public public return public public = Terms TermsEnum boolean BytesRef boolean DirectoryReader FacetLabel PostingsEnum private synchronized private synchronized throws if call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() call java.util.concurrent.atomic.AtomicInteger.get() < return if ! return = decl_stmt boolean = decl_stmt org.apache.lucene.index.DirectoryReader = call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() try decl_stmt org.apache.lucene.index.PostingsEnum = for : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.Terms = if != decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != if ! call TaxonomyWriterCache.isFull() call TaxonomyWriterCache.isFull() call TaxonomyWriterCache.isFull() call TaxonomyWriterCache.isFull() call TaxonomyWriterCache.isFull() decl_stmt org.apache.lucene.util.BytesRef = call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt boolean = call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.put(FacetLabel,int) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() + assert ! : else = break if break finally call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() = ! if synchronized call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() call ReaderManager.close() = = TaxonomyIndexArrays DirectoryReader private private throws if == synchronized if == decl_stmt org.apache.lucene.index.DirectoryReader = call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() call ReaderManager.acquire() try decl_stmt org.apache.lucene.facet.taxonomy.directory.TaxonomyIndexArrays = new = finally call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() call ReaderManager.release() return decl int public public throws if >= throw new decl_stmt int = assert < : + + + + return int OrdinalMap FacetLabel Terms PostingsEnum DirectoryReader int TermsEnum LeafReader int public public throws decl_stmt org.apache.lucene.index.DirectoryReader = try decl_stmt int final final = call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() call DirectoryReader.numDocs() decl_stmt org.apache.lucene.facet.taxonomy.directory.OrdinalMap final final = call OrdinalMap.setSize() call OrdinalMap.setSize() call OrdinalMap.setSize() call OrdinalMap.setSize() call OrdinalMap.setSize() decl_stmt int = decl_stmt org.apache.lucene.index.PostingsEnum = for final final : call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() call DirectoryReader.leaves() decl_stmt org.apache.lucene.index.LeafReader final final = decl_stmt org.apache.lucene.index.Terms final final = call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) call org.apache.lucene.index.LeafReader.terms(String) decl_stmt org.apache.lucene.index.TermsEnum = call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != decl_stmt org.apache.lucene.facet.taxonomy.FacetLabel = new call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() decl_stmt int final final = = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addMapping(int,int) call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addMapping(int,int) call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addMapping(int,int) call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addMapping(int,int) call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addMapping(int,int) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() + += call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call LeafReader.maxDoc() call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addDone() call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addDone() call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addDone() call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addDone() call org.apache.lucene.facet.taxonomy.directory.OrdinalMap.addDone() finally call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() public public = new public public = public public public public return public public throws public public throws public public throws if != = int int DataInputStream public public throws if != return decl_stmt java.io.DataInputStream = new new = new call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() for = < ++ decl_stmt int = call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() decl_stmt int = call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() call java.io.DataInputStream.readInt() = call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() return public synchronized public synchronized throws call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() call org.apache.lucene.index.IndexWriter.rollback() public synchronized public synchronized throws call org.apache.lucene.index.IndexWriter.deleteAll() call org.apache.lucene.index.IndexWriter.deleteAll() call org.apache.lucene.index.IndexWriter.deleteAll() call org.apache.lucene.index.IndexWriter.deleteAll() call org.apache.lucene.index.IndexWriter.deleteAll() call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) call org.apache.lucene.index.IndexWriter.addIndexes(Directory) = = call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() call org.apache.lucene.index.IndexWriter.maxDoc() = call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.clear() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.clear() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.clear() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.clear() call org.apache.lucene.facet.taxonomy.writercache.TaxonomyWriterCache.clear() = = call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) call java.util.concurrent.atomic.AtomicInteger.set(int) ++ public public return final final return public final public final return