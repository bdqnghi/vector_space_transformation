org.apache.lucene.search java.util.ArrayList import java.util.List import org.apache.lucene.index.Term import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.Operations import class org.apache.lucene.search.WildcardQuery super super extends char char char int decl List int int String public static public static decl_stmt java.util.List < = new <> decl_stmt java.lang.String = for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int final final = call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) decl_stmt int = switch case call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break case call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break case if + < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int final final = call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) call java.lang.String.codePointAt(int) + += call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() break default: call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() += return public public return StringBuilder public public decl_stmt java.lang.StringBuilder = new if ! call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()