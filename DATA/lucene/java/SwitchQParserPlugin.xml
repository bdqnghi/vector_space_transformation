org.apache.solr.search org.apache.lucene.search.Query import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.handler.component.SearchHandler import org.apache.commons.lang.StringUtils import class org.apache.solr.search.SwitchQParserPlugin super super extends String String String String QParser String public public return new decl_stmt org.apache.solr.search.QParser public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = = : + + call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if == throw new + + + + = return call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() public public return call org.apache.solr.search.QParser.getDefaultHighlightFields() call org.apache.solr.search.QParser.getDefaultHighlightFields() call org.apache.solr.search.QParser.getDefaultHighlightFields() call org.apache.solr.search.QParser.getDefaultHighlightFields() call org.apache.solr.search.QParser.getDefaultHighlightFields() public public throws return call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() public public < call org.apache.solr.search.QParser.addDebugInfo(NamedList) call org.apache.solr.search.QParser.addDebugInfo(NamedList) call org.apache.solr.search.QParser.addDebugInfo(NamedList) call org.apache.solr.search.QParser.addDebugInfo(NamedList) call org.apache.solr.search.QParser.addDebugInfo(NamedList) String String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = = : + + call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if == throw new + + + + = return public public return public public throws return public public <