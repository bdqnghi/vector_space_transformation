org.apache.lucene.index java.io.IOException import java.util.Iterator import java.util.NoSuchElementException import org.apache.lucene.codecs.NormsConsumer import org.apache.lucene.util.Counter import org.apache.lucene.util.packed.PackedInts import org.apache.lucene.util.packed.PackedLongValues import class org.apache.lucene.index.NormValuesWriter decl Builder long Counter decl PackedLongValues long public public for = int call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() call decl PackedLongValues.size() < ++ call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() call decl PackedLongValues.add() long private private decl_stmt long final final = call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl PackedLongValues.ramBytesUsed() call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() call decl Builder.addAndGet() - = public public PackedLongValues int public public throws decl_stmt int final final = decl_stmt org.apache.lucene.util.packed.PackedLongValues final final = call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() call decl PackedLongValues.build() new < public < public < return new public < public < return new public public return < Long public public if ! throw new decl_stmt java.lang.Long if < = else = ++ return public public throw new