org.apache.lucene.index java.util.Random import java.util.concurrent.atomic.AtomicInteger import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.store.Directory import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.index.TestNRTReaderWithThreads super super extends AtomicInteger int IndexWriter Directory long IndexReader long decl RunThread int public public throws decl_stmt org.apache.lucene.store.Directory = if instanceof decl_stmt org.apache.lucene.index.IndexWriter = new new decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.IndexWriter.getReader(boolean,boolean) call org.apache.lucene.index.IndexWriter.getReader(boolean,boolean) call org.apache.lucene.index.IndexWriter.getReader(boolean,boolean) call org.apache.lucene.index.IndexWriter.getReader(boolean,boolean) call org.apache.lucene.index.IndexWriter.getReader(boolean,boolean) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() decl_stmt RunThread = new for = < ++ = new + decl_stmt long = decl_stmt long = while - < decl_stmt int = decl_stmt int = for = < ++ = + += += for = < ++ for = < ++ + call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() int Term int Document IndexReader int public public try while if == decl_stmt int = call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) call java.util.concurrent.atomic.AtomicInteger.addAndGet(int) decl_stmt org.apache.lucene.document.Document = ++ else if == decl_stmt org.apache.lucene.index.IndexReader = decl_stmt int = call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() decl_stmt org.apache.lucene.index.Term = new decl_stmt int = call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() += catch = =