org.apache.solr.cloud java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.List import java.util.concurrent.ExecutorService import org.apache.http.client.HttpClient import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.CoreAdminRequest.RequestRecovery import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.core.CoreContainer import org.apache.solr.core.CoreDescriptor import org.apache.solr.core.SolrCore import org.apache.solr.handler.component.ShardHandler import org.apache.solr.handler.component.ShardRequest import org.apache.solr.handler.component.ShardResponse import org.apache.solr.logging.MDCLoggingContext import org.apache.solr.update.PeerSync import org.apache.solr.update.UpdateShardHandler import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.cloud.SyncStrategy boolean Logger decl List ShardHandler HttpClient ExecutorService boolean public public return boolean public public if return try decl_stmt boolean if call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() return = return finally String String CloudDescriptor boolean private private decl_stmt boolean = decl_stmt org.apache.solr.cloud.CloudDescriptor = decl_stmt java.lang.String = call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() call org.apache.solr.cloud.CloudDescriptor.getCollectionName() decl_stmt java.lang.String = call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() call org.apache.solr.cloud.CloudDescriptor.getShardId() if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return try = catch try if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) catch return decl List decl List PeerSync private private decl_stmt java.util.List < = if == return decl_stmt java.util.List < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.update.PeerSync = new return call org.apache.solr.update.PeerSync.sync() call org.apache.solr.update.PeerSync.sync() call org.apache.solr.update.PeerSync.sync() call org.apache.solr.update.PeerSync.sync() call org.apache.solr.update.PeerSync.sync() boolean decl List ShardResponse ZkCoreNodeProps RecoveryRequest private private decl_stmt java.util.List < = if == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new for : try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() catch for decl_stmt org.apache.solr.handler.component.ShardResponse = call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() if == break decl_stmt boolean = if call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() != + call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() call org.apache.solr.handler.component.ShardResponse.getException() if ! call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() + if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) else decl_stmt RecoveryRequest = new = = call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() = call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call org.apache.solr.handler.component.ShardResponse.getShardRequest() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() call org.apache.solr.handler.component.ShardResponse.getShardAddress() decl NamedList Boolean private private decl_stmt org.apache.solr.common.util.NamedList < = if == return decl_stmt java.lang.Boolean = call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() if == = return ShardCoreRequest private private decl_stmt ShardCoreRequest = new = = = = new = = new call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardCoreRequest.params() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() public public = public public for : try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() RequestRecovery Thread private private final final final final final final throws decl_stmt java.lang.Thread = new public public decl_stmt RequestRecovery = new call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() try = new call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.request() call HttpClient.request() call HttpClient.request() call HttpClient.request() call HttpClient.request() catch + if instanceof throw call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() RequestRecovery public public decl_stmt RequestRecovery = new call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setAction() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() call RequestRecovery.setCoreName() try = new call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setConnectionTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.setSoTimeout() call HttpClient.request() call HttpClient.request() call HttpClient.request() call HttpClient.request() call HttpClient.request() catch + if instanceof throw ModifiableSolrParams public static public static decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new for = < += call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) call org.apache.solr.common.params.ModifiableSolrParams.add(String,String) + return