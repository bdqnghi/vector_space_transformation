org.apache.lucene.store java.io.IOException import java.nio.file.Path import java.util.ArrayList import java.util.List import java.util.Random import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.TermQuery import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.store.TestBufferedIndexInput super super extends decl byte long MyBufferedIndexInput public public throws decl_stmt MyBufferedIndexInput = new for = < * ++ call MyBufferedIndexInput.readByte() call MyBufferedIndexInput.readByte() call MyBufferedIndexInput.readByte() call MyBufferedIndexInput.readByte() call MyBufferedIndexInput.readByte() MyBufferedIndexInput public public throws decl_stmt MyBufferedIndexInput = new private private throws try finally int int private private throws decl_stmt int = for = < * = + / + += if >= = for = < ++ decl_stmt int final final = + += + if >= = for = < ++ += if >= = long int private private throws decl_stmt int = = + decl_stmt long = - if <= return else if < = int + for = < ++ + + + + + + MyBufferedIndexInput int public public throws decl_stmt MyBufferedIndexInput = new int call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() decl_stmt int = int call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() call MyBufferedIndexInput.length() - call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() call MyBufferedIndexInput.seek() private static private static return * protected protected throws for = < + ++ = ++ protected protected throws = public public throws public public return public public throws throw new IndexSearcher decl ScoreDoc Term Path IndexWriter Term Document IndexReader MockFSDirectory public public throws decl_stmt java.nio.file.Path = decl_stmt MockFSDirectory = new decl_stmt org.apache.lucene.index.IndexWriter = new new new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() call MockFSDirectory.allIndexInputs() decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.Term = new decl_stmt org.apache.lucene.index.Term = new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.ScoreDoc = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new = = = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call MockFSDirectory.tweakBufferSizes() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() int BufferedIndexInput public public for final final : decl_stmt org.apache.lucene.store.BufferedIndexInput = decl_stmt int = + call org.apache.lucene.store.BufferedIndexInput.setBufferSize(int) call org.apache.lucene.store.BufferedIndexInput.setBufferSize(int) call org.apache.lucene.store.BufferedIndexInput.setBufferSize(int) call org.apache.lucene.store.BufferedIndexInput.setBufferSize(int) call org.apache.lucene.store.BufferedIndexInput.setBufferSize(int) IndexInput public public throws decl_stmt org.apache.lucene.store.IndexInput = return