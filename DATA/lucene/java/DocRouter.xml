org.apache.solr.common.cloud org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.StrUtils import org.noggit.JSONWriter import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import static static org.apache.solr.common.cloud.DocCollection.DOC_ROUTER import class org.apache.solr.common.cloud.DocRouter DocRouter decl Map String DocRouter public static public static decl_stmt org.apache.solr.common.cloud.DocRouter = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return throw new + + Map protected protected if == return decl_stmt java.util.Map = if == return return call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl Map public static < public static < decl_stmt java.util.Map < = new <> for : if call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() == call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return public public return >= && <= public public return <= && >= public public return || || public public return + + public public return >> + >> + >> + Range public public if != return decl_stmt org.apache.lucene.facet.range.Range = return == && == public public int public public decl_stmt int = return == : int long String long String public public decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = + decl_stmt long = decl_stmt long = return new int int public public return new long int int long decl List long long public < public < decl_stmt int = decl_stmt int = assert >= if == return decl_stmt long = long - long decl_stmt long = / decl_stmt java.util.List < = new <> decl_stmt long = decl_stmt long = while < = + if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == - = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new int int = + return decl List decl HashSet public < public < if == || < return decl_stmt java.util.List < = decl_stmt java.util.HashSet < = new <> for : call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() call decl HashSet.addAll() return