org.apache.solr.handler.component java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.LinkedList import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicLong import org.apache.lucene.search.suggest.Lookup import org.apache.lucene.search.suggest.Lookup.LookupResult import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.BytesRef import org.apache.lucene.util.CharsRef import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.params.ShardParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrEventListener import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.spelling.suggest.SolrSuggester import org.apache.solr.spelling.suggest.SuggesterOptions import org.apache.solr.spelling.suggest.SuggesterParams import org.apache.solr.spelling.suggest.SuggesterResult import org.apache.solr.util.plugin.SolrCoreAware import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.component.SuggestComponent super super extends super implements decl Map String Logger String String NamedList String String String public public = boolean NamedList String Object boolean boolean boolean SuggesterListener File SolrSuggester boolean public public if != call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt boolean = for = < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() ++ if call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) decl_stmt org.apache.solr.common.util.NamedList = call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) call org.apache.solr.common.util.NamedList.getVal(int) decl_stmt org.apache.solr.spelling.suggest.SolrSuggester = new decl_stmt java.lang.String = call org.apache.solr.spelling.suggest.SolrSuggester.init(NamedList,SolrCore) call org.apache.solr.spelling.suggest.SolrSuggester.init(NamedList,SolrCore) call org.apache.solr.spelling.suggest.SolrSuggester.init(NamedList,SolrCore) call org.apache.solr.spelling.suggest.SolrSuggester.init(NamedList,SolrCore) call org.apache.solr.spelling.suggest.SolrSuggester.init(NamedList,SolrCore) if != decl_stmt boolean = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if && ! = else if throw new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() else if ! call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = else throw new decl_stmt boolean decl_stmt java.lang.Object = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if == decl_stmt File = call org.apache.solr.spelling.suggest.SolrSuggester.getStoreFile() call org.apache.solr.spelling.suggest.SolrSuggester.getStoreFile() call org.apache.solr.spelling.suggest.SolrSuggester.getStoreFile() call org.apache.solr.spelling.suggest.SolrSuggester.getStoreFile() call org.apache.solr.spelling.suggest.SolrSuggester.getStoreFile() = == || ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() else = decl_stmt boolean = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) decl_stmt boolean = call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) call org.apache.solr.common.util.NamedList.get(String) if || || decl_stmt SuggesterListener = new call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call org.apache.solr.spelling.suggest.SolrSuggester.getName() call org.apache.solr.spelling.suggest.SolrSuggester.getName() call org.apache.solr.spelling.suggest.SolrSuggester.getName() call org.apache.solr.spelling.suggest.SolrSuggester.getName() call org.apache.solr.spelling.suggest.SolrSuggester.getName() + + boolean SolrParams boolean decl Collection public public throws decl_stmt org.apache.solr.common.params.SolrParams = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) return decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt java.util.Collection final final final < if || = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() else = if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || for : ! : else if call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || for : ! : ShardRequest SolrParams public public decl_stmt org.apache.solr.common.params.SolrParams = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if < return if == decl_stmt org.apache.solr.handler.component.ShardRequest = new = = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() return return int String boolean SuggesterResult boolean decl Map SolrParams decl Set String boolean SuggesterOptions boolean public public throws decl_stmt org.apache.solr.common.params.SolrParams = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() return decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt java.util.Set < try = catch if ! && ! throw else = new <> decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if == = if == = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt boolean = call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == = decl_stmt SuggesterOptions = new new decl_stmt java.util.Map < < < = new <> for : decl_stmt org.apache.solr.spelling.suggest.SuggesterResult = int decl Map decl NamedList SuggesterResult decl List decl Map SolrParams public public decl_stmt org.apache.solr.common.params.SolrParams = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + if ! call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) call org.apache.solr.common.params.SolrParams.getBool(String) || != return decl_stmt int = call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) call org.apache.solr.common.params.SolrParams.getInt(String) decl_stmt java.util.List < = new <> for : for : decl_stmt org.apache.solr.common.util.NamedList < if = != decl_stmt java.util.Map < < < = < < < call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.spelling.suggest.SuggesterResult = decl_stmt java.util.Map < < < = new <> decl Set decl List decl LookupPriorityQueue SuggesterResult decl Lookup decl Set private static private static < decl_stmt org.apache.solr.spelling.suggest.SuggesterResult = new decl_stmt java.util.Set < = new <> decl_stmt java.util.Set < = new <> for : for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() for : for : decl_stmt LookupPriorityQueue = new for : decl_stmt java.util.List < = if == continue for : call decl Lookup.insertWithOverflow() call decl Lookup.insertWithOverflow() call decl Lookup.insertWithOverflow() call decl Lookup.insertWithOverflow() call decl Lookup.insertWithOverflow() decl_stmt java.util.List < = new <> call decl Lookup.getResults() call decl Lookup.getResults() call decl Lookup.getResults() call decl Lookup.getResults() call decl Lookup.getResults() call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) return public public return decl NamedList SolrSuggester public public decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt org.apache.solr.spelling.suggest.SolrSuggester = call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call org.apache.solr.spelling.suggest.SolrSuggester.toString() call org.apache.solr.spelling.suggest.SolrSuggester.toString() call org.apache.solr.spelling.suggest.SolrSuggester.toString() call org.apache.solr.spelling.suggest.SolrSuggester.toString() call org.apache.solr.spelling.suggest.SolrSuggester.toString() return long public public decl_stmt long = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() += return public < public < return decl Set SolrSuggester private < private < decl_stmt java.util.Set < = new <> for : decl_stmt org.apache.solr.spelling.suggest.SolrSuggester = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else throw new + + if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() == throw new + + return decl Set decl String private < private < decl_stmt java.util.Set < = new <> decl_stmt java.lang.String = if == call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return decl SimpleOrderedMap decl List decl List long decl SimpleOrderedMap String String decl SimpleOrderedMap private private < < < for : decl_stmt org.apache.solr.common.util.SimpleOrderedMap < < = new <> for : decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = new <> decl_stmt java.util.List < = call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt java.util.List < < = new <> for : decl_stmt java.lang.String = decl_stmt long = decl_stmt java.lang.String = != : decl_stmt org.apache.solr.common.util.SimpleOrderedMap < = new <> call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() decl List String String decl List Long String LookupResult decl Map SuggesterResult decl NamedList String String private private < < < decl_stmt org.apache.solr.spelling.suggest.SuggesterResult = new if == return for < < < : decl_stmt java.lang.String = for < < < = decl_stmt java.util.Map < < = decl_stmt java.lang.String = call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() decl_stmt java.util.List < = new <> decl_stmt org.apache.solr.common.util.NamedList < = call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() for = < call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() call decl NamedList.size() ++ decl_stmt java.lang.String = call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() call decl NamedList.getName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.util.List < < = < < call decl NamedList.getVal() call decl NamedList.getVal() call decl NamedList.getVal() call decl NamedList.getVal() call decl NamedList.getVal() for < : decl_stmt java.lang.String = decl_stmt java.lang.Long = decl_stmt java.lang.String = decl_stmt LookupResult = new new new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) call org.apache.solr.spelling.suggest.SuggesterResult.add(String,String,List) return public public long public public decl_stmt long = if && == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + return else if == || && == if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + else if call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + else if if == call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + private private try catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + public public public public public public return + + + + + + + + + + + +