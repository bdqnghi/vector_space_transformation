org.apache.lucene.search java.io.IOException import java.util.Objects import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import class org.apache.lucene.search.NGramPhraseQuery super super extends PhraseQuery int decl int decl PhraseQuery decl Term boolean public public throws decl_stmt org.apache.lucene.index.Term final final final = call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() decl_stmt int final final final = call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() decl_stmt boolean = call org.apache.lucene.search.PhraseQuery.getSlop() call org.apache.lucene.search.PhraseQuery.getSlop() call org.apache.lucene.search.PhraseQuery.getSlop() call org.apache.lucene.search.PhraseQuery.getSlop() call org.apache.lucene.search.PhraseQuery.getSlop() == && >= && >= if for = < ++ if != - + = break if == return call org.apache.lucene.search.PhraseQuery.rewrite(IndexReader) call org.apache.lucene.search.PhraseQuery.rewrite(IndexReader) call org.apache.lucene.search.PhraseQuery.rewrite(IndexReader) call org.apache.lucene.search.PhraseQuery.rewrite(IndexReader) call org.apache.lucene.search.PhraseQuery.rewrite(IndexReader) decl_stmt org.apache.lucene.util.fst.Builder = new for = < ++ if == || == - call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() return call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() NGramPhraseQuery public public if == return decl_stmt org.apache.lucene.search.NGramPhraseQuery = return == && call org.apache.lucene.search.PhraseQuery.equals(Object) call org.apache.lucene.search.PhraseQuery.equals(Object) call org.apache.lucene.search.PhraseQuery.equals(Object) call org.apache.lucene.search.PhraseQuery.equals(Object) call org.apache.lucene.search.PhraseQuery.equals(Object) int public public decl_stmt int = = * + call PhraseQuery.hashCode() call PhraseQuery.hashCode() call PhraseQuery.hashCode() call PhraseQuery.hashCode() call PhraseQuery.hashCode() = * + return public public return public public return call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() call org.apache.lucene.search.PhraseQuery.getTerms() public public return call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() call org.apache.lucene.search.PhraseQuery.getPositions() public public return call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString() call org.apache.lucene.search.PhraseQuery.toString()