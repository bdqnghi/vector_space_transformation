org.apache.solr.search.facet java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.IdentityHashMap import java.util.Iterator import java.util.LinkedHashMap import java.util.List import java.util.Map import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.Query import org.apache.solr.common.SolrException import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.handler.component.ResponseBuilder import org.apache.solr.request.SolrQueryRequest import org.apache.solr.request.SolrRequestInfo import org.apache.solr.schema.SchemaField import org.apache.solr.search.BitDocSet import org.apache.solr.search.DocIterator import org.apache.solr.search.DocSet import org.apache.solr.search.QParser import org.apache.solr.search.QueryContext import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.SyntaxError import org.apache.solr.util.RTimer import class CountSlotAcc decl LinkedHashMap FacetContext FacetRequestT decl SimpleOrderedMap decl SlotAcc public public throws FacetParser FacetRequest FacetContext public static < public static < < decl_stmt FacetParser = new decl_stmt org.apache.solr.search.facet.FacetRequest = try = call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() call FacetParser.parse() catch throw new decl_stmt FacetContext = new = = = = return call FacetRequest.createFacetProcessor() call FacetRequest.createFacetProcessor() call FacetRequest.createFacetProcessor() call FacetRequest.createFacetProcessor() call FacetRequest.createFacetProcessor() protected protected throws if == return DocSet QParser BitDocSet DocSet Query DocSet String private private throws if ! || return decl_stmt java.lang.String = decl_stmt org.apache.lucene.search.Query try decl_stmt org.apache.solr.search.QParser = = call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() catch throw new + decl_stmt org.apache.solr.search.BitDocSet = call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() decl_stmt org.apache.solr.search.DocSet = decl_stmt org.apache.solr.search.DocSet if decl_stmt org.apache.solr.search.DocSet = call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() new = else = = Object QParser decl IdentityHashMap decl List Map ResponseBuilder decl List private private throws decl_stmt java.util.List < = if == || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return decl_stmt org.apache.solr.handler.component.ResponseBuilder = decl_stmt java.util.Map = call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() call ResponseBuilder.req() if == return decl_stmt java.util.IdentityHashMap < = new <> for : decl_stmt java.lang.Object = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if ! instanceof continue for : < if ! instanceof continue decl_stmt org.apache.solr.search.QParser = try call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call decl IdentityHashMap.put() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() call org.apache.solr.search.QParser.getQuery() catch throw new if call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() call decl IdentityHashMap.size() == return decl_stmt java.util.List < = new <> if ! call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() call org.apache.solr.handler.component.ResponseBuilder.getQuery() if call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() != for : call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() call org.apache.solr.handler.component.ResponseBuilder.getFilters() if ! call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl IdentityHashMap.containsKey() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = != = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() public public return SlotAcc int protected protected throws = new <> if == = new = for < : call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() decl_stmt org.apache.solr.search.facet.SlotAcc = = call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() = new call decl LinkedHashMap.size() call decl LinkedHashMap.size() call decl LinkedHashMap.size() call decl LinkedHashMap.size() call decl LinkedHashMap.size() decl_stmt int = for : call decl LinkedHashMap.values() call decl LinkedHashMap.values() call decl LinkedHashMap.values() call decl LinkedHashMap.values() call decl LinkedHashMap.values() ++ = protected protected call CountSlotAcc.reset() call CountSlotAcc.reset() call CountSlotAcc.reset() call CountSlotAcc.reset() call CountSlotAcc.reset() for : int protected protected < throws if == && ! || call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() == return decl_stmt int = call CountSlotAcc.incrementCount() call CountSlotAcc.incrementCount() call CountSlotAcc.incrementCount() call CountSlotAcc.incrementCount() call CountSlotAcc.incrementCount() assert == FacetDebugInfo long RTimer FacetContext FacetProcessor protected protected < throws if == || == && ! return for < : call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() decl_stmt FacetContext = call FacetContext.sub() call FacetContext.sub() call FacetContext.sub() call FacetContext.sub() call FacetContext.sub() decl_stmt org.apache.solr.search.facet.FacetProcessor = if call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() != decl_stmt org.apache.solr.search.facet.FacetDebugInfo = new call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.setDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call FacetContext.getDebugInfo() call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setReqDescription(Map) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call org.apache.solr.search.facet.FacetDebugInfo.setProcessor(String) call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() call FacetProcessor.getClass() if != call org.apache.solr.search.facet.FacetDebugInfo.setFilter(String) call org.apache.solr.search.facet.FacetDebugInfo.setFilter(String) call org.apache.solr.search.facet.FacetDebugInfo.setFilter(String) call org.apache.solr.search.facet.FacetDebugInfo.setFilter(String) call org.apache.solr.search.facet.FacetDebugInfo.setFilter(String) call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() call FacetContext.filter() decl_stmt org.apache.solr.util.RTimer final final = new call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() decl_stmt long = long call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.util.RTimer.getTime() call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.setElapse(long) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) call org.apache.solr.search.facet.FacetDebugInfo.putInfoItem(String,Object) long call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() else call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call org.apache.solr.search.facet.FacetProcessor.process() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call decl SimpleOrderedMap.add() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() call org.apache.solr.search.facet.FacetProcessor.getResponse() int SolrIndexSearcher int decl List int LeafReaderContext int int decl Iterator throws decl_stmt int = decl_stmt org.apache.solr.search.SolrIndexSearcher = decl_stmt java.util.List final final final < = call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() call org.apache.solr.search.SolrIndexSearcher.getIndexReader() decl_stmt java.util.Iterator final final final < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() decl_stmt org.apache.lucene.index.LeafReaderContext = decl_stmt int = decl_stmt int decl_stmt int = for = decl_stmt int final final = if >= do = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if == throw new = = call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() call org.apache.lucene.index.LeafReaderContext.reader() = + >= assert >= ++ - return throws if != for : throws for : int < throws decl_stmt int = call CountSlotAcc.getCount() call CountSlotAcc.getCount() call CountSlotAcc.getCount() call CountSlotAcc.getCount() call CountSlotAcc.getCount() if > || for : int boolean public public < throws decl_stmt boolean = call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() call FacetRequestT.getFacetStats() > || call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() call FacetRequestT.getSubFacets() > decl_stmt int if != = else if if == = else = call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() = else if == = call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() call FacetContext.base() else = call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() call FacetContext.searcher() try int finally if != = DocSet DocSet SchemaField public static public static throws decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.solr.search.DocSet = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt org.apache.solr.search.DocSet = return Query SchemaField decl BooleanQuery public static public static throws decl_stmt org.apache.solr.schema.SchemaField = decl_stmt org.apache.lucene.search.Query = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build()