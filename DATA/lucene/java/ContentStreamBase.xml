org.apache.solr.common.util java.io.ByteArrayInputStream import java.io.File import java.io.FileInputStream import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.io.Reader import java.io.StringReader import java.io.UnsupportedEncodingException import java.net.URL import java.net.URLConnection import java.nio.charset.StandardCharsets import java.util.Locale import class org.apache.solr.common.util.ContentStreamBase super super implements String Long String String String int public static public static if != decl_stmt int = call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) if > return call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + return URLConnection public public throws decl_stmt sun.net.www.URLConnection = = call sun.net.www.URLConnection.getContentType() call sun.net.www.URLConnection.getContentType() call sun.net.www.URLConnection.getContentType() call sun.net.www.URLConnection.getContentType() call sun.net.www.URLConnection.getContentType() = = new call sun.net.www.URLConnection.getContentLength() call sun.net.www.URLConnection.getContentLength() call sun.net.www.URLConnection.getContentLength() call sun.net.www.URLConnection.getContentLength() call sun.net.www.URLConnection.getContentLength() return call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() InputStream char public public if == decl_stmt java.io.InputStream = try = new decl_stmt char = char call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) if == return if == return catch finally if != try call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch return public public throws return new int char String public static public static decl_stmt java.lang.String = decl_stmt int = - for = < ++ decl_stmt char = if continue if == || == && + == || + == || == || == = else if == = break return public public throws return new String public public throws decl_stmt java.lang.String = return == new : new String public public throws decl_stmt java.lang.String = return == new : new public public return public public = public public return public public = public public return public public = public public return public public = public public throws return new