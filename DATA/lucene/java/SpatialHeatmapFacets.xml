org.apache.solr.handler.component javax.imageio.ImageIO import javax.imageio.ImageReader import javax.imageio.spi.ImageReaderSpi import javax.imageio.stream.ImageInputStream import javax.imageio.stream.ImageInputStreamImpl import java.awt.image.BufferedImage import java.io.ByteArrayOutputStream import java.io.IOException import java.lang.invoke.MethodHandles import java.util.AbstractList import java.util.Iterator import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.concurrent.TimeUnit import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.shape.Shape import org.apache.lucene.spatial.prefix.HeatmapFacetCounter import org.apache.lucene.spatial.prefix.PrefixTreeStrategy import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.util.Bits import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.FacetParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.schema.AbstractSpatialPrefixTreeFieldType import org.apache.solr.schema.FieldType import org.apache.solr.schema.RptWithGeometrySpatialField import org.apache.solr.schema.SchemaField import org.apache.solr.schema.SpatialRecursivePrefixTreeFieldType import org.apache.solr.search.BitDocSet import org.apache.solr.search.DocSet import org.apache.solr.search.QueryParsing import org.apache.solr.util.DistanceUnits import org.apache.solr.util.SpatialUtils import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.handler.component.SpatialHeatmapFacets String double String Logger String decl NamedList RptWithGeometrySpatialField String int decl HeatmapFacetCounter Double SpatialContext SchemaField Shape DistanceUnits int AbstractSpatialPrefixTreeFieldType BitDocSet SpatialArgs Bits double PrefixTreeStrategy FieldType Integer decl Heatmap public static < public static < throws decl_stmt org.apache.solr.schema.SchemaField final final = decl_stmt org.apache.solr.schema.FieldType final final = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() decl_stmt org.apache.lucene.spatial.prefix.PrefixTreeStrategy final final decl_stmt org.apache.solr.util.DistanceUnits final final if instanceof decl_stmt org.apache.solr.schema.AbstractSpatialPrefixTreeFieldType = = call AbstractSpatialPrefixTreeFieldType.getStrategy() call AbstractSpatialPrefixTreeFieldType.getStrategy() call AbstractSpatialPrefixTreeFieldType.getStrategy() call AbstractSpatialPrefixTreeFieldType.getStrategy() call AbstractSpatialPrefixTreeFieldType.getStrategy() = call AbstractSpatialPrefixTreeFieldType.getDistanceUnits() call AbstractSpatialPrefixTreeFieldType.getDistanceUnits() call AbstractSpatialPrefixTreeFieldType.getDistanceUnits() call AbstractSpatialPrefixTreeFieldType.getDistanceUnits() call AbstractSpatialPrefixTreeFieldType.getDistanceUnits() else if instanceof decl_stmt org.apache.solr.schema.RptWithGeometrySpatialField = = call RptWithGeometrySpatialField.getStrategy() call RptWithGeometrySpatialField.getStrategy() call RptWithGeometrySpatialField.getStrategy() call RptWithGeometrySpatialField.getStrategy() call RptWithGeometrySpatialField.getStrategy() = call RptWithGeometrySpatialField.getDistanceUnits() call RptWithGeometrySpatialField.getDistanceUnits() call RptWithGeometrySpatialField.getDistanceUnits() call RptWithGeometrySpatialField.getDistanceUnits() call RptWithGeometrySpatialField.getDistanceUnits() else throw new + + + decl_stmt SpatialContext final final = call PrefixTreeStrategy.getSpatialContext() call PrefixTreeStrategy.getSpatialContext() call PrefixTreeStrategy.getSpatialContext() call PrefixTreeStrategy.getSpatialContext() call PrefixTreeStrategy.getSpatialContext() decl_stmt java.lang.String = decl_stmt java.awt.Shape final final = == call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() : decl_stmt int final final decl_stmt java.lang.Integer = decl_stmt int final final = call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() if != = if <= || > throw new + + else decl_stmt org.apache.lucene.spatial.query.SpatialArgs = new == call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() call SpatialContext.getWorldBounds() : decl_stmt java.lang.Double final final = if != call org.apache.lucene.spatial.query.SpatialArgs.setDistErr(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErr(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErr(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErr(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErr(Double) * call org.apache.solr.util.DistanceUnits.multiplierFromThisUnitToDegrees() call org.apache.solr.util.DistanceUnits.multiplierFromThisUnitToDegrees() call org.apache.solr.util.DistanceUnits.multiplierFromThisUnitToDegrees() call org.apache.solr.util.DistanceUnits.multiplierFromThisUnitToDegrees() call org.apache.solr.util.DistanceUnits.multiplierFromThisUnitToDegrees() call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) call org.apache.lucene.spatial.query.SpatialArgs.setDistErrPct(Double) decl_stmt double = call org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialContext,double) call org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialContext,double) call org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialContext,double) call org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialContext,double) call org.apache.lucene.spatial.query.SpatialArgs.resolveDistErr(SpatialContext,double) if <= throw new + + + + + + + = call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() call org.apache.lucene.spatial.prefix.PrefixTreeStrategy.getGrid() decl_stmt org.apache.lucene.util.Bits if instanceof decl_stmt org.apache.solr.search.BitDocSet = = call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() call org.apache.solr.search.BitDocSet.getBits() else = new public public return public public return decl_stmt Heatmap final final final final final try = catch throw new decl_stmt org.apache.solr.common.util.NamedList < = new <> call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl Heatmap.add() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() call decl HeatmapFacetCounter.region() decl_stmt boolean = for : if > = break : return public public return public public return Object String private static private static < decl_stmt java.lang.String final final = decl_stmt java.lang.Object final final switch case = != : break case = != : break default: throw new + + + + int boolean static < < static < < final final final final final final final return new < < public < public < final final decl_stmt boolean = decl_stmt int = - - for = < ++ if * + > = break if ! return return new < public public return * + public public return public public return int boolean public < public < final final decl_stmt boolean = decl_stmt int = - - for = < ++ if * + > = break if ! return return new < public public return * + public public return public public return * + public public return public public return long BufferedImage decl byte long static static final final final final final final final decl_stmt long = decl_stmt java.awt.image.BufferedImage = for = < ++ for = < ++ * + decl_stmt byte = decl_stmt long = - call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() * if != && return HeatmapFacet decl LinkedHashMap decl String public static < public static < decl_stmt java.util.LinkedHashMap final final final < = new <> decl_stmt java.lang.String final final final = if != for : decl_stmt HeatmapFacet = new call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call HeatmapFacet.getKey() call HeatmapFacet.getKey() call HeatmapFacet.getKey() call HeatmapFacet.getKey() call HeatmapFacet.getKey() return HeatmapFacet String String String decl Iterator public static public static < for < : decl_stmt java.lang.String final final = decl_stmt HeatmapFacet final final = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + else if != decl_stmt java.util.Iterator final final final < = call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.lang.String = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) continue decl_stmt java.lang.String = call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() call HeatmapFacet.localParams() + + + + + + HeatmapFacet decl NamedList decl NamedList String public static public static < decl_stmt org.apache.solr.common.util.NamedList < < = < < if == return for < < : decl_stmt java.lang.String = decl_stmt org.apache.solr.common.util.NamedList < = decl_stmt HeatmapFacet final final = if == call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() continue = call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() call decl NamedList.remove() + if == = else assert call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() call HeatmapFacet.namedList() BufferedImage int int static static if == return decl_stmt java.awt.image.BufferedImage final final = decl_stmt int = call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) decl_stmt int = call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() if == = new * else assert == * for = < ++ for = < ++ * + += return HeatmapFacet decl NamedList decl NamedList public static public static < decl_stmt org.apache.solr.common.util.NamedList < < = new <> for < : decl_stmt HeatmapFacet final final = decl_stmt org.apache.solr.common.util.NamedList final final final < = if == continue int call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() int call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.get() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return ImageInputStream int ImageReader static static final final final decl_stmt ImageInputStream = new public public throws = if >= return - else return int ++ public public throws = if >= return - else decl_stmt int = - int int += return public public return public public return public public return try decl_stmt javax.imageio.ImageReader = call javax.imageio.ImageReader.setInput(Object,boolean,boolean) call javax.imageio.ImageReader.setInput(Object,boolean,boolean) call javax.imageio.ImageReader.setInput(Object,boolean,boolean) call javax.imageio.ImageReader.setInput(Object,boolean,boolean) call javax.imageio.ImageReader.setInput(Object,boolean,boolean) return call javax.imageio.ImageReader.read(int) call javax.imageio.ImageReader.read(int) call javax.imageio.ImageReader.read(int) call javax.imageio.ImageReader.read(int) call javax.imageio.ImageReader.read(int) catch throw new + public public throws = if >= return - else return int ++ int public public throws = if >= return - else decl_stmt int = - int int += return public public return public public return public public return ByteArrayOutputStream static static decl_stmt java.io.ByteArrayOutputStream = new * + try catch throw new + return call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() static static return new static static - - ^ static static return - - ^