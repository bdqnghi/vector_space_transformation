org.apache.solr.cloud java.lang.invoke.MethodHandles import java.net.ConnectException import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Set import java.util.concurrent.atomic.AtomicInteger import org.apache.http.client.HttpClient import org.apache.http.impl.client.CloseableHttpClient import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.SolrTestCaseJ4.SuppressObjectReleaseTracker import org.apache.solr.SolrTestCaseJ4.SuppressSSL import org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient import org.apache.solr.client.solrj.impl.HttpClientUtil import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.IOUtils import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import com.carrotsearch.randomizedtesting.annotations.ThreadLeakLingering import class annotation annotation annotation annotation org.apache.solr.cloud.ChaosMonkeyNothingIsSafeTest super super extends Logger int decl RandVal decl String Integer int public static public static = public static public static public public return public public return public public throws StoppableSearchThread decl Set StoppableIndexingThread int decl Set int decl int int long decl List boolean decl List decl List FullThrottleStoppableIndexingThread ZkStateReader long long boolean public public throws decl_stmt boolean = try decl_stmt org.apache.solr.common.cloud.ZkStateReader = for = < ++ call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) + decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> decl_stmt int = : decl_stmt int = for = < ++ decl_stmt org.apache.solr.cloud.StoppableIndexingThread = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() = = for = < ++ decl_stmt org.apache.solr.cloud.StoppableSearchThread = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call StoppableSearchThread.start() call StoppableSearchThread.start() call StoppableSearchThread.start() call StoppableSearchThread.start() call StoppableSearchThread.start() decl_stmt boolean = if decl_stmt FullThrottleStoppableIndexingThread = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call FullThrottleStoppableIndexingThread.start() call FullThrottleStoppableIndexingThread.start() call FullThrottleStoppableIndexingThread.start() call FullThrottleStoppableIndexingThread.start() call FullThrottleStoppableIndexingThread.start() try decl_stmt long if != - = else decl_stmt int if = new else = new = - finally * + for : call org.apache.solr.cloud.StoppableIndexingThread.safeStop() call org.apache.solr.cloud.StoppableIndexingThread.safeStop() call org.apache.solr.cloud.StoppableIndexingThread.safeStop() call org.apache.solr.cloud.StoppableIndexingThread.safeStop() call org.apache.solr.cloud.StoppableIndexingThread.safeStop() for : call StoppableIndexingThread.join() call StoppableIndexingThread.join() call StoppableIndexingThread.join() call StoppableIndexingThread.join() call StoppableIndexingThread.join() for = < ++ call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) call org.apache.solr.common.cloud.ZkStateReader.getLeaderRetry(String,String) + call org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes() call org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes() call org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes() call org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes() call org.apache.solr.common.cloud.ZkStateReader.updateLiveNodes() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() > for : if instanceof && ! instanceof decl_stmt int = + + + + > decl_stmt java.util.Set < = decl_stmt java.util.Set < = ! decl_stmt long = new decl_stmt long = new + + > if + new + if * + try = decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = finally if ! decl Set private < private < < decl_stmt java.util.Set < = new < for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return decl Set private < private < < decl_stmt java.util.Set < = new < for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return int int SolrInputDocument int String String public public decl_stmt int = decl_stmt int = decl_stmt int = while && ! decl_stmt java.lang.String = + + ++ if && && > decl_stmt java.lang.String = try ++ catch try ++ if > : continue decl_stmt org.apache.solr.common.SolrInputDocument = catch if && call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + + private private if instanceof ++ if > - = = new public public = public public return public < public < throw new public < public < throw new SolrInputDocument protected protected throws decl_stmt org.apache.solr.common.SolrInputDocument = public public call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn()