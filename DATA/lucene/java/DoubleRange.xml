org.apache.lucene.facet.range java.io.IOException import java.util.Collections import java.util.Objects import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.search.ConstantScoreScorer import org.apache.lucene.search.ConstantScoreWeight import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.TwoPhaseIterator import org.apache.lucene.search.Weight import org.apache.lucene.util.NumericUtils import class org.apache.lucene.facet.range.DoubleRange super super extends double double public public return >= && <= return new public public return + + + + ValueSourceQuery public public if == return decl_stmt ValueSourceQuery = return && && public public return * + public public return + + Query public public throws if != decl_stmt org.apache.lucene.search.Query final final = if != return new return int Weight DocIdSetIterator Scorer TwoPhaseIterator FunctionValues public public throws decl_stmt org.apache.lucene.search.Weight final final = == : return new public public throws decl_stmt int final final = decl_stmt org.apache.lucene.search.DocIdSetIterator final final if == = else decl_stmt org.apache.lucene.search.Scorer = call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() call Weight.scorer() if == return = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = decl_stmt org.apache.lucene.search.TwoPhaseIterator final final = new public public throws return call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() public public return return new DocIdSetIterator Scorer TwoPhaseIterator FunctionValues int public public throws decl_stmt int final final = decl_stmt org.apache.lucene.search.DocIdSetIterator final final if == = else decl_stmt org.apache.lucene.search.Scorer = if == return = call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() decl_stmt org.apache.lucene.queries.function.FunctionValues final final = decl_stmt org.apache.lucene.search.TwoPhaseIterator final final = new public public throws return call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.queries.function.FunctionValues.doubleVal(int) call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() call org.apache.lucene.search.DocIdSetIterator.docID() public public return return new public public throws return public public return public public final final final final return new