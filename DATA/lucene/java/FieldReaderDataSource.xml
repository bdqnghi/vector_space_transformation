org.apache.solr.handler.dataimport static static org.apache.solr.handler.data.DataImportHandlerException.SEVERE import static static org.apache.solr.handler.data.DataImportHandlerException.wrapAndThrow import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.* import java.lang.invoke.MethodHandles import java.nio.charset.StandardCharsets import java.sql.Blob import java.sql.Clob import java.sql.SQLException import java.util.Properties import class org.apache.solr.handler.dataimport.FieldReaderDataSource super super extends EntityProcessorWrapper VariableResolver String Logger String public public = = = Clob Object Blob public public decl_stmt java.lang.Object = call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() call org.apache.solr.handler.dataimport.EntityProcessorWrapper.getVariableResolver() if == throw new + if instanceof return new else if instanceof decl_stmt java.sql.Clob = try return catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return else if instanceof decl_stmt java.sql.Blob = try return catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) return else return new call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() static static try return catch return private private throws if == return new else return new public public