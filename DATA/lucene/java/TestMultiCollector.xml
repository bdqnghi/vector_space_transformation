org.apache.lucene.search java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.document.Document import org.apache.lucene.index.IndexReader import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.TestMultiCollector super super extends LeafCollector public public throws if >= throw new decl_stmt org.apache.lucene.search.LeafCollector final final = return new public public throws if >= throw new ++ public public throws if >= throw new ++ public public throws return new public public throws public public throws IndexSearcher decl Map int decl List int Document int RandomIndexWriter IndexReader int int TotalHitCountCollector Directory public public throws decl_stmt int final final = for = < ++ decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt int final final = decl_stmt org.apache.lucene.document.Document final final = new for = < ++ call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher final final = decl_stmt java.util.Map < = new <> decl_stmt java.util.List < = new <> decl_stmt int final final = for = < ++ decl_stmt int final final = + decl_stmt int final final = > : decl_stmt org.apache.lucene.search.TotalHitCountCollector = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call int.getValue() call int.getValue() call int.getValue() call int.getValue() call int.getValue() call int.getKey() call int.getKey() call int.getKey() call int.getKey() call int.getKey() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() AtomicBoolean AtomicBoolean Collector decl List Collector Scorer LeafCollector Collector public public throws decl_stmt org.apache.lucene.search.Collector = new decl_stmt org.apache.lucene.search.Collector = new decl_stmt java.util.concurrent.atomic.AtomicBoolean = new = new decl_stmt java.util.concurrent.atomic.AtomicBoolean = new = new = new = new decl_stmt org.apache.lucene.search.Scorer = new decl_stmt java.util.List < = decl_stmt org.apache.lucene.search.Collector = decl_stmt org.apache.lucene.search.LeafCollector = call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call org.apache.lucene.search.Collector.getLeafCollector(LeafReaderContext) call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call org.apache.lucene.search.LeafCollector.collect(int) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call LeafCollector.setScorer() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get()