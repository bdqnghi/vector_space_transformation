org.apache.lucene.search.suggest.analyzing java.io.IOException import java.io.InputStream import java.io.OutputStream import java.io.Reader import java.nio.file.Files import java.nio.file.Path import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import java.util.TreeSet import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.CannedBinaryTokenStream import org.apache.lucene.analysis.CannedBinaryTokenStream.BinaryToken import org.apache.lucene.analysis.CannedTokenStream import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenFilter import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.MockUTF16TermAttributeImpl import org.apache.lucene.analysis.Token import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.Document import org.apache.lucene.search.suggest.Input import org.apache.lucene.search.suggest.InputArrayIterator import org.apache.lucene.search.suggest.Lookup.LookupResult import org.apache.lucene.store.Directory import org.apache.lucene.store.MockDirectoryWrapper import org.apache.lucene.util.BytesRef import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LineFileDocs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.search.suggest.analyzing.AnalyzingSuggesterTest super super extends char decl Iterable Directory AnalyzingSuggester Analyzer decl List public public throws decl_stmt java.lang.Iterable < = new new new new new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl Iterable Directory AnalyzingSuggester Analyzer decl List public public throws decl_stmt java.lang.Iterable < = new new new new new new new new new new new new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new for = < ++ decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() AnalyzingSuggester int String decl List decl Map int boolean decl List decl List Analyzer Directory Document Analyzer LineFileDocs public public throws decl_stmt org.apache.lucene.util.LineFileDocs = new decl_stmt java.util.Map < = new <> decl_stmt java.util.List < = new <> decl_stmt int = for = < ++ decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() decl_stmt java.lang.String = call Document.getField() call Document.getField() call Document.getField() call Document.getField() call Document.getField() decl_stmt int = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if ! call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() || call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new | - decl_stmt boolean = if decl_stmt java.util.List < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new else call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new for : decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if else Directory Input decl List AnalyzingSuggester Analyzer public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new | - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Directory decl List AnalyzingSuggester Analyzer public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() Analyzer decl Input decl List AnalyzingSuggester Directory int public public throws decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt int = decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int Tokenizer decl List Analyzer Input TokenStream AnalyzingSuggester Directory decl TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl TokenStream int TokenStream Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final TokenStream public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final int Tokenizer decl List Analyzer Input TokenStream AnalyzingSuggester Directory decl TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final decl_stmt org.apache.lucene.search.suggest.Input = new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == decl TokenStream int TokenStream Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final TokenStream public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final Token private static private static decl_stmt org.apache.lucene.queryparser.surround.parser.Token final final = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) call org.apache.lucene.queryparser.surround.parser.Token.setPositionLength(int) return private static private static return new int Tokenizer private final private final return new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if ++ != return new new else return new new protected protected final final int Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if ++ != return new new else return new new protected protected final final public public if ++ != return new new else return new new protected protected final final Analyzer Directory int AnalyzingSuggester decl List public public throws decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt int = | decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new new new for = < ++ decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer Directory decl List AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new new new for = < ++ decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int public public decl_stmt int = if != return else if > return - else if < return else assert return public public return + + static static return - < public public throws = int int public final public final throws decl_stmt int = while if != || ! decl_stmt int = + if if == = = return if += return MockTokenizer TokenStream public public decl_stmt org.apache.lucene.analysis.MockTokenizer = new call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) call org.apache.lucene.analysis.MockTokenizer.setEnableChecks(boolean) decl_stmt org.apache.lucene.analysis.TokenStream if != = new else = return new int int decl List int boolean decl Set BytesRef decl Input decl List decl Input decl TreeSet decl String String String boolean Directory decl List boolean Analyzer StringBuilder int decl byte int String decl List String AnalyzingSuggester boolean int public public throws decl_stmt int = decl_stmt java.util.List final final final < = new <> decl_stmt java.util.TreeSet final final final < = new <> decl_stmt java.util.Set final final final < = new <> decl_stmt boolean = decl_stmt org.apache.lucene.search.suggest.Input = decl_stmt org.apache.lucene.search.suggest.Input = if = new else = new decl_stmt boolean = decl_stmt int final final = decl_stmt boolean final final = if + + + + + + + for = < ++ decl_stmt int = decl_stmt java.lang.String decl_stmt java.lang.String while = = decl_stmt boolean = for = < ++ decl_stmt java.lang.String while = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > if > += if && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - != += += if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) = if && += else = += break = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) + + + + if && += if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() break for = < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() ++ call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt int = << decl_stmt org.apache.lucene.util.BytesRef if decl_stmt byte = new = new = new else = new = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new if decl_stmt java.util.List < = new <> for : + + + + + decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new : - if call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new else call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new for : if + decl_stmt int final final = decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) decl_stmt java.util.List < = new <> decl_stmt java.lang.String = decl_stmt java.lang.StringBuilder = new decl_stmt boolean = for = < ++ decl_stmt java.lang.String = if && call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() > && ! call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) if && call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) = decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() while decl_stmt java.lang.String = call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) call java.lang.String.replaceAll(String,String) + if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) break = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == continue if && || += if + for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() > || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > new < public public decl_stmt int = if == return else return if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() if for : + + + for : + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call java.lang.String.toString() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int public public decl_stmt int = if == return else return Analyzer Directory decl List AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer Directory AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) Analyzer InputStream decl List AnalyzingSuggester Directory Path OutputStream Path public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.nio.file.Path = decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt java.io.OutputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() decl_stmt java.io.InputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.getCount() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Analyzer Tokenizer InputStream decl List AnalyzingSuggester Directory Path OutputStream Path public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new public public return new new protected protected final final decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.nio.file.Path = decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt java.io.OutputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() decl_stmt java.io.InputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new public public return new new protected protected final final public public return new new protected protected final final Analyzer int Tokenizer InputStream decl List AnalyzingSuggester Directory Path OutputStream Path public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if == ++ return new new else return new new protected protected final final decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new decl_stmt java.util.List < = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.nio.file.Path = decl_stmt java.nio.file.Path = call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) call java.nio.file.Path.resolve(Path) decl_stmt java.io.OutputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.store(DataOutput) call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() decl_stmt java.io.InputStream = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.load(DataInput) call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() = call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() int Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int public public if == ++ return new new else return new new protected protected final final public public if == ++ return new new else return new new protected protected final final Analyzer int Tokenizer TokenStream AnalyzingSuggester Directory decl TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new new new new new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new decl TokenStream int TokenStream Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new decl_stmt int = decl_stmt org.apache.lucene.analysis.TokenStream final final final = new new new new new new new new new new new new new new new new new public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final TokenStream public public decl_stmt org.apache.lucene.analysis.TokenStream = ++ return protected protected final final Analyzer Directory AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) Analyzer Directory AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) Token Directory Token AnalyzingSuggester Tokenizer public public throws decl_stmt org.apache.lucene.analysis.Analyzer final final = new protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new public public decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() return new new protected protected final final decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) Token Token Tokenizer protected protected decl_stmt org.apache.lucene.analysis.Tokenizer = new return new public public decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() return new new protected protected final final Token Token public public decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() decl_stmt org.apache.lucene.queryparser.surround.parser.Token = new call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() call Token.setPositionIncrement() return new new protected protected final final Analyzer Directory AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new - call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.lookup(CharSequence,Set,boolean,int) decl List static final < static final < decl_stmt java.util.List final final final < = new <> for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return Analyzer Directory String AnalyzingSuggester public public throws decl_stmt org.apache.lucene.analysis.Analyzer = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester = new decl_stmt java.lang.String = try call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) call org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester.build(InputIterator) new new new catch catch private private return