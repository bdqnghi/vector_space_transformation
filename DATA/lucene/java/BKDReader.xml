org.apache.lucene.util.bkd java.io.IOException import java.util.Arrays import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.index.PointValues.IntersectVisitor import org.apache.lucene.index.PointValues.Relation import org.apache.lucene.store.IndexInput import org.apache.lucene.util.Accountable import org.apache.lucene.util.BytesRef import org.apache.lucene.util.StringHelper import class org.apache.lucene.util.bkd.BKDReader super super implements decl long decl byte int int int int int long decl byte IndexInput decl byte int public public throw new public public if < || >= throw new + + + for = < ++ if * * > throw new + new * + + + + + + new * if * * < throw new + new * + + + + + + new * if == if == = else if > throw new + new + + + + + new else public public throw new decl byte decl byte public public throws decl_stmt byte = new decl_stmt byte = new byte new int decl byte VerifyVisitor int int int private private throws if >= decl_stmt int = - if < decl_stmt VerifyVisitor = = = decl_stmt int = else else decl_stmt int = * + decl_stmt int = & assert < decl_stmt byte = new + * * + * * + public public throws private private throws if >= - else * * + public public return new call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() int int public public throws decl_stmt int = - decl_stmt int = int protected protected throws call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() for = < ++ call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) int protected protected throws call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() for = < ++ = call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) return int protected protected throws for = < ++ decl_stmt int = call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() = if > call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() * for = < ++ for = < ++ decl_stmt int = call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() * + - int decl byte Relation int int int private private throws decl_stmt javax.management.relation.Relation = if == return else if == return else if >= decl_stmt int = - if < decl_stmt int = else decl_stmt int = * + decl_stmt int = & assert < decl_stmt byte = new + * * + * * + int int public public decl_stmt int = * + decl_stmt int = & assert < + * public public return + * public public return call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() public public return call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() call decl byte.clone() public public return public public return public public return public public return public public return >=