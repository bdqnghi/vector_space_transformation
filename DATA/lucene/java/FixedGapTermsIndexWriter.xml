org.apache.lucene.codecs.blockterms org.apache.lucene.store.IndexOutput import org.apache.lucene.store.RAMOutputStream import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.TermStats import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentWriteState import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.IOUtils import org.apache.lucene.util.StringHelper import org.apache.lucene.util.packed.MonotonicBlockPackedWriter import org.apache.lucene.util.packed.PackedInts import java.util.List import java.util.ArrayList import java.io.IOException import class org.apache.lucene.codecs.blockterms.FixedGapTermsIndexWriter super super extends int int String int int String decl List int IndexOutput SimpleFieldWriter public public decl_stmt SimpleFieldWriter = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return protected protected final final final final return public public throws if == ++ return else if == return int public public throws decl_stmt int final final = call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() call IndexOutput.writeBytes() - assert <= += ++ public public throws = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() = = = = SimpleFieldWriter int int boolean long public public throws if != decl_stmt boolean = try decl_stmt long final final = call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() call IndexOutput.getFilePointer() decl_stmt int final final = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = for = < ++ decl_stmt SimpleFieldWriter = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > ++ call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() for = < ++ decl_stmt SimpleFieldWriter = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if > call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVInt() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() call IndexOutput.writeVLong() = finally if else = private private throws call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong() call IndexOutput.writeLong()