org.apache.lucene.search.vectorhighlight java.io.IOException import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.index.Term import org.apache.lucene.search.BooleanClause.Occur import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BoostQuery import org.apache.lucene.search.ConstantScoreQuery import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.RegexpQuery import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TermRangeQuery import org.apache.lucene.search.WildcardQuery import org.apache.lucene.search.vectorhighlight.FieldQuery.QueryPhraseMap import org.apache.lucene.search.vectorhighlight.FieldTermStack.TermInfo import org.apache.lucene.util.BytesRef import class org.apache.lucene.search.vectorhighlight.FieldQueryTest super super extends float private private = : * Query decl Builder decl BooleanQuery decl Builder decl BooleanQuery public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = = new decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) FieldQuery Query decl Builder decl BooleanQuery public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.Query = call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call Query.flatten() call Query.flatten() call Query.flatten() call Query.flatten() call Query.flatten() FieldQuery decl BooleanQuery decl Builder public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Set < = new <> call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() call decl Builder.flatten() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) call org.apache.lucene.search.vectorhighlight.FieldQuery.expand(Collection) Query QueryPhraseMap FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call QueryPhraseMap.isTerminal() call QueryPhraseMap.isTerminal() call QueryPhraseMap.isTerminal() call QueryPhraseMap.isTerminal() call QueryPhraseMap.isTerminal() = call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) = call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) Query FieldQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == Query FieldQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getRootMap(String) == decl BooleanQuery decl Builder decl Builder decl BooleanQuery public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new decl_stmt org.apache.lucene.util.fst.Builder = new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() call decl Builder.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() call decl Builder.build() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() call decl BooleanQuery.termSetMap() decl_stmt java.util.Set < = call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() = call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.size() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() call decl Builder.contains() = call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() call decl BooleanQuery.getTermSet() Query decl Map QueryPhraseMap FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt QueryPhraseMap = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() != call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() != call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() != call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() != call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = = new = = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl Map QueryPhraseMap FieldQuery Query QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt QueryPhraseMap = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = = new = = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl Map QueryPhraseMap FieldQuery Query QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt QueryPhraseMap = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() FieldQuery decl Map decl Builder decl BooleanQuery QueryPhraseMap QueryPhraseMap QueryPhraseMap public public throws decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl_stmt java.util.Map < = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() decl_stmt QueryPhraseMap = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() decl_stmt QueryPhraseMap = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl_stmt QueryPhraseMap = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.size() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() = call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call FieldQuery.get() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() = call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() = call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call decl Map.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() call QueryPhraseMap.subMap() decl List Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) = new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) = new call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) decl List Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) = = new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) public public throws new new public public throws new new Term public public throws decl_stmt org.apache.lucene.index.Term = new new public public throws new new new decl List FieldQuery QueryPhraseMap private private throws decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt QueryPhraseMap = call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) call org.apache.lucene.search.vectorhighlight.FieldQuery.getFieldTermMap(String,String) decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) call org.apache.lucene.search.vectorhighlight.FieldQuery.searchPhrase(String,List) Query public public throws decl_stmt org.apache.lucene.search.Query = new public public return new public public return decl Set Query FieldQuery public public throws decl_stmt org.apache.lucene.search.Query = new = new decl_stmt org.apache.lucene.search.vectorhighlight.FieldQuery = new decl_stmt java.util.Set < = new <> call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float) call org.apache.lucene.search.vectorhighlight.FieldQuery.flatten(Query,IndexReader,Collection,float)