org.apache.solr.search static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import java.io.IOException import java.net.URI import java.net.URISyntaxException import java.nio.charset.StandardCharsets import java.util.ArrayDeque import java.util.Arrays import java.util.Deque import java.util.LinkedList import java.util.List import java.util.Locale import java.util.Map import java.util.concurrent.Future import java.util.concurrent.Semaphore import java.util.concurrent.TimeUnit import org.apache.hadoop.conf.Configuration import org.apache.hadoop.fs.FSDataInputStream import org.apache.hadoop.fs.FSDataOutputStream import org.apache.hadoop.fs.FileStatus import org.apache.hadoop.fs.FileSystem import org.apache.hadoop.fs.FsStatus import org.apache.hadoop.fs.Path import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.cloud.hdfs.HdfsTestUtil import org.apache.solr.common.util.IOUtils import org.apache.solr.request.SolrQueryRequest import org.apache.solr.update.DirectUpdateHandler2 import org.apache.solr.update.HdfsUpdateLog import org.apache.solr.update.UpdateHandler import org.apache.solr.update.UpdateLog import org.apache.solr.update.processor.DistributedUpdateProcessor.DistribPhase import org.apache.solr.util.BadHdfsThreadsFilter import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Ignore import org.junit.Test import org.noggit.ObjectBuilder import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import class annotation comment org.apache.solr.search.TestRecoveryHdfs super super extends String MiniDFSCluster FileSystem int String URI Configuration public static public static throws = = try decl_stmt java.net.URI = new decl_stmt Configuration = call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() call Configuration.setBoolean() = catch throw new + public static public static throws = = = public public try - catch throw new FileStatus HdfsUpdateLog boolean decl String public public throws decl_stmt org.apache.solr.update.HdfsUpdateLog = decl_stmt java.lang.String = call org.apache.solr.update.HdfsUpdateLog.getLogList(Path) call org.apache.solr.update.HdfsUpdateLog.getLogList(Path) call org.apache.solr.update.HdfsUpdateLog.getLogList(Path) call org.apache.solr.update.HdfsUpdateLog.getLogList(Path) call org.apache.solr.update.HdfsUpdateLog.getLogList(Path) new call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() decl_stmt boolean = for : decl_stmt FileStatus = call FileSystem.getFileStatus() call FileSystem.getFileStatus() call FileSystem.getFileStatus() call FileSystem.getFileStatus() call FileSystem.getFileStatus() new call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() call org.apache.solr.update.HdfsUpdateLog.getLogDir() if call FileStatus.getReplication() call FileStatus.getReplication() call FileStatus.getReplication() call FileStatus.getReplication() call FileStatus.getReplication() == = break Semaphore int Semaphore decl Deque public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = :: decl_stmt java.util.Deque < = new <> call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() call decl Deque.addFirst() + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) + call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() call decl Deque.size() + call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) decl_stmt int = call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() finally = = = UpdateLog UpdateHandler decl RecoveryInfo Semaphore SolrQueryRequest Long Semaphore decl Future decl UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = :: decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.util.concurrent.Future < = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() == call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() != call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.lang.Long = call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call decl RecoveryInfo.longValue() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() != call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() + + + + + call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = UpdateLog UpdateHandler Semaphore SolrQueryRequest Semaphore decl Future decl UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = :: decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() decl_stmt java.util.concurrent.Future < = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() == call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() decl_stmt RecoveryInfo = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() = call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() = call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() call decl Future.get() + + + + + + + call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() call org.apache.solr.update.UpdateLog.dropBufferedUpdates() + + + call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = Semaphore SolrQueryRequest UpdateHandler UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & != call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & == call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.bufferUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.update.UpdateLog.applyBufferedUpdates() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() = = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() call org.apache.solr.update.UpdateLog.getStartingOperation() & == call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call java.util.concurrent.Semaphore.acquire(int) call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() call org.apache.solr.update.UpdateLog.getState() finally = = = long long long public public throws decl_stmt long = decl_stmt long = decl_stmt long = assert > + + + + Semaphore SolrQueryRequest UpdateHandler Semaphore UpdateLog public public throws = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.update.UpdateHandler = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.UpdateLog = call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() call UpdateHandler.getUpdateLog() try call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() call java.util.concurrent.Semaphore.availablePermits() finally = = = private private < throws for = < ++ + decl String Semaphore int decl LinkedList Semaphore int String FSDataOutputStream public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = :: decl_stmt java.lang.String = decl_stmt java.lang.String = new for : call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() new new decl_stmt int = decl_stmt int = decl_stmt java.util.LinkedList < = new <> += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() new += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() new += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() += + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() new new < = new decl_stmt FSDataOutputStream = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() new new - short call FSDataOutputStream.writeUTF() call FSDataOutputStream.writeUTF() call FSDataOutputStream.writeUTF() call FSDataOutputStream.writeUTF() call FSDataOutputStream.writeUTF() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() + + call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() call decl LinkedList.subList() finally = = = decl String Semaphore String Semaphore FSDataOutputStream public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt java.lang.String = decl_stmt java.lang.String = new decl_stmt FSDataOutputStream = call FileSystem.append() call FileSystem.append() call FileSystem.append() call FileSystem.append() call FileSystem.append() new - call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) finally = = = decl String FSDataOutputStream String public public throws try = decl_stmt java.lang.String = decl_stmt java.lang.String = new decl_stmt FSDataOutputStream = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() new - short call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() new int call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() finally = = = decl String Semaphore long String decl byte Semaphore String String FSDataOutputStream FSDataInputStream public public throws try = decl_stmt java.util.concurrent.Semaphore final final = new decl_stmt java.util.concurrent.Semaphore final final = new = try call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) catch throw new = call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) decl_stmt java.lang.String = decl_stmt java.lang.String = new decl_stmt java.lang.String = - decl_stmt FSDataOutputStream = call FileSystem.append() call FileSystem.append() call FileSystem.append() call FileSystem.append() call FileSystem.append() new - call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeLong() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.writeChars() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() decl_stmt FSDataInputStream = call FileSystem.open() call FileSystem.open() call FileSystem.open() call FileSystem.open() call FileSystem.open() new - decl_stmt byte = new int call FSDataInputStream.available() call FSDataInputStream.available() call FSDataInputStream.available() call FSDataInputStream.available() call FSDataInputStream.available() call FSDataInputStream.readFully() call FSDataInputStream.readFully() call FSDataInputStream.readFully() call FSDataInputStream.readFully() call FSDataInputStream.readFully() call FSDataInputStream.close() call FSDataInputStream.close() call FSDataInputStream.close() call FSDataInputStream.close() call FSDataInputStream.close() decl_stmt long = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) + decl_stmt java.lang.String = + = call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() call FileSystem.create() new short call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.write() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call FSDataOutputStream.close() call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.release(int) call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.drainPermits() call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) call java.util.concurrent.Semaphore.tryAcquire(long,TimeUnit) finally = = = int private static private static decl_stmt int = - for = + if < break for = < ++ + = private static private static for = < - ++ for = < ++ if + != continue continue return return - decl String String throws decl_stmt java.lang.String = try decl_stmt java.lang.String = new for : call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() call FileSystem.delete() new new finally Map List Map String Map private static private static throws decl_stmt java.lang.String = decl_stmt java.util.Map = decl_stmt java.util.Map = if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) else if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() > = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) else if call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) decl_stmt java.util.Map = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl_stmt java.util.List = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() > = call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) call java.util.List.get(int) if == return return call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object)