org.apache.lucene.search.spans java.io.IOException import java.util.List import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexReaderContext import org.apache.lucene.index.IndexWriter import org.apache.lucene.index.IndexWriterConfig import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.ReaderUtil import org.apache.lucene.index.Term import org.apache.lucene.search.CheckHits import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.search.FuzzyQuery import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.PrefixQuery import org.apache.lucene.search.Query import org.apache.lucene.search.Scorer import org.apache.lucene.search.TermQuery import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.store.Directory import org.apache.lucene.util.LuceneTestCase import static static org.apache.lucene.search.spans.SpanTestUtil.assertFinished import static static org.apache.lucene.search.spans.SpanTestUtil.assertNext import static static org.apache.lucene.search.spans.SpanTestUtil.spanNearOrderedQuery import static static org.apache.lucene.search.spans.SpanTestUtil.spanNearUnorderedQuery import static static org.apache.lucene.search.spans.SpanTestUtil.spanNotQuery import static static org.apache.lucene.search.spans.SpanTestUtil.spanOrQuery import static static org.apache.lucene.search.spans.SpanTestUtil.spanTermQuery import class org.apache.lucene.search.spans.TestSpans super super extends Directory IndexSearcher decl String String IndexReader Document RandomIndexWriter public public throws = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new for = < ++ decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() = public public throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private private throws SpanQuery private private throws decl_stmt org.apache.lucene.search.spans.SpanQuery = public public throws public public throws public public throws public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new SpanQuery Spans public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery final final = decl_stmt org.apache.lucene.search.spans.Spans = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() call Spans.endPosition() SpanQuery Spans public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.Spans = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() private private throws return call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() call Spans.advance() Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new Spans public public throws decl_stmt org.apache.lucene.search.spans.Spans = new Scorer decl List LeafReaderContext IndexReaderContext float SpanQuery Similarity int Similarity public public throws decl_stmt IndexReaderContext = call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() call org.apache.lucene.search.IndexSearcher.getTopReaderContext() decl_stmt java.util.List < = call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() call IndexReaderContext.leaves() decl_stmt int = for = = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < ++ decl_stmt org.apache.lucene.index.LeafReaderContext final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.search.similarities.Similarity final final = new public public return decl_stmt org.apache.lucene.search.similarities.Similarity final final = call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) call org.apache.lucene.search.IndexSearcher.getSimilarity(boolean) decl_stmt org.apache.lucene.search.Scorer try call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) decl_stmt org.apache.lucene.search.spans.SpanQuery = = call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) call org.apache.lucene.search.IndexSearcher.createNormalizedWeight(Query,boolean) finally call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) if == call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() != call Scorer.docID() call Scorer.docID() call Scorer.docID() call Scorer.docID() call Scorer.docID() + decl_stmt float = call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() call Scorer.score() + == else == || call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() call Scorer.iterator() == public public return Document private private throws decl_stmt org.apache.lucene.document.Document final final = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) private private throws return call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new private private return private private if return else return private private return new IndexSearcher IndexWriter Directory IndexReader public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.IndexWriter final final = new new new call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.IndexReader final final = decl_stmt org.apache.lucene.search.IndexSearcher final final = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new <> new new new = new <> new new new = new <> new new new public public throws SpanQuery int SpanQuery Spans SpanQuery private private throws decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.Spans = call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call SpanQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt int = if != while call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() != while call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() != ++ return