org.apache.solr.cloud org.apache.solr.client.solrj.SolrClient import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrException import org.apache.solr.common.util.StrUtils import org.junit.BeforeClass import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.lang.invoke.MethodHandles import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import class org.apache.solr.cloud.TestDistribDocBasedVersion super super extends String String String Logger SolrClient public static public static throws protected protected return boolean = public = public throws decl_stmt boolean = try = finally if ! = private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = private private throws private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = = UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteById(String,String) call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() for = < += call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() + call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) call org.apache.solr.client.solrj.request.UpdateRequest.add(SolrInputDocument,Integer,Boolean) for = < += call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() call UpdateRequest.setParam() + call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) call org.apache.solr.client.solrj.SolrClient.request(SolrRequest) boolean throws decl_stmt boolean = try catch = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() boolean throws decl_stmt boolean = try catch = catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl List decl Map String decl Map Long QueryResponse String throws decl_stmt java.util.List < = decl_stmt java.util.Map < = new <> for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() += decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + decl_stmt java.lang.Long = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt java.util.Map < = new <> for : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl List decl List QueryResponse decl Map decl Map throws decl_stmt java.util.Map < = new <> decl_stmt java.util.List < = decl_stmt java.util.List < = for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt java.util.Map < = new <> for : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() QueryResponse decl Set decl Set throws call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) call org.apache.solr.client.solrj.SolrClient.query(SolrParams) decl_stmt java.util.Set < = new <> decl_stmt org.apache.solr.client.solrj.response.QueryResponse = decl_stmt java.util.Set < = new <> for : call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call org.apache.solr.client.solrj.response.QueryResponse.getResults() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() UpdateRequest throws decl_stmt org.apache.solr.client.solrj.request.UpdateRequest = new call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call org.apache.solr.client.solrj.request.UpdateRequest.deleteByQuery(String) call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.setParams() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process() call UpdateRequest.process()