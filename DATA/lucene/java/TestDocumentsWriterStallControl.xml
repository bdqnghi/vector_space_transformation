org.apache.lucene.index java.util.ArrayList import java.util.Collections import java.util.List import java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicBoolean import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.ThreadInterruptedException import class org.apache.lucene.index.TestDocumentsWriterStallControl super super extends decl Thread DocumentsWriterStallControl public public throws decl_stmt org.apache.lucene.index.DocumentsWriterStallControl = new call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) decl_stmt java.lang.Thread = call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) = call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() int decl Thread int long DocumentsWriterStallControl public public throws decl_stmt org.apache.lucene.index.DocumentsWriterStallControl final final = new call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) decl_stmt java.lang.Thread = new for = < ++ decl_stmt int final final = + = new public public decl_stmt int = for = < ++ call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) == if == call org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled() call org.apache.lucene.index.DocumentsWriterStallControl.waitIfStalled() decl_stmt long = while - < * && ! call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) if else int public public decl_stmt int = for = < ++ == if == int int DocumentsWriterStallControl int AtomicBoolean Synchronizer float AtomicBoolean decl Thread decl List int public public throws decl_stmt org.apache.lucene.index.DocumentsWriterStallControl final final = new call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt java.util.concurrent.atomic.AtomicBoolean final final = new decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt Synchronizer final final = new + + + decl_stmt java.lang.Thread = new + + decl_stmt java.util.List < = new < for = < ++ = new for = < + ++ = new for = + < + + ++ = new decl_stmt int = decl_stmt float final final = : for = < ++ if call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() for : if call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() call DocumentsWriterStallControl.hasBlocked() && call org.apache.lucene.index.DocumentsWriterStallControl.isHealthy() call org.apache.lucene.index.DocumentsWriterStallControl.isHealthy() call org.apache.lucene.index.DocumentsWriterStallControl.isHealthy() call org.apache.lucene.index.DocumentsWriterStallControl.isHealthy() call org.apache.lucene.index.DocumentsWriterStallControl.isHealthy() call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() if >= call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() + + + call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) if ! call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call java.util.concurrent.atomic.AtomicBoolean.get() call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() call Synchronizer.reset() + + + call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call Synchronizer.updateJoin() call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call java.util.concurrent.atomic.AtomicBoolean.set(boolean) call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.waiter() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() call Synchronizer.leftCheckpoint() for = < ++ call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) call org.apache.lucene.index.DocumentsWriterStallControl.updateStalled(boolean) if && instanceof if == + call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() call org.apache.lucene.index.DocumentsWriterStallControl.anyStalledThreads() int private private throws decl_stmt int = while if && for = + < + + ++ if if < *= break else break else break public public try while ! if try catch + throw new catch int public public try while ! decl_stmt int = && : for = < ++ if try catch + throw new if catch public static public static for : if != return return public static public static throws for : public static public static throws for : decl Thread public static public static final final decl_stmt java.lang.Thread = new for = < ++ = new public public return public public boolean public static public static throws while decl_stmt boolean = for : if != = break if return if else public public = new = new = new public public throws return