org.apache.solr.update java.io.IOException import java.lang.invoke.MethodHandles import java.net.ConnectException import java.net.SocketException import java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.HashSet import java.util.List import java.util.Set import org.apache.http.NoHttpResponseException import org.apache.http.client.HttpClient import org.apache.http.conn.ConnectTimeoutException import org.apache.lucene.util.BytesRef import org.apache.solr.client.solrj.SolrServerException import org.apache.solr.cloud.ZkController import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.common.util.StrUtils import org.apache.solr.core.SolrCore import org.apache.solr.handler.component.HttpShardHandlerFactory import org.apache.solr.handler.component.ShardHandler import org.apache.solr.handler.component.ShardHandlerFactory import org.apache.solr.handler.component.ShardRequest import org.apache.solr.handler.component.ShardResponse import org.apache.solr.logging.MDCLoggingContext import org.apache.solr.request.LocalSolrQueryRequest import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.update.processor.UpdateRequestProcessor import org.apache.solr.update.processor.UpdateRequestProcessorChain import org.slf4j.Logger import org.slf4j.LoggerFactory import static static org.apache.solr.update.processor.DistributedUpdateProcessor.DistribPhase.FROMLEADER import static static org.apache.solr.update.processor.DistributingUpdateProcessorFactory.DISTRIB_UPDATE_PARAM import class org.apache.solr.update.PeerSync UpdateLog decl Set boolean boolean ShardHandler long decl List Logger UpdateHandler decl List boolean long SolrCore boolean decl List long decl Set int decl Comparator HttpShardHandlerFactory decl Comparator HttpClient boolean decl List int public public < = int public public < decl_stmt int = * return String ZkController private private decl_stmt org.apache.solr.cloud.ZkController = call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() decl_stmt java.lang.String = if != = call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() call org.apache.solr.cloud.ZkController.getBaseUrl() return + call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() call UpdateHandler.core() + + + decl List ShardResponse long boolean public public if == return try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + if if != call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + for : try = call org.apache.solr.update.UpdateLog.getRecentUpdates() call org.apache.solr.update.UpdateLog.getRecentUpdates() call org.apache.solr.update.UpdateLog.getRecentUpdates() call org.apache.solr.update.UpdateLog.getRecentUpdates() call org.apache.solr.update.UpdateLog.getRecentUpdates() = if != if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return = = decl_stmt long = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() < call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + return decl_stmt java.util.List < = new <> for : if < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > = = else call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() = new <> = new <> for decl_stmt org.apache.solr.handler.component.ShardResponse = call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() if == break decl_stmt boolean = if ! call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call ShardHandler.cancelAll() call ShardHandler.cancelAll() call ShardHandler.cancelAll() call ShardHandler.cancelAll() call ShardHandler.cancelAll() return decl_stmt boolean = for : if = if ! break call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + : return finally SyncShardRequest private private decl_stmt SyncShardRequest = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = = new = = new call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call SyncShardRequest.params() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() ShardRequest boolean Throwable private private decl_stmt org.apache.solr.handler.component.ShardRequest = if != if && == && instanceof decl_stmt java.lang.Throwable = decl_stmt boolean = if || instanceof || instanceof || instanceof || instanceof call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return if && == && instanceof && == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return if && == && instanceof && == call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + + return call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + return if == return else return Throwable Throwable private private decl_stmt java.lang.Throwable = while if instanceof return decl_stmt java.lang.Throwable = call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() call java.lang.Throwable.getCause() if != = else return decl List long long Object long decl List boolean SyncShardRequest private private decl_stmt java.util.List < = < decl_stmt SyncShardRequest = = decl_stmt java.lang.Object = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + + + + if != = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return decl_stmt boolean = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + + decl_stmt long = decl_stmt long = decl_stmt long = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if < call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + + + + return if > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + + + + return decl_stmt java.util.List < = new <> for : if ! && < break if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() || call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() continue call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + + + + if = return if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + return return IndexFingerprint int private private if == return try decl_stmt org.apache.solr.update.IndexFingerprint = decl_stmt int = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + return == catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + return ShardRequest String private private < decl_stmt java.lang.String = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + + + + + + decl_stmt org.apache.solr.handler.component.ShardRequest = = = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardRequest.responses() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() return int decl List DeleteUpdateCommand UpdateRequestProcessor SolrQueryRequest Object SolrInputDocument decl byte long ModifiableSolrParams decl List UpdateRequestProcessorChain SyncShardRequest String SolrQueryResponse long private private decl_stmt java.util.List < = < decl_stmt SyncShardRequest = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() call SyncShardRequest.requestedUpdates() + + + + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() return decl_stmt org.apache.solr.common.params.ModifiableSolrParams = new call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) call org.apache.solr.common.params.ModifiableSolrParams.set(String,boolean) decl_stmt org.apache.solr.request.SolrQueryRequest = new decl_stmt org.apache.solr.response.SolrQueryResponse = new decl_stmt org.apache.solr.update.processor.UpdateRequestProcessorChain = call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() call org.apache.solr.request.SolrQueryRequest.getCore() decl_stmt org.apache.solr.update.processor.UpdateRequestProcessor = call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() call UpdateRequestProcessorChain.createProcessor() decl_stmt java.lang.Object = decl_stmt long = try for : = decl_stmt java.util.List < = < if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + decl_stmt int = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() & decl_stmt long = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if == && != continue = switch case decl_stmt org.apache.solr.common.SolrInputDocument = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - decl_stmt org.apache.solr.update.AddUpdateCommand = new = call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() | if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + + call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processAdd(AddUpdateCommand) break case decl_stmt byte = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.update.DeleteUpdateCommand = new call org.apache.solr.update.DeleteUpdateCommand.setIndexedId(BytesRef) call org.apache.solr.update.DeleteUpdateCommand.setIndexedId(BytesRef) call org.apache.solr.update.DeleteUpdateCommand.setIndexedId(BytesRef) call org.apache.solr.update.DeleteUpdateCommand.setIndexedId(BytesRef) call org.apache.solr.update.DeleteUpdateCommand.setIndexedId(BytesRef) new call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() | if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + + new call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) break case decl_stmt java.lang.String = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.solr.update.DeleteUpdateCommand = new = call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setVersion() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() call DeleteUpdateCommand.setFlags() | if call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) call org.apache.solr.update.processor.UpdateRequestProcessor.processDelete(DeleteUpdateCommand) break default: throw new + catch = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + return catch = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + + return finally try call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() call UpdateRequestProcessor.finish() catch = call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + + return return ShardHandler ShardRequest ShardResponse ShardHandlerFactory public static public static < decl_stmt org.apache.solr.handler.component.ShardHandlerFactory = call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() call org.apache.solr.core.SolrCore.getCoreDescriptor() decl_stmt org.apache.solr.handler.component.ShardHandler = call ShardHandlerFactory.getShardHandler() call ShardHandlerFactory.getShardHandler() call ShardHandlerFactory.getShardHandler() call ShardHandlerFactory.getShardHandler() call ShardHandlerFactory.getShardHandler() for : decl_stmt org.apache.solr.handler.component.ShardRequest = new = new = new call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardRequest.params() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() call ShardHandler.submit() for : decl_stmt org.apache.solr.handler.component.ShardResponse = call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError() call ShardHandler.takeCompletedOrError()