org.apache.solr.search java.io.IOException import java.util.Map import org.apache.lucene.index.LeafReaderContext import org.apache.lucene.queries.function.FunctionValues import org.apache.lucene.queries.function.ValueSource import org.apache.lucene.queries.function.ValueSourceScorer import org.apache.lucene.search.IndexSearcher import org.apache.solr.search.function.ValueSourceRangeFilter import class org.apache.solr.search.FunctionRangeQuery super super extends super implements ValueSourceRangeFilter Map public public decl_stmt java.util.Map = return new public public throws assert < if FunctionValues protected protected throws = decl_stmt org.apache.lucene.queries.function.FunctionValues = call org.apache.solr.search.function.ValueSourceRangeFilter.getValueSource() call org.apache.solr.search.function.ValueSourceRangeFilter.getValueSource() call org.apache.solr.search.function.ValueSourceRangeFilter.getValueSource() call org.apache.solr.search.function.ValueSourceRangeFilter.getValueSource() call org.apache.solr.search.function.ValueSourceRangeFilter.getValueSource() = call org.apache.lucene.queries.function.FunctionValues.getRangeScorer(LeafReaderContext,String,String,boolean,boolean) call org.apache.lucene.queries.function.FunctionValues.getRangeScorer(LeafReaderContext,String,String,boolean,boolean) call org.apache.lucene.queries.function.FunctionValues.getRangeScorer(LeafReaderContext,String,String,boolean,boolean) call org.apache.lucene.queries.function.FunctionValues.getRangeScorer(LeafReaderContext,String,String,boolean,boolean) call org.apache.lucene.queries.function.FunctionValues.getRangeScorer(LeafReaderContext,String,String,boolean,boolean) call org.apache.solr.search.function.ValueSourceRangeFilter.getLowerVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getLowerVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getLowerVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getLowerVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getLowerVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getUpperVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getUpperVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getUpperVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getUpperVal() call org.apache.solr.search.function.ValueSourceRangeFilter.getUpperVal() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeLower() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeLower() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeLower() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeLower() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeLower() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeUpper() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeUpper() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeUpper() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeUpper() call org.apache.solr.search.function.ValueSourceRangeFilter.isIncludeUpper()