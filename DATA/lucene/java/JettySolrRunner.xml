org.apache.solr.client.solrj.embedded javax.servlet.DispatcherType import javax.servlet.Filter import javax.servlet.FilterChain import javax.servlet.FilterConfig import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletResponse import javax.servlet.http.HttpServlet import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import java.io.IOException import java.lang.invoke.MethodHandles import java.net.MalformedURLException import java.net.URL import java.util.EnumSet import java.util.LinkedList import java.util.Map import java.util.Properties import java.util.Random import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicLong import org.apache.solr.core.CoreContainer import org.apache.solr.servlet.SolrDispatchFilter import org.eclipse.jetty.server.Connector import org.eclipse.jetty.server.HttpConfiguration import org.eclipse.jetty.server.HttpConnectionFactory import org.eclipse.jetty.server.SecureRequestCustomizer import org.eclipse.jetty.server.Server import org.eclipse.jetty.server.ServerConnector import org.eclipse.jetty.server.SslConnectionFactory import org.eclipse.jetty.server.handler.gzip.GzipHandler import org.eclipse.jetty.server.session.HashSessionIdManager import org.eclipse.jetty.servlet.BaseHolder import org.eclipse.jetty.servlet.FilterHolder import org.eclipse.jetty.servlet.ServletContextHandler import org.eclipse.jetty.servlet.ServletHolder import org.eclipse.jetty.util.component.LifeCycle import org.eclipse.jetty.util.ssl.SslContextFactory import org.eclipse.jetty.util.thread.QueuedThreadPool import org.slf4j.Logger import org.slf4j.LoggerFactory import org.slf4j.MDC import class org.apache.solr.client.solrj.embedded.JettySolrRunner FilterHolder int boolean decl LinkedList int String String Server int Properties int Logger boolean JettyConfig FilterHolder public public return public public throws public public throws public public SslContextFactory GzipHandler QueuedThreadPool ServerConnector String HttpConfiguration ServletContextHandler private private decl_stmt QueuedThreadPool = new call QueuedThreadPool.setMaxThreads() call QueuedThreadPool.setMaxThreads() call QueuedThreadPool.setMaxThreads() call QueuedThreadPool.setMaxThreads() call QueuedThreadPool.setMaxThreads() call QueuedThreadPool.setIdleTimeout() call QueuedThreadPool.setIdleTimeout() call QueuedThreadPool.setIdleTimeout() call QueuedThreadPool.setIdleTimeout() call QueuedThreadPool.setIdleTimeout() call QueuedThreadPool.setStopTimeout() call QueuedThreadPool.setStopTimeout() call QueuedThreadPool.setStopTimeout() call QueuedThreadPool.setStopTimeout() call QueuedThreadPool.setStopTimeout() int = new call Server.manage() call Server.manage() call Server.manage() call Server.manage() call Server.manage() call Server.setStopAtShutdown() call Server.setStopAtShutdown() call Server.setStopAtShutdown() call Server.setStopAtShutdown() call Server.setStopAtShutdown() if != decl_stmt SslContextFactory final final = decl_stmt ServerConnector if != decl_stmt HttpConfiguration = new call HttpConfiguration.setSecureScheme() call HttpConfiguration.setSecureScheme() call HttpConfiguration.setSecureScheme() call HttpConfiguration.setSecureScheme() call HttpConfiguration.setSecureScheme() call HttpConfiguration.addCustomizer() call HttpConfiguration.addCustomizer() call HttpConfiguration.addCustomizer() call HttpConfiguration.addCustomizer() call HttpConfiguration.addCustomizer() new = new new new else = new new call ServerConnector.setReuseAddress() call ServerConnector.setReuseAddress() call ServerConnector.setReuseAddress() call ServerConnector.setReuseAddress() call ServerConnector.setReuseAddress() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() - call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setHost() call ServerConnector.setHost() call ServerConnector.setHost() call ServerConnector.setHost() call ServerConnector.setHost() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() new call Server.setSessionIdManager() call Server.setSessionIdManager() call Server.setSessionIdManager() call Server.setSessionIdManager() call Server.setSessionIdManager() new new else decl_stmt ServerConnector = new new call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setPort() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() call ServerConnector.setSoLingerTime() - call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call ServerConnector.setIdleTimeout() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() call Server.setConnectors() new decl_stmt ServletContextHandler final final = new call Server.addLifeCycleListener() call Server.addLifeCycleListener() call Server.addLifeCycleListener() call Server.addLifeCycleListener() call Server.addLifeCycleListener() new public public public public public public synchronized = public public = call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call ServletContextHandler.getServletContext() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() = new <> for < extends extends : call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() for : call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() decl_stmt java.lang.String = call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() = call ServletContextHandler.getServletHandler() call ServletContextHandler.getServletHandler() call ServletContextHandler.getServletHandler() call ServletContextHandler.getServletHandler() call ServletContextHandler.getServletHandler() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() call ServletContextHandler.addFilter() public public call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() decl_stmt GzipHandler = new call GzipHandler.setHandler() call GzipHandler.setHandler() call GzipHandler.setHandler() call GzipHandler.setHandler() call GzipHandler.setHandler() call GzipHandler.setMinGzipSize() call GzipHandler.setMinGzipSize() call GzipHandler.setMinGzipSize() call GzipHandler.setMinGzipSize() call GzipHandler.setMinGzipSize() call GzipHandler.setCheckGzExists() call GzipHandler.setCheckGzExists() call GzipHandler.setCheckGzExists() call GzipHandler.setCheckGzExists() call GzipHandler.setCheckGzExists() call GzipHandler.setCompressionLevel() call GzipHandler.setCompressionLevel() call GzipHandler.setCompressionLevel() call GzipHandler.setCompressionLevel() call GzipHandler.setCompressionLevel() - call GzipHandler.setExcludedAgentPatterns() call GzipHandler.setExcludedAgentPatterns() call GzipHandler.setExcludedAgentPatterns() call GzipHandler.setExcludedAgentPatterns() call GzipHandler.setExcludedAgentPatterns() call GzipHandler.setIncludedMethods() call GzipHandler.setIncludedMethods() call GzipHandler.setIncludedMethods() call GzipHandler.setIncludedMethods() call GzipHandler.setIncludedMethods() call Server.setHandler() call Server.setHandler() call Server.setHandler() call Server.setHandler() call Server.setHandler() public public public public public public synchronized = String public public = call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) = = new <> for < extends extends : call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call decl LinkedList.add() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() call JettyConfig.extraFilters() for : call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() decl_stmt java.lang.String = call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() call JettyConfig.extraServlets() = call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setHeldClass() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() call FilterHolder.setInitParameter() public public public public return call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() public public if == || == return return public public return call Server.isRunning() call Server.isRunning() call Server.isRunning() call Server.isRunning() call Server.isRunning() public public return call Server.isStopped() call Server.isStopped() call Server.isStopped() call Server.isStopped() call Server.isStopped() int decl Map public public throws decl_stmt java.util.Map < = try if = else = if ! call Server.isRunning() call Server.isRunning() call Server.isRunning() call Server.isRunning() call Server.isRunning() call Server.start() call Server.start() call Server.start() call Server.start() call Server.start() synchronized decl_stmt int = while ! if ++ == throw new if != && > finally if != else Filter decl Map public public throws decl_stmt java.util.Map < = try decl_stmt org.apache.solr.search.Filter = call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call Server.stop() call Server.stop() call Server.stop() call Server.stop() call Server.stop() if call Server.getState() call Server.getState() call Server.getState() call Server.getState() call Server.getState() call Filter.destroy() call Filter.destroy() call Filter.destroy() call Filter.destroy() call Filter.destroy() if != for : call Server.join() call Server.join() call Server.join() call Server.join() call Server.join() finally if != else decl Connector private private decl_stmt Connector = call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() if == throw new return != - : public public if == - throw new return != - : public public = decl Connector ServerConnector String public public decl_stmt java.lang.String = try decl_stmt Connector = call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() if == throw new decl_stmt ServerConnector = if call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() < throw new + call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() = call ServerConnector.getDefaultProtocol() call ServerConnector.getDefaultProtocol() call ServerConnector.getDefaultProtocol() call ServerConnector.getDefaultProtocol() call ServerConnector.getDefaultProtocol() : return new call ServerConnector.getHost() call ServerConnector.getHost() call ServerConnector.getHost() call ServerConnector.getHost() call ServerConnector.getHost() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() call ServerConnector.getLocalPort() catch throw new + public public return call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() public public throws + JettySolrRunner public static public static try decl_stmt org.apache.solr.client.solrj.embedded.JettySolrRunner = new call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() catch public public return public public return CoreContainer SolrDispatchFilter private private if != decl_stmt org.apache.solr.servlet.SolrDispatchFilter = call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() call FilterHolder.getFilter() decl_stmt org.apache.solr.core.CoreContainer = call org.apache.solr.servlet.SolrDispatchFilter.getCores() call org.apache.solr.servlet.SolrDispatchFilter.getCores() call org.apache.solr.servlet.SolrDispatchFilter.getCores() call org.apache.solr.servlet.SolrDispatchFilter.getCores() call org.apache.solr.servlet.SolrDispatchFilter.getCores() if != call org.apache.solr.core.CoreContainer.waitForLoadingCoresToFinish(long) call org.apache.solr.core.CoreContainer.waitForLoadingCoresToFinish(long) call org.apache.solr.core.CoreContainer.waitForLoadingCoresToFinish(long) call org.apache.solr.core.CoreContainer.waitForLoadingCoresToFinish(long) call org.apache.solr.core.CoreContainer.waitForLoadingCoresToFinish(long)