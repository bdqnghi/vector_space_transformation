org.apache.solr.client.solrj.io.comp java.util.Map import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionParameter import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import class org.apache.solr.client.solrj.io.comp.FieldComparator super super implements ComparatorLambda String String long ComparatorOrder public public = public public return public public = public public return public public return public public return ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() Comparable Comparable private private if == = decl_stmt java.lang.Comparable = decl_stmt java.lang.Comparable = if == return if == return if == return - return call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() else = decl_stmt java.lang.Comparable = decl_stmt java.lang.Comparable = if == return if == return - if == return return call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() call Comparable.compareTo() public public return call ComparatorLambda.compare() call ComparatorLambda.compare() call ComparatorLambda.compare() call ComparatorLambda.compare() call ComparatorLambda.compare() MultipleFieldComparator FieldComparator public public if == return if instanceof decl_stmt org.apache.lucene.search.FieldComparator = return call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && == else if instanceof decl_stmt org.apache.solr.client.solrj.io.comp.MultipleFieldComparator = if call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() > return call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() call org.apache.solr.client.solrj.io.comp.MultipleFieldComparator.getComps() return public public < return new : :