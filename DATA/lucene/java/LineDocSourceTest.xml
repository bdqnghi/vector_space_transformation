org.apache.lucene.benchmark.byTask.feeds java.io.BufferedWriter import java.io.IOException import java.io.OutputStream import java.io.OutputStreamWriter import java.nio.charset.StandardCharsets import java.nio.file.Files import java.nio.file.Path import java.util.Properties import org.apache.commons.compress.compressors.CompressorStreamFactory import org.apache.lucene.analysis.core.WhitespaceAnalyzer import org.apache.lucene.benchmark.BenchmarkTestCase import org.apache.lucene.benchmark.byTask.PerfRunData import org.apache.lucene.benchmark.byTask.feeds.LineDocSource.HeaderLineParser import org.apache.lucene.benchmark.byTask.feeds.LineDocSource.LineParser import org.apache.lucene.benchmark.byTask.tasks.AddDocTask import org.apache.lucene.benchmark.byTask.tasks.CloseIndexTask import org.apache.lucene.benchmark.byTask.tasks.CreateIndexTask import org.apache.lucene.benchmark.byTask.tasks.TaskSequence import org.apache.lucene.benchmark.byTask.tasks.WriteLineDocTask import org.apache.lucene.benchmark.byTask.utils.Config import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.TermQuery import org.apache.lucene.search.TopDocs import org.apache.lucene.util.IOUtils import class org.apache.lucene.benchmark.byTask.feeds.LineDocSourceTest super super extends CompressorStreamFactory BufferedWriter OutputStream private private throws decl_stmt java.io.OutputStream = = call CompressorStreamFactory.createCompressorOutputStream() call CompressorStreamFactory.createCompressorOutputStream() call CompressorStreamFactory.createCompressorOutputStream() call CompressorStreamFactory.createCompressorOutputStream() call CompressorStreamFactory.createCompressorOutputStream() decl_stmt BufferedWriter = new new call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() StringBuilder private private throws if if != for : decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if != for : call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() BufferedWriter OutputStream private private throws decl_stmt java.io.OutputStream = decl_stmt BufferedWriter = new new call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() Properties BufferedWriter OutputStream private private throws decl_stmt java.io.OutputStream = decl_stmt BufferedWriter = new new decl_stmt java.util.Properties = new for : call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() private private < extends extends throws PerfRunData IndexSearcher TaskSequence IndexReader Properties TopDocs Config private private < extends extends throws decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.benchmark.byTask.PerfRunData = try decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() if != call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() decl_stmt org.apache.solr.core.Config = new = new decl_stmt org.apache.lucene.benchmark.byTask.tasks.TaskSequence = new call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) new for = < ++ call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) new call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.addTask(PerfTask) new try call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.doLogic() finally call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.close() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.close() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.close() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.close() call org.apache.lucene.benchmark.byTask.tasks.TaskSequence.close() = call org.apache.lucene.benchmark.byTask.PerfRunData.getDirectory() call org.apache.lucene.benchmark.byTask.PerfRunData.getDirectory() call org.apache.lucene.benchmark.byTask.PerfRunData.getDirectory() call org.apache.lucene.benchmark.byTask.PerfRunData.getDirectory() call org.apache.lucene.benchmark.byTask.PerfRunData.getDirectory() = decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) new new if == = call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) call org.apache.lucene.search.IndexSearcher.doc(int,Set) finally Path public public throws decl_stmt java.nio.file.Path = Path public public throws decl_stmt java.nio.file.Path = Path public public throws decl_stmt java.nio.file.Path = Path public public throws decl_stmt java.nio.file.Path = Path public public throws decl_stmt java.nio.file.Path = decl String BufferedWriter Path public public throws decl_stmt java.lang.String = new + + + for = < ++ decl_stmt java.nio.file.Path = decl_stmt BufferedWriter = call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.write() call BufferedWriter.newLine() call BufferedWriter.newLine() call BufferedWriter.newLine() call BufferedWriter.newLine() call BufferedWriter.newLine() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() call BufferedWriter.close() Path public public throws decl_stmt java.nio.file.Path = String Path public public throws decl_stmt java.nio.file.Path = decl_stmt java.lang.String =