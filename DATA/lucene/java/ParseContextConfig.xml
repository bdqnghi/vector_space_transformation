org.apache.solr.handler.extraction javax.xml.parsers.DocumentBuilderFactory import java.beans.BeanInfo import java.beans.Introspector import java.beans.PropertyDescriptor import java.beans.PropertyEditor import java.beans.PropertyEditorManager import java.io.InputStream import java.lang.reflect.Method import java.util.HashMap import java.util.Locale import java.util.Map import org.apache.solr.core.SolrResourceLoader import org.apache.tika.parser.ParseContext import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.NamedNodeMap import org.w3c.dom.Node import org.w3c.dom.NodeList import class org.apache.solr.handler.extraction.ParseContextConfig decl Map private static private static throws try = return String decl HashMap BeanInfo String PropertyDescriptor String String Object NamedNodeMap Node decl Class Method NamedNodeMap NodeList NodeList private private throws decl_stmt NodeList final final = for = = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() < ++ decl_stmt NamedNodeMap final final = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt java.lang.String final final = call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() decl_stmt java.lang.String final final = call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() decl_stmt NodeList final final = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt java.lang.Class final final final < = decl_stmt java.beans.BeanInfo final final = decl_stmt HashMap final final final < = new <> for final final : call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() decl_stmt java.lang.Object final final = if ! call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() for = = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() < ++ decl_stmt org.apache.lucene.replicator.nrt.Node final final = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt NamedNodeMap final final = call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() decl_stmt java.lang.String final final = call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() decl_stmt java.lang.String final final = call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() decl_stmt java.beans.PropertyDescriptor final final = call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() call decl HashMap.get() if == throw new call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() decl_stmt com.sun.jdi.Method final final = call java.beans.PropertyDescriptor.getWriteMethod() call java.beans.PropertyDescriptor.getWriteMethod() call java.beans.PropertyDescriptor.getWriteMethod() call java.beans.PropertyDescriptor.getWriteMethod() call java.beans.PropertyDescriptor.getWriteMethod() if == throw new call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call java.beans.PropertyDescriptor.getPropertyType() call java.beans.PropertyDescriptor.getPropertyType() call java.beans.PropertyDescriptor.getPropertyType() call java.beans.PropertyDescriptor.getPropertyType() call java.beans.PropertyDescriptor.getPropertyType() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() PropertyEditor private private < decl_stmt java.beans.PropertyEditor final final = if == throw new + call java.beans.PropertyEditor.setAsText(String) call java.beans.PropertyEditor.setAsText(String) call java.beans.PropertyEditor.setAsText(String) call java.beans.PropertyEditor.setAsText(String) call java.beans.PropertyEditor.setAsText(String) return call PropertyEditor.getValue() call PropertyEditor.getValue() call PropertyEditor.getValue() call PropertyEditor.getValue() call PropertyEditor.getValue() ParseContext public public decl_stmt ParseContext final final = new for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call ParseContext.set() call ParseContext.set() call ParseContext.set() call ParseContext.set() call ParseContext.set() return