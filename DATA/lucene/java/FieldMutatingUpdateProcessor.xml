org.apache.solr.update.processor java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.regex.Pattern import static static org.apache.solr.common.SolrException.ErrorCode.BAD_REQUEST import static static org.apache.solr.common.SolrException.ErrorCode.SERVER_ERROR import static static org.apache.solr.update.processor.FieldMutatingUpdateProcessorFactory.SelectorParams import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.SolrException import org.apache.solr.core.SolrCore import org.apache.solr.core.SolrResourceLoader import org.apache.solr.schema.FieldType import org.apache.solr.schema.IndexSchema import org.apache.solr.update.AddUpdateCommand import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.processor.FieldMutatingUpdateProcessor super super extends FieldNameSelector FieldNameSelector Logger FieldNameSelector SolrInputField SolrInputDocument String decl Collection SolrInputField public public throws decl_stmt org.apache.solr.common.SolrInputDocument final final = decl_stmt java.util.Collection final final final < = new <> call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() for final final : if ! call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() continue decl_stmt org.apache.solr.common.SolrInputField final final = call org.apache.solr.common.SolrInputDocument.get(Object) call org.apache.solr.common.SolrInputDocument.get(Object) call org.apache.solr.common.SolrInputDocument.get(Object) call org.apache.solr.common.SolrInputDocument.get(Object) call org.apache.solr.common.SolrInputDocument.get(Object) decl_stmt org.apache.solr.common.SolrInputField = try = catch decl_stmt java.lang.String = + + + throw new if == call org.apache.solr.common.SolrInputDocument.remove(Object) call org.apache.solr.common.SolrInputDocument.remove(Object) call org.apache.solr.common.SolrInputDocument.remove(Object) call org.apache.solr.common.SolrInputDocument.remove(Object) call org.apache.solr.common.SolrInputDocument.remove(Object) else if ! call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() throw new + + + call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() call org.apache.solr.common.SolrInputField.getName() public public final final return public public final final return public static public static final final final final if == return if == return if == return new public public final final return ! return new public public final final return && ! public public final final return ! public public final final return && ! ConfigurableFieldNameSelectorHelper public static public static final final final final final final final final if return decl_stmt ConfigurableFieldNameSelectorHelper final final = new return new public public return call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() public public return ConfigurableFieldNameSelectorHelper public static public static final final final final final final final final if return decl_stmt ConfigurableFieldNameSelectorHelper final final = new return new public public return call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() call ConfigurableFieldNameSelectorHelper.shouldMutateBasedOnSchema() public public return FieldType boolean public public final final if ! || return decl_stmt org.apache.solr.schema.FieldType = decl_stmt boolean final final = != if != && != return if if ! || call org.apache.solr.schema.FieldType.getTypeName() call org.apache.solr.schema.FieldType.getTypeName() call org.apache.solr.schema.FieldType.getTypeName() call org.apache.solr.schema.FieldType.getTypeName() call org.apache.solr.schema.FieldType.getTypeName() return if ! || return if ! || return return private static private static < for : if return return private static private static < for : if return return