org.apache.lucene.analysis.icu java.io.BufferedReader import java.io.File import java.io.FileInputStream import java.io.FileOutputStream import java.io.FilenameFilter import java.io.IOException import java.io.InputStream import java.io.InputStreamReader import java.nio.charset.StandardCharsets import com.ibm.icu.text.RuleBasedBreakIterator import class org.apache.lucene.analysis.icu.RBBIRuleCompiler StringBuilder String BufferedReader InputStream static static throws decl_stmt java.lang.StringBuilder = new decl_stmt java.io.InputStream = new decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String = while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() String File File FileOutputStream File static static throws decl_stmt File = new public public return if == throw new + for = < ++ decl_stmt File = decl_stmt File = new call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() decl_stmt java.lang.String = + call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() + + call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() + try new catch decl_stmt java.io.FileOutputStream = new call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call File.length() call File.length() call File.length() call File.length() call File.length() + public public return public static public static throws if < new new