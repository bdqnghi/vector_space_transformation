org.apache.solr.cloud java.io.IOException import java.nio.charset.Charset import java.nio.file.Files import java.nio.file.Path import java.util.ArrayList import java.util.List import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.embedded.JettyConfig import org.apache.solr.client.solrj.impl.CloudSolrClient import org.junit.AfterClass import org.junit.Before import class org.apache.solr.cloud.SolrCloudTestCase super super extends MiniSolrCloudCluster public public = return public public = return public public try = new catch throw new return public public new return CloudSolrClient public public throws = new decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() for : call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) protected static protected static return new public static public static throws if != call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() = public public if == throw new