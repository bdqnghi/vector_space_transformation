org.apache.solr.update.processor org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import class org.apache.solr.update.processor.TruncateFieldUpdateProcessorFactory super super extends int String Object public public decl_stmt java.lang.Object = if == throw new + if ! instanceof throw new + + + call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() = if < throw new + + + public public final final return CharSequence public public return new protected protected final final if instanceof decl_stmt java.lang.CharSequence = if < call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() return call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) return CharSequence protected protected final final if instanceof decl_stmt java.lang.CharSequence = if < call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() call java.lang.CharSequence.length() return call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) call java.lang.CharSequence.subSequence(int,int) return