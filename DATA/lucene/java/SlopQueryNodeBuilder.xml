org.apache.lucene.queryparser.flexible.standard.builders org.apache.lucene.queryparser.flexible.core.QueryNodeException import org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder import org.apache.lucene.queryparser.flexible.core.nodes.QueryNode import org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode import org.apache.lucene.search.MultiPhraseQuery import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.Query import class org.apache.lucene.queryparser.flexible.standard.builders.SlopQueryNodeBuilder super super implements decl Builder PhraseQuery decl org decl PhraseQuery SlopQueryNode decl apache Query decl lucene public public throws decl_stmt org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode = decl_stmt org.apache.lucene.search.Query = call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getChild() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getChild() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getChild() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getChild() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getChild() if instanceof decl_stmt org.apache.lucene.util.fst.Builder = new call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call decl PhraseQuery.setSlop() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() decl_stmt org.apache.lucene.search.PhraseQuery = decl_stmt org.apache.lucene.index.Term = call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() call decl Builder.getTerms() decl_stmt int = call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() call decl Builder.getPositions() for = < ++ call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() call decl PhraseQuery.add() = call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() call decl PhraseQuery.build() else decl_stmt org.apache.lucene.search.MultiPhraseQuery = decl_stmt int = call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() call org.apache.lucene.queryparser.flexible.core.nodes.SlopQueryNode.getValue() if != call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() call decl apache.getSlop() = new return