org.apache.lucene.index java.io.IOException import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.FieldType import org.apache.lucene.document.TextField import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.FixedBitSet import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class annotation org.apache.lucene.index.TestLongPostings super super extends Analyzer int BytesRef boolean String TermToBytesRefAttribute private private throws decl_stmt org.apache.lucene.analysis.Analyzer = new while decl_stmt java.lang.String = if != && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue try = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) decl_stmt org.apache.lucene.analysis.tokenattributes.TermToBytesRefAttribute final final = decl_stmt int = decl_stmt boolean = while decl_stmt org.apache.lucene.util.BytesRef final final = call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() call TermToBytesRefAttribute.getBytesRef() if == && ! call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() = ++ if ! && == return int String IndexWriterConfig int Field String String int int int Document String IndexReader FixedBitSet RandomIndexWriter int int int boolean PostingsEnum Directory public public throws decl_stmt org.apache.lucene.store.Directory = + + decl_stmt int final final = if + decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = if + + + decl_stmt org.apache.lucene.util.FixedBitSet final final = new for = < ++ if call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) decl_stmt org.apache.lucene.index.IndexReader final final decl_stmt org.apache.lucene.index.IndexWriterConfig final final = new call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) + * call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) - decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new for = < ++ decl_stmt org.apache.lucene.document.Document final final = new decl_stmt java.lang.String = call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) : decl_stmt org.apache.solr.handler.dataimport.config.Field final final = decl_stmt int final final = for = < ++ call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() new > call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() new > decl_stmt int = for = < ++ decl_stmt java.lang.String final final decl_stmt boolean final final if = = else = = if + + + decl_stmt org.apache.lucene.index.PostingsEnum final final = new decl_stmt int = - while < decl_stmt int final final = if == if + + decl_stmt int = + while if == = break else if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) == break else ++ = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if + if == break if == if decl_stmt int final final = call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() >= && <= for = < ++ call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() if call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() if call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() else decl_stmt int final final if == - = + else = + - if + + + + decl_stmt int = while if == = break else if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) == break else ++ = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() if + if == break if == decl_stmt int final final = call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() >= && <= for = < ++ call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() call PostingsEnum.nextPosition() if call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() if call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call PostingsEnum.getPayload() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws int RandomIndexWriter int FixedBitSet FieldType int String String int boolean PostingsEnum IndexWriterConfig int PostingsEnum int int String int Field Document String IndexReader Directory public public throws decl_stmt org.apache.lucene.store.Directory = + + decl_stmt int final final = if + decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = if + + + decl_stmt org.apache.lucene.util.FixedBitSet final final = new for = < ++ if call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) call org.apache.lucene.util.FixedBitSet.set(int) decl_stmt org.apache.lucene.index.IndexReader final final if decl_stmt org.apache.lucene.index.IndexWriterConfig final final = new call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) call org.apache.lucene.index.IndexWriterConfig.setRAMBufferSizeMB(double) + * call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) call org.apache.lucene.index.IndexWriterConfig.setMaxBufferedDocs(int) - decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) for = < ++ decl_stmt org.apache.lucene.document.Document final final = new decl_stmt java.lang.String = call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) : decl_stmt org.apache.solr.handler.dataimport.config.Field final final = decl_stmt int final final = for = < ++ call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() else = call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() new > call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() new > decl_stmt int = for = < ++ decl_stmt java.lang.String final final decl_stmt boolean final final if = = else = = if + + + + + decl_stmt org.apache.lucene.index.PostingsEnum final final decl_stmt org.apache.lucene.index.PostingsEnum final final if == = new = else = = new assert != assert != decl_stmt int = - while < decl_stmt int final final = if == if + + decl_stmt int = + while if == = break else if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) == break else ++ = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() if + if == break if == && != decl_stmt int final final = call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() >= && <= else decl_stmt int final final if == - = + else = + - if + + + + decl_stmt int = while if == = break else if call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) call org.apache.lucene.util.FixedBitSet.get(int) == break else ++ = call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() call PostingsEnum.advance() if + if == break if == && != decl_stmt int final final = call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() call PostingsEnum.freq() + >= && <= call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()