org.apache.lucene.store java.io.IOException import java.io.InputStream import java.io.OutputStream import java.net.InetSocketAddress import java.net.Socket import java.nio.file.Path import java.nio.file.Paths import java.util.Random import org.apache.lucene.util.SuppressForbidden import class org.apache.lucene.store.LockStressTest String int Path InetSocketAddress String LockFactory InputStream int LockFactory String FSDirectory int int Random OutputStream int = public static = public static throws if != + + + + + + + + + + + + + + decl_stmt int = decl_stmt int final final = ++ if < || || decl_stmt java.lang.String final final = ++ decl_stmt int final final = ++ decl_stmt java.lang.String final final = ++ decl_stmt java.nio.file.Path final final = ++ decl_stmt int final final = ++ decl_stmt int final final = ++ decl_stmt LockFactory final final = decl_stmt org.apache.lucene.store.FSDirectory final final = new decl_stmt java.net.InetSocketAddress final final = new + + + + try = new decl_stmt java.io.OutputStream final final = decl_stmt java.io.InputStream final final = call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call OutputStream.flush() call OutputStream.flush() call OutputStream.flush() call OutputStream.flush() call OutputStream.flush() decl_stmt LockFactory = new decl_stmt java.util.Random final final = new if call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) != throw new for = < ++ try final final = call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() if call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == if call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() = new try final final = call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() call LockFactory.obtainLock() throw new catch catch if == * / + + + private static private static throws try return catch try return catch throw new +