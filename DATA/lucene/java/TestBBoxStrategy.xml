org.apache.lucene.spatial.bbox java.io.IOException import com.carrotsearch.randomizedtesting.annotations.Repeat import org.apache.lucene.document.FieldType import org.apache.lucene.index.DocValuesType import org.apache.lucene.index.IndexOptions import org.apache.lucene.search.Query import org.apache.lucene.spatial.SpatialMatchConcern import org.apache.lucene.spatial.prefix.RandomSpatialOpStrategyTestCase import org.apache.lucene.spatial.query.SpatialArgs import org.apache.lucene.spatial.query.SpatialOperation import org.apache.lucene.spatial.util.ShapeAreaValueSource import org.junit.Ignore import org.junit.Test import org.locationtech.spatial4j.context.SpatialContext import org.locationtech.spatial4j.context.SpatialContextFactory import org.locationtech.spatial4j.distance.DistanceUtils import org.locationtech.spatial4j.shape.Rectangle import org.locationtech.spatial4j.shape.Shape import org.locationtech.spatial4j.shape.impl.RectangleImpl import class org.apache.lucene.spatial.bbox.TestBBoxStrategy super super extends int int int int int int int Rectangle protected protected decl_stmt org.apache.lucene.geo.Rectangle = if == return decl_stmt int = int call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() call java.awt.Rectangle.getWidth() decl_stmt int = decl_stmt int = - decl_stmt int = int call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() call java.awt.Rectangle.getHeight() decl_stmt int = decl_stmt int = - if && != || != decl_stmt int = return call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() + + call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() - + call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() + call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() - else return call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() call Rectangle.getMinX() + call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() call Rectangle.getMaxX() - call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() call Rectangle.getMinY() + call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() call Rectangle.getMaxY() - int private private decl_stmt int final final = if == return / + * else return + protected protected return SpatialContextFactory FieldType = public = public throws if > = else decl_stmt SpatialContextFactory = new = = new - - = call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() call SpatialContextFactory.newSpatialContext() if = else = if decl_stmt org.apache.solr.schema.FieldType = new call org.apache.solr.schema.FieldType.setDocValuesType(DocValuesType) call org.apache.solr.schema.FieldType.setDocValuesType(DocValuesType) call org.apache.solr.schema.FieldType.setDocValuesType(DocValuesType) call org.apache.solr.schema.FieldType.setDocValuesType(DocValuesType) call org.apache.solr.schema.FieldType.setDocValuesType(DocValuesType) = new for : if == continue public public throws - - - - public public throws - - - public public throws - - - - public public throws - - - - public public throws - - - - Rectangle Query Rectangle SearchResults SpatialOperation boolean public public throws decl_stmt org.apache.lucene.geo.Rectangle final final = - decl_stmt org.apache.lucene.geo.Rectangle final final = - - - decl_stmt org.apache.lucene.spatial.query.SpatialOperation final final = decl_stmt boolean final final = decl_stmt org.apache.lucene.search.Query = new decl_stmt SearchResults = assert <= : if == != + + + + private private = if = else = public public throws public public throws public public throws protected protected return String FieldType private private throws = decl_stmt org.apache.solr.schema.FieldType decl_stmt java.lang.String = if = new if call FieldType.setDimensions() call FieldType.setDimensions() call FieldType.setDimensions() call FieldType.setDimensions() call FieldType.setDimensions() else = new if call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) call org.apache.solr.schema.FieldType.setIndexOptions(IndexOptions) = new return double int double BBoxStrategy boolean Rectangle BBoxOverlapRatioValueSource public public throws decl_stmt org.apache.lucene.spatial.bbox.BBoxStrategy = call org.apache.lucene.spatial.bbox.BBoxStrategy.makeOverlapRatioValueSource(Rectangle,double) call org.apache.lucene.spatial.bbox.BBoxStrategy.makeOverlapRatioValueSource(Rectangle,double) call org.apache.lucene.spatial.bbox.BBoxStrategy.makeOverlapRatioValueSource(Rectangle,double) call org.apache.lucene.spatial.bbox.BBoxStrategy.makeOverlapRatioValueSource(Rectangle,double) call org.apache.lucene.spatial.bbox.BBoxStrategy.makeOverlapRatioValueSource(Rectangle,double) new for = < += decl_stmt org.apache.lucene.geo.Rectangle = - decl_stmt boolean final final = decl_stmt double final final = : decl_stmt org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource = new decl_stmt int = == : * - decl_stmt double final final = / * + call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) + call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) - call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) - + call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) - - - call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) - - + * / / : call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) / + * / / : call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) - = new call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) + * / * / : call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) = new call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) + * / * / : call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) call org.apache.lucene.spatial.bbox.BBoxOverlapRatioValueSource.score(Rectangle,AtomicReference) private private return + + BBoxStrategy public public throws decl_stmt org.apache.lucene.spatial.bbox.BBoxStrategy = new call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() new new call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() new new call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() call org.apache.lucene.spatial.bbox.BBoxStrategy.makeShapeValueSource() new