org.apache.lucene.benchmark.quality org.apache.lucene.benchmark.BenchmarkTestCase import org.apache.lucene.benchmark.quality.trec.TrecJudge import org.apache.lucene.benchmark.quality.trec.TrecTopicsReader import org.apache.lucene.benchmark.quality.utils.SimpleQQParser import org.apache.lucene.benchmark.quality.utils.SubmissionReport import org.apache.lucene.index.DirectoryReader import org.apache.lucene.index.IndexReader import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.store.Directory import java.io.BufferedReader import java.io.InputStream import java.io.InputStreamReader import java.io.OutputStreamWriter import java.io.PrintWriter import java.nio.charset.Charset import java.nio.charset.StandardCharsets import class org.apache.lucene.benchmark.quality.TestQualityRun super super extends public public throws IndexSearcher TrecTopicsReader QualityBenchmark String InputStream SubmissionReport InputStream QualityStats int QualityStats QualityQueryParser IndexReader Judge PrintWriter QualityStats Directory public public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt PrintWriter = new new : decl_stmt java.io.InputStream = decl_stmt org.apache.lucene.benchmark.quality.trec.TrecTopicsReader = new decl_stmt org.apache.lucene.benchmark.quality.QualityQuery = call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() new new decl_stmt java.io.InputStream = decl_stmt org.apache.lucene.benchmark.quality.Judge = new new new call Judge.validateData() call Judge.validateData() call Judge.validateData() call Judge.validateData() call Judge.validateData() decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.search.IndexSearcher = new call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) call org.apache.lucene.search.IndexSearcher.setSimilarity(Similarity) new decl_stmt org.apache.lucene.benchmark.quality.QualityQueryParser = new decl_stmt org.apache.lucene.benchmark.quality.QualityBenchmark = new decl_stmt org.apache.lucene.benchmark.quality.utils.SubmissionReport = new : call QualityBenchmark.setMaxResults() call QualityBenchmark.setMaxResults() call QualityBenchmark.setMaxResults() call QualityBenchmark.setMaxResults() call QualityBenchmark.setMaxResults() decl_stmt org.apache.lucene.benchmark.quality.QualityStats = call org.apache.lucene.benchmark.quality.QualityBenchmark.execute(Judge,SubmissionReport,PrintWriter) call org.apache.lucene.benchmark.quality.QualityBenchmark.execute(Judge,SubmissionReport,PrintWriter) call org.apache.lucene.benchmark.quality.QualityBenchmark.execute(Judge,SubmissionReport,PrintWriter) call org.apache.lucene.benchmark.quality.QualityBenchmark.execute(Judge,SubmissionReport,PrintWriter) call org.apache.lucene.benchmark.quality.QualityBenchmark.execute(Judge,SubmissionReport,PrintWriter) for = < ++ decl_stmt org.apache.lucene.benchmark.quality.QualityStats = switch case + call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() > call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() + call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() > call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() for = <= ++ + + + call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) - break case > call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() + call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() - for = <= ++ + + + call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) > call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) break case + call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() > call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() + call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() > call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() for = <= ++ + + + call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) > call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) break default: + call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() - + call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() - for = <= ++ + + + call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) - decl_stmt org.apache.lucene.benchmark.quality.QualityStats = if != call org.apache.lucene.benchmark.quality.QualityStats.log(String,int,PrintWriter,String) call org.apache.lucene.benchmark.quality.QualityStats.log(String,int,PrintWriter,String) call org.apache.lucene.benchmark.quality.QualityStats.log(String,int,PrintWriter,String) call org.apache.lucene.benchmark.quality.QualityStats.log(String,int,PrintWriter,String) call org.apache.lucene.benchmark.quality.QualityStats.log(String,int,PrintWriter,String) + call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() > call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() call org.apache.lucene.benchmark.quality.QualityStats.getAvp() + call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() > call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() call QualityStats.getRecall() for = <= ++ + + + call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) > call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.benchmark.quality.QualityStats.getPrecisionAt(int) call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() QualityQuery QualityQuery TrecTopicsReader InputStream public public throws decl_stmt java.io.InputStream = decl_stmt org.apache.lucene.benchmark.quality.trec.TrecTopicsReader = new decl_stmt org.apache.lucene.benchmark.quality.QualityQuery = call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() call TrecTopicsReader.readQueries() new new decl_stmt org.apache.lucene.benchmark.quality.QualityQuery = call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) = call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) = call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) call org.apache.lucene.benchmark.quality.QualityQuery.getValue(String) String private private throws decl_stmt java.lang.String = +