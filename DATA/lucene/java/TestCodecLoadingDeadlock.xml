org.apache.lucene.codecs java.nio.file.Paths import java.util.ArrayList import java.util.Locale import java.util.Random import java.util.Set import java.util.concurrent.CyclicBarrier import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import java.util.concurrent.TimeUnit import java.util.stream.IntStream import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.NamedThreadFactory import org.junit.Assert import org.junit.Test import org.junit.runner.RunWith import com.carrotsearch.randomizedtesting.RandomizedContext import com.carrotsearch.randomizedtesting.RandomizedRunner import class annotation org.apache.lucene.codecs.TestCodecLoadingDeadlock super super extends String String String Random decl Set Process public public throws new decl_stmt java.util.Random final final = decl_stmt java.util.Set < decl_stmt java.lang.String final final = new <> = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt java.lang.String final final = new <> = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt java.lang.String final final = new <> = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt Process final final = new if call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() call Process.waitFor() else call Process.destroyForcibly() call Process.destroyForcibly() call Process.destroyForcibly() call Process.destroyForcibly() call Process.destroyForcibly() String CyclicBarrier int String String ExecutorService public static public static final final throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt int final final = decl_stmt java.util.concurrent.ExecutorService final final = new decl_stmt java.util.concurrent.CyclicBarrier final final = new call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call ExecutorService.execute() call java.util.concurrent.CyclicBarrier.await(long,TimeUnit) call java.util.concurrent.CyclicBarrier.await(long,TimeUnit) call java.util.concurrent.CyclicBarrier.await(long,TimeUnit) call java.util.concurrent.CyclicBarrier.await(long,TimeUnit) call java.util.concurrent.CyclicBarrier.await(long,TimeUnit) switch case break case break case break case break case break case break case break default: throw new catch synchronized +