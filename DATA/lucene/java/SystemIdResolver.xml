org.apache.solr.util org.slf4j.Logger import org.slf4j.LoggerFactory import org.apache.lucene.analysis.util.ResourceLoader import org.xml.sax.InputSource import org.xml.sax.EntityResolver import org.xml.sax.ext.EntityResolver2 import java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.net.URI import java.net.URISyntaxException import javax.xml.transform.Source import javax.xml.transform.TransformerException import javax.xml.transform.URIResolver import javax.xml.transform.sax.SAXSource import javax.xml.stream.XMLResolver import javax.xml.stream.XMLStreamException import class org.apache.solr.util.SystemIdResolver super super implements String Logger String ResourceLoader public public return InputSource public public return new public public throws try decl_stmt InputSource final final = return == : new catch throw new InputSource public public throws try decl_stmt InputSource final final = return == : new catch throw new InputSource public public return new public public throws try decl_stmt InputSource final final = return == : call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() catch throw new InputSource public public throws try decl_stmt InputSource final final = return == : call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() call InputSource.getByteStream() catch throw new URI throws decl_stmt java.net.URI if = new else = new if != = new return public public return String URI InputSource public public throws if == return try decl_stmt java.net.URI final final = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.net.URI.getScheme() call java.net.URI.getScheme() call java.net.URI.getScheme() call java.net.URI.getScheme() call java.net.URI.getScheme() decl_stmt java.lang.String = call java.net.URI.getPath() call java.net.URI.getPath() call java.net.URI.getPath() call java.net.URI.getPath() call java.net.URI.getPath() = call java.net.URI.getAuthority() call java.net.URI.getAuthority() call java.net.URI.getAuthority() call java.net.URI.getAuthority() call java.net.URI.getAuthority() if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) try decl_stmt InputSource final final = new call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call org.apache.lucene.analysis.util.ResourceLoader.openResource(String) call java.net.URI.toASCIIString() call java.net.URI.toASCIIString() call java.net.URI.toASCIIString() call java.net.URI.toASCIIString() call java.net.URI.toASCIIString() return catch throw new else return catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() return public public throws return String public static public static = decl_stmt java.lang.String final final if = else = = + try return new catch throw new