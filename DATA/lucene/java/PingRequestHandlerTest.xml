org.apache.solr.handler java.io.File import java.io.IOException import java.util.List import org.apache.commons.io.FileUtils import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.client.solrj.request.SolrPing import org.apache.solr.client.solrj.response.SolrPingResponse import org.apache.solr.cloud.MiniSolrCloudCluster import org.apache.solr.common.SolrException import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.junit.Before import org.junit.BeforeClass import class org.apache.solr.handler.PingRequestHandlerTest super super extends File int PingRequestHandler int int String public static public static throws NamedList String File public public throws decl_stmt File = = new decl_stmt java.lang.String = if = new = call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() = new decl_stmt org.apache.solr.common.util.NamedList = new call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call org.apache.solr.common.util.NamedList.add(String,T) call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) SolrQueryResponse public public throws = new call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() call PingRequestHandler.init() new call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) call org.apache.solr.handler.PingRequestHandler.inform(SolrCore) decl_stmt org.apache.solr.response.SolrQueryResponse = = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() SolrQueryResponse SolrQueryResponse SolrException public public throws ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt org.apache.solr.response.SolrQueryResponse = decl_stmt org.apache.solr.common.SolrException = call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt org.apache.solr.response.SolrQueryResponse = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() SolrQueryResponse SolrQueryResponse SolrException public public throws ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() call File.createNewFile() call File.createNewFile() call File.createNewFile() call File.createNewFile() call File.createNewFile() decl_stmt org.apache.solr.response.SolrQueryResponse = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt org.apache.solr.response.SolrQueryResponse = decl_stmt org.apache.solr.common.SolrException = call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.response.SolrQueryResponse.getException() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call org.apache.solr.common.SolrException.code() call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() SolrQueryResponse public public throws decl_stmt org.apache.solr.response.SolrQueryResponse = call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) call org.apache.solr.handler.PingRequestHandler.handleEnable(boolean) = call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() call org.apache.solr.response.SolrQueryResponse.getValues() SolrQueryResponse public public throws try decl_stmt org.apache.solr.response.SolrQueryResponse = catch String String SolrPing decl List MiniSolrCloudCluster CloudSolrClient SolrPingResponse SolrPingWithDistrib File public public throws decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = new decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient final final = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() try call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() call org.apache.solr.cloud.MiniSolrCloudCluster.getZkServer() decl_stmt java.util.List < = call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call org.apache.solr.cloud.MiniSolrCloudCluster.getJettySolrRunners() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt File = new + + + + call org.apache.solr.cloud.MiniSolrCloudCluster.uploadConfigDir(File,String) call org.apache.solr.cloud.MiniSolrCloudCluster.uploadConfigDir(File,String) call org.apache.solr.cloud.MiniSolrCloudCluster.uploadConfigDir(File,String) call org.apache.solr.cloud.MiniSolrCloudCluster.uploadConfigDir(File,String) call org.apache.solr.cloud.MiniSolrCloudCluster.uploadConfigDir(File,String) call org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(String,int,int,String,String,String,Map) call org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(String,int,int,String,String,String,Map) call org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(String,int,int,String,String,String,Map) call org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(String,int,int,String,String,String,Map) call org.apache.solr.cloud.MiniSolrCloudCluster.createCollection(String,int,int,String,String,String,Map) decl_stmt SolrPingWithDistrib = new call SolrPingWithDistrib.setDistrib() call SolrPingWithDistrib.setDistrib() call SolrPingWithDistrib.setDistrib() call SolrPingWithDistrib.setDistrib() call SolrPingWithDistrib.setDistrib() decl_stmt SolrPingResponse = call SolrPingWithDistrib.process() call SolrPingWithDistrib.process() call SolrPingWithDistrib.process() call SolrPingWithDistrib.process() call SolrPingWithDistrib.process() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() decl_stmt org.apache.solr.client.solrj.request.SolrPing = new = call SolrPing.process() call SolrPing.process() call SolrPing.process() call SolrPing.process() call SolrPing.process() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getStatus() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call SolrPingResponse.getResponseHeader() call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) call org.apache.solr.cloud.MiniSolrCloudCluster.deleteCollection(String) finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() SolrQueryResponse private private throws decl_stmt org.apache.solr.response.SolrQueryResponse = new try call org.apache.solr.handler.PingRequestHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.PingRequestHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.PingRequestHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.PingRequestHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) call org.apache.solr.handler.PingRequestHandler.handleRequestBody(SolrQueryRequest,SolrQueryResponse) finally return public public : return