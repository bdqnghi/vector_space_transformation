org.apache.lucene.document java.util.* import org.apache.lucene.index.IndexReader import org.apache.lucene.index.IndexableField import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.ScoreDoc import org.apache.lucene.util.BytesRef import class org.apache.lucene.document.Document super super implements decl String decl List public < public < return call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() public final public final call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() IndexableField decl Iterator public final public final decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.index.IndexableField = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() return IndexableField decl Iterator public final public final decl_stmt java.util.Iterator < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt org.apache.lucene.index.IndexableField = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call org.apache.lucene.index.IndexableField.name() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() BytesRef decl List public final public final decl_stmt java.util.List final final final < = new <> for : if decl_stmt org.apache.lucene.util.BytesRef final final = if != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() BytesRef public final public final for : if decl_stmt org.apache.lucene.util.BytesRef final final = if != return return public final public final for : if return return decl List public public decl_stmt java.util.List < = new <> for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public final < public final < return decl List public final public final decl_stmt java.util.List < = new <> for : if && != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == return return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() public final public final for : if && != return return StringBuilder IndexableField public final public final decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.apache.lucene.index.IndexableField = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call IndexableField.toString() call IndexableField.toString() call IndexableField.toString() call IndexableField.toString() call IndexableField.toString() if != call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear()