org.apache.solr.client.solrj.impl java.nio.file.Path import java.util.concurrent.TimeUnit import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.request.CollectionAdminRequest import org.apache.solr.cloud.MiniSolrCloudCluster import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.ZkConfigManager import org.junit.Test import class org.apache.solr.client.solrj.impl.TestCloudSolrClientConnections super super extends MiniSolrCloudCluster CloudSolrClient decl CollectionAdminRequest public public throws decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = new try decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() decl_stmt java.util.List = new try call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) catch + call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.request(SolrRequest,String) finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() MiniSolrCloudCluster ZkConfigManager CloudSolrClient Path public public throws decl_stmt java.nio.file.Path = decl_stmt org.apache.solr.cloud.MiniSolrCloudCluster = new try decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() call org.apache.solr.cloud.MiniSolrCloudCluster.getSolrClient() try call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) catch + call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.cloud.MiniSolrCloudCluster.startJettySolrRunner(JettySolrRunner) call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.connect() call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) call org.apache.solr.client.solrj.impl.CloudSolrClient.uploadConfig(Path,String) decl_stmt org.apache.solr.common.cloud.ZkConfigManager = new call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.client.solrj.impl.CloudSolrClient.getZkStateReader() call org.apache.solr.common.cloud.ZkConfigManager.listConfigs() call org.apache.solr.common.cloud.ZkConfigManager.listConfigs() call org.apache.solr.common.cloud.ZkConfigManager.listConfigs() call org.apache.solr.common.cloud.ZkConfigManager.listConfigs() call org.apache.solr.common.cloud.ZkConfigManager.listConfigs() finally call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown() call org.apache.solr.cloud.MiniSolrCloudCluster.shutdown()