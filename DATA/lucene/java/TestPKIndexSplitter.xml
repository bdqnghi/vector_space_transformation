org.apache.lucene.index java.text.DecimalFormat import java.text.DecimalFormatSymbols import java.text.NumberFormat import java.util.Locale import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.index.IndexWriterConfig.OpenMode import org.apache.lucene.store.Directory import org.apache.lucene.util.Bits import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.index.TestPKIndexSplitter super super extends Document Term IndexWriter Directory NumberFormat public public throws decl_stmt java.text.NumberFormat = new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriter = new new for = < ++ decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if == call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) for = < ++ decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) call org.apache.lucene.index.IndexWriter.addDocument(Iterable) if == call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.commit(SegmentInfos) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() decl_stmt org.apache.lucene.index.Term final final = new call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) = new new call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) call org.apache.lucene.index.IndexWriter.deleteDocuments(Term) new call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call java.text.NumberFormat.format(double) call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call org.apache.lucene.index.IndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Directory Directory IndexReader IndexReader PKIndexSplitter private private throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.PKIndexSplitter = new new new call org.apache.lucene.index.PKIndexSplitter.split() call org.apache.lucene.index.PKIndexSplitter.split() call org.apache.lucene.index.PKIndexSplitter.split() call org.apache.lucene.index.PKIndexSplitter.split() call org.apache.lucene.index.PKIndexSplitter.split() decl_stmt org.apache.lucene.index.IndexReader = decl_stmt org.apache.lucene.index.IndexReader = call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Bits private private throws decl_stmt org.apache.lucene.util.Bits final final = for = < ++ if == || call Bits.get() call Bits.get() call Bits.get() call Bits.get() call Bits.get() StringBuilder String Document private private decl_stmt java.lang.StringBuilder = new decl_stmt org.apache.lucene.document.Document = new decl_stmt java.lang.String = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for = < ++ call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) + + call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() return