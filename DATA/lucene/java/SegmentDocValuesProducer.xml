org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.IdentityHashMap import java.util.List import java.util.Map import java.util.Set import org.apache.lucene.codecs.DocValuesProducer import org.apache.lucene.store.Directory import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.Bits import org.apache.lucene.util.RamUsageEstimator import class org.apache.lucene.index.SegmentDocValuesProducer super super extends decl Set decl List long long decl Map DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() call DocValuesProducer.getNumeric() DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() call DocValuesProducer.getBinary() DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() call DocValuesProducer.getSorted() DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() call DocValuesProducer.getSortedNumeric() DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() call DocValuesProducer.getSortedSet() DocValuesProducer public public throws decl_stmt org.apache.lucene.codecs.DocValuesProducer = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() assert != return call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() call DocValuesProducer.getDocsWithField() public public throws for : public public throws throw new long public public decl_stmt long = += call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() * += call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() * += call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() * * for : += return decl List public < public < decl_stmt java.util.List final final final < = new <> call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public return + + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() +