org.apache.solr.core org.apache.commons.io.FileUtils import org.apache.lucene.util.IOUtils import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.HttpSolrClient import org.apache.solr.client.solrj.request.UpdateRequest import org.apache.solr.client.solrj.response.QueryResponse import org.apache.solr.client.solrj.response.UpdateResponse import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.params.ModifiableSolrParams import org.apache.solr.util.TimeOut import org.junit.After import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.List import java.util.Locale import java.util.Map import java.util.Random import java.util.TreeMap import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicBoolean import java.util.concurrent.atomic.AtomicInteger import java.util.concurrent.atomic.AtomicLong import class org.apache.solr.core.OpenCloseCoreStressTest super super extends String int int Logger int String decl List Object JettySolrRunner int File decl List int long decl List decl Map public static public static public public throws = new <> = new <> = = = new call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() public public throws if != call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call org.apache.solr.client.solrj.embedded.JettySolrRunner.stop() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() public public throws public public throws public public throws public public throws public public throws public public throws HttpSolrClient private private throws call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() call org.apache.solr.client.solrj.embedded.JettySolrRunner.start() = call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() call JettySolrRunner.getLocalPort() for = < ++ decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = < ++ decl_stmt org.apache.solr.client.solrj.impl.HttpSolrClient = call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setConnectionTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call org.apache.solr.client.solrj.impl.HttpSolrClient.setSoTimeout(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() int Queries int int Indexer private private throws try call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt int = decl_stmt int = do decl_stmt int = call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt Indexer = new decl_stmt Queries = new call Indexer.waitOnThreads() call Indexer.waitOnThreads() call Indexer.waitOnThreads() call Indexer.waitOnThreads() call Indexer.waitOnThreads() call Queries.waitOnThreads() call Queries.waitOnThreads() call Queries.waitOnThreads() call Queries.waitOnThreads() call Queries.waitOnThreads() = - call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() += if > call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() > > catch File String String private private throws decl_stmt File = new decl_stmt java.lang.String = new new for = < ++ decl_stmt java.lang.String = new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() File File private private throws decl_stmt File = new if ! call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call File.mkdirs() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() decl_stmt File = new new new new new new new new new long long call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) for : try + catch call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt long = for : try decl_stmt long = += catch if > call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() for : call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() long long private private throws call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) decl_stmt long = for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() + for = < ++ try break catch call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + + decl_stmt long = += long call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) += return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() synchronized call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() +