org.apache.lucene.codecs.idversion java.io.IOException import java.io.PrintStream import org.apache.lucene.codecs.BlockTermState import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.TermState import org.apache.lucene.index.TermsEnum import org.apache.lucene.store.ByteArrayDataInput import org.apache.lucene.store.IndexInput import org.apache.lucene.util.ArrayUtil import org.apache.lucene.util.Bits import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.lucene.util.RamUsageEstimator import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.PairOutputs.Pair import org.apache.lucene.util.fst.Util import class org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnum super super extends VersionFieldReader boolean IDVersionSegmentTermsEnumFrame decl BytesReader ByteArrayDataInput decl FST BytesRefBuilder int int boolean IndexInput decl IDVersionSegmentTermsEnumFrame IDVersionSegmentTermsEnumFrame if == = call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() decl IDVersionSegmentTermsEnumFrame private private throws if >= decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame final final final = new + for = < ++ = new = assert == return decl FST private < < private < < if >= decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < < = new + for = < ++ = new <> = return long long IDVersionSegmentTermsEnumFrame < < < throws call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) call org.apache.lucene.store.ByteArrayDataInput.reset(byte) decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() decl_stmt long final final = >>> decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame final final = + = - = & != = = & != if call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.setFloorData(ByteArrayDataInput,BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.setFloorData(ByteArrayDataInput,BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.setFloorData(ByteArrayDataInput,BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.setFloorData(ByteArrayDataInput,BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.setFloorData(ByteArrayDataInput,BytesRef) return IDVersionSegmentTermsEnumFrame < < throws decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame final final = + = if == && != - if > call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() else assert == else = - = = = = = - return private private = return private private = return public public final final throws return static static try return + + catch return public public return long int int IDVersionSegmentTermsEnumFrame int boolean int int decl FST decl FST SeekStatus decl Pair int public public final final throws if == throw new call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) + assert decl_stmt org.apache.lucene.util.fst.FST < < decl_stmt int decl_stmt org.apache.solr.common.util.Pair < decl_stmt long = = decl_stmt boolean = if != = assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame = assert <= call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() : + + + call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() + + decl_stmt int final final = decl_stmt int = while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break = + assert == + & : + char + + + & if != = if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = + ++ if == decl_stmt int final final = decl_stmt int final final = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break ++ if == = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - = if < = else if > = = = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() else assert call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() == if if < return call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() if < return return else else = - = call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() assert != = = = = while < decl_stmt int final final = + & decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < < = call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() + if == = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) if ! = call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) + return if < if != || = call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) + = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() return call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() if < return return else return else = if call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) != byte = call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte = assert != if != = ++ if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) if ! = call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) return if < = call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) call org.apache.lucene.util.BytesRefBuilder.setLength(int) return call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() if < return return else return int int IDVersionSegmentTermsEnumFrame int int int decl FST decl FST SeekStatus decl Pair int public public final final throws if == throw new call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) call org.apache.lucene.util.BytesRefBuilder.grow(int) + assert decl_stmt org.apache.lucene.util.fst.FST < < decl_stmt int decl_stmt org.apache.solr.common.util.Pair < = if != = assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame = assert <= call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() decl_stmt int final final = decl_stmt int = while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break = + assert == + & : + char + + + & if != = if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = + ++ if == decl_stmt int final final = decl_stmt int final final = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() while < = call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) & - + & if != break ++ if == = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() - = if < = else if > = = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() else assert call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() == if return else else = - = call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() assert != = = = = while < decl_stmt int final final = + & decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < < = call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() + if == = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = if != return else return else return else call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) call org.apache.lucene.util.BytesRefBuilder.setByteAt(int,byte) byte = assert != if != = ++ if call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() = = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() decl_stmt SeekStatus final final = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToTerm(BytesRef,boolean) if == call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = if != return else return else return long IDVersionSegmentTermsEnumFrame BytesRef boolean ByteArrayDataInput long decl Pair int private private throws if == else decl_stmt int = decl_stmt boolean = while decl_stmt org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame = assert != decl_stmt org.apache.lucene.util.BytesRef final final = new call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() call org.apache.lucene.util.BytesRefBuilder.bytes() if == - + : + + + + + + + : + + + + + == - : + + + + + + + + << + : + : + + + + + + call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() else + : + + + + + + + : + + + + + + + == - : + + + + + + + + << + : + : + + + + + + + + call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() if != assert ! || != : + + + if > && && != call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) - & + char + + call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) call org.apache.lucene.util.BytesRefBuilder.byteAt(int) - & throw new decl_stmt org.apache.solr.common.util.Pair < = if == throw new else if && ! decl_stmt org.apache.lucene.store.ByteArrayDataInput final final = new decl_stmt long final final = call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() call org.apache.lucene.store.ByteArrayDataInput.readVLong() decl_stmt long final final = << | : | : if != + + + throw new if == break if == = ++ decl FST long boolean public public throws if == decl_stmt org.apache.lucene.util.fst.FST final final final final final final final < < if != = call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() call VersionFieldReader.index() assert call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() call decl FST.isFinal() else = = call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() = assert ! if == decl_stmt boolean final final = call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() assert while == if ! call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.loadNextFloorBlock() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.loadNextFloorBlock() else if == assert call org.apache.lucene.util.BytesRefBuilder.clear() call org.apache.lucene.util.BytesRefBuilder.clear() call org.apache.lucene.util.BytesRefBuilder.clear() call org.apache.lucene.util.BytesRefBuilder.clear() call org.apache.lucene.util.BytesRefBuilder.clear() = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.rewind() = return decl_stmt long final final = = - if == - || != call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToFloorFrame(BytesRef) call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToSubBlock(long) call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.scanToSubBlock(long) = while if call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.next() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.next() = call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() call BytesRefBuilder.length() = call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() call IDVersionSegmentTermsEnumFrame.loadBlock() else return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() public public assert ! return call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() public public throws assert ! return public public throws assert ! return public public throws assert ! call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() return call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() call VersionFieldReader.parent() public public assert if call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() != || ! assert != && instanceof = call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) call org.apache.lucene.util.BytesRefBuilder.copyBytes(BytesRef) = call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.getTermBlockOrd() assert > = else TermState public public throws assert ! call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() call org.apache.lucene.codecs.idversion.IDVersionSegmentTermsEnumFrame.decodeMetaData() decl_stmt org.apache.lucene.index.TermState = call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() call IDVersionSegmentTermsEnumFrame.state() return public public throw new public public throw new public public return + +