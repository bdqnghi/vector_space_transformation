org.apache.lucene.queries.payloads java.io.IOException import java.io.StringReader import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Set import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.MockTokenizer import org.apache.lucene.analysis.TokenFilter import org.apache.lucene.analysis.TokenStream import org.apache.lucene.analysis.Tokenizer import org.apache.lucene.analysis.tokenattributes.CharTermAttribute import org.apache.lucene.analysis.tokenattributes.PayloadAttribute import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.TextField import org.apache.lucene.index.IndexReader import org.apache.lucene.index.PostingsEnum import org.apache.lucene.index.RandomIndexWriter import org.apache.lucene.index.Term import org.apache.lucene.search.IndexSearcher import org.apache.lucene.search.TopDocs import org.apache.lucene.search.similarities.ClassicSimilarity import org.apache.lucene.search.similarities.Similarity import org.apache.lucene.search.spans.SpanCollector import org.apache.lucene.search.spans.SpanFirstQuery import org.apache.lucene.search.spans.SpanNearQuery import org.apache.lucene.search.spans.SpanNotQuery import org.apache.lucene.search.spans.SpanQuery import org.apache.lucene.search.spans.Spans import org.apache.lucene.search.spans.SpanTermQuery import org.apache.lucene.search.spans.SpanWeight import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LuceneTestCase import class org.apache.lucene.queries.payloads.TestPayloadSpans super super extends Directory IndexSearcher IndexReader IndexReader Similarity PayloadHelper public public throws decl_stmt org.apache.lucene.queries.payloads.PayloadHelper = new = call org.apache.lucene.queries.payloads.PayloadHelper.setUp(Random,Similarity,int) call org.apache.lucene.queries.payloads.PayloadHelper.setUp(Random,Similarity,int) call org.apache.lucene.queries.payloads.PayloadHelper.setUp(Random,Similarity,int) call org.apache.lucene.queries.payloads.PayloadHelper.setUp(Random,Similarity,int) call org.apache.lucene.queries.payloads.PayloadHelper.setUp(Random,Similarity,int) = call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() SpanTermQuery Spans public public throws decl_stmt org.apache.lucene.search.spans.SpanTermQuery decl_stmt org.apache.lucene.search.spans.Spans = new new = call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != = new new = call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != decl SpanQuery Spans SpanQuery SpanFirstQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery decl_stmt org.apache.lucene.search.spans.SpanFirstQuery = new new = new decl_stmt org.apache.lucene.search.spans.Spans = call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new = new = new call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() = new = new call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call SpanFirstQuery.createWeight() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() SpanQuery Document RandomIndexWriter IndexReader SpanNotQuery Directory decl SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new decl_stmt org.apache.lucene.search.spans.SpanQuery = new decl_stmt org.apache.lucene.search.spans.SpanNotQuery = new new new decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNotQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery SpanTermQuery Spans decl SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.SpanTermQuery decl_stmt org.apache.lucene.search.spans.Spans decl_stmt org.apache.lucene.search.IndexSearcher = = new new = call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanTermQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != new = new new = new new = new new = new = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != new = new = new new = new new = new decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery Spans SpanNearQuery decl SpanQuery decl SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.Spans decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl SpanQuery IndexSearcher SpanNearQuery SpanNearQuery SpanNearQuery SpanNearQuery Spans decl SpanQuery decl SpanQuery public public throws decl_stmt org.apache.lucene.search.spans.Spans decl_stmt org.apache.lucene.search.IndexSearcher = decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new = new = = new new = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = new new decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt org.apache.lucene.search.spans.SpanQuery = new = new new = = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() != new call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TopDocs SpanNearQuery decl SpanQuery Document IndexSearcher RandomIndexWriter IndexReader decl Set SpanTermQuery Spans SpanTermQuery Directory VerifyingCollector public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt VerifyingCollector = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.util.Set < = new <> for = < ++ while call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() != while call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() != call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() for final final : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TopDocs SpanNearQuery decl SpanQuery Document IndexSearcher RandomIndexWriter IndexReader decl Set SpanTermQuery Spans SpanTermQuery Directory VerifyingCollector public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt VerifyingCollector = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.util.Set < = new <> for = < ++ while call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() != while call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() != call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() for final final : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TopDocs SpanNearQuery decl SpanQuery Document IndexSearcher RandomIndexWriter IndexReader decl Set SpanTermQuery Spans SpanTermQuery Directory VerifyingCollector public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new new call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() decl_stmt org.apache.lucene.search.IndexSearcher = call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanTermQuery = new new decl_stmt org.apache.lucene.search.spans.SpanQuery = decl_stmt org.apache.lucene.search.spans.SpanNearQuery = new decl_stmt org.apache.lucene.search.spans.Spans = call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.spans.SpanNearQuery.createWeight(IndexSearcher,boolean) call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() call org.apache.lucene.search.IndexSearcher.getIndexReader() decl_stmt org.apache.lucene.search.TopDocs = call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) call org.apache.lucene.search.IndexSearcher.search(Query,int) decl_stmt java.util.Set < = new <> decl_stmt VerifyingCollector = new for = < ++ while call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() call Spans.nextDoc() != while call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() call Spans.nextStartPosition() != call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() call Spans.collect() for final final : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() if for final final : + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() public public throws if != public public public public for : int VerifyingCollector private private throws != decl_stmt VerifyingCollector = new decl_stmt int = while != while != call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.verify() call VerifyingCollector.verify() call VerifyingCollector.verify() call VerifyingCollector.verify() call VerifyingCollector.verify() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() ++ String decl String RandomIndexWriter IndexSearcher Document private private throws = decl_stmt java.lang.String = new decl_stmt org.apache.lucene.index.RandomIndexWriter = new new decl_stmt org.apache.lucene.document.Document = for = < ++ = new decl_stmt java.lang.String = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.search.IndexSearcher = return int VerifyingCollector private private throws decl_stmt int = decl_stmt VerifyingCollector = new while != while != if call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.reset() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() call VerifyingCollector.payloads() ++ Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new String public public throws if decl_stmt java.lang.String = if ! if new + + else new + + += return return public public throws = Tokenizer public public decl_stmt org.apache.lucene.analysis.Tokenizer = new return new new