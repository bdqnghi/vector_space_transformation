org.apache.lucene.util java.util.Arrays import class org.apache.lucene.util.IntBlockPool Allocator int int decl int int decl int int decl int int int int decl int public public return new public public public public int public public if != - if for = < ++ if > || ! decl_stmt int final final = : call Allocator.recycleIntBlocks() call Allocator.recycleIntBlocks() call Allocator.recycleIntBlocks() call Allocator.recycleIntBlocks() call Allocator.recycleIntBlocks() + + if = = = = else = - = = - = decl int public public if + == decl_stmt int = new * = = + = call Allocator.getIntBlock() call Allocator.getIntBlock() call Allocator.getIntBlock() call Allocator.getIntBlock() call Allocator.getIntBlock() ++ = += int private private final final if > - assert decl_stmt int final final = += - = return int private static final private static final decl_stmt int = for = < ++ += return == int int int int int private private final final final final final decl_stmt int final final = decl_stmt int final final = - decl_stmt int final final = if > - assert decl_stmt int final final = decl_stmt int final final = + += = - = return public public = decl int int public public decl_stmt int = >> assert != decl_stmt int = & if != = = = + = ++ public public return = + public public return int public public = / = * = = = = = & decl_stmt int final final = if + >= = & else = + - public public assert + <= return + == public public assert ! assert <= if == return ++ int int private private decl_stmt int final final = = - decl_stmt int final final = = / = * = = & if + >= assert - > = - else = + -