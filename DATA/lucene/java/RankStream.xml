org.apache.solr.client.solrj.io.stream java.io.IOException import java.io.Serializable import java.util.ArrayList import java.util.Comparator import java.util.LinkedList import java.util.List import java.util.Locale import java.util.PriorityQueue import org.apache.solr.client.solrj.io.Tuple import org.apache.solr.client.solrj.io.comp.FieldComparator import org.apache.solr.client.solrj.io.comp.StreamComparator import org.apache.solr.client.solrj.io.stream.expr.Expressible import org.apache.solr.client.solrj.io.stream.expr.StreamExpression import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionNamedParameter import org.apache.solr.client.solrj.io.stream.expr.StreamExpressionValue import org.apache.solr.client.solrj.io.stream.expr.StreamFactory import class org.apache.solr.client.solrj.io.stream.RankStream super super extends super implements TupleStream StreamComparator decl PriorityQueue boolean decl LinkedList long int private private throws = = = StreamExpression public public throws decl_stmt org.apache.solr.client.solrj.io.stream.expr.StreamExpression = new call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) new if instanceof call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) else throw new call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) call org.apache.solr.client.solrj.io.stream.expr.StreamExpression.addParameter(String) new call StreamComparator.toExpression() call StreamComparator.toExpression() call StreamComparator.toExpression() call StreamComparator.toExpression() call StreamComparator.toExpression() return public public decl List public < public < decl_stmt java.util.List < = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public throws = new new = new call TupleStream.open() call TupleStream.open() call TupleStream.open() call TupleStream.open() call TupleStream.open() public public throws call TupleStream.close() call TupleStream.close() call TupleStream.close() call TupleStream.close() call TupleStream.close() public public return Tuple int Tuple Tuple public public throws if ! while decl_stmt org.apache.solr.client.solrj.io.Tuple = call TupleStream.read() call TupleStream.read() call TupleStream.read() call TupleStream.read() call TupleStream.read() if = decl_stmt int = call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() for = < ++ decl_stmt org.apache.solr.client.solrj.io.Tuple = call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl LinkedList.addFirst() call decl LinkedList.addFirst() call decl LinkedList.addFirst() call decl LinkedList.addFirst() call decl LinkedList.addFirst() call decl LinkedList.addLast() call decl LinkedList.addLast() call decl LinkedList.addLast() call decl LinkedList.addLast() call decl LinkedList.addLast() break else if call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() call decl PriorityQueue.size() >= decl_stmt org.apache.solr.client.solrj.io.Tuple = call decl PriorityQueue.peek() call decl PriorityQueue.peek() call decl PriorityQueue.peek() call decl PriorityQueue.peek() call decl PriorityQueue.peek() if call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() < call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.poll() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() else call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() call decl PriorityQueue.add() return call decl LinkedList.pollFirst() call decl LinkedList.pollFirst() call decl LinkedList.pollFirst() call decl LinkedList.pollFirst() call decl LinkedList.pollFirst() public public return public public return public public return call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() call StreamComparator.compare() * -