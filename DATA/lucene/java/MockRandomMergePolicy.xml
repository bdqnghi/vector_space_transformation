org.apache.lucene.index java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.List import java.util.Map import java.util.Random import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.index.MockRandomMergePolicy super super extends Random boolean public public = int int decl List MergeSpecification decl Collection public public decl_stmt MergeSpecification = decl_stmt int = decl_stmt java.util.List < = new <> decl_stmt java.util.Collection final final final < = for : if ! call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl Collection.contains() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if > && > || call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) == = new decl_stmt int final final = if && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() new call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() else call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() new call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() return int int MergeSpecification decl List int public public < throws decl_stmt java.util.List final final final < = new <> for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt MergeSpecification = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > || call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == && call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() == = new decl_stmt int = while < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - decl_stmt int = <= : if && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() new call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() + call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() call java.util.Random.nextLong() else call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() call MergeSpecification.add() new call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() + += if != for : for : assert return public public throws return public public throws return call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) != int public < public < throws if == = new < for = < ++ decl_stmt int = if == if + new else if == if + new return