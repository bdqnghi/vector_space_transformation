org.apache.solr.update.processor static static org.apache.solr.common.SolrException.ErrorCode.SERVER_ERROR import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.List import java.util.Map import java.util.regex.Matcher import java.util.regex.Pattern import java.util.regex.PatternSyntaxException import org.apache.solr.common.SolrException import org.apache.solr.common.SolrInputDocument import org.apache.solr.common.SolrInputField import org.apache.solr.common.util.NamedList import org.apache.solr.core.SolrCore import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.update.AddUpdateCommand import org.apache.solr.update.processor.FieldMutatingUpdateProcessor.FieldNameSelector import org.apache.solr.update.processor.FieldMutatingUpdateProcessorFactory.SelectorParams import org.apache.solr.util.plugin.SolrCoreAware import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.update.processor.CloneFieldUpdateProcessorFactory super super extends super implements Logger String String FieldNameSelector String String Pattern decl Collection String SelectorParams protected final protected final if != return throw new + public public if <= && <= else if <= && <= else throw new + + + + + + + + if < throw new + + Object Object private private if <= || <= throw new + + + + + + + assert < decl_stmt java.lang.Object = decl_stmt java.lang.Object = if == || == throw new + + + + + + + + if != throw new + + + + + + if ! instanceof throw new + + if ! instanceof throw new + + = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() try = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() catch throw new + + + = new = Object NamedList decl List decl List NamedList Object NamedList Object private private if <= || <= throw new + + + + + + + decl_stmt java.lang.Object = assert != decl_stmt java.util.List < = assert != if == call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() if call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() instanceof decl_stmt org.apache.solr.common.util.NamedList = = decl_stmt java.util.List < = call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) call org.apache.solr.common.util.NamedList.getAll(String) for : if == throw new + + if ! instanceof throw new + + decl_stmt org.apache.solr.common.util.NamedList = call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() if < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() throw new + + + call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) + call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) if < call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() throw new + + + call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) + call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() if <= call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = new <> if == throw new + + + + + + + + + if instanceof decl_stmt org.apache.solr.common.util.NamedList = decl_stmt java.lang.Object = call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) decl_stmt java.lang.Object = call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) call org.apache.solr.common.util.NamedList.remove(int) if == || == throw new + + + + + + if ! instanceof && instanceof throw new + + + + + + if != call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() call org.apache.solr.common.util.NamedList.size() throw new + + + call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) call org.apache.solr.common.util.NamedList.getName(int) + try = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() catch throw new + + + + + = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() else if instanceof = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() else throw new + + + + + + public public final final = for : = SolrInputDocument FieldNameSelector SolrInputField decl Collection Matcher String decl Map SolrInputField public final public final decl_stmt org.apache.solr.update.processor.FieldNameSelector final final = return new public public throws decl_stmt org.apache.solr.common.SolrInputDocument final final = decl_stmt java.util.Map < = new <> for final final : call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() if ! call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() continue decl_stmt java.util.Collection < = call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) if == || call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() continue decl_stmt java.lang.String = if != decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) = call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + continue decl_stmt org.apache.solr.common.SolrInputField if call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) else decl_stmt org.apache.solr.common.SolrInputField = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new else = for : call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() SolrInputDocument SolrInputField SolrInputField decl Collection Matcher String decl Map public public throws decl_stmt org.apache.solr.common.SolrInputDocument final final = decl_stmt java.util.Map < = new <> for final final : call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() call org.apache.solr.common.SolrInputDocument.getFieldNames() if ! call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() call FieldNameSelector.shouldMutate() continue decl_stmt java.util.Collection < = call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) call org.apache.solr.common.SolrInputDocument.getFieldValues(String) if == || call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() call decl Collection.isEmpty() continue decl_stmt java.lang.String = if != decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) = call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) call java.util.regex.Matcher.replaceAll(String) else call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + continue decl_stmt org.apache.solr.common.SolrInputField if call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) call org.apache.solr.common.SolrInputDocument.containsKey(Object) = call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) call org.apache.solr.common.SolrInputDocument.getField(String) else decl_stmt org.apache.solr.common.SolrInputField = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new else = for : call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call org.apache.solr.common.SolrInputField.addValue(Object,float) call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call org.apache.solr.common.SolrInputDocument.put(String,SolrInputField) call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() private static private static return