org.apache.lucene.analysis.ja.dict org.apache.lucene.analysis.ja.util.ToStringUtil import org.apache.lucene.util.IntsRef import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.UnicodeUtil import org.apache.lucene.util.fst.FST import org.apache.lucene.util.fst.IntsRefFSTEnum import org.apache.lucene.util.fst.IntsRefFSTEnum.InputOutput import class org.apache.lucene.analysis.ja.dict.TestTokenInfoDictionary super super extends IntsRef int int String int int String ConnectionCosts int char String TokenInfoDictionary int String String decl InputOutput IntsRef String int int decl FST decl IntsRefFSTEnum Long public public throws decl_stmt int = decl_stmt int = decl_stmt int = - decl_stmt int = - decl_stmt org.apache.lucene.analysis.ja.dict.TokenInfoDictionary = decl_stmt org.apache.lucene.analysis.ja.dict.ConnectionCosts = decl_stmt org.apache.lucene.util.fst.FST < = call org.apache.lucene.analysis.ja.dict.TokenInfoDictionary.getFST() call org.apache.lucene.analysis.ja.dict.TokenInfoDictionary.getFST() call org.apache.lucene.analysis.ja.dict.TokenInfoDictionary.getFST() call org.apache.lucene.analysis.ja.dict.TokenInfoDictionary.getFST() call org.apache.lucene.analysis.ja.dict.TokenInfoDictionary.getFST() decl_stmt org.apache.lucene.util.fst.IntsRefFSTEnum < = new <> decl_stmt InputOutput < decl_stmt org.apache.lucene.util.IntsRef = new while = call decl IntsRefFSTEnum.next() call decl IntsRefFSTEnum.next() call decl IntsRefFSTEnum.next() call decl IntsRefFSTEnum.next() call decl IntsRefFSTEnum.next() != ++ decl_stmt org.apache.lucene.util.IntsRef = decl_stmt char = new for = < ++ = char + new decl_stmt java.lang.Long = decl_stmt int = call java.lang.Long.intValue() call java.lang.Long.intValue() call java.lang.Long.intValue() call java.lang.Long.intValue() call java.lang.Long.intValue() > = call TokenInfoDictionary.lookupWordIds() call TokenInfoDictionary.lookupWordIds() call TokenInfoDictionary.lookupWordIds() call TokenInfoDictionary.lookupWordIds() call TokenInfoDictionary.lookupWordIds() for = < ++ ++ decl_stmt int = + > = decl_stmt java.lang.String = call TokenInfoDictionary.getBaseForm() call TokenInfoDictionary.getBaseForm() call TokenInfoDictionary.getBaseForm() call TokenInfoDictionary.getBaseForm() call TokenInfoDictionary.getBaseForm() == || decl_stmt java.lang.String = call TokenInfoDictionary.getInflectionForm() call TokenInfoDictionary.getInflectionForm() call TokenInfoDictionary.getInflectionForm() call TokenInfoDictionary.getInflectionForm() call TokenInfoDictionary.getInflectionForm() == || if != decl_stmt java.lang.String = call TokenInfoDictionary.getInflectionType() call TokenInfoDictionary.getInflectionType() call TokenInfoDictionary.getInflectionType() call TokenInfoDictionary.getInflectionType() call TokenInfoDictionary.getInflectionType() == || if != decl_stmt int = call TokenInfoDictionary.getLeftId() call TokenInfoDictionary.getLeftId() call TokenInfoDictionary.getLeftId() call TokenInfoDictionary.getLeftId() call TokenInfoDictionary.getLeftId() decl_stmt int = call TokenInfoDictionary.getRightId() call TokenInfoDictionary.getRightId() call TokenInfoDictionary.getRightId() call TokenInfoDictionary.getRightId() call TokenInfoDictionary.getRightId() call ConnectionCosts.get() call ConnectionCosts.get() call ConnectionCosts.get() call ConnectionCosts.get() call ConnectionCosts.get() call TokenInfoDictionary.getWordCost() call TokenInfoDictionary.getWordCost() call TokenInfoDictionary.getWordCost() call TokenInfoDictionary.getWordCost() call TokenInfoDictionary.getWordCost() decl_stmt java.lang.String = call TokenInfoDictionary.getPartOfSpeech() call TokenInfoDictionary.getPartOfSpeech() call TokenInfoDictionary.getPartOfSpeech() call TokenInfoDictionary.getPartOfSpeech() call TokenInfoDictionary.getPartOfSpeech() decl_stmt java.lang.String = call TokenInfoDictionary.getPronunciation() call TokenInfoDictionary.getPronunciation() call TokenInfoDictionary.getPronunciation() call TokenInfoDictionary.getPronunciation() call TokenInfoDictionary.getPronunciation() decl_stmt java.lang.String = call TokenInfoDictionary.getReading() call TokenInfoDictionary.getReading() call TokenInfoDictionary.getReading() call TokenInfoDictionary.getReading() call TokenInfoDictionary.getReading() if + + + +