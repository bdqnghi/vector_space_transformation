org.apache.lucene.codecs.lucene60 java.io.Closeable import java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import org.apache.lucene.codecs.CodecUtil import org.apache.lucene.codecs.PointsReader import org.apache.lucene.index.FieldInfo import org.apache.lucene.index.IndexFileNames import org.apache.lucene.index.SegmentReadState import org.apache.lucene.store.ChecksumIndexInput import org.apache.lucene.store.IndexInput import org.apache.lucene.util.Accountable import org.apache.lucene.util.Accountables import org.apache.lucene.util.IOUtils import org.apache.lucene.util.bkd.BKDReader import class org.apache.lucene.codecs.lucene60.Lucene60PointsReader super super extends super implements SegmentReadState IndexInput decl Map FieldInfo public public decl_stmt org.apache.lucene.index.FieldInfo = call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() if == throw new + + if call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() call org.apache.lucene.index.FieldInfo.getPointDimensionCount() == throw new + + return call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() BKDReader public public throws decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return call org.apache.lucene.util.bkd.BKDReader.intersect(IntersectVisitor) call org.apache.lucene.util.bkd.BKDReader.intersect(IntersectVisitor) call org.apache.lucene.util.bkd.BKDReader.intersect(IntersectVisitor) call org.apache.lucene.util.bkd.BKDReader.intersect(IntersectVisitor) call org.apache.lucene.util.bkd.BKDReader.intersect(IntersectVisitor) long public public decl_stmt long = for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() += return decl List public < public < decl_stmt java.util.List < = new <> for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() call SegmentReadState.fieldInfos() return public public throws public public throws call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() call decl Map.clear() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getMinPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMinPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMinPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMinPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMinPackedValue() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getMaxPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMaxPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMaxPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMaxPackedValue() call org.apache.lucene.util.bkd.BKDReader.getMaxPackedValue() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getNumDimensions() call org.apache.lucene.util.bkd.BKDReader.getNumDimensions() call org.apache.lucene.util.bkd.BKDReader.getNumDimensions() call org.apache.lucene.util.bkd.BKDReader.getNumDimensions() call org.apache.lucene.util.bkd.BKDReader.getNumDimensions() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getBytesPerDimension() call org.apache.lucene.util.bkd.BKDReader.getBytesPerDimension() call org.apache.lucene.util.bkd.BKDReader.getBytesPerDimension() call org.apache.lucene.util.bkd.BKDReader.getBytesPerDimension() call org.apache.lucene.util.bkd.BKDReader.getBytesPerDimension() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getPointCount() call org.apache.lucene.util.bkd.BKDReader.getPointCount() call org.apache.lucene.util.bkd.BKDReader.getPointCount() call org.apache.lucene.util.bkd.BKDReader.getPointCount() call org.apache.lucene.util.bkd.BKDReader.getPointCount() BKDReader public public decl_stmt org.apache.lucene.util.bkd.BKDReader = if == return return call org.apache.lucene.util.bkd.BKDReader.getDocCount() call org.apache.lucene.util.bkd.BKDReader.getDocCount() call org.apache.lucene.util.bkd.BKDReader.getDocCount() call org.apache.lucene.util.bkd.BKDReader.getDocCount() call org.apache.lucene.util.bkd.BKDReader.getDocCount()