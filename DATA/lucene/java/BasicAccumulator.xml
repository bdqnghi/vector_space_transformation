org.apache.solr.analytics.accumulator java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collections import java.util.Date import java.util.List import java.util.Set import com.google.common.base.Supplier import org.apache.lucene.index.LeafReaderContext import org.apache.solr.analytics.expression.Expression import org.apache.solr.analytics.expression.ExpressionFactory import org.apache.solr.analytics.request.AnalyticsRequest import org.apache.solr.analytics.request.ExpressionRequest import org.apache.solr.analytics.statistics.StatsCollector import org.apache.solr.analytics.statistics.StatsCollectorSupplierFactory import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import org.apache.solr.common.util.NamedList import org.apache.solr.search.DocSet import org.apache.solr.search.SolrIndexSearcher import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.analytics.accumulator.BasicAccumulator super super extends SolrIndexSearcher decl Set Logger DocSet decl StatsCollector AnalyticsRequest decl String LeafReaderContext decl String decl Supplier decl Expression protected protected throws = for : public static public static throws return new public public throws for : public public for : decl NamedList public < public < decl_stmt org.apache.solr.common.util.NamedList < = new <> for = < ++ if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() call decl NamedList.add() return decl Expression public public decl_stmt org.apache.solr.analytics.expression.Expression = new for = < ++ = return Comparable public public for = < ++ if decl_stmt java.lang.Comparable = if call Comparable.getClass() call Comparable.getClass() call Comparable.getClass() call Comparable.getClass() call Comparable.getClass() return else return call Comparable.toString() call Comparable.toString() call Comparable.toString() call Comparable.toString() call Comparable.toString() throw new + + public public return public public return public public return