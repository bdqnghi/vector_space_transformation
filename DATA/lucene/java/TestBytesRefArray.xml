org.apache.lucene.util java.io.IOException import java.util.* import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefIterator import org.apache.lucene.util.Counter import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.TestUtil import class org.apache.lucene.util.TestBytesRefArray super super extends int BytesRefIterator Random BytesRefArray int BytesRefBuilder int String decl List public public throws decl_stmt java.util.Random = decl_stmt org.apache.lucene.util.BytesRefArray = new decl_stmt java.util.List < = new <> for = < ++ if > && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() decl_stmt int = decl_stmt org.apache.lucene.util.BytesRefBuilder = new decl_stmt int = call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() for = < ++ decl_stmt java.lang.String = call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) + call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for = < ++ call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() for = < ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) call org.apache.lucene.util.BytesRefArray.get(BytesRefBuilder,int) + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() for = < ++ decl_stmt org.apache.lucene.util.BytesRefIterator = call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) for : call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() int Random BytesRefArray BytesRefIterator BytesRef int BytesRefBuilder int String decl List public public throws decl_stmt java.util.Random = decl_stmt org.apache.lucene.util.BytesRefArray = new decl_stmt java.util.List < = new <> for = < ++ if > && call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call org.apache.lucene.util.BytesRefArray.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() call decl List.clear() decl_stmt int = decl_stmt org.apache.lucene.util.BytesRefBuilder = new decl_stmt int final final = call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() call org.apache.lucene.util.BytesRefArray.size() for = < ++ decl_stmt java.lang.String = call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) call org.apache.lucene.util.BytesRefBuilder.copyChars(char,int,int) + call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefArray.append(BytesRef) call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call org.apache.lucene.util.BytesRefBuilder.get() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.lucene.util.BytesRefIterator = call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) call org.apache.lucene.util.BytesRefArray.iterator(Comparator) decl_stmt int = decl_stmt org.apache.lucene.util.BytesRef while = call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() != + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() ++ call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call BytesRefIterator.next() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size()