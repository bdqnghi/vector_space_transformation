org.apache.solr.handler.component com.google.common.base.Objects import org.apache.lucene.search.Query import org.apache.solr.common.SolrException import org.apache.solr.common.params.CommonParams import org.apache.solr.common.params.HighlightParams import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.common.util.SimpleOrderedMap import org.apache.solr.core.PluginInfo import org.apache.solr.core.SolrCore import org.apache.solr.highlight.DefaultSolrHighlighter import org.apache.solr.highlight.PostingsSolrHighlighter import org.apache.solr.highlight.SolrHighlighter import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.QParser import org.apache.solr.search.QParserPlugin import org.apache.solr.search.QueryParsing import org.apache.solr.search.SyntaxError import org.apache.solr.util.SolrPluginUtils import org.apache.solr.util.plugin.PluginInfoInitialized import org.apache.solr.util.plugin.SolrCoreAware import java.io.IOException import java.net.URL import java.util.List import java.util.Map import class org.apache.solr.handler.component.HighlightComponent super super extends super implements PluginInfo SolrHighlighter String HighlightComponent public static public static decl_stmt org.apache.solr.handler.component.HighlightComponent = return == : call org.apache.solr.handler.component.HighlightComponent.getHighlighter(SolrCore) call org.apache.solr.handler.component.HighlightComponent.getHighlighter(SolrCore) call org.apache.solr.handler.component.HighlightComponent.getHighlighter(SolrCore) call org.apache.solr.handler.component.HighlightComponent.getHighlighter(SolrCore) call org.apache.solr.handler.component.HighlightComponent.getHighlighter(SolrCore) public public = String QParser SolrParams String public public throws decl_stmt org.apache.solr.common.params.SolrParams = = call SolrHighlighter.isHighlightingEnabled() call SolrHighlighter.isHighlightingEnabled() call SolrHighlighter.isHighlightingEnabled() call SolrHighlighter.isHighlightingEnabled() call SolrHighlighter.isHighlightingEnabled() if decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if != try decl_stmt org.apache.solr.search.QParser = call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() call org.apache.solr.search.QParser.getHighlightQuery() catch throw new DefaultSolrHighlighter decl List PluginInfo public public decl_stmt java.util.List < = call org.apache.solr.core.PluginInfo.getChildren(String) call org.apache.solr.core.PluginInfo.getChildren(String) call org.apache.solr.core.PluginInfo.getChildren(String) call org.apache.solr.core.PluginInfo.getChildren(String) call org.apache.solr.core.PluginInfo.getChildren(String) if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt org.apache.solr.core.PluginInfo = if != = else decl_stmt org.apache.solr.highlight.DefaultSolrHighlighter = new call org.apache.solr.highlight.DefaultSolrHighlighter.init(PluginInfo) call org.apache.solr.highlight.DefaultSolrHighlighter.init(PluginInfo) call org.apache.solr.highlight.DefaultSolrHighlighter.init(PluginInfo) call org.apache.solr.highlight.DefaultSolrHighlighter.init(PluginInfo) call org.apache.solr.highlight.DefaultSolrHighlighter.init(PluginInfo) = else = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Query NamedList boolean SolrQueryRequest decl String SolrParams public public throws if decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.common.params.SolrParams = call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() call org.apache.solr.request.SolrQueryRequest.getParams() decl_stmt java.lang.String if != = else = call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() call SolrParams.getParams() decl_stmt org.apache.lucene.search.Query = if == if != try = catch throw new else = if != decl_stmt boolean = instanceof == && ! call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() && call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.lucene.search.Query.rewrite(IndexReader) call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() call org.apache.solr.request.SolrQueryRequest.getSearcher() : if != decl_stmt org.apache.solr.common.util.NamedList = call SolrHighlighter.doHighlighting() call SolrHighlighter.doHighlighting() call SolrHighlighter.doHighlighting() call SolrHighlighter.doHighlighting() call SolrHighlighter.doHighlighting() if != public public if ! return if & != |= else public public decl NamedList decl NamedListEntry public public if && == decl_stmt NamedListEntry = new for : if & == continue for : if != continue decl_stmt org.apache.solr.common.util.NamedList = new <> public public return public public return public public return