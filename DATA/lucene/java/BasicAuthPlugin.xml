org.apache.solr.security javax.servlet.FilterChain import javax.servlet.ServletRequest import javax.servlet.ServletResponse import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletRequestWrapper import javax.servlet.http.HttpServletResponse import java.io.IOException import java.io.UnsupportedEncodingException import java.lang.invoke.MethodHandles import java.security.Principal import java.util.List import java.util.Map import java.util.Set import java.util.StringTokenizer import com.google.common.collect.ImmutableSet import org.apache.commons.codec.binary.Base64 import org.apache.http.Header import org.apache.http.auth.BasicUserPrincipal import org.apache.http.message.BasicHeader import org.apache.solr.common.SolrException import org.apache.solr.util.CommandOperation import org.slf4j.Logger import org.slf4j.LoggerFactory import class org.apache.solr.security.BasicAuthPlugin super super extends super implements AuthenticationProvider boolean String decl Set decl ThreadLocal Logger public public return call AuthenticationProvider.authenticate() call AuthenticationProvider.authenticate() call AuthenticationProvider.authenticate() call AuthenticationProvider.authenticate() call AuthenticationProvider.authenticate() Object public public < decl_stmt java.lang.Object = if != try = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() = ConfigEditablePlugin public < public < < < for : if for < : if call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() else + if ! return if instanceof decl_stmt org.apache.solr.security.ConfigEditablePlugin = return call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() call ConfigEditablePlugin.edit() throw new Sha256AuthenticationProvider protected protected < decl_stmt org.apache.solr.security.Sha256AuthenticationProvider = new call org.apache.solr.security.Sha256AuthenticationProvider.init(Map) call org.apache.solr.security.Sha256AuthenticationProvider.init(Map) call org.apache.solr.security.Sha256AuthenticationProvider.init(Map) call org.apache.solr.security.Sha256AuthenticationProvider.init(Map) call org.apache.solr.security.Sha256AuthenticationProvider.init(Map) return private private throws for < : call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() String HttpServletRequest HttpServletRequestWrapper StringTokenizer int String String String HttpServletResponse String public public throws decl_stmt HttpServletRequest = decl_stmt HttpServletResponse = decl_stmt java.lang.String = call HttpServletRequest.getHeader() call HttpServletRequest.getHeader() call HttpServletRequest.getHeader() call HttpServletRequest.getHeader() call HttpServletRequest.getHeader() if != new decl_stmt java.util.StringTokenizer = new if call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) try decl_stmt java.lang.String = new call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if != - decl_stmt java.lang.String final final = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + if ! else decl_stmt HttpServletRequestWrapper = new public public return new else catch throw new else if else call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() call org.apache.solr.security.AuthenticationProvider.getPromptHeaders() public public return new public public throws public public call decl ThreadLocal.remove() call decl ThreadLocal.remove() call decl ThreadLocal.remove() call decl ThreadLocal.remove() call decl ThreadLocal.remove() public public return