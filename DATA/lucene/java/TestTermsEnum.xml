org.apache.lucene.index java.io.IOException import java.util.* import org.apache.lucene.analysis.MockAnalyzer import org.apache.lucene.document.Document import org.apache.lucene.document.Field import org.apache.lucene.document.NumericDocValuesField import org.apache.lucene.search.DocIdSetIterator import org.apache.lucene.store.Directory import org.apache.lucene.util.BytesRef import org.apache.lucene.util.LineFileDocs import org.apache.lucene.util.LuceneTestCase import org.apache.lucene.util.LuceneTestCase.SuppressCodecs import org.apache.lucene.util.TestUtil import org.apache.lucene.util.automaton.Automata import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.CompiledAutomaton import org.apache.lucene.util.automaton.RegExp import class annotation org.apache.lucene.index.TestTermsEnum super super extends String IndexReader Directory int decl TermsEnum BytesRef decl List Directory String TermsEnum int LineFileDocs boolean Random MockAnalyzer IndexReader decl SeekStatus RandomIndexWriter int BytesRef public public throws decl_stmt java.util.Random = new decl_stmt org.apache.lucene.util.LineFileDocs final final = new decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.analysis.MockAnalyzer = new call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) call org.apache.lucene.analysis.MockAnalyzer.setMaxTokenLength(int) decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt int final final = for = < ++ call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() call org.apache.lucene.util.LineFileDocs.nextDoc() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt java.util.List final final final < = new <> decl_stmt org.apache.lucene.index.TermsEnum final final = decl_stmt org.apache.lucene.util.BytesRef while = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + decl_stmt int = - decl_stmt int final final = for = < ++ decl_stmt boolean final final if != - && if = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() == ++ if if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = - else if + call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() else decl_stmt org.apache.lucene.util.BytesRef final final decl_stmt java.lang.String final final if if = new else = new = else = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = = if if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + + decl_stmt SeekStatus final final final final final = call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) if + if < = - + if >= call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = - else call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() else call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() else if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + + decl_stmt boolean final final = call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) if + if < = - else call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call org.apache.lucene.util.LineFileDocs.close() call org.apache.lucene.util.LineFileDocs.close() call org.apache.lucene.util.LineFileDocs.close() call org.apache.lucene.util.LineFileDocs.close() call org.apache.lucene.util.LineFileDocs.close() Document private private < < throws decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new if + + + for : call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) new int private private decl_stmt int = for = < ++ != - = + & return decl Set NumericDocValues decl TreeSet decl Set double decl Map int PostingsEnum int String BytesRef int int decl BytesRef BytesRef int TermsEnum int decl Set decl Set decl Collection int Automaton CompiledAutomaton BytesRef BytesRef decl BytesRef String IndexReader RandomIndexWriter Directory public public throws decl_stmt org.apache.lucene.store.Directory final final = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt int final final = decl_stmt java.util.Set final final final < = new <> decl_stmt java.util.Collection final final final < = new <> decl_stmt java.util.Map final final final < = new <> decl_stmt int = while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() != decl_stmt java.lang.String final final = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() if == ++ ++ decl_stmt org.apache.lucene.util.BytesRef final final final = new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt java.util.Set final final final < = new <> decl_stmt int = for : decl_stmt org.apache.lucene.util.BytesRef final final = new ++ = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if for : + + + call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() decl_stmt org.apache.lucene.index.IndexReader final final = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt NumericDocValues final final = for = < * ++ decl_stmt java.util.Set final final final < = new <> decl_stmt java.util.TreeSet final final final < = new <> decl_stmt double final final = decl_stmt org.apache.lucene.util.automaton.Automaton if == if = else if + for : decl_stmt java.lang.String final final if <= = else = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() call decl TreeSet.add() new = decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton final final = new decl_stmt org.apache.lucene.util.BytesRef final final final = new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() decl_stmt java.util.Set final final final < = new <> decl_stmt int = for : decl_stmt org.apache.lucene.util.BytesRef final final = new ++ = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if for : + + call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() : call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() call org.apache.lucene.util.automaton.Automaton.toDot() for = < ++ decl_stmt org.apache.lucene.util.BytesRef final final = == || : if + + + == : call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() if != decl_stmt int = call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() for = < ++ decl_stmt int final final = + & + + + = call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() call CompiledAutomaton.runAutomaton() != - + decl_stmt org.apache.lucene.index.TermsEnum final final = decl_stmt int if == = else = if < = - + else ++ while < && ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() ++ decl_stmt org.apache.lucene.index.PostingsEnum = while < decl_stmt org.apache.lucene.util.BytesRef final final = decl_stmt org.apache.lucene.util.BytesRef final final = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + + == : call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() call org.apache.lucene.index.TermsEnum.docFreq() = decl_stmt int final final = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call NumericDocValues.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() do ++ < && ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() Document IndexWriterConfig RandomIndexWriter Field private private throws = decl_stmt org.apache.lucene.index.IndexWriterConfig = new decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new for : decl_stmt org.apache.lucene.document.Document = new decl_stmt org.apache.solr.handler.dataimport.config.Field = call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) if != = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() return private private throws call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private private throws return call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() call IndexReader.docFreq() new public public throws = TermsEnum decl String public public throws decl_stmt java.lang.String final final final = new = decl_stmt org.apache.lucene.index.TermsEnum final final = while call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() != Document IndexReader Terms RandomIndexWriter public public throws = decl_stmt org.apache.lucene.index.RandomIndexWriter final final = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.commit() call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) call org.apache.lucene.index.RandomIndexWriter.deleteDocuments(Query) new call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.numDocs() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() call IndexReader.maxDoc() decl_stmt org.apache.lucene.index.Terms = if != call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call Terms.iterator() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() private private return decl String int String String boolean decl Set public public throws decl_stmt java.lang.String final final final = new decl_stmt java.util.Set final final final < = new <> decl_stmt boolean final final = if == && > decl_stmt int final final = / if > decl_stmt java.lang.String while = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < continue else break while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < decl_stmt java.lang.String final final = + if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < decl_stmt java.lang.String final final = if ! call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() && || call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() != call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() = call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = private private throws return new BytesRef private private throws decl_stmt org.apache.lucene.util.BytesRef final final = if == return else return call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() BytesRef String private private decl_stmt org.apache.lucene.util.BytesRef = while decl_stmt java.lang.String final final = = new if < return int TermState boolean int TermAndState int decl BytesRef BytesRef TermsEnum decl SeekStatus decl List decl TermsEnum private private throws decl_stmt org.apache.lucene.util.BytesRef final final final = new for = < ++ = new if + + for : + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() + + decl_stmt org.apache.lucene.index.TermsEnum final final = decl_stmt int final final = - - decl_stmt java.util.List final final final < = new <> for = < * ++ decl_stmt org.apache.lucene.util.BytesRef final final decl_stmt int decl_stmt org.apache.lucene.index.TermState final final if == = = if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() = else if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() != && == decl_stmt TermAndState final final = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() = = >= = if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() else = = = if + call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() call org.apache.lucene.util.BytesRef.utf8ToString() decl_stmt boolean final final = if != if call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) else if if >= call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) else if decl_stmt SeekStatus final final final final final = call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) if + if >= else if == else assert >= - if >= call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() else if continue else if == continue else = - - call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() call org.apache.lucene.index.TermsEnum.term() decl_stmt int final final = for = < ++ if + + + decl_stmt org.apache.lucene.util.BytesRef final final = call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() ++ if == break else if == && call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() call org.apache.lucene.index.TermsEnum.termState() TermsEnum IndexWriterConfig LeafReader Document CompiledAutomaton DirectoryReader RandomIndexWriter Terms Automaton Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.Terms = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TermsEnum IndexWriterConfig LeafReader Document CompiledAutomaton DirectoryReader RandomIndexWriter Terms Automaton Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.Terms = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() TermsEnum IndexWriterConfig LeafReader Document CompiledAutomaton PostingsEnum DirectoryReader RandomIndexWriter Terms Automaton Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) call org.apache.lucene.index.IndexWriterConfig.setMergePolicy(MergePolicy) new decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) call org.apache.lucene.index.RandomIndexWriter.forceMerge(int) decl_stmt org.apache.lucene.index.DirectoryReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() decl_stmt org.apache.lucene.index.LeafReader = decl_stmt org.apache.lucene.index.Terms = call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() call LeafReader.fields() decl_stmt org.apache.lucene.util.automaton.Automaton = new decl_stmt org.apache.lucene.util.automaton.CompiledAutomaton = new decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) decl_stmt org.apache.lucene.index.PostingsEnum call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) call org.apache.lucene.index.Terms.intersect(CompiledAutomaton,BytesRef) new call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call DirectoryReader.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl List decl TermsEnum String decl Set Directory TermsEnum int Document boolean int String IndexReader PerThreadPKLookup RandomIndexWriter BytesRef int PostingsEnum boolean public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt java.util.Set < = new < decl_stmt java.lang.String = decl_stmt int = if + + + while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() + for : decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() if + decl_stmt org.apache.lucene.index.TermsEnum = decl_stmt org.apache.lucene.index.PostingsEnum = decl_stmt org.apache.lucene.index.PerThreadPKLookup = new decl_stmt int = * decl_stmt java.util.List < = new <> for = < ++ decl_stmt java.lang.String decl_stmt boolean if = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() = else = + = call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() if + + decl_stmt org.apache.lucene.util.BytesRef = new decl_stmt boolean = call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) if = call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) call org.apache.lucene.index.TermsEnum.postings(PostingsEnum) decl_stmt int = call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() call PostingsEnum.nextDoc() != call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() decl_stmt org.apache.lucene.document.Document = call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.index.IndexReader.document(int) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) call org.apache.lucene.document.Document.get(String) if == call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() call TermsEnum.next() else - call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() call PerThreadPKLookup.lookup() if == decl_stmt SeekStatus = call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) call org.apache.lucene.index.TermsEnum.seekCeil(BytesRef) if else call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() decl List decl Set Document int IndexReader RandomIndexWriter StringBuilder TermsEnum IndexWriterConfig Directory public public throws decl_stmt org.apache.lucene.store.Directory = decl_stmt java.util.Set < = new < decl_stmt int = while call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new decl_stmt java.util.List < = new <> decl_stmt java.lang.StringBuilder = new for = < ++ if + + + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.apache.lucene.index.IndexWriterConfig = new call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) call org.apache.lucene.index.IndexWriterConfig.setOpenMode(OpenMode) decl_stmt org.apache.lucene.index.RandomIndexWriter = new decl_stmt org.apache.lucene.document.Document = new call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call org.apache.lucene.document.Document.add(IndexableField) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) call org.apache.lucene.index.RandomIndexWriter.addDocument(Iterable) decl_stmt org.apache.lucene.index.IndexReader = call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.RandomIndexWriter.getReader() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() decl_stmt org.apache.lucene.index.TermsEnum = call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() call org.apache.lucene.index.IndexReader.leaves() for = <= ++ + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() for = + < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call org.apache.lucene.index.TermsEnum.seekExact(BytesRef,TermState) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.IndexReader.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call org.apache.lucene.index.RandomIndexWriter.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close() call Directory.close()