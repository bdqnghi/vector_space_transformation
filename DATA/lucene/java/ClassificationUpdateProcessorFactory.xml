org.apache.solr.update.processor org.apache.lucene.index.LeafReader import org.apache.solr.common.SolrException import org.apache.solr.common.params.SolrParams import org.apache.solr.common.util.NamedList import org.apache.solr.request.SolrQueryRequest import org.apache.solr.response.SolrQueryResponse import org.apache.solr.schema.IndexSchema import class org.apache.solr.update.processor.ClassificationUpdateProcessorFactory super super extends String int String int int String decl String String int String int String String String String int SolrParams String public public final final if != decl_stmt org.apache.solr.common.params.SolrParams = decl_stmt java.lang.String = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() = call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() call SolrParams.get() if == = = = = int String private private decl_stmt java.lang.String = decl_stmt int if != && ! call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() = else = return private private if == throw new + + LeafReader IndexSchema public public decl_stmt org.apache.solr.schema.IndexSchema = decl_stmt org.apache.lucene.index.LeafReader = return new public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public =