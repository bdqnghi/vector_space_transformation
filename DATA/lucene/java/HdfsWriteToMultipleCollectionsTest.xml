org.apache.solr.cloud.hdfs java.io.IOException import java.util.ArrayList import java.util.Collection import java.util.List import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters import org.apache.hadoop.hdfs.MiniDFSCluster import org.apache.lucene.index.IndexWriter import org.apache.lucene.store.NRTCachingDirectory import org.apache.lucene.util.IOUtils import org.apache.lucene.util.LuceneTestCase.Nightly import org.apache.lucene.util.LuceneTestCase.Slow import org.apache.solr.client.solrj.SolrQuery import org.apache.solr.client.solrj.embedded.JettySolrRunner import org.apache.solr.client.solrj.impl.CloudSolrClient import org.apache.solr.cloud.BasicDistributedZkTest import org.apache.solr.cloud.StoppableIndexingThread import org.apache.solr.core.CoreContainer import org.apache.solr.core.HdfsDirectoryFactory import org.apache.solr.core.SolrCore import org.apache.solr.store.blockcache.BlockCache import org.apache.solr.store.blockcache.BlockDirectory import org.apache.solr.store.blockcache.BlockDirectoryCache import org.apache.solr.store.blockcache.Cache import org.apache.solr.util.BadHdfsThreadsFilter import org.apache.solr.util.RefCounted import org.junit.AfterClass import org.junit.BeforeClass import org.junit.Test import class annotation annotation annotation org.apache.solr.cloud.hdfs.HdfsWriteToMultipleCollectionsTest super super extends String MiniDFSCluster String String public static public static throws = = public static public static throws = protected protected throws return protected protected return BlockCache int Cache BlockCache StoppableIndexingThread int BlockDirectory CoreContainer IndexWriter CloudSolrClient decl List decl List decl RefCounted int NRTCachingDirectory long decl Collection public public throws decl_stmt int = + decl_stmt int = + for = < ++ + for = < ++ + decl_stmt java.util.List < = new <> decl_stmt java.util.List < = new <> for = < ++ decl_stmt org.apache.solr.client.solrj.impl.CloudSolrClient = call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) call org.apache.solr.client.solrj.impl.CloudSolrClient.setDefaultCollection(String) + call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.apache.solr.cloud.StoppableIndexingThread = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() call StoppableIndexingThread.start() decl_stmt int = for : += - decl_stmt long = for : call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() call CloudSolrClient.commit() += call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() call CloudSolrClient.query() new decl_stmt org.apache.solr.store.blockcache.BlockCache = for : decl_stmt org.apache.solr.core.CoreContainer = decl_stmt java.util.Collection < = call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() call org.apache.solr.core.CoreContainer.getCores() for : if instanceof decl_stmt org.apache.solr.util.RefCounted < = try decl_stmt org.apache.lucene.index.IndexWriter = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() decl_stmt org.apache.lucene.store.NRTCachingDirectory = call org.apache.lucene.index.IndexWriter.getDirectory() call org.apache.lucene.index.IndexWriter.getDirectory() call org.apache.lucene.index.IndexWriter.getDirectory() call org.apache.lucene.index.IndexWriter.getDirectory() call org.apache.lucene.index.IndexWriter.getDirectory() decl_stmt org.apache.solr.store.blockcache.BlockDirectory = call NRTCachingDirectory.getDelegate() call NRTCachingDirectory.getDelegate() call NRTCachingDirectory.getDelegate() call NRTCachingDirectory.getDelegate() call NRTCachingDirectory.getDelegate() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheReadEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheReadEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheReadEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheReadEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheReadEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheWriteEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheWriteEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheWriteEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheWriteEnabled() call org.apache.solr.store.blockcache.BlockDirectory.isBlockCacheWriteEnabled() decl_stmt org.apache.solr.common.util.Cache = call org.apache.solr.store.blockcache.BlockDirectory.getCache() call org.apache.solr.store.blockcache.BlockDirectory.getCache() call org.apache.solr.store.blockcache.BlockDirectory.getCache() call org.apache.solr.store.blockcache.BlockDirectory.getCache() call org.apache.solr.store.blockcache.BlockDirectory.getCache() instanceof decl_stmt org.apache.solr.store.blockcache.BlockCache = if != if else = finally call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref()