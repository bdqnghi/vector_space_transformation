org.apache.lucene.queries.mlt org.apache.lucene.analysis.Analyzer import org.apache.lucene.index.IndexReader import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.Query import java.io.IOException import java.io.StringReader import java.util.Arrays import java.util.Set import class org.apache.lucene.queries.mlt.MoreLikeThisQuery super super extends int int decl String Analyzer decl Set String int String float decl BooleanQuery BooleanQuery MoreLikeThis public public throws decl_stmt org.apache.lucene.queries.mlt.MoreLikeThis = new call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setFieldNames(String) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setAnalyzer(Analyzer) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinTermFreq(int) if >= call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMinDocFreq(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setMaxQueryTerms(int) call org.apache.lucene.queries.mlt.MoreLikeThis.setStopWords(Set) call org.apache.lucene.queries.mlt.MoreLikeThis.setStopWords(Set) call org.apache.lucene.queries.mlt.MoreLikeThis.setStopWords(Set) call org.apache.lucene.queries.mlt.MoreLikeThis.setStopWords(Set) call org.apache.lucene.queries.mlt.MoreLikeThis.setStopWords(Set) decl_stmt org.apache.lucene.search.BooleanQuery = call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) call org.apache.lucene.queries.mlt.MoreLikeThis.like(Map) new decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call decl BooleanQuery.setDisableCoord() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() call org.apache.lucene.search.BooleanQuery.isCoordDisabled() for : call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call decl BooleanQuery.setMinimumNumberShouldMatch() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() * return call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public public return + public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public < public < return public public < = public public return public public = int int public public decl_stmt int final final = decl_stmt int = = * + == : call Analyzer.hashCode() call Analyzer.hashCode() call Analyzer.hashCode() call Analyzer.hashCode() call Analyzer.hashCode() = * + == : call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + == : call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + = * + = * + = * + = * + = * + == : call decl Set.hashCode() call decl Set.hashCode() call decl Set.hashCode() call decl Set.hashCode() call decl Set.hashCode() return MoreLikeThisQuery public public if == return if ! return if != return decl_stmt org.apache.lucene.queries.mlt.MoreLikeThisQuery = if == if != return else if ! call Analyzer.equals() call Analyzer.equals() call Analyzer.equals() call Analyzer.equals() call Analyzer.equals() return if == if != return else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if == if != return else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if != return if != return if != return if ! return if != return if == if != return else if ! call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() call decl Set.equals() return return