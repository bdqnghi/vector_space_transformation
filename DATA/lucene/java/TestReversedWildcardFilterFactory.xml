org.apache.solr.analysis java.io.IOException import java.util.HashMap import java.util.Map import org.apache.lucene.analysis.Analyzer import org.apache.lucene.analysis.TokenStream import org.apache.lucene.search.AutomatonQuery import org.apache.lucene.search.Query import org.apache.lucene.util.automaton.Automaton import org.apache.lucene.util.automaton.Operations import org.apache.solr.SolrTestCaseJ4 import org.apache.solr.request.SolrQueryRequest import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.IndexSchemaFactory import org.apache.solr.search.QParser import org.apache.solr.search.SolrQueryParser import org.junit.Before import org.junit.BeforeClass import org.junit.Test import static static org.apache.lucene.analysis.BaseTokenStreamTestCase.* import class org.apache.solr.analysis.TestReversedWildcardFilterFactory super super extends decl Map IndexSchema public static public static throws public public throws = String ReversedWildcardFilterFactory TokenStream public public throws decl_stmt java.lang.String = call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.apache.solr.analysis.ReversedWildcardFilterFactory = new decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) new new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() = new = call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) call org.apache.solr.analysis.ReversedWildcardFilterFactory.create(TokenStream) new new Analyzer String TokenStream public public throws decl_stmt org.apache.lucene.analysis.Analyzer = call org.apache.solr.schema.IndexSchema.getIndexAnalyzer() call org.apache.solr.schema.IndexSchema.getIndexAnalyzer() call org.apache.solr.schema.IndexSchema.getIndexAnalyzer() call org.apache.solr.schema.IndexSchema.getIndexAnalyzer() call org.apache.solr.schema.IndexSchema.getIndexAnalyzer() decl_stmt java.lang.String = decl_stmt org.apache.lucene.analysis.TokenStream = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) new new new new = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) new new new new = call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) call org.apache.lucene.analysis.Analyzer.tokenStream(String,String) new new new QParser SolrQueryRequest SolrQueryParser public public throws decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.search.QParser = decl_stmt SolrQueryParser = new call SolrQueryParser.getAllowLeadingWildcard() call SolrQueryParser.getAllowLeadingWildcard() call SolrQueryParser.getAllowLeadingWildcard() call SolrQueryParser.getAllowLeadingWildcard() call SolrQueryParser.getAllowLeadingWildcard() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() call org.apache.solr.request.SolrQueryRequest.close() Query String Automaton private private throws decl_stmt org.apache.lucene.search.Query = if ! instanceof return decl_stmt org.apache.lucene.util.automaton.Automaton = decl_stmt java.lang.String = return call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == public public throws