org.apache.solr.util org.apache.solr.SolrTestCaseJ4 import org.apache.solr.request.SolrQueryRequest import org.apache.solr.search.QParser import org.apache.solr.search.QueryCommand import org.apache.solr.search.QueryResult import org.apache.solr.util.SolrPluginUtils.DisjunctionMaxQueryParser import org.apache.solr.search.SolrIndexSearcher import org.apache.solr.search.DocList import org.apache.solr.common.SolrDocument import org.apache.solr.common.SolrDocumentList import org.apache.lucene.index.Term import org.apache.lucene.search.Query import org.apache.lucene.search.TermQuery import org.apache.lucene.search.PhraseQuery import org.apache.lucene.search.DisjunctionMaxQuery import org.apache.lucene.search.BooleanQuery import org.apache.lucene.search.BooleanClause import org.apache.lucene.search.MatchAllDocsQuery import org.apache.lucene.search.BooleanClause.Occur import org.junit.BeforeClass import org.junit.Test import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import java.util.Map import java.util.HashMap import java.util.Iterator import java.util.Set import java.util.HashSet import class org.apache.solr.util.SolrPluginUtilsTest super super extends public static public static throws QueryResult DocList QueryCommand SolrDocumentList decl Set decl RefCounted SolrIndexSearcher public public throws decl_stmt org.apache.solr.util.RefCounted < = try decl_stmt org.apache.solr.search.SolrIndexSearcher = call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() call decl RefCounted.get() decl_stmt org.apache.solr.search.QueryResult = new decl_stmt org.apache.solr.search.grouping.distributed.command.QueryCommand = new call org.apache.solr.search.grouping.distributed.command.QueryCommand.setQuery(Query) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setQuery(Query) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setQuery(Query) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setQuery(Query) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setQuery(Query) new call org.apache.solr.search.grouping.distributed.command.QueryCommand.setLen(int) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setLen(int) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setLen(int) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setLen(int) call org.apache.solr.search.grouping.distributed.command.QueryCommand.setLen(int) = call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) call org.apache.solr.search.SolrIndexSearcher.search(QueryResult,QueryCommand) decl_stmt org.apache.solr.search.DocList = call org.apache.solr.search.QueryResult.getDocList() call org.apache.solr.search.QueryResult.getDocList() call org.apache.solr.search.QueryResult.getDocList() call org.apache.solr.search.QueryResult.getDocList() call org.apache.solr.search.QueryResult.getDocList() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.apache.solr.common.SolrDocumentList = call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call org.apache.solr.search.DocList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() call SolrDocumentList.size() for : ! ! finally if != call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() call decl RefCounted.decref() public public public public public public decl Map decl Map public public throws decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() - new decl_stmt java.util.Map < = new <> DisjunctionMaxQueryParser Query SolrQueryRequest QParser BooleanQuery decl List Query String public public throws decl_stmt org.apache.lucene.search.Query decl_stmt java.lang.String decl_stmt org.apache.solr.request.SolrQueryRequest = decl_stmt org.apache.solr.search.QParser = decl_stmt DisjunctionMaxQueryParser = new call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call SolrQueryRequest.getSchema() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() call DisjunctionMaxQueryParser.addAlias() = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt java.util.List < = new <> call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.search.Query = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = = call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() call DisjunctionMaxQueryParser.parse() + + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof decl_stmt org.apache.lucene.search.BooleanQuery = decl_stmt java.util.List < = new <> call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() call org.apache.lucene.search.BooleanQuery.clauses() + call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt org.apache.lucene.search.Query = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() + + call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() call Query.getClass() instanceof + int private static private static decl_stmt int = while ++ return decl BooleanQuery public public decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() decl BooleanQuery decl Builder public public decl_stmt org.apache.lucene.util.fst.Builder = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() = new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new new decl_stmt org.apache.lucene.search.DisjunctionMaxQuery = new new new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() = new new new new new call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() call decl BooleanQuery.add() new new call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() call decl BooleanQuery.build() public public return public public return public public return public public return