org.apache.solr.search org.apache.lucene.search.FieldDoc import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.util.BytesRef import org.apache.lucene.util.BytesRefBuilder import org.apache.solr.common.SolrException import org.apache.solr.common.SolrException.ErrorCode import static static org.apache.solr.common.params.CursorMarkParams.* import org.apache.solr.common.util.Base64 import org.apache.solr.common.util.JavaBinCodec import org.apache.solr.schema.IndexSchema import org.apache.solr.schema.FieldType import org.apache.solr.schema.SchemaField import java.util.List import java.util.ArrayList import java.io.ByteArrayOutputStream import java.io.ByteArrayInputStream import class org.apache.solr.search.CursorMark decl List SortSpec CursorMark public public < decl_stmt org.apache.solr.search.CursorMark final final = new call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) call org.apache.solr.search.CursorMark.setSortValues(List) return public public < if == = else assert == call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() = new <> public < public < return == : new <> public public return boolean Object FieldType BytesRef decl List decl List SortField decl byte ByteArrayInputStream decl SortField SchemaField public public final final if = return decl_stmt org.apache.lucene.search.SortField final final final = call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() call org.apache.solr.search.SortSpec.getSort() decl_stmt java.util.List final final final < = call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() decl_stmt java.util.List < = try decl_stmt byte final final final = decl_stmt ByteArrayInputStream = new try = < new decl_stmt boolean = for : if instanceof || instanceof || instanceof = break if call ByteArrayInputStream.reset() call ByteArrayInputStream.reset() call ByteArrayInputStream.reset() call ByteArrayInputStream.reset() call ByteArrayInputStream.reset() = < new finally call ByteArrayInputStream.close() call ByteArrayInputStream.close() call ByteArrayInputStream.close() call ByteArrayInputStream.close() call ByteArrayInputStream.close() catch throw new + + + + + + + + + assert != : if != call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() throw new + + = new <> decl_stmt org.apache.lucene.util.BytesRef final final = new for = < ++ decl_stmt org.apache.lucene.search.SortField = decl_stmt org.apache.solr.schema.SchemaField = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if != decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() = call org.apache.solr.schema.FieldType.unmarshalSortValue(Object) call org.apache.solr.schema.FieldType.unmarshalSortValue(Object) call org.apache.solr.schema.FieldType.unmarshalSortValue(Object) call org.apache.solr.schema.FieldType.unmarshalSortValue(Object) call org.apache.solr.schema.FieldType.unmarshalSortValue(Object) decl List Object decl byte decl ArrayList FieldType SchemaField ByteArrayOutputStream public public if == return decl_stmt java.util.List final final final < = call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() call org.apache.solr.search.SortSpec.getSchemaFields() decl_stmt java.util.ArrayList final final final < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() + for = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() ++ decl_stmt org.apache.solr.schema.SchemaField = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.lang.Object = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() if != decl_stmt org.apache.solr.schema.FieldType = call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() call org.apache.solr.schema.SchemaField.getType() = call org.apache.solr.schema.FieldType.marshalSortValue(Object) call org.apache.solr.schema.FieldType.marshalSortValue(Object) call org.apache.solr.schema.FieldType.marshalSortValue(Object) call org.apache.solr.schema.FieldType.marshalSortValue(Object) call org.apache.solr.schema.FieldType.marshalSortValue(Object) call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() call decl ArrayList.add() try decl_stmt java.io.ByteArrayOutputStream = new try new decl_stmt byte = call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() return finally call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() call java.io.ByteArrayOutputStream.close() catch throw new public public if == return return new call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray()