org.apache.solr.util org.apache.lucene.util.LuceneTestCase import org.apache.solr.update.MemOutputStream import java.util.Random import class org.apache.solr.util.TestFastOutputStream super super extends Random decl byte public public throws = = new for = < ++ = byte call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) for = < ++ int int int long int int int int MemOutputStream public public throws decl_stmt int = call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextBoolean() call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) : call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + decl_stmt org.apache.solr.update.MemOutputStream = new new decl_stmt int = decl_stmt long = decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) + for = < ++ decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) decl_stmt int = < call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) - : call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() = += decl_stmt int = call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call java.util.Random.nextInt(int) call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() call MemOutputStream.write() = += call MemOutputStream.close() call MemOutputStream.close() call MemOutputStream.close() call MemOutputStream.close() call MemOutputStream.close() decl_stmt int = for : = call MemOutputStream.written() call MemOutputStream.written() call MemOutputStream.written() call MemOutputStream.written() call MemOutputStream.written() call MemOutputStream.size() call MemOutputStream.size() call MemOutputStream.size() call MemOutputStream.size() call MemOutputStream.size() public public for = < + ++ = * + return