org.apache.solr.hadoop com.google.common.io.Files import org.apache.commons.io.FileUtils import org.apache.solr.cloud.ZkController import org.apache.solr.common.SolrException import org.apache.solr.common.cloud.Aliases import org.apache.solr.common.cloud.ClusterState import org.apache.solr.common.cloud.DocCollection import org.apache.solr.common.cloud.Replica import org.apache.solr.common.cloud.Slice import org.apache.solr.common.cloud.SolrZkClient import org.apache.solr.common.cloud.ZkConfigManager import org.apache.solr.common.cloud.ZkCoreNodeProps import org.apache.solr.common.cloud.ZkNodeProps import org.apache.solr.common.cloud.ZkStateReader import org.apache.solr.common.util.StrUtils import org.apache.zookeeper.KeeperException import org.slf4j.Logger import org.slf4j.LoggerFactory import java.io.File import java.io.IOException import java.lang.invoke.MethodHandles import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.Comparator import java.util.List import class org.apache.solr.hadoop.ZooKeeperInspector Logger decl List decl Collection DocCollection decl List decl List ZkCoreNodeProps public < < public < < decl_stmt org.apache.solr.common.cloud.DocCollection = decl_stmt java.util.List < = call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() call org.apache.solr.common.cloud.DocCollection.getSlices() decl_stmt java.util.List < < = new <> call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : if == throw new + decl_stmt java.util.Collection < = decl_stmt java.util.List < = new <> call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() for : decl_stmt org.apache.solr.common.cloud.ZkCoreNodeProps = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call org.apache.solr.common.cloud.ZkCoreNodeProps.getCoreUrl() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return SolrZkClient ZkStateReader public public if == throw new decl_stmt org.apache.solr.common.cloud.SolrZkClient = try decl_stmt org.apache.solr.common.cloud.ZkStateReader = new try = call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() call org.apache.solr.common.cloud.ZkStateReader.createClusterStateWatchersAndUpdate() catch throw new + try return call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() call org.apache.solr.common.cloud.ZkStateReader.getClusterState() catch throw new + + + finally call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() call org.apache.solr.common.cloud.SolrZkClient.close() SolrZkClient public public if == throw new decl_stmt org.apache.solr.common.cloud.SolrZkClient try = new catch throw new + return decl List Comparator public < public < < decl_stmt java.util.List < = new decl_stmt java.util.Comparator = new return call Comparator.compare() call Comparator.compare() call Comparator.compare() call Comparator.compare() call Comparator.compare() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() call Logger.trace() return String decl byte String ZkNodeProps public public throws if == throw new decl_stmt java.lang.String = = decl_stmt java.lang.String = + + if call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() call Logger.isInfoEnabled() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + decl_stmt byte = if != decl_stmt org.apache.solr.common.cloud.ZkNodeProps = = call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) call org.apache.solr.common.cloud.ZkNodeProps.getStr(String) if != && ! + + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + throw new + return String decl byte decl List Aliases private private throws decl_stmt byte = decl_stmt org.apache.solr.common.cloud.Aliases = decl_stmt java.lang.String = call org.apache.solr.common.cloud.Aliases.getCollectionAlias(String) call org.apache.solr.common.cloud.Aliases.getCollectionAlias(String) call org.apache.solr.common.cloud.Aliases.getCollectionAlias(String) call org.apache.solr.common.cloud.Aliases.getCollectionAlias(String) call org.apache.solr.common.cloud.Aliases.getCollectionAlias(String) if != decl_stmt java.util.List < = if call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() > throw new = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() return File ZkConfigManager File public public throws decl_stmt File = call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() call File.deleteOnExit() decl_stmt org.apache.solr.common.cloud.ZkConfigManager = new call org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(String,Path) call org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(String,Path) call org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(String,Path) call org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(String,Path) call org.apache.solr.common.cloud.ZkConfigManager.downloadConfigDir(String,Path) call File.toPath() call File.toPath() call File.toPath() call File.toPath() call File.toPath() decl_stmt File = new if ! call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() call File.isDirectory() = new call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() = call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() call File.getParentFile() new return File private private throws decl_stmt File = new if ! call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() throw new + call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() if ! call File.isFile() call File.isFile() call File.isFile() call File.isFile() call File.isFile() throw new + call File.getName() call File.getName() call File.getName() call File.getName() call File.getName() if ! call File.canRead() call File.canRead() call File.canRead() call File.canRead() call File.canRead() throw new +