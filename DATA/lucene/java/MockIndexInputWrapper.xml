org.apache.lucene.store java.io.Closeable import java.io.IOException import java.util.Map import java.util.Set import class org.apache.lucene.store.MockIndexInputWrapper super super extends boolean boolean String MockDirectoryWrapper IndexInput public public throws if call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() call IndexInput.close() return = try = assert != if ! call org.apache.lucene.store.MockDirectoryWrapper.removeIndexInput(IndexInput,String) call org.apache.lucene.store.MockDirectoryWrapper.removeIndexInput(IndexInput,String) call org.apache.lucene.store.MockDirectoryWrapper.removeIndexInput(IndexInput,String) call org.apache.lucene.store.MockDirectoryWrapper.removeIndexInput(IndexInput,String) call org.apache.lucene.store.MockDirectoryWrapper.removeIndexInput(IndexInput,String) call org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException() call org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException() call org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException() call org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException() call org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException() private private if throw new MockIndexInputWrapper IndexInput public public if new + call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() decl_stmt org.apache.lucene.store.IndexInput = call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() call org.apache.lucene.store.IndexInput.clone() decl_stmt org.apache.lucene.store.MockIndexInputWrapper = new = return MockIndexInputWrapper IndexInput public public throws if new + call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() call MockDirectoryWrapper.inputCloneCount() decl_stmt org.apache.lucene.store.IndexInput = call IndexInput.slice() call IndexInput.slice() call IndexInput.slice() call IndexInput.slice() call IndexInput.slice() decl_stmt org.apache.lucene.store.MockIndexInputWrapper = new = return public public return call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() call IndexInput.getFilePointer() public public throws call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() call IndexInput.seek() public public return call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() call IndexInput.length() public public throws return call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) call org.apache.lucene.store.IndexInput.readByte(long) public public throws call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() public public throws call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() call IndexInput.readBytes() public public throws return call org.apache.lucene.store.IndexInput.readShort(long) call org.apache.lucene.store.IndexInput.readShort(long) call org.apache.lucene.store.IndexInput.readShort(long) call org.apache.lucene.store.IndexInput.readShort(long) call org.apache.lucene.store.IndexInput.readShort(long) public public throws return call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) call org.apache.lucene.store.IndexInput.readInt(long) public public throws return call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) call org.apache.lucene.store.IndexInput.readLong(long) public public throws return call IndexInput.readString() call IndexInput.readString() call IndexInput.readString() call IndexInput.readString() call IndexInput.readString() public < public < throws return call IndexInput.readStringStringMap() call IndexInput.readStringStringMap() call IndexInput.readStringStringMap() call IndexInput.readStringStringMap() call IndexInput.readStringStringMap() public public throws return call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() call IndexInput.readVInt() public public throws return call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() call IndexInput.readVLong() public public throws return call IndexInput.readZInt() call IndexInput.readZInt() call IndexInput.readZInt() call IndexInput.readZInt() call IndexInput.readZInt() public public throws return call IndexInput.readZLong() call IndexInput.readZLong() call IndexInput.readZLong() call IndexInput.readZLong() call IndexInput.readZLong() public < public < throws return call IndexInput.readStringSet() call IndexInput.readStringSet() call IndexInput.readStringSet() call IndexInput.readStringSet() call IndexInput.readStringSet() public public throws public public return + +