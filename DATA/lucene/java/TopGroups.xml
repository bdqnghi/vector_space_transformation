org.apache.lucene.search.grouping org.apache.lucene.search.ScoreDoc import org.apache.lucene.search.Sort import org.apache.lucene.search.SortField import org.apache.lucene.search.TopDocs import org.apache.lucene.search.TopFieldDocs import java.io.IOException import class float decl SortField int int decl SortField Integer decl TopDocs TopDocs double float int float decl GroupDocs decl TopGroups int int decl TopGroups float decl ScoreDoc Integer int T public static < < public static < < < throws if == return decl_stmt int = decl_stmt int = decl_stmt java.lang.Integer = decl_stmt int final final = for < : if != throw new += += if != if == = += if == return decl_stmt int = decl_stmt int = decl_stmt java.lang.Integer = decl_stmt int final final = for < : if != throw new += += if != if == = += decl_stmt org.apache.lucene.search.TopDocs final final final if = new else = new decl_stmt float = for = < ++ decl_stmt T final final = decl_stmt float = decl_stmt int = decl_stmt double = for = < ++ decl_stmt org.apache.lucene.search.grouping.TopGroups final final final < = decl_stmt GroupDocs final final final < = if == if != throw new else if ! call float.equals() call float.equals() call float.equals() call float.equals() call float.equals() throw new if = new else = new = += += decl_stmt org.apache.lucene.search.TopDocs final final if = + else = + decl_stmt org.apache.lucene.search.ScoreDoc final final final if == = else if >= = new else = new - - decl_stmt float final final switch case = break case if > = / else = break case = float break default: throw new + = new <> = if != decl_stmt org.apache.lucene.search.grouping.TopGroups < = new <> call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort() return new <> else return new <> call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort() call decl SortField.getSort()