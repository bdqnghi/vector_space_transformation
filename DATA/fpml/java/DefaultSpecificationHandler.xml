com.handcoded.meta java.util.Vector import org.xml.sax.Attributes import org.xml.sax.helpers.DefaultHandler import class com.handcoded.meta.DefaultSpecificationHandler super super extends String String StringBuffer Specification String String String String String decl Vector public public if = = = call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() else if = = = = = call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() call decl Vector.clear() call java.lang.StringBuffer.setLength(int) call java.lang.StringBuffer.setLength(int) call java.lang.StringBuffer.setLength(int) call java.lang.StringBuffer.setLength(int) call java.lang.StringBuffer.setLength(int) public public if = new call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else if else if public public call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) protected protected new call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() decl String protected protected decl_stmt java.lang.String = new call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() new