com.handcoded.xml java.util.Enumeration import java.util.Hashtable import java.util.Vector import org.w3c.dom.Attr import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.NamedNodeMap import org.w3c.dom.Node import org.w3c.dom.NodeList import org.w3c.dom.TypeInfo import class com.handcoded.xml.NodeIndex decl Hashtable decl Hashtable decl Hashtable decl Hashtable decl Hashtable Document NodeList decl Hashtable public public return public public return ! call decl Hashtable.isEmpty() call decl Hashtable.isEmpty() call decl Hashtable.isEmpty() call decl Hashtable.isEmpty() call decl Hashtable.isEmpty() NodeList public public final final decl_stmt NodeList = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() return != : MutableNodeList public public final final final decl_stmt com.handcoded.xml.MutableNodeList = new for = < ++ call com.handcoded.xml.MutableNodeList.addAll(NodeList) call com.handcoded.xml.MutableNodeList.addAll(NodeList) call com.handcoded.xml.MutableNodeList.addAll(NodeList) call com.handcoded.xml.MutableNodeList.addAll(NodeList) call com.handcoded.xml.MutableNodeList.addAll(NodeList) return TypeInfo TypeInfo decl Vector Element decl Enumeration MutableNodeList String NodeList decl Vector public public final final final final decl_stmt java.util.Vector < = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() if == call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() = new < decl_stmt java.util.Enumeration < = call decl Hashtable.keys() call decl Hashtable.keys() call decl Hashtable.keys() call decl Hashtable.keys() call decl Hashtable.keys() while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.util.Vector < = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() for = < call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() ++ decl_stmt TypeInfo = call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() if call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() || call TypeInfo.isDerivedFrom() call TypeInfo.isDerivedFrom() call TypeInfo.isDerivedFrom() call TypeInfo.isDerivedFrom() call TypeInfo.isDerivedFrom() | call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() decl_stmt com.handcoded.xml.MutableNodeList = new for = < call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() ++ decl_stmt TypeInfo = call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() decl_stmt NodeList = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt TypeInfo = call Element.getSchemaTypeInfo() call Element.getSchemaTypeInfo() call Element.getSchemaTypeInfo() call Element.getSchemaTypeInfo() call Element.getSchemaTypeInfo() if call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() && call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) return public public final final return call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() NodeList public public final final decl_stmt NodeList = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() return != : TypeInfo int TypeInfo String NamedNodeMap MutableNodeList Attr decl Vector Attr private private switch case break case decl_stmt java.lang.String = decl_stmt com.handcoded.xml.MutableNodeList = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() if == call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() = new call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) decl_stmt TypeInfo = if != && = call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() call TypeInfo.getTypeName() != decl_stmt java.util.Vector < = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() decl_stmt int if == call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() = new < for = < call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() ++ decl_stmt TypeInfo = call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() call decl Vector.elementAt() if call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() call TypeInfo.getTypeNamespace() break if == call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() if == call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() = new call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) decl_stmt Attr = if != call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call Attr.getValue() call Attr.getValue() call Attr.getValue() call Attr.getValue() call Attr.getValue() decl_stmt NamedNodeMap = for = < call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() ++ decl_stmt Attr = call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() = call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call decl Hashtable.get() call Attr.getName() call Attr.getName() call Attr.getName() call Attr.getName() call Attr.getName() if == call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call decl Hashtable.put() call Attr.getName() call Attr.getName() call Attr.getName() call Attr.getName() call Attr.getName() = new call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) call com.handcoded.xml.MutableNodeList.add(Node) for = != if == = break