com.handcoded.fpml.validation java.util.Vector import org.w3c.dom.Element import org.w3c.dom.NodeList import com.handcoded.finance.Calendar import com.handcoded.finance.Date import com.handcoded.finance.DateRoll import com.handcoded.finance.Interval import com.handcoded.finance.Period import com.handcoded.validation.Precondition import com.handcoded.validation.Rule import com.handcoded.validation.RuleSet import com.handcoded.validation.ValidationErrorHandler import com.handcoded.xml.DOM import com.handcoded.xml.NodeIndex import com.handcoded.xml.XPath import class com.handcoded.fpml.validation.FxRules super super extends Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Precondition Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Precondition Precondition Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule RuleSet Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Rule Precondition Rule Rule Rule Rule Rule public public if return return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if ! != && == continue = return public public if return return Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == continue if continue = return public public if return return Element Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == continue if || = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue + + + + = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue + + + + = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return & return Element Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || continue = return public public if return return Element Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || continue = return public public if return & return decl Date NodeList int boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = decl_stmt int = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() decl_stmt com.handcoded.finance.Date = new for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() for = < - ++ for = + < ++ if call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = = return public public if return return decl Date NodeList int boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = decl_stmt int = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() decl_stmt com.handcoded.finance.Date = new for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() for = < - ++ for = + < ++ if call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = = return public public if return & return decl Date Element Element Element Element NodeList boolean Element Date boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == continue decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue decl_stmt com.handcoded.finance.Date = decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt com.handcoded.finance.Date = decl_stmt boolean = for = < ++ if = break if ! + + = = return public public if return return decl Date Element Element Element Element NodeList boolean Element Date boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == continue decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue decl_stmt com.handcoded.finance.Date = decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt com.handcoded.finance.Date = decl_stmt boolean = for = < ++ if = break if ! + + = = return public public if return & return decl Date NodeList Element int boolean Element Date boolean NodeList private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = decl_stmt int = != call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() : if == continue decl_stmt com.handcoded.finance.Date = new for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt com.handcoded.finance.Date = decl_stmt boolean = for = < ++ if = break if ! + + = = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return Element Element boolean Element Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue if && continue = return public public if return return Element Element Element Element Element Element Element Element Element boolean private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if && && ! && ! || && ! && ! || continue = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return & return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || != continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || != continue = return public public if return & return & Element Element boolean Element Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue if && continue = return public public if return return Element Element Element Element Element Element boolean Element Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != && != || != && != if decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != && != && && && && continue else if && continue = return public public if return & return & Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return NodeList boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = if >= continue = return public public if return & return Element NodeList boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = if != continue decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return return & Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return return & Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if ! != && == continue = return public public if return return & Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == continue if continue = return public public if return return Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == continue if continue = return public public if return return Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == continue if ! && ! continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != && != && continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == continue if continue = return public public if return return Element Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = return public public if return return Element Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = return public public if return return Element Element Element Element Element boolean Element NodeList private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = return public public if return return Element Element Element Element Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = return public public if return return Element Element Element Element Element boolean Element NodeList private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != if != if continue = if != if continue = if != if continue = return public public if return & return Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || continue = return public public if return & return decl Date NodeList int boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = decl_stmt int = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() decl_stmt com.handcoded.finance.Date = new for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() for = < - ++ for = + < ++ if call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = = return public public if return & return Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || ! continue = return public public if return & return Element Element boolean Element Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue if && continue = return public public if return & return Element Element boolean Element Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue if && continue = return public public if return return Element Element Element Element Element Element Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || == || == continue if call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if != && != && != && != && call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() && call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() && call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() && call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() continue else if && continue = return public public if return return boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || || continue = return public public if return return boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || || continue = return public public if return return NodeList boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt NodeList = decl_stmt javax.swing.text.Element = if call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() == || call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() > && != continue = return public public if return return & Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() || continue = return public public if return return & Element Element boolean Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return & Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || != continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public public if return return Element boolean Element Element private private decl_stmt boolean = for = < ++ decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = decl_stmt javax.swing.text.Element = if == || == || continue = return public static public static return Date decl Vector decl Date Date protected static protected static final final final final final final final final final final decl_stmt com.handcoded.finance.Date = decl_stmt java.util.Vector < = new < decl_stmt com.handcoded.finance.Date while decl_stmt com.handcoded.finance.Date if != = else = if ! call decl Vector.contains() call decl Vector.contains() call decl Vector.contains() call decl Vector.contains() call decl Vector.contains() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() call decl Vector.add() if == if = else break else = call Date.plus() call Date.plus() call Date.plus() call Date.plus() call Date.plus() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() = new call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() return