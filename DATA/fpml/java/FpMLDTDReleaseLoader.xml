com.handcoded.fpml.meta java.util.Hashtable import org.w3c.dom.Element import org.w3c.dom.NodeList import com.handcoded.fpml.schemes.SchemeCollection import com.handcoded.meta.DefaultDTDReleaseLoader import com.handcoded.meta.Specification import com.handcoded.xml.Types import com.handcoded.xml.XPath import class com.handcoded.fpml.meta.FpMLDTDReleaseLoader super super extends public public < new Element decl String NodeList decl String protected protected decl_stmt NodeList = decl_stmt java.lang.String = new call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = = = decl_stmt java.lang.String = new call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt javax.swing.text.Element = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() = = return new SchemeCollection NodeList protected protected decl_stmt com.handcoded.fpml.schemes.SchemeCollection = new decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ call com.handcoded.fpml.schemes.SchemeCollection.parse(String) call com.handcoded.fpml.schemes.SchemeCollection.parse(String) call com.handcoded.fpml.schemes.SchemeCollection.parse(String) call com.handcoded.fpml.schemes.SchemeCollection.parse(String) call com.handcoded.fpml.schemes.SchemeCollection.parse(String) call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() return