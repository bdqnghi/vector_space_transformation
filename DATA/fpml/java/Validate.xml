demo.com.handcoded.fpml java.io.File import java.util.logging.Level import java.util.logging.Logger import org.w3c.dom.Document import org.w3c.dom.Node import org.xml.sax.SAXParseException import com.handcoded.fpml.FpMLUtility import com.handcoded.fpml.validation.AllRules import com.handcoded.fpml.validation.FpMLRules import com.handcoded.framework.Option import com.handcoded.validation.RuleSet import com.handcoded.xml.XPath import com.handcoded.xml.XmlUtility import class demo.com.handcoded.fpml.Validate super super extends Option Option Option int boolean Option Option Logger Option public static public static new protected protected if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() = call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() if <= call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) = call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() if == call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() protected protected if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() int long File RuleSet ValidationErrorHandler boolean long decl String int ParserErrorHandler Document protected protected decl_stmt com.handcoded.validation.RuleSet = call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() : decl_stmt java.lang.String = decl_stmt ParserErrorHandler = new decl_stmt com.handcoded.validation.ValidationErrorHandler = new decl_stmt boolean = call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() decl_stmt int = = try decl_stmt long = while -- > for = < ++ decl_stmt int = * : if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() + + else + decl_stmt File = new if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() decl_stmt javax.swing.text.Document = else if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() ++ decl_stmt long = if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() + + + - + + * / - + + call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() + else + + + - + + * / - + + call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() call com.handcoded.validation.RuleSet.size() + catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) protected protected return public public public public public public public public if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() + + + + + != + + : + + + else if != + + + + + + + else + + + +