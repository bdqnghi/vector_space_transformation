demo.com.handcoded.fpml java.io.File import java.io.FileFilter import java.util.Enumeration import java.util.Vector import java.util.logging.Logger import org.xml.sax.SAXException import com.handcoded.fpml.Releases import com.handcoded.framework.Option import com.handcoded.meta.Release import com.handcoded.meta.SchemaRelease import com.handcoded.xml.XmlUtility import com.handcoded.xml.resolver.Catalog import com.handcoded.xml.resolver.CatalogManager import class demo.com.handcoded.fpml.Application super super extends Logger Option Catalog Release String decl Enumeration protected protected decl_stmt java.lang.String = if call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() call com.handcoded.framework.Option.isPresent() if call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() != = call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() call com.handcoded.framework.Option.getValue() else call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) try catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) decl_stmt java.util.Enumeration < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt com.handcoded.meta.Release = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() if instanceof protected final protected final return decl String decl Vector protected protected decl_stmt java.util.Vector < = new < for = < ++ new decl_stmt java.lang.String = new call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.size() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() call decl Vector.copyInto() return decl File private private < if decl_stmt File = new public public return || && for = < ++ else public public return || &&