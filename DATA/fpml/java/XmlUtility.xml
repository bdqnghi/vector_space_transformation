com.handcoded.xml java.io.File import java.io.IOException import java.io.PrintStream import java.io.PrintWriter import java.util.logging.Level import java.util.logging.Logger import javax.xml.parsers.ParserConfigurationException import javax.xml.transform.dom.DOMResult import javax.xml.transform.dom.DOMSource import javax.xml.validation.Schema import javax.xml.validation.Validator import org.w3c.dom.Attr import org.w3c.dom.CDATASection import org.w3c.dom.Comment import org.w3c.dom.Document import org.w3c.dom.DocumentType import org.w3c.dom.Element import org.w3c.dom.NamedNodeMap import org.w3c.dom.Node import org.w3c.dom.Text import org.xml.sax.EntityResolver import org.xml.sax.ErrorHandler import org.xml.sax.SAXException import org.xml.sax.SAXParseException import org.xml.sax.InputSource import com.handcoded.xml.parser.DOMParser import com.handcoded.xml.resolver.Catalog import class com.handcoded.xml.XmlUtility int int Catalog SchemaSet ErrorHandler Logger int public static public static return public static public static = public static public static return public static public static final final return public static public static final final return Document public static public static final final decl_stmt javax.swing.text.Document = try = new catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return public static public static return public static public static return Document public static public static decl_stmt javax.swing.text.Document = try = new catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return public static public static return public static public static return Document public static public static decl_stmt javax.swing.text.Document = try = new catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return Document DOMResult Validator public static public static final final decl_stmt javax.swing.text.Document = if != if = == return if call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() == try decl_stmt DOMResult = new decl_stmt com.handcoded.validation.Validator = call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) new return call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) try = new catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return Document DOMResult Validator public static public static decl_stmt javax.swing.text.Document = if != if = == return if call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() == try decl_stmt DOMResult = new decl_stmt com.handcoded.validation.Validator = call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call Validator.setErrorHandler() call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) call sun.security.validator.Validator.validate(X509Certificate,Collection,Object) new return call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) try = new catch call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) call java.util.logging.Logger.severe(String) catch call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) return public static public static final final public static public static final final public static public static final final public public public public public public Attr Text CDATASection Element Comment NamedNodeMap Document DocumentType private static private static final final if != for = < ++ switch case decl_stmt javax.swing.text.Document = call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() + call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() + break case decl_stmt DocumentType = + + call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() + + + call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() + + + call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() + break case decl_stmt javax.swing.text.Element = + + call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() + + + call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() + decl_stmt NamedNodeMap = call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() for = < call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() ++ call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() + for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != + = break case decl_stmt Attr = + + call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() + + + call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() + + + call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() + + + call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() + break case decl_stmt Text = + call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() + for = call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() != + = break case decl_stmt CDATASection = + call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() + break case decl_stmt Comment = + call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() + break default: + + break Attr Text CDATASection Element Comment NamedNodeMap Document DocumentType private static private static final final if != for = < ++ switch case decl_stmt javax.swing.text.Document = call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() call Document.getDoctype() + call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() + break case decl_stmt DocumentType = + + call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() call DocumentType.getName() + + + call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() call DocumentType.getPublicId() + + + call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() call DocumentType.getSystemId() + break case decl_stmt javax.swing.text.Element = + + call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() call Element.getNamespaceURI() + + + call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() call Element.getLocalName() + decl_stmt NamedNodeMap = call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() call javax.swing.text.Element.getAttributes() for = < call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() call NamedNodeMap.getLength() ++ call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() call NamedNodeMap.item() + for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != + = break case decl_stmt Attr = + + call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() call Attr.getNamespaceURI() + + + call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() call Attr.getPrefix() + + + call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() call Attr.getLocalName() + + + call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() call Attr.getNodeValue() + break case decl_stmt Text = + call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() call Text.getNodeValue() + for = call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() call Text.getFirstChild() != + = break case decl_stmt CDATASection = + call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() call CDATASection.getNodeValue() + break case decl_stmt Comment = + call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() call Comment.getNodeValue() + break default: + + break private static private static final final if != return + + else return