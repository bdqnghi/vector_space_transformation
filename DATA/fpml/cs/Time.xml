HandCoded.Finance System using System.Text using class attribute HandCoded.Finance.Time super super Temporal super IComparable DateValue TimeValue Time Time return return return int decimal int int int int int public static public static decl_stmt int = decl_stmt int = while if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break decl_stmt int = if >= || ! ++ break if >= || ! ++ break if < && == do ++ < && decl_stmt decimal = - if < && == return new if < && == ++ if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - * if >= || ++ != break if >= || ! break += ++ - * if >= || ! break += ++ - return new if < && == ++ if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - * if >= || ++ != break if >= || ! break += ++ - * if >= || ! break += ++ - return new - return new throw new public override public override if != return call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() ^ else return call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() public override public override return is && as public public if == && == return call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) else if != && != && return call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) call HandCoded.Finance.TimeValue.Equals(TimeValue) else return public public return as public public if == && == return call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) else if != && != && return call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) call HandCoded.Finance.TimeValue.CompareTo(TimeValue) else return public override public override if != return call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() + else return call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() internal internal return new