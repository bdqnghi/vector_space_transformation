HandCoded.Finance System using System.Collections.Generic using System.Text using class attribute HandCoded.Finance.DateTime super super TemporalDate super IImmutableDate super IImmutableTime super IComparable DateTime TimeValue DateTime DateValue return return return return return return return return return return int decimal int int int int int int int int public static public static decl_stmt int = decl_stmt int = while if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - * if >= || ! break += ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break decl_stmt int = if >= || ! ++ break if >= || ! ++ break if < && == do ++ < && decl_stmt decimal = - if < && == return new if < && == ++ if >= && ! break decl_stmt int = ++ - * if >= && ! break += ++ - * if >= && ++ != break if >= && ! break = ++ - * if >= && ! break += ++ - return new if < && == ++ if >= && ! break decl_stmt int = ++ - * if >= && ! break += ++ - * if >= && ++ != break if >= && ! break = ++ - * if >= && ! break += ++ - return new - return new throw new public public return new public public return new int int int int int int public public if != && return decl_stmt int = != : decl_stmt int = decl_stmt int = decl_stmt int = decl_stmt int = - / decl_stmt int = - while < += if -- < = if -- < if -- < = -- = while < += if -- < if -- < = -- = while > -= if ++ > = if ++ > if ++ > = ++ = while > -= if ++ > if ++ > = ++ = return new public static public static return public static public static return public static public static return public override public override if != return call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() ^ call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() ^ else return call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() ^ call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() call HandCoded.Finance.TimeValue.GetHashCode() public override public override return is && as DateTime DateTime public public decl_stmt HandCoded.Finance.DateTime = decl_stmt HandCoded.Finance.DateTime = return call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() && call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() public public return as DateTime DateTime int public public decl_stmt HandCoded.Finance.DateTime = decl_stmt HandCoded.Finance.DateTime = decl_stmt int = call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() call DateTime.dateValue() if != return return call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() call DateTime.timeValue() public override public override if != return call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() + + call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() + else return call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() + + call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString() call HandCoded.Finance.TimeValue.ToString()