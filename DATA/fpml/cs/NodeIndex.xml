HandCoded.Xml System using System.Collections.Generic using System.Xml using System.Xml.Schema using class HandCoded.Xml.NodeIndex decl Dictionary decl Dictionary decl Dictionary decl Dictionary decl Dictionary XmlDocument decl Dictionary return return != public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : MutableNodeList public public decl_stmt HandCoded.Xml.MutableNodeList = new foreach in if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call HandCoded.Xml.MutableNodeList.AddAll(XmlNodeList) call HandCoded.Xml.MutableNodeList.AddAll(XmlNodeList) call HandCoded.Xml.MutableNodeList.AddAll(XmlNodeList) call HandCoded.Xml.MutableNodeList.AddAll(XmlNodeList) call HandCoded.Xml.MutableNodeList.AddAll(XmlNodeList) return decl List XmlSchemaType MutableNodeList decl List public public decl_stmt System.Collections.Generic.List < if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() = new < foreach in decl_stmt System.Collections.Generic.List < = foreach in if || new call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else = decl_stmt HandCoded.Xml.MutableNodeList = new foreach in if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() foreach in decl_stmt System.Xml.Schema.XmlSchemaType = if call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) return public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : XmlSchemaType int XmlSchemaType string MutableNodeList XmlAttribute decl List private private switch case as break case decl_stmt string = as decl_stmt HandCoded.Xml.MutableNodeList if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() = new else = call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) decl_stmt System.Xml.Schema.XmlSchemaType = as if != && = != decl_stmt System.Collections.Generic.List < decl_stmt int if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() = new < else = for = < ++ decl_stmt System.Xml.Schema.XmlSchemaType = if call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() call XmlSchemaType.QualifiedName() break if == call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() = new else = call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) decl_stmt System.Xml.XmlAttribute = as if != = as foreach in as if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() = new else = call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) call HandCoded.Xml.MutableNodeList.Add(XmlNode) foreach in as if == break private private while = != if return return