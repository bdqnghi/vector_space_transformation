Validate System using System.Collections using System.Configuration using System.IO using System.Xml using System.Xml.Schema using HandCoded.FpML using HandCoded.FpML.Validation using HandCoded.Framework using HandCoded.Meta using HandCoded.Validation using HandCoded.Xml using HandCoded.Xml.Resolver using log4net using log4net.Config using class Validate.Validate super super Application Option Option int ILog bool Option bool Option Option Option static static new string protected override protected override decl_stmt string = if if != = else call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() if = if <= call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() = = if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() if try = catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() foreach in if is as protected override protected override if ArrayList int DateTime string FileStream RuleSet Random DateTime String int DirectoryInfo TimeSpan protected override protected override decl_stmt System.IO.DirectoryInfo = new decl_stmt System.Collections.ArrayList = new try for = < ++ decl_stmt System.String = call System.IO.DirectoryInfo.ToString() call System.IO.DirectoryInfo.ToString() call System.IO.DirectoryInfo.ToString() call System.IO.DirectoryInfo.ToString() call System.IO.DirectoryInfo.ToString() decl_stmt string = while call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() = call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.LastIndexOf(String,int) call System.String.LastIndexOf(String,int) call System.String.LastIndexOf(String,int) call System.String.LastIndexOf(String,int) call System.String.LastIndexOf(String,int) = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() catch call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() = return decl_stmt HandCoded.Validation.RuleSet = : decl_stmt System.Random = new decl_stmt HandCoded.Finance.DateTime = decl_stmt int = try while -- > for = < ++ decl_stmt int = call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) call System.Random.Next(int,int) : if + as + else + as decl_stmt FileStream = as new new call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() if ++ decl_stmt HandCoded.Finance.DateTime = decl_stmt TimeSpan = call DateTime.Subtract() call DateTime.Subtract() call DateTime.Subtract() call DateTime.Subtract() call DateTime.Subtract() if + + + + + * / + + + else + + + + + * / + + + catch call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() = protected override protected override return FileInfo string string private private if foreach in if new & == foreach in decl_stmt System.IO.FileInfo = new if & == else decl_stmt string = decl_stmt string = foreach in decl_stmt System.IO.FileInfo = new if & == private private private private if + + + + + != + + : + + + else if != + + + + + + + else + + + +