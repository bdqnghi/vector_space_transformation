HandCoded.Xml System using System.IO using System.Text using System.Xml using System.Xml.Schema using HandCoded.Meta using HandCoded.Validation using HandCoded.Xml.Resolver using HandCoded.Xml.Writer using class HandCoded.Xml.XmlUtility int SchemaSet int Catalog int return = return XmlDocument public static public static decl_stmt System.Xml.XmlDocument = new try call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) return catch return XmlDocument XmlReader XmlReaderSettings public static public static decl_stmt System.Xml.XmlDocument = new decl_stmt System.Xml.XmlReaderSettings = new = = = = decl_stmt System.Xml.XmlReader = try call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) return catch return XmlDocument XmlReader XmlReaderSettings public static public static decl_stmt System.Xml.XmlDocument = new decl_stmt System.Xml.XmlReaderSettings = new decl_stmt System.Xml.XmlReader if == if = == return = != : if == = = = if == = = = new try call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) return catch return XmlDocument XmlReader XmlReaderSettings public static public static decl_stmt System.Xml.XmlDocument = new decl_stmt System.Xml.XmlReaderSettings = new decl_stmt System.Xml.XmlReader if == if ! throw new if = == return = != : if == = = = if == = = = += = try call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) return catch return public static public static public static public static private static private static if != for = < ++ switch case as + as + break case as + + foreach in as + foreach in as + break case as + as + + break case as break