HandCoded.FpML.Schemes System using System.Collections.Generic using System.Xml using log4net using class HandCoded.FpML.Schemes.SchemeCollection decl Dictionary ILog string string string string XmlReader CachedScheme public public decl_stmt HandCoded.FpML.Schemes.CachedScheme = decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt System.Xml.XmlReader = new while call XmlReader.Read() call XmlReader.Read() call XmlReader.Read() call XmlReader.Read() call XmlReader.Read() switch case if call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() if != if != = new else = new call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + else call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() = else if call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() if != = else call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() = = = if if != && != call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() new else if call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() = break case if call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() if != && != call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() call CachedScheme.Add() new else if call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() call XmlReader.LocalName() if == = call string.Trim() call string.Trim() call string.Trim() call string.Trim() call string.Trim() break case = break call System.Xml.XmlReader.Close() call System.Xml.XmlReader.Close() call System.Xml.XmlReader.Close() call System.Xml.XmlReader.Close() call System.Xml.XmlReader.Close() Scheme Scheme public public decl_stmt HandCoded.FpML.Schemes.Scheme = call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : decl_stmt HandCoded.FpML.Schemes.Scheme = if != = call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : = = return != : Scheme Scheme public public decl_stmt HandCoded.FpML.Schemes.Scheme = decl_stmt HandCoded.FpML.Schemes.Scheme = if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() = if != if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() call decl Dictionary.Remove() = return != : Scheme public public decl_stmt HandCoded.FpML.Schemes.Scheme = if != return return public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() :