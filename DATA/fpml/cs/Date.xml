HandCoded.Finance System using System.Text using class attribute HandCoded.Finance.Date super super TemporalDate super IComparable Date Date DateValue return return return return return return return int int int int int int public static public static decl_stmt int = decl_stmt int = while if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - * if >= || ! break += ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if >= || ++ != break if >= || ! break decl_stmt int = ++ - * if >= || ! break += ++ - if < && == return new if < && == ++ if >= && ! break decl_stmt int = ++ - * if >= && ! break += ++ - * if >= && ++ != break if >= && ! break = ++ - * if >= && ! break += ++ - return new if < && == ++ if >= && ! break decl_stmt int = ++ - * if >= && ! break += ++ - * if >= && ++ != break if >= && ! break = ++ - * if >= && ! break += ++ - return new - return new throw new decl System decl_stmt HandCoded.Finance.DateTime = return new public static public static return public static public static return public static public static return public public return new call HandCoded.Finance.DateValue.PlusDays(int) call HandCoded.Finance.DateValue.PlusDays(int) call HandCoded.Finance.DateValue.PlusDays(int) call HandCoded.Finance.DateValue.PlusDays(int) call HandCoded.Finance.DateValue.PlusDays(int) public public return new call HandCoded.Finance.DateValue.PlusWeeks(int) call HandCoded.Finance.DateValue.PlusWeeks(int) call HandCoded.Finance.DateValue.PlusWeeks(int) call HandCoded.Finance.DateValue.PlusWeeks(int) call HandCoded.Finance.DateValue.PlusWeeks(int) public public return new call DateValue.PlusMonths() call DateValue.PlusMonths() call DateValue.PlusMonths() call DateValue.PlusMonths() call DateValue.PlusMonths() public public return new call HandCoded.Finance.DateValue.PlusYears(int) call HandCoded.Finance.DateValue.PlusYears(int) call HandCoded.Finance.DateValue.PlusYears(int) call HandCoded.Finance.DateValue.PlusYears(int) call HandCoded.Finance.DateValue.PlusYears(int) public public return new call HandCoded.Finance.DateValue.Plus(Interval) call HandCoded.Finance.DateValue.Plus(Interval) call HandCoded.Finance.DateValue.Plus(Interval) call HandCoded.Finance.DateValue.Plus(Interval) call HandCoded.Finance.DateValue.Plus(Interval) public public return new public override public override if != return call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() ^ else return call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() call HandCoded.Finance.DateValue.GetHashCode() public override public override return is && as public public if == && == return call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) else if != && != && return call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) call HandCoded.Finance.DateValue.Equals(DateValue) else return public public return as public public if == && == return call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) else if != && != && return call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) call HandCoded.Finance.DateValue.CompareTo(object) else return public override public override if != return call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() + else return call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString() call HandCoded.Finance.DateValue.ToString()