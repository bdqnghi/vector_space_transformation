ua_parser java.util.ArrayList import java.util.List import java.util.Map import java.util.regex.Matcher import java.util.regex.Pattern import class ua_parser.DeviceParser decl List String public public if == return decl_stmt java.lang.String = for : if = != break if == = return new decl List public static public static < < decl_stmt java.util.List < = new < for < : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return new String Pattern protected static protected static < decl_stmt java.lang.String = if == throw new decl_stmt java.util.regex.Pattern = : return new String Matcher int String public public decl_stmt java.util.regex.Matcher = if ! call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) return decl_stmt java.lang.String = if != if = for : decl_stmt int = decl_stmt java.lang.String = call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() >= && call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) != call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) : = call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) call java.lang.String.replaceFirst(String,String) + = call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() else = else if call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() call java.util.regex.Matcher.groupCount() >= = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) return Matcher decl List private < private < decl_stmt java.util.regex.Matcher = decl_stmt java.util.List < = new < while call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call java.util.regex.Matcher.find(int) call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) return