org.apache.cordova.engine android.annotation.TargetApi import android.content.pm.ApplicationInfo import android.content.pm.PackageManager import android.content.pm.PackageManager.NameNotFoundException import android.graphics.Bitmap import android.net.Uri import android.net.http.SslError import android.os.Build import android.webkit.ClientCertRequest import android.webkit.HttpAuthHandler import android.webkit.SslErrorHandler import android.webkit.WebResourceResponse import android.webkit.WebView import android.webkit.WebViewClient import org.apache.cordova.AuthenticationToken import org.apache.cordova.CordovaClientCertRequest import org.apache.cordova.CordovaHttpAuthHandler import org.apache.cordova.CordovaResourceApi import org.apache.cordova.LOG import org.apache.cordova.PluginManager import java.io.FileNotFoundException import java.io.IOException import java.util.Hashtable import class org.apache.cordova.engine.SystemWebViewClient super super extends boolean SystemWebViewEngine String boolean decl Hashtable public public return call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() AuthenticationToken PluginManager public public decl_stmt org.apache.cordova.AuthenticationToken = if != call org.apache.cordova.AuthenticationToken.getUserName() call org.apache.cordova.AuthenticationToken.getUserName() call org.apache.cordova.AuthenticationToken.getUserName() call org.apache.cordova.AuthenticationToken.getUserName() call org.apache.cordova.AuthenticationToken.getUserName() call AuthenticationToken.getPassword() call AuthenticationToken.getPassword() call AuthenticationToken.getPassword() call AuthenticationToken.getPassword() call AuthenticationToken.getPassword() return decl_stmt org.apache.cordova.PluginManager = if != && call org.apache.cordova.PluginManager.onReceivedHttpAuthRequest(CordovaWebView,ICordovaHttpAuthHandler,String,String) call org.apache.cordova.PluginManager.onReceivedHttpAuthRequest(CordovaWebView,ICordovaHttpAuthHandler,String,String) call org.apache.cordova.PluginManager.onReceivedHttpAuthRequest(CordovaWebView,ICordovaHttpAuthHandler,String,String) call org.apache.cordova.PluginManager.onReceivedHttpAuthRequest(CordovaWebView,ICordovaHttpAuthHandler,String,String) call org.apache.cordova.PluginManager.onReceivedHttpAuthRequest(CordovaWebView,ICordovaHttpAuthHandler,String,String) new call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() return PluginManager public public decl_stmt org.apache.cordova.PluginManager = if != && call org.apache.cordova.PluginManager.onReceivedClientCertRequest(CordovaWebView,ICordovaClientCertRequest) call org.apache.cordova.PluginManager.onReceivedClientCertRequest(CordovaWebView,ICordovaClientCertRequest) call org.apache.cordova.PluginManager.onReceivedClientCertRequest(CordovaWebView,ICordovaClientCertRequest) call org.apache.cordova.PluginManager.onReceivedClientCertRequest(CordovaWebView,ICordovaClientCertRequest) call org.apache.cordova.PluginManager.onReceivedClientCertRequest(CordovaWebView,ICordovaClientCertRequest) new call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() return public public = call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.bridge() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() public public if ! && ! return = if = call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() public public if ! return if == call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() if return else call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() call SystemWebViewEngine.client() String ApplicationInfo PackageManager public public decl_stmt java.lang.String final final = call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() decl_stmt PackageManager final final = call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() call SystemWebViewEngine.cordova() decl_stmt ApplicationInfo try = call PackageManager.getApplicationInfo() call PackageManager.getApplicationInfo() call PackageManager.getApplicationInfo() call PackageManager.getApplicationInfo() call PackageManager.getApplicationInfo() if & != return else catch public public if == = if == = public public return AuthenticationToken public public decl_stmt org.apache.cordova.AuthenticationToken = = if == = if == = if == = return public public Uri Uri decl CordovaResourceApi CordovaResourceApi public public try if ! call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() call SystemWebViewEngine.pluginManager() + return new decl_stmt org.apache.cordova.CordovaResourceApi = decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt com.sun.jndi.toolkit.url.Uri = call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) if ! call Uri.equals() call Uri.equals() call Uri.equals() call Uri.equals() call Uri.equals() || || decl_stmt OpenForReadResult = call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) return new return catch if ! instanceof return new private static private static return >= && private static private static if != return if != || != return if ! return switch case case return return