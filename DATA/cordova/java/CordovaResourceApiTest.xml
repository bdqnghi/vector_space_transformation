org.apache.cordova.test android.graphics.Bitmap import android.graphics.BitmapFactory import android.net.Uri import android.os.Environment import android.provider.MediaStore import org.apache.cordova.CallbackContext import org.apache.cordova.CordovaPlugin import org.apache.cordova.CordovaResourceApi import org.apache.cordova.CordovaResourceApi.OpenForReadResult import org.apache.cordova.PluginEntry import org.json.JSONArray import org.json.JSONException import java.io.ByteArrayInputStream import java.io.File import java.io.IOException import java.io.OutputStream import java.nio.charset.StandardCharsets import java.util.Scanner import class org.apache.cordova.test.CordovaResourceApiTest super super extends String Integer CordovaResourceApi ByteArrayInputStream Uri protected protected throws = call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) new new public public if != && return if != && return return public public throws decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt ByteArrayInputStream = new call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() return new call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() public public throws synchronized = = return public public if != && return if != && return return ByteArrayInputStream Uri public public throws decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt ByteArrayInputStream = new call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() call com.sun.jndi.toolkit.url.Uri.toString() return new call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() call ByteArrayInputStream.available() public public throws synchronized = = return Bitmap String private private decl_stmt Bitmap = decl_stmt java.lang.String = return String OpenForReadResult OutputStream private private throws = call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) try decl_stmt OpenForReadResult = call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) decl_stmt java.lang.String = call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() call OpenForReadResult.inputStream() if ! catch if throw try decl_stmt java.io.OutputStream = call org.apache.cordova.CordovaResourceApi.openOutputStream(Uri) call org.apache.cordova.CordovaResourceApi.openOutputStream(Uri) call org.apache.cordova.CordovaResourceApi.openOutputStream(Uri) call org.apache.cordova.CordovaResourceApi.openOutputStream(Uri) call org.apache.cordova.CordovaResourceApi.openOutputStream(Uri) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) call java.io.OutputStream.write(byte) if ! call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() call java.io.OutputStream.close() catch if throw Uri File Uri String OpenForReadResult Uri String File Uri public public throws decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt File = call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) call org.apache.cordova.CordovaResourceApi.mapUriToFile(Uri) decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt File = try decl_stmt com.sun.jndi.toolkit.url.Uri = call File.toURI() call File.toURI() call File.toURI() call File.toURI() call File.toURI() + finally call File.delete() call File.delete() call File.delete() call File.delete() call File.delete() decl_stmt File = new + decl_stmt com.sun.jndi.toolkit.url.Uri = call File.toURI() call File.toURI() call File.toURI() call File.toURI() call File.toURI() try finally call File.delete() call File.delete() call File.delete() call File.delete() call File.delete() decl_stmt File = new + + + decl_stmt com.sun.jndi.toolkit.url.Uri = call File.toURI() call File.toURI() call File.toURI() call File.toURI() call File.toURI() decl_stmt com.sun.jndi.toolkit.url.Uri = try call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) catch try call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) catch try call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) catch decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt com.sun.jndi.toolkit.url.Uri = call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) call org.apache.cordova.CordovaResourceApi.setThreadCheckingEnabled(boolean) try call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) catch decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt OpenForReadResult = call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) decl_stmt java.lang.String = new decl_stmt com.sun.jndi.toolkit.url.Uri = decl_stmt OpenForReadResult = call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) decl_stmt java.lang.String = new decl_stmt java.lang.String = decl_stmt com.sun.jndi.toolkit.url.Uri = call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) call org.apache.cordova.CordovaResourceApi.remapUri(Uri) decl_stmt OpenForReadResult = call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) call org.apache.cordova.CordovaResourceApi.openForRead(Uri,boolean) decl_stmt java.lang.String = new call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() public public throws = = + + + try synchronized catch call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() public public throws = = + + + try synchronized catch call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue()