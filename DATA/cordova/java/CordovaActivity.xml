org.apache.cordova java.util.ArrayList import java.util.Locale import org.json.JSONException import org.json.JSONObject import android.app.Activity import android.app.AlertDialog import android.annotation.SuppressLint import android.content.DialogInterface import android.content.Intent import android.content.res.Configuration import android.graphics.Color import android.media.AudioManager import android.os.Build import android.os.Bundle import android.util.Log import android.view.Menu import android.view.MenuItem import android.view.View import android.view.ViewGroup import android.view.Window import android.view.WindowManager import android.webkit.WebViewClient import android.widget.FrameLayout import class org.apache.cordova.CordovaActivity super super extends boolean CordovaPreferences int CordovaInterfaceImpl String String decl ArrayList int boolean CordovaWebView int public public + + if ! call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() if call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call org.apache.cordova.CordovaPreferences.set(String,boolean) call org.apache.cordova.CordovaPreferences.set(String,boolean) call org.apache.cordova.CordovaPreferences.set(String,boolean) call org.apache.cordova.CordovaPreferences.set(String,boolean) call org.apache.cordova.CordovaPreferences.set(String,boolean) if call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() if >= = else else = if != call org.apache.cordova.CordovaInterfaceImpl.restoreInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.restoreInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.restoreInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.restoreInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.restoreInstanceState(Bundle) String protected protected = if ! call org.apache.cordova.CordovaWebView.isInitialized() call org.apache.cordova.CordovaWebView.isInitialized() call org.apache.cordova.CordovaWebView.isInitialized() call org.apache.cordova.CordovaWebView.isInitialized() call org.apache.cordova.CordovaWebView.isInitialized() call org.apache.cordova.CordovaWebView.init(CordovaInterface,List,CordovaPreferences) call org.apache.cordova.CordovaWebView.init(CordovaInterface,List,CordovaPreferences) call org.apache.cordova.CordovaWebView.init(CordovaInterface,List,CordovaPreferences) call org.apache.cordova.CordovaWebView.init(CordovaInterface,List,CordovaPreferences) call org.apache.cordova.CordovaWebView.init(CordovaInterface,List,CordovaPreferences) call CordovaInterfaceImpl.onCordovaInit() call CordovaInterfaceImpl.onCordovaInit() call CordovaInterfaceImpl.onCordovaInit() call CordovaInterfaceImpl.onCordovaInit() call CordovaInterfaceImpl.onCordovaInit() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() decl_stmt java.lang.String = call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) if call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) call java.lang.String.toLowerCase(Locale) ConfigXmlParser protected protected decl_stmt org.apache.cordova.ConfigXmlParser = new call org.apache.cordova.ConfigXmlParser.parse(Context) call org.apache.cordova.ConfigXmlParser.parse(Context) call org.apache.cordova.ConfigXmlParser.parse(Context) call org.apache.cordova.ConfigXmlParser.parse(Context) call org.apache.cordova.ConfigXmlParser.parse(Context) = call org.apache.cordova.ConfigXmlParser.getPreferences() call org.apache.cordova.ConfigXmlParser.getPreferences() call org.apache.cordova.ConfigXmlParser.getPreferences() call org.apache.cordova.ConfigXmlParser.getPreferences() call org.apache.cordova.ConfigXmlParser.getPreferences() call org.apache.cordova.CordovaPreferences.setPreferencesBundle(Bundle) call org.apache.cordova.CordovaPreferences.setPreferencesBundle(Bundle) call org.apache.cordova.CordovaPreferences.setPreferencesBundle(Bundle) call org.apache.cordova.CordovaPreferences.setPreferencesBundle(Bundle) call org.apache.cordova.CordovaPreferences.setPreferencesBundle(Bundle) = call org.apache.cordova.ConfigXmlParser.getLaunchUrl() call org.apache.cordova.ConfigXmlParser.getLaunchUrl() call org.apache.cordova.ConfigXmlParser.getLaunchUrl() call org.apache.cordova.ConfigXmlParser.getLaunchUrl() call org.apache.cordova.ConfigXmlParser.getLaunchUrl() = call org.apache.cordova.ConfigXmlParser.getPluginEntries() call org.apache.cordova.ConfigXmlParser.getPluginEntries() call org.apache.cordova.ConfigXmlParser.getPluginEntries() call org.apache.cordova.ConfigXmlParser.getPluginEntries() call org.apache.cordova.ConfigXmlParser.getPluginEntries() = int protected protected call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() new call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() if call org.apache.cordova.CordovaPreferences.contains(String) call org.apache.cordova.CordovaPreferences.contains(String) call org.apache.cordova.CordovaPreferences.contains(String) call org.apache.cordova.CordovaPreferences.contains(String) call org.apache.cordova.CordovaPreferences.contains(String) decl_stmt int = call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() call org.apache.cordova.CordovaWebView.getView() protected protected return new protected protected return protected protected return new public public return public public return public public if == = call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call org.apache.cordova.CordovaWebView.loadUrlIntoView(String,boolean) call org.apache.cordova.CordovaWebView.loadUrlIntoView(String,boolean) call org.apache.cordova.CordovaWebView.loadUrlIntoView(String,boolean) call org.apache.cordova.CordovaWebView.loadUrlIntoView(String,boolean) call org.apache.cordova.CordovaWebView.loadUrlIntoView(String,boolean) boolean protected protected if != decl_stmt boolean = || != protected protected if != protected protected if == return protected protected if == return protected protected if == return public public if != call CordovaWebView.handleDestroy() call CordovaWebView.handleDestroy() call CordovaWebView.handleDestroy() call CordovaWebView.handleDestroy() call CordovaWebView.handleDestroy() int public public if && decl_stmt int final final = | | | | | public public call org.apache.cordova.CordovaInterfaceImpl.setActivityResultRequestCode(int) call org.apache.cordova.CordovaInterfaceImpl.setActivityResultRequestCode(int) call org.apache.cordova.CordovaInterfaceImpl.setActivityResultRequestCode(int) call org.apache.cordova.CordovaInterfaceImpl.setActivityResultRequestCode(int) call org.apache.cordova.CordovaInterfaceImpl.setActivityResultRequestCode(int) protected protected + call org.apache.cordova.CordovaInterfaceImpl.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaInterfaceImpl.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaInterfaceImpl.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaInterfaceImpl.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaInterfaceImpl.onActivityResult(int,int,Intent) CordovaActivity boolean String public public final final final final final final decl_stmt org.apache.cordova.CordovaActivity final final = decl_stmt java.lang.String final final = call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) if != && ! && != call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() new public public call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() else decl_stmt boolean final final = ! == call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() new public public if call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call CordovaActivity.appView() call org.apache.cordova.CordovaActivity.displayError(String,String,String,boolean) call org.apache.cordova.CordovaActivity.displayError(String,String,String,boolean) call org.apache.cordova.CordovaActivity.displayError(String,String,String,boolean) call org.apache.cordova.CordovaActivity.displayError(String,String,String,boolean) call org.apache.cordova.CordovaActivity.displayError(String,String,String,boolean) + + + public public public public if + + + CordovaActivity decl AlertDialog public public final final final final final final final final decl_stmt org.apache.cordova.CordovaActivity final final = call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() call CordovaActivity.runOnUiThread() new public public try decl_stmt sun.security.provider.certpath.Builder = new call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() new public public if call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() catch decl AlertDialog public public try decl_stmt sun.security.provider.certpath.Builder = new call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setMessage() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setTitle() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setCancelable() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() call decl AlertDialog.setPositiveButton() new public public if call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.create() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() call decl AlertDialog.show() catch public public if public public if != call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() return public public if != call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() return public public if != call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() call org.apache.cordova.CordovaWebView.getPluginManager() return JSONObject public public if decl_stmt JSONObject = try call JSONObject.getInt() call JSONObject.getInt() call JSONObject.getInt() call JSONObject.getInt() call JSONObject.getInt() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() call JSONObject.getString() catch else if return protected protected call org.apache.cordova.CordovaInterfaceImpl.onSaveInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.onSaveInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.onSaveInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.onSaveInstanceState(Bundle) call org.apache.cordova.CordovaInterfaceImpl.onSaveInstanceState(Bundle) PluginManager public public if == return decl_stmt org.apache.cordova.PluginManager = if != call org.apache.cordova.PluginManager.onConfigurationChanged(Configuration) call org.apache.cordova.PluginManager.onConfigurationChanged(Configuration) call org.apache.cordova.PluginManager.onConfigurationChanged(Configuration) call org.apache.cordova.PluginManager.onConfigurationChanged(Configuration) call org.apache.cordova.PluginManager.onConfigurationChanged(Configuration) public public try call org.apache.cordova.CordovaInterfaceImpl.onRequestPermissionResult(int,String,int) call org.apache.cordova.CordovaInterfaceImpl.onRequestPermissionResult(int,String,int) call org.apache.cordova.CordovaInterfaceImpl.onRequestPermissionResult(int,String,int) call org.apache.cordova.CordovaInterfaceImpl.onRequestPermissionResult(int,String,int) call org.apache.cordova.CordovaInterfaceImpl.onRequestPermissionResult(int,String,int) catch