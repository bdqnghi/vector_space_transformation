org.apache.cordova.engine android.annotation.SuppressLint import android.annotation.TargetApi import android.content.BroadcastReceiver import android.content.Context import android.content.Intent import android.content.IntentFilter import android.content.pm.ApplicationInfo import android.os.Build import android.util.Log import android.view.View import android.webkit.WebSettings import android.webkit.WebSettings.LayoutAlgorithm import android.webkit.WebView import org.apache.cordova.CordovaBridge import org.apache.cordova.CordovaInterface import org.apache.cordova.CordovaPreferences import org.apache.cordova.CordovaResourceApi import org.apache.cordova.CordovaWebView import org.apache.cordova.CordovaWebViewEngine import org.apache.cordova.ICordovaCookieManager import org.apache.cordova.NativeToJsMessageQueue import org.apache.cordova.PluginManager import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import class org.apache.cordova.engine.SystemWebViewEngine super super implements PluginManager CordovaBridge CordovaInterface CordovaPreferences SystemCookieManager decl Client CordovaResourceApi decl CordovaWebViewEngine NativeToJsMessageQueue SystemWebView CordovaWebView String public public if != throw new if == = call decl Client.getPreferences() call decl Client.getPreferences() call decl Client.getPreferences() call decl Client.getPreferences() call decl Client.getPreferences() = = = = = = call org.apache.cordova.engine.SystemWebView.init(SystemWebViewEngine,CordovaInterface) call org.apache.cordova.engine.SystemWebView.init(SystemWebViewEngine,CordovaInterface) call org.apache.cordova.engine.SystemWebView.init(SystemWebViewEngine,CordovaInterface) call org.apache.cordova.engine.SystemWebView.init(SystemWebViewEngine,CordovaInterface) call org.apache.cordova.engine.SystemWebView.init(SystemWebViewEngine,CordovaInterface) call CordovaResourceApi.addBridgeMode() call CordovaResourceApi.addBridgeMode() call CordovaResourceApi.addBridgeMode() call CordovaResourceApi.addBridgeMode() call CordovaResourceApi.addBridgeMode() new new public public call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() public public = new public public call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() call SystemWebView.setNetworkAvailable() public public public public return public public return public public return ApplicationInfo String String WebSettings String IntentFilter String Method String private private call SystemWebView.setInitialScale() call SystemWebView.setInitialScale() call SystemWebView.setInitialScale() call SystemWebView.setInitialScale() call SystemWebView.setInitialScale() call SystemWebView.setVerticalScrollBarEnabled() call SystemWebView.setVerticalScrollBarEnabled() call SystemWebView.setVerticalScrollBarEnabled() call SystemWebView.setVerticalScrollBarEnabled() call SystemWebView.setVerticalScrollBarEnabled() decl_stmt WebSettings final final = call SystemWebView.getSettings() call SystemWebView.getSettings() call SystemWebView.getSettings() call SystemWebView.getSettings() call SystemWebView.getSettings() call WebSettings.setJavaScriptEnabled() call WebSettings.setJavaScriptEnabled() call WebSettings.setJavaScriptEnabled() call WebSettings.setJavaScriptEnabled() call WebSettings.setJavaScriptEnabled() call WebSettings.setJavaScriptCanOpenWindowsAutomatically() call WebSettings.setJavaScriptCanOpenWindowsAutomatically() call WebSettings.setJavaScriptCanOpenWindowsAutomatically() call WebSettings.setJavaScriptCanOpenWindowsAutomatically() call WebSettings.setJavaScriptCanOpenWindowsAutomatically() call WebSettings.setLayoutAlgorithm() call WebSettings.setLayoutAlgorithm() call WebSettings.setLayoutAlgorithm() call WebSettings.setLayoutAlgorithm() call WebSettings.setLayoutAlgorithm() try decl_stmt com.sun.jdi.Method = new decl_stmt java.lang.String = + if < && call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch catch catch catch call WebSettings.setSaveFormData() call WebSettings.setSaveFormData() call WebSettings.setSaveFormData() call WebSettings.setSaveFormData() call WebSettings.setSaveFormData() call WebSettings.setSavePassword() call WebSettings.setSavePassword() call WebSettings.setSavePassword() call WebSettings.setSavePassword() call WebSettings.setSavePassword() if >= call WebSettings.setAllowUniversalAccessFromFileURLs() call WebSettings.setAllowUniversalAccessFromFileURLs() call WebSettings.setAllowUniversalAccessFromFileURLs() call WebSettings.setAllowUniversalAccessFromFileURLs() call WebSettings.setAllowUniversalAccessFromFileURLs() if >= call WebSettings.setMediaPlaybackRequiresUserGesture() call WebSettings.setMediaPlaybackRequiresUserGesture() call WebSettings.setMediaPlaybackRequiresUserGesture() call WebSettings.setMediaPlaybackRequiresUserGesture() call WebSettings.setMediaPlaybackRequiresUserGesture() decl_stmt java.lang.String = call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call WebSettings.setDatabaseEnabled() call WebSettings.setDatabaseEnabled() call WebSettings.setDatabaseEnabled() call WebSettings.setDatabaseEnabled() call WebSettings.setDatabaseEnabled() call WebSettings.setDatabasePath() call WebSettings.setDatabasePath() call WebSettings.setDatabasePath() call WebSettings.setDatabasePath() call WebSettings.setDatabasePath() decl_stmt ApplicationInfo = call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() if & != && >= call WebSettings.setGeolocationDatabasePath() call WebSettings.setGeolocationDatabasePath() call WebSettings.setGeolocationDatabasePath() call WebSettings.setGeolocationDatabasePath() call WebSettings.setGeolocationDatabasePath() call WebSettings.setDomStorageEnabled() call WebSettings.setDomStorageEnabled() call WebSettings.setDomStorageEnabled() call WebSettings.setDomStorageEnabled() call WebSettings.setDomStorageEnabled() call WebSettings.setGeolocationEnabled() call WebSettings.setGeolocationEnabled() call WebSettings.setGeolocationEnabled() call WebSettings.setGeolocationEnabled() call WebSettings.setGeolocationEnabled() call WebSettings.setAppCacheMaxSize() call WebSettings.setAppCacheMaxSize() call WebSettings.setAppCacheMaxSize() call WebSettings.setAppCacheMaxSize() call WebSettings.setAppCacheMaxSize() * call WebSettings.setAppCachePath() call WebSettings.setAppCachePath() call WebSettings.setAppCachePath() call WebSettings.setAppCachePath() call WebSettings.setAppCachePath() call WebSettings.setAppCacheEnabled() call WebSettings.setAppCacheEnabled() call WebSettings.setAppCacheEnabled() call WebSettings.setAppCacheEnabled() call WebSettings.setAppCacheEnabled() decl_stmt java.lang.String = call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() decl_stmt java.lang.String = call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) if != call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() else decl_stmt java.lang.String = call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) if != call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() call WebSettings.setUserAgentString() + + decl_stmt IntentFilter = new call IntentFilter.addAction() call IntentFilter.addAction() call IntentFilter.addAction() call IntentFilter.addAction() call IntentFilter.addAction() if == = new public public call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call WebSettings.getUserAgentString() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() public public private private try catch SystemExposedJsApi private static private static if < return decl_stmt org.apache.cordova.engine.SystemExposedJsApi = new call SystemWebView.addJavascriptInterface() call SystemWebView.addJavascriptInterface() call SystemWebView.addJavascriptInterface() call SystemWebView.addJavascriptInterface() call SystemWebView.addJavascriptInterface() public public final final call SystemWebView.loadUrl() call SystemWebView.loadUrl() call SystemWebView.loadUrl() call SystemWebView.loadUrl() call SystemWebView.loadUrl() public public return call SystemWebView.getUrl() call SystemWebView.getUrl() call SystemWebView.getUrl() call SystemWebView.getUrl() call SystemWebView.getUrl() public public call SystemWebView.stopLoading() call SystemWebView.stopLoading() call SystemWebView.stopLoading() call SystemWebView.stopLoading() call SystemWebView.stopLoading() public public call SystemWebView.clearCache() call SystemWebView.clearCache() call SystemWebView.clearCache() call SystemWebView.clearCache() call SystemWebView.clearCache() public public call SystemWebView.clearHistory() call SystemWebView.clearHistory() call SystemWebView.clearHistory() call SystemWebView.clearHistory() call SystemWebView.clearHistory() public public return call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() public public if call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.canGoBack() call SystemWebView.goBack() call SystemWebView.goBack() call SystemWebView.goBack() call SystemWebView.goBack() call SystemWebView.goBack() return return public public if call SystemWebView.pauseTimers() call SystemWebView.pauseTimers() call SystemWebView.pauseTimers() call SystemWebView.pauseTimers() call SystemWebView.pauseTimers() else call SystemWebView.resumeTimers() call SystemWebView.resumeTimers() call SystemWebView.resumeTimers() call SystemWebView.resumeTimers() call SystemWebView.resumeTimers() public public call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.chromeClient() call SystemWebView.destroy() call SystemWebView.destroy() call SystemWebView.destroy() call SystemWebView.destroy() call SystemWebView.destroy() if != try call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() call SystemWebView.getContext() catch +