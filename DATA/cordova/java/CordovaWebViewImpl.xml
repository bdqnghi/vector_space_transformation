org.apache.cordova android.content.Context import android.content.Intent import android.net.Uri import android.util.Log import android.view.Gravity import android.view.KeyEvent import android.view.View import android.view.ViewGroup import android.webkit.WebChromeClient import android.widget.FrameLayout import org.apache.cordova.engine.SystemWebViewEngine import org.json.JSONException import org.json.JSONObject import java.lang.reflect.Constructor import java.util.ArrayList import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import class org.apache.cordova.CordovaWebViewImpl super super implements CordovaWebViewEngine CordovaInterface View CordovaPreferences String CoreAndroid boolean NativeToJsMessageQueue String int EngineClient decl CustomViewCallback decl WebChromeClient PluginManager CordovaResourceApi String decl Constructor decl Class public static public static decl_stmt java.lang.String = call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) call org.apache.cordova.CordovaPreferences.getString(String,String) try decl_stmt java.lang.Class < = decl_stmt java.lang.reflect.Constructor < = call decl Class.getConstructor() call decl Class.getConstructor() call decl Class.getConstructor() call decl Class.getConstructor() call decl Class.getConstructor() return call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() catch throw new public public new < new public public < if != throw new = = = new = new call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() = new call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) new call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) call org.apache.cordova.NativeToJsMessageQueue.addBridgeMode(BridgeMode) new if call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call CordovaPreferences.getBoolean() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.init(CordovaWebView,CordovaInterface,Client,CordovaResourceApi,PluginManager,NativeToJsMessageQueue) call org.apache.cordova.CordovaWebViewEngine.init(CordovaWebView,CordovaInterface,Client,CordovaResourceApi,PluginManager,NativeToJsMessageQueue) call org.apache.cordova.CordovaWebViewEngine.init(CordovaWebView,CordovaInterface,Client,CordovaResourceApi,PluginManager,NativeToJsMessageQueue) call org.apache.cordova.CordovaWebViewEngine.init(CordovaWebView,CordovaInterface,Client,CordovaResourceApi,PluginManager,NativeToJsMessageQueue) call org.apache.cordova.CordovaWebViewEngine.init(CordovaWebView,CordovaInterface,Client,CordovaResourceApi,PluginManager,NativeToJsMessageQueue) assert call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() instanceof call org.apache.cordova.PluginManager.addService(String,String) call org.apache.cordova.PluginManager.addService(String,String) call org.apache.cordova.PluginManager.addService(String,String) call org.apache.cordova.PluginManager.addService(String,String) call org.apache.cordova.PluginManager.addService(String,String) call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() public public return != Runnable JSONObject int Runnable int boolean public public final final + + if || call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) return = || == if if != = call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() call org.apache.cordova.PluginManager.init() = decl_stmt int final final = decl_stmt int final final = call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) call org.apache.cordova.CordovaPreferences.getInteger(String,int) decl_stmt java.lang.Runnable final final = new public public decl_stmt JSONObject = new try call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() - call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() catch call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) decl_stmt java.lang.Runnable final final = new public public try synchronized catch if == call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() decl_stmt boolean final final = call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() new public public if > call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) JSONObject public public decl_stmt JSONObject = new try call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() - call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() catch call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) public public try synchronized catch if == call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() public public if > call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaInterface.getThreadPool() call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) call org.apache.cordova.CordovaWebViewEngine.loadUrl(String,boolean) public public Intent Uri public public < if call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() if ! if call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) else + if ! call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) + return try decl_stmt Intent = new call Intent.addCategory() call Intent.addCategory() call Intent.addCategory() call Intent.addCategory() call Intent.addCategory() decl_stmt com.sun.jndi.toolkit.url.Uri = if call Uri.getScheme() call Uri.getScheme() call Uri.getScheme() call Uri.getScheme() call Uri.getScheme() call Intent.setDataAndType() call Intent.setDataAndType() call Intent.setDataAndType() call Intent.setDataAndType() call Intent.setDataAndType() call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) call org.apache.cordova.CordovaResourceApi.getMimeType(Uri) else call Intent.setData() call Intent.setData() call Intent.setData() call Intent.setData() call Intent.setData() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() catch + ViewGroup public public if != return = = decl_stmt ViewGroup = call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call ViewGroup.addView() call ViewGroup.addView() call ViewGroup.addView() call ViewGroup.addView() call ViewGroup.addView() new call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call ViewGroup.setVisibility() call ViewGroup.setVisibility() call ViewGroup.setVisibility() call ViewGroup.setVisibility() call ViewGroup.setVisibility() call ViewGroup.bringToFront() call ViewGroup.bringToFront() call ViewGroup.bringToFront() call ViewGroup.bringToFront() call ViewGroup.bringToFront() ViewGroup public public if == return call View.setVisibility() call View.setVisibility() call View.setVisibility() call View.setVisibility() call View.setVisibility() decl_stmt ViewGroup = call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call ViewGroup.removeView() call ViewGroup.removeView() call ViewGroup.removeView() call ViewGroup.removeView() call ViewGroup.removeView() = call decl WebChromeClient.onCustomViewHidden() call decl WebChromeClient.onCustomViewHidden() call decl WebChromeClient.onCustomViewHidden() call decl WebChromeClient.onCustomViewHidden() call decl WebChromeClient.onCustomViewHidden() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() public public return != public public call org.apache.cordova.NativeToJsMessageQueue.addJavaScript(String) call org.apache.cordova.NativeToJsMessageQueue.addJavaScript(String) call org.apache.cordova.NativeToJsMessageQueue.addJavaScript(String) call org.apache.cordova.NativeToJsMessageQueue.addJavaScript(String) call org.apache.cordova.NativeToJsMessageQueue.addJavaScript(String) public public call org.apache.cordova.NativeToJsMessageQueue.addPluginResult(PluginResult,String) call org.apache.cordova.NativeToJsMessageQueue.addPluginResult(PluginResult,String) call org.apache.cordova.NativeToJsMessageQueue.addPluginResult(PluginResult,String) call org.apache.cordova.NativeToJsMessageQueue.addPluginResult(PluginResult,String) call org.apache.cordova.NativeToJsMessageQueue.addPluginResult(PluginResult,String) public public return public public return public public return call org.apache.cordova.CordovaWebViewEngine.getCookieManager() call org.apache.cordova.CordovaWebViewEngine.getCookieManager() call org.apache.cordova.CordovaWebViewEngine.getCookieManager() call org.apache.cordova.CordovaWebViewEngine.getCookieManager() call org.apache.cordova.CordovaWebViewEngine.getCookieManager() public public return public public return public public return call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() public public return call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() private private if == = call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) if == return call org.apache.cordova.CoreAndroid.fireJavascriptEvent(String) call org.apache.cordova.CoreAndroid.fireJavascriptEvent(String) call org.apache.cordova.CoreAndroid.fireJavascriptEvent(String) call org.apache.cordova.CoreAndroid.fireJavascriptEvent(String) call org.apache.cordova.CoreAndroid.fireJavascriptEvent(String) public public switch case case case case if call decl CustomViewCallback.add() call decl CustomViewCallback.add() call decl CustomViewCallback.add() call decl CustomViewCallback.add() call decl CustomViewCallback.add() else call decl CustomViewCallback.remove() call decl CustomViewCallback.remove() call decl CustomViewCallback.remove() call decl CustomViewCallback.remove() call decl CustomViewCallback.remove() return default: throw new + public public return call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() public public return call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) public public return call org.apache.cordova.CordovaWebViewEngine.getUrl() call org.apache.cordova.CordovaWebViewEngine.getUrl() call org.apache.cordova.CordovaWebViewEngine.getUrl() call org.apache.cordova.CordovaWebViewEngine.getUrl() call org.apache.cordova.CordovaWebViewEngine.getUrl() public public ++ public public return call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() public public call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() public public call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() call org.apache.cordova.CordovaWebViewEngine.clearCache() public public call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() call CordovaWebViewEngine.clearHistory() public public return call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() public public if != public public if ! return = call org.apache.cordova.PluginManager.onPause(boolean) call org.apache.cordova.PluginManager.onPause(boolean) call org.apache.cordova.PluginManager.onPause(boolean) call org.apache.cordova.PluginManager.onPause(boolean) call org.apache.cordova.PluginManager.onPause(boolean) if ! call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) public public if ! return call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) call org.apache.cordova.CordovaWebViewEngine.setPaused(boolean) if public public if ! return call org.apache.cordova.PluginManager.onStart() call org.apache.cordova.PluginManager.onStart() call org.apache.cordova.PluginManager.onStart() call org.apache.cordova.PluginManager.onStart() call org.apache.cordova.PluginManager.onStart() public public if ! return call org.apache.cordova.PluginManager.onStop() call org.apache.cordova.PluginManager.onStop() call org.apache.cordova.PluginManager.onStop() call org.apache.cordova.PluginManager.onStop() call org.apache.cordova.PluginManager.onStop() public public if ! return ++ call org.apache.cordova.CordovaWebViewEngine.destroy() call org.apache.cordova.CordovaWebViewEngine.destroy() call org.apache.cordova.CordovaWebViewEngine.destroy() call org.apache.cordova.CordovaWebViewEngine.destroy() call org.apache.cordova.CordovaWebViewEngine.destroy() public public ++ public public + + call decl CustomViewCallback.clear() call decl CustomViewCallback.clear() call decl CustomViewCallback.clear() call decl CustomViewCallback.clear() call decl CustomViewCallback.clear() call org.apache.cordova.PluginManager.onReset() call org.apache.cordova.PluginManager.onReset() call org.apache.cordova.PluginManager.onReset() call org.apache.cordova.PluginManager.onReset() call org.apache.cordova.PluginManager.onReset() call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) JSONObject public public decl_stmt JSONObject = new try call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() catch call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) Thread public public + + call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) if call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() call org.apache.cordova.CordovaWebViewEngine.getView() != decl_stmt java.lang.Thread = new new public public try call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() new public public call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) catch call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() if call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) public public try call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() call org.apache.cordova.CordovaInterface.getActivity() new public public call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) catch public public call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) call org.apache.cordova.PluginManager.postMessage(String,Object) String int boolean public public decl_stmt int = decl_stmt boolean = == if == if && != return else if call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() return else if return call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() call org.apache.cordova.CordovaWebViewEngine.canGoBack() else if == if && != return else if call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() call decl CustomViewCallback.contains() decl_stmt java.lang.String = switch case = break case = break case = break case = break case = break if != return else if return call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() call org.apache.cordova.CordovaWebViewEngine.goBack() return public public if call org.apache.cordova.PluginManager.onOverrideUrlLoading(String) call org.apache.cordova.PluginManager.onOverrideUrlLoading(String) call org.apache.cordova.PluginManager.onOverrideUrlLoading(String) call org.apache.cordova.PluginManager.onOverrideUrlLoading(String) call org.apache.cordova.PluginManager.onOverrideUrlLoading(String) return else if call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) call org.apache.cordova.PluginManager.shouldAllowNavigation(String) return else if call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) call org.apache.cordova.PluginManager.shouldOpenExternalUrl(String) return + return