org.apache.cordova android.app.Activity import android.content.Intent import android.content.pm.PackageManager import android.os.Build import android.os.Bundle import android.util.Log import android.util.Pair import org.json.JSONException import org.json.JSONObject import java.util.concurrent.ExecutorService import java.util.concurrent.Executors import class org.apache.cordova.CordovaInterfaceImpl super super implements boolean PluginManager CordovaPlugin ExecutorService Bundle String int Activity CallbackMap ActivityResultHolder String public public try call Activity.startActivityForResult() call Activity.startActivityForResult() call Activity.startActivityForResult() call Activity.startActivityForResult() call Activity.startActivityForResult() catch = throw public public if != call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) = public public return public public if call Activity.finish() call Activity.finish() call Activity.finish() call Activity.finish() call Activity.finish() return public public return CoreAndroid JSONObject public public = if != else if = if != decl_stmt org.apache.cordova.CoreAndroid = call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) if != decl_stmt JSONObject = new try call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() call JSONObject.put() catch call org.apache.cordova.CoreAndroid.sendResumeEvent(PluginResult) call org.apache.cordova.CoreAndroid.sendResumeEvent(PluginResult) call org.apache.cordova.CoreAndroid.sendResumeEvent(PluginResult) call org.apache.cordova.CoreAndroid.sendResumeEvent(PluginResult) call org.apache.cordova.CoreAndroid.sendResumeEvent(PluginResult) new CordovaPlugin public public decl_stmt org.apache.cordova.CordovaPlugin = if == && != = new if != = call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) call org.apache.cordova.PluginManager.getPlugin(String) if != call org.apache.cordova.CordovaPlugin.onRestoreStateForActivityResult(Bundle,CallbackContext) call org.apache.cordova.CordovaPlugin.onRestoreStateForActivityResult(Bundle,CallbackContext) call org.apache.cordova.CordovaPlugin.onRestoreStateForActivityResult(Bundle,CallbackContext) call org.apache.cordova.CordovaPlugin.onRestoreStateForActivityResult(Bundle,CallbackContext) call org.apache.cordova.CordovaPlugin.onRestoreStateForActivityResult(Bundle,CallbackContext) call Bundle.getBundle() call Bundle.getBundle() call Bundle.getBundle() call Bundle.getBundle() call Bundle.getBundle() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() new call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() = if != = = call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) call org.apache.cordova.CordovaPlugin.onActivityResult(int,int,Intent) return + != : return public public = String public public if != decl_stmt java.lang.String = call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() call org.apache.cordova.CordovaPlugin.getServiceName() if != call org.apache.cordova.PluginManager.onSaveInstanceState() call org.apache.cordova.PluginManager.onSaveInstanceState() call org.apache.cordova.PluginManager.onSaveInstanceState() call org.apache.cordova.PluginManager.onSaveInstanceState() call org.apache.cordova.PluginManager.onSaveInstanceState() public public = = = decl Pair public public throws decl_stmt Pair < = call org.apache.cordova.CallbackMap.getAndRemoveCallback(int) call org.apache.cordova.CallbackMap.getAndRemoveCallback(int) call org.apache.cordova.CallbackMap.getAndRemoveCallback(int) call org.apache.cordova.CallbackMap.getAndRemoveCallback(int) call org.apache.cordova.CallbackMap.getAndRemoveCallback(int) if != call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() call decl Pair.first() decl String public public decl_stmt java.lang.String = new = int public public decl_stmt int = call CallbackMap.registerCallback() call CallbackMap.registerCallback() call CallbackMap.registerCallback() call CallbackMap.registerCallback() call CallbackMap.registerCallback() int public public if >= decl_stmt int = call Activity.checkSelfPermission() call Activity.checkSelfPermission() call Activity.checkSelfPermission() call Activity.checkSelfPermission() call Activity.checkSelfPermission() return == else return