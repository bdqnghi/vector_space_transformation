WPCordovaClassLib System.Globalization using Microsoft.Phone.Controls using Microsoft.Phone.Shell using System using System.Collections.Generic using System.ComponentModel using System.Diagnostics using System.IO using System.IO.IsolatedStorage using System.Linq using System.Windows using System.Windows.Controls using System.Windows.Media using WPCordovaClassLib.Cordova using WPCordovaClassLib.Cordova.JSON using WPCordovaClassLib.CordovaLib using class WPCordovaClassLib.CordovaView super super UserControl BrowserMouseHelper bool ConfigHandler bool string bool bool NativeExecution Uri decl Dictionary return return if == return new + else return if ! = string string private private decl_stmt string = call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) if ! try = new catch decl_stmt string = call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) if ! try = catch ConsoleHelper XHRHelper OrientationHelper decl_stmt WPCordovaClassLib.CordovaLib.XHRHelper = new = call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() decl_stmt WPCordovaClassLib.Cordova.OrientationHelper = new = call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() decl_stmt WPCordovaClassLib.CordovaLib.ConsoleHelper = new = call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() + try new catch try new catch IsolatedStorageFileStream IsolatedStorageFileStream string PhoneApplicationService decl_stmt PhoneApplicationService = += new < += new < += new < += new < foreach in = if return if return try decl_stmt string = using = try decl_stmt System.IO.IsolatedStorage.IsolatedStorageFileStream = new using = new = catch = + decl_stmt System.IO.IsolatedStorage.IsolatedStorageFileStream = new using = new = catch PhoneApplicationService private private decl_stmt PhoneApplicationService = -= new < -= new < -= new < -= new < foreach in string PhoneApplicationFrame bool PhoneApplicationPage decl_stmt PhoneApplicationFrame = as if != decl_stmt PhoneApplicationPage = as if != += new < decl_stmt string = call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetPreference(string) decl_stmt bool = if out && Uri Uri if try new = catch + else try = decl_stmt System.Uri = new decl_stmt System.Uri = = || != catch = decl Windows string decl Resources decl System decl StreamResourceInfo if return decl_stmt string = decl_stmt StreamResourceInfo = new if != using = new = + + decl_stmt string = foreach in call NativeExecution.AutoLoadCommand() call NativeExecution.AutoLoadCommand() call NativeExecution.AutoLoadCommand() call NativeExecution.AutoLoadCommand() call NativeExecution.AutoLoadCommand() decl_stmt string = try new catch decl_stmt string = try new catch if < if ! call WPCordovaClassLib.CordovaLib.ConfigHandler.URLIsAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.URLIsAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.URLIsAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.URLIsAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.URLIsAllowed(string) + = return = CordovaCommandCall string string string decl_stmt string = decl_stmt string = call string.Split() call string.Split() call string.Split() call string.Split() call string.Split() if call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() return decl_stmt CordovaCommandCall = if == + else if == switch call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() call CordovaCommandCall.Action() case decl_stmt string = < = != && > && call string.ToLower() call string.ToLower() call string.ToLower() call string.ToLower() call string.ToLower() == break case new new break case = = new break else if call WPCordovaClassLib.CordovaLib.ConfigHandler.IsPluginAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.IsPluginAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.IsPluginAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.IsPluginAllowed(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.IsPluginAllowed(string) = call WPCordovaClassLib.CordovaLib.ConfigHandler.GetNamespaceForCommand(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetNamespaceForCommand(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetNamespaceForCommand(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetNamespaceForCommand(string) call WPCordovaClassLib.CordovaLib.ConfigHandler.GetNamespaceForCommand(string) call WPCordovaClassLib.Cordova.NativeExecution.ProcessCommand(CordovaCommandCall) call WPCordovaClassLib.Cordova.NativeExecution.ProcessCommand(CordovaCommandCall) call WPCordovaClassLib.Cordova.NativeExecution.ProcessCommand(CordovaCommandCall) call WPCordovaClassLib.Cordova.NativeExecution.ProcessCommand(CordovaCommandCall) call WPCordovaClassLib.Cordova.NativeExecution.ProcessCommand(CordovaCommandCall) else + public public if new else + private private + private private foreach in string int Color protected protected decl_stmt string = if == = + + + + + + if == = + decl_stmt int = decl_stmt Color = & >> & >> & >> & return