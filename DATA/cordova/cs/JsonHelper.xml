WPCordovaClassLib.Cordova.JSON System using System.Runtime.Serialization.Json using System.IO using System.Text using System.Diagnostics using Newtonsoft.Json using class WPCordovaClassLib.Cordova.JSON.JsonHelper string DataContractJsonSerializer MemoryStream public static public static = if return else if == return else decl_stmt System.Runtime.Serialization.Json.DataContractJsonSerializer = new decl_stmt System.IO.MemoryStream = new call System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(Stream,object) call System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(Stream,object) call System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(Stream,object) call System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(Stream,object) call System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(Stream,object) = decl_stmt string = using = new = call MemoryStream.Close() call MemoryStream.Close() call MemoryStream.Close() call MemoryStream.Close() call MemoryStream.Close() return DataContractJsonSerializer object public static public static public static < = if return < else decl_stmt System.Runtime.Serialization.Json.DataContractJsonSerializer = new typeof decl_stmt object = try using = new = call System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader,bool) call System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader,bool) call System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader,bool) call System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader,bool) call System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(XmlDictionaryReader,bool) catch + typeof + + return