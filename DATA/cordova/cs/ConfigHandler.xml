WPCordovaClassLib.CordovaLib System using System.Collections.Generic using System.Diagnostics using System.IO using System.Linq using System.Text using System.Text.RegularExpressions using System.Windows using System.Windows.Resources using System.Xml.Linq using class WPCordovaClassLib.CordovaLib.ConfigHandler decl List decl Dictionary decl Dictionary bool decl string bool public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() : protected protected return call decl string.Contains() call decl string.Contains() call decl string.Contains() call decl string.Contains() call decl string.Contains() string string Uri string protected protected if == = if return decl_stmt string = decl_stmt string try decl_stmt System.Uri = new decl_stmt string = call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() call Uri.Host() if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() = + call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() else = call string.Replace() call string.Replace() call string.Replace() call string.Replace() call string.Replace() = + + + call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() catch + Uri string public public if return else decl_stmt System.Uri = new if if decl_stmt string = if == = + foreach in if if + + + || ! return else return return public public if call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() return return public public return || call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() var decl_stmt var = from in call decl Dictionary.Where() call decl Dictionary.Where() call decl Dictionary.Where() call decl Dictionary.Where() call decl Dictionary.Where() select return < var var PluginConfig var string bool string private private decl_stmt var = from in where == select foreach in decl_stmt string = string decl_stmt var = from in where == && string == select decl_stmt var = from in where == && string == select decl_stmt bool = if != = string call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() == if != decl_stmt string = string call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() + decl_stmt PluginConfig = new = var var StreamReader StreamResourceInfo var XDocument var public public decl_stmt StreamResourceInfo = new if != decl_stmt System.IO.StreamReader = new decl_stmt System.Xml.Linq.XDocument = call System.IO.StreamReader.ReadToEnd() call System.IO.StreamReader.ReadToEnd() call System.IO.StreamReader.ReadToEnd() call System.IO.StreamReader.ReadToEnd() call System.IO.StreamReader.ReadToEnd() decl_stmt var = from in call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() where == select new = string = string foreach in = decl_stmt var = from in call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() where == select new = string = string == foreach in decl_stmt var = from in call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() call XDocument.Descendants() where == select if != decl_stmt var = call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() call var.Attribute() = string else = =