log4net.Tests.Appender.log4net.Tests.Appender.Remoting.UserInterfaces.log4net.Tests.Appender.Remoting.log4net.Tests.Appender.Remoting.Data System using System.Collections using System.Reflection using System.Runtime.Remoting using System.Runtime.Remoting.Channels using System.Runtime.Remoting.Channels.Tcp using System.Threading using log4net.Appender using log4net.Core using log4net.Repository.Hierarchy using log4net.Tests.Appender.Remoting.Data using log4net.Tests.Appender.Remoting.UserInterfaces using NUnit.Framework using class attribute log4net.Tests.Appender.log4net.Tests.Appender.Remoting.UserInterfaces.log4net.Tests.Appender.Remoting.log4net.Tests.Appender.Remoting.Data.RemotingAppenderTest IChannel string Logger decl LoggingEvent public public decl_stmt log4net.Repository.Hierarchy.Logger = decl_stmt string = new call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) decl_stmt LoggingEvent = LoggingEventData Logger decl LoggingEvent public public decl_stmt log4net.Repository.Hierarchy.Logger = call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) decl_stmt LoggingEvent = decl_stmt LoggingEventData = LoggingEventData Logger decl LoggingEvent public public decl_stmt log4net.Repository.Hierarchy.Logger = call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) decl_stmt LoggingEvent = decl_stmt LoggingEventData = string Logger decl LoggingEvent public public decl_stmt log4net.Repository.Hierarchy.Logger = decl_stmt string = new using call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) call log4net.Repository.Hierarchy.Logger.Log(LoggingEvent) decl_stmt LoggingEvent = TestService decl LoggingEvent public public decl_stmt System.ServiceProcess.Tests.TestService = new call TestService.Test() call TestService.Test() call TestService.Test() call TestService.Test() call TestService.Test() decl_stmt LoggingEvent = BinaryServerFormatterSinkProvider BinaryClientFormatterSinkProvider Hashtable private private if == decl_stmt BinaryClientFormatterSinkProvider = new decl_stmt BinaryServerFormatterSinkProvider = new = decl_stmt System.Collections.Hashtable = new = = new try if || || || else endif catch typeof private static private static public public public public public public if != try catch = Logger private static private static decl_stmt log4net.Repository.Hierarchy.Logger = = call log4net.Repository.Hierarchy.Logger.AddAppender(IAppender) call log4net.Repository.Hierarchy.Logger.AddAppender(IAppender) call log4net.Repository.Hierarchy.Logger.AddAppender(IAppender) call log4net.Repository.Hierarchy.Logger.AddAppender(IAppender) call log4net.Repository.Hierarchy.Logger.AddAppender(IAppender) = RemotingAppender private static private static decl_stmt log4net.Appender.RemotingAppender = new = = = = call log4net.Appender.RemotingAppender.ActivateOptions() call log4net.Appender.RemotingAppender.ActivateOptions() call log4net.Appender.RemotingAppender.ActivateOptions() call log4net.Appender.RemotingAppender.ActivateOptions() call log4net.Appender.RemotingAppender.ActivateOptions() return public public public override public override return public public return typeof private static private static return