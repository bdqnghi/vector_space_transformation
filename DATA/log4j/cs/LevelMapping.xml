log4net.Util System using System.Collections using log4net.Core using class log4net.Util.LevelMapping super super IOptionHandler decl LevelMappingEntry Hashtable public public if call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) public public if != foreach in if >= return return decl Level decl LevelMappingEntry public public decl_stmt log4net.Core.Level = new decl_stmt log4net.Util.LevelMappingEntry = new call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Keys() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() call Hashtable.Values() foreach in =