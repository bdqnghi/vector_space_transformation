log4net.Tests.Appender log4net.Appender using log4net.Config using log4net.Core using NUnit.Framework using class attribute log4net.Tests.Appender.BufferingAppenderTest CountingAppender decl Repository BufferingForwardingAppender private private = new = new call CountingAppender.ActivateOptions() call CountingAppender.ActivateOptions() call CountingAppender.ActivateOptions() call CountingAppender.ActivateOptions() call CountingAppender.ActivateOptions() = new call log4net.Appender.BufferingForwardingAppender.AddAppender(IAppender) call log4net.Appender.BufferingForwardingAppender.AddAppender(IAppender) call log4net.Appender.BufferingForwardingAppender.AddAppender(IAppender) call log4net.Appender.BufferingForwardingAppender.AddAppender(IAppender) call log4net.Appender.BufferingForwardingAppender.AddAppender(IAppender) = call BufferingForwardingAppender.ClearFilters() call BufferingForwardingAppender.ClearFilters() call BufferingForwardingAppender.ClearFilters() call BufferingForwardingAppender.ClearFilters() call BufferingForwardingAppender.ClearFilters() = = = = = call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() ILogger public public decl_stmt log4net.Core.ILogger = call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof ILogger public public = call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() call BufferingForwardingAppender.ActivateOptions() decl_stmt log4net.Core.ILogger = call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) typeof