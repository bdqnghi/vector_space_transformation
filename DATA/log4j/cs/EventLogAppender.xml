log4net.Appender System using System.Diagnostics using System.Globalization using log4net.Util using log4net.Layout using log4net.Core using class log4net.Appender.EventLogAppender super super AppenderSkeleton Type int string short string LevelMapping SecurityContext string int int int return = return = return public public call log4net.Util.LevelMapping.Add(LevelMappingEntry) call log4net.Util.LevelMapping.Add(LevelMappingEntry) call log4net.Util.LevelMapping.Add(LevelMappingEntry) call log4net.Util.LevelMapping.Add(LevelMappingEntry) call log4net.Util.LevelMapping.Add(LevelMappingEntry) return = return = return = string string bool override public override public try if == = decl_stmt bool = decl_stmt string = using = if = if && != + + + + + + else if ! + + + + decl_stmt string = using if && != = else if ! = call log4net.Util.LevelMapping.ActivateOptions() call log4net.Util.LevelMapping.ActivateOptions() call log4net.Util.LevelMapping.ActivateOptions() call log4net.Util.LevelMapping.ActivateOptions() call log4net.Util.LevelMapping.ActivateOptions() + + + + catch + + + = EventSourceCreationData private static private static if decl_stmt System.Diagnostics.EventSourceCreationData = new = else endif int short short int string EventLogEntryType object string string object override protected override protected decl_stmt int = decl_stmt object = if != if is int = int else decl_stmt string = as string if == = call object.ToString() call object.ToString() call object.ToString() call object.ToString() call object.ToString() if != && > decl_stmt int if out = else + + decl_stmt short = decl_stmt object = if != if is short = short else decl_stmt string = as string if == = call object.ToString() call object.ToString() call object.ToString() call object.ToString() call object.ToString() if != && > decl_stmt short if out = else + + try decl_stmt string = if > = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() decl_stmt EventLogEntryType = using catch + + + + return Level2EventLogEntryType virtual protected virtual protected decl_stmt Level2EventLogEntryType = call LevelMapping.Lookup() call LevelMapping.Lookup() call LevelMapping.Lookup() call LevelMapping.Lookup() call LevelMapping.Lookup() as if != return if >= return else if == return return return = private static private static if == && >= return return