log4net.Appender System using System.Collections using System.Globalization using System.Net using System.Net.Sockets using System.Text using System.IO using System.Threading using log4net.Layout using log4net.Core using log4net.Util using class log4net.Appender.TelnetAppender super super AppenderSkeleton SocketHandler Type int return if < || || throw object + + + + else = protected override protected override if != call SocketHandler.Dispose() call SocketHandler.Dispose() call SocketHandler.Dispose() call SocketHandler.Dispose() call SocketHandler.Dispose() = return public override public override try + + = new catch throw protected override protected override if != && call SocketHandler.Send() call SocketHandler.Send() call SocketHandler.Send() call SocketHandler.Send() call SocketHandler.Send() public public public public try if != = catch if != try catch try catch = ArrayList public public decl_stmt System.Collections.ArrayList = foreach in try catch ArrayList private private lock decl_stmt System.Collections.ArrayList = call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) = ArrayList private private lock decl_stmt System.Collections.ArrayList = call System.Collections.ArrayList.Remove(Object) call System.Collections.ArrayList.Remove(Object) call System.Collections.ArrayList.Remove(Object) call System.Collections.ArrayList.Remove(Object) call System.Collections.ArrayList.Remove(Object) = ArrayList decl_stmt System.Collections.ArrayList = return != && > SocketClient int Socket private private try decl_stmt System.Net.Sockets.Socket = + call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() call Socket.RemoteEndPoint() + decl_stmt SocketClient = new decl_stmt int = if < try call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() + + + catch call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() else call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() call SocketClient.Send() call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() call SocketClient.Dispose() catch finally if != new ArrayList Socket public public decl_stmt System.Collections.ArrayList = foreach in decl_stmt System.Net.Sockets.Socket = = try call System.Net.Sockets.Socket.Shutdown(SocketShutdown) call System.Net.Sockets.Socket.Shutdown(SocketShutdown) call System.Net.Sockets.Socket.Shutdown(SocketShutdown) call System.Net.Sockets.Socket.Shutdown(SocketShutdown) call System.Net.Sockets.Socket.Shutdown(SocketShutdown) catch try call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() call System.Net.Sockets.Socket.Close() catch