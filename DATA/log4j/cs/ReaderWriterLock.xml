log4net.Util System using class log4net.Util.ReaderWriterLock decl Threading public public if if try finally call decl Threading.EnterReadLock() call decl Threading.EnterReadLock() call decl Threading.EnterReadLock() call decl Threading.EnterReadLock() call decl Threading.EnterReadLock() else call decl Threading.AcquireReaderLock() call decl Threading.AcquireReaderLock() call decl Threading.AcquireReaderLock() call decl Threading.AcquireReaderLock() call decl Threading.AcquireReaderLock() - endif else endif public public if if call decl Threading.ExitReadLock() call decl Threading.ExitReadLock() call decl Threading.ExitReadLock() call decl Threading.ExitReadLock() call decl Threading.ExitReadLock() else call decl Threading.ReleaseReaderLock() call decl Threading.ReleaseReaderLock() call decl Threading.ReleaseReaderLock() call decl Threading.ReleaseReaderLock() call decl Threading.ReleaseReaderLock() endif else endif public public if if try finally call decl Threading.EnterWriteLock() call decl Threading.EnterWriteLock() call decl Threading.EnterWriteLock() call decl Threading.EnterWriteLock() call decl Threading.EnterWriteLock() else call decl Threading.AcquireWriterLock() call decl Threading.AcquireWriterLock() call decl Threading.AcquireWriterLock() call decl Threading.AcquireWriterLock() call decl Threading.AcquireWriterLock() - endif else endif public public if if call decl Threading.ExitWriteLock() call decl Threading.ExitWriteLock() call decl Threading.ExitWriteLock() call decl Threading.ExitWriteLock() call decl Threading.ExitWriteLock() else call decl Threading.ReleaseWriterLock() call decl Threading.ReleaseWriterLock() call decl Threading.ReleaseWriterLock() call decl Threading.ReleaseWriterLock() call decl Threading.ReleaseWriterLock() endif else endif