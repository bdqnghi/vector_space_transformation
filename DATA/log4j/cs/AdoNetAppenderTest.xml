log4net.Tests.Appender System using System.Data using System.Xml using log4net.Appender using log4net.Config using log4net.Core using log4net.Layout using log4net.Repository using log4net.Tests.Appender.AdoNet using log4net.Util using NUnit.Framework using class attribute log4net.Tests.Appender.AdoNetAppenderTest ILoggerRepository AdoNetAppender ILog public public decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.Appender.AdoNetAppender = new = - = call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() decl_stmt log4net.ILog = call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) ILoggerRepository int AdoNetAppender ILog public public decl_stmt log4net.Repository.ILoggerRepository = decl_stmt int = decl_stmt log4net.Appender.AdoNetAppender = new = = call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() decl_stmt log4net.ILog = for = < ++ call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) + XmlDocument ILoggerRepository IDbCommand ILog IDbDataParameter public public decl_stmt System.Xml.XmlDocument = new region region region region call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) endregion decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) decl_stmt System.Data.IDbCommand = decl_stmt System.Data.IDbDataParameter = = = = string XmlDocument ILoggerRepository IDbCommand ILog IDbDataParameter public public decl_stmt System.Xml.XmlDocument = new region region region region call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) endregion decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = for = < ++ call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) decl_stmt System.Data.IDbCommand = decl_stmt System.Data.IDbDataParameter = = = = string XmlDocument ILoggerRepository IDbCommand ILog IDbDataParameter public public decl_stmt System.Xml.XmlDocument = new region region region region call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) call System.Xml.XmlDocument.LoadXml(string) endregion decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) decl_stmt System.Data.IDbCommand = decl_stmt System.Data.IDbDataParameter = RawPropertyLayout ILog ILoggerRepository IDbDataParameter AdoNetAppenderParameter IDbCommand AdoNetAppender public public decl_stmt AdoNetAppenderParameter = new = = = decl_stmt log4net.Layout.RawPropertyLayout = new = = decl_stmt log4net.Appender.AdoNetAppender = new = typeof = - = call log4net.Appender.AdoNetAppender.AddParameter(AdoNetAppenderParameter) call log4net.Appender.AdoNetAppender.AddParameter(AdoNetAppenderParameter) call log4net.Appender.AdoNetAppender.AddParameter(AdoNetAppenderParameter) call log4net.Appender.AdoNetAppender.AddParameter(AdoNetAppenderParameter) call log4net.Appender.AdoNetAppender.AddParameter(AdoNetAppenderParameter) call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() call log4net.Appender.AdoNetAppender.ActivateOptions() decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) call log4net.ILog.Debug(object,Exception) decl_stmt System.Data.IDbCommand = decl_stmt System.Data.IDbDataParameter =