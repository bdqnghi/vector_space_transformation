log4net.Tests.Layout System using System.IO using System.Xml using log4net.Config using log4net.Core using log4net.Layout using log4net.Repository using log4net.Tests.Appender using log4net.Util using NUnit.Framework using System.Globalization using class attribute log4net.Tests.Layout.XmlLayoutTest CultureInfo CultureInfo public public = = = = public public = = LoggingEventData private private decl_stmt LoggingEventData = new = = = = = new = = = = = = new return private static private static return + if || || || else endif private static private static return + if || || || else endif string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() string LoggingEventData TextWriter XmlLayout public public decl_stmt System.IO.TextWriter = new decl_stmt log4net.Layout.XmlLayout = new decl_stmt LoggingEventData = = call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() call XmlLayout.Format() new decl_stmt string = call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() call TextWriter.ToString() XmlLayout ILog ILoggerRepository string StringAppender LoggingEventData public public decl_stmt LoggingEventData = = decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() new decl_stmt string = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() XmlLayout ILog ILoggerRepository string StringAppender LoggingEventData public public decl_stmt LoggingEventData = = decl_stmt log4net.Layout.XmlLayout = new = decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() new decl_stmt string = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() XmlLayout ILog ILoggerRepository string StringAppender LoggingEventData public public decl_stmt LoggingEventData = = decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() new decl_stmt string = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() XmlLayout ILog ILoggerRepository string StringAppender LoggingEventData public public decl_stmt LoggingEventData = = decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() new decl_stmt string = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() XmlLayout ILog ILoggerRepository string StringAppender LoggingEventData public public decl_stmt LoggingEventData = = decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() call ILog.Logger() new decl_stmt string = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() decl Action StringAppender ILog var ILoggerRepository XmlLayout public public decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = decl_stmt System.Xml.Xsl.XsltOld.Action < = try throw new catch call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) decl_stmt var = new call var.LoadXml() call var.LoadXml() call var.LoadXml() call var.LoadXml() call var.LoadXml() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() decl Action StringAppender var ILog ILoggerRepository var XmlLayout var var public public decl_stmt log4net.Layout.XmlLayout = new decl_stmt log4net.Tests.Appender.StringAppender = new = decl_stmt log4net.Repository.ILoggerRepository = decl_stmt log4net.ILog = decl_stmt System.Xml.Xsl.XsltOld.Action < = try throw new catch call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) call log4net.ILog.Error(object) decl_stmt var = call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() call log4net.Tests.Appender.StringAppender.GetString() decl_stmt var = call var.IndexOf() call var.IndexOf() call var.IndexOf() call var.IndexOf() call var.IndexOf() + decl_stmt var = call var.IndexOf() call var.IndexOf() call var.IndexOf() call var.IndexOf() call var.IndexOf() decl_stmt var = call var.Substring() call var.Substring() call var.Substring() call var.Substring() call var.Substring() - if call var.StartsWith() call var.StartsWith() call var.StartsWith() call var.StartsWith() call var.StartsWith() else