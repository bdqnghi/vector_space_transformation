log4net.Appender System using System.Collections using System.Threading using System.Runtime.Remoting.Messaging using log4net.Layout using log4net.Core using log4net.Util using class log4net.Appender.RemotingAppender super super BufferingAppenderSkeleton IRemoteLoggingSink ManualResetEvent string int return = IDictionary endif override public endif override public decl_stmt System.Collections.Generic.IDictionary = new = = typeof override protected override protected if ! new + + override protected override protected if ! call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() call ManualResetEvent.WaitOne() * + + private private call ManualResetEvent.Reset() call ManualResetEvent.Reset() call ManualResetEvent.Reset() call ManualResetEvent.Reset() call ManualResetEvent.Reset() ref private private if ref <= call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() call ManualResetEvent.Set() decl LoggingEvent private private try decl_stmt LoggingEvent = call IRemoteLoggingSink.LogEvents() call IRemoteLoggingSink.LogEvents() call IRemoteLoggingSink.LogEvents() call IRemoteLoggingSink.LogEvents() call IRemoteLoggingSink.LogEvents() catch finally