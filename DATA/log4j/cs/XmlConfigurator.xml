log4net.Config System using System.Xml using System.Collections using System.IO using System.Reflection using System.Threading using System.Net using log4net.Appender using log4net.Util using log4net.Repository using class log4net.Config.XmlConfigurator Type Hashtable static public static public return ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new = return string XmlElement static private static private + + try + + catch if new else try decl_stmt System.Xml.XmlElement = if = as else = as endif if == else catch if >= else decl_stmt string = + + + endif ILoggerRepository ArrayList static public static public decl_stmt System.Collections.ArrayList = new decl_stmt log4net.Repository.ILoggerRepository = using new = return ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new + + = return ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new return ILoggerRepository ArrayList static public static public decl_stmt System.Collections.ArrayList = new decl_stmt log4net.Repository.ILoggerRepository = using new = return ILoggerRepository ArrayList static public static public decl_stmt System.Collections.ArrayList = new decl_stmt log4net.Repository.ILoggerRepository = using new = return ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new = return FileStream static private static private + + + + if == else if decl_stmt FileStream = for = -- >= try = break catch if == + + = if != try finally call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() call FileStream.Close() else + + ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new = return WebRequest WebResponse static private static private + + + + if == else if new else decl_stmt System.Net.WebRequest = try = catch + + if != if ! try = catch endif try decl_stmt System.Net.WebResponse = call System.Net.WebRequest.GetResponse() call System.Net.WebRequest.GetResponse() call System.Net.WebRequest.GetResponse() call System.Net.WebRequest.GetResponse() call System.Net.WebRequest.GetResponse() if != try using = call System.Net.WebResponse.GetResponseStream() call System.Net.WebResponse.GetResponseStream() call System.Net.WebResponse.GetResponseStream() call System.Net.WebResponse.GetResponseStream() call System.Net.WebResponse.GetResponseStream() finally call System.Net.WebResponse.Close() call System.Net.WebResponse.Close() call System.Net.WebResponse.Close() call System.Net.WebResponse.Close() call System.Net.WebResponse.Close() catch + + ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new = return XmlDocument XmlReaderSettings XmlNodeList XmlValidatingReader static private static private + + if == else decl_stmt System.Xml.XmlDocument = new try if decl_stmt System.Xml.XmlTextReader = new elif decl_stmt System.Xml.XmlReaderSettings = new if ! && ! = else = endif decl_stmt System.Xml.XmlReader = else decl_stmt System.Xml.XmlValidatingReader = new new = = endif call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) call System.Xml.XmlDocument.Load(TextReader) catch = if != decl_stmt System.Xml.XmlNodeList = call System.Xml.XmlDocument.GetElementsByTagName(String,String) call System.Xml.XmlDocument.GetElementsByTagName(String,String) call System.Xml.XmlDocument.GetElementsByTagName(String,String) call System.Xml.XmlDocument.GetElementsByTagName(String,String) call System.Xml.XmlDocument.GetElementsByTagName(String,String) if == else if > + + else as ILoggerRepository ArrayList static public static public decl_stmt System.Collections.ArrayList = new decl_stmt log4net.Repository.ILoggerRepository = using new = return ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new = return ConfigureAndWatchHandler static private static private + + + + if == else try lock decl_stmt ConfigureAndWatchHandler = if != call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call System.Collections.Hashtable.Remove(Object) call ConfigureAndWatchHandler.Dispose() call ConfigureAndWatchHandler.Dispose() call ConfigureAndWatchHandler.Dispose() call ConfigureAndWatchHandler.Dispose() call ConfigureAndWatchHandler.Dispose() = new = catch + + private private + + + + private private + + + + private private endif public endif public = XmlElement IXmlRepositoryConfigurator XmlDocument static private static private if == else if == else + + decl_stmt log4net.Repository.IXmlRepositoryConfigurator = as if == + + else decl_stmt System.Xml.XmlDocument = new decl_stmt System.Xml.XmlElement = call XmlDocument.AppendChild() call XmlDocument.AppendChild() call XmlDocument.AppendChild() call XmlDocument.AppendChild() call XmlDocument.AppendChild() call System.Xml.XmlDocument.ImportNode(XmlNode,bool) call System.Xml.XmlDocument.ImportNode(XmlNode,bool) call System.Xml.XmlDocument.ImportNode(XmlNode,bool) call System.Xml.XmlDocument.ImportNode(XmlNode,bool) call System.Xml.XmlDocument.ImportNode(XmlNode,bool) call IXmlRepositoryConfigurator.Configure() call IXmlRepositoryConfigurator.Configure() call IXmlRepositoryConfigurator.Configure() call IXmlRepositoryConfigurator.Configure() call IXmlRepositoryConfigurator.Configure()