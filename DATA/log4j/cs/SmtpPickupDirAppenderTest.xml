log4net.Tests.Appender System using System.Collections using System.Diagnostics using System.IO using System.Text using log4net.Appender using log4net.Core using log4net.Layout using NUnit.Framework using class attribute log4net.Tests.Appender.SmtpPickupDirAppenderTest string return public public + public public + + + public public + + + private private private private public public public public private private if decl Repository decl Hierarchy decl Hierarchy private private decl_stmt log4net.Tests.Hierarchy.Hierarchy = decl_stmt log4net.Layout.PatternLayout = new = call decl Hierarchy.ActivateOptions() call decl Hierarchy.ActivateOptions() call decl Hierarchy.ActivateOptions() call decl Hierarchy.ActivateOptions() call decl Hierarchy.ActivateOptions() = call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() call decl Repository.Root() = decl_stmt log4net.Core.ILogger = call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() call decl Repository.GetLogger() return SmtpPickupDirAppender private private decl_stmt log4net.Appender.SmtpPickupDirAppender = new = = return decl Repository private static private static decl_stmt log4net.Tests.Hierarchy.Hierarchy = call decl Repository.ResetConfiguration() call decl Repository.ResetConfiguration() call decl Repository.ResetConfiguration() call decl Repository.ResetConfiguration() call decl Repository.ResetConfiguration() = new typeof var ILogger string SilentErrorHandler decl string var var SmtpPickupDirAppender bool public public decl_stmt SilentErrorHandler = new decl_stmt log4net.Appender.SmtpPickupDirAppender = decl_stmt log4net.Core.ILogger = call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) decl_stmt string = decl_stmt bool = decl_stmt string const const = foreach in if decl_stmt var = decl_stmt var = decl_stmt var = - = string var SilentErrorHandler SmtpPickupDirAppender ILogger public public decl_stmt string const const = decl_stmt SilentErrorHandler = new decl_stmt log4net.Appender.SmtpPickupDirAppender = = decl_stmt log4net.Core.ILogger = call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) decl_stmt var = new + new call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() - var SilentErrorHandler SmtpPickupDirAppender ILogger public public decl_stmt SilentErrorHandler = new decl_stmt log4net.Appender.SmtpPickupDirAppender = decl_stmt log4net.Core.ILogger = call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) call log4net.Core.ILogger.Log(Type,Level,object,Exception) decl_stmt var = new new