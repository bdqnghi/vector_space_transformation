log4net.Core System using System.Collections using System.Configuration using System.IO using System.Reflection using log4net.Config using log4net.Util using log4net.Repository using class log4net.Core.DefaultRepositorySelector super super IRepositorySelector Hashtable Hashtable Type Hashtable Type string += -= public public if == throw new return ILoggerRepository public public if == throw new lock decl_stmt log4net.Repository.ILoggerRepository = as if == throw new + + return public public return ILoggerRepository string Type public public if == throw new if == = lock decl_stmt log4net.Repository.ILoggerRepository = as if == + + decl_stmt string = decl_stmt System.Type = if ref ref + + + + + + = as if == = if try catch + + else + + + call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() + if try catch + + = return ILoggerRepository ILoggerRepository public public if == throw new if == = lock decl_stmt log4net.Repository.ILoggerRepository = = as if != throw new + + else decl_stmt log4net.Repository.ILoggerRepository = as if != if call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() == + + + + = = else + + + + + + + call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() call ILoggerRepository.GetType() + if == + + + + = = = return public public lock return call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() decl ILoggerRepository ICollection public public lock decl_stmt System.Collections.Generic.ICollection = decl_stmt log4net.Repository.ILoggerRepository = new call System.Collections.Generic.ICollection.CopyTo(T,int) call System.Collections.Generic.ICollection.CopyTo(T,int) call System.Collections.Generic.ICollection.CopyTo(T,int) call System.Collections.Generic.ICollection.CopyTo(T,int) call System.Collections.Generic.ICollection.CopyTo(T,int) return public public if == throw new if == throw new lock if call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) if != throw new + + + + else if call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) call System.Collections.Hashtable.Contains(Object) if != throw new + + + + else = LoggerRepositoryCreationEventHandler protected virtual protected virtual decl_stmt LoggerRepositoryCreationEventHandler = if != new decl log4net decl object private private ref ref ref ref if == throw new try + + + + catch try decl_stmt object = typeof if == || == + + else if > + + decl_stmt log4net.Config.RepositoryAttribute = as if == + + else if != = if != if typeof = else + + catch FileInfo string bool string string decl object string Uri private private if == throw new if == throw new decl_stmt object = typeof if != && > foreach in if != try catch + + if == decl_stmt string = if != && > decl_stmt string = try = catch + + decl_stmt string = if != = decl_stmt bool = if || || || out else decl_stmt string = if != && > try = catch endif if decl_stmt System.IO.FileInfo = try = new catch + + try + + catch + + else decl_stmt System.Uri = try = new catch + + if != + call System.Uri.ToString() call System.Uri.ToString() call System.Uri.ToString() call System.Uri.ToString() call System.Uri.ToString() + try catch + + decl object private private if == throw new if == throw new decl_stmt object = typeof if != && > foreach in try catch + + decl object private private if == throw new if == throw new decl_stmt object = typeof if != && > foreach in try catch + +