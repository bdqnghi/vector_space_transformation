SampleAppendersApp.Appender System using System.Threading using log4net.Appender using log4net.Core using log4net.Util using class SampleAppendersApp.Appender.AsyncAppender super super IAppender super IBulkAppender super IOptionHandler super IAppenderAttachable AppenderAttachedImpl FixFlags string return = public public return = public public lock if != call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() public public = new public public foreach in = new LoggingEvent decl LoggingEvent private private if != decl_stmt LoggingEvent = as if != call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() else decl_stmt LoggingEvent = as if != call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() call AppenderAttachedImpl.AppendLoopOnAppenders() public public if == throw new lock if == = new call log4net.Util.AppenderAttachedImpl.AddAppender(IAppender) call log4net.Util.AppenderAttachedImpl.AddAppender(IAppender) call log4net.Util.AppenderAttachedImpl.AddAppender(IAppender) call log4net.Util.AppenderAttachedImpl.AddAppender(IAppender) call log4net.Util.AppenderAttachedImpl.AddAppender(IAppender) lock if == return else return public public lock if == || == return return call log4net.Util.AppenderAttachedImpl.GetAppender(string) call log4net.Util.AppenderAttachedImpl.GetAppender(string) call log4net.Util.AppenderAttachedImpl.GetAppender(string) call log4net.Util.AppenderAttachedImpl.GetAppender(string) call log4net.Util.AppenderAttachedImpl.GetAppender(string) public public lock if != call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() call log4net.Util.AppenderAttachedImpl.RemoveAllAppenders() = public public lock if != && != return call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) return public public lock if != && != return call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) call log4net.Util.AppenderAttachedImpl.RemoveAppender(string) return