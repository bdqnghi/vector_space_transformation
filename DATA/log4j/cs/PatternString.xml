log4net.Util System using System.Collections using System.IO using log4net.Util using log4net.Util.PatternStringConverters using log4net.Core using class log4net.Util.PatternString super super IOptionHandler Hashtable PatternConverter Hashtable string return = virtual public virtual public = PatternParser ConverterInfo private private decl_stmt log4net.Util.PatternParser = new foreach in decl_stmt log4net.Util.ConverterInfo = new = string = call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() call PatternParser.PatternConverters() foreach in = return PatternConverter public public if == throw new decl_stmt log4net.Util.PatternConverter = while != call log4net.Util.PatternConverter.Format(TextWriter,object) call log4net.Util.PatternConverter.Format(TextWriter,object) call log4net.Util.PatternConverter.Format(TextWriter,object) call log4net.Util.PatternConverter.Format(TextWriter,object) call log4net.Util.PatternConverter.Format(TextWriter,object) = StringWriter public public decl_stmt System.IO.StringWriter = new return call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() public public if == throw new if ! typeof throw new + + = ConverterInfo public public if == throw new if == throw new decl_stmt log4net.Util.ConverterInfo = new = =