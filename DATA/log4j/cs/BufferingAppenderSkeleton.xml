log4net.Appender System using System.Collections using log4net.Util using log4net.Core using class log4net.Appender.BufferingAppenderSkeleton super super AppenderSkeleton int CyclicBuffer bool ITriggeringEventEvaluator FixFlags ITriggeringEventEvaluator bool int return = return = return = return = return == if = else = return = public virtual public virtual ArrayList decl LoggingEvent public virtual public virtual lock if != && > if if if != decl_stmt LoggingEvent = call log4net.Util.CyclicBuffer.PopAll() call log4net.Util.CyclicBuffer.PopAll() call log4net.Util.CyclicBuffer.PopAll() call log4net.Util.CyclicBuffer.PopAll() call log4net.Util.CyclicBuffer.PopAll() decl_stmt System.Collections.ArrayList = new foreach in if call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) if > call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) typeof else call log4net.Util.CyclicBuffer.Clear() call log4net.Util.CyclicBuffer.Clear() call log4net.Util.CyclicBuffer.Clear() call log4net.Util.CyclicBuffer.Clear() call log4net.Util.CyclicBuffer.Clear() else override public override public if && == + + if > = new else = override protected override protected LoggingEvent override protected override protected if == || <= if ! || != && call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() || != && call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() if = new else = decl_stmt LoggingEvent = call log4net.Util.CyclicBuffer.Append(LoggingEvent) call log4net.Util.CyclicBuffer.Append(LoggingEvent) call log4net.Util.CyclicBuffer.Append(LoggingEvent) call log4net.Util.CyclicBuffer.Append(LoggingEvent) call log4net.Util.CyclicBuffer.Append(LoggingEvent) if != if ! else if == || ! call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() = if != && call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() else if != new else if != && call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() call ITriggeringEventEvaluator.IsTriggeringEvent() decl LoggingEvent decl LoggingEvent virtual protected virtual protected decl_stmt LoggingEvent = if == else if == new else decl_stmt LoggingEvent = new + =