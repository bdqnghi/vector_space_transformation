log4net.Config System using System.Collections using System.Reflection using log4net.Appender using log4net.Layout using log4net.Util using log4net.Repository using log4net.Repository.Hierarchy using class log4net.Config.BasicConfigurator Type static public static public return static public static public return new ILoggerRepository ArrayList static public static public params params params decl_stmt System.Collections.ArrayList = new decl_stmt log4net.Repository.ILoggerRepository = using new = return PatternLayout ConsoleAppender ArrayList static public static public decl_stmt System.Collections.ArrayList = new using new decl_stmt log4net.Layout.PatternLayout = new = call log4net.Layout.PatternLayout.ActivateOptions() call log4net.Layout.PatternLayout.ActivateOptions() call log4net.Layout.PatternLayout.ActivateOptions() call log4net.Layout.PatternLayout.ActivateOptions() call log4net.Layout.PatternLayout.ActivateOptions() decl_stmt log4net.Appender.ConsoleAppender = new = call ConsoleAppender.ActivateOptions() call ConsoleAppender.ActivateOptions() call ConsoleAppender.ActivateOptions() call ConsoleAppender.ActivateOptions() call ConsoleAppender.ActivateOptions() = return static public static public return new ArrayList static public static public params params params decl_stmt System.Collections.ArrayList = new using new = return IBasicRepositoryConfigurator static private static private params params params decl_stmt log4net.Repository.IBasicRepositoryConfigurator = as if != call IBasicRepositoryConfigurator.Configure() call IBasicRepositoryConfigurator.Configure() call IBasicRepositoryConfigurator.Configure() call IBasicRepositoryConfigurator.Configure() call IBasicRepositoryConfigurator.Configure() else + +