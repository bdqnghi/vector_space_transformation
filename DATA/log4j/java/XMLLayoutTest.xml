org.apache.log4j.xml org.apache.log4j.Layout import org.apache.log4j.LayoutTest import org.apache.log4j.Level import org.apache.log4j.Logger import org.apache.log4j.NDC import org.apache.log4j.MDC import org.apache.log4j.spi.LoggingEvent import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.Node import org.w3c.dom.NodeList import org.xml.sax.InputSource import java.io.Reader import java.io.StringReader import java.util.Hashtable import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import class org.apache.log4j.xml.XMLLayoutTest super super extends public public if != public public protected protected return new Document DocumentBuilder DocumentBuilderFactory Reader private private final final throws decl_stmt DocumentBuilderFactory = call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setCoalescing() call DocumentBuilderFactory.setCoalescing() call DocumentBuilderFactory.setCoalescing() call DocumentBuilderFactory.setCoalescing() call DocumentBuilderFactory.setCoalescing() decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() decl_stmt java.io.Reader = new decl_stmt javax.swing.text.Document = call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() new return call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() private private final final final final Node private private final final final final decl_stmt sun.tools.tree.Node = call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() Node private private final final final final decl_stmt sun.tools.tree.Node = call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() String Node private private final final final final decl_stmt sun.tools.tree.Node = call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() decl_stmt java.lang.String = call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() int Element private private final final final final final final decl_stmt int = for = != = if == decl_stmt javax.swing.text.Element = call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() ++ XMLLayout Element int String Logger LoggingEvent public public throws decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.xml.XMLLayout = decl_stmt java.lang.String = call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) decl_stmt javax.swing.text.Element = decl_stmt int = for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != = switch case ++ break case break case break default: break XMLLayout Element int String Logger LoggingEvent Exception public public throws decl_stmt org.apache.log4j.Logger = decl_stmt Exception = new decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.xml.XMLLayout = decl_stmt java.lang.String = call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) decl_stmt javax.swing.text.Element = decl_stmt int = for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != = switch case ++ if == else break case break case break default: break XMLLayout Element int String Logger LoggingEvent public public throws decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.xml.XMLLayout = decl_stmt java.lang.String = call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) decl_stmt javax.swing.text.Element = decl_stmt int = for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != = switch case ++ if == else break case break case break default: break XMLLayout public public decl_stmt org.apache.log4j.xml.XMLLayout = new call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call XMLLayout.setLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() call org.apache.log4j.xml.XMLLayout.getLocationInfo() XMLLayout public public decl_stmt org.apache.log4j.xml.XMLLayout = new call org.apache.log4j.xml.XMLLayout.activateOptions() call org.apache.log4j.xml.XMLLayout.activateOptions() call org.apache.log4j.xml.XMLLayout.activateOptions() call org.apache.log4j.xml.XMLLayout.activateOptions() call org.apache.log4j.xml.XMLLayout.activateOptions() XMLLayout Level String Element int Exception String Logger LoggingEvent Hashtable String public public throws decl_stmt java.lang.String = decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.Level = new decl_stmt Exception = new decl_stmt java.lang.String = decl_stmt java.util.Hashtable = if != call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.xml.XMLLayout = call org.apache.log4j.xml.XMLLayout.setProperties(boolean) call org.apache.log4j.xml.XMLLayout.setProperties(boolean) call org.apache.log4j.xml.XMLLayout.setProperties(boolean) call org.apache.log4j.xml.XMLLayout.setProperties(boolean) call org.apache.log4j.xml.XMLLayout.setProperties(boolean) decl_stmt java.lang.String = call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) call org.apache.log4j.xml.XMLLayout.format(LoggingEvent) = if != call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() decl_stmt javax.swing.text.Element = decl_stmt int = for = call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() call Element.getFirstChild() != = switch case ++ switch case break case break case break case break default: break break case break case break default: break Layout Level Element String NodeList String Logger StringBuffer LoggingEvent public public throws decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.Level = decl_stmt java.lang.String = decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.Layout = decl_stmt java.lang.String = call Layout.format() call Layout.format() call Layout.format() call Layout.format() call Layout.format() decl_stmt javax.swing.text.Element = decl_stmt NodeList = call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() decl_stmt java.lang.StringBuffer = new for = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() != = call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() Layout Level String NodeList Element String Logger StringBuffer LoggingEvent public public throws decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.Level = decl_stmt java.lang.String = decl_stmt org.apache.log4j.spi.LoggingEvent = new new decl_stmt org.apache.log4j.Layout = decl_stmt java.lang.String = call Layout.format() call Layout.format() call Layout.format() call Layout.format() call Layout.format() decl_stmt javax.swing.text.Element = decl_stmt NodeList = call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call Element.getElementsByTagName() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() decl_stmt java.lang.StringBuffer = new for = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() != = call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() != -