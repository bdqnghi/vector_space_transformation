org.apache.log4j.net junit.framework.TestCase import junit.framework.TestSuite import junit.framework.Test import org.apache.log4j.* import org.apache.log4j.util.* import org.apache.log4j.Logger import org.apache.log4j.NDC import org.apache.log4j.xml.XLevel import class org.apache.log4j.net.SocketServerTestCase super super extends String String String String String String String String String int SocketAppender Logger String String String String Logger String String public public public public = call Logger.removeAllAppenders() call Logger.removeAllAppenders() call Logger.removeAllAppenders() call Logger.removeAllAppenders() call Logger.removeAllAppenders() ControlFilter public public throws = new call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter public public throws = new call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() if ! decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new AsyncAppender ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) decl_stmt org.apache.log4j.AsyncAppender = new call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() if ! decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new AsyncAppender ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) decl_stmt org.apache.log4j.AsyncAppender = new call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.setLocationInfo(boolean) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call org.apache.log4j.AsyncAppender.addAppender(Appender) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() if ! decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() if ! decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter public public throws = new call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call org.apache.log4j.net.SocketAppender.setLocationInfo(boolean) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() if != - if ! decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new int Exception String Logger static static decl_stmt java.lang.String = decl_stmt int = - decl_stmt org.apache.log4j.Logger = call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) + ++ call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) + ++ call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) call org.apache.log4j.Logger.trace(Object) + ++ call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + ++ call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + ++ call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) + ++ decl_stmt Exception = new call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + ++ public public try * catch TestSuite public static public static decl_stmt TestSuite = new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() call TestSuite.addTest() new return