org.apache.log4j.spi java.io.InterruptedIOException import java.io.ObjectInputStream import java.io.ObjectOutputStream import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.util.Collections import java.util.HashMap import java.util.Hashtable import java.util.Map import java.util.Set import org.apache.log4j.Category import org.apache.log4j.Level import org.apache.log4j.MDC import org.apache.log4j.NDC import org.apache.log4j.Priority import org.apache.log4j.helpers.Loader import org.apache.log4j.helpers.LogLog import class org.apache.log4j.spi.LoggingEvent super super implements Hashtable boolean decl Integer String Priority String long String String Object LocationInfo boolean Hashtable decl Class long String ThrowableInformation String Category long public public if == = new new return public public return public public return public public return public public if != return else return public public if = = return Object public public decl_stmt java.lang.Object if != = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if != return return Hashtable public public if = decl_stmt java.util.Hashtable = if != = call java.util.Hashtable.clone() call java.util.Hashtable.clone() call java.util.Hashtable.clone() call java.util.Hashtable.clone() call java.util.Hashtable.clone() LoggerRepository RendererSupport public public if == && != if instanceof = else decl_stmt org.apache.log4j.spi.LoggerRepository = call org.apache.log4j.Category.getLoggerRepository() call org.apache.log4j.Category.getLoggerRepository() call org.apache.log4j.Category.getLoggerRepository() call org.apache.log4j.Category.getLoggerRepository() call org.apache.log4j.Category.getLoggerRepository() if instanceof decl_stmt org.apache.log4j.spi.RendererSupport = = call org.apache.log4j.spi.RendererSupport.getRendererMap() call org.apache.log4j.spi.RendererSupport.getRendererMap() call org.apache.log4j.spi.RendererSupport.getRendererMap() call org.apache.log4j.spi.RendererSupport.getRendererMap() call org.apache.log4j.spi.RendererSupport.getRendererMap() else = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return public static public static return public public if == = return public public return public public if == return else return call org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep() call org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep() call org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep() call org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep() call org.apache.log4j.spi.ThrowableInformation.getThrowableStrRep() String int Method Class private private throws decl_stmt int = try decl_stmt java.lang.String = if == = else decl_stmt com.sun.jdi.Method = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if == decl_stmt java.lang.Class = = call Class.getDeclaredMethod() call Class.getDeclaredMethod() call Class.getDeclaredMethod() call Class.getDeclaredMethod() call Class.getDeclaredMethod() call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) new new catch if instanceof || instanceof = catch = catch = catch = private private throws if == = new private private throws Class private private throws call org.apache.log4j.Priority.toInt() call org.apache.log4j.Priority.toInt() call org.apache.log4j.Priority.toInt() call org.apache.log4j.Priority.toInt() call org.apache.log4j.Priority.toInt() decl_stmt java.lang.Class = call Priority.getClass() call Priority.getClass() call Priority.getClass() call Priority.getClass() call Priority.getClass() if == else call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() public final public final final final final final if == if == = new call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) String Object public final public final final final decl_stmt java.lang.Object = decl_stmt java.lang.String = if != = call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() return public final public final return != public final public final return public public return Map public public decl_stmt java.util.Map if == = new else = return public public return public public if == if == = new return call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object)