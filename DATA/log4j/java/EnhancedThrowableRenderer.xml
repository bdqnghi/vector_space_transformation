org.apache.log4j org.apache.log4j.spi.ThrowableRenderer import java.io.File import java.lang.reflect.Method import java.net.URL import java.security.CodeSource import java.util.HashMap import java.util.Map import class org.apache.log4j.EnhancedThrowableRenderer super super implements Method Method decl Object Map decl Object decl String public public final final if != try decl_stmt java.lang.Object = decl_stmt java.lang.Object = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) decl_stmt java.lang.String = new + = decl_stmt java.util.Map = new for = < ++ + = return catch return int int String CodeSource Package Object String int URL StringBuffer String Class private private final final final final decl_stmt java.lang.StringBuffer = new call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) try decl_stmt java.lang.String = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) decl_stmt java.lang.Object = if != call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) else decl_stmt java.lang.Class = decl_stmt int = call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.length() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) try decl_stmt java.security.CodeSource = call Class.getProtectionDomain() call Class.getProtectionDomain() call Class.getProtectionDomain() call Class.getProtectionDomain() call Class.getProtectionDomain() if != decl_stmt java.net.URL = call java.security.CodeSource.getLocation() call java.security.CodeSource.getLocation() call java.security.CodeSource.getLocation() call java.security.CodeSource.getLocation() call java.security.CodeSource.getLocation() if != if call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() decl_stmt java.lang.String = call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() if != decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) decl_stmt int = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) if > = if <= || == call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() - call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) else call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + else call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) catch call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) decl_stmt sun.tools.java.Package = call java.lang.Class.getPackage() call java.lang.Class.getPackage() call java.lang.Class.getPackage() call java.lang.Class.getPackage() call java.lang.Class.getPackage() if != decl_stmt java.lang.String = call sun.tools.java.Package.getImplementationVersion() call sun.tools.java.Package.getImplementationVersion() call sun.tools.java.Package.getImplementationVersion() call sun.tools.java.Package.getImplementationVersion() call sun.tools.java.Package.getImplementationVersion() if != call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.substring(int) call java.lang.StringBuffer.substring(int) call java.lang.StringBuffer.substring(int) call java.lang.StringBuffer.substring(int) call java.lang.StringBuffer.substring(int) catch return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() private private final final throws try return catch try return catch return