org.apache.log4j java.io.FileInputStream import java.io.IOException import java.io.InputStream import java.io.InterruptedIOException import java.net.URLConnection import java.util.Enumeration import java.util.Hashtable import java.util.Properties import java.util.StringTokenizer import java.util.Vector import java.util.Iterator import java.util.Map import org.apache.log4j.config.PropertySetter import org.apache.log4j.helpers.FileWatchdog import org.apache.log4j.helpers.LogLog import org.apache.log4j.helpers.OptionConverter import org.apache.log4j.or.RendererMap import org.apache.log4j.spi.Configurator import org.apache.log4j.spi.Filter import org.apache.log4j.spi.LoggerFactory import org.apache.log4j.spi.LoggerRepository import org.apache.log4j.spi.OptionHandler import org.apache.log4j.spi.RendererSupport import org.apache.log4j.spi.ThrowableRenderer import org.apache.log4j.spi.ThrowableRendererSupport import org.apache.log4j.spi.ErrorHandler import class org.apache.log4j.PropertyConfigurator super super implements String String String String LoggerRepository String String String String String String String String Hashtable String String LoggerFactory String String FileInputStream Properties public public decl_stmt java.util.Properties = new decl_stmt FileInputStream = try = new call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() catch if instanceof || instanceof + + + + return finally if != try call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() catch catch static public static public new public static public static new public static public static new static public static public new static public static public PropertyWatchdog static public static public decl_stmt PropertyWatchdog = new call PropertyWatchdog.setDelay() call PropertyWatchdog.setDelay() call PropertyWatchdog.setDelay() call PropertyWatchdog.setDelay() call PropertyWatchdog.setDelay() call PropertyWatchdog.start() call PropertyWatchdog.start() call PropertyWatchdog.start() call PropertyWatchdog.start() call PropertyWatchdog.start() String String String public public = decl_stmt java.lang.String = if == = if != if != decl_stmt java.lang.String = if != && decl_stmt java.lang.String = if != + + call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() Properties public public decl_stmt java.util.Properties = new try call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) catch if instanceof + + + + return URLConnection InputStream Properties public public decl_stmt java.util.Properties = new + decl_stmt java.io.InputStream = decl_stmt sun.net.www.URLConnection = try = call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) = call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) call java.util.Properties.load(Reader) catch if instanceof || instanceof + + + + return finally if != try call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() catch catch catch String protected protected decl_stmt java.lang.String = if != + + = + String Logger String decl_stmt java.lang.String = decl_stmt java.lang.String = if == = = if == else decl_stmt org.apache.log4j.Logger = synchronized ThrowableRenderer String String String Enumeration String Logger String PropertySetter protected protected decl_stmt java.util.Enumeration = while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt java.lang.String = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) || call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt java.lang.String = decl_stmt org.apache.log4j.Logger = synchronized else if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt java.lang.String = if instanceof else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if instanceof decl_stmt org.apache.log4j.spi.ThrowableRenderer = if == else decl_stmt org.apache.log4j.config.PropertySetter = new call org.apache.log4j.config.PropertySetter.setProperties(Properties,String) call org.apache.log4j.config.PropertySetter.setProperties(Properties,String) call org.apache.log4j.config.PropertySetter.setProperties(Properties,String) call org.apache.log4j.config.PropertySetter.setProperties(Properties,String) call org.apache.log4j.config.PropertySetter.setProperties(Properties,String) + String boolean decl_stmt java.lang.String = + + + + + + if != && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt boolean = + + + String String Appender StringTokenizer + + + + decl_stmt java.util.StringTokenizer = new if ! || if ! call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() return decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) + + if || if else else + + + decl_stmt org.apache.log4j.Appender decl_stmt java.lang.String while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) if == || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) continue + + = if != Properties String Layout ErrorHandler decl String String String decl Entry String decl Map Appender decl_stmt org.apache.log4j.Appender = if != + + return decl_stmt java.lang.String = + decl_stmt java.lang.String = + = if == + + return call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) if instanceof if call org.apache.log4j.Appender.requiresLayout() call org.apache.log4j.Appender.requiresLayout() call org.apache.log4j.Appender.requiresLayout() call org.apache.log4j.Appender.requiresLayout() call org.apache.log4j.Appender.requiresLayout() decl_stmt org.apache.log4j.Layout = if != call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) + + + + + decl_stmt java.lang.String final final = + decl_stmt java.lang.String = if != decl_stmt org.apache.log4j.spi.ErrorHandler = if != call org.apache.log4j.Appender.setErrorHandler(ErrorHandler) call org.apache.log4j.Appender.setErrorHandler(ErrorHandler) call org.apache.log4j.Appender.setErrorHandler(ErrorHandler) call org.apache.log4j.Appender.setErrorHandler(ErrorHandler) call org.apache.log4j.Appender.setErrorHandler(ErrorHandler) + + decl_stmt java.util.Properties final final = new decl_stmt java.lang.String final final final = new + + + + + + for = decl_stmt Entry = decl_stmt int = for < ++ if call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() break if == call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() + + + + + + return boolean String Logger Appender String private private final final final final final final final final decl_stmt boolean = + if decl_stmt java.lang.String = + if != decl_stmt org.apache.log4j.Logger = == : decl_stmt java.lang.String = + if != decl_stmt org.apache.log4j.Appender = if != int Enumeration Hashtable Enumeration String PropertySetter String String Filter Enumeration String String Vector int NameValue Vector String decl_stmt java.lang.String final final = + + decl_stmt int = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt java.util.Hashtable = new decl_stmt java.util.Enumeration = decl_stmt java.lang.String = while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt java.lang.String = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) decl_stmt java.lang.String = if != - = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + decl_stmt java.util.Vector = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if == = new call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) if != - decl_stmt java.lang.String = call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) new decl_stmt java.util.Enumeration = new while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt java.lang.String = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() decl_stmt java.lang.String = if != + + + + + call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) decl_stmt org.apache.log4j.util.Filter = if != decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt java.util.Vector = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) decl_stmt java.util.Enumeration = call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt NameValue = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String) call org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String) call org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String) call org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String) call org.apache.log4j.config.PropertySetter.setProperty(PropertyDescriptor,String,String) call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() + call Filter.getClass() call Filter.getClass() call Filter.getClass() call Filter.getClass() call Filter.getClass() + + + else + + call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) return call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object)