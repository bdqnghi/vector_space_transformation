org.apache.log4j org.apache.log4j.helpers.Loader import org.apache.log4j.helpers.ThreadLocalMap import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.util.Hashtable import class org.apache.log4j.MDC MDC Method boolean Object int public static public static if != call org.apache.log4j.MDC.put0(String,Object) call org.apache.log4j.MDC.put0(String,Object) call org.apache.log4j.MDC.put0(String,Object) call org.apache.log4j.MDC.put0(String,Object) call org.apache.log4j.MDC.put0(String,Object) public static public static if != return call org.apache.log4j.MDC.get0(String) call org.apache.log4j.MDC.get0(String) call org.apache.log4j.MDC.get0(String) call org.apache.log4j.MDC.get0(String) call org.apache.log4j.MDC.get0(String) return public static public static if != call org.apache.log4j.MDC.remove0(String) call org.apache.log4j.MDC.remove0(String) call org.apache.log4j.MDC.remove0(String) call org.apache.log4j.MDC.remove0(String) call org.apache.log4j.MDC.remove0(String) public static public static if != return call org.apache.log4j.MDC.getContext0() call org.apache.log4j.MDC.getContext0() call org.apache.log4j.MDC.getContext0() call org.apache.log4j.MDC.getContext0() call org.apache.log4j.MDC.getContext0() else return public static public static if != call org.apache.log4j.MDC.clear0() call org.apache.log4j.MDC.clear0() call org.apache.log4j.MDC.clear0() call org.apache.log4j.MDC.clear0() call org.apache.log4j.MDC.clear0() Hashtable private private if || == return else decl_stmt java.util.Hashtable = if == = new call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) Hashtable private private if || == return else decl_stmt java.util.Hashtable = if != && != return call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) else return Hashtable private private if ! && != decl_stmt java.util.Hashtable = if != call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) call java.util.Hashtable.remove(Object) if call java.util.Hashtable.isEmpty() call java.util.Hashtable.isEmpty() call java.util.Hashtable.isEmpty() call java.util.Hashtable.isEmpty() call java.util.Hashtable.isEmpty() private private if || == return else return Hashtable private private if ! && != decl_stmt java.util.Hashtable = if != call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() call java.util.Hashtable.clear() if != try call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch catch