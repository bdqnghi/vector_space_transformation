org.apache.log4j.jmx java.util.Enumeration import java.util.Iterator import java.util.Vector import javax.management.Attribute import javax.management.AttributeList import javax.management.DynamicMBean import javax.management.InstanceAlreadyExistsException import javax.management.InstanceNotFoundException import javax.management.JMException import javax.management.MBeanRegistration import javax.management.MBeanRegistrationException import javax.management.MBeanServer import javax.management.NotCompliantMBeanException import javax.management.ObjectName import javax.management.RuntimeOperationsException import org.apache.log4j.Logger import org.apache.log4j.Appender import class org.apache.log4j.jmx.AbstractDynamicMBean super super implements MBeanServer Vector String String static protected static protected final final decl_stmt java.lang.String = if == || call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() == = return AttributeList Object public public if == throw new new + decl_stmt javax.swing.text.html.parser.AttributeList = new if == return for = < ++ try decl_stmt java.lang.Object = call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() new catch catch return Object AttributeList String Attribute public public if == throw new new + decl_stmt javax.swing.text.html.parser.AttributeList = new if return for = decl_stmt javax.management.Attribute = try decl_stmt java.lang.String = call javax.management.Attribute.getName() call javax.management.Attribute.getName() call javax.management.Attribute.getName() call javax.management.Attribute.getName() call javax.management.Attribute.getName() decl_stmt java.lang.Object = call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() call AttributeList.add() new catch catch return public public public public public public + + + = return protected protected throws call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() call MBeanServer.registerMBean() call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) ObjectName Enumeration public public decl_stmt java.util.Enumeration = call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt ObjectName = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() try call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() call MBeanServer.unregisterMBean() catch + call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() catch + call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName()