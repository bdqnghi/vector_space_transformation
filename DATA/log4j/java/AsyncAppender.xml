org.apache.log4j java.text.MessageFormat import java.util.ArrayList import java.util.Enumeration import java.util.HashMap import java.util.Iterator import java.util.List import java.util.Map import org.apache.log4j.helpers.AppenderAttachableImpl import org.apache.log4j.spi.AppenderAttachable import org.apache.log4j.spi.LoggingEvent import class org.apache.log4j.AsyncAppender super super extends super implements AppenderAttachableImpl List AppenderAttachableImpl boolean boolean Map int Thread int public public final final synchronized call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) int boolean DiscardSummary String public public final final if == || ! call Thread.isAlive() call Thread.isAlive() call Thread.isAlive() call Thread.isAlive() call Thread.isAlive() || <= synchronized call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) return if synchronized while decl_stmt int = call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() if < call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) if == call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() break decl_stmt boolean = if && ! && != try call List.wait() call List.wait() call List.wait() call List.wait() call List.wait() = catch if decl_stmt java.lang.String = decl_stmt DiscardSummary = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if == = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) else call DiscardSummary.add() call DiscardSummary.add() call DiscardSummary.add() call DiscardSummary.add() call DiscardSummary.add() break Enumeration Object public public synchronized = call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() try call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) catch + synchronized decl_stmt java.util.Enumeration = call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() if != while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt java.lang.Object = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() if instanceof public public synchronized return call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() public public final final synchronized return call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) public public return public public final final synchronized return call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) public public return public public synchronized call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() public public final final synchronized call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) public public final final synchronized call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) public public final final = public public final final if < throw new synchronized = < : call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() public public return public public final final synchronized = call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() public public return public public final final if > = ++ String public public decl_stmt java.lang.String = new new return new int int decl LoggingEvent boolean public public decl_stmt boolean = try while decl_stmt org.apache.log4j.spi.LoggingEvent = synchronized decl_stmt int = call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() = ! while == && call List.wait() call List.wait() call List.wait() call List.wait() call List.wait() = call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() = ! if > = new + call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.Map.size() call java.util.List.toArray() call java.util.List.toArray() call java.util.List.toArray() call java.util.List.toArray() call java.util.List.toArray() decl_stmt int = for = call java.util.Map.values() call java.util.Map.values() call java.util.Map.values() call java.util.Map.values() call java.util.Map.values() ++ = call java.util.List.clear() call java.util.List.clear() call java.util.List.clear() call java.util.List.clear() call java.util.List.clear() call java.util.Map.clear() call java.util.Map.clear() call java.util.Map.clear() call java.util.Map.clear() call java.util.Map.clear() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() call List.notifyAll() if != for = < ++ synchronized call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) call org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) catch