com.psibt.framework.net java.net.* import java.io.* import java.util.* import org.apache.log4j.* import class com.psibt.framework.net.PluggableHTTPServer super super implements Vector Category int ServerSocket int public public call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) public public call java.util.Vector.remove(int) call java.util.Vector.remove(int) call java.util.Vector.remove(int) call java.util.Vector.remove(int) call java.util.Vector.remove(int) public static public static try catch public static public static try catch RootRequestHandler String public public if call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) instanceof decl_stmt com.psibt.framework.net.RootRequestHandler = call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) decl_stmt java.lang.String = + call com.psibt.framework.net.RootRequestHandler.getTitle() call com.psibt.framework.net.RootRequestHandler.getTitle() call com.psibt.framework.net.RootRequestHandler.getTitle() call com.psibt.framework.net.RootRequestHandler.getTitle() call com.psibt.framework.net.RootRequestHandler.getTitle() + = + + call com.psibt.framework.net.RootRequestHandler.getDescription() call com.psibt.framework.net.RootRequestHandler.getDescription() call com.psibt.framework.net.RootRequestHandler.getDescription() call com.psibt.framework.net.RootRequestHandler.getDescription() call com.psibt.framework.net.RootRequestHandler.getDescription() + for = < call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() ++ = + + call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) = + + call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) + = + call com.psibt.framework.net.RootRequestHandler.setReplyHTML(String) call com.psibt.framework.net.RootRequestHandler.setReplyHTML(String) call com.psibt.framework.net.RootRequestHandler.setReplyHTML(String) call com.psibt.framework.net.RootRequestHandler.setReplyHTML(String) call com.psibt.framework.net.RootRequestHandler.setReplyHTML(String) Socket Thread public public while try decl_stmt java.net.Socket = call java.net.ServerSocket.accept() call java.net.ServerSocket.accept() call java.net.ServerSocket.accept() call java.net.ServerSocket.accept() call java.net.ServerSocket.accept() decl_stmt java.lang.Thread = new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() catch int String StringBuffer String StringTokenizer String Reader boolean String Writer public public try decl_stmt Writer = new new decl_stmt java.io.Reader = new new decl_stmt java.lang.StringBuffer = new while decl_stmt int = call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) call java.io.Reader.read(char) if == || == || == - break call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) char decl_stmt java.lang.String = call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call org.apache.log4j.Category.debug(Object,Throwable) call org.apache.log4j.Category.debug(Object,Throwable) call org.apache.log4j.Category.debug(Object,Throwable) call org.apache.log4j.Category.debug(Object,Throwable) call org.apache.log4j.Category.debug(Object,Throwable) decl_stmt java.util.StringTokenizer = new decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) decl_stmt boolean = for = < call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() ++ if call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) instanceof if call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) call java.util.Vector.get(int) = break if ! else catch finally try if != catch Category Category int Thread PluggableHTTPServer public static public static decl_stmt int decl_stmt org.apache.log4j.Category = call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) new new decl_stmt org.apache.log4j.Category = call org.apache.log4j.Category.setPriority(Priority) call org.apache.log4j.Category.setPriority(Priority) call org.apache.log4j.Category.setPriority(Priority) call org.apache.log4j.Category.setPriority(Priority) call org.apache.log4j.Category.setPriority(Priority) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) call org.apache.log4j.Category.addAppender(Appender) new new try = catch = decl_stmt com.psibt.framework.net.PluggableHTTPServer = while == try = new call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) new call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) new call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) call com.psibt.framework.net.PluggableHTTPServer.addRequestHandler(HTTPRequestHandler) new call com.psibt.framework.net.PluggableHTTPServer.autoCreateRootPage(int) call com.psibt.framework.net.PluggableHTTPServer.autoCreateRootPage(int) call com.psibt.framework.net.PluggableHTTPServer.autoCreateRootPage(int) call com.psibt.framework.net.PluggableHTTPServer.autoCreateRootPage(int) call com.psibt.framework.net.PluggableHTTPServer.autoCreateRootPage(int) decl_stmt java.lang.Thread = new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() catch = ++