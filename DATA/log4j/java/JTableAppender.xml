org.apache.log4j.gui org.apache.log4j.helpers.CyclicBuffer import org.apache.log4j.helpers.LogLog import org.apache.log4j.Priority import org.apache.log4j.Category import org.apache.log4j.Layout import org.apache.log4j.PatternLayout import org.apache.log4j.spi.LoggingEvent import javax.swing.JList import javax.swing.AbstractListModel import javax.swing.JFrame import javax.swing.JButton import javax.swing.JLabel import javax.swing.JTable import javax.swing.JTextArea import javax.swing.table.AbstractTableModel import javax.swing.table.TableCellRenderer import javax.swing.JScrollPane import javax.swing.ListCellRenderer import java.awt.Component import java.awt.FlowLayout import javax.swing.BoxLayout import java.awt.BorderLayout import java.awt.Dimension import java.awt.event.ActionListener import java.awt.event.ActionEvent import java.awt.Container import javax.swing.ImageIcon import java.awt.Image import java.awt.Toolkit import java.net.URL import java.awt.Rectangle import class org.apache.log4j.gui.JTableAppender super super extends PatternLayout Category public public public public return LoggingEvent long Container int JButton JScrollPane JTableAppender int JTableAppenderModel JFrame long static public static public decl_stmt JFrame = new decl_stmt java.awt.Container = call JFrame.getContentPane() call JFrame.getContentPane() call JFrame.getContentPane() call JFrame.getContentPane() call JFrame.getContentPane() decl_stmt org.apache.log4j.gui.JTableAppender = new decl_stmt JTableAppenderModel = new call JTableAppender.setModel() call JTableAppender.setModel() call JTableAppender.setModel() call JTableAppender.setModel() call JTableAppender.setModel() decl_stmt javax.swing.JScrollPane = new call JScrollPane.setPreferredSize() call JScrollPane.setPreferredSize() call JScrollPane.setPreferredSize() call JScrollPane.setPreferredSize() call JScrollPane.setPreferredSize() new call java.awt.Container.setLayout(LayoutManager) call java.awt.Container.setLayout(LayoutManager) call java.awt.Container.setLayout(LayoutManager) call java.awt.Container.setLayout(LayoutManager) call java.awt.Container.setLayout(LayoutManager) new call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) decl_stmt javax.swing.JButton = new call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call java.awt.Container.add(Component,int) call JButton.addActionListener() call JButton.addActionListener() call JButton.addActionListener() call JButton.addActionListener() call JButton.addActionListener() new call JFrame.setVisible() call JFrame.setVisible() call JFrame.setVisible() call JFrame.setVisible() call JFrame.setVisible() call JFrame.setSize() call JFrame.setSize() call JFrame.setSize() call JFrame.setSize() call JFrame.setSize() new decl_stmt long = decl_stmt int = decl_stmt int = while ++ < decl_stmt org.apache.log4j.spi.LoggingEvent = new + call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() if == call JTableAppender.add() call JTableAppender.add() call JTableAppender.add() call JTableAppender.add() call JTableAppender.add() decl_stmt long = + - * / LoggingEvent String String public public + + ++ if instanceof decl_stmt org.apache.log4j.spi.LoggingEvent = decl_stmt java.lang.String = call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) decl_stmt java.lang.String = call org.apache.log4j.spi.LoggingEvent.getThrowableInformation() call org.apache.log4j.spi.LoggingEvent.getThrowableInformation() call org.apache.log4j.spi.LoggingEvent.getThrowableInformation() call org.apache.log4j.spi.LoggingEvent.getThrowableInformation() call org.apache.log4j.spi.LoggingEvent.getThrowableInformation() if != + + else else return