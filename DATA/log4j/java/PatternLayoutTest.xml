org.apache.log4j org.apache.log4j.spi.LoggingEvent import class org.apache.log4j.PatternLayoutTest super super extends protected protected return new StringBuffer Logger PatternLayout LoggingEvent String public public decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.spi.LoggingEvent = new decl_stmt org.apache.log4j.PatternLayout = decl_stmt java.lang.String = call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) decl_stmt java.lang.StringBuffer = new call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call org.apache.log4j.spi.LoggingEvent.getThreadName() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call org.apache.log4j.spi.LoggingEvent.getLevel() call org.apache.log4j.spi.LoggingEvent.getLevel() call org.apache.log4j.spi.LoggingEvent.getLevel() call org.apache.log4j.spi.LoggingEvent.getLevel() call org.apache.log4j.spi.LoggingEvent.getLevel() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call org.apache.log4j.spi.LoggingEvent.getMessage() call org.apache.log4j.spi.LoggingEvent.getMessage() call org.apache.log4j.spi.LoggingEvent.getMessage() call org.apache.log4j.spi.LoggingEvent.getMessage() call org.apache.log4j.spi.LoggingEvent.getMessage() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() PatternLayout public public decl_stmt org.apache.log4j.PatternLayout = call PatternLayout.getConversionPattern() call PatternLayout.getConversionPattern() call PatternLayout.getConversionPattern() call PatternLayout.getConversionPattern() call PatternLayout.getConversionPattern() public public public public PatternLayout String decl char Logger LoggingEvent LoggingEvent public public decl_stmt org.apache.log4j.Logger = decl_stmt char = new for = < ++ = decl_stmt org.apache.log4j.spi.LoggingEvent = new new decl_stmt org.apache.log4j.PatternLayout = decl_stmt java.lang.String = call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) decl_stmt org.apache.log4j.spi.LoggingEvent = new = call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call org.apache.log4j.PatternLayout.format(LoggingEvent) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) public public return public public return