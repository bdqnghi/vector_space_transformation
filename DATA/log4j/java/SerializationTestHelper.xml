org.apache.log4j.util junit.framework.TestCase import java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.File import java.io.FileInputStream import java.io.FileOutputStream import java.io.IOException import java.io.ObjectInputStream import java.io.ObjectOutputStream import class org.apache.log4j.util.SerializationTestHelper ByteArrayInputStream ObjectInputStream ObjectOutputStream ByteArrayOutputStream public static public static final final throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() decl_stmt ByteArrayInputStream = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt ObjectInputStream = new return call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() FileInputStream ObjectInputStream public static public static final final throws decl_stmt FileInputStream = new decl_stmt ObjectInputStream = new return call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() ObjectOutputStream ByteArrayOutputStream public static public static final final final final final final final final final throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() FileOutputStream int File FileInputStream decl byte int int public static public static final final final final final final final final final final throws decl_stmt File = new if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() decl_stmt int = decl_stmt byte = new decl_stmt FileInputStream = new decl_stmt int = call FileInputStream.read() call FileInputStream.read() call FileInputStream.read() call FileInputStream.read() call FileInputStream.read() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() call FileInputStream.close() if < decl_stmt int = if > = for = < ++ if < && == ++ else if != + else decl_stmt java.io.FileOutputStream = new call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.write(byte) call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() call java.io.FileOutputStream.close() +