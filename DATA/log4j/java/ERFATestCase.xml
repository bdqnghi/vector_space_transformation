org.apache.log4j.varia junit.framework.TestCase import org.apache.log4j.LogManager import org.apache.log4j.Logger import org.apache.log4j.PatternLayout import org.apache.log4j.RFATestCase import java.io.DataInputStream import java.io.DataOutputStream import java.io.File import java.io.IOException import java.net.Socket import class org.apache.log4j.varia.ERFATestCase super super extends public public ExternallyRolledFileAppender public public decl_stmt org.apache.log4j.varia.ExternallyRolledFileAppender = new call org.apache.log4j.varia.ExternallyRolledFileAppender.getPort() call org.apache.log4j.varia.ExternallyRolledFileAppender.getPort() call org.apache.log4j.varia.ExternallyRolledFileAppender.getPort() call org.apache.log4j.varia.ExternallyRolledFileAppender.getPort() call org.apache.log4j.varia.ExternallyRolledFileAppender.getPort() String DataOutputStream Socket DataInputStream final final final final throws decl_stmt java.net.Socket = new decl_stmt java.io.DataInputStream = new call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() decl_stmt DataOutputStream = new call java.net.Socket.getOutputStream() call java.net.Socket.getOutputStream() call java.net.Socket.getOutputStream() call java.net.Socket.getOutputStream() call java.net.Socket.getOutputStream() call DataOutputStream.writeUTF() call DataOutputStream.writeUTF() call DataOutputStream.writeUTF() call DataOutputStream.writeUTF() call DataOutputStream.writeUTF() decl_stmt java.lang.String = call java.io.DataInputStream.readUTF() call java.io.DataInputStream.readUTF() call java.io.DataInputStream.readUTF() call java.io.DataInputStream.readUTF() call java.io.DataInputStream.readUTF() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataInputStream.close() call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() call DataOutputStream.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() PatternLayout Logger Logger int ExternallyRolledFileAppender public public throws decl_stmt org.apache.log4j.varia.ExternallyRolledFileAppender = new decl_stmt int = decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.Logger = decl_stmt org.apache.log4j.PatternLayout = new call ExternallyRolledFileAppender.setLayout() call ExternallyRolledFileAppender.setLayout() call ExternallyRolledFileAppender.setLayout() call ExternallyRolledFileAppender.setLayout() call ExternallyRolledFileAppender.setLayout() call ExternallyRolledFileAppender.setAppend() call ExternallyRolledFileAppender.setAppend() call ExternallyRolledFileAppender.setAppend() call ExternallyRolledFileAppender.setAppend() call ExternallyRolledFileAppender.setAppend() call ExternallyRolledFileAppender.setMaxBackupIndex() call ExternallyRolledFileAppender.setMaxBackupIndex() call ExternallyRolledFileAppender.setMaxBackupIndex() call ExternallyRolledFileAppender.setMaxBackupIndex() call ExternallyRolledFileAppender.setMaxBackupIndex() call ExternallyRolledFileAppender.setPort() call ExternallyRolledFileAppender.setPort() call ExternallyRolledFileAppender.setPort() call ExternallyRolledFileAppender.setPort() call ExternallyRolledFileAppender.setPort() call ExternallyRolledFileAppender.setFile() call ExternallyRolledFileAppender.setFile() call ExternallyRolledFileAppender.setFile() call ExternallyRolledFileAppender.setFile() call ExternallyRolledFileAppender.setFile() try call org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions() call org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions() call org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions() call org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions() call org.apache.log4j.varia.ExternallyRolledFileAppender.activateOptions() catch return try catch call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() for = < ++ if < call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + else if < call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + if == try catch return try catch return new new new new