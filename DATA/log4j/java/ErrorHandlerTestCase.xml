org.apache.log4j.varia junit.framework.TestCase import org.apache.log4j.Appender import org.apache.log4j.Level import org.apache.log4j.Logger import org.apache.log4j.spi.ErrorHandler import org.apache.log4j.util.Filter import org.apache.log4j.util.Transformer import org.apache.log4j.util.Compare import org.apache.log4j.util.JunitTestRunnerFilter import org.apache.log4j.util.SunReflectFilter import org.apache.log4j.util.LineNumberFilter import org.apache.log4j.util.ControlFilter import org.apache.log4j.xml.DOMConfigurator import org.apache.log4j.PropertyConfigurator import class org.apache.log4j.varia.ErrorHandlerTestCase super super extends String String String String String Logger Logger String public public = = public public call Logger.getLoggerRepository() call Logger.getLoggerRepository() call Logger.getLoggerRepository() call Logger.getLoggerRepository() call Logger.getLoggerRepository() ControlFilter Appender ErrorHandler public public throws decl_stmt org.apache.log4j.Appender = call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() decl_stmt org.apache.log4j.spi.ErrorHandler = call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new ControlFilter Appender ErrorHandler public public throws decl_stmt org.apache.log4j.Appender = call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() call Logger.getAppender() decl_stmt org.apache.log4j.spi.ErrorHandler = call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() call org.apache.log4j.Appender.getErrorHandler() decl_stmt org.apache.log4j.util.ControlFilter = new new new new new new int Exception decl_stmt int = - call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + ++ call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) + call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + ++ call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + ++ call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) + ++ call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) call java.util.logging.Logger.log(Level,String,Object) + decl_stmt Exception = new call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + ++ call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + ++ call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() +