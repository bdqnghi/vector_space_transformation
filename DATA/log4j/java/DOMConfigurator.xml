org.apache.log4j.xml org.apache.log4j.Appender import org.apache.log4j.Layout import org.apache.log4j.Level import org.apache.log4j.LogManager import org.apache.log4j.Logger import org.apache.log4j.config.PropertySetter import org.apache.log4j.helpers.FileWatchdog import org.apache.log4j.helpers.Loader import org.apache.log4j.helpers.LogLog import org.apache.log4j.helpers.OptionConverter import org.apache.log4j.or.RendererMap import org.apache.log4j.spi.AppenderAttachable import org.apache.log4j.spi.Configurator import org.apache.log4j.spi.ErrorHandler import org.apache.log4j.spi.Filter import org.apache.log4j.spi.LoggerFactory import org.apache.log4j.spi.LoggerRepository import org.apache.log4j.spi.RendererSupport import org.apache.log4j.spi.ThrowableRenderer import org.apache.log4j.spi.ThrowableRendererSupport import org.w3c.dom.Document import org.w3c.dom.Element import org.w3c.dom.NamedNodeMap import org.w3c.dom.Node import org.w3c.dom.NodeList import org.xml.sax.InputSource import org.xml.sax.SAXException import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.parsers.FactoryConfigurationError import java.io.File import java.io.IOException import java.io.InputStream import java.io.InterruptedIOException import java.io.Reader import java.lang.reflect.Method import java.lang.reflect.InvocationTargetException import java.net.URL import java.net.URLConnection import java.util.Hashtable import java.util.Properties import class org.apache.log4j.xml.DOMConfigurator super super implements String Hashtable String decl Class String String String String Properties String String String String String String String String LoggerRepository String LoggerFactory String String String String String String String String String String String String String String String String String Node NamedNodeMap NodeList Element Node Appender protected protected decl_stmt org.apache.log4j.Appender = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if != return else decl_stmt javax.swing.text.Element = decl_stmt NodeList = for = < call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() decl_stmt NamedNodeMap = call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() call Node.getAttributes() decl_stmt sun.tools.tree.Node = call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() call NamedNodeMap.getNamedItem() if call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() call Node.getNodeValue() = break if == + + return else = if != call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) return String Document protected protected decl_stmt java.lang.String = decl_stmt javax.swing.text.Document = return boolean private static private static final final final final final final throws decl_stmt boolean = if instanceof = if ! + private static private static final final final final final final try catch if instanceof || instanceof AppenderAttachable Node PropertySetter String NodeList String Object int Element Appender protected protected decl_stmt java.lang.String = + + try decl_stmt java.lang.Object = decl_stmt org.apache.log4j.Appender = decl_stmt org.apache.log4j.config.PropertySetter = new call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) call org.apache.log4j.Appender.setName(String) decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() else if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) else if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() else if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() else if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() decl_stmt java.lang.String = call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() if instanceof decl_stmt org.apache.log4j.spi.AppenderAttachable = + + + call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() + call org.apache.log4j.spi.AppenderAttachable.addAppender(Appender) call org.apache.log4j.spi.AppenderAttachable.addAppender(Appender) call org.apache.log4j.spi.AppenderAttachable.addAppender(Appender) call org.apache.log4j.spi.AppenderAttachable.addAppender(Appender) call org.apache.log4j.spi.AppenderAttachable.addAppender(Appender) else + + + call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() + else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() return catch if instanceof || instanceof return Node ErrorHandler PropertySetter String int Element String Logger Logger NodeList protected protected decl_stmt org.apache.log4j.spi.ErrorHandler = if != call org.apache.log4j.spi.ErrorHandler.setAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setAppender(Appender) decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender) call org.apache.log4j.spi.ErrorHandler.setBackupAppender(Appender) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt java.lang.String = call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() decl_stmt org.apache.log4j.Logger = == call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) : call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt org.apache.log4j.Logger = call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) call org.apache.log4j.spi.ErrorHandler.setLogger(Logger) else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() Node PropertySetter String Filter int Element String NodeList protected protected decl_stmt java.lang.String = decl_stmt org.apache.log4j.util.Filter = if != decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() + call Filter.getClass() call Filter.getClass() call Filter.getClass() call Filter.getClass() call Filter.getClass() + + + Class String String Logger boolean Method protected protected decl_stmt java.lang.String = decl_stmt org.apache.log4j.Logger decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) = == call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) : call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) call org.apache.log4j.spi.LoggerRepository.getLogger(String,LoggerFactory) else + + try decl_stmt java.lang.Class = decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) new catch if instanceof || instanceof + + return catch + + return synchronized decl_stmt boolean = + call java.util.logging.Logger.getName() call java.util.logging.Logger.getName() call java.util.logging.Logger.getName() call java.util.logging.Logger.getName() call java.util.logging.Logger.getName() + + + call Logger.setAdditivity() call Logger.setAdditivity() call Logger.setAdditivity() call Logger.setAdditivity() call Logger.setAdditivity() Node PropertySetter Object String int Element NodeList protected protected decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + else + + decl_stmt java.lang.Object = if instanceof = else + + decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt javax.swing.text.Element = decl_stmt sun.tools.tree.Node = decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == = if call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() else Logger protected protected decl_stmt org.apache.log4j.Logger = call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() call org.apache.log4j.spi.LoggerRepository.getRootLogger() synchronized Node Element PropertySetter String Appender int Element String NodeList protected protected decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) decl_stmt javax.swing.text.Element = decl_stmt org.apache.log4j.Appender = decl_stmt java.lang.String = call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() call Element.getAttribute() if != + + + + else + + else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() Layout PropertySetter String Object int Element NodeList String Node protected protected decl_stmt java.lang.String = + + try decl_stmt java.lang.Object = decl_stmt org.apache.log4j.Layout = decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() return catch if instanceof || instanceof return String String protected protected decl_stmt java.lang.String = decl_stmt java.lang.String = if instanceof Node PropertySetter ThrowableRenderer String Object int Element NodeList String protected protected final final decl_stmt java.lang.String = + + try decl_stmt java.lang.Object = decl_stmt org.apache.log4j.spi.ThrowableRenderer = decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() call org.apache.log4j.config.PropertySetter.activate() return catch if instanceof || instanceof return Level Class String Method String String protected protected decl_stmt java.lang.String = if = decl_stmt java.lang.String = + + + + if || if else else decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else + + try decl_stmt java.lang.Class = decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() decl_stmt org.apache.log4j.Level = call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) new catch if instanceof || instanceof + + return + + String String protected protected decl_stmt java.lang.String = decl_stmt java.lang.String = = DOMConfigurator static public static public decl_stmt org.apache.log4j.xml.DOMConfigurator = new call org.apache.log4j.xml.DOMConfigurator.doConfigure(Reader,LoggerRepository) call org.apache.log4j.xml.DOMConfigurator.doConfigure(Reader,LoggerRepository) call org.apache.log4j.xml.DOMConfigurator.doConfigure(Reader,LoggerRepository) call org.apache.log4j.xml.DOMConfigurator.doConfigure(Reader,LoggerRepository) call org.apache.log4j.xml.DOMConfigurator.doConfigure(Reader,LoggerRepository) static public static public XMLWatchdog static public static public decl_stmt XMLWatchdog = new call XMLWatchdog.setDelay() call XMLWatchdog.setDelay() call XMLWatchdog.setDelay() call XMLWatchdog.setDelay() call XMLWatchdog.setDelay() call XMLWatchdog.start() call XMLWatchdog.start() call XMLWatchdog.start() call XMLWatchdog.start() call XMLWatchdog.start() ParseAction public public final final decl_stmt org.apache.log4j.xml.ParseAction = new public public final final throws return new public public return + + public public final final throws return new public public return + + ParseAction InputSource InputStream URLConnection public public final final decl_stmt org.apache.log4j.xml.ParseAction = new public public final final throws decl_stmt sun.net.www.URLConnection = call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) decl_stmt java.io.InputStream = call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() try decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return finally call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() public public return + + InputSource InputStream URLConnection public public final final throws decl_stmt sun.net.www.URLConnection = call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) call sun.net.www.URLConnection.setUseCaches(boolean) decl_stmt java.io.InputStream = call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() call sun.net.www.URLConnection.getInputStream() try decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return finally call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() call java.io.InputStream.close() public public return + + ParseAction InputSource public public final final throws decl_stmt org.apache.log4j.xml.ParseAction = new public public final final throws decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return public public return + + InputSource public public final final throws decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return public public return + + ParseAction InputSource public public final final throws decl_stmt org.apache.log4j.xml.ParseAction = new public public final final throws decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return public public return + + InputSource public public final final throws decl_stmt InputSource = new call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() return public public return + + ParseAction protected protected final final throws if == decl_stmt org.apache.log4j.xml.ParseAction = new public public final final throws return public public return + + public public final final throws return public public return + + DocumentBuilder Document Exception DocumentBuilderFactory private final private final final final final final throws decl_stmt DocumentBuilderFactory = = try + = + call DocumentBuilderFactory.getClass() call DocumentBuilderFactory.getClass() call DocumentBuilderFactory.getClass() call DocumentBuilderFactory.getClass() call DocumentBuilderFactory.getClass() catch decl_stmt Exception = throw try call DocumentBuilderFactory.setValidating() call DocumentBuilderFactory.setValidating() call DocumentBuilderFactory.setValidating() call DocumentBuilderFactory.setValidating() call DocumentBuilderFactory.setValidating() decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() call DocumentBuilder.setErrorHandler() new call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() call DocumentBuilder.setEntityResolver() new decl_stmt javax.swing.text.Document = call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() call Document.getDocumentElement() catch if instanceof || instanceof + + public public = static public static public throws new static public static public throws new String Node String ThrowableRenderer String String int Element String String NodeList protected protected decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + else + + return decl_stmt java.lang.String = + + if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else + + decl_stmt java.lang.String = + + if ! if call org.apache.log4j.spi.LoggerRepository.resetConfiguration() call org.apache.log4j.spi.LoggerRepository.resetConfiguration() call org.apache.log4j.spi.LoggerRepository.resetConfiguration() call org.apache.log4j.spi.LoggerRepository.resetConfiguration() call org.apache.log4j.spi.LoggerRepository.resetConfiguration() decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + decl_stmt java.lang.String = + + if ! && ! call org.apache.log4j.spi.LoggerRepository.setThreshold(Level) call org.apache.log4j.spi.LoggerRepository.setThreshold(Level) call org.apache.log4j.spi.LoggerRepository.setThreshold(Level) call org.apache.log4j.spi.LoggerRepository.setThreshold(Level) call org.apache.log4j.spi.LoggerRepository.setThreshold(Level) decl_stmt java.lang.String = decl_stmt javax.swing.text.Element = decl_stmt sun.tools.tree.Node = decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == = = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) for = < ++ = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == = = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if instanceof decl_stmt org.apache.log4j.spi.ThrowableRenderer = if != else if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) || call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) protected protected final final return public static public static final final final final try return catch return String String public static public static final final final final final final decl_stmt java.lang.String = decl_stmt java.lang.String = = Node PropertySetter String Object int Element String NodeList public static public static final final final final final final throws decl_stmt java.lang.String = decl_stmt java.lang.Object = if != decl_stmt org.apache.log4j.config.PropertySetter = new decl_stmt NodeList = decl_stmt int final final = call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() for = < ++ decl_stmt sun.tools.tree.Node = call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() call NodeList.item() if call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() call Node.getNodeType() == decl_stmt javax.swing.text.Element = decl_stmt java.lang.String = call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() call Element.getTagName() if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else return return