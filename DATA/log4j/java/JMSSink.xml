org.apache.log4j.net org.apache.log4j.Logger import org.apache.log4j.PropertyConfigurator import org.apache.log4j.spi.LoggingEvent import org.apache.log4j.xml.DOMConfigurator import javax.jms.JMSException import javax.jms.ObjectMessage import javax.jms.Session import javax.jms.Topic import javax.jms.TopicConnection import javax.jms.TopicConnectionFactory import javax.jms.TopicSession import javax.jms.TopicSubscriber import javax.naming.Context import javax.naming.InitialContext import javax.naming.NameNotFoundException import javax.naming.NamingException import java.io.BufferedReader import java.io.InputStreamReader import class org.apache.log4j.net.JMSSink super super implements Logger String BufferedReader String String String String String static public static public throws if != decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) else new decl_stmt java.io.BufferedReader = new new while decl_stmt java.lang.String = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) + return Logger LoggingEvent ObjectMessage public public decl_stmt org.apache.log4j.spi.LoggingEvent decl_stmt org.apache.log4j.Logger try if instanceof decl_stmt ObjectMessage = = call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() = call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call org.apache.log4j.spi.LoggingEvent.getLoggerName() call Logger.callAppenders() call Logger.callAppenders() call Logger.callAppenders() call Logger.callAppenders() call Logger.callAppenders() else call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() protected static protected static throws try return catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + throw static static + +