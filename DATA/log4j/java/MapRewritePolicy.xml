org.apache.log4j.rewrite java.util.HashMap import java.util.Iterator import java.util.Map import org.apache.log4j.Logger import org.apache.log4j.spi.LoggingEvent import class org.apache.log4j.rewrite.MapRewritePolicy super super implements Object Map Object decl Map Map public public final final decl_stmt java.lang.Object = if instanceof decl_stmt java.util.Map = new decl_stmt java.util.Map = decl_stmt java.lang.Object = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) if == = for = call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() call java.util.Map.entrySet() decl_stmt Entry = if ! call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getKey() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() return new != : else return