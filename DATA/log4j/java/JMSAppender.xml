org.apache.log4j.net org.apache.log4j.AppenderSkeleton import org.apache.log4j.helpers.LogLog import org.apache.log4j.spi.ErrorCode import org.apache.log4j.spi.LoggingEvent import javax.jms.JMSException import javax.jms.ObjectMessage import javax.jms.Session import javax.jms.Topic import javax.jms.TopicConnection import javax.jms.TopicConnectionFactory import javax.jms.TopicPublisher import javax.jms.TopicSession import javax.naming.Context import javax.naming.InitialContext import javax.naming.NameNotFoundException import javax.naming.NamingException import java.util.Properties import class org.apache.log4j.net.JMSAppender super super extends String String TopicConnection String String boolean TopicSession String String TopicPublisher String String String public public = public public return public public = public public return public public return Topic Context Properties TopicConnectionFactory public public decl_stmt TopicConnectionFactory try decl_stmt sun.tools.tree.Context if != decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() if != call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() else + if != call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() if != call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() if != call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() else + = new else = new + + = if != = call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() else = call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() call TopicConnectionFactory.createTopicConnection() + = call TopicConnection.createTopicSession() call TopicConnection.createTopicSession() call TopicConnection.createTopicSession() call TopicConnection.createTopicSession() call TopicConnection.createTopicSession() + + decl_stmt Topic = = call TopicSession.createPublisher() call TopicSession.createPublisher() call TopicSession.createPublisher() call TopicSession.createPublisher() call TopicSession.createPublisher() call TopicConnection.start() call TopicConnection.start() call TopicConnection.start() call TopicConnection.start() call TopicConnection.start() call sun.tools.tree.Context.close() call sun.tools.tree.Context.close() call sun.tools.tree.Context.close() call sun.tools.tree.Context.close() call sun.tools.tree.Context.close() catch + + catch + + catch + + protected protected throws try return catch + + throw String protected protected decl_stmt java.lang.String = if == = else if == = else if == = if != + + + return else return public synchronized public synchronized if return + + = try if != call TopicSession.close() call TopicSession.close() call TopicSession.close() call TopicSession.close() call TopicSession.close() if != call TopicConnection.close() call TopicConnection.close() call TopicConnection.close() call TopicConnection.close() call TopicConnection.close() catch + + catch + + = = = ObjectMessage public public if ! return try decl_stmt ObjectMessage = call TopicSession.createObjectMessage() call TopicSession.createObjectMessage() call TopicSession.createObjectMessage() call TopicSession.createObjectMessage() call TopicSession.createObjectMessage() if call ObjectMessage.setObject() call ObjectMessage.setObject() call ObjectMessage.setObject() call ObjectMessage.setObject() call ObjectMessage.setObject() call TopicPublisher.publish() call TopicPublisher.publish() call TopicPublisher.publish() call TopicPublisher.publish() call TopicPublisher.publish() catch + + catch + + public public return public public = public public return public public = return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public = protected protected return protected protected return protected protected return public public return