com.klopotek.utils.log java.sql.* import java.util.* import org.apache.log4j.* import org.apache.log4j.helpers.* import org.apache.log4j.spi.* import class com.klopotek.utils.log.JDBCLogger int String ResultSet String Statement String String int boolean String String boolean String String ArrayList Connection LogColumn public public throws if ! if ! throw new if != return decl_stmt LogColumn call java.sql.ResultSet.moveToInsertRow() call java.sql.ResultSet.moveToInsertRow() call java.sql.ResultSet.moveToInsertRow() call java.sql.ResultSet.moveToInsertRow() call java.sql.ResultSet.moveToInsertRow() for = < ++ = call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) if == call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) else if == call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() call LogColumn.idhandler() else if == call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) else if == call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) call java.sql.ResultSet.updateObject(String,Object,int) new new call java.sql.ResultSet.insertRow() call java.sql.ResultSet.insertRow() call java.sql.ResultSet.insertRow() call java.sql.ResultSet.insertRow() call java.sql.ResultSet.insertRow() public public throws if ! if ! throw new if == throw new if > = + + else = try call sun.tools.tree.Statement.executeUpdate(String,String) call sun.tools.tree.Statement.executeUpdate(String,String) call sun.tools.tree.Statement.executeUpdate(String,String) call sun.tools.tree.Statement.executeUpdate(String,String) call sun.tools.tree.Statement.executeUpdate(String,String) catch = throw ResultSetMetaData LogColumn public public throws if return = call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) = call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) + + decl_stmt LogColumn decl_stmt java.sql.ResultSetMetaData = call java.sql.ResultSet.getMetaData() call java.sql.ResultSet.getMetaData() call java.sql.ResultSet.getMetaData() call java.sql.ResultSet.getMetaData() call java.sql.ResultSet.getMetaData() = call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() call java.sql.ResultSetMetaData.getColumnCount() = new for = <= ++ = new = call java.sql.ResultSetMetaData.getColumnName(int) call java.sql.ResultSetMetaData.getColumnName(int) call java.sql.ResultSetMetaData.getColumnName(int) call java.sql.ResultSetMetaData.getColumnName(int) call java.sql.ResultSetMetaData.getColumnName(int) = call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) call java.sql.ResultSetMetaData.getColumnTypeName(int) = call ResultSetMetaData.isNullable() call ResultSetMetaData.isNullable() call ResultSetMetaData.isNullable() call ResultSetMetaData.isNullable() call ResultSetMetaData.isNullable() == = call java.sql.ResultSetMetaData.isWritable(int) call java.sql.ResultSetMetaData.isWritable(int) call java.sql.ResultSetMetaData.isWritable(int) call java.sql.ResultSetMetaData.isWritable(int) call java.sql.ResultSetMetaData.isWritable(int) if ! = call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) = = public public throws if return if ! throw new if == || throw new = = call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) call sun.rmi.transport.Connection.createStatement(int,int,int) = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if > = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) - + = + call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() = public public throws = if ! throw new LogColumn public public throws if ! throw new if != return = if == || ! > throw new if ! throw new + + if != && != && == throw new decl_stmt LogColumn for = < ++ = call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) if call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() call LogColumn.name() if ! throw new + + if == = return else if == = try = catch try = catch throw new + + return else if == = = return else if == = return else if == = = return boolean LogColumn public public if return if ! = return if != = return decl_stmt boolean = decl_stmt LogColumn for = < ++ = call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) if || ! continue if ! && == = + + return if == && == = + + return else if == && == = + + return else if == = if ! return for = < ++ = call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) call java.util.ArrayList.get(int) if || ! continue if != if == = else += + try = call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) call sun.tools.tree.Statement.executeQuery(String) + + + + catch = + + + + return = return public public return public public try return != && ! call sun.rmi.transport.Connection.isClosed() call sun.rmi.transport.Connection.isClosed() call sun.rmi.transport.Connection.isClosed() call sun.rmi.transport.Connection.isClosed() call sun.rmi.transport.Connection.isClosed() catch return String public public decl_stmt java.lang.String = new = return