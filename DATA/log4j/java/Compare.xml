org.apache.log4j.util java.io.BufferedReader import java.io.FileNotFoundException import java.io.FileReader import java.io.IOException import java.io.FileInputStream import java.io.InputStream import java.io.InputStreamReader import java.io.File import class org.apache.log4j.util.Compare int int String String BufferedReader BufferedReader int static public static public throws decl_stmt java.io.BufferedReader = new new decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String decl_stmt int = while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != ++ decl_stmt java.lang.String = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + + + + return if call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) call java.io.BufferedReader.read(char,int,int) != - + + + + return return String InputStream File private static final private static final final final final final throws decl_stmt java.lang.String = if = + decl_stmt java.io.InputStream = if == decl_stmt File = new if call File.exists() call File.exists() call File.exists() call File.exists() call File.exists() = new else throw new + + return BufferedReader BufferedReader public static public static final final final final throws decl_stmt java.io.BufferedReader = new new decl_stmt java.io.BufferedReader = new new try return finally call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() String String int public static public static throws decl_stmt java.lang.String decl_stmt int = while = != ++ decl_stmt java.lang.String = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) + + + + + + + + + return if != - + + + + return return int InputStream BufferedReader String private static private static throws decl_stmt java.io.InputStream = decl_stmt java.io.BufferedReader = new new decl_stmt java.lang.String decl_stmt int = + + while = call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) call java.io.BufferedReader.readLine(boolean) != ++ if < else if < else if < else call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close() call BufferedReader.close()