org.apache.log4j.helpers java.io.InputStream import java.io.InterruptedIOException import java.net.URL import java.util.Properties import org.apache.log4j.Level import org.apache.log4j.PropertyConfigurator import org.apache.log4j.spi.Configurator import org.apache.log4j.spi.LoggerRepository import class org.apache.log4j.helpers.OptionConverter String int int char decl String int public static public static decl_stmt int = + decl_stmt java.lang.String = new return int char StringBuffer int public static public static decl_stmt char decl_stmt int = decl_stmt java.lang.StringBuffer = new decl_stmt int = while < = ++ if == = ++ if == = else if == = else if == = else if == = else if == = else if == = else if == = else if == = call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() public static public static try return catch + + return String public static public static decl_stmt java.lang.String = if == + return return call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() call java.lang.String.trim() String public static public static if == return decl_stmt java.lang.String = if return if return return String public static public static if != decl_stmt java.lang.String = try return catch + + return int decl reflect String decl Class decl java Class decl lang Level String public static public static if == return = decl_stmt int = if == - if return else return decl_stmt org.apache.log4j.Level = decl_stmt java.lang.String = + decl_stmt java.lang.String = if return + + + + + + try decl_stmt java.lang.Class = decl_stmt java.lang.Class = new decl_stmt com.sun.jdi.Method = call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() call Class.getMethod() decl_stmt java.lang.Object = new decl_stmt java.lang.Object = call decl java.invoke() call decl java.invoke() call decl java.invoke() call decl java.invoke() call decl java.invoke() = catch + + catch + + + catch if instanceof || instanceof + + + catch + + catch + + catch + + + + return int String long public static public static if == return decl_stmt java.lang.String = decl_stmt long = decl_stmt int if = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - = = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) else if = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - = * = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) else if = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - = * * = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if != try return * catch + + + + return String public static public static decl_stmt java.lang.String = if == return try return catch + + return Class public static public static if != try decl_stmt java.lang.Class = if ! + + + + + + + + + call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() + + call java.lang.Class.getClassLoader() call java.lang.Class.getClassLoader() call java.lang.Class.getClassLoader() call java.lang.Class.getClassLoader() call java.lang.Class.getClassLoader() + return return call java.lang.Class.newInstance() call java.lang.Class.newInstance() call java.lang.Class.newInstance() call java.lang.Class.newInstance() call java.lang.Class.newInstance() catch + + catch + + catch + + catch + + return int String int StringBuffer String String public static public static throws decl_stmt java.lang.StringBuffer = new decl_stmt int = decl_stmt int while = if == - if == return else call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) = if == - throw new + + + + else += decl_stmt java.lang.String = decl_stmt java.lang.String = if == && != = if != decl_stmt java.lang.String = call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) = + Configurator static public static public decl_stmt org.apache.log4j.spi.Configurator = if != + = if == + + return else = new call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) String Configurator static public static public decl_stmt org.apache.log4j.spi.Configurator = decl_stmt java.lang.String = if == && != && call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = if != + = if == + + return else = new call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository) call org.apache.log4j.spi.Configurator.doConfigure(InputStream,LoggerRepository)