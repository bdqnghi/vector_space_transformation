org.apache.log4j.gui java.awt.Color import java.awt.Image import java.awt.Toolkit import java.io.* import java.net.URL import java.util.Enumeration import java.util.StringTokenizer import java.util.Hashtable import java.util.ArrayList import javax.swing.JPanel import org.apache.log4j.* import org.apache.log4j.spi.LoggingEvent import org.apache.log4j.helpers.Loader import org.apache.log4j.helpers.QuietWriter import org.apache.log4j.helpers.TracerPrintWriter import org.apache.log4j.helpers.OptionConverter import class org.apache.log4j.gui.TextPanelAppender super super extends String QuietWriter String String LogPublishingThread String StringWriter String String String TracerPrintWriter String String LogTextPanel public public String public public decl_stmt java.lang.String = if != for = < call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() ++ if call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() == call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() + += call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() call StringWriter.getBuffer() else if ! call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) += call LogPublishingThread.publishEvent() call LogPublishingThread.publishEvent() call LogPublishingThread.publishEvent() call LogPublishingThread.publishEvent() call LogPublishingThread.publishEvent() public public return public public return new public public = protected protected = call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) public public if call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) if call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) if call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) if call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) if call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) call org.apache.log4j.gui.LogTextPanel.setTextColor(Priority,Color) if call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) call org.apache.log4j.gui.LogTextPanel.setTextBackground(Color) if call org.apache.log4j.gui.LogTextPanel.setTextFontSize(int) call org.apache.log4j.gui.LogTextPanel.setTextFontSize(int) call org.apache.log4j.gui.LogTextPanel.setTextFontSize(int) call org.apache.log4j.gui.LogTextPanel.setTextFontSize(int) call org.apache.log4j.gui.LogTextPanel.setTextFontSize(int) if call org.apache.log4j.gui.LogTextPanel.setTextFontName(String) call org.apache.log4j.gui.LogTextPanel.setTextFontName(String) call org.apache.log4j.gui.LogTextPanel.setTextFontName(String) call org.apache.log4j.gui.LogTextPanel.setTextFontName(String) call org.apache.log4j.gui.LogTextPanel.setTextFontName(String) if call org.apache.log4j.gui.LogTextPanel.setEventBufferSize(int) call org.apache.log4j.gui.LogTextPanel.setEventBufferSize(int) call org.apache.log4j.gui.LogTextPanel.setEventBufferSize(int) call org.apache.log4j.gui.LogTextPanel.setEventBufferSize(int) call org.apache.log4j.gui.LogTextPanel.setEventBufferSize(int) return public public return public public while synchronized try catch call org.apache.log4j.gui.LogTextPanel.newEvents(EventBufferElement) call org.apache.log4j.gui.LogTextPanel.newEvents(EventBufferElement) call org.apache.log4j.gui.LogTextPanel.newEvents(EventBufferElement) call org.apache.log4j.gui.LogTextPanel.newEvents(EventBufferElement) call org.apache.log4j.gui.LogTextPanel.newEvents(EventBufferElement) new public public synchronized new if != &&