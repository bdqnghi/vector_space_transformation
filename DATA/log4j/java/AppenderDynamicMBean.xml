org.apache.log4j.jmx org.apache.log4j.Appender import org.apache.log4j.Layout import org.apache.log4j.Level import org.apache.log4j.Logger import org.apache.log4j.Priority import org.apache.log4j.helpers.OptionConverter import org.apache.log4j.spi.OptionHandler import javax.management.Attribute import javax.management.AttributeNotFoundException import javax.management.InvalidAttributeValueException import javax.management.JMException import javax.management.MBeanAttributeInfo import javax.management.MBeanConstructorInfo import javax.management.MBeanException import javax.management.MBeanInfo import javax.management.MBeanNotificationInfo import javax.management.MBeanOperationInfo import javax.management.MBeanParameterInfo import javax.management.MBeanServer import javax.management.MalformedObjectNameException import javax.management.ObjectName import javax.management.ReflectionException import javax.management.RuntimeOperationsException import java.beans.BeanInfo import java.beans.IntrospectionException import java.beans.Introspector import java.beans.PropertyDescriptor import java.lang.reflect.Constructor import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.util.Hashtable import java.util.Vector import java.io.InterruptedIOException import class org.apache.log4j.jmx.AppenderDynamicMBean super super extends Hashtable decl MBeanOperationInfo String Logger Vector decl MBeanConstructorInfo Appender String String String Method decl Constructor BeanInfo decl MBeanParameterInfo Method decl PropertyDescriptor Class int private private throws decl_stmt java.lang.reflect.Constructor = = new decl_stmt java.beans.BeanInfo = call Appender.getClass() call Appender.getClass() call Appender.getClass() call Appender.getClass() call Appender.getClass() decl_stmt java.beans.PropertyDescriptor = call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() call java.beans.BeanInfo.getPropertyDescriptors() decl_stmt int = for = < ++ decl_stmt java.lang.String = decl_stmt com.sun.jdi.Method = decl_stmt com.sun.jdi.Method = if != decl_stmt java.lang.Class = call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() if decl_stmt java.lang.String if call Class.isAssignableFrom() call Class.isAssignableFrom() call Class.isAssignableFrom() call Class.isAssignableFrom() call Class.isAssignableFrom() = else = call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.lang.Class.getName() call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) new != call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) call java.util.Hashtable.put(K,V) new decl_stmt javax.management.MBeanParameterInfo = new = new = new = new = new private private if return if == return if return return decl MBeanAttributeInfo public public call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() decl_stmt javax.management.MBeanAttributeInfo = new call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.size() call java.util.Vector.toArray() call java.util.Vector.toArray() call java.util.Vector.toArray() call java.util.Vector.toArray() call java.util.Vector.toArray() return new new Layout OptionHandler public public throws if && instanceof decl_stmt org.apache.log4j.spi.OptionHandler = call OptionHandler.activateOptions() call OptionHandler.activateOptions() call OptionHandler.activateOptions() call OptionHandler.activateOptions() call OptionHandler.activateOptions() return else if decl_stmt org.apache.log4j.Layout = call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) call org.apache.log4j.Appender.setLayout(Layout) return String ObjectName LayoutDynamicMBean if == return decl_stmt java.lang.String = + + call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + decl_stmt ObjectName = try decl_stmt org.apache.log4j.jmx.LayoutDynamicMBean = new = new + if ! call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) new + + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() + + protected protected return MethodUnion public public throws if == throw new new + + call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + if + call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() + try return new + catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() decl_stmt MethodUnion = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if != && != try return call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() call MethodUnion.readMethod() catch return catch if instanceof || instanceof return catch return throw new + + + MethodUnion decl Object decl Class String Object public public throws if == throw new new + + decl_stmt java.lang.String = decl_stmt java.lang.Object = if == throw new new + + decl_stmt MethodUnion = call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) call java.util.Hashtable.get(Object) if != && != decl_stmt java.lang.Object = new decl_stmt java.lang.Class = call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() if == = = try call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() call MethodUnion.writeMethod() catch if instanceof || instanceof call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() catch call Logger.error() call Logger.error() call Logger.error() call Logger.error() call Logger.error() else if call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) else throw new + + + public public call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() call Logger.debug() + + + = call org.apache.log4j.Appender.getLayout() call org.apache.log4j.Appender.getLayout() call org.apache.log4j.Appender.getLayout() call org.apache.log4j.Appender.getLayout() call org.apache.log4j.Appender.getLayout() return