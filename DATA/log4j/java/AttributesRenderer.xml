org.apache.log4j.or.sax org.apache.log4j.or.ObjectRenderer import org.xml.sax.Attributes import class org.apache.log4j.or.sax.AttributesRenderer super super implements Attributes int StringBuffer boolean public public if instanceof decl_stmt java.lang.StringBuffer = new decl_stmt java.util.jar.Attributes = decl_stmt int = call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() decl_stmt boolean = for = < ++ if = else call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.lang.StringBuffer.append(boolean) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) return call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() call java.lang.StringBuffer.toString() else try return catch return