org.apache.log4j.pattern java.util.ArrayList import java.util.List import class org.apache.log4j.pattern.NameAbbreviator NameAbbreviator int int int int int String char ArrayList public static public static final final if > decl_stmt java.lang.String = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() == return decl_stmt int = if call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == ++ for < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) >= && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) <= ++ if == call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt int = if >= return new else return new - decl_stmt java.util.ArrayList = new decl_stmt char decl_stmt int decl_stmt int = while < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() && >= decl_stmt int = if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) == = ++ else if call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) >= && call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) <= = call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) - ++ else = = if < call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() = call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) call java.lang.String.charAt(int) if == = call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) call java.util.ArrayList.add(E) new = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if == - break ++ return new return public static public static return public public final final final final String int public public final final final final decl_stmt int = - decl_stmt java.lang.String = for = > -- = call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) call java.lang.String.lastIndexOf(String,int) - if == - || < return + int public public final final final final decl_stmt int = for = != - = + if -- == + break int public public final final final final decl_stmt int = if != - if - > + = + if != ++ ++ return PatternAbbreviatorFragment int public public final final final final decl_stmt int = for = < - && < ++ = decl_stmt PatternAbbreviatorFragment = - while < && >= = call PatternAbbreviatorFragment.abbreviate() call PatternAbbreviatorFragment.abbreviate() call PatternAbbreviatorFragment.abbreviate() call PatternAbbreviatorFragment.abbreviate() call PatternAbbreviatorFragment.abbreviate()