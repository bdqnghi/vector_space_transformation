org.apache.log4j.net java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import java.net.Socket import org.apache.log4j.Logger import org.apache.log4j.PatternLayout import junit.framework.TestCase import class org.apache.log4j.net.TelnetAppenderTest super super extends ByteArrayOutputStream int InputStream Socket int public public try decl_stmt java.net.Socket = new decl_stmt java.io.InputStream = call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() call java.net.Socket.getInputStream() while ! decl_stmt int = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) if == - break call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call java.io.ByteArrayOutputStream.write(int) call Socket.close() call Socket.close() call Socket.close() call Socket.close() call Socket.close() catch String Thread int Logger TelnetAppender public public throws decl_stmt int = decl_stmt org.apache.log4j.net.TelnetAppender = new call TelnetAppender.setName() call TelnetAppender.setName() call TelnetAppender.setName() call TelnetAppender.setName() call TelnetAppender.setName() call TelnetAppender.setPort() call TelnetAppender.setPort() call TelnetAppender.setPort() call TelnetAppender.setPort() call TelnetAppender.setPort() call TelnetAppender.setLayout() call TelnetAppender.setLayout() call TelnetAppender.setLayout() call TelnetAppender.setLayout() call TelnetAppender.setLayout() new call org.apache.log4j.net.TelnetAppender.activateOptions() call org.apache.log4j.net.TelnetAppender.activateOptions() call org.apache.log4j.net.TelnetAppender.activateOptions() call org.apache.log4j.net.TelnetAppender.activateOptions() call org.apache.log4j.net.TelnetAppender.activateOptions() decl_stmt org.apache.log4j.Logger = call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() decl_stmt java.lang.Thread = new call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call java.util.logging.Logger.info(String) call org.apache.log4j.net.TelnetAppender.close() call org.apache.log4j.net.TelnetAppender.close() call org.apache.log4j.net.TelnetAppender.close() call org.apache.log4j.net.TelnetAppender.close() call org.apache.log4j.net.TelnetAppender.close() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.interrupt() call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) decl_stmt java.lang.String = call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.io.ByteArrayOutputStream.toString(int) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) if == -