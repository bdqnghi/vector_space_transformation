com.psibt.framework.net java.io.* import java.net.* import java.util.* import org.apache.log4j.* import class com.psibt.framework.net.Log4jRequestHandler super super extends decl Priority AppenderSkeleton String int URL String StringTokenizer String Category String String String Appender public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String try decl_stmt java.net.URL = new + = call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() = call java.net.URL.getQuery() call java.net.URL.getQuery() call java.net.URL.getQuery() call java.net.URL.getQuery() call java.net.URL.getQuery() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) == return + + + if != && call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() >= decl_stmt java.util.StringTokenizer = new decl_stmt java.lang.String decl_stmt java.lang.String decl_stmt java.lang.String decl_stmt int while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) call java.lang.String.equalsIgnoreCase(String) else + + decl_stmt org.apache.log4j.Category = + call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() + for = < ++ if call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() + else + for = call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() decl_stmt org.apache.log4j.Appender = = call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() if == = if instanceof try decl_stmt org.apache.log4j.AppenderSkeleton = + call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() + catch if for = = + call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() + + call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() call org.apache.log4j.Category.getName() + for = < ++ if call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() call org.apache.log4j.Category.getChainedPriority() + else + for = call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() call org.apache.log4j.Category.getAllAppenders() decl_stmt org.apache.log4j.Appender = = call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() call org.apache.log4j.Appender.getName() if == = if instanceof try decl_stmt org.apache.log4j.AppenderSkeleton = + call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() call org.apache.log4j.AppenderSkeleton.getThreshold() + catch if return catch return