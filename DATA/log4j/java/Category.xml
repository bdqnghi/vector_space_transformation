org.apache.log4j org.apache.log4j.spi.AppenderAttachable import org.apache.log4j.spi.LoggingEvent import org.apache.log4j.spi.LoggerRepository import org.apache.log4j.spi.HierarchyEventListener import org.apache.log4j.helpers.NullEnumeration import org.apache.log4j.helpers.AppenderAttachableImpl import java.util.Enumeration import java.util.MissingResourceException import java.util.ResourceBundle import java.util.Vector import class org.apache.log4j.Category super super implements Category boolean String LoggerRepository Level AppenderAttachableImpl ResourceBundle String synchronized public synchronized public if == = new call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.addAppender(Appender) call org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender) call org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender) call org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender) call org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender) call org.apache.log4j.spi.LoggerRepository.fireAddAppenderEvent(Category,Appender) public public if ! int public public decl_stmt int = for = != = synchronized if != += if ! break if == call org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category) call org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category) call org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category) call org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category) call org.apache.log4j.spi.LoggerRepository.emitNoAppenderWarning(Category) Appender Enumeration synchronized synchronized decl_stmt java.util.Enumeration = if != while call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() call Enumeration.hasMoreElements() decl_stmt org.apache.log4j.Appender = call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() call java.util.Enumeration.nextElement() if instanceof call org.apache.log4j.Appender.close() call org.apache.log4j.Appender.close() call org.apache.log4j.Appender.close() call org.apache.log4j.Appender.close() call org.apache.log4j.Appender.close() public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public static public static return public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if protected protected new public public return synchronized public synchronized public if == return else return call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() synchronized public synchronized public if == || == return return call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) public public for = != = if != return return public public for = != = if != return return public static public static return public static public static return public public return public public return public static public static return public static public static return public final public final return final public final public return final public final public return final public final public return final public static final public static return public public for = != = if != return return ResourceBundle protected protected decl_stmt java.util.ResourceBundle = if == return else try return call java.util.ResourceBundle.getString(String) call java.util.ResourceBundle.getString(String) call java.util.ResourceBundle.getString(String) call java.util.ResourceBundle.getString(String) call java.util.ResourceBundle.getString(String) catch + + return public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if == || == return else return call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return return public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return return call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return return String public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if decl_stmt java.lang.String = if == = String String public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if decl_stmt java.lang.String = decl_stmt java.lang.String if == = else = public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() call Level.isGreaterOrEqual() private private final final if != if instanceof else if instanceof Vector synchronized public synchronized public if != decl_stmt java.util.Vector = new for = call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() call org.apache.log4j.helpers.AppenderAttachableImpl.getAllAppenders() != && call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call java.util.Vector.add(int,E) call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() call AppenderAttachableImpl.removeAllAppenders() for = call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() call java.util.Vector.elements() = boolean synchronized public synchronized public if == || == return decl_stmt boolean = call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.isAttached(Appender) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) if Appender synchronized public synchronized public if == || == return decl_stmt org.apache.log4j.Appender = call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.getAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) call org.apache.log4j.helpers.AppenderAttachableImpl.removeAppender(String) if != public public = final final = public public = public public = public public = public static public static public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if public public if call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) call org.apache.log4j.spi.LoggerRepository.isDisabled(int) return if