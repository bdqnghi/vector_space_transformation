Cassandra.Serialization System using System.Collections using System.Collections.Generic using System.Linq using System.Numerics using class Cassandra.Serialization.Serializer decl IDictionary TupleSerializer Serializer decl IDictionary CollectionSerializer decl IDictionary byte decl byte decl Dictionary Logger decl Dictionary UdtSerializer DictionarySerializer return = ITypeSerializer internal internal decl_stmt Cassandra.Serialization.ITypeSerializer if call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out return call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) switch case if == || ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = return call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.ITypeSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) case return call Cassandra.Serialization.UdtSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.UdtSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.UdtSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.UdtSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.UdtSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) case case return call Cassandra.Serialization.CollectionSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.CollectionSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.CollectionSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.CollectionSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.CollectionSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) case return call Cassandra.Serialization.DictionarySerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.DictionarySerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.DictionarySerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.DictionarySerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.DictionarySerializer.Deserialize(ushort,byte,int,int,IColumnInfo) case return call Cassandra.Serialization.TupleSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.TupleSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.TupleSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.TupleSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) call Cassandra.Serialization.TupleSerializer.Deserialize(ushort,byte,int,int,IColumnInfo) return decl Func internal internal decl_stmt Func < if ! call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out throw new + return var var var ITypeSerializer private private decl_stmt var = if == || ! call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() call var.CustomTypeName() decl_stmt Cassandra.Serialization.ITypeSerializer if call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out return return decl_stmt var = decl_stmt var = call Cassandra.Serialization.UdtSerializer.GetUdtMap(Type) call Cassandra.Serialization.UdtSerializer.GetUdtMap(Type) call Cassandra.Serialization.UdtSerializer.GetUdtMap(Type) call Cassandra.Serialization.UdtSerializer.GetUdtMap(Type) call Cassandra.Serialization.UdtSerializer.GetUdtMap(Type) + + if == throw new + + + return var ITypeSerializer ColumnTypeCode IColumnInfo public public out out = decl_stmt Cassandra.Serialization.ITypeSerializer if call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out return if > && call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = return if decl_stmt IColumnInfo decl_stmt ColumnTypeCode = out = new = = return if if == typeof <> return out if typeof decl_stmt IColumnInfo decl_stmt ColumnTypeCode decl_stmt var = if typeof && call var.Any() call var.Any() call var.Any() call var.Any() call var.Any() && == typeof <,> = out = out = new = = = = return if call var.Any() call var.Any() call var.Any() call var.Any() call var.Any() && == typeof <> = out = new = = return = out = new = = return