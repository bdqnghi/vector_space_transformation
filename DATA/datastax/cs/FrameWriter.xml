Cassandra System using System.Collections.Generic using System.IO using System.Linq using System.Text using Cassandra.Serialization using class Cassandra.FrameWriter MemoryStream Serializer byte long return return var internal internal decl_stmt var = new = call System.IO.MemoryStream.Read(byte,int,int) call System.IO.MemoryStream.Read(byte,int,int) call System.IO.MemoryStream.Read(byte,int,int) call System.IO.MemoryStream.Read(byte,int,int) call System.IO.MemoryStream.Read(byte,int,int) return public public call System.IO.MemoryStream.WriteByte(byte) call System.IO.MemoryStream.WriteByte(byte) call System.IO.MemoryStream.WriteByte(byte) call System.IO.MemoryStream.WriteByte(byte) call System.IO.MemoryStream.WriteByte(byte) public public public public public public public public var public public decl_stmt var = short var public public decl_stmt var = public public < short foreach in public public if == - return if == - return public public call Serializer.Serialize() call Serializer.Serialize() call Serializer.Serialize() call Serializer.Serialize() call Serializer.Serialize() public public short public public < short foreach in decl byte var public public decl_stmt byte if < if > throw new + = new byte return decl_stmt var = = new protected protected call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) long var var public public decl_stmt var = - decl_stmt var = - decl_stmt long = if >= = = + call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) call System.IO.MemoryStream.Write(byte,int,int) = return