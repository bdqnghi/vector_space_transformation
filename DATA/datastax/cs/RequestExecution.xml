Cassandra.Requests System using System.Collections.Generic using System.Linq using System.Net using System.Net.Sockets using System.Threading using System.Threading.Tasks using Cassandra.Responses using Cassandra.Tasks using class Connection OperationState int IRequest decl Dictionary ISession decl RequestHandler Logger public public if == return call Cassandra.OperationState.Cancel() call Cassandra.OperationState.Cancel() call Cassandra.OperationState.Cancel() call Cassandra.OperationState.Cancel() call Cassandra.OperationState.Cancel() public public = if ! call decl RequestHandler.GetNextConnection() call decl RequestHandler.GetNextConnection() call decl RequestHandler.GetNextConnection() call decl RequestHandler.GetNextConnection() call decl RequestHandler.GetNextConnection() if != return = return if == throw new private private try catch var private private < decl_stmt var = if != = = call Connection.Send() call Connection.Send() call Connection.Send() call Connection.Send() call Connection.Send() public public if call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() return try if != return if typeof == typeof return if typeof == typeof return throw new typeof catch call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() public public ? ++ if != && is = call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() var RowSet private private decl_stmt var = if is return decl_stmt Cassandra.RowSet if is = else if is = = call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() var private private decl_stmt var = new call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() var private private if != if != new if != = for = < ++ decl_stmt var = if is = else if is = call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) + = call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() call decl Dictionary.Keys() if is return object var var private private = != && if && != && is && typeof == typeof = if call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) return new decl_stmt var = < < = decl_stmt var = new < return object var var var private private call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) if is && is || is return if is call decl RequestHandler.SetNoMoreHosts() call decl RequestHandler.SetNoMoreHosts() call decl RequestHandler.SetNoMoreHosts() call decl RequestHandler.SetNoMoreHosts() call decl RequestHandler.SetNoMoreHosts() return decl_stmt var = if != = if is return if is call Logger.Verbose() call Logger.Verbose() call Logger.Verbose() call Logger.Verbose() call Logger.Verbose() + if != call decl RequestHandler.SetHostDown() call decl RequestHandler.SetHostDown() call decl RequestHandler.SetHostDown() call decl RequestHandler.SetHostDown() call decl RequestHandler.SetHostDown() else decl_stmt var = switch case call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() break case if typeof typeof decl_stmt var = new call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() else call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() default break case break var private private call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) if == || == call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) return decl_stmt var = call var.CheckHealth() call var.CheckHealth() call var.CheckHealth() call var.CheckHealth() call var.CheckHealth() if || is if call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() call decl RequestHandler.HasCompleted() return return call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() var var public static public static decl_stmt var = if is = else if is || is || is = else if is decl_stmt var = = else if is decl_stmt var = = else if is decl_stmt var = = return BoundStatement decl Func var var private private call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) decl_stmt Cassandra.BoundStatement = if is = else if is decl_stmt var = decl_stmt Func < = is && = call var.Queries() call var.Queries() call var.Queries() call var.Queries() call var.Queries() call var.Queries() call var.Queries() call var.Queries() call var.Queries() if == throw new decl_stmt var = new if != && != call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) + call Connection.SetKeyspace() call Connection.SetKeyspace() call Connection.SetKeyspace() call Connection.SetKeyspace() call Connection.SetKeyspace() return return var private private try if != return decl_stmt var = if ! is throw new + call var.GetType() call var.GetType() call var.GetType() call var.GetType() call var.GetType() catch call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() var object var private private decl_stmt var = if ! is throw new + call var.GetType() call var.GetType() call var.GetType() call var.GetType() call var.GetType() if ! is throw new + call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() call IRequest.GetType() + decl_stmt var = decl_stmt object = new = call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() call decl RequestHandler.SetCompleted() private static private static if == throw new if ! is throw new +