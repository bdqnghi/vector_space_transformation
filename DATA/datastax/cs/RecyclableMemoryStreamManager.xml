Microsoft.IO System using System.Collections.Concurrent using System.Collections.Generic using System.Diagnostics.CodeAnalysis using System.IO using System.Linq using System.Threading using class Microsoft.IO.RecyclableMemoryStreamManager long int long decl long int decl ConcurrentStack int int int int decl long return return return return return return return return long decl_stmt long = foreach in += return decl byte internal internal decl_stmt byte if ! out = new if != else ref - ref return decl byte string var internal internal = decl_stmt var = / - decl_stmt byte if < if ! out = new if != else ref - else = - = new decl_stmt string = if = if != ref return private private return + - / * private private return != && == var internal internal if == throw new if ! throw new + decl_stmt var = / - if < if + * <= || == ref else = - ref - if != var internal internal < if == throw new decl_stmt var = * ref - foreach in if == || != throw new foreach in if == || < ref else if != break if != internal internal if != internal internal if != internal internal if != internal internal if != internal internal if != public public return new public public return new public public return new public public if ! || <= return return new var public public decl_stmt var = new call var.Write() call var.Write() call var.Write() call var.Write() call var.Write() = return