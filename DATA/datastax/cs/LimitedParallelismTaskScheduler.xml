Cassandra.Tasks System using System.Collections.Concurrent using System.Collections.Generic using System.Linq using System.Text using System.Threading using System.Threading.Tasks using class Cassandra.Tasks.LimitedParallelismTaskScheduler super super TaskScheduler decl LinkedList int bool int return protected sealed override protected sealed override lock call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() call decl LinkedList.AddLast() if >= return ++ Task private private = try while decl_stmt System.Threading.Tasks.Task lock if == -- break = call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() call decl LinkedList.RemoveFirst() finally = protected sealed override protected sealed override if ! return if return protected sealed override protected sealed override lock return call decl LinkedList.Remove() call decl LinkedList.Remove() call decl LinkedList.Remove() call decl LinkedList.Remove() call decl LinkedList.Remove() var protected sealed override < protected sealed override < decl_stmt var = try ref if return call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() call decl LinkedList.ToArray() else throw new finally if