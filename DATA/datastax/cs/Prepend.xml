Cassandra.IntegrationTests.Linq.CqlOperatorTests System using System.Collections.Generic using System.Linq using System.Runtime.InteropServices using Cassandra.Data.Linq using Cassandra.IntegrationTests.Linq.Structures using Cassandra.IntegrationTests.TestBase using Cassandra.Mapping using NUnit.Framework using class attribute Cassandra.IntegrationTests.Linq.CqlOperatorTests.Prepend super super SharedClusterTest ISession protected override protected override = EntityWithListType var decl List decl List decl Tuple decl List decl Table EntityWithListType public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt System.Collections.Generic.List < = new < - decl_stmt System.Collections.Generic.List < = new < call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType var decl List decl List decl Tuple decl List decl Table EntityWithListType public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt System.Collections.Generic.List < = new < - decl_stmt System.Collections.Generic.List < = new < call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType decl List decl List decl Tuple EntityWithListType decl Table var public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt System.Collections.Generic.List < = new < decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithArrayType decl string decl Tuple decl List decl Table var public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt string = new + + + decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call decl string.Concat() call decl string.Concat() call decl string.Concat() call decl string.Concat() call decl string.Concat() EntityWithArrayType decl List decl List decl string decl string EntityWithArrayType decl string decl Tuple decl List decl Table decl List public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt string = new + + + decl_stmt System.Collections.Generic.List < = call decl string.ToList() call decl string.ToList() call decl string.ToList() call decl string.ToList() call decl string.ToList() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() call decl List.Reverse() decl_stmt string = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt string = < EntityWithArrayType decl List decl string decl List decl string decl Tuple EntityWithArrayType decl Table decl List public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt string = new decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt string = < EntityWithDictionaryType var var string decl List EntityWithDictionaryType decl Table decl Tuple decl Dictionary public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt System.Collections.Generic.Dictionary < = new < + + + + decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() decl_stmt var = new < foreach in call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() foreach in call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() decl_stmt string = decl_stmt var = < call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new =