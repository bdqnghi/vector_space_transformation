Cassandra System using System.Collections using System.Collections.Generic using System.Net using System.Linq using System.Text using class Cassandra.TokenMap decl Dictionary Logger decl List TokenFactory decl Dictionary internal < < internal < < return var var var var decl Dictionary var DatacenterInfo var var var var var public static public static < < decl_stmt var = if == return decl_stmt var = new < decl_stmt var = new < decl_stmt var = new < foreach in if != decl_stmt DatacenterInfo if ! call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() out = = new ++ call DatacenterInfo.AddRack() call DatacenterInfo.AddRack() call DatacenterInfo.AddRack() call DatacenterInfo.AddRack() call DatacenterInfo.AddRack() foreach in try decl_stmt var = call var.Parse() call var.Parse() call var.Parse() call var.Parse() call var.Parse() call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() = catch call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) decl_stmt var = new < decl_stmt var = new < < < decl_stmt var = new < < < decl_stmt var = foreach in decl_stmt System.Collections.Generic.Dictionary < < if == = else if == decl_stmt var = if ! call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() out = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() else = call var.ToDictionary() call var.ToDictionary() call var.ToDictionary() call var.ToDictionary() call var.ToDictionary() < new < new = return new var private static private static < decl_stmt var = new foreach in call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString() var var var var var var var int var var decl HashSet int private static < < private static < < < < < < decl_stmt var = new < < for = < ++ decl_stmt var = decl_stmt var = new < decl_stmt var = new < decl_stmt var = new < < decl_stmt var = new < for = < ++ decl_stmt var = + if >= = decl_stmt var = decl_stmt var = decl_stmt int if ! out continue = decl_stmt int call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() out if >= continue decl_stmt System.Collections.Generic.HashSet < if ! call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() out = = new < if != && call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() && < if < - call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() continue += call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() : = if != && call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() && == += if break = return var var internal static internal static < < decl_stmt var = decl_stmt var = - foreach in == if ++ == break