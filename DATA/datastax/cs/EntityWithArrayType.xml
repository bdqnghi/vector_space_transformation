Cassandra.IntegrationTests.Linq.Structures System using System.Collections.Generic using System.Linq using System.Text using Cassandra.Data.Linq using Cassandra.IntegrationTests.TestBase using Cassandra.Mapping using NUnit.Framework using class Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType int decl Table decl List var public static < < < public static < < < decl_stmt var = new new < + decl_stmt Cassandra.Data.Linq.Table < = new < call decl Table.Create() call decl Table.Create() call decl Table.Create() call decl Table.Create() call decl Table.Create() decl_stmt System.Collections.Generic.List < = foreach in call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() return new < < < decl List public static < public static < decl_stmt System.Collections.Generic.List < = new < for = < ++ call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return EntityWithArrayType public static public static = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = new = = new return decl List EntityWithArrayType public public decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = new = decl_stmt System.Collections.Generic.List < = new < call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() return public public