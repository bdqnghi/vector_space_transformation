Cassandra.Requests System using System.Collections.Generic using System.Linq using System.Net using System.Net.Sockets using System.Threading using System.Threading.Tasks using Cassandra.Collections using Cassandra.Serialization using Cassandra.Tasks using class decl ICollection IRequest object Host int ISession decl HashedWheelTimer ISpeculativeExecutionPlan int decl IEnumerator int Logger decl TaskCompletionSource var ICqlRequest var var internal static internal static decl_stmt Cassandra.Requests.ICqlRequest = if == if is decl_stmt var = = decl_stmt var = = = new if is decl_stmt var = decl_stmt var = = new if is decl_stmt var = = decl_stmt var = if != = = new if == throw new + + = return public public = return public public return var private private decl_stmt var = ref == if ! return if != call decl HashedWheelTimer.Cancel() call decl HashedWheelTimer.Cancel() call decl HashedWheelTimer.Cancel() call decl HashedWheelTimer.Cancel() call decl HashedWheelTimer.Cancel() foreach in if != call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() return if != try call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() catch call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() return call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() call decl TaskCompletionSource.TrySetResult() return public public < call decl ICollection.Remove() call decl ICollection.Remove() call decl ICollection.Remove() call decl ICollection.Remove() call decl ICollection.Remove() if > call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) return public public return ref == var Host private private decl_stmt Cassandra.Host = lock while call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() call decl IEnumerator.MoveNext() decl_stmt var = if = break return var var var var var internal < internal < < decl_stmt var = if == || return < new = = decl_stmt var = decl_stmt var = return call var.BorrowConnection() call var.BorrowConnection() call var.BorrowConnection() call var.BorrowConnection() call var.BorrowConnection() if != decl_stmt var = if is throw if is call var.SetDown() call var.SetDown() call var.SetDown() call var.SetDown() call var.SetDown() call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) call Cassandra.Logger.Error(string,object) = return decl_stmt var = if == return return call var.SetKeyspace() call var.SetKeyspace() call var.SetKeyspace() call var.SetKeyspace() call var.SetKeyspace() Host public public decl_stmt Cassandra.Host if ! call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() out return call Cassandra.Host.SetDown(bool) call Cassandra.Host.SetDown(bool) call Cassandra.Host.SetDown(bool) call Cassandra.Host.SetDown(bool) call Cassandra.Host.SetDown(bool) public < public < if == call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() call decl TaskCompletionSource.TrySetException() new return return var private private try decl_stmt var = new < call var.Start() call var.Start() call var.Start() call var.Start() call var.Start() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() call decl ICollection.Add() catch if == catch var private private if == || == return if == = decl_stmt var = call ISpeculativeExecutionPlan.NextExecution() call ISpeculativeExecutionPlan.NextExecution() call ISpeculativeExecutionPlan.NextExecution() call ISpeculativeExecutionPlan.NextExecution() call ISpeculativeExecutionPlan.NextExecution() if <= return = call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() call ISession.Cluster() if return call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object)