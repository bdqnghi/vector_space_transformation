Cassandra.IntegrationTests.Mapping.Tests System using System.Collections.Generic using System.Linq using Cassandra.Data.Linq using Cassandra.IntegrationTests.Linq.Structures using Cassandra.IntegrationTests.TestBase using Cassandra.Mapping using Cassandra.Tests.Mapping.Pocos using NUnit.Framework using class attribute Cassandra.IntegrationTests.Mapping.Tests.Delete super super SharedClusterTest string decl Table Mapper ISession decl List var var protected override protected override = call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) decl_stmt var = new < decl_stmt var = new = new = new < call decl Table.Create() call decl Table.Create() call decl Table.Create() call decl Table.Create() call decl Table.Create() = public public foreach in call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl List Movie public public decl_stmt Cassandra.IntegrationTests.Linq.Structures.Movie = call Mapper.Delete() call Mapper.Delete() call Mapper.Delete() call Mapper.Delete() call Mapper.Delete() decl_stmt System.Collections.Generic.List < = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() - call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() decl List Movie public public decl_stmt Cassandra.IntegrationTests.Linq.Structures.Movie = call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() decl_stmt System.Collections.Generic.List < = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() - call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() var decl List Movie DateTime public public decl_stmt Cassandra.IntegrationTests.Linq.Structures.Movie = decl_stmt var = new foreach in call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() new decl_stmt System.Collections.Generic.List < = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() decl_stmt DateTime = while == && > = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() - call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() call decl List.Count() + call Mapper.Insert() call Mapper.Insert() call Mapper.Insert() call Mapper.Insert() call Mapper.Insert() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() call decl List.Clear() = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() = while < && && = call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() call decl Table.Execute() Movie public public decl_stmt Cassandra.IntegrationTests.Linq.Structures.Movie = < call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() new < call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() call Mapper.DeleteAsync() new var var var var public public decl_stmt var = new new < new < decl_stmt var = new decl_stmt var = new = = = = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt var = < = <