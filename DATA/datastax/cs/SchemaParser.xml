Cassandra System using System.Collections.Generic using System.Linq using System.Net using System.Text using System.Text.RegularExpressions using System.Threading.Tasks using Cassandra.Serialization using Cassandra.Tasks using Cassandra.DataCollectionMetadata.SortOrder class Cassandra.SchemaParser string Metadata IMetadataQueryProvider string string Version int int public static public static < < = if >= && ! is return new if < && ! is return new if == throw new return public < < public < < return call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) < < internal < internal < return var var var var var private < private < if >= return < new decl_stmt var = decl_stmt var = call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) decl_stmt var = if == || call var.IsNull() call var.IsNull() call var.IsNull() call var.IsNull() call var.IsNull() return = < = < = < = < < = < if call var.GetColumn() call var.GetColumn() call var.GetColumn() call var.GetColumn() call var.GetColumn() != = < return return call var.Then() call var.Then() call var.Then() call var.Then() call var.Then() if == return + decl_stmt var = return call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) call Cassandra.IMetadataQueryProvider.QueryAsync(string,bool) decl_stmt var = new < < < < ? ?? < = return