Cassandra.IntegrationTests.Linq.Structures System using System.Collections.Generic using System.Linq using Cassandra.Data.Linq using NUnit.Framework using class attribute attribute Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity super super IAllDataTypesEntity int AllDataTypesEntity public static public static decl_stmt Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity = new return public public decl List public static < public static < decl_stmt System.Collections.Generic.List < = new < for = < ++ call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return var decl List public static < public static < decl_stmt var = new < new call var.Create() call var.Create() call var.Create() call var.Create() call var.Create() decl_stmt System.Collections.Generic.List < = foreach in call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() return public static public static < return AllDataTypesEntity decl List string AllDataTypesEntity private static private static < decl_stmt Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity = decl_stmt string = decl_stmt System.Collections.Generic.List < = from in where select decl_stmt Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) return AllDataTypesEntity decl List string AllDataTypesEntity Batch private static private static < decl_stmt Cassandra.Data.Linq.Batch = decl_stmt Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity = decl_stmt string = call Cassandra.Data.Linq.Batch.Append(IEnumerable) call Cassandra.Data.Linq.Batch.Append(IEnumerable) call Cassandra.Data.Linq.Batch.Append(IEnumerable) call Cassandra.Data.Linq.Batch.Append(IEnumerable) call Cassandra.Data.Linq.Batch.Append(IEnumerable) call Cassandra.Data.Linq.Batch.Execute() call Cassandra.Data.Linq.Batch.Execute() call Cassandra.Data.Linq.Batch.Execute() call Cassandra.Data.Linq.Batch.Execute() call Cassandra.Data.Linq.Batch.Execute() decl_stmt System.Collections.Generic.List < = from in where select decl_stmt Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) call Cassandra.IntegrationTests.Linq.Structures.AllDataTypesEntity.AssertEquals(AllDataTypesEntity) return