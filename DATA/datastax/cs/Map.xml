Cassandra.Mapping System using System.Collections.Generic using System.Linq using System.Linq.Expressions using System.Reflection using class super super ITypeDefinition decl MemberInfo string bool decl string decl List decl Dictionary decl List string Type bool bool return return return return return return return var var if != return if == return decl_stmt var = new for = < ++ decl_stmt var = = return return call decl List.Concat() call decl List.Concat() call decl List.Concat() call decl List.Concat() call decl List.Concat() call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() call decl List.Select() public < public < if throw new = return public < public < params params params if == throw new if == throw new if != throw new = return var var public < public < params params params params < < if == throw new if == throw new if != throw new decl_stmt var = new for = < ++ decl_stmt var = = = return public < public < params params params if == throw new if == return call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() return public < public < params params params params < if == throw new if == return call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() return var public < public < < < if == throw new decl_stmt var = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return public < public < < < return public < public < = return public < public < = return Type MemberInfo ColumnMap public < public < public < < < < < if == throw new if == throw new decl_stmt System.Reflection.MemberInfo = decl_stmt Cassandra.Mapping.ColumnMap if call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out == decl_stmt System.Type = as != : = new = return public < public < = return public < public < = return public < public < public < < < < return ColumnMap decl_stmt Cassandra.Mapping.ColumnMap return call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out : new ColumnMap decl_stmt Cassandra.Mapping.ColumnMap return call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out : new ColumnMap private private decl_stmt Cassandra.Mapping.ColumnMap if call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() call decl Dictionary.TryGetValue() out return ?? return Expression var private private private < < < decl_stmt Microsoft.Scripting.Ast.Expression = if == = decl_stmt var = as if == || == throw new if != && call System.Type.IsSubclassOf(Type) call System.Type.IsSubclassOf(Type) call System.Type.IsSubclassOf(Type) call System.Type.IsSubclassOf(Type) call System.Type.IsSubclassOf(Type) == throw new return private static private static return == || ==