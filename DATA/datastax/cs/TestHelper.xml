Cassandra.Tests NUnit.Framework using System using System.Collections using System.Collections.Generic using System.Linq using System.Net using System.Net.Sockets using System.Reflection using System.Text using System.Threading using System.Threading.Tasks using Cassandra.Serialization using Cassandra.Mapping.Attributes.IgnoreAttribute class Cassandra.Tests.TestHelper IColumnInfo var var var var var public static public static < decl_stmt var = new < decl_stmt var = new < decl_stmt var = new foreach in if != decl_stmt IColumnInfo decl_stmt var = call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() out call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new = = = else call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new = = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() decl_stmt var = return new call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() ++ public static < public static < < < return var public static public static = = < = decl_stmt var = new new new call var.SetLocationInfo() call var.SetLocationInfo() call var.SetLocationInfo() call var.SetLocationInfo() call var.SetLocationInfo() = return public static public static return public static public static return public static public static return var public static public static < decl_stmt var = new = new = public static public static return == public static public static new < public static public static for = < ++ public static public static < for = < ++ public static public static < = = for = < && ! ++ var var var public static public static decl_stmt var = foreach in decl_stmt var = decl_stmt var = if is new continue ref ref public static public static this this return new - public static ? public static ? this this ? if == return return var var public static < public static < public static < < = decl_stmt var = new < decl_stmt var = new call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() call var.Change() call var.Change() call var.Change() call var.Change() call var.Change() - return var var public static < public static < public static < < < = decl_stmt var = new < decl_stmt var = new try call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() call var.TrySetResult() catch call var.TrySetException() call var.TrySetException() call var.TrySetException() call var.TrySetException() call var.TrySetException() call var.Change() call var.Change() call var.Change() call var.Change() call var.Change() - return internal static internal static ref ref ref ref if is && is = = return if is && is = = return public static < public static < return | typeof == public public return public public ref ref return var public static public static = decl_stmt var = using = new try = catch return