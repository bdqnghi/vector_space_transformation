Cassandra System using System.Collections.Generic using System.Net using System.Threading using class Cassandra.Host int IReconnectionPolicy Logger int IReconnectionSchedule long return ref == return ref == || <= public public return var var internal internal decl_stmt var = ref == if ! && ! return decl_stmt var = call IReconnectionSchedule.NextDelayMs() call IReconnectionSchedule.NextDelayMs() call IReconnectionSchedule.NextDelayMs() call IReconnectionSchedule.NextDelayMs() call IReconnectionSchedule.NextDelayMs() call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) call Cassandra.Logger.Warning(string,object) ref + * ref if != if ! return if != return internal internal return ref == var public public decl_stmt var = ref if == call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) ref call IReconnectionPolicy.NewSchedule() call IReconnectionPolicy.NewSchedule() call IReconnectionPolicy.NewSchedule() call IReconnectionPolicy.NewSchedule() call IReconnectionPolicy.NewSchedule() ref if != return return public public call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) call Cassandra.Logger.Info(string,object) ref ref if != internal internal = = public override public override return