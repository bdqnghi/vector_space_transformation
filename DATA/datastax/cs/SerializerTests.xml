Cassandra.Tests System.Collections using NUnit.Framework using System using System.Collections.Generic using System.Linq using System.Net using System.Numerics using Cassandra.Serialization using Cassandra.Serialization.Primitive using class attribute Cassandra.Tests.SerializerTests decl byte MapColumnInfo decl byte var var public public decl_stmt var = new - - - - - new new new new new foreach in decl_stmt var = foreach in decl_stmt byte = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() decl byte var var public public decl_stmt var = new new new new + new - new new - new - new new new new new new new new new new foreach in decl_stmt var = foreach in decl_stmt byte = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() var var var var var public public decl_stmt var = new new new < new new = new new < new - new = new new new = new new < new - new = new new < new new = new new < new new = new new new = foreach in decl_stmt var = foreach in decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() < var var var var var var var var var public public decl_stmt var = new new < new new < foreach in decl_stmt var = foreach in < call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() public = new new new < new new < new new < new new < new = = new new < new = = foreach in decl_stmt var = foreach in decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new < new = new < new = new new < new = new < new = new = new new < - new = new < new = new = = foreach in decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new < < new < new = = new = new < new = new new < < new < new = = new = new < new = new = = foreach in decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new < new < new new new < < new < < new < new foreach in decl_stmt var = foreach in decl_stmt var = decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new < < new < new new new < < < new < < new < new foreach in decl_stmt var = foreach in decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new < < new < new new = = = new = new new < < new < new new = = = new = new new < < new < new = = = new = = foreach in decl_stmt var = foreach in decl_stmt var = decl_stmt var = decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new < - < - < < < < = foreach in decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() new decl_stmt var = sbyte call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = new new new new new - new new - = foreach in decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() public = for = ++ decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = short call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() if == break public = new < = = < call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() public = new < = = < call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() public = new < new < new < new < - new < - new < new < new = foreach in decl_stmt var = call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() decl_stmt var = new call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() call var.GetCqlTypeForPrimitive() public = new = foreach in typeof if continue decl_stmt var = call var.GetClrType() call var.GetClrType() call var.GetClrType() call var.GetClrType() call var.GetClrType() if call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() call var.Serialize() public = new < typeof < new = < typeof < new = < typeof < < new = = new = < typeof < new = = < typeof < new new new = = foreach in decl_stmt var = call var.GetClrType() call var.GetClrType() call var.GetClrType() call var.GetClrType() call var.GetClrType() public = new - - foreach in decl_stmt var = public = new - - foreach in < + private static byteprotocolVersion= return new private static intlevel ColumnTypeCodesingleType = new if == = = else = = - return private static intlevel ColumnTypeCodesingleType = new if == = = else = = - return public static internal static object thisSerializerserializer bytebuffer ColumnTypeCodetypeCode IColumnInfotypeInfo return call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() call var.Deserialize() internal static thisSerializerserializer Typetype return call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() call var.GetCqlType() out