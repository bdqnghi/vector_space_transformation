Cassandra.Tests System using System.Collections.Generic using System.Diagnostics using System.Linq using System.Text using System.Threading using System.Threading.Tasks using Cassandra.Tasks using NUnit.Framework using class attribute Cassandra.Tests.TaskTests var var public public decl_stmt var = < decl_stmt var = call var.Then() call var.Then() call var.Then() call var.Then() call var.Then() call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var var public public decl_stmt var = decl_stmt var = call var.Then() call var.Then() call var.Then() call var.Then() call var.Then() + call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var var var public public decl_stmt var = new < decl_stmt var = call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.SetException() call var.SetException() call var.SetException() call var.SetException() call var.SetException() new decl_stmt var = < call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() < var var public public decl_stmt var = < decl_stmt var = call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var var var public public decl_stmt var = new < call var.SetException() call var.SetException() call var.SetException() call var.SetException() call var.SetException() new decl_stmt var = call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() decl_stmt var = < call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var var public public decl_stmt var = decl_stmt var = call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() call var.ContinueSync() + call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var var var public public decl_stmt var = new < decl_stmt var = call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.Task() call var.SetException() call var.SetException() call var.SetException() call var.SetException() call var.SetException() new decl_stmt var = < var var var public public decl_stmt var = decl_stmt var = call var.ContinueWith() call var.ContinueWith() call var.ContinueWith() call var.ContinueWith() call var.ContinueWith() if throw new return decl_stmt var = < var var public public decl_stmt var = decl_stmt var = = var var var public public decl_stmt var = new decl_stmt var = < decl_stmt var = var private static < private static < private static < < decl_stmt var = new < call var.SetResult() call var.SetResult() call var.SetResult() call var.SetResult() call var.SetResult() default return