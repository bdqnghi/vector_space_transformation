Cassandra.Mapping System using System.Collections.Generic using System.Linq using System.Threading.Tasks using Cassandra.Mapping.Statements using Cassandra.Tasks using class Cassandra.Mapping.Mapper super super IMapper StatementFactory MapperFactory ISession int CqlGenerator private < private < private < < < return call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) public < < public < < public < < < = return < new ?? public < < public < < public < < < params params params return < var public < < public < < public < < < < return decl_stmt var = < return var public < < public < < public < < < if == throw new = < return < < decl_stmt var = < return new < public < < public < < public < < < = return < new ?? new public < < public < < public < < < return < new public < public < public < < params params params return < var public < public < public < < < return decl_stmt var = < return public < public < public < < params params params return < var var public < public < public < < < return decl_stmt var = if == return default decl_stmt var = < return public < public < public < < params params params return < var var public < public < public < < < return decl_stmt var = decl_stmt var = < return public < public < public < < params params params return < var var public < public < public < < < return decl_stmt var = if == return default decl_stmt var = < return public public public < = return public public public < = return var var var var var decl object public public public < ? = decl_stmt var = call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() < decl_stmt var = decl_stmt var = < decl_stmt var = decl_stmt object decl_stmt var = < out return ?? public < < public < < public < < < = return public < < public < < public < < < = return var var var var var decl object public < < public < < public < < < ? = decl_stmt var = call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() call MapperFactory.PocoDataFactory() < decl_stmt var = decl_stmt var = < decl_stmt var = decl_stmt object decl_stmt var = < out return ?? < < decl object decl Func string public public public < = decl_stmt string = < decl_stmt Func < = < decl_stmt object = return ?? public public public < params params params return < public public public < < return public < < public < < public < < < params params params return < public < < public < < public < < < < return < < decl object decl Func string public public public < = decl_stmt string = < decl_stmt Func < = < decl_stmt object = return ?? public public public < params params params return < public public public < < return public public params params params return var public public return call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) call Cassandra.Mapping.Statements.StatementFactory.GetStatementAsync(ISession,Cql) decl_stmt var = return call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) public public return new public public return new public public var public public if == throw new return call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) decl_stmt var = return call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) public public public < return call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() call MapperFactory.TypeConverter() < public < public < public < < params params params return < public < public < public < < return < public < < public < < public < < < params params params return < public < < public < < public < < < < return < < public < public < public < < = return < new ?? public < public < public < < params params params return < var public < public < public < < decl_stmt var = < return public < public < public < < = return < new ?? new public < public < public < < params params params return < new var public < public < public < < decl_stmt var = < return public public public < params params params return < var public public public < decl_stmt var = < return public public public < params params params return < var public public public < decl_stmt var = < return public public public < params params params return < var public public public < decl_stmt var = < return public public public < params params params return < var public public public < decl_stmt var = < return public public public < = public public public < = public public public < ? = public < public < public < < = return public < public < public < < = return public < public < public < < ? = return public public public < = public public public < params params params < public public public < < public < public < public < < params params params return < public < public < public < < return < public public public < = public public public < params params params < public public public < < public public params params params public public var var public < < public < < public < < < if == throw new return call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) call Cassandra.Mapping.Statements.StatementFactory.GetBatchStatementAsync(ISession,IEnumerable,BatchType) decl_stmt var = decl_stmt var = return call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) call Cassandra.ISession.ExecuteAsync(IStatement) < < public < public < public < < return <