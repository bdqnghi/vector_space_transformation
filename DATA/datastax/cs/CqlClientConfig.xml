Cassandra.IntegrationTests.Mapping.Tests System using System.Collections.Generic using System.Linq using System.Text using Cassandra.Data.Linq using Cassandra.IntegrationTests.Mapping.Structures using Cassandra.IntegrationTests.TestBase using Cassandra.Mapping using NUnit.Framework using class attribute Cassandra.IntegrationTests.Mapping.Tests.CqlClientConfig super super SharedClusterTest string ISession protected override protected override = = call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) var var var var var public public = call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) decl_stmt var = new new decl_stmt var = new < call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() decl_stmt var = new decl_stmt var = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt var = < call var.AssertEquals() call var.AssertEquals() call var.AssertEquals() call var.AssertEquals() call var.AssertEquals() var ManyDataTypesPoco var string var public public = call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) decl_stmt var = new new decl_stmt var = new < call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt string = new < var ManyDataTypesPoco var string var public public decl_stmt var = new new < decl_stmt var = new < call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt string = new < var ManyDataTypesPoco var string var public public decl_stmt var = new new decl_stmt var = new < call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt string = new < var ManyDataTypesPoco var string var public public decl_stmt var = new new < decl_stmt var = new < call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() typeof typeof call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() typeof call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt string = call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() new < var ManyDataTypesPoco var string var public public decl_stmt var = new new < decl_stmt var = new < call var.Create() call var.Create() call var.Create() call var.Create() call var.Create() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt string = call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() new < var ManyDataTypesPoco decl List var var public public = call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.CreateKeyspace(string,Dictionary,bool) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) call Cassandra.ISession.ChangeKeyspace(string) decl_stmt var = new new decl_stmt var = new < call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.Name() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() call var.CreateIfNotExists() decl_stmt var = new decl_stmt Cassandra.IntegrationTests.Mapping.Structures.ManyDataTypesPoco = call var.Insert() call var.Insert() call var.Insert() call var.Insert() call var.Insert() decl_stmt System.Collections.Generic.List < = < call ManyDataTypesPoco.AssertEquals() call ManyDataTypesPoco.AssertEquals() call ManyDataTypesPoco.AssertEquals() call ManyDataTypesPoco.AssertEquals() call ManyDataTypesPoco.AssertEquals()