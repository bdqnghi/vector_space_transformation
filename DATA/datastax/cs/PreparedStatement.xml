Cassandra System using System.Collections.Generic using System.Linq using Cassandra.Serialization using class Cassandra.PreparedStatement Serializer RoutingKey decl string RowSetMetadata return return var var var public virtual public virtual params params params decl_stmt var = new call var.SetRoutingKey() call var.SetRoutingKey() call var.SetRoutingKey() call var.SetRoutingKey() call var.SetRoutingKey() if == return decl_stmt var = decl_stmt var = == && if = call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call RowSetMetadata.Columns() call var.SetValues() call var.SetValues() call var.SetValues() call var.SetValues() call var.SetValues() call var.CalculateRoutingKey() call var.CalculateRoutingKey() call var.CalculateRoutingKey() call var.CalculateRoutingKey() call var.CalculateRoutingKey() return public public = return var var internal internal decl_stmt var = decl_stmt var = new < foreach in for = < ++ if != continue call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() break if != return = call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() call var.ToArray() return public public params params params = return public public params params params if == return = return public public = return public public < = return