Cassandra.IntegrationTests.Core System using System.Collections.Generic using System.Linq using System.Numerics using System.Text using Cassandra.IntegrationTests.TestBase using Cassandra.Serialization using Cassandra.Tests using Cassandra.Tests.Extensions.Serializers using NUnit.Framework using class attribute Cassandra.IntegrationTests.Core.TypeSerializersTests super super SharedClusterTest string string string string string return new var var public public decl_stmt var = new new decl_stmt var = < var var var decl object var var public public decl_stmt var = new new new using = call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() decl_stmt var = decl_stmt object = new new new new new new new new - - decl_stmt var = call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() foreach in decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Bind() call var.Bind() call var.Bind() call var.Bind() call var.Bind() decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() new < < var var decl object var var var public public decl_stmt var = new new new using = call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() decl_stmt var = decl_stmt object = new new new new new new new new - - foreach in decl_stmt var = decl_stmt var = new call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() new < < var var var decl object var var public public decl_stmt var = new new new using = call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() decl_stmt var = decl_stmt object = new new new new new new new new - - decl_stmt var = new foreach in decl_stmt var = call var.Add() call var.Add() call var.Add() call var.Add() call var.Add() new call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() foreach in decl_stmt var = decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() new < < var var var var var var public public decl_stmt var = new new new using = call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() decl_stmt var = decl_stmt var = new new new new new - decl_stmt var = call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() foreach in decl_stmt var = call var.Bind() call var.Bind() call var.Bind() call var.Bind() call var.Bind() new ushort call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() new < var var decl byte var var decl object var var public public decl_stmt var = new new using = call var.Build() call var.Build() call var.Build() call var.Build() call var.Build() decl_stmt var = decl_stmt byte = byte decl_stmt object = new new decl_stmt var = call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() call var.Prepare() foreach in decl_stmt var = decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Bind() call var.Bind() call var.Bind() call var.Bind() call var.Bind() decl_stmt var = call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute() new <