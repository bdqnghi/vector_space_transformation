Cassandra.IntegrationTests.Linq.CqlOperatorTests System using System.Collections.Generic using System.Linq using Cassandra.Data.Linq using Cassandra.IntegrationTests.Linq.Structures using Cassandra.IntegrationTests.TestBase using Cassandra.Mapping using NUnit.Framework using class attribute Cassandra.IntegrationTests.Linq.CqlOperatorTests.SubstractAssign super super SharedClusterTest ISession protected override protected override = EntityWithListType decl List decl Tuple EntityWithListType decl Table var public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType var var decl List decl Tuple int decl List decl Table EntityWithListType public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt int = call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() new call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) decl_stmt System.Collections.Generic.List < = new < decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType var decl List decl Tuple int decl List decl Table EntityWithListType public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() new call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt int = decl_stmt System.Collections.Generic.List < = new < decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType var decl List decl Tuple int decl List decl Table EntityWithListType public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() new call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt int = decl_stmt System.Collections.Generic.List < = new < decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.Clone() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType decl List decl Tuple decl List decl Table var public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt System.Collections.Generic.List < = new < call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call EntityWithListType.ListType() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithListType decl List decl Tuple decl List decl Table var public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithListType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt System.Collections.Generic.List < = new < call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) call Cassandra.IntegrationTests.Linq.Structures.EntityWithListType.AssertEquals(EntityWithListType) EntityWithArrayType decl List decl List decl Tuple object EntityWithArrayType decl Table public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() = new call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt object = < EntityWithArrayType decl List decl string EntityWithArrayType decl string int decl Tuple decl List object decl Table public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt int = call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() new call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt string = < decl_stmt string = new decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() = new call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt object = < EntityWithArrayType decl List decl string EntityWithArrayType int decl Tuple decl List decl Table decl List public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt System.Collections.Generic.List < = call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() new = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt int = decl_stmt string = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() = call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + < EntityWithArrayType decl List decl string EntityWithArrayType int decl Tuple decl List decl Table decl List public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt System.Collections.Generic.List < = call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() new = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() call decl Table.Insert() decl_stmt int = decl_stmt string = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType.Clone() = call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call EntityWithArrayType.ArrayType() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() call decl List.RemoveAt() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + < EntityWithArrayType decl List decl string object decl Tuple decl List decl Table public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt string = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt object = < EntityWithArrayType decl List decl string object decl Tuple decl List decl Table public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithArrayType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt string = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = decl_stmt System.Collections.Generic.List < = call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) call Cassandra.ISession.Execute(string) + + + + decl_stmt object = < var EntityWithDictionaryType decl Dictionary decl List EntityWithDictionaryType decl Table decl Tuple public public decl_stmt System.Tuple < < < = decl_stmt Cassandra.Data.Linq.Table < = decl_stmt System.Collections.Generic.List < = decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType = call decl List.First() call decl List.First() call decl List.First() call decl List.First() call decl List.First() decl_stmt Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType = call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call Cassandra.IntegrationTests.Linq.Structures.EntityWithDictionaryType.Clone() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() decl_stmt System.Collections.Generic.Dictionary < = new < call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() call EntityWithDictionaryType.DictionaryType() decl_stmt var = call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() call decl Table.Where() == new = < call var.Execute() call var.Execute() call var.Execute() call var.Execute() call var.Execute()