Cassandra.Tests System using System.Collections using System.Collections.Generic using System.Diagnostics using System.IO using NUnit.Framework using System.Linq using System.Net using System.Threading using System.Threading.Tasks using Cassandra.Compression using Cassandra.Responses using Cassandra.Serialization using Cassandra.Tasks using Microsoft.IO using class attribute Cassandra.Tests.IOUnitTests var decl Action var var int var var var var public public decl_stmt var = decl_stmt var = decl_stmt var = decl_stmt int const const = decl_stmt var = decl_stmt System.Xml.Xsl.XsltOld.Action < = ref decl_stmt var = new decl_stmt var = new decl_stmt var = call var.SetTimedOut() call var.SetTimedOut() call var.SetTimedOut() call var.SetTimedOut() call var.SetTimedOut() new new ref ref : , call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() if ++ == = call var.Reverse() call var.Reverse() call var.Reverse() call var.Reverse() call var.Reverse() var var decl Action public public decl_stmt var = decl_stmt System.Xml.Xsl.XsltOld.Action < = ref decl_stmt var = new call var.Cancel() call var.Cancel() call var.Cancel() call var.Cancel() call var.Cancel() call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() call var.InvokeCallback() var var var public public decl_stmt var = new decl_stmt var = new decl_stmt var = call var.Continue() call var.Continue() call var.Continue() call var.Continue() call var.Continue() call var.Post() call var.Post() call var.Post() call var.Post() call var.Post() call var.Wait() call var.Wait() call var.Wait() call var.Wait() call var.Wait() var int var var var int byte public public decl_stmt int const const = decl_stmt int const const = decl_stmt byte const const = decl_stmt var = new using = call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() for = < ++ decl_stmt var = new new call var.WriteFrameHeader() call var.WriteFrameHeader() call var.WriteFrameHeader() call var.WriteFrameHeader() call var.WriteFrameHeader() call var.WriteInt16() call var.WriteInt16() call var.WriteInt16() call var.WriteInt16() call var.WriteInt16() + decl_stmt var = call var.Close() call var.Close() call var.Close() call var.Close() call var.Close() * for = < ++ decl_stmt var = new = * new var int var var public public decl_stmt int const const = decl_stmt var = new for = < ++ = byte decl_stmt var = new * * using = call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() new new < using = call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() decl_stmt var = new new < using = call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() * decl_stmt var = new new < new < using = call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() call var.GetStream() * + decl_stmt var = new new < new < new < * var var var var public public decl_stmt var = new byte decl_stmt var = new = decl_stmt var = new decl_stmt var = call var.Read() call var.Read() call var.Read() call var.Read() call var.Read() new call var.Take() call var.Take() call var.Take() call var.Take() call var.Take() = = new = call var.Read() call var.Read() call var.Read() call var.Read() call var.Read() new call var.Take() call var.Take() call var.Take() call var.Take() call var.Take() = = new = call var.Read() call var.Read() call var.Read() call var.Read() call var.Read() new call var.Take() call var.Take() call var.Take() call var.Take() call var.Take() public override public override throw new public override public override lock