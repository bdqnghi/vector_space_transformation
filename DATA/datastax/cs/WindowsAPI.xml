System using System.Runtime.InteropServices using class .WindowsAPI uint int int uint int int uint int int uint int int int uint int uint int int uint int int uint int uint uint int uint uint int int uint int uint int int int int uint int uint int uint int uint int int uint uint uint uint public public if != = SecBuffer IntPtr int public public if != if == decl_stmt SecBuffer = typeof call SecBuffer.Dispose() call SecBuffer.Dispose() call SecBuffer.Dispose() call SecBuffer.Dispose() call SecBuffer.Dispose() else for = < ++ decl_stmt int = * typeof decl_stmt IntPtr = + typeof int + typeof int = int decl byte IntPtr SecBuffer int int public public decl_stmt byte = if == throw new if == decl_stmt SecBuffer = typeof if > = new else decl_stmt int = for = < ++ decl_stmt int = * typeof += = new for = = < ++ decl_stmt int = * typeof decl_stmt int = if == break decl_stmt IntPtr = + typeof int + typeof int += return string public static public static decl_stmt string = + + + switch uint case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break case = break return new