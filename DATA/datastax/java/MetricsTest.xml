com.datastax.driver.core com.datastax.driver.core.Metrics.Errors import com.datastax.driver.core.exceptions.DriverException import com.datastax.driver.core.policies.RetryPolicy import com.datastax.driver.core.policies.RetryPolicy.RetryDecision import org.testng.annotations.Test import javax.management.InstanceNotFoundException import javax.management.MBeanInfo import javax.management.MBeanServer import javax.management.ObjectName import java.lang.management.ManagementFactory import static static com.datastax.driver.core.Assertions.assertThat import static static org.testng.Assert.assertEquals import class com.datastax.driver.core.MetricsTest super super extends RetryDecision MBeanServer public public return new public public return public public return public public return public public return public public public public public public return public public return public public return public public return public public public public public public Errors Statement = public = public = decl_stmt com.datastax.driver.core.Statement = new decl_stmt Errors = call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getRetries() call Errors.getRetries() call Errors.getRetries() call Errors.getRetries() call Errors.getRetries() call Errors.getRetriesOnUnavailable() call Errors.getRetriesOnUnavailable() call Errors.getRetriesOnUnavailable() call Errors.getRetriesOnUnavailable() call Errors.getRetriesOnUnavailable() = call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getUnavailables() call Errors.getIgnores() call Errors.getIgnores() call Errors.getIgnores() call Errors.getIgnores() call Errors.getIgnores() call Errors.getIgnoresOnUnavailable() call Errors.getIgnoresOnUnavailable() call Errors.getIgnoresOnUnavailable() call Errors.getIgnoresOnUnavailable() call Errors.getIgnoresOnUnavailable() MBeanInfo ObjectName = public = public throws decl_stmt ObjectName = + decl_stmt MBeanInfo = call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() Cluster ObjectName = = public = = public throws decl_stmt com.datastax.driver.core.Cluster = try call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() decl_stmt ObjectName = call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() + call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() finally call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() Cluster ObjectName = = public = = public throws decl_stmt com.datastax.driver.core.Cluster = try call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() decl_stmt ObjectName = call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() call com.datastax.driver.core.Cluster.getClusterName() + call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() call MBeanServer.getMBeanInfo() finally call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close()