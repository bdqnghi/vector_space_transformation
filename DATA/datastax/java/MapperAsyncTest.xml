com.datastax.driver.mapping com.datastax.driver.core.CCMTestsSupport import com.datastax.driver.core.Cluster import com.datastax.driver.core.Session import com.datastax.driver.core.utils.MoreFutures.SuccessCallback import com.datastax.driver.core.utils.UUIDs import com.datastax.driver.mapping.annotations.Column import com.datastax.driver.mapping.annotations.PartitionKey import com.datastax.driver.mapping.annotations.Table import com.google.common.base.Function import com.google.common.base.Objects import com.google.common.util.concurrent.Futures import com.google.common.util.concurrent.ListenableFuture import com.google.common.util.concurrent.Uninterruptibles import org.testng.annotations.Test import java.util.UUID import java.util.concurrent.CountDownLatch import static static com.datastax.driver.core.TestUtils.CREATE_KEYSPACE_SIMPLE_FORMAT import static static java.util.concurrent.TimeUnit.MINUTES import static static org.testng.Assert.fail import class annotation com.datastax.driver.mapping.MapperAsyncTest super super extends String User public public decl ListenableFuture decl Mapper decl ListenableFuture decl ListenableFuture Cluster CountDownLatch = public = public decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt com.datastax.driver.core.Cluster = decl_stmt ListenableFuture < = call com.datastax.driver.core.Cluster.connectAsync(String) call com.datastax.driver.core.Cluster.connectAsync(String) call com.datastax.driver.core.Cluster.connectAsync(String) call com.datastax.driver.core.Cluster.connectAsync(String) call com.datastax.driver.core.Cluster.connectAsync(String) new < public public return new new < public public decl_stmt com.datastax.driver.mapping.Mapper final final final < = decl_stmt ListenableFuture < = call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() new < public public decl_stmt ListenableFuture < = call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() new < public public call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() new < public public call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() try catch public public return new decl ListenableFuture decl Mapper decl ListenableFuture public public decl_stmt com.datastax.driver.mapping.Mapper final final final < = decl_stmt ListenableFuture < = call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() call decl Mapper.saveAsync() new < public public decl_stmt ListenableFuture < = call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call decl Mapper.getAsync() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() new < public public call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() call decl Mapper.deleteAsync() new < public public decl ListenableFuture public public decl_stmt ListenableFuture < = call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() new < public public new < public public public public new < public public public public public public return public public = public public return public public = public public return public public = User public public if == || != return decl_stmt User = return && && public public return