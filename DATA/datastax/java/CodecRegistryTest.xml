com.datastax.driver.core com.datastax.driver.core.exceptions.CodecNotFoundException import com.google.common.reflect.TypeToken import org.apache.log4j.Level import org.apache.log4j.Logger import org.testng.annotations.DataProvider import org.testng.annotations.Test import java.math.BigDecimal import java.math.BigInteger import java.net.InetAddress import java.nio.ByteBuffer import java.util.* import static static com.datastax.driver.core.Assertions.assertThat import static static com.datastax.driver.core.DataType.* import static static com.datastax.driver.core.DataType.list import static static com.datastax.driver.core.ProtocolVersion.V4 import static static com.datastax.driver.core.TypeTokens.* import static static com.google.common.reflect.TypeToken.of import static static java.util.Collections.* import static static org.mockito.Mockito.mock import static static org.mockito.Mockito.when import static static org.testng.Assert.fail import class com.datastax.driver.core.CodecRegistryTest public static public static return new public static public static return new public static public static return new short byte new new new public static public static return new short byte new new new decl TypeCodec CodecRegistry = = public = = public < decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) decl TypeCodec CodecRegistry = = public = = public < < decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) decl TypeCodec CodecRegistry = = public = = public < decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) decl TypeCodec CodecRegistry = = public = = public < decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) TypeCodec decl TypeCodec CodecRegistry = public = public decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) TypeCodec decl TypeCodec CodecRegistry = public = public decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) TypeCodec decl TypeCodec CodecRegistry = public = public decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) decl_stmt com.datastax.driver.core.TypeCodec < = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) decl TypeToken CollectionType = public = public decl_stmt CollectionType = decl_stmt TypeToken < < = new new new new new new < new new < decl TypeToken CollectionType = public = public decl_stmt CollectionType = decl_stmt TypeToken < < = new new new new new new < new new < decl TypeToken CollectionType = public = public decl_stmt CollectionType = decl_stmt TypeToken < < < = new new new new new new < < new new < < TupleType CodecRegistry = public = public decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TupleType = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) = new = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) = new = call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) new call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) new CodecRegistry UserType = public = public decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.UserType = new > call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) = new = new > call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) = new = new > call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) new = new = new > call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) new DataType = public = public decl_stmt com.datastax.driver.core.DataType = new new new decl TypeCodec CodecRegistry = public = public decl_stmt com.datastax.driver.core.TypeCodec < = decl_stmt com.datastax.driver.core.CodecRegistry = new call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) = public = public try new catch try new catch try new new catch try new new catch TypeCodec MemoryAppender CodecRegistry = public = public decl_stmt com.datastax.driver.core.MemoryAppender = decl_stmt com.datastax.driver.core.CodecRegistry = new decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) TypeCodec MemoryAppender CodecRegistry = public = public decl_stmt com.datastax.driver.core.MemoryAppender = decl_stmt com.datastax.driver.core.CodecRegistry = new call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.CodecRegistry.register(Iterable) call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) call com.datastax.driver.core.CodecRegistry.codecFor(T) Logger MemoryAppender private private decl_stmt java.util.logging.Logger = call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) decl_stmt com.datastax.driver.core.MemoryAppender = new call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() return Logger private private decl_stmt java.util.logging.Logger = call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() TypeCodec private < private < < decl_stmt com.datastax.driver.core.TypeCodec = call com.datastax.driver.core.TypeCodec.getCqlType() call com.datastax.driver.core.TypeCodec.getCqlType() call com.datastax.driver.core.TypeCodec.getCqlType() call com.datastax.driver.core.TypeCodec.getCqlType() call com.datastax.driver.core.TypeCodec.getCqlType() call com.datastax.driver.core.TypeCodec.getJavaType() call com.datastax.driver.core.TypeCodec.getJavaType() call com.datastax.driver.core.TypeCodec.getJavaType() call com.datastax.driver.core.TypeCodec.getJavaType() call com.datastax.driver.core.TypeCodec.getJavaType() call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.accepts(TypeToken) call com.datastax.driver.core.TypeCodec.toString() call com.datastax.driver.core.TypeCodec.toString() call com.datastax.driver.core.TypeCodec.toString() call com.datastax.driver.core.TypeCodec.toString() call com.datastax.driver.core.TypeCodec.toString() return