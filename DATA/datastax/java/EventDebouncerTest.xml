com.datastax.driver.core com.datastax.driver.core.EventDebouncer.DeliveryCallback import com.google.common.util.concurrent.Futures import com.google.common.util.concurrent.ListenableFuture import org.apache.log4j.Level import org.apache.log4j.Logger import org.testng.annotations.AfterMethod import org.testng.annotations.BeforeMethod import org.testng.annotations.Test import java.util.ArrayList import java.util.List import java.util.concurrent.CopyOnWriteArrayList import java.util.concurrent.CountDownLatch import java.util.concurrent.Executors import java.util.concurrent.ScheduledExecutorService import java.util.concurrent.locks.Condition import java.util.concurrent.locks.Lock import java.util.concurrent.locks.ReentrantLock import static static com.datastax.driver.core.EventDebouncer.DEFAULT_MAX_QUEUED_EVENTS import static static java.util.concurrent.TimeUnit.MILLISECONDS import static static java.util.concurrent.TimeUnit.MINUTES import static static org.assertj.core.api.Assertions.assertThat import static static org.assertj.core.api.Assertions.fail import class com.datastax.driver.core.EventDebouncerTest MockDeliveryCallback ScheduledExecutorService = public = public = = new = public = public call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() decl EventDebouncer MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() decl_stmt MockEvent = new call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() MemoryAppender Level decl List decl EventDebouncer Logger MockEvent = public = public throws decl_stmt com.datastax.driver.core.MemoryAppender = new decl_stmt java.util.logging.Logger = decl_stmt java.util.logging.Level = call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() try decl_stmt com.datastax.driver.core.EventDebouncer < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() decl_stmt java.util.List < = new < for = < ++ decl_stmt MockEvent = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call decl List.subList() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() finally call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) decl EventDebouncer decl List MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() decl_stmt java.util.List < = new < for = < ++ decl_stmt MockEvent = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() decl EventDebouncer decl List MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() decl_stmt java.util.List < = new < for = < ++ decl_stmt MockEvent = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() decl EventDebouncer decl List MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer < = new < decl_stmt java.util.List < = new < for = < ++ decl_stmt MockEvent = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() decl EventDebouncer decl List MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer final final final < = new < decl_stmt java.util.List final final final < = new < for = < ++ decl_stmt MockEvent = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() decl EventDebouncer CountDownLatch MockEvent ScheduledExecutorService = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer final final final < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() decl_stmt java.util.concurrent.CountDownLatch final final = new decl_stmt java.util.concurrent.ScheduledExecutorService = call java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Runnable,long,long,TimeUnit) call java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Runnable,long,long,TimeUnit) new public public if call java.util.concurrent.CountDownLatch.getCount() call java.util.concurrent.CountDownLatch.getCount() call java.util.concurrent.CountDownLatch.getCount() call java.util.concurrent.CountDownLatch.getCount() call java.util.concurrent.CountDownLatch.getCount() > decl_stmt MockEvent = new call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call CountDownLatch.countDown() call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call java.util.concurrent.CountDownLatch.await(long,TimeUnit) call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call ScheduledExecutorService.shutdownNow() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() MockEvent public public if > decl_stmt MockEvent = new decl EventDebouncer MockEvent = public = public throws decl_stmt com.datastax.driver.core.EventDebouncer final final final < = new < call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() call decl EventDebouncer.start() for = < ++ decl_stmt MockEvent = new call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call MockDeliveryCallback.awaitEvents() call decl EventDebouncer.stop() call decl EventDebouncer.stop() call decl EventDebouncer.stop() call decl EventDebouncer.stop() call decl EventDebouncer.stop() decl_stmt MockEvent = new call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call decl EventDebouncer.eventReceived() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() call MockDeliveryCallback.getEvents() public < public < < try finally return long throws decl_stmt long = try while < if <= = finally public < public < return MockEvent public public if == return if == || != return decl_stmt MockEvent = return == public public return public public return +