com.datastax.driver.core com.datastax.driver.core.exceptions.* import com.google.common.collect.Lists import com.google.common.util.concurrent.Uninterruptibles import org.apache.log4j.Level import org.apache.log4j.Logger import org.testng.annotations.Test import java.util.List import java.util.concurrent.TimeUnit import static static org.assertj.core.api.Assertions.assertThat import static static org.mockito.Mockito.mock import class long Exception Statement Host long long T long decl List Cluster = public = public throws decl_stmt com.datastax.driver.core.Cluster = decl_stmt T = call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() decl_stmt java.util.List < = > new new new new new new decl_stmt long = for : call T.update() call T.update() call T.update() call T.update() call T.update() for = < ++ call T.update() call T.update() call T.update() call T.update() call T.update() decl_stmt long = - - + for = <= ++ decl_stmt long = call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() long Cluster T long long = public = public throws decl_stmt com.datastax.driver.core.Cluster = decl_stmt T = call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() decl_stmt long = for = < ++ call T.update() call T.update() call T.update() call T.update() call T.update() decl_stmt long = - - + for = <= ++ decl_stmt long = call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() - Cluster T long = public = public throws decl_stmt com.datastax.driver.core.Cluster = decl_stmt T = call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() for = < ++ call T.update() call T.update() call T.update() call T.update() call T.update() for = <= ++ decl_stmt long = call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() - Level long long long Logger T long Cluster MemoryAppender = public = public throws decl_stmt com.datastax.driver.core.Cluster = decl_stmt T = call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() call T.onRegister() decl_stmt java.util.logging.Logger = decl_stmt java.util.logging.Level = call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) decl_stmt com.datastax.driver.core.MemoryAppender = new call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() try decl_stmt long = for = < ++ call T.update() call T.update() call T.update() call T.update() call T.update() decl_stmt long = call T.update() call T.update() call T.update() call T.update() call T.update() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() call com.datastax.driver.core.MemoryAppender.get() + + + decl_stmt long = - - + for = <= ++ decl_stmt long = call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() call T.getLatencyAtPercentile() finally call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender()