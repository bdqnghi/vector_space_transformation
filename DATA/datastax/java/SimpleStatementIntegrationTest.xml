com.datastax.driver.core com.datastax.driver.core.exceptions.InvalidQueryException import com.datastax.driver.core.exceptions.UnsupportedFeatureException import com.datastax.driver.core.utils.CassandraVersion import com.google.common.collect.ImmutableMap import org.testng.SkipException import org.testng.annotations.Test import static static org.assertj.core.api.Assertions.assertThat import class com.datastax.driver.core.SimpleStatementIntegrationTest super super extends public public SimpleStatement Row = = public = = public decl_stmt com.datastax.driver.core.SimpleStatement = new > decl_stmt com.datastax.driver.core.Row = call Row.getString() call Row.getString() call Row.getString() call Row.getString() call Row.getString() SimpleStatement = = = public = = = public decl_stmt com.datastax.driver.core.SimpleStatement = new > SimpleStatement = = = public = = = public decl_stmt com.datastax.driver.core.SimpleStatement = new > Session Cluster SimpleStatement public public decl_stmt com.datastax.driver.core.Cluster = try decl_stmt com.datastax.driver.core.Session = call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() decl_stmt com.datastax.driver.core.SimpleStatement = new > call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) finally call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() = = = public = = = public if >= throw new = = = public = = = public if >= throw new