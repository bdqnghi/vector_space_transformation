com.datastax.driver.mapping com.datastax.driver.core.CCMTestsSupport import com.datastax.driver.core.Session import com.datastax.driver.core.utils.CassandraVersion import com.datastax.driver.core.utils.UUIDs import com.datastax.driver.mapping.annotations.* import com.google.common.base.Objects import org.testng.annotations.Test import java.util.UUID import static static org.testng.Assert.assertEquals import static static org.testng.Assert.assertNull import class annotation annotation com.datastax.driver.mapping.MapperDefaultKeyspaceTest super super extends String public public Group MappingManager decl Mapper UUID Group = public = public throws + decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) decl_stmt java.security.acl.Group = new decl_stmt java.util.UUID = call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() decl_stmt java.security.acl.Group = call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call Group.getGroupId() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() Group2 MappingManager decl Mapper UUID Group2 = public = public throws + decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) decl_stmt Group2 = new new decl_stmt java.util.UUID = call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() decl_stmt Group2 = call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call Group2.getGroupId() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() MappingManager Session = = = public = = = public decl_stmt com.datastax.driver.core.Session = decl_stmt com.datastax.driver.mapping.MappingManager = new call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) MappingManager Session = = = public = = = public decl_stmt com.datastax.driver.core.Session = decl_stmt com.datastax.driver.mapping.MappingManager = new call MappingManager.udtCodec() call MappingManager.udtCodec() call MappingManager.udtCodec() call MappingManager.udtCodec() call MappingManager.udtCodec() public public return public public = public public return public public = Group public public if == || != return decl_stmt java.security.acl.Group = return && public public return public public return public public = public public return public public = Group2 public public if == || != return decl_stmt Group2 = return && public public return public public return public public = GroupName public public if instanceof decl_stmt GroupName = return return public public return