com.datastax.driver.core.policies com.datastax.driver.core.Cluster import com.datastax.driver.core.Host import com.datastax.driver.core.Statement import com.google.common.base.Preconditions import java.util.concurrent.atomic.AtomicInteger import class com.datastax.driver.core.policies.ConstantSpeculativeExecutionPolicy super super implements long int AtomicInteger public public return new decl_stmt java.util.concurrent.atomic.AtomicInteger private final final = new public public return call java.util.concurrent.atomic.AtomicInteger.getAndDecrement() call java.util.concurrent.atomic.AtomicInteger.getAndDecrement() call java.util.concurrent.atomic.AtomicInteger.getAndDecrement() call java.util.concurrent.atomic.AtomicInteger.getAndDecrement() call java.util.concurrent.atomic.AtomicInteger.getAndDecrement() > : - public public return > : - public public public public