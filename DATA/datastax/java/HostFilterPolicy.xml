com.datastax.driver.core.policies com.datastax.driver.core.Cluster import com.datastax.driver.core.Host import com.datastax.driver.core.HostDistance import com.datastax.driver.core.Statement import com.google.common.base.Predicate import com.google.common.base.Predicates import com.google.common.collect.ImmutableSet import java.util.ArrayList import java.util.Collection import java.util.Iterator import java.util.List import class com.datastax.driver.core.policies.HostFilterPolicy super super implements decl Predicate LoadBalancingPolicy public public return decl List public public < decl_stmt java.util.List < = new < for : if call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() throw new call LoadBalancingPolicy.init() call LoadBalancingPolicy.init() call LoadBalancingPolicy.init() call LoadBalancingPolicy.init() call LoadBalancingPolicy.init() public public return call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call com.datastax.driver.core.policies.LoadBalancingPolicy.distance(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.distance(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.distance(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.distance(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.distance(Host) : public < public < return call com.datastax.driver.core.policies.LoadBalancingPolicy.newQueryPlan(String,Statement) call com.datastax.driver.core.policies.LoadBalancingPolicy.newQueryPlan(String,Statement) call com.datastax.driver.core.policies.LoadBalancingPolicy.newQueryPlan(String,Statement) call com.datastax.driver.core.policies.LoadBalancingPolicy.newQueryPlan(String,Statement) call com.datastax.driver.core.policies.LoadBalancingPolicy.newQueryPlan(String,Statement) public public if call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call com.datastax.driver.core.policies.LoadBalancingPolicy.onUp(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onUp(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onUp(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onUp(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onUp(Host) public public if call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call com.datastax.driver.core.policies.LoadBalancingPolicy.onDown(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onDown(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onDown(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onDown(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onDown(Host) public public if call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call com.datastax.driver.core.policies.LoadBalancingPolicy.onAdd(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onAdd(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onAdd(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onAdd(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onAdd(Host) public public if call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call decl Predicate.apply() call com.datastax.driver.core.policies.LoadBalancingPolicy.onRemove(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onRemove(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onRemove(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onRemove(Host) call com.datastax.driver.core.policies.LoadBalancingPolicy.onRemove(Host) public public call com.datastax.driver.core.policies.LoadBalancingPolicy.close() call com.datastax.driver.core.policies.LoadBalancingPolicy.close() call com.datastax.driver.core.policies.LoadBalancingPolicy.close() call com.datastax.driver.core.policies.LoadBalancingPolicy.close() call com.datastax.driver.core.policies.LoadBalancingPolicy.close() public static public static < return new public static public static < return new String decl ImmutableSet private static < private static < < final final decl_stmt ImmutableSet final final final < = return new < public public decl_stmt java.lang.String = return == : call decl ImmutableSet.contains() call decl ImmutableSet.contains() call decl ImmutableSet.contains() call decl ImmutableSet.contains() call decl ImmutableSet.contains() String public public decl_stmt java.lang.String = return == :