com.datastax.driver.core com.datastax.driver.core.exceptions.DriverException import com.datastax.driver.core.policies.ConstantSpeculativeExecutionPolicy import com.datastax.driver.core.policies.RetryPolicy import com.datastax.driver.core.policies.SpeculativeExecutionPolicy import com.google.common.collect.ImmutableList import com.google.common.collect.ImmutableMap import org.scassandra.http.client.Consistency import org.scassandra.http.client.PrimingRequest import org.scassandra.http.client.Result import org.testng.annotations.AfterMethod import org.testng.annotations.BeforeMethod import org.testng.annotations.Test import java.util.List import java.util.Map import static static com.datastax.driver.core.Assertions.assertThat import static static com.datastax.driver.core.TestUtils.nonQuietClusterCloseOptions import static static org.mockito.Mockito.* import class com.datastax.driver.core.SpeculativeExecutionTest decl Metrics ScassandraCluster SortingLoadBalancingPolicy Cluster Session Host decl Errors int = public = public = call com.datastax.driver.core.ScassandraCluster.init() call com.datastax.driver.core.ScassandraCluster.init() call com.datastax.driver.core.ScassandraCluster.init() call com.datastax.driver.core.ScassandraCluster.init() call com.datastax.driver.core.ScassandraCluster.init() decl_stmt int = = new = call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() new new new = call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() = = = = call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() call com.datastax.driver.core.Cluster.getMetrics() = = public = = public if != call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() if != call com.datastax.driver.core.ScassandraCluster.stop() call com.datastax.driver.core.ScassandraCluster.stop() call com.datastax.driver.core.ScassandraCluster.stop() call com.datastax.driver.core.ScassandraCluster.stop() call com.datastax.driver.core.ScassandraCluster.stop() long Row ResultSet = public = public call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) decl_stmt long = call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() decl_stmt com.datastax.driver.core.ResultSet = decl_stmt com.datastax.driver.core.Row = call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() long long Row SimpleStatement ResultSet = public = public call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) decl_stmt long = call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() decl_stmt long = call decl Metrics.getRetriesOnUnavailable() call decl Metrics.getRetriesOnUnavailable() call decl Metrics.getRetriesOnUnavailable() call decl Metrics.getRetriesOnUnavailable() call decl Metrics.getRetriesOnUnavailable() decl_stmt com.datastax.driver.core.SimpleStatement = new call SimpleStatement.setConsistencyLevel() call SimpleStatement.setConsistencyLevel() call SimpleStatement.setConsistencyLevel() call SimpleStatement.setConsistencyLevel() call SimpleStatement.setConsistencyLevel() decl_stmt com.datastax.driver.core.ResultSet = decl_stmt com.datastax.driver.core.Row = call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getRetriesOnReadTimeout() call decl Metrics.getRetriesOnReadTimeout() call decl Metrics.getRetriesOnReadTimeout() call decl Metrics.getRetriesOnReadTimeout() call decl Metrics.getRetriesOnReadTimeout() + call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() long Row ResultSet = public = public call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) decl_stmt long = call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() decl_stmt com.datastax.driver.core.ResultSet = decl_stmt com.datastax.driver.core.Row = call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() + call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() long Row ResultSet = public = public call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.Cluster.getConfiguration() call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) call com.datastax.driver.core.ScassandraCluster.node(int) decl_stmt long = call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() decl_stmt com.datastax.driver.core.ResultSet = decl_stmt com.datastax.driver.core.Row = call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call com.datastax.driver.core.ResultSet.one() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call Row.getString() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() call decl Metrics.getSpeculativeExecutions() + call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() call com.datastax.driver.core.ResultSet.getExecutionInfo() Cluster SpeculativeExecutionPolicy = public = public decl_stmt com.datastax.driver.core.policies.SpeculativeExecutionPolicy = decl_stmt com.datastax.driver.core.Cluster = call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.address(int) call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() call com.datastax.driver.core.ScassandraCluster.getBinaryPort() try call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() finally call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() public public if != return return public public return public public return public public return public public public public private static < < private static < < return < >