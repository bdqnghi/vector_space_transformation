com.datastax.driver.core com.google.common.collect.Lists import com.google.common.util.concurrent.* import org.apache.log4j.Level import org.apache.log4j.Logger import org.testng.annotations.Test import java.util.List import java.util.concurrent.ExecutionException import java.util.concurrent.Executors import java.util.concurrent.TimeUnit import static static org.assertj.core.api.Assertions.assertThat import static static org.testng.Assert.assertEquals import static static org.testng.Assert.fail import class com.datastax.driver.core.ThreadLocalMonotonicTimestampGeneratorTest long int ThreadLocalMonotonicTimestampGenerator decl List ListeningExecutorService Throwable = public = public throws decl_stmt long final final = decl_stmt com.datastax.driver.core.ThreadLocalMonotonicTimestampGenerator final final = new = new decl_stmt int = decl_stmt ListeningExecutorService = decl_stmt java.util.List < < = for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call ListeningExecutorService.submit() call ListeningExecutorService.submit() call ListeningExecutorService.submit() call ListeningExecutorService.submit() call ListeningExecutorService.submit() new public public for = < ++ call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() + call ListeningExecutorService.shutdown() call ListeningExecutorService.shutdown() call ListeningExecutorService.shutdown() call ListeningExecutorService.shutdown() call ListeningExecutorService.shutdown() call ListeningExecutorService.awaitTermination() call ListeningExecutorService.awaitTermination() call ListeningExecutorService.awaitTermination() call ListeningExecutorService.awaitTermination() call ListeningExecutorService.awaitTermination() try catch decl_stmt java.lang.Throwable = if instanceof throw else public public for = < ++ + ThreadLocalMonotonicTimestampGenerator Level long long String Logger MemoryAppender long = public = public decl_stmt com.datastax.driver.core.ThreadLocalMonotonicTimestampGenerator = new = new decl_stmt com.datastax.driver.core.MemoryAppender = new decl_stmt java.util.logging.Logger = decl_stmt java.util.logging.Level = call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.getLevel() call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() call Logger.addAppender() decl_stmt java.lang.String = + + try decl_stmt long = call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() decl_stmt long = decl_stmt long = for = < ++ = call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() + = + call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() - = call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() call ThreadLocalMonotonicTimestampGenerator.next() + call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() call com.datastax.driver.core.MemoryAppender.getNext() - finally call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call Logger.removeAppender() call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level) call java.util.logging.Logger.setLevel(Level)