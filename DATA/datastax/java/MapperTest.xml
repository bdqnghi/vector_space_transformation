com.datastax.driver.mapping com.datastax.driver.core.* import com.datastax.driver.core.utils.CassandraVersion import com.datastax.driver.core.utils.UUIDs import com.datastax.driver.mapping.annotations.* import com.google.common.base.Objects import com.google.common.util.concurrent.ListenableFuture import org.testng.annotations.Test import java.net.InetAddress import java.util.Arrays import java.util.HashSet import java.util.Set import java.util.UUID import static static org.assertj.core.api.Assertions.assertThat import static static org.testng.Assert.assertEquals import static static org.testng.Assert.assertTrue import class annotation com.datastax.driver.mapping.MapperTest super super extends public public public public return public public = public public return public public = public public return public public = public public return public public = User public public if == || != return decl_stmt User = return && && && public public return public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public < public < return public public < = Post public public if == || != return decl_stmt Post = return && && && && && public public return User decl Mapper = public = public throws decl_stmt com.datastax.driver.mapping.Mapper < = new decl_stmt User = new call User.setYear() call User.setYear() call User.setYear() call User.setYear() call User.setYear() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() Post Post Post Post decl Mapper User BatchStatement Post MappingManager decl Result Post PostAccessor = = public = = public throws decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) decl_stmt User = new decl_stmt Post = new decl_stmt Post = new decl_stmt Post = new call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setTags() call Post.setTags() call Post.setTags() call Post.setTags() call Post.setTags() new < call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() decl_stmt com.datastax.driver.mapping.PostAccessor = call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) decl_stmt Post = call com.datastax.driver.mapping.PostAccessor.getOne(UUID,UUID) call com.datastax.driver.mapping.PostAccessor.getOne(UUID,UUID) call com.datastax.driver.mapping.PostAccessor.getOne(UUID,UUID) call com.datastax.driver.mapping.PostAccessor.getOne(UUID,UUID) call com.datastax.driver.mapping.PostAccessor.getOne(UUID,UUID) call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() decl_stmt com.datastax.driver.mapping.Result < = call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() = call com.datastax.driver.mapping.PostAccessor.getAll() call com.datastax.driver.mapping.PostAccessor.getAll() call com.datastax.driver.mapping.PostAccessor.getAll() call com.datastax.driver.mapping.PostAccessor.getAll() call com.datastax.driver.mapping.PostAccessor.getAll() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.one() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() call decl Result.isExhausted() decl_stmt com.datastax.driver.core.BatchStatement = new call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.core.BatchStatement.add(Statement) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call com.datastax.driver.mapping.PostAccessor.updateContentQuery(String,UUID,UUID) call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call com.datastax.driver.mapping.MappingManager.getSession() call com.datastax.driver.mapping.MappingManager.getSession() call com.datastax.driver.mapping.MappingManager.getSession() call com.datastax.driver.mapping.MappingManager.getSession() call com.datastax.driver.mapping.MappingManager.getSession() decl_stmt Post = call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getContent() call Post.getContent() call Post.getContent() call Post.getContent() call Post.getContent() decl_stmt Post = call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call decl Mapper.get() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getContent() call Post.getContent() call Post.getContent() call Post.getContent() call Post.getContent() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call decl Mapper.delete() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getUserId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call Post.getPostId() call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call com.datastax.driver.mapping.PostAccessor.getAllAsync(UUID) call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() Post Post Post ResultSet decl Mapper User MappingManager decl Result = public = public throws decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) decl_stmt User = new decl_stmt Post = new decl_stmt Post = new decl_stmt Post = new call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setDevice() call Post.setTags() call Post.setTags() call Post.setTags() call Post.setTags() call Post.setTags() new < call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() call decl Mapper.save() decl_stmt com.datastax.driver.core.ResultSet = + call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() decl_stmt com.datastax.driver.mapping.Result < = call decl Mapper.map() call decl Mapper.map() call decl Mapper.map() call decl Mapper.map() call decl Mapper.map() for : call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() + call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() MappingManager decl Mapper = public = public throws decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() call decl Mapper.getTableMetadata() MappingManager Session = public = public decl_stmt com.datastax.driver.core.Session = decl_stmt com.datastax.driver.mapping.MappingManager = new call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) call com.datastax.driver.core.Session.execute(String) + call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() call com.datastax.driver.core.Session.getState() MappingManager PostAccessor Statement = = public = = public decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.PostAccessor = call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) decl_stmt com.datastax.driver.core.Statement = call com.datastax.driver.mapping.PostAccessor.getAllAsStatementIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() MappingManager PostAccessor Statement = = public = = public decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.PostAccessor = call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) decl_stmt com.datastax.driver.core.Statement = call com.datastax.driver.mapping.PostAccessor.getAllAsStatementNonIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementNonIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementNonIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementNonIdempotent() call com.datastax.driver.mapping.PostAccessor.getAllAsStatementNonIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() MappingManager PostAccessor Statement = = public = = public decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.PostAccessor = call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) call com.datastax.driver.mapping.MappingManager.createAccessor(Class) decl_stmt com.datastax.driver.core.Statement = call PostAccessor.getAllAsStatement() call PostAccessor.getAllAsStatement() call PostAccessor.getAllAsStatement() call PostAccessor.getAllAsStatement() call PostAccessor.getAllAsStatement() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() Statement decl Mapper Statement MappingManager User Statement = = public = = public decl_stmt com.datastax.driver.mapping.MappingManager = new decl_stmt com.datastax.driver.mapping.Mapper < = call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) call com.datastax.driver.mapping.MappingManager.mapper(Class) decl_stmt User = new decl_stmt com.datastax.driver.core.Statement = call decl Mapper.saveQuery() call decl Mapper.saveQuery() call decl Mapper.saveQuery() call decl Mapper.saveQuery() call decl Mapper.saveQuery() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() decl_stmt com.datastax.driver.core.Statement = call decl Mapper.getQuery() call decl Mapper.getQuery() call decl Mapper.getQuery() call decl Mapper.getQuery() call decl Mapper.getQuery() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() decl_stmt com.datastax.driver.core.Statement = call decl Mapper.deleteQuery() call decl Mapper.deleteQuery() call decl Mapper.deleteQuery() call decl Mapper.deleteQuery() call decl Mapper.deleteQuery() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call User.getUserId() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent() call com.datastax.driver.core.Statement.isIdempotent()