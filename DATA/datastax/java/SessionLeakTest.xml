com.datastax.driver.core com.datastax.driver.core.exceptions.InvalidQueryException import com.datastax.driver.core.utils.SocketChannelMonitor import org.testng.annotations.Test import java.util.concurrent.TimeUnit import static static com.datastax.driver.core.Assertions.assertThat import static static com.datastax.driver.core.CreateCCM.TestMode.PER_METHOD import static static com.datastax.driver.core.TestUtils.nonDebouncingQueryOptions import static static com.google.common.collect.Lists.newArrayList import static static java.util.concurrent.TimeUnit.MINUTES import static static org.assertj.core.api.Assertions.fail import class annotation annotation com.datastax.driver.core.SessionLeakTest super super extends SocketChannelMonitor int Cluster Session Session = public = public throws = new call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) decl_stmt com.datastax.driver.core.Cluster = call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() decl_stmt int = decl_stmt com.datastax.driver.core.Session = call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() + call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() decl_stmt com.datastax.driver.core.Session = call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() + * call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call com.datastax.driver.core.Session.close() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) Cluster = public = public throws = new call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) call com.datastax.driver.core.utils.SocketChannelMonitor.reportAtFixedInterval(int,TimeUnit) decl_stmt com.datastax.driver.core.Cluster = call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.utils.SocketChannelMonitor.nettyOptions() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call com.datastax.driver.core.Cluster.init() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() try call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() call com.datastax.driver.core.Cluster.connect() catch call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call Cluster.manager() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.Cluster.close() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.stop() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.report() call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) private private call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress) call com.datastax.driver.core.utils.SocketChannelMonitor.openChannels(InetSocketAddress)