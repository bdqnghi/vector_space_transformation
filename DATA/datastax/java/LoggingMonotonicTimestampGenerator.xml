com.datastax.driver.core org.slf4j.Logger import org.slf4j.LoggerFactory import java.util.concurrent.TimeUnit import java.util.concurrent.atomic.AtomicLong import static static java.util.concurrent.TimeUnit.MICROSECONDS import static static java.util.concurrent.TimeUnit.MILLISECONDS import class com.datastax.driver.core.LoggingMonotonicTimestampGenerator super super extends long long Logger AtomicLong long long protected protected if call Logger.isWarnEnabled() call Logger.isWarnEnabled() call Logger.isWarnEnabled() call Logger.isWarnEnabled() call Logger.isWarnEnabled() && >= && > + decl_stmt long = decl_stmt long = call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() call java.util.concurrent.atomic.AtomicLong.get() if > + && call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long) call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() call Logger.warn() + -