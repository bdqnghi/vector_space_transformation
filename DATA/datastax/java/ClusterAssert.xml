com.datastax.driver.core com.google.common.collect.Iterators import org.assertj.core.api.AbstractAssert import java.net.InetAddress import java.util.Iterator import java.util.Set import java.util.TreeSet import java.util.concurrent.TimeUnit import static static org.assertj.core.api.Assertions.assertThat import class com.datastax.driver.core.ClusterAssert super super extends Host String public public decl_stmt java.lang.String = decl_stmt com.datastax.driver.core.Host = call com.datastax.driver.core.Host.getAddress() call com.datastax.driver.core.Host.getAddress() call com.datastax.driver.core.Host.getAddress() call com.datastax.driver.core.Host.getAddress() call com.datastax.driver.core.Host.getAddress() return public public return public public return Host public public decl_stmt com.datastax.driver.core.Host = return new Host public public decl_stmt com.datastax.driver.core.Host = + return new Host public public decl_stmt com.datastax.driver.core.Host = + return new public public return decl Set public public decl_stmt java.util.Set < = new < for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return decl Set public public decl_stmt java.util.Set < = new < return TokenRange boolean TokenRange decl Iterator TokenRange private private < decl_stmt java.util.Iterator < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt com.datastax.driver.core.TokenRange = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() = decl_stmt com.datastax.driver.core.TokenRange = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt com.datastax.driver.core.TokenRange = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() = call com.datastax.driver.core.TokenRange.mergeWith(TokenRange) call com.datastax.driver.core.TokenRange.mergeWith(TokenRange) call com.datastax.driver.core.TokenRange.mergeWith(TokenRange) call com.datastax.driver.core.TokenRange.mergeWith(TokenRange) call com.datastax.driver.core.TokenRange.mergeWith(TokenRange) decl_stmt boolean = call com.datastax.driver.core.TokenRange.getStart() call com.datastax.driver.core.TokenRange.getStart() call com.datastax.driver.core.TokenRange.getStart() call com.datastax.driver.core.TokenRange.getStart() call com.datastax.driver.core.TokenRange.getStart() call com.datastax.driver.core.TokenRange.getEnd() call com.datastax.driver.core.TokenRange.getEnd() call com.datastax.driver.core.TokenRange.getEnd() call com.datastax.driver.core.TokenRange.getEnd() call com.datastax.driver.core.TokenRange.getEnd() && ! call com.datastax.driver.core.TokenRange.isEmpty() call com.datastax.driver.core.TokenRange.isEmpty() call com.datastax.driver.core.TokenRange.isEmpty() call com.datastax.driver.core.TokenRange.isEmpty() call com.datastax.driver.core.TokenRange.isEmpty() return