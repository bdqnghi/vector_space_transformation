com.datastax.driver.core class com.datastax.driver.core.TupleValue super super extends TupleType protected protected return call com.datastax.driver.core.TupleType.getComponentTypes() call com.datastax.driver.core.TupleType.getComponentTypes() call com.datastax.driver.core.TupleType.getComponentTypes() call com.datastax.driver.core.TupleType.getComponentTypes() call com.datastax.driver.core.TupleType.getComponentTypes() protected protected return + protected protected return call com.datastax.driver.core.TupleType.getCodecRegistry() call com.datastax.driver.core.TupleType.getCodecRegistry() call com.datastax.driver.core.TupleType.getCodecRegistry() call com.datastax.driver.core.TupleType.getCodecRegistry() call com.datastax.driver.core.TupleType.getCodecRegistry() public public return TupleValue public public if ! instanceof return decl_stmt com.datastax.driver.core.TupleValue = if ! call com.datastax.driver.core.TupleType.equals(Object) call com.datastax.driver.core.TupleType.equals(Object) call com.datastax.driver.core.TupleType.equals(Object) call com.datastax.driver.core.TupleType.equals(Object) call com.datastax.driver.core.TupleType.equals(Object) return return public public return StringBuilder decl TypeCodec public public decl_stmt java.lang.StringBuilder = new decl_stmt com.datastax.driver.core.TypeCodec < = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl TypeCodec.format() call decl TypeCodec.format() call decl TypeCodec.format() call decl TypeCodec.format() call decl TypeCodec.format() return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()