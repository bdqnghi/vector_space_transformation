com.datastax.driver.extras.codecs.json com.datastax.driver.core.DataType import com.datastax.driver.core.ParseUtils import com.datastax.driver.core.ProtocolVersion import com.datastax.driver.core.TypeCodec import com.datastax.driver.core.exceptions.InvalidTypeException import com.datastax.driver.core.utils.Bytes import com.fasterxml.jackson.core.JsonProcessingException import com.fasterxml.jackson.databind.JavaType import com.fasterxml.jackson.databind.ObjectMapper import com.fasterxml.jackson.databind.type.TypeFactory import java.io.IOException import java.nio.ByteBuffer import class super super extends ObjectMapper public public throws if == return try return call ObjectMapper.writeValueAsBytes() call ObjectMapper.writeValueAsBytes() call ObjectMapper.writeValueAsBytes() call ObjectMapper.writeValueAsBytes() call ObjectMapper.writeValueAsBytes() catch throw new public public throws if == return try return call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() catch throw new String public public throws if == return decl_stmt java.lang.String try = call ObjectMapper.writeValueAsString() call ObjectMapper.writeValueAsString() call ObjectMapper.writeValueAsString() call ObjectMapper.writeValueAsString() call ObjectMapper.writeValueAsString() catch throw new return String public public throws if == || || return if ! throw new decl_stmt java.lang.String = try return call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() call ObjectMapper.readValue() catch throw new protected protected return