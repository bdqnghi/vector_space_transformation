Spring.Objects.Factory.Config System using System.Collections using NUnit.Framework using class attribute Spring.Objects.Factory.Config.ListFactoryObjectTests ListFactoryObject typeof = public typeof = public decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = typeof ListFactoryObject typeof = public typeof = public decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = typeof ListFactoryObject typeof = public typeof = public decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = typeof ListFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = ListFactoryObject typeof = public typeof = public decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() public public typeof new IList ListFactoryObject TestObject IList TestObject public public decl_stmt System.Collections.Generic.IList = new new new new decl_stmt Spring.Objects.Factory.Config.ListFactoryObject = new = call ListFactoryObject.AfterPropertiesSet() call ListFactoryObject.AfterPropertiesSet() call ListFactoryObject.AfterPropertiesSet() call ListFactoryObject.AfterPropertiesSet() call ListFactoryObject.AfterPropertiesSet() decl_stmt System.Collections.Generic.IList = call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() call ListFactoryObject.GetObject() for = < ++ decl_stmt Spring.Data.NHibernate.TestObject = decl_stmt Spring.Data.NHibernate.TestObject =