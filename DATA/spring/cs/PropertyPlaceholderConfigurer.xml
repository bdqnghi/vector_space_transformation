Spring.Objects.Factory.Config System using System.Collections.Generic using System.Collections.Specialized using System.Globalization using Common.Logging using Spring.Collections using Spring.Util using class attribute Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer super super PropertyResourceConfigurer string string bool bool string EnvironmentVariableMode ILog string = = return = = = ObjectDefinitionVisitor decl IList IObjectDefinition string PlaceholderResolveHandlerAdapter protected override protected override decl_stmt PlaceholderResolveHandlerAdapter = new decl_stmt Spring.Objects.Factory.Config.ObjectDefinitionVisitor = new decl_stmt System.Collections.Generic.IList < = for = < ++ decl_stmt string = decl_stmt Spring.Objects.Factory.Config.IObjectDefinition = if == call ILog.ErrorFormat() call ILog.ErrorFormat() call ILog.ErrorFormat() call ILog.ErrorFormat() call ILog.ErrorFormat() continue try call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) catch throw new int int string int string public virtual public virtual decl_stmt int = while != - decl_stmt int = + if != - decl_stmt int = + decl_stmt string = - if throw new + decl_stmt string = if != = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion = + + + = + else if return else throw new else = - return string protected virtual protected virtual decl_stmt string = if == = if == = if == && == = return protected virtual protected virtual return public public return new