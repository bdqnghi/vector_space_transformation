Spring.Objects.Factory.Config System using System.Collections using System.Collections.Generic using System.Globalization using Common.Logging using Spring.Collections using Spring.Core using Spring.Util using class Spring.Objects.Factory.Config.VariablePlaceholderConfigurer super super IObjectFactoryPostProcessor super IPriorityOrdered string string bool bool string IList int string = = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) = = = = ICollection public public if throw new decl_stmt System.Collections.Generic.ICollection = typeof if != throw new try catch if typeof throw else throw new return = IObjectDefinition string decl IList CompositeVariableSource TextProcessor ObjectDefinitionVisitor protected virtual protected virtual decl_stmt CompositeVariableSource = new decl_stmt TextProcessor = new decl_stmt Spring.Objects.Factory.Config.ObjectDefinitionVisitor = new new decl_stmt System.Collections.Generic.IList < = for = < ++ decl_stmt string = decl_stmt Spring.Objects.Factory.Config.IObjectDefinition = if == continue try call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) call Spring.Objects.Factory.Config.ObjectDefinitionVisitor.VisitObjectDefinition(IObjectDefinition) catch throw new public public return new int int string int string private private if == return decl_stmt int = while != - decl_stmt int = + if != - decl_stmt int = + decl_stmt string = - if throw new if decl_stmt string = = region region if endregion if == && == && <= + return = + + + = + == : else if return else throw new else = - return public public foreach in if ! continue return throw new public public foreach in if return return