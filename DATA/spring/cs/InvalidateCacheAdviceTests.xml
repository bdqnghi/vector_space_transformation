Spring.Aspects.Cache System.Reflection using NUnit.Framework using Rhino.Mocks using Spring.Caching using Spring.Context using class attribute Spring.Aspects.Cache.InvalidateCacheAdviceTests IApplicationContext MockRepository InvalidateCacheAdvice ICache public public = new = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof = new = = new call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) call Spring.Caching.ICache.Insert(object,object,TimeSpan) decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.InvalidateCacheAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() private private call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject()