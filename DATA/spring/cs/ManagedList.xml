Spring.Objects.Factory.Config System using System.Collections using System.Collections.Generic using System.Globalization using Spring.Core using Spring.Core.TypeConversion using Spring.Core.TypeResolution using Spring.Util using class attribute Spring.Objects.Factory.Config.ManagedList super super ArrayList super IManagedCollection super IMergable bool string return = IList object decl Type Type Type object public public decl_stmt System.Collections.Generic.IList decl_stmt System.Type = if = if == = new else decl_stmt System.Type = typeof <> decl_stmt System.Type = new = call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) = for = < ++ decl_stmt object = decl_stmt object = if != try = + + + catch throw new + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) return return = IList IList public public if ! throw new if == return decl_stmt System.Collections.Generic.IList = as if == throw new + + decl_stmt System.Collections.Generic.IList = new foreach in call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) foreach in call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) return