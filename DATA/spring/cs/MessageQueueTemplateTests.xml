Spring.Messaging.Core System using System.Messaging using System.Transactions using NUnit.Framework using Spring.Data.Core using Spring.Messaging.Support.Converters using Spring.Testing.NUnit using Spring.Threading using Spring.Transaction using Spring.Transaction.Support using Spring.Util using class attribute Spring.Messaging.Core.MessageQueueTemplateTests super super AbstractDependencyInjectionSpringContextTests public override public override SimpleCreator string MessageQueue MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as decl_stmt string = if call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() decl_stmt MessageQueue = new = return call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() decl_stmt SimpleCreator = new call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() public public return new MessageQueueTemplate typeof public typeof public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = new call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() MessageQueueTemplate typeof = public typeof = public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = new = call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() call MessageQueueTemplate.MessageQueueFactory() MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) string object private static private static decl_stmt object = if == = else = decl_stmt string = as string + MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as private static private static private static private static private static private static IPlatformTransactionManager TransactionTemplate private static private static decl_stmt Spring.Transaction.IPlatformTransactionManager = new decl_stmt Spring.Transaction.Support.TransactionTemplate = new call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) if == else return IPlatformTransactionManager TransactionTemplate private static private static decl_stmt Spring.Transaction.IPlatformTransactionManager = new decl_stmt Spring.Transaction.Support.TransactionTemplate = new call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) return return new Message MessageQueue public public decl_stmt MessageQueue = new call MessageQueue.Send() call MessageQueue.Send() call MessageQueue.Send() call MessageQueue.Send() call MessageQueue.Send() = new new typeof string decl_stmt System.ServiceModel.Channels.Message = call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() MessageQueueTemplate public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as for = < ++ call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert()