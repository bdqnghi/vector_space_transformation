Spring.Data.NHibernate System using System.Data using System.Reflection using System.Transactions using NHibernate using NHibernate.Transaction using Spring.Core.TypeResolution using Spring.Dao using Spring.Data.Common using Spring.Data.Core using Spring.Data.Support using Spring.Objects.Factory using Spring.Transaction using Spring.Transaction.Support using class Spring.Data.NHibernate.HibernateTxScopeTransactionManager super super AbstractPlatformTransactionManager super IResourceTransactionManager super IObjectFactoryAware super IInitializingObject IDbProvider TxScopeTransactionManager IObjectFactory ISessionFactory IAdoExceptionTranslator IAdoExceptionTranslator bool Object return = String if is return else if is string if == throw new decl_stmt System.String = return typeof else return = = return = lock if == if != = new else = return return = return = = HibernateTransactionObject SessionHolder ConnectionHolder protected override protected override decl_stmt HibernateTransactionObject = new = if decl_stmt Spring.Data.NHibernate.SessionHolder = if + + call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() if != decl_stmt Spring.Data.Support.ConnectionHolder = = = new return var var var protected override protected override decl_stmt var = decl_stmt var = decl_stmt var = call var.HasTransaction() call var.HasTransaction() call var.HasTransaction() call var.HasTransaction() call var.HasTransaction() return && IDbTransaction decl TxScopeTransactionManager IInterceptor FlushMode int decl PromotableTxScopeTransactionObject HibernateTransactionObject ITransaction IDbConnection ISession ISession protected override protected override decl_stmt PromotableTxScopeTransactionObject = try catch throw new decl_stmt HibernateTransactionObject = if != && && ! throw new + + + decl_stmt Spring.Messaging.Ems.Common.ISession = try if == || decl_stmt IInterceptor = decl_stmt Spring.Messaging.Ems.Common.ISession = != : if + + call decl PromotableTxScopeTransactionObject.SetSessionHolder() call decl PromotableTxScopeTransactionObject.SetSessionHolder() call decl PromotableTxScopeTransactionObject.SetSessionHolder() call decl PromotableTxScopeTransactionObject.SetSessionHolder() call decl PromotableTxScopeTransactionObject.SetSessionHolder() new = = decl_stmt System.Data.IDbConnection = if && = if ! && ! decl_stmt FlushMode = if == = = decl_stmt ITransaction = call HibernateTransactionObject.BeginTransaction() call HibernateTransactionObject.BeginTransaction() call HibernateTransactionObject.BeginTransaction() call HibernateTransactionObject.BeginTransaction() call HibernateTransactionObject.BeginTransaction() decl_stmt System.Data.IDbTransaction = = decl_stmt int = if != = if != decl_stmt Spring.Data.Support.ConnectionHolder = new if != = if + + = if catch throw new TransactionScopeOption TransactionOptions private private decl_stmt TransactionScopeOption = decl_stmt TransactionOptions = TransactionScopeOption private static private static decl_stmt TransactionScopeOption if == = else if == = else if == = else throw new + + return TransactionOptions private static private static decl_stmt TransactionOptions = new switch case = break case = break case = break case = break case = break case = break case = break if != = new return HibernateTransactionObject ConnectionHolder SessionHolder protected override protected override decl_stmt HibernateTransactionObject = call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() decl_stmt Spring.Data.NHibernate.SessionHolder = decl_stmt Spring.Data.Support.ConnectionHolder = if != = return new SuspendedResourcesHolder protected override protected override decl_stmt SuspendedResourcesHolder = if if != HibernateTransactionObject Type HibernateException protected override protected override decl_stmt HibernateTransactionObject = if + + try call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() catch decl_stmt System.Type = if throw new decl_stmt HibernateException = as if != throw throw finally decl TxScopeTransactionManager protected protected decl_stmt PromotableTxScopeTransactionObject = try call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() catch throw new catch throw new catch throw new HibernateTransactionObject protected override protected override decl_stmt HibernateTransactionObject = if ! call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() return decl TxScopeTransactionManager protected protected decl_stmt PromotableTxScopeTransactionObject = try call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() call decl TxScopeTransactionManager.TxScopeAdapter() catch throw new HibernateTransactionObject protected override protected override decl_stmt HibernateTransactionObject = if + + call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() protected protected if try catch throw new IDbTransaction FieldInfo AdoTransaction protected protected decl_stmt AdoTransaction = as decl_stmt System.Data.IDbTransaction = if != try decl_stmt System.Reflection.FieldInfo = call AdoTransaction.GetType() call AdoTransaction.GetType() call AdoTransaction.GetType() call AdoTransaction.GetType() call AdoTransaction.GetType() | = call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() as catch else return protected virtual protected virtual if != && is return else if is return return protected virtual protected virtual return + HibernateTransactionObject ISession protected override protected override decl_stmt HibernateTransactionObject = if if != decl_stmt Spring.Messaging.Ems.Common.ISession = if if + + else if + + if = call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() public public = = return = return return public public return != && != public public if != = if != = return != && || != && return return IDbProvider public public if == throw new if is string && == throw new if && == decl_stmt Spring.Data.Common.IDbProvider = if != if + + = else