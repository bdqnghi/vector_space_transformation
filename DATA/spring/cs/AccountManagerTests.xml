Spring.TxQuickStart System using System.Collections.Generic using System.Data using NUnit.Framework using Spring.Aop.Config using Spring.Context using Spring.Context.Support using Spring.Data.Common using Spring.Data.Config using Spring.Data.Core using Spring.Objects.Factory.Xml using Spring.Transaction.Config using Spring.TxQuickStart.Services using class attribute Spring.TxQuickStart.AccountManagerTests AdoTemplate IAccountManager AdoTemplate decl IDictionary IApplicationContext public public typeof typeof typeof decl_stmt Spring.Context.IApplicationContext = decl_stmt System.Collections.Generic.IDictionary < = < = as private static private static return new int int public public call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) int int public public try call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) catch decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) int int public public try call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) catch decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) decl_stmt int = int call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) IDbProvider private private decl_stmt Spring.Data.Common.IDbProvider = = new call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) = = new call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string)