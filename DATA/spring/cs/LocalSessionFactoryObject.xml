Spring.Data.NHibernate System using System.Collections using System.Collections.Generic using System.Data using System.Data.Common using Common.Logging using NHibernate using NHibernate.Bytecode using NHibernate.Cfg using NHibernate.Connection using NHibernate.Dialect using NHibernate.Engine using NHibernate.Event using NHibernate.Tool.hbm2ddl using Spring.Context using Spring.Core.IO using Spring.Dao using Spring.Dao.Attributes using Spring.Dao.Support using Spring.Data.Common using Spring.Data.Support using Spring.Objects.Factory using Spring.Objects.Factory.Config using Spring.Util using NHibernate.Cfg.Environment NHibernate.Cfg.Configuration class Spring.Data.NHibernate.LocalSessionFactoryObject super super IFactoryObject super IInitializingObject super IPersistenceExceptionTranslator super IDisposable super IApplicationContextAware IDictionary IApplicationContext bool ILog decl IDictionary IAdoExceptionTranslator decl string decl string IDbProvider IDbProvider decl FilterDefinition IBytecodeProvider decl string Configuration bool INamingStrategy Properties IResourceLoader ISessionFactory Properties decl IObjectDefinition IInterceptor = protected protected return if == = new return = = = = return if == = new < return = = return = return = = = = = = = = = if == = return return = public public return return != call ISessionFactory.GetType() call ISessionFactory.GetType() call ISessionFactory.GetType() call ISessionFactory.GetType() call ISessionFactory.GetType() : typeof return Dialect IObjectDefinition Mappings decl Dictionary ListenerType object decl IDictionary decl Dictionary IResourceLoader ICollection decl string decl object ArrayList Configuration EventListeners public virtual public virtual decl_stmt System.Net.Test.Common.Configuration = if != call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() typeof = if call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() call Configuration.SetProperty() typeof if != call Configuration.SetInterceptor() call Configuration.SetInterceptor() call Configuration.SetInterceptor() call Configuration.SetInterceptor() call Configuration.SetInterceptor() if != call Configuration.SetNamingStrategy() call Configuration.SetNamingStrategy() call Configuration.SetNamingStrategy() call Configuration.SetNamingStrategy() call Configuration.SetNamingStrategy() if != decl_stmt System.Collections.Generic.IDictionary < = new < foreach < in call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() string string decl_stmt Dialect = decl_stmt Mappings = call Configuration.CreateMappings() call Configuration.CreateMappings() call Configuration.CreateMappings() call Configuration.CreateMappings() call Configuration.CreateMappings() for = < ++ decl_stmt Spring.Objects.Factory.Config.IObjectDefinition = decl_stmt System.Collections.Generic.Dictionary < = new < foreach in call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() string string call Mappings.AddTypeDef() call Mappings.AddTypeDef() call Mappings.AddTypeDef() call Mappings.AddTypeDef() call Mappings.AddTypeDef() if != for = < ++ call Configuration.AddFilterDefinition() call Configuration.AddFilterDefinition() call Configuration.AddFilterDefinition() call Configuration.AddFilterDefinition() call Configuration.AddFilterDefinition() if != if call Configuration.GetProperty() call Configuration.GetProperty() call Configuration.GetProperty() call Configuration.GetProperty() call Configuration.GetProperty() != && call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() region region if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + + endregion call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() call Configuration.Properties() decl_stmt System.Collections.Generic.Dictionary < = new < foreach < in call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call Configuration.AddProperties() call Configuration.AddProperties() call Configuration.AddProperties() call Configuration.AddProperties() call Configuration.AddProperties() if != foreach in call Configuration.AddAssembly() call Configuration.AddAssembly() call Configuration.AddAssembly() call Configuration.AddAssembly() call Configuration.AddAssembly() if != decl_stmt Spring.Core.IO.IResourceLoader = if == = foreach in call Configuration.AddInputStream() call Configuration.AddInputStream() call Configuration.AddInputStream() call Configuration.AddInputStream() call Configuration.AddInputStream() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() if != foreach in call Configuration.Configure() call Configuration.Configure() call Configuration.Configure() call Configuration.Configure() call Configuration.Configure() call Configuration.BuildMappings() call Configuration.BuildMappings() call Configuration.BuildMappings() call Configuration.BuildMappings() call Configuration.BuildMappings() if != foreach in decl_stmt string = if > call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() else if > call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() call Configuration.SetCacheConcurrencyStrategy() if != foreach in decl_stmt string = if > throw new else if > call Configuration.SetCollectionCacheConcurrencyStrategy() call Configuration.SetCollectionCacheConcurrencyStrategy() call Configuration.SetCollectionCacheConcurrencyStrategy() call Configuration.SetCollectionCacheConcurrencyStrategy() call Configuration.SetCollectionCacheConcurrencyStrategy() if != foreach in decl_stmt ListenerType try = typeof string catch throw new typeof decl_stmt object = if is decl_stmt System.Collections.Generic.ICollection = decl_stmt EventListeners = decl_stmt System.Collections.ArrayList = new decl_stmt object = call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call System.Collections.ArrayList.ToArray(Type) call EventListeners.GetListenerClassFor() call EventListeners.GetListenerClassFor() call EventListeners.GetListenerClassFor() call EventListeners.GetListenerClassFor() call EventListeners.GetListenerClassFor() call Configuration.SetListeners() call Configuration.SetListeners() call Configuration.SetListeners() call Configuration.SetListeners() call Configuration.SetListeners() else call Configuration.SetListener() call Configuration.SetListener() call Configuration.SetListener() call Configuration.SetListener() call Configuration.SetListener() if != = else call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() = = = public public if != region region if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() endregion call ISessionFactory.Close() call ISessionFactory.Close() call ISessionFactory.Close() call ISessionFactory.Close() call ISessionFactory.Close() protected virtual protected virtual return new protected virtual protected virtual protected virtual protected virtual protected virtual protected virtual if HibernateTemplate Dialect decl string IDbConnection public public call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() decl_stmt Spring.Data.NHibernate.Generic.HibernateTemplate = new call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) new decl_stmt System.Data.IDbConnection = decl_stmt Dialect = decl_stmt string = return HibernateTemplate Dialect decl string IDbConnection public public call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() decl_stmt Spring.Data.NHibernate.Generic.HibernateTemplate = new call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) new decl_stmt System.Data.IDbConnection = decl_stmt Dialect = decl_stmt string = return HibernateTemplate Dialect DatabaseMetadata decl string IDbConnection public virtual public virtual call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() decl_stmt Spring.Data.NHibernate.Generic.HibernateTemplate = new = call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) call Spring.Data.NHibernate.Generic.HibernateTemplate.Execute(IHibernateCallback) new decl_stmt System.Data.IDbConnection = decl_stmt Dialect = decl_stmt DatabaseMetadata = new decl_stmt string = return IDbCommand protected virtual protected virtual if != && > decl_stmt System.Data.IDbCommand = try for = < ++ finally protected virtual protected virtual if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + try = catch if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + DbProviderWrapper ISessionFactoryImplementor ISessionFactory protected virtual protected virtual decl_stmt ISessionFactory = decl_stmt ISessionFactoryImplementor = as if != decl_stmt DbProviderWrapper = as if != = return return = public override public override IDbConnection IDbProvider public override public override decl_stmt Spring.Data.Common.IDbProvider = if == && != = if == throw new decl_stmt System.Data.IDbConnection = call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() return public public if is return return protected virtual protected virtual if is return return protected virtual protected virtual return