Spring.Context.Attributes System using System.Collections.Generic using System.Reflection using System.Text using Spring.Core.IO using Spring.Collections.Generic using Spring.Objects.Factory.Parsing using class Spring.Context.Attributes.ConfigurationClass decl Generic decl Collections decl IDictionary string Type return return return return = return return public public call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() public override public override return == || is && == public override public override return * char String decl Dictionary String String int string int String public public decl_stmt char const const = decl_stmt System.Collections.Generic.Dictionary < = new < foreach in decl_stmt System.String = decl_stmt System.String = decl_stmt string = decl_stmt System.String = + + + if ! call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() else decl_stmt int = call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() call decl Dictionary.Add() ++ foreach in decl_stmt int = if > decl_stmt System.String = call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.Substring(int,int) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) + new if typeof != if new foreach in var private private decl_stmt var = new foreach in call var.Append() call var.Append() call var.Append() call var.Append() call var.Append() return call var.ToString() call var.ToString() call var.ToString() call var.ToString() call var.ToString()