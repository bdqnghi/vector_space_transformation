Spring.Aop.Framework System using System.Collections using System.Collections.Generic using AopAlliance.Aop using AopAlliance.Intercept using Common.Logging using Spring.Aop.Framework.Adapter using Spring.Aop.Support using Spring.Aop.Target using Spring.Core using Spring.Core.TypeResolution using Spring.Objects.Factory using Spring.Util using class attribute Spring.Aop.Framework.ProxyFactoryObject super super AdvisedSupport super IFactoryObject super IObjectFactoryAware bool decl string bool object IObjectFactory IAdvisorAdapterRegistry bool ILog decl string string string return = = return = try = catch throw new = = = = public virtual public virtual lock if ! = if return if == call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + return lock if != return else if == return else if != && != return else return return = if == = = = return ITargetSource AdvisedSupport object decl IList decl IList private private region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + endregion decl_stmt Spring.Aop.ITargetSource = decl_stmt System.Collections.Generic.IList < = decl_stmt System.Collections.Generic.IList < = decl_stmt Spring.Aop.Framework.AdvisedSupport = new call Spring.Aop.Framework.AdvisedSupport.CopyConfigurationFrom(AdvisedSupport,ITargetSource,IList,IList) call Spring.Aop.Framework.AdvisedSupport.CopyConfigurationFrom(AdvisedSupport,ITargetSource,IList,IList) call Spring.Aop.Framework.AdvisedSupport.CopyConfigurationFrom(AdvisedSupport,ITargetSource,IList,IList) call Spring.Aop.Framework.AdvisedSupport.CopyConfigurationFrom(AdvisedSupport,ITargetSource,IList,IList) call Spring.Aop.Framework.AdvisedSupport.CopyConfigurationFrom(AdvisedSupport,ITargetSource,IList,IList) region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + endregion decl_stmt object = call Spring.Aop.Framework.AdvisedSupport.CreateAopProxy() call Spring.Aop.Framework.AdvisedSupport.CreateAopProxy() call Spring.Aop.Framework.AdvisedSupport.CreateAopProxy() call Spring.Aop.Framework.AdvisedSupport.CreateAopProxy() call Spring.Aop.Framework.AdvisedSupport.CreateAopProxy() = return private private region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion object IListableObjectFactory private private if return if - != && - && == && == throw new foreach in if == throw new if decl_stmt Spring.Objects.Factory.IListableObjectFactory = as if == throw new region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + endregion - else region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + endregion decl_stmt object if || = else = new IAdvisors IAdvisor private private if is region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt Spring.Aop.IAdvisors = foreach in region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt Spring.Aop.IAdvisor = else region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt Spring.Aop.IAdvisor = Type private private decl_stmt System.Type = if != return typeof || typeof || typeof return object string decl List decl IList IAdvisors decl IList decl Dictionary decl IList private private decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.Generic.List < = new < decl_stmt System.Collections.Generic.Dictionary < = new < for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt Spring.Aop.IAdvisors = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) foreach in if ! is call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt object = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) if ! is call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt object = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() new foreach in decl_stmt string = object private private if return foreach in if == throw new region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + endregion if if ! is throw new - else decl_stmt object if || = else = new object string ArrayList IAdvisors decl IList decl Dictionary decl IList decl IList private private decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.Generic.IList < = typeof decl_stmt System.Collections.ArrayList = new decl_stmt System.Collections.Generic.Dictionary < = new < for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt Spring.Aop.IAdvisors = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) foreach in if is call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) = for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt object = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) if is call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) = for = < ++ decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt object = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) if ! is || is || is call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) = call System.Collections.ArrayList.Sort() call System.Collections.ArrayList.Sort() call System.Collections.ArrayList.Sort() call System.Collections.ArrayList.Sort() call System.Collections.ArrayList.Sort() new foreach in decl_stmt string = IIntroductionAdvisor private private call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt Spring.Aop.IIntroductionAdvisor = ITargetSource object private private if region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion return region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + endregion decl_stmt object = decl_stmt Spring.Aop.ITargetSource = return object PrototypePlaceholder decl List decl IList IAdvisor private < private < decl_stmt System.Collections.Generic.IList < = decl_stmt System.Collections.Generic.List < = new < foreach in if is decl_stmt PrototypePlaceholder = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt object = decl_stmt Spring.Aop.IAdvisor = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return decl List decl IList PrototypePlaceholder object IIntroductionAdvisor private < private < decl_stmt System.Collections.Generic.IList < = decl_stmt System.Collections.Generic.List < = new < foreach in if is decl_stmt PrototypePlaceholder = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt object = decl_stmt Spring.Aop.IIntroductionAdvisor = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return private private if is return return new private private try return call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() catch throw new private private if is return return new protected override protected override call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() = protected override protected override return String decl String private private if ! decl_stmt System.String = - if != && == && == if ! call System.String.EndsWith(String) call System.String.EndsWith(String) call System.String.EndsWith(String) call System.String.EndsWith(String) call System.String.EndsWith(String) && ! = if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt System.String = new - = return throw new + throw new + throw new + throw new + public public throw new +