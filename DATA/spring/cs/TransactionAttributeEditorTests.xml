Spring.Transaction.Interceptor System using System.Data using System.Runtime.Remoting using NUnit.Framework using class attribute Spring.Transaction.Interceptor.TransactionAttributeEditorTests TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = != == == TransactionAttributeEditor typeof public typeof public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = != == == TransactionAttributeEditor typeof public typeof public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = == == == call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new ! call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = == == == - call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new DefaultTransactionAttribute TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.DefaultTransactionAttribute = new = = = = decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call DefaultTransactionAttribute.ToString() call DefaultTransactionAttribute.ToString() call DefaultTransactionAttribute.ToString() call DefaultTransactionAttribute.ToString() call DefaultTransactionAttribute.ToString() decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new = == = RuleBasedTransactionAttribute TransactionAttributeEditor ITransactionAttribute public public decl_stmt Spring.Transaction.Interceptor.RuleBasedTransactionAttribute = new = = = = call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) new call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) new decl_stmt Spring.Transaction.Interceptor.TransactionAttributeEditor = new call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.TransactionAttributeEditor.SetAsText(string) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ToString() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ToString() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ToString() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ToString() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ToString() decl_stmt Spring.Transaction.Interceptor.ITransactionAttribute = call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() call ITransactionAttribute.RollbackOn() new call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ClearRollbackRules() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ClearRollbackRules() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ClearRollbackRules() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ClearRollbackRules() call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.ClearRollbackRules() == call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) new call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) call Spring.Transaction.Interceptor.RuleBasedTransactionAttribute.AddRollbackRule(RollbackRuleAttribute) new