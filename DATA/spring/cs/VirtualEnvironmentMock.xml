Spring.TestSupport System using System.Collections using System.Collections.Specialized using System.IO using System.Reflection using System.Text using System.Web using Spring.Collections using Spring.Util using class Spring.TestSupport.VirtualEnvironmentMock super super IVirtualEnvironment super IDisposable NameValueCollection string string ISessionState HttpValueCollection IVirtualEnvironment string IDictionary IDictionary string return return return + string decl_stmt string = + if > = + + call System.Web.HttpValueCollection.ToString() call System.Web.HttpValueCollection.ToString() call System.Web.HttpValueCollection.ToString() call System.Web.HttpValueCollection.ToString() call System.Web.HttpValueCollection.ToString() return return return = return string string public public decl_stmt string = new decl_stmt string = = call string.TrimEnd() call string.TrimEnd() call string.TrimEnd() call string.TrimEnd() call string.TrimEnd() + + call string.Replace() call string.Replace() call string.Replace() call string.Replace() call string.Replace() return int IDisposable string public public decl_stmt System.IDisposable = new decl_stmt int = if >= decl_stmt string = < - + : = new = = return object public public decl_stmt object = if == throw new else if is return else return call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() object public public decl_stmt object = if == throw new else if is return else return return = return = return public public public public if != public override public override return int char string int int string private private decl_stmt int = != : for = < ++ decl_stmt int = decl_stmt int = - while < decl_stmt char = if == if < = else if == break ++ decl_stmt string = decl_stmt string = if >= = - = + - - else = - if else if == - && == int int string string StringBuilder ArrayList string internal virtual internal virtual decl_stmt System.Text.StringBuilder = new decl_stmt int = for = < ++ decl_stmt string decl_stmt string = if = decl_stmt string = != && > + : decl_stmt System.Collections.ArrayList = decl_stmt int = != : if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if == call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = string if = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else if == call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else for = < ++ if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = string if = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)