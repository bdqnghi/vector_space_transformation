Spring.Aop.Framework System using System.Collections using System.Collections.Generic using System.Reflection using System.Text using AopAlliance.Aop using AopAlliance.Intercept using Spring.Aop.Support using Spring.Aop.Target using Spring.Util using class attribute Spring.Aop.Framework.AdvisedSupport super super ProxyConfig super IAdvised decl List decl IAdvisor ITargetSource decl List decl Dictionary decl IList ConstructorInfo IAdvisorChainFactory bool Type bool lock return lock if != = return = != : bool decl IAdvisor IIntroductionAdvisor decl_stmt bool = if ! return lock decl_stmt Spring.Aop.IAdvisor = for = < ++ decl_stmt Spring.Aop.IAdvisor = = call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() && call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() if ! return for = < ++ decl_stmt Spring.Aop.IIntroductionAdvisor = = call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() call IIntroductionAdvisor.GetType() && call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() if ! return return decl Type lock decl_stmt System.Type = new return lock protected protected < if != for = < ++ lock return new public virtual public virtual if != lock foreach in if return return return lock return public public - public public if is && ! is throw new + if is throw new new public virtual public virtual lock return public virtual public virtual lock return int bool public public decl_stmt bool = if != lock decl_stmt int = if == - = else = return public virtual public virtual lock int public public lock decl_stmt int = if == - return return int bool public public decl_stmt bool = if != lock decl_stmt int = if == - = else = return IIntroductionAdvisor public virtual public virtual lock if < || >= throw new + + + + decl_stmt Spring.Aop.IIntroductionAdvisor = foreach in public virtual public virtual lock if call decl List.Contains() call decl List.Contains() call decl List.Contains() call decl List.Contains() call decl List.Contains() return if == - else public virtual public virtual public public foreach in if is else int public virtual public virtual lock if < decl_stmt int = foreach in = if != IIntroductionAdvisor Type int public virtual public virtual decl_stmt System.Type = lock decl_stmt int = for = < ++ decl_stmt Spring.Aop.IIntroductionAdvisor = if call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() == = public virtual public virtual lock if < || >= throw new + + + + + = int public public lock decl_stmt int = if == - || == return return public public lock return StringBuilder protected virtual protected virtual decl_stmt System.Text.StringBuilder = new + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) + + call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) return return = = new return return = return = public virtual public virtual lock public virtual public virtual lock public virtual public virtual lock protected virtual protected virtual = public virtual public virtual lock if != && return return public virtual public virtual lock return IAdvisor private private if != for = < ++ decl_stmt Spring.Aop.IAdvisor = if == return return - private private return != : - private private return private private if < || >= throw new + + + + public public return != - int public public decl_stmt int = lock foreach in if ++ return private private if throw new decl IAdvisor private private decl_stmt Spring.Aop.IAdvisor = new = protected virtual protected virtual = = if foreach in protected virtual protected virtual if foreach in protected protected lock = foreach in decl Type protected internal virtual protected internal virtual lock if && == decl_stmt System.Type = foreach in = foreach in foreach in = if > if ! return int private private decl_stmt int = foreach in if == ++ return protected internal virtual protected internal virtual new < new < protected internal virtual protected internal virtual < < = = = new < foreach in = = new < foreach in = new < foreach in public override public override lock return string IIntroductionAdvisor private private decl_stmt string = foreach in decl_stmt Spring.Aop.IIntroductionAdvisor = if == if != else else call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() call IIntroductionAdvisor.Advice() = string private private decl_stmt string = foreach in = protected static protected static if == throw new return is :