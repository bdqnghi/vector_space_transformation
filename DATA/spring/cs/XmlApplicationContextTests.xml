Spring.Context.Support System using NUnit.Framework using Spring.Core using Spring.Objects using Spring.Objects.Factory using Spring.Objects.Factory.Config using Spring.Objects.Factory.Xml using class attribute Spring.Context.Support.XmlApplicationContextTests string XmlApplicationContext = public = public decl_stmt string = decl_stmt Spring.Context.Support.XmlApplicationContext = new SPRNET1231FactoryObject public public decl_stmt SPRNET1231FactoryObject = public public ++ return new + XmlApplicationContext NoSuchObjectDefinitionException public public try decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() catch decl_stmt Spring.Objects.Factory.NoSuchObjectDefinitionException = as typeof public typeof public new XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() XmlApplicationContext Service public public decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() decl_stmt Spring.Context.Support.Service = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.Refresh() call XmlApplicationContext.Refresh() call XmlApplicationContext.Refresh() call XmlApplicationContext.Refresh() call XmlApplicationContext.Refresh() = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() XmlApplicationContext public public try decl_stmt Spring.Context.Support.XmlApplicationContext = new catch typeof != - != - XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() string XmlApplicationContext typeof public typeof public decl_stmt Spring.Context.Support.XmlApplicationContext = new decl_stmt string = call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.ContainsObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() XmlApplicationContext LogFactoryObject public public decl_stmt Spring.Context.Support.XmlApplicationContext = new decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = IApplicationContext public public = = decl_stmt Spring.Context.IApplicationContext = new call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() call IApplicationContext.ContainsObject() object TestObject XmlApplicationContext TestObject string public public decl_stmt string const const = decl_stmt Spring.Context.Support.XmlApplicationContext = new new decl_stmt object = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() is decl_stmt Spring.Data.NHibernate.TestObject = as decl_stmt Spring.Data.NHibernate.TestObject = new call XmlApplicationContext.ConfigureObject() call XmlApplicationContext.ConfigureObject() call XmlApplicationContext.ConfigureObject() call XmlApplicationContext.ConfigureObject() call XmlApplicationContext.ConfigureObject() IConfigurableApplicationContext ContextListenerObject IApplicationContext public public decl_stmt Spring.Context.IApplicationContext = new decl_stmt Spring.Context.IConfigurableApplicationContext = as decl_stmt Spring.Context.ContextListenerObject using = as string DestroyTester DisposeTester IApplicationContext public public decl_stmt string = typeof decl_stmt Spring.Context.IApplicationContext = new decl_stmt DestroyTester = call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() decl_stmt DisposeTester = call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() GenericApplicationContext XmlObjectDefinitionReader public public decl_stmt Spring.Context.Support.GenericApplicationContext = new decl_stmt Spring.Objects.Factory.Xml.XmlObjectDefinitionReader = new call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Xml.XmlObjectDefinitionReader.LoadObjectDefinitions(IResource) call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.ContainsObject() call GenericApplicationContext.Dispose() call GenericApplicationContext.Dispose() call GenericApplicationContext.Dispose() call GenericApplicationContext.Dispose() call GenericApplicationContext.Dispose() GenericApplicationContext IApplicationContext public public decl_stmt Spring.Context.IApplicationContext = new decl_stmt Spring.Context.Support.GenericApplicationContext = new = new return public public if throw new = return public public if throw new = return = public public return public public return return = public public