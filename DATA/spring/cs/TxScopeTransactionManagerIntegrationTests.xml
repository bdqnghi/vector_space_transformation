Spring.Data.Core NUnit.Framework using Rhino.Mocks using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.Core.TxScopeTransactionManagerIntegrationTests MockRepository public public = new public public == TransactionTemplate TxScopeTransactionManager public public decl_stmt Spring.Data.Core.TxScopeTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) public public return TransactionTemplate TxScopeTransactionManager public public decl_stmt Spring.Data.Core.TxScopeTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) public public return TransactionTemplate TxScopeTransactionManager ITransactionSynchronization public public decl_stmt Spring.Transaction.Support.ITransactionSynchronization = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof call ITransactionSynchronization.BeforeCompletion() call ITransactionSynchronization.BeforeCompletion() call ITransactionSynchronization.BeforeCompletion() call ITransactionSynchronization.BeforeCompletion() call ITransactionSynchronization.BeforeCompletion() call Spring.Transaction.Support.ITransactionSynchronization.AfterCompletion(TransactionSynchronizationStatus) call Spring.Transaction.Support.ITransactionSynchronization.AfterCompletion(TransactionSynchronizationStatus) call Spring.Transaction.Support.ITransactionSynchronization.AfterCompletion(TransactionSynchronizationStatus) call Spring.Transaction.Support.ITransactionSynchronization.AfterCompletion(TransactionSynchronizationStatus) call Spring.Transaction.Support.ITransactionSynchronization.AfterCompletion(TransactionSynchronizationStatus) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.TxScopeTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) return call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()