Spring.Core.TypeResolution System.Text.RegularExpressions using Spring.Util using class Spring.Core.TypeResolution.GenericArgumentsHolder char Regex string Regex char char char string string Regex decl string char return return return != && > if == return foreach in if > return return public public return return != public public if == return return string Group bool Match string string decl string private private if == - && == - = = return = decl_stmt bool = > - decl_stmt System.IO.Compression.Match = call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) : call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) call System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions) if == || ! = = return decl_stmt MS.Internal.Xml.XPath.Group = = decl_stmt string = decl_stmt string = if > && call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() > - decl_stmt string = decl_stmt string = if == && - == = = + - = + = + + + decl string string private static private static decl_stmt string = for = < ++ decl_stmt string = if > && == = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - return