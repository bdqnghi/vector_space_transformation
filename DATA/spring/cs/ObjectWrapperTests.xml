Spring.Objects System using System.Collections using System.Collections.Generic using System.Collections.Specialized using System.ComponentModel using System.Globalization using System.IO using System.Reflection using System.Runtime.CompilerServices using Common.Logging using Common.Logging.Simple using NUnit.Framework using Spring.Collections using Spring.Core using Spring.Core.TypeConversion using Spring.Objects.Factory using Spring.Util using class attribute Spring.Objects.ObjectWrapperTests public public = new return return return return string = return string return = + + + + return return string = public override public override if == throw new return return return = return string = return = return public override public override if == typeof string return return public override public override if is string return + return public override public override if == typeof return return public override public override if is return + as + return public override public override if == typeof string return return public override public override if is string return new string return return = if == throw new return = public public throw return = = = private private return new private private return new ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = new call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() string Honey ObjectWrapper public public decl_stmt ObjectWrapper = decl_stmt Honey = new new = decl_stmt string = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() AltPerson Person IList ObjectWrapper string public public decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) decl_stmt Spring.IocQuickStart.AppContext.Person = new decl_stmt ObjectWrapper = = decl_stmt string = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) decl_stmt AltPerson = new = = = string call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() Honey ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = decl_stmt Honey = new new = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() typeof public typeof public typeof public typeof public typeof public typeof public ObjectWrapper Type public public decl_stmt ObjectWrapper = new decl_stmt System.Type = call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() typeof string ObjectWrapper Type public public decl_stmt ObjectWrapper = new decl_stmt System.Type = call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() typeof TestObject ObjectWrapper Type public public decl_stmt Spring.Data.NHibernate.TestObject = new = new decl_stmt ObjectWrapper = decl_stmt System.Type = call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() call ObjectWrapper.GetPropertyType() typeof int decl Honey ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = decl_stmt Honey = new new new = new call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() TestObject ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = decl_stmt Spring.Data.NHibernate.TestObject = new = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() TestObject ObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = = new call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() Honey ObjectWrapper public public decl_stmt Honey = new new decl_stmt ObjectWrapper = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() typeof public typeof public new object typeof public typeof public new typeof typeof public typeof public new typeof IObjectWrapper public public decl_stmt Spring.Objects.IObjectWrapper = typeof string TestObject string IObjectWrapper public public decl_stmt string = decl_stmt string = decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) GetterObject IObjectWrapper public public decl_stmt GetterObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() call GetterObject.Name() NoRead ObjectWrapper typeof public typeof public decl_stmt NoRead = new decl_stmt ObjectWrapper = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() ObjectWrapper TestObject typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new = decl_stmt ObjectWrapper = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() int TestObject IObjectWrapper string public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt int = decl_stmt string = = = decl_stmt Spring.Objects.IObjectWrapper = call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) new call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call TestObject.Age() call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() MutablePropertyValues string IObjectWrapper string TestObject int public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt string = decl_stmt int = decl_stmt string = decl_stmt Spring.Objects.IObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() == String string TestObject IObjectWrapper int public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt System.String = decl_stmt int = decl_stmt string = decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() call TestObject.Touchy() == string MutablePropertyValues TestObject IObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt string = try decl_stmt Spring.Objects.IObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) call Spring.Objects.IObjectWrapper.SetPropertyValues(IPropertyValues,bool) catch == call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() call TestObject.Name() == catch + TestObject IObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = typeof string new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new IndexedTestObject IObjectWrapper public public decl_stmt Spring.Objects.IndexedTestObject = new decl_stmt Spring.Objects.IObjectWrapper = typeof new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new PrimitiveArrayObject IObjectWrapper public public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new PrimitiveArrayObject IObjectWrapper public public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject object int int ObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt int = decl_stmt ObjectWrapper = = decl_stmt object = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() is decl_stmt int = int == TestObject TestObject IObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = = decl_stmt Spring.Data.NHibernate.TestObject = new = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) == == ThrowsException TestObject ObjectWrapper public public decl_stmt ThrowsException = new decl_stmt ObjectWrapper = decl_stmt Spring.Data.NHibernate.TestObject = new = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() == TestObject IObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject ObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() string TestObject IObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = decl_stmt string = string call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) string TestObject IObjectWrapper string public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = decl_stmt string const const = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new decl_stmt string = string call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) TestObject decl string IObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = decl_stmt string = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) TestObject decl string IObjectWrapper decl string public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = decl_stmt string = new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new decl_stmt string = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) int ITestObject ITestObject IObjectWrapper ITestObject int public public decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new = = decl_stmt Spring.Objects.IObjectWrapper = decl_stmt int = int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) == decl_stmt int = int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) == decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) == TestObject typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new = new ITestObject ITestObject IObjectWrapper public public decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ITestObject ITestObject IObjectWrapper public public decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject IObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject IObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject IObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ITestObject ITestObject IObjectWrapper public public decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) IObjectWrapper PropsTest public public decl_stmt PropsTest = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new == == && == && == && == call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new == == && == && == && == call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) == == call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) new == == TestObject TestObject ObjectWrapper public public decl_stmt ObjectWrapper = decl_stmt Spring.Data.NHibernate.TestObject = new = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() decl_stmt Spring.Data.NHibernate.TestObject = new = call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() TestObject TestObject IObjectWrapper public public decl_stmt Spring.Objects.IObjectWrapper = decl_stmt Spring.Data.NHibernate.TestObject = new = new = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) decl_stmt Spring.Data.NHibernate.TestObject = new = new = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) ObjectWrapper PropsTest public public decl_stmt PropsTest = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() == && && && return = ObjectWrapper DateTimeTestObject public public decl_stmt DateTimeTestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() return = ObjectWrapper CultureTestObject public public decl_stmt CultureTestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() return = ObjectWrapper URITestObject public public decl_stmt URITestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() PrimitiveArrayObject IObjectWrapper public public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) PrimitiveArrayObject IObjectWrapper typeof public typeof public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) PrimitiveArrayObject IObjectWrapper public public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) PrimitiveArrayObject IObjectWrapper typeof public typeof public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) PrimitiveArrayObject IObjectWrapper typeof public typeof public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) PrimitiveArrayObject IObjectWrapper typeof public typeof public decl_stmt PrimitiveArrayObject = new decl_stmt Spring.Objects.IObjectWrapper = = new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) return = return = ListTestObject IObjectWrapper public public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) ListTestObject IObjectWrapper public public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) ListTestObject IObjectWrapper public public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ListTestObject IObjectWrapper public public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) ListTestObject IObjectWrapper typeof public typeof public decl_stmt ListTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) return = DictionaryTestObject IObjectWrapper public public decl_stmt DictionaryTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() call DictionaryTestObject.Dictionary() string call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) DictionaryTestObject IObjectWrapper public public decl_stmt DictionaryTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) DictionaryTestObject IObjectWrapper public public decl_stmt DictionaryTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) TestObject IDictionary ObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) call Spring.Data.NHibernate.TestObject.AddPeriodicElement(string,string) decl_stmt ObjectWrapper = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() return = return = TestObject ObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) call Spring.Data.NHibernate.TestObject.AddComputerName(string) decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() new new SetTestObject IObjectWrapper typeof public typeof public decl_stmt SetTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) SetTestObject IObjectWrapper typeof public typeof public decl_stmt SetTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) SetTestObject IObjectWrapper typeof public typeof public decl_stmt SetTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) SetTestObject object IObjectWrapper typeof public typeof public decl_stmt SetTestObject = new decl_stmt Spring.Objects.IObjectWrapper = = new new decl_stmt object = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) int call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) return = ObjectWrapper EnumTestObject public public decl_stmt EnumTestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() call ObjectWrapper.GetPropertyValue() ObjectWithTypeProperty IObjectWrapper public public decl_stmt ObjectWithTypeProperty = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) call Spring.Objects.IObjectWrapper.SetPropertyValue(PropertyValue) typeof TestObject IObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Objects.IObjectWrapper = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) TestObject ObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new = decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() TestObject MutablePropertyValues ObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() TestObject MutablePropertyValues ObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() TestObject MutablePropertyValues ObjectWrapper typeof public typeof public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() TestObject MutablePropertyValues ObjectWrapper public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() call ObjectWrapper.SetPropertyValues() decl string TestObject ObjectWrapper public public decl_stmt string = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt ObjectWrapper = call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() call ObjectWrapper.SetPropertyValue() for = < ++ string ObjectWrapper public public decl_stmt ObjectWrapper = call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() >= = new decl_stmt string = call ObjectWrapper.GetType() call ObjectWrapper.GetType() call ObjectWrapper.GetType() call ObjectWrapper.GetType() call ObjectWrapper.GetType() call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() call ObjectWrapper.ToString() ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = new call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = new call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() ObjectWrapper typeof public typeof public decl_stmt ObjectWrapper = new call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() PropertyInfo ObjectWrapper RealNestedTestObject public public decl_stmt RealNestedTestObject = new = new = new decl_stmt ObjectWrapper = decl_stmt System.Reflection.PropertyInfo = call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() ObjectWrapper = public = public decl_stmt ObjectWrapper = new call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo() call ObjectWrapper.GetPropertyInfo()