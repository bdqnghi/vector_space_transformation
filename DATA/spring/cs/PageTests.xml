Spring.Web.UI System using System.Collections using System.Globalization using System.Threading using System.Web using NUnit.Framework using Rhino.Mocks using Spring.Globalization using Spring.Globalization.Resolvers using Spring.Objects using Spring.TestSupport using Spring.Validation using Spring.Web.Support using class attribute Spring.Web.UI.PageTests super super TestWebContextTests protected override protected override return protected override protected override = return Page public public decl_stmt Spring.Web.UI.Page = new MockValidator Page public public decl_stmt Spring.Web.UI.Page decl_stmt MockValidator = new = new = call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) = new = new call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Page.Validators() call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) bool Contact Page decl IValidator public public decl_stmt Spring.Web.UI.Page = new decl_stmt Spring.Validation.IValidator = new new new decl_stmt Spring.AopQuickStart.Contact = new decl_stmt bool = call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) = new = call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) = new = call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) call Spring.Web.UI.Page.Validate(object,IValidator) TestPage public public decl_stmt Spring.TestSupport.TestPage = new typeof call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() call TestPage.CultureResolver() TestPage public public decl_stmt Spring.TestSupport.TestPage = new = new = new call Spring.TestSupport.TestPage.InitializeCulture() call Spring.TestSupport.TestPage.InitializeCulture() call Spring.TestSupport.TestPage.InitializeCulture() call Spring.TestSupport.TestPage.InitializeCulture() call Spring.TestSupport.TestPage.InitializeCulture() string string string TestPage public public decl_stmt string = decl_stmt Spring.TestSupport.TestPage = new try call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) catch decl_stmt string = decl_stmt string = MockRepository TestPage Result public public decl_stmt MockRepository = new decl_stmt Spring.TestSupport.TestPage = new decl_stmt Spring.Web.Support.Result = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call Spring.Web.Support.Result.Navigate(object) call Spring.Web.Support.Result.Navigate(object) call Spring.Web.Support.Result.Navigate(object) call Spring.Web.Support.Result.Navigate(object) call Spring.Web.Support.Result.Navigate(object) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call TestPage.Results() call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call Spring.TestSupport.TestPage.SetResult(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() TestPage typeof public typeof public decl_stmt Spring.TestSupport.TestPage = new = TestPage public public decl_stmt Spring.TestSupport.TestPage = new = new call Spring.TestSupport.TestPage.SaveModelToPersistenceMedium(object) call Spring.TestSupport.TestPage.SaveModelToPersistenceMedium(object) call Spring.TestSupport.TestPage.SaveModelToPersistenceMedium(object) call Spring.TestSupport.TestPage.SaveModelToPersistenceMedium(object) call Spring.TestSupport.TestPage.SaveModelToPersistenceMedium(object) call Spring.TestSupport.TestPage.LoadModelFromPersistenceMedium() call Spring.TestSupport.TestPage.LoadModelFromPersistenceMedium() call Spring.TestSupport.TestPage.LoadModelFromPersistenceMedium() call Spring.TestSupport.TestPage.LoadModelFromPersistenceMedium() call Spring.TestSupport.TestPage.LoadModelFromPersistenceMedium()