Spring.Messaging.Core System using System.Messaging using Spring.Context using Spring.Messaging.Support.Converters using Spring.Objects.Factory using Spring.Util using Common.Logging using class Spring.Messaging.Core.MessageQueueTemplate super super IMessageQueueOperations super IInitializingObject super IApplicationContextAware string IMessageQueueFactory string ILog IConfigurableApplicationContext TimeSpan MessageQueueMetadataCache string return = return = return = return if == throw new return call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() return = return = return var decl_stmt var = as if == throw new = DefaultMessageQueueFactory public public if == decl_stmt Spring.Messaging.Core.DefaultMessageQueueFactory = new = = if == = protected virtual protected virtual if == if call IConfigurableApplicationContext.ContainsObject() call IConfigurableApplicationContext.ContainsObject() call IConfigurableApplicationContext.ContainsObject() call IConfigurableApplicationContext.ContainsObject() call IConfigurableApplicationContext.ContainsObject() = call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() as else = new if != = call MessageQueueMetadataCache.AfterPropertiesSet() call MessageQueueMetadataCache.AfterPropertiesSet() call MessageQueueMetadataCache.AfterPropertiesSet() call MessageQueueMetadataCache.AfterPropertiesSet() call MessageQueueMetadataCache.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueMetadataCache.Initialize() call Spring.Messaging.Core.MessageQueueMetadataCache.Initialize() call Spring.Messaging.Core.MessageQueueMetadataCache.Initialize() call Spring.Messaging.Core.MessageQueueMetadataCache.Initialize() call Spring.Messaging.Core.MessageQueueMetadataCache.Initialize() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() call IConfigurableApplicationContext.ObjectFactory() else region region if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + endregion public public public public Message public public decl_stmt System.ServiceModel.Channels.Message = Message Message public public decl_stmt System.ServiceModel.Channels.Message = decl_stmt System.ServiceModel.Channels.Message = Message MessageQueue public public decl_stmt MessageQueue = decl_stmt System.ServiceModel.Channels.Message = call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() return Message MessageQueue public public decl_stmt MessageQueue = decl_stmt System.ServiceModel.Channels.Message = call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() call MessageQueue.Receive() return public public return public public return public public public public public virtual public virtual protected virtual protected virtual if == else MessageQueueTransaction MessageQueueMetadata protected virtual protected virtual decl_stmt MessageQueueTransaction = if != decl_stmt Spring.Messaging.Core.MessageQueueMetadata = call Spring.Messaging.Core.MessageQueueMetadataCache.Get(string) call Spring.Messaging.Core.MessageQueueMetadataCache.Get(string) call Spring.Messaging.Core.MessageQueueMetadataCache.Get(string) call Spring.Messaging.Core.MessageQueueMetadataCache.Get(string) call Spring.Messaging.Core.MessageQueueMetadataCache.Get(string) if != if if return return else if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + if else protected virtual protected virtual if != if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + else call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + protected virtual protected virtual if != call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + else if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + protected virtual protected virtual protected virtual protected virtual if != return else return protected virtual protected virtual if == throw new