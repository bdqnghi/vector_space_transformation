Spring.Objects.Factory.Config System using System.Collections using NUnit.Framework using Rhino.Mocks using Spring.Objects.Factory.Support using Spring.Objects.Support using class attribute Spring.Objects.Factory.Config.SharedStateAwareProcessorTests SharedStateAwareProcessor public public decl_stmt Spring.Objects.Factory.Config.SharedStateAwareProcessor = new = new new new = new try = catch try = new catch try = new catch try = new catch try = new new catch try = new new catch SharedStateAwareProcessor object public public decl_stmt Spring.Objects.Factory.Config.SharedStateAwareProcessor = new decl_stmt object = call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() MockRepository DefaultListableObjectFactory ISharedStateAware ISharedStateFactory SharedStateAwareProcessor public public decl_stmt Spring.Objects.Factory.Support.DefaultListableObjectFactory = new decl_stmt MockRepository = new decl_stmt Spring.Objects.ISharedStateFactory = < decl_stmt Spring.Objects.ISharedStateAware = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof decl_stmt Spring.Objects.Factory.Config.SharedStateAwareProcessor = new = new call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() using new using call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() IDictionary DefaultListableObjectFactory ISharedStateFactory SharedStateAwareProcessor MockRepository ISharedStateAware ISharedStateFactory ISharedStateFactory ISharedStateFactory public public decl_stmt Spring.Objects.Factory.Support.DefaultListableObjectFactory = new decl_stmt MockRepository = new decl_stmt Spring.Objects.ISharedStateFactory = < decl_stmt Spring.Objects.ISharedStateFactory = < decl_stmt Spring.Objects.ISharedStateFactory = < decl_stmt Spring.Objects.ISharedStateFactory = < decl_stmt System.Collections.Generic.IDictionary = new decl_stmt Spring.Objects.Factory.Config.SharedStateAwareProcessor = new = new call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() call DefaultListableObjectFactory.RegisterSingleton() decl_stmt Spring.Objects.ISharedStateAware = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof using call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call ISharedStateFactory.CanProvideState() call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) call Spring.Objects.ISharedStateFactory.GetSharedStateFor(object,string) = using call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() call SharedStateAwareProcessor.PostProcessBeforeInitialization() private static private static return private static private static return