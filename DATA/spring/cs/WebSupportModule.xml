Spring.Context.Support System using System.Globalization using System.Reflection using System.Security using System.Web using System.Web.Caching using System.Web.Routing using System.Web.SessionState using System.Web.UI using Common.Logging using Spring.Core.IO using Spring.Core.TypeConversion using Spring.Core.TypeResolution using Spring.Expressions using Spring.Reflection.Dynamic using Spring.Threading using Spring.Util using Spring.Web.Support using class Spring.Context.Support.WebSupportModule super super IHttpModule int string SafeField bool CacheItemRemovedCallback ILog FieldInfo IConfigurableApplicationContext HttpModuleCollection bool public virtual public virtual lock typeof call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() if ! decl_stmt System.Web.HttpModuleCollection = foreach in if is = += += decl_stmt bool = if != = bool call SafeField.GetValue() call SafeField.GetValue() call SafeField.GetValue() call SafeField.GetValue() call SafeField.GetValue() call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) try decl_stmt Spring.Context.IConfigurableApplicationContext = as if == throw new finally if != call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) call Spring.Reflection.Dynamic.SafeField.SetValue(object,object) IConfigurableApplicationContext HttpApplication string Page HandlerConfigurationMetaData private private decl_stmt System.Web.HttpApplication = decl_stmt HandlerConfigurationMetaData = if != if else decl_stmt Spring.Web.UI.Page = as if ! return decl_stmt Spring.Context.IConfigurableApplicationContext = decl_stmt string = endif private static private static return != && != && != public static public static if != call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() return else call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() return private static private static new private static private static if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() = else call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() = = return public virtual public virtual HttpSessionState string private static private static call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + try decl_stmt System.Web.SessionState.HttpSessionState = catch decl_stmt string = if != call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() else call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() call ILog.Fatal() finally if != object private static private static decl_stmt object = if != && call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() == call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() = new = int HttpSessionStateContainer SessionStateMode HttpCookieMode int HttpStaticObjectsCollection ISessionStateItemCollection string private static private static decl_stmt string = decl_stmt System.Web.SessionState.ISessionStateItemCollection = decl_stmt System.Web.HttpStaticObjectsCollection = decl_stmt int = int typeof decl_stmt HttpCookieMode = decl_stmt SessionStateMode = decl_stmt System.Web.SessionState.HttpSessionStateContainer = new return typeof | new