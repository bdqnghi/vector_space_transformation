Spring.Data.Generic System using System.Collections using System.Collections.Generic using System.Data using System.Data.Common using Common.Logging using Spring.Dao using Spring.Dao.Support.Generic using Spring.Data.Common using Spring.Data.Core using Spring.Data.Support using Spring.Util using class Spring.Data.Generic.AdoTemplate super super AdoAccessor super IAdoOperations decl Core ILog return = return = return = return = return return = = T IDbCommand ConnectionTxPair DbCommand public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbCommand = try = = = decl_stmt System.Data.Common.DbCommand = as if != decl_stmt T = return else throw new catch = = if throw else throw finally T string IDbCommand ConnectionTxPair DbCommand public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbCommand = try = = = decl_stmt System.Data.Common.DbCommand = as if != decl_stmt T = return else throw new catch decl_stmt string = = = if throw else throw finally IDbCommand ConnectionTxPair T public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbCommand = try = = = decl_stmt T = return catch = = if throw else throw finally string IDbCommand ConnectionTxPair T public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbCommand = try = = = decl_stmt T = return catch decl_stmt string = = = if throw else throw finally IDbCommand ConnectionTxPair T public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbCommand = try = = = decl_stmt T = return catch = = if throw else throw finally ConnectionTxPair IDbDataAdapter T public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbDataAdapter = try = = = = decl_stmt T = return catch = throw finally ConnectionTxPair IDbDataAdapter T public virtual public virtual public virtual < < decl_stmt Spring.Data.Support.ConnectionTxPair = decl_stmt System.Data.IDbDataAdapter = try = = = = decl_stmt T = return catch = throw finally public virtual public virtual return call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() public virtual public virtual return call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() public virtual public virtual return call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() public virtual public virtual return call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() public virtual public virtual return call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() call decl Core.ExecuteNonQuery() public virtual public virtual return call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() public virtual public virtual return call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() public virtual public virtual return call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() public virtual public virtual return call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() public virtual public virtual return call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() call decl Core.ExecuteScalar() public virtual public virtual call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() public virtual public virtual call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() public virtual public virtual call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() public virtual public virtual call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() call decl Core.QueryWithRowCallback() public virtual public virtual call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() public virtual public virtual call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() public virtual public virtual call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() public public call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() call decl Core.QueryWithRowCallbackDelegate() public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public < public < public < < < return new < public public public < < if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + return < new < public public public < < return < new < public public public < < return < new < public public public < < return < new < public public public < < return < new < public public public < < if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + return < new < public public public < < return < new < public public public < < return < new < public public public < < return < new < public public public < < return < new < decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return decl IList public public public < < decl_stmt System.Collections.Generic.IList < = return public public public < < return < public public call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() public < public < public < < < return < public public public < < if == throw new return new < public public call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() call decl Core.QueryWithCommandCreator() public < public < public < < < if == throw new return new < public public public < return call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() new < as public public public < return call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() call decl Core.Execute() new < as public override public override call decl Core.AfterPropertiesSet() call decl Core.AfterPropertiesSet() call decl Core.AfterPropertiesSet() call decl Core.AfterPropertiesSet() call decl Core.AfterPropertiesSet() = public override public override return call decl Core.CreateDataReaderWrapper() call decl Core.CreateDataReaderWrapper() call decl Core.CreateDataReaderWrapper() call decl Core.CreateDataReaderWrapper() call decl Core.CreateDataReaderWrapper() public override public override return call decl Core.DeriveParameters() call decl Core.DeriveParameters() call decl Core.DeriveParameters() call decl Core.DeriveParameters() call decl Core.DeriveParameters() return T IDataReader public public decl_stmt System.Data.IDataReader = try = = = decl_stmt T = default if != = else = return finally return IDataReader public public decl_stmt System.Data.IDataReader = try = = if != = if != return else return finally return IDataReader public public decl_stmt System.Data.IDataReader = try = = if != = if != return else return finally decl RowMapperResultSetExtractor IDataReader decl IList public < public < decl_stmt System.Collections.Generic.IList < decl_stmt System.Data.IDataReader = try = decl_stmt Spring.Data.Core.RowMapperResultSetExtractor < = new < = call decl RowMapperResultSetExtractor.ExtractData() call decl RowMapperResultSetExtractor.ExtractData() call decl RowMapperResultSetExtractor.ExtractData() call decl RowMapperResultSetExtractor.ExtractData() call decl RowMapperResultSetExtractor.ExtractData() finally return T IDataReader public public decl_stmt T decl_stmt System.Data.IDataReader = try = = finally return string IRowMapper object IRowCallback IResultSetExtractor public static public static decl_stmt string = if is decl_stmt Spring.Data.Generic.IResultSetExtractor = decl_stmt object = call IResultSetExtractor.ExtractData() call IResultSetExtractor.ExtractData() call IResultSetExtractor.ExtractData() call IResultSetExtractor.ExtractData() call IResultSetExtractor.ExtractData() else if is decl_stmt Spring.Data.Generic.IRowMapper = decl_stmt object = new else if is decl_stmt Spring.Data.IRowCallback = new string decl IRowMapper object IRowCallback decl IResultSetExtractor public static public static < decl_stmt string = if != decl_stmt Spring.Data.Generic.IResultSetExtractor < = decl_stmt T = call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() else if != decl_stmt Spring.Data.Generic.IRowMapper < = decl_stmt object = new < else if != decl_stmt Spring.Data.IRowCallback = new int IDictionary decl NamedResultSetProcessor NamedResultSetProcessor IDataReader public public decl_stmt System.Collections.Generic.IDictionary = new decl_stmt int = decl_stmt System.Data.IDataReader = try = do if == break decl_stmt Spring.Data.Generic.NamedResultSetProcessor < = decl_stmt Spring.Data.Generic.NamedResultSetProcessor = try if == = as < if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + + + continue else = as if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + + + continue catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + continue catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + continue if == else ++ call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() finally return IRowCallback IDictionary int NamedResultSetProcessor decl NamedResultSetProcessor decl NamedResultSetProcessor decl IResultSetExtractor IDataReader string decl IRowMapper object public public decl_stmt System.Collections.Generic.IDictionary = new decl_stmt int = decl_stmt System.Data.IDataReader = try = do if == break decl_stmt Spring.Data.Generic.NamedResultSetProcessor < = decl_stmt Spring.Data.Generic.NamedResultSetProcessor < = decl_stmt Spring.Data.Generic.NamedResultSetProcessor = try if == = as < if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + + + continue else if == = as < if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + + + continue else = as if == call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + + + continue catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + continue catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + continue if == else if == decl_stmt string = if != decl_stmt Spring.Data.Generic.IResultSetExtractor < = decl_stmt U = call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call decl IResultSetExtractor.ExtractData() call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) else if != decl_stmt Spring.Data.Generic.IRowMapper < = decl_stmt object = new < call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) else if != decl_stmt Spring.Data.IRowCallback = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) else ++ call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() call System.Data.IDataReader.NextResult() finally return