Spring.Data.Support System using Common.Logging using Spring.Dao using Spring.Data.Common using class Spring.Data.Support.ErrorCodeExceptionTranslator super super IAdoExceptionTranslator ILog ErrorCodes IAdoExceptionTranslator IDbProvider = = return return = string DataAccessException IAdoExceptionTranslator public virtual public virtual if == = if == = decl_stmt string = decl_stmt DataAccessException = if != return if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + decl_stmt Spring.Data.Support.IAdoExceptionTranslator = if != return return new DataAccessException protected virtual protected virtual decl_stmt DataAccessException = if != return if != if != if >= return new else if >= return new else if >= return new else if >= return new else if >= return new else if >= return new else if >= return new else if >= return new else if >= return new else if >= return new return protected virtual protected virtual return protected virtual protected virtual return + + + + public public return call Spring.Data.Common.IDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.IDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.IDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.IDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.IDbProvider.IsDataAccessException(Exception) String private private if decl_stmt System.String = call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + + + + + + + private private return call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception)