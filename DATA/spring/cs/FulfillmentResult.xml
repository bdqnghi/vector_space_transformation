System using System.IO using log4net.Appender using log4net.Core using log4net.Layout using log4net.Repository using Spring.Northwind.Service using Spring.Web.UI using using LogManager===log4net.LogManager class .FullfillmentResult super super Page IFulfillmentService ICustomerEditController = = PatternLayout decl IAppender ILoggerRepository StringWriter MemoryAppender decl LoggingEvent protected protected decl_stmt ILoggerRepository = decl_stmt IAppender = call ILoggerRepository.GetAppenders() call ILoggerRepository.GetAppenders() call ILoggerRepository.GetAppenders() call ILoggerRepository.GetAppenders() call ILoggerRepository.GetAppenders() decl_stmt MemoryAppender = foreach in if is = as break if != call MemoryAppender.Clear() call MemoryAppender.Clear() call MemoryAppender.Clear() call MemoryAppender.Clear() call MemoryAppender.Clear() call IFulfillmentService.ProcessCustomer() call IFulfillmentService.ProcessCustomer() call IFulfillmentService.ProcessCustomer() call IFulfillmentService.ProcessCustomer() call IFulfillmentService.ProcessCustomer() decl_stmt LoggingEvent = call MemoryAppender.GetEvents() call MemoryAppender.GetEvents() call MemoryAppender.GetEvents() call MemoryAppender.GetEvents() call MemoryAppender.GetEvents() decl_stmt System.IO.StringWriter = new decl_stmt PatternLayout = new foreach in call PatternLayout.Format() call PatternLayout.Format() call PatternLayout.Format() call PatternLayout.Format() call PatternLayout.Format() = call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() call System.IO.StringWriter.ToString() protected protected