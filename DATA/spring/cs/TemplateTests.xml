Spring.Data.NHibernate System using System.Data using log4net using log4net.Config using NHibernate using NUnit.Framework using Spring.Context using Spring.Context.Support using Spring.Data.Common using Spring.Data.Support using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.NHibernate.TemplateTests Type IPlatformTransactionManager IApplicationContext ILog IDbProvider string public public decl_stmt string = = new + + = as = as call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() private static private static using IDbCommand private static private static decl_stmt System.Data.IDbCommand = = call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() ISessionFactory IAdoExceptionTranslator public public decl_stmt ISessionFactory = as template= new new decl_stmt Spring.Data.Support.IAdoExceptionTranslator = template , typeof IAdoExceptionTranslator public public decl_stmt Spring.Data.Support.IAdoExceptionTranslator = new call IAdoExceptionTranslator.Translate() call IAdoExceptionTranslator.Translate() call IAdoExceptionTranslator.Translate() call IAdoExceptionTranslator.Translate() call IAdoExceptionTranslator.Translate() new ITestObjectDao TestObject public public decl_stmt Spring.Data.Generic.ITestObjectDao = decl_stmt Spring.Data.NHibernate.TestObject = new = = call Spring.Data.Generic.ITestObjectDao.Create(string,int) call Spring.Data.Generic.ITestObjectDao.Create(string,int) call Spring.Data.Generic.ITestObjectDao.Create(string,int) call Spring.Data.Generic.ITestObjectDao.Create(string,int) call Spring.Data.Generic.ITestObjectDao.Create(string,int) TestObject ITestObjectDao public public decl_stmt Spring.Data.Generic.ITestObjectDao = decl_stmt Spring.Data.NHibernate.TestObject = call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) ITestObjectDao public public decl_stmt Spring.Data.Generic.ITestObjectDao = ITestObjectDao public public decl_stmt Spring.Data.Generic.ITestObjectDao = TestObject ITestObjectDao public public decl_stmt Spring.Data.Generic.ITestObjectDao = try catch decl_stmt Spring.Data.NHibernate.TestObject = call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) TestObject private static private static decl_stmt Spring.Data.NHibernate.TestObject = new = = TestObject TestObject TestObject TestObject private static private static decl_stmt Spring.Data.NHibernate.TestObject = new = = decl_stmt Spring.Data.NHibernate.TestObject = = decl_stmt Spring.Data.NHibernate.TestObject = decl_stmt Spring.Data.NHibernate.TestObject = + call Spring.Data.NHibernate.TestObject.ToString() call Spring.Data.NHibernate.TestObject.ToString() call Spring.Data.NHibernate.TestObject.ToString() call Spring.Data.NHibernate.TestObject.ToString() call Spring.Data.NHibernate.TestObject.ToString() TestObject TransactionTemplate ITestObjectDao object public public decl_stmt Spring.Data.Generic.ITestObjectDao = decl_stmt Spring.Transaction.Support.TransactionTemplate = new decl_stmt object = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new decl_stmt Spring.Data.NHibernate.TestObject = as ITransactionStatus TestObject ITestObjectDao DefaultTransactionDefinition public public decl_stmt Spring.Transaction.Support.DefaultTransactionDefinition = new = decl_stmt Spring.Transaction.ITransactionStatus = call IPlatformTransactionManager.GetTransaction() call IPlatformTransactionManager.GetTransaction() call IPlatformTransactionManager.GetTransaction() call IPlatformTransactionManager.GetTransaction() call IPlatformTransactionManager.GetTransaction() decl_stmt Spring.Data.Generic.ITestObjectDao = decl_stmt Spring.Data.NHibernate.TestObject try = call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) call Spring.Data.Generic.ITestObjectDao.FindByName(string) catch call Spring.Transaction.IPlatformTransactionManager.Rollback(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Rollback(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Rollback(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Rollback(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Rollback(ITransactionStatus) throw call Spring.Transaction.IPlatformTransactionManager.Commit(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Commit(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Commit(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Commit(ITransactionStatus) call Spring.Transaction.IPlatformTransactionManager.Commit(ITransactionStatus) public public return