Spring.Data.Objects.Generic System.Collections using System.Data using Spring.Collections using Spring.Dao using Spring.Data.Common using Spring.Data.Generic using Spring.Data.Support using class Spring.Data.Objects.Generic.StoredProcedure super super AdoOperation IList bool public public IDataParameter decl IDataParameter public public decl_stmt System.Data.IDataParameter = for = < ++ decl_stmt System.Data.IDataParameter = = public public if throw new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new public public if throw new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new public public if throw new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new public public public < < if throw new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new < public public public < < if throw new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new < protected virtual protected virtual params params params return protected virtual protected virtual params params params return decl NamedResultSetProcessor IDictionary public < public < public < < params params params if == throw new decl_stmt Spring.Data.Generic.NamedResultSetProcessor < = as < if == throw new if == throw new decl_stmt System.Collections.Generic.IDictionary = < return as < protected virtual protected virtual protected virtual < params params params return < protected virtual protected virtual protected virtual < params params params return < protected virtual protected virtual return protected virtual protected virtual return protected virtual protected virtual protected virtual < return < protected virtual protected virtual protected virtual < return < protected override protected override if return == else return