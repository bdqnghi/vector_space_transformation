Spring.Context.Attributes System using NUnit.Framework using Spring.Context.Support using Spring.Objects.Factory using Spring.Objects.Factory.Parsing using Spring.Objects.Factory.Support using class attribute Spring.Context.Attributes.FailAssemblyObjectDefinitionScannerTests CodeConfigApplicationContext AssemblyObjectDefinitionScanner public public = new = new private private call AssemblyObjectDefinitionScanner.WithIncludeFilter() call AssemblyObjectDefinitionScanner.WithIncludeFilter() call AssemblyObjectDefinitionScanner.WithIncludeFilter() call AssemblyObjectDefinitionScanner.WithIncludeFilter() call AssemblyObjectDefinitionScanner.WithIncludeFilter() == call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) public public typeof call CodeConfigApplicationContext.GetObjectNamesForType() call CodeConfigApplicationContext.GetObjectNamesForType() call CodeConfigApplicationContext.GetObjectNamesForType() call CodeConfigApplicationContext.GetObjectNamesForType() call CodeConfigApplicationContext.GetObjectNamesForType() typeof public public typeof < public public typeof < public public typeof < public public typeof < public public typeof < public public typeof try call CodeConfigApplicationContext.Refresh() call CodeConfigApplicationContext.Refresh() call CodeConfigApplicationContext.Refresh() call CodeConfigApplicationContext.Refresh() call CodeConfigApplicationContext.Refresh() catch typeof