Spring.Data System using System.Data using System.Data.SqlClient using System.Transactions using NUnit.Framework using Spring.Data.Common using Spring.Data.Core using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.NestedTxScopeTests TransactionTemplate TransactionTemplate IPlatformTransactionManager AdoTemplate IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Transaction.IPlatformTransactionManager = new decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt Spring.Transaction.Support.TransactionTemplate = new = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) if != + + call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) decl_stmt Spring.Transaction.Support.TransactionTemplate = new = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) if != + + call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) return if != + return public public string SqlCommand private private decl_stmt string = using = new + using = new = decl_stmt System.Data.SqlClient.SqlCommand = new call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() + SqlCommand string bool private private decl_stmt bool = decl_stmt string = using = new + using = new = decl_stmt System.Data.SqlClient.SqlCommand = new call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() if else public public using = new SqlCommand bool string string private private decl_stmt string = using = new = decl_stmt System.Data.SqlClient.SqlCommand = new call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() call System.Data.SqlClient.SqlCommand.ExecuteNonQuery() region region + + decl_stmt string = decl_stmt bool = endregion