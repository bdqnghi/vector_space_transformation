Spring.Objects.Factory System using Spring.Objects.Factory.Config using class Spring.Objects.Factory.DummyFactory super super IFactoryObject super IObjectFactoryAware super IObjectNameAware super IInitializingObject super IDisposable bool bool string String IAutowireCapableObjectFactory bool TestObject ITestObject bool return return return = return = public static public static = return call TestObject.GetType() call TestObject.GetType() call TestObject.GetType() call TestObject.GetType() call TestObject.GetType() TestObject public public if return else decl_stmt Spring.Data.NHibernate.TestObject = new + if != call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) = return return = return = call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) call Spring.Objects.Factory.Config.IAutowireCapableObjectFactory.ApplyObjectPostProcessorsBeforeInitialization(object,string) return = public public if throw new = public public if != =