Spring.Objects.Factory.Support System using System.Reflection using NUnit.Framework using Rhino.Mocks using class attribute Spring.Objects.Factory.Support.LookupMethodReplacerTests MockRepository public public = new IObjectFactory typeof public typeof public decl_stmt Spring.Objects.Factory.IObjectFactory = < new var typeof public typeof public decl_stmt var = < new LookupMethodOverride LookupMethodReplacer var MethodOverrides object string object var MethodInfo public public decl_stmt var = < decl_stmt var = < decl_stmt object = new decl_stmt string const const = call var.GetObject() call var.GetObject() call var.GetObject() call var.GetObject() call var.GetObject() decl_stmt Spring.Objects.Factory.Support.LookupMethodOverride = new decl_stmt Spring.Objects.Factory.Support.MethodOverrides = new call MethodOverrides.Add() call MethodOverrides.Add() call MethodOverrides.Add() call MethodOverrides.Add() call MethodOverrides.Add() decl_stmt Spring.Objects.Factory.Support.LookupMethodReplacer = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt System.Reflection.MethodInfo = decl_stmt object = call LookupMethodReplacer.Implement() call LookupMethodReplacer.Implement() call LookupMethodReplacer.Implement() call LookupMethodReplacer.Implement() call LookupMethodReplacer.Implement() new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()