Spring.Expressions System using System.Collections using System.Collections.Generic using System.Diagnostics using System.EnterpriseServices using System.Globalization using System.IO using System.Reflection using System.Runtime.Serialization using System.Runtime.Serialization.Formatters.Binary using System.Runtime.Serialization.Formatters.Soap using System.Text using System.Text.RegularExpressions using System.Threading using System.Web.Services using NUnit.Framework using Spring.Collections using Spring.Context using Spring.Context.Support using Spring.Core using Spring.Core.TypeResolution using Spring.Expressions using Spring.Expressions.Parser.antlr using Spring.Expressions.Parser.antlr.collections using Spring.Expressions.Processors using Spring.Objects using Spring.Objects.Factory using Spring.Threading using Spring.Util using Spring.Expressions.Foo class attribute Spring.Expressions.ExpressionEvaluatorTests Inventor DateTime Society Inventor object public override public override decl_stmt object = public public = new new = new = = new new = new = = = new call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() = = new typeof public public return protected override protected override throw new decl Type BinaryFormatter Type IExpression public public decl_stmt System.Type = typeof decl_stmt System.Runtime.Serialization.Formatters.Binary.BinaryFormatter = new for = < ++ decl_stmt System.Type = if != typeof && typeof && ! decl_stmt Spring.Expressions.IExpression = = = SerializationTestExpression SerializationTestExpression public public decl_stmt SerializationTestExpression = new decl_stmt SerializationTestExpression = IExpression public public decl_stmt Spring.Expressions.IExpression = new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) = new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) BinaryFormatter decl byte private static private static decl_stmt byte decl_stmt System.Runtime.Serialization.Formatters.Binary.BinaryFormatter = new using = new call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream,object,bool) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream,object,bool) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream,object,bool) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream,object,bool) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream,object,bool) = using = new = call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream,HeaderHandler) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream,HeaderHandler) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream,HeaderHandler) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream,HeaderHandler) call System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream,HeaderHandler) return string SoapFormatter decl byte Stream private static private static decl_stmt string decl_stmt SoapFormatter = new using = new call SoapFormatter.Serialize() call SoapFormatter.Serialize() call SoapFormatter.Serialize() call SoapFormatter.Serialize() call SoapFormatter.Serialize() = decl_stmt byte = new int = using = new decl_stmt byte = decl_stmt System.IO.Stream = new = call SoapFormatter.Deserialize() call SoapFormatter.Deserialize() call SoapFormatter.Deserialize() call SoapFormatter.Deserialize() call SoapFormatter.Deserialize() return object public public decl_stmt object = object public public decl_stmt object = object public public decl_stmt object = object dynamic = public = public decl_stmt dynamic = new = decl_stmt object = dynamic = public = public try decl_stmt dynamic = new catch string = public = public decl_stmt string = string object decl Dictionary = public = public decl_stmt System.Collections.Generic.Dictionary < = new < = decl_stmt object = object decl Dictionary = public = public decl_stmt System.Collections.Generic.Dictionary < = new < = decl_stmt object = public public try catch + + typeof public typeof public typeof public typeof public DateTime public public decl_stmt DateTime = typeof public typeof public public public bool bool public public public public object object public public decl_stmt object = is + decl_stmt object = is IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) object object object IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) decl_stmt object = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) decl_stmt object = decl_stmt object = is is is + + bool bool bool public public bool bool IExpression public public decl_stmt Spring.Expressions.IExpression = new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new new new new public public new public public new ShadowingTestsMostSpezializedClass public public decl_stmt ShadowingTestsMostSpezializedClass = new = = new = new = try catch = new try catch Foo Bar IExpression decl Dictionary public public typeof decl_stmt System.Collections.Generic.Dictionary < = new < = new decl_stmt ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod001.anonmethod001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod002.anonmethod002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod003.anonmethod003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod004.anonmethod004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod004b.anonmethod004b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod005.anonmethod005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod006.anonmethod006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod006b.anonmethod006b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.anonmethod008.anonmethod008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.argument001.argument001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.argument002.argument002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array001.array001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array002.array002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array003.array003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array004.array004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array005.array005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array006.array006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array007.array007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array008.array008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.array010.array010.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit001.arrayinit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit002.arrayinit002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit003.arrayinit003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit004.arrayinit004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit005.arrayinit005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit006.arrayinit006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.arrayinit007.arrayinit007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing001.boxing001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing002.boxing002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing003.boxing003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing004.boxing004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing005.boxing005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.boxing006.boxing006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.cast002.cast002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit001.collectioninit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit002.collectioninit002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit003.collectioninit003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit004.collectioninit004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit005.collectioninit005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit006.collectioninit006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit007.collectioninit007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit008.collectioninit008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.collectioninit009.collectioninit009.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate001.dlgate001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate002.dlgate002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate003.dlgate003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate004.dlgate004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate005.dlgate005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate007.dlgate007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.dlgate008lib.dlgate008lib.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt001.evnt001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt002.evnt002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt003.evnt003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt004.evnt004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt006.evnt006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.evnt008.evnt008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.explicit001.explicit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.explicit002.explicit002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.explicit003.explicit003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.explicit004.explicit004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.implicit001.implicit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.implicitarayinit001.implicitarayinit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.implicitarayinit002.implicitarayinit002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.implicitarayinit003.implicitarayinit003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.implicitarayinit004.implicitarayinit004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize002.initialize002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize003.initialize003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize004.initialize004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize005.initialize005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize006.initialize006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.initialize007.initialize007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda002.lambda002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda003.lambda003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda004b.lambda004b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda005.lambda005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda006.lambda006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda007.lambda007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda008.lambda008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda010.lambda010.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda011.lambda011.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda012.lambda012.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda013.lambda013.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda014.lambda014.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda015.lambda015.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda016.lambda016.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda017.lambda017.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda018.lambda018.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda019.lambda019.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.lambda020.lambda020.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofanontype001.memberinitofanontype001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofanontype002.memberinitofanontype002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofobjinit001.memberinitofobjinit001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofobjinit002.memberinitofobjinit002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofobjinit003.memberinitofobjinit003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.memberinitofobjinit004.memberinitofobjinit004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.negboxing002.negboxing002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.nullcoalesce001.nullcoalesce001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.unsfe001.unsfe001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.query003.query003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.query004.query004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.query005.query005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.throw003.throw003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.common.common.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate001.operate001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate002.operate002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate003.operate003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate004.operate004.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate005.operate005.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate005a.operate005a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate006.operate006.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate006a.operate006a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate007.operate007.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate007a.operate007a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate007b.operate007b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate008.operate008.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate008a.operate008a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate009.operate009.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate009a.operate009a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate010.operate010.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate010a.operate010a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate011.operate011.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate011b.operate011b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate012.operate012.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate012a.operate012a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate012b.operate012b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate013.operate013.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate013a.operate013a.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate013b.operate013b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate014.operate014.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate014b.operate014b.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate015.operate015.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate016.operate016.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate017.operate017.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate018.operate018.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate019.operate019.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate020.operate020.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate021.operate021.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.operate022.operate022.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.literal001.literal001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.nullable001.nullable001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.nullable002.nullable002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.nullable003.nullable003.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.field001.field001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.field002.field002.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.date001.date001.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.gettype01.gettype01.ManagedTests.DynamicCSharp.Conformance.dynamic.dynamicType.basic.gettype02.gettype02.Bar = new decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof public typeof public Guid public public decl_stmt Guid = typeof call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() call Guid.ToString() - IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) decl Dictionary IExpression MethodInvokationCases public public decl_stmt Spring.Expressions.IExpression = decl_stmt MethodInvokationCases = new decl_stmt System.Collections.Generic.Dictionary < = new < = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof public typeof public IList IList public public decl_stmt System.Collections.Generic.IList = decl_stmt System.Collections.Generic.IList = IList IList Inventor Inventor public public decl_stmt System.Collections.Generic.IList = decl_stmt System.Collections.Generic.IList = decl_stmt Spring.Inventor = decl_stmt Spring.Inventor = IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof typeof typeof bool public public typeof typeof , typeof typeof , public public typeof typeof public public typeof int typeof < public public public public typeof < public public typeof int , Inventor IExpression Inventor public public typeof decl_stmt Spring.Expressions.IExpression = new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new decl_stmt Spring.Inventor = new decl_stmt Spring.Inventor = new typeof public typeof public public public typeof Inventor public public decl_stmt Spring.Inventor = new new new public public decl Dictionary public public decl_stmt System.Collections.Generic.Dictionary < = new < = typeof public typeof public typeof public typeof public string decl Dictionary IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) decl_stmt System.Collections.Generic.Dictionary < = new < = decl_stmt string = string public public bool bool bool bool decl_stmt string = bool public public | | - | string public public bool bool bool bool decl_stmt string = bool decl Dictionary public public & & - decl_stmt System.Collections.Generic.Dictionary < = new < = string public public bool bool decl_stmt string = bool ~ public public ^ ^ - ^ ^ ^ public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool Foo public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool bool decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new typeof bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool public public typeof typeof bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool bool bool bool public public bool bool bool bool bool bool bool string public public decl_stmt string = bool bool bool bool bool bool bool bool bool typeof public typeof public decl Dictionary typeof public typeof public decl_stmt System.Collections.Generic.Dictionary < = new < = = DateTime DateTime decl IDictionary TimeSpan public public - + decl_stmt DateTime = new decl_stmt DateTime = new decl_stmt TimeSpan = - decl_stmt System.Collections.Generic.IDictionary < = new < = new new typeof public typeof public DateTime DateTime decl Dictionary TimeSpan public public - - decl_stmt DateTime = new decl_stmt DateTime = new decl_stmt TimeSpan = - decl_stmt System.Collections.Generic.Dictionary < = new < = new new typeof public typeof public public public - typeof public typeof public public public - typeof public typeof public public public - typeof public typeof public public public - typeof public typeof public typeof public typeof public typeof public typeof public public public - - - typeof public typeof public new IApplicationContext public public new typeof decl_stmt Spring.Context.IApplicationContext = new = typeof typeof TestObjectContainer TestObject public public new decl_stmt Spring.Data.NHibernate.TestObject = as decl_stmt TestObjectContainer = as IApplicationContext public public decl_stmt Spring.Context.IApplicationContext = new = typeof WebMethodAttribute public public typeof typeof typeof typeof typeof decl_stmt System.Web.Services.WebMethodAttribute = = double decl Dictionary public public decl_stmt System.Collections.Generic.Dictionary < = new < = new decl_stmt double = double = new < = new = double private private return private private return string string decl Dictionary IList IList public public typeof new < new < new < decl_stmt string = decl_stmt System.Collections.Generic.IList = new < decl_stmt System.Collections.Generic.Dictionary < = new < decl_stmt string = decl_stmt System.Collections.Generic.IList = new < decl int public public decl_stmt int = new decl Dictionary public public decl_stmt System.Collections.Generic.Dictionary < = new < = new object public public decl_stmt object = foreach in if != if if int == = else throw new return decl int decl object object public public decl_stmt int = new decl_stmt object = new decl_stmt object = typeof double decl object typeof public typeof public decl_stmt object = new decl int decl object object public public decl_stmt int = new decl_stmt object = new decl_stmt object = typeof double decl object typeof public typeof public decl_stmt object = new decl int decl object object public public decl_stmt int = new - decl_stmt object = new decl_stmt object = typeof int decl object typeof public typeof public decl_stmt object = new new new decl object typeof public typeof public decl_stmt object = new decl int decl object object public public decl_stmt int = new decl_stmt object = new decl_stmt object = typeof double decl object typeof public typeof public decl_stmt object = new new new decl object typeof public typeof public decl_stmt object = new decl int ISet decl DateTime decl string public public decl_stmt int = new new new new decl_stmt string = new new decl_stmt DateTime = new new new - decl_stmt Spring.Collections.ISet = new new Stack = public = public decl_stmt System.Collections.Generic.Stack = new new decl string public public decl_stmt string = new new new decl int decl string public public decl_stmt int = new new decl_stmt string = new new new new decl int typeof public typeof public decl_stmt int = new decl int typeof public typeof public decl_stmt int = new decl object decl decimal public public decl_stmt object = new decl_stmt decimal = decl object decl object public public decl_stmt object = new decl_stmt object = new new decl Dictionary public public decl_stmt System.Collections.Generic.Dictionary < = new < = = typeof public typeof public new typeof public typeof public new typeof public typeof public int Foo = public = public decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new typeof typeof decl_stmt int ? = typeof bool = bool DateTime = public = public decl_stmt DateTime = call DateTime.ToString() call DateTime.ToString() call DateTime.ToString() call DateTime.ToString() call DateTime.ToString() typeof try catch try catch try catch try catch try catch Foo = public = public decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() new call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() call Foo.MethodWithArrayArgument() new call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() call Foo.MethodWithParamArray() decl Dictionary Foo public public decl_stmt System.Collections.Generic.Dictionary < = new < = new new decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() call Foo.MethodWithSimilarArguments() decl Dictionary Foo public public decl_stmt System.Collections.Generic.Dictionary < = new < = new new decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new decl Dictionary Foo Foo public public typeof decl_stmt System.Collections.Generic.Dictionary < = new < = new new decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new try decl_stmt Spring.Data.NHibernate.Bytecode.Foo = new catch public public typeof = public = public typeof typeof bool typeof typeof IExpression IExpression object IExpression TestEnumTypePropertyClass IExpression public public decl_stmt Spring.Expressions.IExpression = decl_stmt Spring.Expressions.IExpression = decl_stmt Spring.Expressions.IExpression = decl_stmt Spring.Expressions.IExpression = decl_stmt TestEnumTypePropertyClass = new call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) try call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) double catch try call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) float catch decl_stmt object = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) typeof call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() try call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) - catch try call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) - catch call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) call Spring.Expressions.IExpression.SetValue(object,object) | | Sample Sample Sample IExpression Sample public public typeof decl_stmt Spring.Expressions.IExpression = decl_stmt Sample = new decl_stmt Sample = new decl_stmt Sample = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) decl_stmt Sample = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) IExpression public public decl_stmt Spring.Expressions.IExpression = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) IExpression AsyncTestTask AsyncTestTask AsyncTestTask AsyncTestTask AsyncTestTask Inventor IExpression public public decl_stmt Spring.Expressions.IExpression = decl_stmt Spring.Inventor = new new decl_stmt Spring.Threading.AsyncTestTask = new decl_stmt Spring.Threading.AsyncTestTask = new decl_stmt Spring.Threading.AsyncTestTask = new decl_stmt Spring.Expressions.IExpression = decl_stmt Spring.Threading.AsyncTestTask = new new < decl_stmt Spring.Threading.AsyncTestTask = new new < call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() AsyncTestTask AsyncTestTask AsyncTestTask public public decl_stmt Spring.Threading.AsyncTestTask = new new decl_stmt Spring.Threading.AsyncTestTask = new new decl_stmt Spring.Threading.AsyncTestTask = new new call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() call AsyncTestTask.AssertNoException() decl double decl long object decl int public public decl_stmt object = typeof decl_stmt int = for = < ++ + = typeof decl_stmt long = as for = < ++ = typeof , decl_stmt double , = as , * for = < ++ for = < ++ = typeof = as IList object IExpression public public decl_stmt Spring.Expressions.IExpression = decl_stmt object = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) long = = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new new < new = = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) new new < decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) AccessVisibilityCases public public decl_stmt AccessVisibilityCases = new try + typeof catch try + typeof catch return return return return return return return private private return protected protected return public public return public public return public public return ISet ISet IDictionary object public public decl_stmt object = typeof decl_stmt Spring.Collections.ISet = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) decl_stmt Spring.Collections.ISet = new call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) new = typeof = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof decl_stmt System.Collections.Generic.IDictionary = object typeof public typeof public decl_stmt object = typeof ISet ISet object IDictionary public public decl_stmt object = typeof decl_stmt Spring.Collections.ISet = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) decl_stmt Spring.Collections.ISet = new call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) new = typeof = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof decl_stmt System.Collections.Generic.IDictionary = = typeof = object typeof public typeof public decl_stmt object = typeof ISet ISet IDictionary object public public decl_stmt object = typeof decl_stmt Spring.Collections.ISet = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof = decl_stmt Spring.Collections.ISet = new call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) new = typeof = call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) = typeof decl_stmt System.Collections.Generic.IDictionary = = typeof = object typeof public typeof public decl_stmt object = typeof object IExpression decl IDictionary int public public decl_stmt int = decl_stmt object = decl_stmt System.Collections.Generic.IDictionary < = new < = for = < ++ = = = decl_stmt Spring.Expressions.IExpression = for = < ++ = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) = = for = < ++ = = = = for = < ++ = call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) = call object.ToString() call object.ToString() call object.ToString() call object.ToString() call object.ToString() return - / private static private static / DerivedSingleMethodTestClass public public decl_stmt DerivedSingleMethodTestClass = new public public typeof typeof typeof AST int private static private static new + decl_stmt int = if > decl_stmt Spring.Expressions.Parser.antlr.collections.AST = while != + = call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling()