Spring.Messaging.Nms.Connections System using Apache.NMS using Common.Logging using Spring.Messaging.Nms.Support using Spring.Transaction.Support using Spring.Util using class Spring.Messaging.Nms.Connections.ConnectionFactoryUtils ILog public static public static if == return if && is && try catch call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() try catch call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() ISession public static public static decl_stmt Spring.Messaging.Ems.Common.ISession = while is = return NmsResourceHolder public static public static if == || == return decl_stmt Spring.Messaging.Nms.Connections.NmsResourceHolder = return != && call Spring.Messaging.Nms.Connections.NmsResourceHolder.ContainsSession(ISession) call Spring.Messaging.Nms.Connections.NmsResourceHolder.ContainsSession(ISession) call Spring.Messaging.Nms.Connections.NmsResourceHolder.ContainsSession(ISession) call Spring.Messaging.Nms.Connections.NmsResourceHolder.ContainsSession(ISession) call Spring.Messaging.Nms.Connections.NmsResourceHolder.ContainsSession(ISession) public static public static return new ISession bool ISession NmsResourceHolder NmsResourceHolder IConnection IConnection public static public static decl_stmt Spring.Messaging.Nms.Connections.NmsResourceHolder = if != decl_stmt Spring.Messaging.Ems.Common.ISession = if != if decl_stmt Spring.Messaging.Ems.Common.IConnection = if != call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() return if ! return decl_stmt Spring.Messaging.Nms.Connections.NmsResourceHolder = if == = new decl_stmt Spring.Messaging.Ems.Common.IConnection = decl_stmt Spring.Messaging.Ems.Common.ISession = try decl_stmt bool = != if ! = call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddConnection(IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddConnection(IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddConnection(IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddConnection(IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddConnection(IConnection) = call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddSession(ISession,IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddSession(ISession,IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddSession(ISession,IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddSession(ISession,IConnection) call Spring.Messaging.Nms.Connections.NmsResourceHolder.AddSession(ISession,IConnection) if call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() call Spring.Messaging.Ems.Common.IConnection.Start() catch if != try call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() catch if != try call Spring.Messaging.Ems.Common.IConnection.Close() call Spring.Messaging.Ems.Common.IConnection.Close() call Spring.Messaging.Ems.Common.IConnection.Close() call Spring.Messaging.Ems.Common.IConnection.Close() call Spring.Messaging.Ems.Common.IConnection.Close() catch throw if != new = return private private = = = public virtual public virtual return typeof public virtual public virtual return != : public virtual public virtual return public virtual public virtual if return else return return public override public override if public override public override if public override public override = if ! public override public override if try catch throw new public override public override if