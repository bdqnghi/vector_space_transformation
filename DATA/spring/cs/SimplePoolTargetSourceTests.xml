Spring.Aop.Target NUnit.Framework using Spring.Aop.Target using Spring.Objects.Factory using Spring.Objects.Factory.Xml using class attribute Spring.Aop.Target.SimplePoolTargetSourceTests XmlObjectFactory int public public = new new public public ISideEffectObject private private decl_stmt Spring.Objects.Factory.ISideEffectObject = call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() + = call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() public virtual public virtual public virtual public virtual ISideEffectObject PoolingConfig public virtual public virtual decl_stmt Spring.Objects.Factory.ISideEffectObject = call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() decl_stmt Spring.Aop.Target.PoolingConfig = call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call XmlObjectFactory.GetObject() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork() call Spring.Objects.Factory.ISideEffectObject.doWork()