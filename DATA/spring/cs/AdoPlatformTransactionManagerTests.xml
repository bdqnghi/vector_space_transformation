Spring.Data System using System.Data using System.Threading using NUnit.Framework using Rhino.Mocks using Spring.Dao using Spring.Data.Common using Spring.Data.Core using Spring.Data.Support using Spring.Support using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.AdoPlatformTransactionManagerTests MockRepository IsolationLevel public public = new public public == AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction IDbProvider TransactionTemplate IDbConnection AdoPlatformTransactionManager Exception public public region region region region decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new ! ! decl_stmt System.Exception = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() bool IDbTransaction IDbProvider TransactionTemplate TransactionTemplate ITransactionStatus IDbConnection AdoPlatformTransactionManager TestTransactionSynchronization public public decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.ITransactionStatus = call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() new decl_stmt TestTransactionSynchronization = new decl_stmt bool = try decl_stmt Spring.Transaction.Support.TransactionTemplate = new decl_stmt Spring.Transaction.Support.TransactionTemplate = new call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new = call AdoPlatformTransactionManager.Commit() call AdoPlatformTransactionManager.Commit() call AdoPlatformTransactionManager.Commit() call AdoPlatformTransactionManager.Commit() call AdoPlatformTransactionManager.Commit() catch if ! call AdoPlatformTransactionManager.Rollback() call AdoPlatformTransactionManager.Rollback() call AdoPlatformTransactionManager.Rollback() call AdoPlatformTransactionManager.Rollback() call AdoPlatformTransactionManager.Rollback() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() public public public public AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbTransaction IDbTransaction IDbProvider TransactionTemplate TransactionTemplate IDbConnection IDbConnection AdoPlatformTransactionManager IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbTransaction IDbConnection TransactionTemplate TransactionTemplate IDbProvider Exception IDbConnection AdoPlatformTransactionManager IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() decl_stmt System.Exception = new endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! ! try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction IDbProvider TransactionTemplate IDbConnection IDbConnection AdoPlatformTransactionManager public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() public public public public IDbTransaction IDbProvider TransactionTemplate IDbConnection AdoPlatformTransactionManager IDbCommand private private region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < decl_stmt System.Data.IDbCommand = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.CreateCommand() call System.Data.IDbConnection.CreateCommand() call System.Data.IDbConnection.CreateCommand() call System.Data.IDbConnection.CreateCommand() call System.Data.IDbConnection.CreateCommand() = if > = - call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() else call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new if <= catch if <= else throw ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() TransactionTemplate AdoPlatformTransactionManager IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() new endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private return AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() new call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() new call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() new call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private return TransactionTemplate AdoPlatformTransactionManager IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = < call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() TransactionTemplate AdoPlatformTransactionManager IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = < call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() TransactionTemplate AdoPlatformTransactionManager IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = < call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private return AdoPlatformTransactionManager IDbConnection IDbTransaction TransactionTemplate IDbProvider public public region region region region decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private return