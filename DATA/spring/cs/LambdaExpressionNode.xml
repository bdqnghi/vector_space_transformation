Spring.Expressions System using System.Collections using System.Runtime.Serialization using Spring.Expressions.Parser.antlr.collections using class attribute Spring.Expressions.LambdaExpressionNode super super BaseNode decl string BaseNode if == return object protected override protected override if == decl_stmt object = return decl string IDictionary EvaluationContext object protected override protected override decl_stmt string = if != throw new decl_stmt System.Collections.Generic.IDictionary = new for = < ++ = decl_stmt EvaluationContext = using call EvaluationContext.SwitchLocalVariables() call EvaluationContext.SwitchLocalVariables() call EvaluationContext.SwitchLocalVariables() call EvaluationContext.SwitchLocalVariables() call EvaluationContext.SwitchLocalVariables() decl_stmt object = return int AST AST private private lock if == if == = new = else decl_stmt Spring.Expressions.Parser.antlr.collections.AST = = new call Spring.Expressions.Parser.antlr.collections.AST.getNumberOfChildren() call Spring.Expressions.Parser.antlr.collections.AST.getNumberOfChildren() call Spring.Expressions.Parser.antlr.collections.AST.getNumberOfChildren() call Spring.Expressions.Parser.antlr.collections.AST.getNumberOfChildren() call Spring.Expressions.Parser.antlr.collections.AST.getNumberOfChildren() decl_stmt Spring.Expressions.Parser.antlr.collections.AST = call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() decl_stmt int = while != ++ = call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() = call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() = call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling()