System using Spring.Web.Conversation using System.Text.RegularExpressions using NHibernate using Spring.Data.NHibernate.Support using Common.Logging using Spring.Objects.Factory using class .IoeTests super ISessionFactory IConversationManager IConversationState ILog IConversationState return = return = return = return = protected protected try if = else if else if else if else if else if else if else if else throw new catch = + IConversationManager IConversationState private private decl_stmt Spring.Web.Conversation.IConversationManager = new decl_stmt Spring.Web.Conversation.IConversationState = try = new = call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) = catch = + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() IConversationManager Regex private private decl_stmt System.Text.RegularExpressions.Regex = new decl_stmt Spring.Web.Conversation.IConversationManager = try = new call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) call Spring.Web.Conversation.IConversationManager.AddConversation(IConversationState) = catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else = + IConversationState Regex private private decl_stmt System.Text.RegularExpressions.Regex = new decl_stmt Spring.Web.Conversation.IConversationState = try = new = call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() call IConversationState.InnerConversations() throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = = throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() = try = new = = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = = = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() IConversationState Regex private private decl_stmt System.Text.RegularExpressions.Regex = new decl_stmt Spring.Web.Conversation.IConversationState = try = new = call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() = throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = = = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() IConversationState Regex private private decl_stmt System.Text.RegularExpressions.Regex = new decl_stmt Spring.Web.Conversation.IConversationState = try = new = call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call IConversationState.StartResumeConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() ISession SessionScopeSettings Regex private private decl_stmt System.Text.RegularExpressions.Regex = new try decl_stmt Spring.Messaging.Ems.Common.ISession = = finally try decl_stmt Spring.Data.NHibernate.Support.SessionScopeSettings = new = using new decl_stmt Spring.Messaging.Ems.Common.ISession = throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally IConversationState Regex private private decl_stmt System.Text.RegularExpressions.Regex = new decl_stmt Spring.Web.Conversation.IConversationState = try = new = = throw new catch if call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) call System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions,TimeSpan) = else throw new + finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() try = new = = = finally call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation() call Spring.Web.Conversation.IConversationState.EndConversation()