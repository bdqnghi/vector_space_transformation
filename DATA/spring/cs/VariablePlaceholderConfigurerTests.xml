Spring.Objects.Factory.Config System using System.Collections using System.Collections.Specialized using NUnit.Framework using Rhino.Mocks using Spring.Context.Support using Spring.Objects.Factory.Support using class attribute Spring.Objects.Factory.Config.VariablePlaceholderConfigurerTests MockRepository public public = new StaticApplicationContext VariablePlaceholderConfigurer public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new try call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) catch StaticApplicationContext VariablePlaceholderConfigurer public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new = new new new try call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) catch CommandLineArgsVariableSource ConfigSectionVariableSource MutablePropertyValues TestObject IList StaticApplicationContext public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt System.Collections.Generic.IList = new decl_stmt Spring.Objects.Factory.Config.CommandLineArgsVariableSource = new new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) decl_stmt Spring.Objects.Factory.Config.ConfigSectionVariableSource = new = call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() decl_stmt Spring.Data.NHibernate.TestObject = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() TestObject IList StaticApplicationContext MutablePropertyValues public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() decl_stmt Spring.Data.NHibernate.TestObject = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() DefaultListableObjectFactory MutablePropertyValues RootObjectDefinition VariablePlaceholderConfigurer IList public public decl_stmt Spring.Objects.Factory.Support.DefaultListableObjectFactory = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) new decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() DefaultListableObjectFactory MutablePropertyValues RootObjectDefinition VariablePlaceholderConfigurer IList public public decl_stmt Spring.Objects.Factory.Support.DefaultListableObjectFactory = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) new decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() TestObject IList StaticApplicationContext MutablePropertyValues VariablePlaceholderConfigurer public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() decl_stmt Spring.Data.NHibernate.TestObject = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() DefaultListableObjectFactory MutablePropertyValues RootObjectDefinition VariablePlaceholderConfigurer IList public public decl_stmt Spring.Objects.Factory.Support.DefaultListableObjectFactory = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.RegisterObjectDefinition(string,IObjectDefinition) new decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Support.DefaultListableObjectFactory.GetObjectDefinition(string) call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() TestObject IList StaticApplicationContext MutablePropertyValues public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() decl_stmt Spring.Data.NHibernate.TestObject = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() IList StaticApplicationContext MutablePropertyValues public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new new = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof try call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() catch > - TestObject StaticApplicationContext MutablePropertyValues VariablePlaceholderConfigurer public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.MutablePropertyValues = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) call Spring.Context.Support.StaticApplicationContext.RegisterSingleton(string,Type,MutablePropertyValues) typeof decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new = = new new call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.AddObjectFactoryPostProcessor() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() decl_stmt Spring.Data.NHibernate.TestObject = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() MutablePropertyValues IConfigurableListableObjectFactory VariablePlaceholderConfigurer string string string RootObjectDefinition public public decl_stmt string const const = decl_stmt string const const = decl_stmt Spring.Objects.MutablePropertyValues = new decl_stmt string const const = call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = new typeof decl_stmt Spring.Objects.Factory.Config.IConfigurableListableObjectFactory = < call IConfigurableListableObjectFactory.GetObjectDefinitionNames() call IConfigurableListableObjectFactory.GetObjectDefinitionNames() call IConfigurableListableObjectFactory.GetObjectDefinitionNames() call IConfigurableListableObjectFactory.GetObjectDefinitionNames() call IConfigurableListableObjectFactory.GetObjectDefinitionNames() new call Spring.Objects.Factory.Config.IConfigurableListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Config.IConfigurableListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Config.IConfigurableListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Config.IConfigurableListableObjectFactory.GetObjectDefinition(string) call Spring.Objects.Factory.Config.IConfigurableListableObjectFactory.GetObjectDefinition(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.VariablePlaceholderConfigurer = new = = new new = call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call Spring.Objects.Factory.Config.VariablePlaceholderConfigurer.PostProcessObjectFactory(IConfigurableListableObjectFactory) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()