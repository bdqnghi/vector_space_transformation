Spring.Aop.Framework.DynamicProxy System using System.Collections using System.Reflection using NUnit.Framework using Rhino.Mocks using Spring.Aop.Interceptor using Spring.Aop.Support using Spring.Collections using Spring.Objects using class attribute Spring.Aop.Framework.DynamicProxy.AopUtilsTests MockRepository public public = new IPointcut public public decl_stmt Spring.Aop.IPointcut = new typeof public public new new typeof new new typeof new typeof IPointcut public public decl_stmt Spring.Aop.IPointcut = new typeof object typeof object new typeof IPointcut public public decl_stmt Spring.Aop.IPointcut = new typeof new typeof typeof typeof new typeof IAdvisor public public decl_stmt Spring.Aop.IAdvisor = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof typeof public public typeof IList DerivedTestObject public public decl_stmt Spring.Objects.DerivedTestObject = new decl_stmt System.Collections.Generic.IList = new call DerivedTestObject.GetType() call DerivedTestObject.GetType() call DerivedTestObject.GetType() call DerivedTestObject.GetType() call DerivedTestObject.GetType() call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) typeof call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) call System.Collections.Generic.IList.Contains(Object) typeof decl Type public public decl_stmt System.Type = typeof public typeof public ImplementsNothing decl Type public public decl_stmt ImplementsNothing = new decl_stmt System.Type = ImplementsTwoInterfaces decl Type ISet public public decl_stmt ImplementsTwoInterfaces = new decl_stmt System.Type = decl_stmt Spring.Collections.ISet = new call Spring.Collections.ISet.ContainsAll(ICollection) call Spring.Collections.ISet.ContainsAll(ICollection) call Spring.Collections.ISet.ContainsAll(ICollection) call Spring.Collections.ISet.ContainsAll(ICollection) call Spring.Collections.ISet.ContainsAll(ICollection) new typeof typeof InheritsOneInterface decl Type Type public public decl_stmt InheritsOneInterface = new decl_stmt System.Type = decl_stmt System.Type = typeof IIntroductionAdvisor public public decl_stmt Spring.Aop.IIntroductionAdvisor = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() typeof call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() public override public override return public override public override return public override public override return public public throw new public public throw new public public throw new