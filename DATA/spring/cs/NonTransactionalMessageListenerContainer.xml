Spring.Messaging.Listener System using System.Messaging using Common.Logging using class Spring.Messaging.Listener.NonTransactionalMessageListenerContainer super super AbstractPeekingMessageListenerContainer ILog IExceptionHandler return = IExceptionHandler protected virtual protected virtual decl_stmt Spring.Messaging.Listener.IExceptionHandler = if != call IExceptionHandler.OnException() call IExceptionHandler.OnException() call IExceptionHandler.OnException() call IExceptionHandler.OnException() call IExceptionHandler.OnException() Message protected override protected override decl_stmt System.ServiceModel.Channels.Message = try region region if call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() + + endregion = catch if == region region if call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() endregion return else region region if call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() + + endregion lock throw if == region region if call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() call ILog.Trace() + + endregion return try region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + + endregion catch finally call Message.Dispose() call Message.Dispose() call Message.Dispose() call Message.Dispose() call Message.Dispose() return