Spring.Scheduling.Quartz System using System.Collections using System.Threading using NUnit.Framework using Quartz using Quartz.Impl using Quartz.Impl.Triggers using Quartz.Spi using Rhino.Mocks using Spring.Context.Support using Spring.Objects using Spring.Objects.Factory.Support using class attribute Spring.Scheduling.Quartz.QuartzSupportTests public public public public public public TestMethodInvokingTask CronTriggerObject SimpleTriggerObject SchedulerFactoryObject IDictionary StaticListableObjectFactory IDictionary IScheduler JobDetailObject IJobDetail MethodInvokingJobDetailFactoryObject TestObject private private decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Scheduling.Quartz.JobDetailObject = new = typeof = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() decl_stmt Spring.Scheduling.Quartz.CronTriggerObject = new = = = call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.TestMethodInvokingTask = new decl_stmt Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject = new = if decl_stmt Spring.Objects.Factory.Support.StaticListableObjectFactory = new call Spring.Objects.Factory.Support.StaticListableObjectFactory.AddObject(string,object) call Spring.Objects.Factory.Support.StaticListableObjectFactory.AddObject(string,object) call Spring.Objects.Factory.Support.StaticListableObjectFactory.AddObject(string,object) call Spring.Objects.Factory.Support.StaticListableObjectFactory.AddObject(string,object) call Spring.Objects.Factory.Support.StaticListableObjectFactory.AddObject(string,object) = = else = = call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() decl_stmt IJobDetail = call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt IScheduler = < call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = if = new = new try call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() finally call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() public public public public TestMethodInvokingTask CronTriggerObject SimpleTriggerObject SchedulerFactoryObject IDictionary IDictionary IScheduler JobDetailObject IJobDetail MethodInvokingJobDetailFactoryObject TestObject private private decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Scheduling.Quartz.JobDetailObject = new = typeof = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() decl_stmt Spring.Scheduling.Quartz.CronTriggerObject = new = = = call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.TestMethodInvokingTask = new decl_stmt Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject = new = = = call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() decl_stmt IJobDetail = call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt IScheduler = < call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new new if call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = new if = try call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() finally call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() public public public public TestMethodInvokingTask CronTriggerObject SimpleTriggerObject SchedulerFactoryObject IDictionary IDictionary IScheduler JobDetailObject IJobDetail MethodInvokingJobDetailFactoryObject TestObject private private decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Scheduling.Quartz.JobDetailObject = new = typeof = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() decl_stmt Spring.Scheduling.Quartz.CronTriggerObject = new = = = call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.CronTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.TestMethodInvokingTask = new decl_stmt Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject = new = = = call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() decl_stmt IJobDetail = call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt IScheduler = < call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new new if call IScheduler.AddJob() call IScheduler.AddJob() call IScheduler.AddJob() call IScheduler.AddJob() call IScheduler.AddJob() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new if call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() new call IScheduler.Start() call IScheduler.Start() call IScheduler.Start() call IScheduler.Start() call IScheduler.Start() call IScheduler.Shutdown() call IScheduler.Shutdown() call IScheduler.Shutdown() call IScheduler.Shutdown() call IScheduler.Shutdown() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = new if = try call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() finally call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() TestMethodInvokingTask SimpleTriggerObject SimpleTriggerObject SchedulerFactoryObject IJobDetail MethodInvokingJobDetailFactoryObject private private decl_stmt Spring.Scheduling.Quartz.TestMethodInvokingTask = new decl_stmt Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject = new = = = = call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() decl_stmt IJobDetail = call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() try catch if call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() return else call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() try catch call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call TestMethodInvokingTask.Stop() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() TestMethodInvokingTask CronTriggerImpl SimpleTriggerImpl SchedulerFactoryObject IScheduler JobDetailImpl IJobDetail MethodInvokingJobDetailFactoryObject TestObject IJobFactory public public decl_stmt IJobFactory = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt JobDetailImpl = new = typeof = = call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() decl_stmt CronTriggerImpl = new = = = = = = decl_stmt Spring.Scheduling.Quartz.TestMethodInvokingTask = new decl_stmt Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject = new = = = = call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() call MethodInvokingJobDetailFactoryObject.AfterPropertiesSet() decl_stmt IJobDetail = call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() call Spring.Scheduling.Quartz.MethodInvokingJobDetailFactoryObject.GetObject() decl_stmt SimpleTriggerImpl = new = = = = = = = decl_stmt IScheduler = < decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = = new = new try call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() finally call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() = call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() new call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() new call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() new call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() call IScheduler.AssertWasCalled() new StaticApplicationContext IScheduler SchedulerFactoryObject TestObject IDictionary IScheduler SchedulerContext public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt IScheduler = < decl_stmt SchedulerContext = new call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() call IScheduler.Stub() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = = try call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() decl_stmt IScheduler = call Spring.Scheduling.Quartz.SchedulerFactoryObject.GetObject() call Spring.Scheduling.Quartz.SchedulerFactoryObject.GetObject() call Spring.Scheduling.Quartz.SchedulerFactoryObject.GetObject() call Spring.Scheduling.Quartz.SchedulerFactoryObject.GetObject() call Spring.Scheduling.Quartz.SchedulerFactoryObject.GetObject() finally call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() StaticApplicationContext TestObject IDictionary JobDetailObject public public decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Scheduling.Quartz.JobDetailObject = new = typeof = decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = = call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.JobDetailObject.AfterPropertiesSet() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() CountingTaskExecutor SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public decl_stmt CountingTaskExecutor = new = decl_stmt JobDetailImpl = new = typeof = decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public = decl_stmt JobDetailImpl = new = typeof = decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public = = decl_stmt JobDetailImpl = new = typeof = call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public = = decl_stmt JobDetailImpl = new = typeof = call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SpringObjectJobFactory SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public = = decl_stmt JobDetailImpl = new = typeof = call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new decl_stmt Spring.Scheduling.Quartz.SpringObjectJobFactory = new = new = = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() == call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject SimpleTriggerObject JobDetailObject public public = = decl_stmt Spring.Scheduling.Quartz.JobDetailObject = new = typeof = call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() call JobDetailObject.JobDataMap() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject SimpleTriggerObject JobDetailImpl public public = = decl_stmt JobDetailImpl = new = typeof = call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() call JobDetailImpl.JobDataMap() decl_stmt Spring.Scheduling.Quartz.SimpleTriggerObject = new = = = = = call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SimpleTriggerObject.AfterPropertiesSet() decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = new = new call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() SchedulerFactoryObject public public = = decl_stmt Spring.Scheduling.Quartz.SchedulerFactoryObject = new = new = call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call Spring.Scheduling.Quartz.SchedulerFactoryObject.AfterPropertiesSet() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() call SchedulerFactoryObject.Start() > call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() call Spring.Scheduling.Quartz.SchedulerFactoryObject.Dispose() IScheduler IScheduler IScheduler XmlApplicationContext IScheduler XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new try decl_stmt IScheduler = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() decl_stmt IScheduler = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() decl_stmt Spring.Context.Support.XmlApplicationContext = new try decl_stmt IScheduler = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() decl_stmt IScheduler = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() finally call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() finally call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() QuartzTestObject QuartzTestObject XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new try decl_stmt Spring.Scheduling.Quartz.QuartzTestObject = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() decl_stmt Spring.Scheduling.Quartz.QuartzTestObject = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() finally call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() QuartzTestObject QuartzTestObject XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new try decl_stmt Spring.Scheduling.Quartz.QuartzTestObject = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() decl_stmt Spring.Scheduling.Quartz.QuartzTestObject = call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() finally call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() IScheduler StaticApplicationContext public public decl_stmt Spring.Context.Support.StaticApplicationContext = new call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() new typeof decl_stmt IScheduler = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() typeof call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() IScheduler StaticApplicationContext ObjectDefinitionBuilder public public decl_stmt Spring.Context.Support.StaticApplicationContext = new decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() call StaticApplicationContext.RegisterObjectDefinition() decl_stmt IScheduler = call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() call StaticApplicationContext.GetObject() typeof call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() call StaticApplicationContext.Refresh() XmlApplicationContext public public decl_stmt Spring.Context.Support.XmlApplicationContext = new call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.GetObject() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() call XmlApplicationContext.Dispose() public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public public return public public public public public public return public public public public return public public public public public public ++ public public if > throw new = protected override protected override ++ public public ++