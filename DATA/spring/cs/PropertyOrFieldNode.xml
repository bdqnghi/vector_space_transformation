Spring.Expressions System using System.Collections using System.Collections.Generic using System.Reflection using System.Runtime.Remoting using System.Runtime.Serialization using Spring.Collections using Spring.Core using Spring.Core.TypeConversion using Spring.Core.TypeResolution using Spring.Util using Spring.Reflection.Dynamic using class attribute Spring.Expressions.PropertyOrFieldNode super super BaseNode string BindingFlags IValueAccessor Type private private decl_stmt System.Type = == || is as : if == || call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) = if != && call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) call Spring.Expressions.IValueAccessor.RequiresRefresh(Type) = if != && == if if == typeof else if == endif = new else if try = new catch if == = if == && is = typeof if == try = new catch if == throw new + + else throw new + + + + FieldInfo PropertyInfo private static private static try decl_stmt System.Reflection.PropertyInfo = if == decl_stmt System.Reflection.FieldInfo = if != return new else return new catch decl_stmt System.Reflection.PropertyInfo = while != typeof object = | if == decl_stmt System.Reflection.FieldInfo = | if != return new else return new = return protected override protected override lock if == && throw new + + if || return else return call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) protected override protected override lock if == && throw new + + if || else call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) return is return is private private try return call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) call Spring.Expressions.IValueAccessor.Get(object) catch throw new catch throw new + + catch throw new + + Type bool object PropertyChangeEventArgs private private decl_stmt bool = decl_stmt System.Type = try if ! if ! throw new + + else if && == || throw new + + + + + + else if == || else if ! && is || is || is if ! decl_stmt object = else decl_stmt object = catch decl_stmt Spring.Core.PropertyChangeEventArgs = new if is throw new else throw new catch throw new + + catch throw catch throw catch decl_stmt Spring.Core.PropertyChangeEventArgs = new throw new private private call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) call Spring.Expressions.IValueAccessor.Set(object,object) ISet bool private private if ! || return decl_stmt bool = if is && ! decl_stmt System.Collections.Generic.IList = if != && ! && ! foreach in call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) = else if is && ! decl_stmt System.Collections.Generic.IDictionary = if != && ! && ! foreach in = = else if is && ! decl_stmt Spring.Collections.ISet = if != call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) call Spring.Collections.ISet.AddAll(ICollection) = return internal internal lock return return return return throw new throw new public virtual public virtual return public override public override if ! throw new + + return public override public override if ! throw new + + return return return return return public override public override return != public override public override return public override public override return return return return public override public override return != public override public override return public override public override throw new object var public override public override decl_stmt var = as < decl_stmt object if call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() call var.TryGetValue() out return if throw new typeof + + + + else throw new + + + + endif public override public override throw new public override public override return public override public override throw new