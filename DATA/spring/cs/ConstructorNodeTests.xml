Spring.Expressions System using NUnit.Framework using class attribute Spring.Expressions.ConstructorNodeTests PublicTestClass StringLiteralNode ConstructorNode public public decl_stmt Spring.Expressions.ConstructorNode = new typeof decl_stmt Spring.Expressions.StringLiteralNode = new call ConstructorNode.AddArgument() call ConstructorNode.AddArgument() call ConstructorNode.AddArgument() call ConstructorNode.AddArgument() call ConstructorNode.AddArgument() decl_stmt PublicTestClass = - PublicTestClass IntLiteralNode StringLiteralNode ConstructorNode public public decl_stmt Spring.Expressions.ConstructorNode = new = typeof decl_stmt Spring.Expressions.StringLiteralNode = new = call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() decl_stmt Spring.Expressions.IntLiteralNode = new = call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() decl_stmt PublicTestClass = PublicTestClass IntLiteralNode StringLiteralNode ConstructorNode public public decl_stmt Spring.Expressions.ConstructorNode = new = typeof decl_stmt Spring.Expressions.StringLiteralNode = new = call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() decl_stmt Spring.Expressions.IntLiteralNode = new = call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() call ConstructorNode.addChild() decl_stmt PublicTestClass =