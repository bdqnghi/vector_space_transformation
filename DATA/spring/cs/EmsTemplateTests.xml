Spring.Messaging.Ems.Core System using System.Collections using NUnit.Framework using Spring.Context using Spring.Context.Support using Spring.Core.TypeResolution using Spring.Expressions using Spring.Messaging.Ems.Common using Spring.Messaging.Ems.Jndi using Spring.Messaging.Ems.Listener using Spring.Objects.Factory.Xml using Spring.Testing.NUnit using TIBCO.EMS using TIBCO.EMS.ADMIN using class attribute Spring.Messaging.Ems.Core.EmsTemplateTests super super AbstractDependencyInjectionSpringContextTests IConnectionFactory EmsTemplate LookupContext Admin SimpleGateway IConnectionFactory Hashtable IConnectionFactory ConnectionFactory string Destination protected override protected override = new decl_stmt Destination = try = call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() if != call Admin.DestroyQueue() call Admin.DestroyQueue() call Admin.DestroyQueue() call Admin.DestroyQueue() call Admin.DestroyQueue() catch call Admin.CreateQueue() call Admin.CreateQueue() call Admin.CreateQueue() call Admin.CreateQueue() call Admin.CreateQueue() new call Admin.BindQueue() call Admin.BindQueue() call Admin.BindQueue() call Admin.BindQueue() call Admin.BindQueue() call Admin.PurgeQueue() call Admin.PurgeQueue() call Admin.PurgeQueue() call Admin.PurgeQueue() call Admin.PurgeQueue() string Destination public public decl_stmt string = call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) = call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) decl_stmt Destination = call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() call LookupContext.Lookup() call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ConvertAndSend(string,object,IMessagePostProcessor) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) call Spring.Messaging.Ems.Core.EmsTemplate.ReceiveAndConvert(string) string private private decl_stmt string = as string return new