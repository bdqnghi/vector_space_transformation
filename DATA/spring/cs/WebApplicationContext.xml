Spring.Context.Support System using System.Collections using System.Collections.Specialized using System.Diagnostics using System.IO using System.Reflection using System.Web using System.Web.Hosting using System.Xml using Common.Logging using Spring.Collections using Spring.Objects using Spring.Objects.Factory.Config using Spring.Objects.Factory.Support using Spring.Objects.Factory.Xml using Spring.Objects.Support using Spring.Reflection.Dynamic using Spring.Util using Spring.Core.IO using class Spring.Context.Support.WebApplicationContext super super AbstractXmlApplicationContext Hashtable DateTime decl IResource decl string string public override public override return ILog private static private static lock decl_stmt ILog = typeof if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call System.Collections.Hashtable.Clear() call System.Collections.Hashtable.Clear() call System.Collections.Hashtable.Clear() call System.Collections.Hashtable.Clear() call System.Collections.Hashtable.Clear() public static public static return + + public static public static return string decl_stmt string = return string string bool IApplicationContext ILog IApplicationContext private static private static decl_stmt string = decl_stmt string = if == + + = decl_stmt ILog = typeof decl_stmt bool = lock if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt Spring.Context.IApplicationContext = if != if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() return lock if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() if = if == try if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() using new = if != if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() catch if call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() new throw call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() if != decl_stmt Spring.Context.IApplicationContext = while != if ! call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call Hashtable.ContainsKey() call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) call System.Collections.Hashtable.Add(Object,Object) if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() = return protected override protected override return return string protected override protected override decl_stmt string = return new string private private decl_stmt string = if == = else = + return protected override protected override return new new