Spring.Messaging.Nms.Listener System using System.Threading using Common.Logging using Spring.Collections using Spring.Messaging.Nms.Core using Spring.Messaging.Nms.Support using Apache.NMS using Spring.Transaction.Support using Spring.Util using class Spring.Messaging.Nms.Listener.SimpleMessageListenerContainer super super AbstractMessageListenerContainer super IExceptionListener TimeSpan ISet ISet TimeSpan bool ILog object string int string return = > = = = return protected override protected override if && != throw new protected override protected override protected override protected override protected override protected override += public public if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + try lock = = call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() catch throw catch call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() throw TimeSpan TimeSpan DateTime protected virtual protected virtual decl_stmt TimeSpan = new while try break catch if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + if > call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + + throw new + decl_stmt DateTime = decl_stmt TimeSpan = - += protected virtual protected virtual ISession IMessageConsumer IConnection protected virtual protected virtual lock if == = new = new decl_stmt Spring.Messaging.Ems.Common.IConnection = for = < ++ decl_stmt Spring.Messaging.Ems.Common.ISession = decl_stmt Spring.Messaging.Ems.Common.IMessageConsumer = SimpleMessageListener IDestination IMessageConsumer private private decl_stmt IDestination = if == = decl_stmt Spring.Messaging.Ems.Common.IMessageConsumer = decl_stmt Spring.Messaging.Listener.SimpleMessageListener = new += return protected override protected override lock if != call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() foreach in if != call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() foreach in = = protected protected if if && is return else return else return