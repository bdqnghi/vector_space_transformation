Spring.Context.Attributes System using System.Collections using System.Reflection using System.Reflection.Emit using Spring.Objects.Factory.Config using Spring.Util using Spring.Proxy using Common.Logging using class Spring.Context.Attributes.ConfigurationClassEnhancer IConfigurationClassInterceptor ConfigurationClassProxyTypeBuilder public public decl_stmt ConfigurationClassProxyTypeBuilder = new return call ConfigurationClassProxyTypeBuilder.BuildProxyType() call ConfigurationClassProxyTypeBuilder.BuildProxyType() call ConfigurationClassProxyTypeBuilder.BuildProxyType() call ConfigurationClassProxyTypeBuilder.BuildProxyType() call ConfigurationClassProxyTypeBuilder.BuildProxyType() decl object string public public out out = decl_stmt string = if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() || call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() return decl_stmt object = typeof if == return if return = return Type IDictionary FieldInfo TypeBuilder FieldInfo public override public override decl_stmt System.Collections.Generic.IDictionary = new decl_stmt TypeBuilder = = call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() typeof | | new decl_stmt System.Type = call TypeBuilder.CreateType() call TypeBuilder.CreateType() call TypeBuilder.CreateType() call TypeBuilder.CreateType() call TypeBuilder.CreateType() foreach in decl_stmt System.Reflection.FieldInfo = call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) string | call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) decl_stmt System.Reflection.FieldInfo = call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) | call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) return public public FieldBuilder string Label LocalBuilder Label LocalBuilder protected override protected override decl_stmt System.Reflection.Emit.LocalBuilder = typeof decl_stmt System.Reflection.Emit.LocalBuilder = if != typeof = decl_stmt string = + decl_stmt System.Reflection.Emit.FieldBuilder = typeof | | decl_stmt Label = decl_stmt Label = if != if || if != if !=