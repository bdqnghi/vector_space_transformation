Spring.Data System using System.Collections using System.Collections.Generic using System.Data using System.Data.Odbc using System.Data.OracleClient using NUnit.Framework using Spring.Data.Common using Spring.Data.Generic using Spring.Data.Objects using class attribute Spring.Data.SQLiteTests public public string decl string AdoTemplate IDbProvider public public decl_stmt string = decl_stmt string = new foreach in if >= else decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Core.AdoTemplate = new try call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) catch throw decimal IDbProvider EmpProc IList IDictionary AdoTemplate public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt decimal = decimal call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) decl_stmt EmpProc = new decl_stmt System.Collections.Generic.IDictionary = call EmpProc.GetEmployees() call EmpProc.GetEmployees() call EmpProc.GetEmployees() call EmpProc.GetEmployees() call EmpProc.GetEmployees() foreach in + + + decl_stmt System.Collections.Generic.IList = as foreach in AdoTemplate decl IList IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt System.Collections.Generic.IList < = < return foreach in > AdoTemplate decl IDataParameter IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt System.Data.IDataParameter = call Spring.Data.Core.AdoTemplate.DeriveParameters(string,bool) call Spring.Data.Core.AdoTemplate.DeriveParameters(string,bool) call Spring.Data.Core.AdoTemplate.DeriveParameters(string,bool) call Spring.Data.Core.AdoTemplate.DeriveParameters(string,bool) call Spring.Data.Core.AdoTemplate.DeriveParameters(string,bool) if == for = < ++ + + + + + PubDao decl IList IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt PubDao = new decl_stmt System.Collections.Generic.IList < = call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() PubDao decl IList IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt PubDao = new decl_stmt System.Collections.Generic.IList < = call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() call PubDao.GetSales() int public public using = new using = new = = decl_stmt int = using = while ++