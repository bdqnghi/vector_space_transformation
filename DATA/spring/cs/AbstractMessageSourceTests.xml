Spring.Context.Support System.Globalization using NUnit.Framework using Rhino.Mocks using class attribute Spring.Context.Support.AbstractMessageSourceTests super super AbstractMessageSource MockRepository public public = new IMessageSourceResolvable typeof public typeof public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable decl object IMessageSource string public public decl_stmt string = decl_stmt object = new decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new decl_stmt Spring.Context.IMessageSource = < call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) = call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object IMessageSource public public decl_stmt object = new decl_stmt Spring.Context.IMessageSource = < call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) = call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() = call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable typeof public typeof public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() typeof public typeof public public public new public public new public public = new typeof public typeof public new IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable public public decl_stmt Spring.Context.IMessageSourceResolvable = < call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() call Spring.Context.IMessageSourceResolvable.GetCodes() new call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call Spring.Context.IMessageSourceResolvable.GetArguments() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private = = protected override protected override if return else if return else return protected override protected override return protected override protected override