Spring.Reflection.Dynamic System using System.Diagnostics using System.Reflection using NUnit.Framework using Spring.Context.Support using class attribute Spring.Reflection.Dynamic.DynamicConstructorTests Inventor DateTime Society Inventor public public = new new = new = = new new = new = = = new call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() = = new public public IDynamicConstructor Inventor IDynamicConstructor public public decl_stmt Spring.Reflection.Dynamic.IDynamicConstructor = typeof new typeof string typeof typeof string decl_stmt Spring.Inventor = call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() new new decl_stmt Spring.Reflection.Dynamic.IDynamicConstructor = typeof new typeof int typeof int typeof int call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() new ConstructorInfo object decl object IDynamicConstructor int public public decl_stmt int = decl_stmt object = = for = < ++ = new new = = decl_stmt Spring.Reflection.Dynamic.IDynamicConstructor = typeof new typeof string typeof typeof string for = < ++ decl_stmt object = new new = call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() call IDynamicConstructor.Invoke() = = decl_stmt System.Reflection.ConstructorInfo = typeof new typeof string typeof typeof string for = < ++ decl_stmt object = new new = call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) = return - / private private /