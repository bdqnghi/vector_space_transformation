Spring.Objects.Factory.Support System using System.Collections using System.Collections.Generic using System.Globalization using System.Reflection using Common.Logging using Spring.Collections using Spring.Core using Spring.Core.TypeConversion using Spring.Core.TypeResolution using Spring.Objects.Factory.Config using Spring.Util using System.Linq using class Spring.Objects.Factory.Support.ConstructorResolver ObjectDefinitionValueResolver object ILog AbstractObjectFactory IInstantiationStrategy IAutowireCapableObjectFactory ObjectWrapper ConstructorInstantiationInfo public public decl_stmt ObjectWrapper = new decl_stmt Spring.Util.ConstructorInstantiationInfo = = call Spring.Objects.Factory.Support.IInstantiationStrategy.Instantiate(RootObjectDefinition,string,IObjectFactory) call Spring.Objects.Factory.Support.IInstantiationStrategy.Instantiate(RootObjectDefinition,string,IObjectFactory) call Spring.Objects.Factory.Support.IInstantiationStrategy.Instantiate(RootObjectDefinition,string,IObjectFactory) call Spring.Objects.Factory.Support.IInstantiationStrategy.Instantiate(RootObjectDefinition,string,IObjectFactory) call Spring.Objects.Factory.Support.IInstantiationStrategy.Instantiate(RootObjectDefinition,string,IObjectFactory) region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion return ConstructorArgumentValues ConstructorInfo int int ArgumentsHolder ObjectWrapper ConstructorInfo decl Type UnsatisfiedDependencyExceptionData decl ConstructorInfo bool int decl object ConstructorArgumentValues public public decl_stmt ObjectWrapper = new decl_stmt System.Reflection.ConstructorInfo = decl_stmt object = if != = else decl_stmt bool = != || == decl_stmt Spring.Objects.Factory.Config.ConstructorArgumentValues = decl_stmt int = if != = else decl_stmt Spring.Objects.Factory.Config.ConstructorArgumentValues = = new = decl_stmt System.Reflection.ConstructorInfo = != : decl_stmt int = for = < ++ decl_stmt System.Reflection.ConstructorInfo = decl_stmt System.Type = call ConstructorInfo.GetParameters() call ConstructorInfo.GetParameters() call ConstructorInfo.GetParameters() call ConstructorInfo.GetParameters() call ConstructorInfo.GetParameters() if != && > break if < throw new + + decl_stmt ArgumentsHolder = if != decl_stmt UnsatisfiedDependencyExceptionData = = out if == if == - && == throw new continue else if != continue = new decl_stmt int = call ArgumentsHolder.GetTypeDifferenceWeight() call ArgumentsHolder.GetTypeDifferenceWeight() call ArgumentsHolder.GetTypeDifferenceWeight() call ArgumentsHolder.GetTypeDifferenceWeight() call ArgumentsHolder.GetTypeDifferenceWeight() if < = = = if == throw new return new int bool ConstructorArgumentValues decl string GenericArgumentsHolder decl Type MethodInfo ArgumentsHolder ObjectWrapper decl IList UnsatisfiedDependencyExceptionData bool Type ConstructorArgumentValues public virtual public virtual decl_stmt ObjectWrapper = new decl_stmt System.Type = decl_stmt bool = decl_stmt Spring.Objects.Factory.Config.ConstructorArgumentValues = decl_stmt Spring.Objects.Factory.Config.ConstructorArgumentValues = new decl_stmt int = if == || == = else = if = call Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(string,Type,object) call Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(string,Type,object) call Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(string,Type,object) call Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(string,Type,object) call Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(string,Type,object) = else = decl_stmt Spring.Core.TypeResolution.GenericArgumentsHolder = new decl_stmt System.Collections.Generic.IList < = decl_stmt bool = == for = < ++ decl_stmt System.Reflection.MethodInfo = if decl_stmt string = call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() if call System.Reflection.MethodInfo.GetGenericArguments() call System.Reflection.MethodInfo.GetGenericArguments() call System.Reflection.MethodInfo.GetGenericArguments() call System.Reflection.MethodInfo.GetGenericArguments() call System.Reflection.MethodInfo.GetGenericArguments() != continue decl_stmt System.Type = new for = < ++ = = call System.Reflection.MethodInfo.MakeGenericMethod(Type) call System.Reflection.MethodInfo.MakeGenericMethod(Type) call System.Reflection.MethodInfo.MakeGenericMethod(Type) call System.Reflection.MethodInfo.MakeGenericMethod(Type) call System.Reflection.MethodInfo.MakeGenericMethod(Type) if == || == decl_stmt System.Type = call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() decl_stmt UnsatisfiedDependencyExceptionData = decl_stmt ArgumentsHolder = out if == = continue else = if new , == continue