Spring.Collections System using System.Collections using System.Diagnostics using System.Reflection using System.Runtime.Serialization using class attribute Spring.Collections.PriorityQueue super super AbstractQueue super ISerializable IComparer int int decl object int Object decl_stmt System.Object = if <= = return public public if < ++ return return public public = int int private private decl_stmt int = decl_stmt int = if < = = new + private private if >= return >> else return >> + << ~ Object int private private if == while > decl_stmt int = >> if <= break decl_stmt System.Object = = = = else while > decl_stmt int = if call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() <= break decl_stmt System.Object = = = = Object int private private decl_stmt int if == while = << <= && > if < && + > ++ if <= break decl_stmt System.Object = = = = else while = << <= && > if < && call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() + > ++ if call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() <= break decl_stmt System.Object = = = = private private for = / >= -- private private return int * / - private private private private foreach in if == throw new ++ = if ! private private Object private private > && <= ++ decl_stmt System.Object = = -- = if <= if == if != return return decl Object int private private decl_stmt int = if < return if == throw new + + while <= if >= / = else <<= decl_stmt System.Object = new = return return public override public override if == throw new ++ ++ if >= = return public override public override if == return return public override public override return public virtual public virtual if == return if == for = <= ++ if == return else for = <= ++ if call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() call IComparer.Compare() == return return public override public override return new public override public override ++ for = <= ++ = = Object public override public override if == return ++ decl_stmt System.Object = = -- = if > return public public if == for = < ++ if == return return for = < ++ if return return public virtual public virtual return decl MemberInfo Type public virtual public virtual decl_stmt System.Type = decl_stmt System.Reflection.MemberInfo = for = < ++ for = <= ++ + public override public override if > throw new if > - throw new if + > throw new + + for = <= ++ ++ public public return return return ==