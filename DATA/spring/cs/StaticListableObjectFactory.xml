Spring.Objects.Factory.Support System using System.Collections using System.Collections.Generic using Spring.Objects.Factory.Config using Spring.Util using class attribute Spring.Objects.Factory.Support.StaticListableObjectFactory super super IListableObjectFactory decl Dictionary return return return public public public < return typeof public public throw new public public public < return typeof object public public decl_stmt object = if is if is throw new try return catch throw new if == throw new return public public public < return typeof public public throw new public public public < return typeof public public throw new object public public decl_stmt object = if ! call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() throw new return public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() bool object public public decl_stmt bool = decl_stmt object = if is = return bool object public public decl_stmt bool = decl_stmt object = if is = ! return object string public public decl_stmt string = decl_stmt object = if == throw new if is && ! return return call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() Type public public decl_stmt System.Type = return == || != && private private return + + public < public < return public public throw new public public throw new decl List public < public < decl_stmt System.Collections.Generic.List < = new < return public < public < throw new decl List Type public < public < decl_stmt System.Collections.Generic.List < = new < foreach in decl_stmt System.Type = if call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return public < public < return public < public < public < < return typeof decl List object Type bool public < public < decl_stmt bool = != && typeof decl_stmt System.Collections.Generic.List < = new < foreach in decl_stmt object = if is && ! if decl_stmt System.Type = if != && call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else if call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() return public < public < public < < return typeof public public return call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() call decl Dictionary.ContainsKey() public < public < return decl Dictionary public < public < public < < decl_stmt System.Collections.Generic.Dictionary < = new < typeof return decl Dictionary public < public < decl_stmt System.Collections.Generic.Dictionary < = new < return object object Type IFactoryObject bool private private decl_stmt bool = != && typeof foreach in decl_stmt object = if is && decl_stmt Spring.Objects.Factory.IFactoryObject = decl_stmt System.Type = if == && || || && != && decl_stmt object = if = else if call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() if = else = decl Dictionary public < public < public < < decl_stmt System.Collections.Generic.Dictionary < = new < typeof return decl IList public public public < decl_stmt System.Collections.Generic.IList < = typeof if == || == throw new typeof if > throw new typeof return public public = public public throw new public public throw new public virtual public virtual