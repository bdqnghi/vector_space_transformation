Spring.Data.NHibernate System using System.Collections using System.Data using NHibernate using NHibernate.Cfg using NUnit.Framework using Rhino.Mocks using Spring.Dao using Spring.Data.Common using Spring.Data.Support using Spring.Support using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.NHibernate.HibernateTransactionManagerTests MockRepository = protected override protected override return public public = new HibernateTransactionManager LocalSessionFactoryObjectStub ITransaction ISessionFactory TransactionTemplate IList ISessionFactory IDbConnection ISession object IDbProvider IQuery public public decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt IQuery = < decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.CreateQuery() call ISession.CreateQuery() call ISession.CreateQuery() call ISession.CreateQuery() call ISession.CreateQuery() call IQuery.List() call IQuery.List() call IQuery.List() call IQuery.List() call IQuery.List() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt LocalSessionFactoryObjectStub = new call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() decl_stmt ISessionFactory = call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() as decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = decl_stmt object = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new == call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction ITransaction TestableHibernateTransactionManager ISessionFactory IDbConnection ISession IDbProvider TransactionTemplate public public decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt TestableHibernateTransactionManager = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction ITransaction TestableHibernateTransactionManager ISessionFactory IDbConnection ISession TransactionTemplate public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt TestableHibernateTransactionManager = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ISession ITransaction TransactionTemplate IList ISessionFactory IDbConnection HibernateTransactionManager object public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) decl_stmt object = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new == call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction ITransaction TestableHibernateTransactionManager ISessionFactory IDbConnection ISession TransactionTemplate public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt TestableHibernateTransactionManager = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction ITransaction TestableHibernateTransactionManager IList ISessionFactory IDbConnection ISession TransactionTemplate public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt System.Data.IDbTransaction = < using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt TestableHibernateTransactionManager = new = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ITransaction ISession ISession TransactionTemplate ISessionFactory IDbConnection HibernateTransactionManager public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ISession ITransaction TransactionTemplate ISessionFactory IDbConnection HibernateTransactionManager public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ISession LocalSessionFactoryObjectStub ISessionFactory TransactionTemplate ISessionFactory HibernateTransactionManager public public decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() = call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() = call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt LocalSessionFactoryObjectStub = new call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() decl_stmt ISessionFactory = call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() LocalSessionFactoryObjectStub ITransaction ISession ISession TransactionTemplate TransactionTemplate HibernateTemplate ISessionFactory IDbConnection HibernateTransactionManager ISessionFactory public public decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ISession.Flush() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt LocalSessionFactoryObjectStub = new call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() call LocalSessionFactoryObjectStub.AfterPropertiesSet() decl_stmt ISessionFactory = call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() call LocalSessionFactoryObjectStub.GetObject() decl_stmt Spring.Data.NHibernate.HibernateTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = decl_stmt Spring.Data.NHibernate.Generic.HibernateTemplate = new = = ! call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new ! call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() public public public public IDbTransaction ITransaction Exception TestableHibernateTransactionManager Exception IList ISessionFactory IDbConnection ISession IDbProvider TransactionTemplate private private region region region region decl_stmt Spring.Data.Common.IDbProvider = new decl_stmt System.Data.IDbConnection = < decl_stmt ISessionFactory = < decl_stmt Spring.Messaging.Ems.Common.ISession = < decl_stmt ITransaction = < decl_stmt System.Data.IDbTransaction = < decl_stmt System.Exception = using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISessionFactory.OpenSession() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() call ITransaction.Commit() decl_stmt System.Exception = new if = new else = new typeof string call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ITransaction.Rollback() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() call ISession.Close() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt TestableHibernateTransactionManager = new = = = decl_stmt Spring.Transaction.Support.TransactionTemplate = new ! ! decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch != - ! ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()