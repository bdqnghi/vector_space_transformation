Spring.Web.Script.Services System using System.Reflection using System.Web using System.Web.Script.Services using Spring.Context using Spring.Util using Spring.Web.Services using Spring.Web.Support using class Spring.Web.Script.Services.ScriptHandlerFactory super super AbstractHandlerFactory super IHttpHandlerFactory Type ConstructorInfo Type FieldInfo IHttpHandlerFactory MethodInfo object Type string WebServiceExporter NamedObjectDefinition IConfigurableApplicationContext string decl object string public override public override decl_stmt string = decl_stmt string = string call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() new decl_stmt object = if == decl_stmt Spring.Context.IConfigurableApplicationContext = decl_stmt string = decl_stmt NamedObjectDefinition = if != decl_stmt System.Type = if call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() typeof decl_stmt Spring.Web.Services.WebServiceExporter = call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() = call Spring.Web.Services.WebServiceExporter.GetExportedType() call Spring.Web.Services.WebServiceExporter.GetExportedType() call Spring.Web.Services.WebServiceExporter.GetExportedType() call Spring.Web.Services.WebServiceExporter.GetExportedType() call Spring.Web.Services.WebServiceExporter.GetExportedType() else = call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() decl_stmt object = call Type.GetCustomAttributes() call Type.GetCustomAttributes() call Type.GetCustomAttributes() call Type.GetCustomAttributes() call Type.GetCustomAttributes() typeof if > = call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) new return public override public override protected override protected override throw new