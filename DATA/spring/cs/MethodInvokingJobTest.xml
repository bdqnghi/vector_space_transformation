Spring.Scheduling.Quartz System using System.Threading using NUnit.Framework using Quartz using Quartz.Impl using Quartz.Impl.Triggers using Quartz.Job using Quartz.Spi using Rhino.Mocks using Spring.Objects.Support using class attribute Spring.Scheduling.Quartz.MethodInvokingJobTest MethodInvokingJob public public = new typeof public typeof public = typeof public typeof public call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() InvocationCountingJob MethodInvoker public public decl_stmt InvocationCountingJob = new decl_stmt Spring.Objects.Support.MethodInvoker = new = = call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() = call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() InvocationCountingJob MethodInvoker IJobExecutionContext public public decl_stmt InvocationCountingJob = new decl_stmt Spring.Objects.Support.MethodInvoker = new = = call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() = decl_stmt IJobExecutionContext = call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() InvocationCountingJob MethodInvoker public public decl_stmt InvocationCountingJob = new decl_stmt Spring.Objects.Support.MethodInvoker = new = = call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() = try call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() catch InvocationCountingJob MethodInvoker public public decl_stmt InvocationCountingJob = new decl_stmt Spring.Objects.Support.MethodInvoker = new = = call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() call Spring.Objects.Support.MethodInvoker.Prepare() = call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() call MethodInvokingJob.Execute() MockRepository IJobExecutionContext IScheduler private static private static decl_stmt MockRepository = new decl_stmt IScheduler = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof decl_stmt IJobExecutionContext = new return IJobDetail IOperableTrigger TriggerFiredBundle private static private static decl_stmt IJobDetail = new typeof decl_stmt IOperableTrigger = new decl_stmt TriggerFiredBundle = new return