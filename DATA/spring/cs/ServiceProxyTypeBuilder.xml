Spring.ServiceModel.Support System using System.Collections using System.Reflection using System.Reflection.Emit using Spring.Objects.Factory using Spring.Proxy using Spring.Util using class Spring.ServiceModel.Support.ServiceProxyTypeBuilder super super CompositionProxyTypeBuilder Hashtable IObjectFactory FieldBuilder MethodInfo bool string Type FieldInfo public override public override decl_stmt System.Type = if lock = if == = = else = decl_stmt System.Reflection.FieldInfo = call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) call System.Type.GetField(String) | call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) call System.Reflection.FieldInfo.SetValue(Object,Object) return MethodAttributes ILGenerator ConstructorBuilder protected override protected override decl_stmt MethodAttributes = | | | decl_stmt System.Reflection.Emit.ConstructorBuilder = decl_stmt System.Reflection.Emit.ILGenerator = call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type) call System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type) call System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type) call System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type) call System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) TypeBuilder protected override protected override decl_stmt TypeBuilder = = call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() call TypeBuilder.DefineField() typeof | | return