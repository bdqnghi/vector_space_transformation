Spring.Context.Support System using NUnit.Framework using Rhino.Mocks using Spring.Core using Spring.Core.IO using Spring.Objects using Spring.Objects.Events using Spring.Objects.Factory using Spring.Objects.Factory.Config using Spring.Objects.Factory.Support using Spring.Objects.Factory.Xml using class attribute Spring.Context.Support.AbstractApplicationContextTests MockApplicationContext public public = = = = new public public call MockApplicationContext.Dispose() call MockApplicationContext.Dispose() call MockApplicationContext.Dispose() call MockApplicationContext.Dispose() call MockApplicationContext.Dispose() = public public ApplicationException MockApplicationContext bool public public decl_stmt MockApplicationContext = new decl_stmt bool = += throw new += = decl_stmt ApplicationException = try call MockApplicationContext.PublishEvent() call MockApplicationContext.PublishEvent() call MockApplicationContext.PublishEvent() call MockApplicationContext.PublishEvent() call MockApplicationContext.PublishEvent() new catch = MockRepository IMessageSource MockApplicationContext MockApplicationContext public public decl_stmt MockRepository = new decl_stmt Spring.Context.IMessageSource = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof decl_stmt MockApplicationContext = new call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() decl_stmt MockApplicationContext = new call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() MockRepository IEventRegistry MockApplicationContext MockApplicationContext public public decl_stmt MockRepository = new decl_stmt Spring.Objects.Events.IEventRegistry = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof decl_stmt MockApplicationContext = new call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() call MockApplicationContext.ObjectFactory() decl_stmt MockApplicationContext = new call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() object RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = new typeof call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt object = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() is + + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() + object RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = new typeof call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt object = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() is + + call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() + MockContextAwareObject object public public call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt Spring.Context.MockContextAwareObject = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() == decl_stmt object = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() == call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() MockContextAwareObject MockContextAwareObject public public call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt Spring.Context.MockContextAwareObject = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() == ! call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() call MockApplicationContext.IsSingleton() decl_stmt Spring.Context.MockContextAwareObject = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() != MockContextAwareObject public public call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.RegisterSingleton() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt Spring.Context.MockContextAwareObject = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() MockContextAwareObject public public call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.RegisterObject() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() call MockApplicationContext.Refresh() decl_stmt Spring.Context.MockContextAwareObject = call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() call MockApplicationContext.GetObject() public public IApplicationContext public public decl_stmt Spring.Context.IApplicationContext = new = new if return = ++