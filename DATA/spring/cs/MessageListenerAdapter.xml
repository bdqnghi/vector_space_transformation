Spring.Messaging.Listener System using System.Collections using System.Collections.Generic using System.Messaging using Common.Logging using Spring.Context using Spring.Expressions using Spring.Messaging.Core using Spring.Messaging.Support using Spring.Messaging.Support.Converters using Spring.Objects.Factory using Spring.Reflection.Dynamic using class Spring.Messaging.Listener.MessageListenerAdapter super super IMessageListener super IApplicationContextAware super IInitializingObject IApplicationContext IMessageQueueFactory object string string string IExpression MessageQueueTemplate string ILog return = return = = + return = DefaultMessageQueueFactory public public if == decl_stmt Spring.Messaging.Core.DefaultMessageQueueFactory = new = = if == = if == = new = call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() call Spring.Messaging.Core.MessageQueueTemplate.AfterPropertiesSet() return = return = return = if != return call Spring.Messaging.Core.IMessageQueueFactory.CreateMessageQueue(string) call Spring.Messaging.Core.IMessageQueueFactory.CreateMessageQueue(string) call Spring.Messaging.Core.IMessageQueueFactory.CreateMessageQueue(string) call Spring.Messaging.Core.IMessageQueueFactory.CreateMessageQueue(string) call Spring.Messaging.Core.IMessageQueueFactory.CreateMessageQueue(string) else return return = return call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() call IMessageQueueFactory.CreateMessageConverter() = object string decl object object public virtual public virtual decl_stmt object = decl_stmt string = decl_stmt object = decl_stmt object = if != else call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() protected virtual protected virtual return protected virtual protected virtual return new decl IDictionary protected virtual protected virtual decl_stmt System.Collections.Generic.IDictionary < = new < = if != return + return call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) call Spring.Expressions.IExpression.GetValue(object) protected virtual protected virtual = + IMessageConverter protected virtual protected virtual decl_stmt Spring.Messaging.Support.Converters.IMessageConverter = if != return call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) return MessageQueue Message protected virtual protected virtual if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + decl_stmt System.ServiceModel.Channels.Message = decl_stmt MessageQueue = protected virtual protected virtual if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + call Spring.Messaging.Core.MessageQueueTemplate.Send(MessageQueue,Message) call Spring.Messaging.Core.MessageQueueTemplate.Send(MessageQueue,Message) call Spring.Messaging.Core.MessageQueueTemplate.Send(MessageQueue,Message) call Spring.Messaging.Core.MessageQueueTemplate.Send(MessageQueue,Message) call Spring.Messaging.Core.MessageQueueTemplate.Send(MessageQueue,Message) Message IMessageConverter protected virtual protected virtual decl_stmt Spring.Messaging.Support.Converters.IMessageConverter = if != if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() return call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) else return call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) else decl_stmt System.ServiceModel.Channels.Message = as if == throw new + + return protected virtual protected virtual = MessageQueue protected virtual protected virtual decl_stmt MessageQueue = if == = if == throw new + return