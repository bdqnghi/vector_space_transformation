Spring.Objects.Factory.Support System using System.Collections using System.Collections.Specialized using System.IO using System.Resources using Spring.Core.IO using Spring.Objects.Factory.Config using Spring.Util using class Spring.Objects.Factory.Support.PropertiesObjectDefinitionReader super super AbstractObjectDefinitionReader string string string string string IObjectDefinitionFactory string string string string return = return = public override public override return Stream Properties public public decl_stmt Spring.Util.Properties = new try decl_stmt System.IO.Stream = try call Spring.Util.Properties.Load(IDictionary,Stream) call Spring.Util.Properties.Load(IDictionary,Stream) call Spring.Util.Properties.Load(IDictionary,Stream) call Spring.Util.Properties.Load(IDictionary,Stream) call Spring.Util.Properties.Load(IDictionary,Stream) finally call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() return catch throw new + public public return IDictionary public public decl_stmt System.Collections.Generic.IDictionary = new foreach in call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) return public public return IDictionary public public decl_stmt System.Collections.Generic.IDictionary = new foreach in call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) return public public return string int int string public public if == = decl_stmt int = foreach in if decl_stmt string = decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() if != - decl_stmt string = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() region region if + + endregion if ! ++ + else region region if + + endregion return bool bool string object string MutablePropertyValues IConfigurableObjectDefinition string string string string protected protected decl_stmt string = decl_stmt string = decl_stmt bool = decl_stmt bool = decl_stmt Spring.Objects.MutablePropertyValues = new foreach in if + decl_stmt string = + if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() = string else if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() decl_stmt string = string = == || call object.Equals() call object.Equals() call object.Equals() call object.Equals() call object.Equals() else if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() decl_stmt string = string = call object.Equals() call object.Equals() call object.Equals() call object.Equals() call object.Equals() else if call string.Equals() call string.Equals() call string.Equals() call string.Equals() call string.Equals() = string else if call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() call string.EndsWith() = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() - decl_stmt string = decl_stmt object = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new else decl_stmt object = if is decl_stmt string = string if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() decl_stmt string = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() if call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() call string.StartsWith() = else = new call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) new if call Spring.Objects.MutablePropertyValues.ToString() call Spring.Objects.MutablePropertyValues.ToString() call Spring.Objects.MutablePropertyValues.ToString() call Spring.Objects.MutablePropertyValues.ToString() call Spring.Objects.MutablePropertyValues.ToString() if == = if == && == throw new try decl_stmt Spring.Objects.Factory.Support.IConfigurableObjectDefinition = = = = catch throw new + +