Spring.Web.Services System using System.Reflection using System.Security.Permissions using System.Web using System.Web.UI using System.Web.Services using Spring.Context using Spring.Context.Support using Spring.Util using Spring.Web.Support using System.Web.Compilation using System.CodeDom.Compiler using System.Collections using class attribute Spring.Web.Services.WebServiceHandlerFactory super super IHttpHandlerFactory MethodInfo decl NamedObjectDefinition Type decl object var decl AbstractHandlerFactory IConfigurableApplicationContext var decl object var var string var new decl_stmt Spring.Context.IConfigurableApplicationContext = as if == throw new decl_stmt string = decl_stmt NamedObjectDefinition = decl_stmt System.Type = if != if ! if call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() call IConfigurableApplicationContext.IsTypeMatch() typeof decl_stmt Spring.Web.Services.WebServiceExporter = call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() call IConfigurableApplicationContext.GetObject() = call Type.GetExportedType() call Type.GetExportedType() call Type.GetExportedType() call Type.GetExportedType() call Type.GetExportedType() else = call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() decl_stmt object = call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() typeof if == = else = call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() call IConfigurableApplicationContext.GetType() decl_stmt object = call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() call decl NamedObjectDefinition.GetCustomAttributes() typeof if == = endif if == = if ! return call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() new else decl_stmt var = typeof | decl_stmt var = call decl object.GetValue() call decl object.GetValue() call decl object.GetValue() call decl object.GetValue() call decl object.GetValue() if ! call var.Contains() call var.Contains() call var.Contains() call var.Contains() call var.Contains() decl_stmt var = decl_stmt var = call var.GetConstructor() call var.GetConstructor() call var.GetConstructor() call var.GetConstructor() call var.GetConstructor() new typeof typeof typeof decl_stmt var = new decl_stmt var = call var.Invoke() call var.Invoke() call var.Invoke() call var.Invoke() call var.Invoke() new = return endif