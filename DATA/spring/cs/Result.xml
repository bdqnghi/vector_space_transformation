Spring.Web.Support System using System.Collections using System.Text using System.Web using Spring.Collections using Spring.Expressions using Spring.Util using class attribute Spring.Web.Support.Result super super IResult string ResultMode ResultMode IDictionary return = return = return = return == return == public virtual public virtual switch case case break case case break default: throw new HttpContext protected virtual protected virtual decl_stmt System.Web.HttpContext = call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() call HttpContext.Server() string protected protected if != && > foreach in decl_stmt string = if = else = protected virtual protected virtual string object object IDictionary public virtual public virtual decl_stmt string = decl_stmt System.Collections.Generic.IDictionary = if != && > = new foreach in decl_stmt object = decl_stmt object = = return StringBuilder char protected virtual protected virtual decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != && > decl_stmt char = foreach in call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) = = return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) protected virtual protected virtual return protected virtual protected virtual return private static private static return || && protected static protected static if return - return string int private private decl_stmt int = if > decl_stmt string = return + return protected virtual protected virtual try if = typeof catch throw new protected protected return decl string string string int private private if = new decl_stmt string = foreach in decl_stmt int = if > decl_stmt string = decl_stmt string = + =