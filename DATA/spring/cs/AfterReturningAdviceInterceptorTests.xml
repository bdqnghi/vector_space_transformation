Spring.Aop.Framework.Adapter System using AopAlliance.Intercept using NUnit.Framework using Rhino.Mocks using Spring.Util using class attribute Spring.Aop.Framework.Adapter.AfterReturningAdviceInterceptorTests typeof public typeof public new IMethodInvocation IAfterReturningAdvice AfterReturningAdviceInterceptor MockRepository public public decl_stmt MockRepository = new decl_stmt AopAlliance.Intercept.IMethodInvocation = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt Spring.Aop.IAfterReturningAdvice = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() new typeof object new new call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() try decl_stmt Spring.Aop.Framework.Adapter.AfterReturningAdviceInterceptor = new call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMethodInvocation IAfterReturningAdvice AfterReturningAdviceInterceptor MockRepository public public decl_stmt MockRepository = new decl_stmt AopAlliance.Intercept.IMethodInvocation = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt Spring.Aop.IAfterReturningAdvice = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() call IAfterReturningAdvice.AfterReturning() new typeof object new new call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call IMethodInvocation.Proceed() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() try decl_stmt Spring.Aop.Framework.Adapter.AfterReturningAdviceInterceptor = new call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() call AfterReturningAdviceInterceptor.Invoke() catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()