Spring.Remoting System using System.Runtime.Remoting using Spring.Context using Spring.Core using Spring.Objects using Spring.Objects.Factory using Spring.Objects.Factory.Support using Spring.Remoting.Support using Spring.Util using class Spring.Remoting.CaoExporter super super ConfigurableLifetime super IApplicationContextAware super IObjectFactoryAware super IInitializingObject super IDisposable string decl Common decl ILog decl string IApplicationContext decl Logging return = return = = = public public public public private private if == throw new private private = new region region if call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() endregion public public = call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() return RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = call decl string.GetMergedObjectDefinition() call decl string.GetMergedObjectDefinition() call decl string.GetMergedObjectDefinition() call decl string.GetMergedObjectDefinition() call decl string.GetMergedObjectDefinition() if typeof throw new = call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() call decl string.GetObject() return public override public override return