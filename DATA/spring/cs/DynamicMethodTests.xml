Spring.Reflection.Dynamic System using System.Collections using System.Diagnostics using System.Reflection using System.Threading using NUnit.Framework using Spring.Context.Support using Spring.Util using class attribute Spring.Reflection.Dynamic.DynamicMethodTests Inventor DateTime Society Inventor public public = new new = new = = new new = new = = = new call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() call Society.Members() = = new public public private private return public public public public new IDynamicMethod MethodInfo private private decl_stmt System.Reflection.MethodInfo = decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() public public new MethodInfo IDynamicMethod object private private decl_stmt System.Reflection.MethodInfo = | decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = try decl_stmt object = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() if else catch IDynamicMethod IDynamicMethod ArrayList MethodTarget IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new decl_stmt MethodTarget = new decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new new decl_stmt System.Collections.ArrayList = new new decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof bool call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new bool call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new bool call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new public public return IDynamicMethod bool public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt bool = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new new new DateTime IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt DateTime = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() DateTime IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt DateTime = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() try call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() catch try call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() catch object IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt object = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new try call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new catch try call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() new catch Type object private private decl_stmt object = decl_stmt System.Type = typeof double double int MethodTarget IDynamicMethod decl object IDynamicMethod RefOutTestObject string IDynamicMethod public public decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt MethodTarget = new decl_stmt object = new call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof = new call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof decl_stmt RefOutTestObject = new = new call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() decl_stmt int = decl_stmt string call MethodTarget.DoItCaller() call MethodTarget.DoItCaller() call MethodTarget.DoItCaller() call MethodTarget.DoItCaller() call MethodTarget.DoItCaller() ref out MethodInfo object IDynamicMethod decl object int public public decl_stmt int = decl_stmt object = = for = < ++ = call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() call Inventor.GetAge() = = decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = typeof for = < ++ decl_stmt object = new = call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() = = decl_stmt System.Reflection.MethodInfo = typeof for = < ++ decl_stmt object = new = call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() = return - / private private / public static public static return public static public static return public ? public ? ? return public static ? public static ? ? return