Spring.Web.UI.Controls System using System.Reflection using System.Web.UI using Common.Logging using class Spring.Web.UI.Controls.ContentReplacer super super Control string FieldInfo PropertyInfo ILog return = Control Control RenderMethod protected override protected override if ! return decl_stmt System.Web.UI.Control = != : decl_stmt System.Web.UI.Control = call System.Web.UI.Control.FindControl(String) call System.Web.UI.Control.FindControl(String) call System.Web.UI.Control.FindControl(String) call System.Web.UI.Control.FindControl(String) call System.Web.UI.Control.FindControl(String) if != call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt RenderMethod = new if == = new call System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod) call System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod) call System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod) call System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod) call System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod) else throw new private private if foreach in private private object RenderMethod private private decl_stmt object = call System.Reflection.PropertyInfo.GetValue(Object) call System.Reflection.PropertyInfo.GetValue(Object) call System.Reflection.PropertyInfo.GetValue(Object) call System.Reflection.PropertyInfo.GetValue(Object) call System.Reflection.PropertyInfo.GetValue(Object) decl_stmt RenderMethod = call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() return