Spring.Template.Velocity.Config System using System.Collections using System.Collections.Generic using System.Xml using NVelocity.Runtime using Spring.Core.TypeResolution using Spring.Objects using Spring.Objects.Factory.Config using Spring.Objects.Factory.Support using Spring.Objects.Factory.Xml using Spring.Util using class attribute Spring.Template.Velocity.Config.TemplateNamespaceParser super super ObjectsNamespaceParser string IConfigurableObjectDefinition string public override public override decl_stmt string = decl_stmt Spring.Objects.Factory.Support.IConfigurableObjectDefinition = if ! = return private private switch case return default: throw new XmlNodeList string string string MutablePropertyValues IConfigurableObjectDefinition string private private decl_stmt string = decl_stmt Spring.Objects.Factory.Support.IConfigurableObjectDefinition = decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt Spring.Objects.MutablePropertyValues = new if call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) if call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) if call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) decl_stmt System.Xml.XmlNodeList = if > = return decl IDictionary private private decl_stmt System.Collections.Generic.IDictionary < = new < foreach in switch case break case break if > string XmlNodeList string XmlElement string private private < decl_stmt string = decl_stmt string = decl_stmt string = if ! decl_stmt System.Xml.XmlNodeList = switch case break case break case break case decl_stmt System.Xml.XmlElement = call XmlNodeList.Item() call XmlNodeList.Item() call XmlNodeList.Item() call XmlNodeList.Item() call XmlNodeList.Item() break default: throw new private private < private private < if != + + decl IList private private < decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl IList private private < decl_stmt System.Collections.Generic.IList < = new < foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() decl IList string private private decl_stmt System.Collections.Generic.IList < = new < foreach in decl_stmt string = call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() string string string string private private < decl_stmt string = decl_stmt string = decl_stmt string = decl_stmt string = call string.Replace() call string.Replace() call string.Replace() call string.Replace() call string.Replace() IDictionary private private < decl_stmt System.Collections.Generic.IDictionary = foreach in string private private decl_stmt string = if return + return public static public static return + + + + XmlNamespaceManager protected override protected override decl_stmt System.Xml.XmlNamespaceManager = new new call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) call System.Xml.XmlNamespaceManager.AddNamespace(string,string) return + + private private return :