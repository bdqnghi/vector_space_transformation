Spring.Objects.Factory.Config System using NUnit.Framework using Rhino.Mocks using class attribute Spring.Objects.Factory.Config.ObjectReferenceFactoryObjectTests MockRepository IObjectFactory public public = new = < ObjectReferenceFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = ObjectReferenceFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = = ObjectReferenceFactoryObject public public call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = try = + + catch call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ObjectReferenceFactoryObject public public call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = = call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ObjectReferenceFactoryObject public public call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = = call Spring.Objects.Factory.Config.ObjectReferenceFactoryObject.GetObject() call Spring.Objects.Factory.Config.ObjectReferenceFactoryObject.GetObject() call Spring.Objects.Factory.Config.ObjectReferenceFactoryObject.GetObject() call Spring.Objects.Factory.Config.ObjectReferenceFactoryObject.GetObject() call Spring.Objects.Factory.Config.ObjectReferenceFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() ObjectReferenceFactoryObject public public call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.GetType(string) call Spring.Objects.Factory.IObjectFactory.GetType(string) call Spring.Objects.Factory.IObjectFactory.GetType(string) call Spring.Objects.Factory.IObjectFactory.GetType(string) call Spring.Objects.Factory.IObjectFactory.GetType(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.ObjectReferenceFactoryObject = new = = call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()