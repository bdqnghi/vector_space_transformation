Spring.Aop.Framework System using System.Collections using System.Reflection using Spring.Util using Spring.Reflection.Dynamic using AopAlliance.Intercept using class attribute Spring.Aop.Framework.DynamicMethodInvocation super super AbstractMethodInvocation MethodInfo return = MethodInfo IDynamicMethod protected override protected override decl_stmt System.Reflection.MethodInfo = ?? decl_stmt Spring.Reflection.Dynamic.IDynamicMethod = new try return call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() call IDynamicMethod.Invoke() catch throw var protected override protected override decl_stmt var = new = + return