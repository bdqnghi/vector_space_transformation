Spring.Data.Generic System using System.Collections.Generic using System.Data using System.Data.Common using System.Data.SqlClient using NUnit.Framework using Spring.Context using Spring.Context.Support using Spring.Objects using class attribute Spring.Data.Generic.GenericAdoTemplateTests AdoTemplate IApplicationContext public public decl_stmt Spring.Context.IApplicationContext = new = as private private call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) call Spring.Data.Core.AdoTemplate.ExecuteScalar(CommandType,string,string,Enum,int,object) public public private private call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) call Spring.Data.Core.AdoTemplate.ExecuteNonQuery(CommandType,string) int DbParameter string public public decl_stmt string = decl_stmt int = < = decl_stmt Spring.Data.Common.DbParameter = = = return int int string SqlCommand public public decl_stmt string = decl_stmt int = < decl_stmt System.Data.SqlClient.SqlCommand = as = call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() call SqlCommand.Parameters() return int decl IList TestObjectDao public public decl_stmt Spring.Data.Generic.TestObjectDao = new = decl_stmt System.Collections.Generic.IList < = call Spring.Data.Generic.TestObjectDao.FindAll() call Spring.Data.Generic.TestObjectDao.FindAll() call Spring.Data.Generic.TestObjectDao.FindAll() call Spring.Data.Generic.TestObjectDao.FindAll() call Spring.Data.Generic.TestObjectDao.FindAll() IDbCommandCreator decl IList IDbCommandCreatorFactory public public decl_stmt Spring.Data.IDbCommandCreatorFactory = new decl_stmt Spring.Data.IDbCommandCreator = call Spring.Data.IDbCommandCreatorFactory.NewDbCommandCreator(IDictionary) call Spring.Data.IDbCommandCreatorFactory.NewDbCommandCreator(IDictionary) call Spring.Data.IDbCommandCreatorFactory.NewDbCommandCreator(IDictionary) call Spring.Data.IDbCommandCreatorFactory.NewDbCommandCreator(IDictionary) call Spring.Data.IDbCommandCreatorFactory.NewDbCommandCreator(IDictionary) decl_stmt System.Collections.Generic.IList < = call Spring.Data.Core.AdoTemplate.QueryWithCommandCreator(IDbCommandCreator,IResultSetExtractor,IDictionary) call Spring.Data.Core.AdoTemplate.QueryWithCommandCreator(IDbCommandCreator,IResultSetExtractor,IDictionary) call Spring.Data.Core.AdoTemplate.QueryWithCommandCreator(IDbCommandCreator,IResultSetExtractor,IDictionary) call Spring.Data.Core.AdoTemplate.QueryWithCommandCreator(IDbCommandCreator,IResultSetExtractor,IDictionary) call Spring.Data.Core.AdoTemplate.QueryWithCommandCreator(IDbCommandCreator,IResultSetExtractor,IDictionary) new < < foreach in