Spring.Objects.Factory.Config System using Common.Logging using NUnit.Framework using class attribute Spring.Objects.Factory.Config.LogFactoryObjectTests LogFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() LogFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new = LogFactoryObject typeof public typeof public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new = typeof public typeof public new typeof public typeof public new LogFactoryObject public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new = LogFactoryObject ILog public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new = decl_stmt ILog = call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() as LogFactoryObject ILog ILog public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new = decl_stmt ILog = call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() as decl_stmt ILog = call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() call Spring.Objects.Factory.Config.LogFactoryObject.GetObject() as == LogFactoryObject typeof = public typeof = public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() LogFactoryObject public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() call Spring.Objects.Factory.Config.LogFactoryObject.AfterPropertiesSet() LogFactoryObject public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new LogFactoryObject public public decl_stmt Spring.Objects.Factory.Config.LogFactoryObject = new typeof