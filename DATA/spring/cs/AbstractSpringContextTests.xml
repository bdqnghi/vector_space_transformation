Spring.Testing.NUnit System using System.Collections using Common.Logging using Spring.Context using Spring.Context.Support using Spring.Util using class Spring.Testing.NUnit.AbstractSpringContextTests ILog bool IDictionary public static public static foreach in call System.Collections.Generic.IDictionary.Clear() call System.Collections.Generic.IDictionary.Clear() call System.Collections.Generic.IDictionary.Clear() call System.Collections.Generic.IDictionary.Clear() call System.Collections.Generic.IDictionary.Clear() return = protected protected object IConfigurableApplicationContext String protected protected decl_stmt System.String = decl_stmt Spring.Context.IConfigurableApplicationContext = call System.Collections.Generic.IDictionary.Remove(Object) call System.Collections.Generic.IDictionary.Remove(Object) call System.Collections.Generic.IDictionary.Remove(Object) call System.Collections.Generic.IDictionary.Remove(Object) call System.Collections.Generic.IDictionary.Remove(Object) if != call IConfigurableApplicationContext.Dispose() call IConfigurableApplicationContext.Dispose() call IConfigurableApplicationContext.Dispose() call IConfigurableApplicationContext.Dispose() call IConfigurableApplicationContext.Dispose() string protected protected decl_stmt string = return call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) protected virtual protected virtual if == return if is return else return string public public decl_stmt string = call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) if && ! IConfigurableApplicationContext string protected protected decl_stmt string = decl_stmt Spring.Context.IConfigurableApplicationContext = if == if is = else = return protected virtual protected virtual if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + return new protected virtual protected virtual throw new