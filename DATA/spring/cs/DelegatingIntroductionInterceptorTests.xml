Spring.Aop.Support System using NUnit.Framework using AopAlliance.Aop using Rhino.Mocks using Spring.Aop.Framework using Spring.Objects using class attribute Spring.Aop.Support.DelegatingIntroductionInterceptorTests DateTime DefaultIntroductionAdvisor typeof public typeof public decl_stmt Spring.Aop.Support.DefaultIntroductionAdvisor = new typeof TestObject DefaultIntroductionAdvisor ProxyFactory ITimeStamped ITimeStampedIntroduction public public decl_stmt Spring.Data.NHibernate.TestObject = new ! is decl_stmt Spring.Data.NHibernate.Bytecode.ProxyFactory = new decl_stmt ITimeStampedIntroduction = < call ITimeStampedIntroduction.Stub() call ITimeStampedIntroduction.Stub() call ITimeStampedIntroduction.Stub() call ITimeStampedIntroduction.Stub() call ITimeStampedIntroduction.Stub() decl_stmt Spring.Aop.Support.DefaultIntroductionAdvisor = new call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() decl_stmt Spring.Aop.Framework.ITimeStamped = call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) == ProxyFactory ISubTimeStampedIntroduction TestObject object DefaultIntroductionAdvisor ISubTimeStamped public public decl_stmt Spring.Data.NHibernate.TestObject = new ! is decl_stmt Spring.Data.NHibernate.Bytecode.ProxyFactory = new decl_stmt ISubTimeStampedIntroduction = < call ISubTimeStampedIntroduction.Stub() call ISubTimeStampedIntroduction.Stub() call ISubTimeStampedIntroduction.Stub() call ISubTimeStampedIntroduction.Stub() call ISubTimeStampedIntroduction.Stub() decl_stmt Spring.Aop.Support.DefaultIntroductionAdvisor = new call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() decl_stmt object = call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) decl_stmt ISubTimeStamped = == TestObject ProxyFactory ITimeStamped ISubTimeStamped public public decl_stmt Spring.Data.NHibernate.TestObject = new ! is decl_stmt Spring.Data.NHibernate.Bytecode.ProxyFactory = new decl_stmt ISubTimeStamped = < call ISubTimeStamped.Stub() call ISubTimeStamped.Stub() call ISubTimeStamped.Stub() call ISubTimeStamped.Stub() call ISubTimeStamped.Stub() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() new typeof decl_stmt Spring.Aop.Framework.ITimeStamped = call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) ! is == public public return IIntroductionAdvisor int ProxyFactory TestObject ITimeStamped public public decl_stmt Spring.Aop.IIntroductionAdvisor = new new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.Bytecode.ProxyFactory = new call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() decl_stmt Spring.Aop.Framework.ITimeStamped = call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) == decl_stmt int =