Spring.Context.Support System using System.Collections using System.Collections.Generic using System.Diagnostics using System.Globalization using Common.Logging using Spring.Context.Events using Spring.Core using Spring.Core.IO using Spring.Objects using Spring.Objects.Events using Spring.Objects.Events.Support using Spring.Objects.Factory using Spring.Objects.Factory.Config using Spring.Objects.Factory.Support using Spring.Objects.Support using Spring.Util using class Spring.Context.Support.AbstractApplicationContext super super ConfigurableResourceLoader super IConfigurableApplicationContext super IObjectDefinitionRegistry string string string bool bool IApplicationContext DateTime decl IList long bool bool EventRaiser decl IList string string IMessageSource IEventRegistry ILog private private if || || throw new return protected protected call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() public virtual public virtual = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion new = return = return - / return if == throw new + + return if == throw new + + return IConfigurableApplicationContext protected protected decl_stmt Spring.Context.IConfigurableApplicationContext = as if != return else return protected virtual protected virtual IEventExceptionsCollector Exception Delegate protected virtual protected virtual decl_stmt Spring.Util.IEventExceptionsCollector = call Spring.Util.EventRaiser.Raise(Delegate,object) call Spring.Util.EventRaiser.Raise(Delegate,object) call Spring.Util.EventRaiser.Raise(Delegate,object) call Spring.Util.EventRaiser.Raise(Delegate,object) call Spring.Util.EventRaiser.Raise(Delegate,object) if decl_stmt System.Delegate = decl_stmt System.Exception = throw new protected virtual protected virtual return new protected virtual protected virtual protected virtual protected virtual protected virtual protected virtual protected virtual protected virtual new string decl IDictionary decl List decl List decl IList IObjectDefinitionRegistryPostProcessor decl List decl List decl HashSet decl List IObjectDefinitionRegistry decl List decl List decl List decl List private private decl_stmt System.Collections.Generic.HashSet < = new < if is decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionRegistry = decl_stmt System.Collections.Generic.List < = new < decl_stmt System.Collections.Generic.List < = new < foreach in decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionRegistryPostProcessor = as if != call IObjectDefinitionRegistryPostProcessor.PostProcessObjectDefinitionRegistry() call IObjectDefinitionRegistryPostProcessor.PostProcessObjectDefinitionRegistry() call IObjectDefinitionRegistryPostProcessor.PostProcessObjectDefinitionRegistry() call IObjectDefinitionRegistryPostProcessor.PostProcessObjectDefinitionRegistry() call IObjectDefinitionRegistryPostProcessor.PostProcessObjectDefinitionRegistry() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() decl_stmt System.Collections.Generic.IDictionary < = < decl_stmt System.Collections.Generic.List < = new < call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() new < foreach in foreach < in call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() call decl HashSet.Add() else foreach in decl_stmt System.Collections.Generic.List < = new < decl_stmt System.Collections.Generic.IList < = typeof call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() decl_stmt System.Collections.Generic.List < = new < decl_stmt System.Collections.Generic.List < = new < decl_stmt System.Collections.Generic.List < = new < for = < ++ decl_stmt string = if call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() call decl HashSet.Contains() else if typeof call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() < else if typeof call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() decl_stmt System.Collections.Generic.List < = new < foreach in call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() < call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() call decl List.Sort() new < decl_stmt System.Collections.Generic.List < = new < foreach in call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() < region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl IList protected virtual protected virtual < < new < decl_stmt System.Collections.Generic.IList < = typeof foreach in if ! if typeof < new < private private foreach in decl List decl IDictionary private private decl_stmt System.Collections.Generic.IDictionary < = < decl_stmt System.Collections.Generic.List < = new < foreach in if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() int int private private decl_stmt int = typeof decl_stmt int = + + decl ICollection object private private if decl_stmt object = if is = region region call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion else = new region region if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + endregion else = new region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt System.Collections.Generic.ICollection < = < foreach in = AbstractApplicationContext protected virtual protected virtual decl_stmt Spring.Context.Support.AbstractApplicationContext = as return == : IHierarchicalMessageSource IMessageSource object private private if decl_stmt object = if is = if != decl_stmt Spring.Context.IHierarchicalMessageSource = as if != decl_stmt Spring.Context.IMessageSource = = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion else = new region region if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + endregion else if != = new region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion else = new region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl ICollection private private decl_stmt System.Collections.Generic.ICollection < = < foreach in return public public call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() IConfigurableListableObjectFactory public public lock = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion decl_stmt Spring.Objects.Factory.Config.IConfigurableListableObjectFactory = region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() == : endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion call IConfigurableListableObjectFactory.PreInstantiateSingletons() call IConfigurableListableObjectFactory.PreInstantiateSingletons() call IConfigurableListableObjectFactory.PreInstantiateSingletons() call IConfigurableListableObjectFactory.PreInstantiateSingletons() call IConfigurableListableObjectFactory.PreInstantiateSingletons() region region if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() endregion private private typeof typeof typeof typeof typeof typeof typeof protected protected for = < ++ return = decl IDictionary ILifecycle public public = decl_stmt System.Collections.Generic.IDictionary < = foreach < in decl_stmt Spring.Context.ILifecycle = if != if ! call Spring.Context.ILifecycle.Start() call Spring.Context.ILifecycle.Start() call Spring.Context.ILifecycle.Start() call Spring.Context.ILifecycle.Start() call Spring.Context.ILifecycle.Start() = decl IDictionary ILifecycle public public = decl_stmt System.Collections.Generic.IDictionary < = foreach < in decl_stmt Spring.Context.ILifecycle = if != if call ILifecycle.Stop() call ILifecycle.Stop() call ILifecycle.Stop() call ILifecycle.Stop() call ILifecycle.Stop() = decl IDictionary ILifecycle decl_stmt System.Collections.Generic.IDictionary < = foreach < in decl_stmt Spring.Context.ILifecycle = if != if ! return return decl IDictionary decl IList IConfigurableListableObjectFactory object decl_stmt Spring.Objects.Factory.Config.IConfigurableListableObjectFactory = decl_stmt System.Collections.Generic.IList < = decl_stmt System.Collections.Generic.IDictionary < = new < foreach in decl_stmt object = call IConfigurableListableObjectFactory.GetSingleton() call IConfigurableListableObjectFactory.GetSingleton() call IConfigurableListableObjectFactory.GetSingleton() call IConfigurableListableObjectFactory.GetSingleton() call IConfigurableListableObjectFactory.GetSingleton() if is = return return return = public < public < return public < public < public < < return typeof public < public < return public < public < public < < return typeof public < public < return public < public < return public virtual public virtual return public public return public < public < return public < public < public < < return < public < public < return public < public < public < < return < decl IList public public public < decl_stmt System.Collections.Generic.IList < = typeof if == || == throw new typeof if > throw new typeof return return public public return return public public return public < public < return public public public < return typeof public public return public public public < return typeof public public return public public return public public public < return typeof public public return public public public < return typeof public public return public public return public public return public public return public public return public public return public public return return public public return public virtual public virtual return public virtual public virtual public virtual public virtual public public params params params return public public params params params return public public return public public params params params return public public return public public return return return public public return public public return public public public public call Spring.Objects.Events.IEventRegistry.PublishEvents(object) call Spring.Objects.Events.IEventRegistry.PublishEvents(object) call Spring.Objects.Events.IEventRegistry.PublishEvents(object) call Spring.Objects.Events.IEventRegistry.PublishEvents(object) call Spring.Objects.Events.IEventRegistry.PublishEvents(object) public public call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) public public call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) call Spring.Objects.Events.IEventRegistry.Subscribe(object) public public call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) public public call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) call Spring.Objects.Events.IEventRegistry.Unsubscribe(object) public public region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion if != public public = = public public return public public if < region region if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() + endregion return return