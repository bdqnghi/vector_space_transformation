Spring.Objects.Support System using System.Collections using System.Globalization using Common.Logging using Spring.Core using Spring.Util using class Spring.Objects.Support.PropertyComparator super super IComparer ISortDefinition ILog IDictionary return object object int public virtual public virtual decl_stmt object = decl_stmt object = if && is string && is string = string = string decl_stmt int = try if != if != = else = - else if != = else = catch region region if call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() + + + + endregion return return : - IObjectWrapper object private private decl_stmt object = if != decl_stmt Spring.Objects.IObjectWrapper = if == = new try = call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) call Spring.Objects.IObjectWrapper.GetPropertyValue(string) catch throw catch if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() return int ICollection IEnumerator public static public static decl_stmt System.Collections.Generic.ICollection = new decl_stmt int = decl_stmt System.Collections.Generic.IEnumerator = call ICollection.GetEnumerator() call ICollection.GetEnumerator() call ICollection.GetEnumerator() call ICollection.GetEnumerator() call ICollection.GetEnumerator() while call System.Collections.Generic.IEnumerator.MoveNext() call System.Collections.Generic.IEnumerator.MoveNext() call System.Collections.Generic.IEnumerator.MoveNext() call System.Collections.Generic.IEnumerator.MoveNext() call System.Collections.Generic.IEnumerator.MoveNext() = ++