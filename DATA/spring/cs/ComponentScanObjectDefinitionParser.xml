Spring.Context.Config System.ComponentModel using System.Xml using Common.Logging using Spring.Context.Attributes using Spring.Context.Attributes.TypeFilters using Spring.Objects.Factory.Config using Spring.Objects.Factory.Support using Spring.Objects.Factory.Xml using class Spring.Context.Config.ComponentScanObjectDefinitionParser super super IObjectDefinitionParser string string string string ILog string AssemblyObjectDefinitionScanner IObjectDefinitionRegistry public public decl_stmt Spring.Context.Attributes.AssemblyObjectDefinitionScanner = decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionRegistry = call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) call Spring.Context.Attributes.AssemblyObjectDefinitionScanner.ScanAndRegisterTypes(IObjectDefinitionRegistry) return var protected virtual protected virtual decl_stmt var = new = return var private private decl_stmt var = if return foreach in call var.Split() call var.Split() call var.Split() call var.Split() call var.Split() if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + var var private private decl_stmt var = decl_stmt var = if != call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() = var private private foreach in if decl_stmt var = call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else if decl_stmt var = call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() bool var private private decl_stmt bool = decl_stmt var = if != out if var var private private decl_stmt var = decl_stmt var = switch case return new case return new case return new case return default: throw new