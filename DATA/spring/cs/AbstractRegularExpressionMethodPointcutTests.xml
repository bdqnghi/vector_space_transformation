Spring.Aop.Support System using System.Reflection using Spring.Util using NUnit.Framework using class Spring.Aop.Support.AbstractRegularExpressionMethodPointcutTests AbstractRegularExpressionMethodPointcut protected protected = public public public public = protected protected typeof object typeof int typeof object typeof public public = = protected protected typeof < typeof int typeof < typeof public public = = public public = call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof < typeof int call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof < typeof public public = call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof < typeof int call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof < typeof protected protected typeof object typeof int typeof object typeof public public = call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof object typeof int call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof object typeof public public = call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof object typeof int call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof object typeof public public = call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof typeof call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) call Spring.Aop.Support.AbstractRegularExpressionMethodPointcut.Matches(MethodInfo,Type) typeof typeof