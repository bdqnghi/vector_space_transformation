Spring.Web.UI System using System.Collections using System.Collections.Generic using System.Collections.Specialized using System.ComponentModel using System.Globalization using System.Resources using System.Web using System.Web.UI using Spring.Collections using Spring.Context using Spring.Context.Support using Spring.DataBinding using Spring.Globalization using Spring.Util using Spring.Validation using Spring.Web.Support using Spring.Validation.IValidator class Spring.Web.UI.UserControl super super IApplicationContextAware super IWebDataBound super ISupportsWebDependencyInjection super IPostBackDataHandler super IValidationContainer super IWebNavigable IDictionary object object IModelPersistenceMedium IApplicationContext ILocalizer IDictionary object IBindingContainer bool object IApplicationContext object IValidationErrors IWebNavigator IMessageSource protected override protected override if ! else EventHandler protected internal virtual protected internal virtual decl_stmt EventHandler = if != return protected virtual protected virtual = return protected virtual protected virtual return protected override protected override if && object protected override protected override if if != call Spring.Globalization.ILocalizer.ApplyResources(object,IMessageSource) call Spring.Globalization.ILocalizer.ApplyResources(object,IMessageSource) call Spring.Globalization.ILocalizer.ApplyResources(object,IMessageSource) call Spring.Globalization.ILocalizer.ApplyResources(object,IMessageSource) call Spring.Globalization.ILocalizer.ApplyResources(object,IMessageSource) else if != decl_stmt object = if != protected virtual protected virtual if != Control protected virtual new protected virtual new decl_stmt System.Web.UI.Control = = return Control protected virtual new protected virtual new params params params decl_stmt System.Web.UI.Control = = return = protected virtual protected virtual return call IModelPersistenceMedium.LoadFromMedium() call IModelPersistenceMedium.LoadFromMedium() call IModelPersistenceMedium.LoadFromMedium() call IModelPersistenceMedium.LoadFromMedium() call IModelPersistenceMedium.LoadFromMedium() protected virtual protected virtual call Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(Control,object) call Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(Control,object) call Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(Control,object) call Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(Control,object) call Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(Control,object) protected virtual protected virtual protected virtual protected virtual protected virtual protected virtual return return protected virtual protected virtual = protected virtual protected virtual if == return return string if == decl_stmt string = + + = as if == try = as if == = new finally return protected virtual protected virtual = new return = if is return return if is = return throw new if == = new return protected protected protected protected protected protected return protected protected return bool decl IDictionary public public params params params decl_stmt System.Collections.Generic.IDictionary < = decl_stmt bool = foreach in if == throw new = && return return = decl IDictionary protected virtual < protected virtual < decl_stmt System.Collections.Generic.IDictionary < = new < = = = = = = = return protected virtual protected virtual protected virtual protected virtual return protected virtual protected virtual return new return IDictionary string private private decl_stmt System.Collections.Generic.IDictionary = decl_stmt string = = as if == lock = as if == try = if == throw new catch = throw = EventHandler protected virtual protected virtual decl_stmt EventHandler = if != protected internal virtual protected internal virtual if protected internal virtual protected internal virtual if EventHandler protected virtual protected virtual decl_stmt EventHandler = if != EventHandler protected virtual protected virtual decl_stmt EventHandler = if != return = return = if is = new return = if != && is = IDictionary IMessageSource ResourceManager string ResourceSetMessageSource protected protected if == decl_stmt string = decl_stmt System.Collections.Generic.IDictionary = decl_stmt Spring.Context.IMessageSource = as if == lock = as if == decl_stmt Spring.Context.Support.ResourceSetMessageSource = new = decl_stmt ResourceManager = if != call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() call ResourceSetMessageSource.ResourceManagers() = = = private private return public public return call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) public public params params params return call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) call Spring.Context.IMessageSource.GetMessage(string) public public return call Spring.Context.IMessageSource.GetResourceObject(string) call Spring.Context.IMessageSource.GetResourceObject(string) call Spring.Context.IMessageSource.GetResourceObject(string) call Spring.Context.IMessageSource.GetResourceObject(string) call Spring.Context.IMessageSource.GetResourceObject(string) return = return return protected protected return return = protected override protected override