Spring.NmsQuickStart.Common.Converters System using System.Collections using Apache.NMS using Spring.Messaging.Nms.Support.Converter using Spring.Objects.Factory using class Spring.NmsQuickStart.Common.Converters.MultiMessageConverter super super IMessageConverter super IInitializingObject IDictionary IDictionary string IList IMessageConverter = IMessage INamedMessageConverter public public if == throw new if typeof string || typeof || typeof return call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) call Spring.Messaging.Support.Converters.IMessageConverter.ToMessage(object) else decl_stmt Spring.NmsQuickStart.Common.Converters.INamedMessageConverter = if != decl_stmt System.Runtime.Remoting.Messaging.IMessage = call INamedMessageConverter.ToMessage() call INamedMessageConverter.ToMessage() call INamedMessageConverter.ToMessage() call INamedMessageConverter.ToMessage() call INamedMessageConverter.ToMessage() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() call IMessage.Properties() return throw new + private private if call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) return as return string IMessageConverter public public if == throw new decl_stmt string = if == return call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) else decl_stmt Spring.Messaging.Support.Converters.IMessageConverter = if != return call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) call Spring.Messaging.Support.Converters.IMessageConverter.FromMessage(IMessage) throw new + + + private private if call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) call System.Collections.Generic.IDictionary.Contains(Object) return as return public public foreach in call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue)