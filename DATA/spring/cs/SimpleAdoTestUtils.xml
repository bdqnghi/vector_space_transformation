Spring.Testing.Ado System using System.Collections.Generic using System.Data using System.IO using System.Reflection using System.Text.RegularExpressions using Common.Logging using Spring.Core.IO using Spring.Dao using Spring.Data using Spring.Data.Common using Spring.Data.Core using Spring.Transaction using Spring.Util using class Spring.Testing.Ado.SimpleAdoTestUtils Regex Regex string ILog decl Regex RegexOptions string string Regex Regex ITransactionStatus AdoPlatformTransactionManager public static public static decl_stmt Spring.Data.Core.AdoPlatformTransactionManager = new decl_stmt Spring.Transaction.ITransactionStatus = call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() call AdoPlatformTransactionManager.GetTransaction() return new public static public static params params params new new public static public static params params params new new public static public static params params params new public static public static params params params new public static public static params params params new public static public static params params params decl List private static private static params params params if ! = decl_stmt System.Collections.Generic.List < = new < try catch throw new + foreach in try catch if ! throw call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() call ILog.Warn() Regex string public static public static < params params params using = decl_stmt string = decl_stmt System.Text.RegularExpressions.Regex = if != foreach in if = break MatchCollection string Group Match int private static private static < decl_stmt System.Text.RegularExpressions.MatchCollection = decl_stmt int = decl_stmt string for = < ++ decl_stmt System.IO.Compression.Match = decl_stmt MS.Internal.Xml.XPath.Group = = - if call string.Trim() call string.Trim() call string.Trim() call string.Trim() call string.Trim() > = + = if call string.Trim() call string.Trim() call string.Trim() call string.Trim() call string.Trim() > public public try if == return if return finally = = public public = public public try finally =