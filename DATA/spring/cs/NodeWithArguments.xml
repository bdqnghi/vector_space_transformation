Spring.Expressions System using System.Collections using System.Collections.Generic using System.Runtime.Serialization using Spring.Expressions.Parser.antlr.collections using class attribute Spring.Expressions.NodeWithArguments super super BaseNode decl BaseNode IDictionary public public AST decl List private private lock if == decl_stmt System.Collections.Generic.List < = new < = new decl_stmt Spring.Expressions.Parser.antlr.collections.AST = while != if call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() is call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() call Spring.Expressions.Parser.antlr.collections.AST.getFirstChild() else if is call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() call Spring.Expressions.Parser.antlr.collections.AST.getText() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() = call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() call Spring.Expressions.Parser.antlr.collections.AST.getNextSibling() = call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() call decl List.ToArray() protected protected if != throw new + + + + int decl object protected protected if == decl_stmt int = decl_stmt object = new for = < ++ = return IDictionary protected protected if == if == return decl_stmt System.Collections.Generic.IDictionary = new foreach in = return protected protected if == return BaseNode private private decl_stmt Spring.Expressions.BaseNode = if is return return private private return