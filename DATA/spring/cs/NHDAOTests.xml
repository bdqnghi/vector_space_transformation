Spring.Data.NHibernate System using NHibernate using NUnit.Framework using Spring.Context using Spring.Context.Support using Spring.Data.Common using Spring.Data.NHibernate.Support using class attribute Spring.Data.NHibernate.NHDAOTests IApplicationContext string decl string public public decl_stmt string = decl_stmt string = new + + + + + + = new = if ! ISessionFactory IDbProvider public public decl_stmt ISessionFactory = as decl_stmt Spring.Data.Common.IDbProvider = call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() call IDbProvider.DbMetadata() IAccountManager float public public decl_stmt float = using new decl_stmt Spring.Data.NHibernate.IAccountManager = = as + call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) IAccountManager float public public decl_stmt float = decl_stmt Spring.Data.NHibernate.IAccountManager = try = as + call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) call Spring.Data.NHibernate.IAccountManager.DoTransfer(float,float) catch if private private return private private return