Spring.Objects System using System.Reflection using System.Runtime.Remoting using System.Runtime.Remoting.Messaging using System.Runtime.Remoting.Proxies using class Spring.Objects.TestTransparentProxyFactory super super RealProxy super IRemotingTypeInfo Type object InvokeCallback return = return = return = MethodInfo IMethodCallMessage object public override public override if is decl_stmt IMethodCallMessage = decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object if != = else = call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() call MethodInfo.Invoke() return new throw new public virtual public virtual return return call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() throw new public static public static return public static public static return