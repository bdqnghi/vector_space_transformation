Spring.Context.Attributes System using System.Collections.Generic using System.Reflection using Common.Logging using Spring.Core.TypeResolution using Spring.Objects.Factory.Config using Spring.Objects.Factory.Parsing using Spring.Objects.Factory.Support using Spring.Stereotype using class Spring.Context.Attributes.ConfigurationClassObjectDefinitionReader ILog IProblemReporter IObjectDefinitionRegistry decl Collections private static private static decl_stmt Generic < = foreach in if != return return public public < foreach in String String GenericObjectDefinition private private if != return decl_stmt Spring.Objects.Factory.Support.GenericObjectDefinition = new decl_stmt System.String = = = if decl_stmt System.String = = call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() AbstractObjectDefinition Type public static public static decl_stmt System.Type = if is decl_stmt Spring.Objects.Factory.Support.AbstractObjectDefinition = if = else if != && ! = if != if typeof != return if typeof != || typeof return return private private if != return typeof != return private private foreach in ConfigurationClass RootObjectDefinition string IObjectDefinition decl object decl List decl string MethodInfo private private decl_stmt Spring.Context.Attributes.ConfigurationClass = decl_stmt System.Reflection.MethodInfo = decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = new = = = decl_stmt object = call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() typeof decl_stmt System.Collections.Generic.List < = new < foreach in decl_stmt string = if != call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() else = new call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() decl_stmt string = > : for = < ++ call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterAlias(string,string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterAlias(string,string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterAlias(string,string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterAlias(string,string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterAlias(string,string) if call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.ContainsObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.ContainsObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.ContainsObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.ContainsObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.ContainsObjectDefinition(string) decl_stmt Spring.Objects.Factory.Config.IObjectDefinition = call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.GetObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.GetObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.GetObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.GetObjectDefinition(string) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.GetObjectDefinition(string) if ! is call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + return if typeof != = typeof as if typeof != = typeof as if typeof != = typeof as = typeof as if typeof != = typeof as call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterObjectDefinition(string,IObjectDefinition) call Spring.Objects.Factory.Support.IObjectDefinitionRegistry.RegisterObjectDefinition(string,IObjectDefinition) Type String decl IDictionary IObjectDefinitionReader IObjectDefinitionReader private private < < decl_stmt System.Collections.Generic.IDictionary < = new < foreach < in decl_stmt System.String = decl_stmt System.Type = if ! call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() call decl IDictionary.ContainsKey() try decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionReader = call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() call decl IDictionary.Add() catch throw new decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionReader = call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource)