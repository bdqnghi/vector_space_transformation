Spring.Web.UI.Controls System using System.Collections using System.ComponentModel using System.Web using System.Web.UI using System.Web.UI.WebControls using class attribute attribute Spring.Web.UI.Controls.TabularMultiView super super WebControl MultiView string int string string bool TabContainer object string ArrayList return = return = return = return = if ! return else return if ! = else = protected virtual protected virtual return new Control WebControl WebControl protected virtual protected virtual decl_stmt System.Web.UI.Control = new decl_stmt System.Web.UI.WebControls.WebControl = new = call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() decl_stmt System.Web.UI.WebControls.WebControl = new = call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call WebControl.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() call Control.Controls() return protected override protected override private private = Control protected override protected override = += = new += for = < ++ call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() call MultiView.Controls() = if != - = = - decl_stmt System.Web.UI.Control = protected override protected override if is call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) call System.Collections.ArrayList.Add(Object) else if ! is throw new TabularView ViewCollection private private call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() call TabContainer.Controls() decl_stmt ViewCollection = for = < ++ decl_stmt Spring.Web.UI.Controls.TabularView = call Spring.Web.UI.Controls.TabContainer.CreateTab(TabularMultiView,TabularView,int) call Spring.Web.UI.Controls.TabContainer.CreateTab(TabularMultiView,TabularView,int) call Spring.Web.UI.Controls.TabContainer.CreateTab(TabularMultiView,TabularView,int) call Spring.Web.UI.Controls.TabContainer.CreateTab(TabularMultiView,TabularView,int) call Spring.Web.UI.Controls.TabContainer.CreateTab(TabularMultiView,TabularView,int) int private private decl_stmt int = if != = EventHandler private private decl_stmt EventHandler = if !=