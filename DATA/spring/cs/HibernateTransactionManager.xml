Spring.Data.NHibernate System using System.Data using System.Reflection using NHibernate using NHibernate.Transaction using Spring.Core.TypeResolution using Spring.Dao using Spring.Data.Common using Spring.Data.Support using Spring.Objects.Factory using Spring.Transaction using Spring.Transaction.Support using Spring.Util using NHibernate.TransactionException class Spring.Data.NHibernate.HibernateTransactionManager super super AbstractPlatformTransactionManager super IResourceTransactionManager super IObjectFactoryAware super IInitializingObject IDbProvider IObjectFactory ISessionFactory IAdoExceptionTranslator IAdoExceptionTranslator bool Object return = String if is return else if is string if == throw new decl_stmt System.String = return typeof else return = = return = lock if == if != = new else = return return = return = = HibernateTransactionObject SessionHolder ConnectionHolder protected override protected override decl_stmt HibernateTransactionObject = new = if decl_stmt Spring.Data.NHibernate.SessionHolder = if + + call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() if != decl_stmt Spring.Data.Support.ConnectionHolder = = return protected override protected override return int ISession ITransaction ConnectionHolder HibernateTransactionObject ISession IDbTransaction FlushMode IInterceptor IDbConnection protected override protected override decl_stmt HibernateTransactionObject = if != && && ! throw new + + + decl_stmt Spring.Messaging.Ems.Common.ISession = try if == || decl_stmt IInterceptor = decl_stmt Spring.Messaging.Ems.Common.ISession = != : if + + call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() new = = decl_stmt System.Data.IDbConnection = if && = if ! && ! decl_stmt FlushMode = if == = = decl_stmt ITransaction = call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() call ISession.BeginTransaction() decl_stmt System.Data.IDbTransaction = = decl_stmt int = if != = if != decl_stmt Spring.Data.Support.ConnectionHolder = new if != = if + + = if catch throw new HibernateTransactionObject ConnectionHolder SessionHolder protected override protected override decl_stmt HibernateTransactionObject = call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() call HibernateTransactionObject.SetSessionHolder() decl_stmt Spring.Data.NHibernate.SessionHolder = decl_stmt Spring.Data.Support.ConnectionHolder = if != = return new SuspendedResourcesHolder protected override protected override decl_stmt SuspendedResourcesHolder = if if != HibernateTransactionObject Type HibernateException protected override protected override decl_stmt HibernateTransactionObject = if + + try call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() catch decl_stmt System.Type = if throw new decl_stmt HibernateException = as if != throw throw HibernateTransactionObject IDbTransaction protected override protected override decl_stmt HibernateTransactionObject = if + + try decl_stmt System.Data.IDbTransaction = if != && != call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() catch throw new catch throw finally if ! call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() HibernateTransactionObject protected override protected override decl_stmt HibernateTransactionObject = if + + call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() call HibernateTransactionObject.SetRollbackOnly() IDbTransaction FieldInfo AdoTransaction protected virtual protected virtual decl_stmt AdoTransaction = as decl_stmt System.Data.IDbTransaction = if != try decl_stmt System.Reflection.FieldInfo = typeof | = call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() call FieldInfo.GetValue() as catch else return protected virtual protected virtual if != && is return else if is return return protected virtual protected virtual return + HibernateTransactionObject ISession protected override protected override decl_stmt HibernateTransactionObject = if if != decl_stmt Spring.Messaging.Ems.Common.ISession = if if + + else if + + if = call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() call HibernateTransactionObject.SessionHolder() public public = = return return public public return != && != public public = if != = return || != && return return IDbProvider public public if == throw new if is string && == throw new if && == decl_stmt Spring.Data.Common.IDbProvider = if != if + + = else