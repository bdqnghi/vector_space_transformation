Spring.Remoting System using Spring.Objects.Factory using Spring.Remoting.Support using class Spring.Remoting.CaoFactoryObject super super IFactoryObject super IInitializingObject string decl Logging decl Common decl ILog return = return = return = public public if == throw new if == throw new return return typeof string ICaoRemoteFactory public public decl_stmt string = call decl ILog.TrimEnd() call decl ILog.TrimEnd() call decl ILog.TrimEnd() call decl ILog.TrimEnd() call decl ILog.TrimEnd() + + if call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() call decl Common.Debug() + + decl_stmt Spring.Remoting.Support.ICaoRemoteFactory = typeof if != return call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) else return call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object)