Spring.Transaction.Support System using System.Collections using System.Data using Common.Logging using class attribute Spring.Transaction.Support.AbstractPlatformTransactionManager super super IPlatformTransactionManager bool int ILog bool bool TransactionSynchronizationState return return return return return return = return return = return = return = return if < throw new = protected virtual protected virtual return protected virtual protected virtual throw new + + protected virtual protected virtual throw new + + protected virtual protected virtual throw new + protected virtual protected virtual return protected virtual protected virtual call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + protected virtual protected virtual bool bool object object DefaultTransactionStatus public public decl_stmt object = decl_stmt bool = if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + if == = new if return if < throw new if == throw new else if == || == || == decl_stmt object = if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + try decl_stmt bool = != decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = return catch throw else decl_stmt bool = == return DefaultTransactionStatus protected protected decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = return protected protected if = = != : = = DefaultTransactionStatus bool object bool private private if == throw new if == if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt object = decl_stmt bool = == return if == if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + decl_stmt object = try decl_stmt bool = != decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = return catch try catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() throw throw if == if ! throw new + if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() + + + if decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = call Spring.Transaction.Support.DefaultTransactionStatus.CreateAndHoldSavepoint(string) call Spring.Transaction.Support.DefaultTransactionStatus.CreateAndHoldSavepoint(string) call Spring.Transaction.Support.DefaultTransactionStatus.CreateAndHoldSavepoint(string) call Spring.Transaction.Support.DefaultTransactionStatus.CreateAndHoldSavepoint(string) call Spring.Transaction.Support.DefaultTransactionStatus.CreateAndHoldSavepoint(string) return else decl_stmt bool = != decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = return if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() if ! if throw new + + decl_stmt bool = != return DefaultTransactionStatus public public if throw new decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() return if ! && if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() if || throw new return return bool bool private private try decl_stmt bool = try = decl_stmt bool = if || = if else if if throw new catch throw catch if else throw catch if ! throw try finally finally IList private private if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt System.Collections.Generic.IList = foreach in try catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() DefaultTransactionStatus public public if throw new decl_stmt Spring.Transaction.Support.DefaultTransactionStatus = private private try try if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else if if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() catch throw finally bool private private decl_stmt bool = && ! return new protected protected if != return return bool string IList IsolationLevel bool object private private if decl_stmt System.Collections.Generic.IList = try decl_stmt object = if != = decl_stmt string = = decl_stmt bool = = decl_stmt IsolationLevel = = decl_stmt bool = = return new catch throw else if != decl_stmt object = return new else return IList private private decl_stmt System.Collections.Generic.IList = foreach in return private private foreach in IList SuspendedResourcesHolder object private private decl_stmt SuspendedResourcesHolder = if != decl_stmt object = if != decl_stmt System.Collections.Generic.IList = if != = = = = private private try if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() throw IList private private if decl_stmt System.Collections.Generic.IList = foreach in IList private private if if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() decl_stmt System.Collections.Generic.IList = foreach in try catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() IList private private if decl_stmt System.Collections.Generic.IList = if ! || if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() else call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() private private foreach in try catch call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() call ILog.Error() private private = if if if != if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug()