Spring.Validation System using System.Collections.Generic using System.Xml using System.Xml.Schema using System.Xml.Serialization using Spring.Context using Spring.Util using class attribute Spring.Validation.ValidationErrors super super IValidationErrors super IXmlSerializable decl IDictionary public public return XmlSerializer ErrorMessage string decl List public public if ! while == decl_stmt string = while == decl_stmt XmlSerializer = new typeof decl_stmt Spring.Validation.ErrorMessage = call XmlSerializer.Deserialize() call XmlSerializer.Deserialize() call XmlSerializer.Deserialize() call XmlSerializer.Deserialize() call XmlSerializer.Deserialize() decl_stmt System.Collections.Generic.List < if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = new < = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() XmlSerializer decl IList public public foreach < < in if != decl_stmt System.Collections.Generic.IList < = foreach in decl_stmt XmlSerializer = new typeof call XmlSerializer.Serialize() call XmlSerializer.Serialize() call XmlSerializer.Serialize() call XmlSerializer.Serialize() call XmlSerializer.Serialize() return == return new < decl List public public decl_stmt System.Collections.Generic.List < if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = new < = call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() decl List decl List public public if != foreach in decl_stmt System.Collections.Generic.List < decl_stmt System.Collections.Generic.List < = new < if ! call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out = else call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() decl List public < public < decl_stmt System.Collections.Generic.List < call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out return ?? new < decl List decl IList public < public < decl_stmt System.Collections.Generic.IList < = new < decl_stmt System.Collections.Generic.List < if call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() call decl IDictionary.TryGetValue() out foreach in call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() call decl IList.Add() return