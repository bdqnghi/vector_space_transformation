Spring.Objects.Factory.Config NUnit.Framework using class attribute Spring.Objects.Factory.Config.EventValuesTests EventValues public public decl_stmt Spring.Objects.Factory.Config.EventValues = new EventValues public public decl_stmt Spring.Objects.Factory.Config.EventValues = new call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() new EventValues public public decl_stmt Spring.Objects.Factory.Config.EventValues = new call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() new call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() new EventValues EventValues public public decl_stmt Spring.Objects.Factory.Config.EventValues = new call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() new call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() call EventValues.AddHandler() new decl_stmt Spring.Objects.Factory.Config.EventValues = new EventValues public public decl_stmt Spring.Objects.Factory.Config.EventValues = new call Spring.Objects.Factory.Config.EventValues.AddAll(EventValues) call Spring.Objects.Factory.Config.EventValues.AddAll(EventValues) call Spring.Objects.Factory.Config.EventValues.AddAll(EventValues) call Spring.Objects.Factory.Config.EventValues.AddAll(EventValues) call Spring.Objects.Factory.Config.EventValues.AddAll(EventValues) return = return = return = public public return = return = return = public public