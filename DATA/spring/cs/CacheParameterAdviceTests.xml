Spring.Aspects.Cache System using System.Reflection using NUnit.Framework using Rhino.Mocks using Spring.Caching using Spring.Context using class attribute Spring.Aspects.Cache.CacheParameterAdviceTests MockRepository IApplicationContext CacheParameterAdvice ICache public public = new = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof = new = = new decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new new new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new new new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new new new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call ICache.Get() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() decl object MethodInfo public public decl_stmt System.Reflection.MethodInfo = typeof decl_stmt object = new new new call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) call Spring.Aspects.Cache.CacheParameterAdvice.AfterReturning(object,MethodInfo,object,object) private private call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject() call IApplicationContext.GetObject()