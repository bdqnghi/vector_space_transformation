Spring.Objects.Factory.Config System using System.Collections.Specialized using System.Configuration using Spring.Util using class attribute Spring.Objects.Factory.Config.ConfigSectionVariableSource super super IVariableSource object NameValueCollection decl string return = = new public public lock if == = new return public public lock if == = new return call System.Collections.Specialized.NameValueCollection.Get(String) call System.Collections.Specialized.NameValueCollection.Get(String) call System.Collections.Specialized.NameValueCollection.Get(String) call System.Collections.Specialized.NameValueCollection.Get(String) call System.Collections.Specialized.NameValueCollection.Get(String) object ClientSettingsSection protected virtual protected virtual foreach in decl_stmt object = if is call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) else if is decl_stmt System.Configuration.ClientSettingsSection = foreach in call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) call System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) else throw new + +