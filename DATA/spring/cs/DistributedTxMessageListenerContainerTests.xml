Spring.Messaging.Listener System.Messaging using System.Threading using NUnit.Framework using Spring.Messaging.Core using Spring.Testing.NUnit using System using class attribute Spring.Messaging.Listener.DistributedTxMessageListenerContainerTests super super AbstractDependencyInjectionSpringContextTests int DistributedTxMessageListenerContainer SimpleHandler public override public override if != = = = MessageQueueTemplate object MessageQueueTemplate string public public decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() decl_stmt object = call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() decl_stmt string = as string int MessageQueueTemplate int MessageQueueTemplate public public decl_stmt int const const = decl_stmt int = decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as for = < ++ call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) call Spring.Messaging.Core.MessageQueueTemplate.ConvertAndSend(string,object) + call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Start() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Stop() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() call DistributedTxMessageListenerContainer.Shutdown() decl_stmt Spring.Messaging.Core.MessageQueueTemplate = as = new for = < ++ call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() call Spring.Messaging.Core.MessageQueueTemplate.ReceiveAndConvert() return new