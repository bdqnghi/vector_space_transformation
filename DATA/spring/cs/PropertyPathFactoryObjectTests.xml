Spring.Objects.Factory.Config System using NUnit.Framework using Rhino.Mocks using Spring.Core using class attribute Spring.Objects.Factory.Config.PropertyPathFactoryObjectTests MockRepository IObjectFactory public public = new = < PropertyPathFactoryObject string public public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject TestObject string public public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) decl_stmt Spring.Data.NHibernate.TestObject = new = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject string public public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject typeof public typeof public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = PropertyPathFactoryObject string public public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject TestObject string public public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) decl_stmt Spring.Data.NHibernate.TestObject = new = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject string typeof public typeof public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = decl_stmt string = string call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() PropertyPathFactoryObject typeof public typeof public call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.IsSingleton(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Objects.Factory.Config.PropertyPathFactoryObject = new = = call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject() call Spring.Objects.Factory.Config.PropertyPathFactoryObject.GetObject()