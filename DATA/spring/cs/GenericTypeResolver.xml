Spring.Core.TypeResolution System using Spring.Util using class Spring.Core.TypeResolution.GenericTypeResolver super super TypeResolver Type GenericArgumentsHolder decl string decl Type public override public override if throw decl_stmt Spring.Core.TypeResolution.GenericArgumentsHolder = new decl_stmt System.Type = try if = if ! decl_stmt string = call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() call Spring.Core.TypeResolution.GenericArgumentsHolder.GetGenericArguments() decl_stmt System.Type = new for = < ++ = = call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) call System.Type.MakeGenericType(Type) if = call GenericArgumentsHolder.GetArrayDeclaration() call GenericArgumentsHolder.GetArrayDeclaration() call GenericArgumentsHolder.GetArrayDeclaration() call GenericArgumentsHolder.GetArrayDeclaration() call GenericArgumentsHolder.GetArrayDeclaration() = catch if is throw throw if == = return