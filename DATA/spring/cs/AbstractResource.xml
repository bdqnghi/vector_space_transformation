Spring.Core.IO System using System.IO using System.Text using Spring.Util using class Spring.Core.IO.AbstractResource super super IResource string string string string return = return return return new throw new + Stream try return catch try decl_stmt System.IO.Stream = call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() call System.IO.Stream.Close() return catch return int protected static protected static decl_stmt int = call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() call string.IndexOf() if == - return else return call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + protected virtual protected virtual return protected virtual protected virtual return public override public override return public override public override return is && public override public override return protected virtual protected virtual return protected virtual protected virtual return new return throw new throw new throw new protected virtual protected virtual return StringBuilder IResource string int string IResourceLoader IResource string public virtual public virtual decl_stmt Spring.Core.IO.IResourceLoader = if decl_stmt Spring.Core.IO.IResource = call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() if != return if ! throw new + decl_stmt System.Text.StringBuilder = new if != && != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if ! call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) else decl_stmt string decl_stmt string decl_stmt int = call string.LastIndexOfAny() call string.LastIndexOfAny() call string.LastIndexOfAny() call string.LastIndexOfAny() call string.LastIndexOfAny() new if >= = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + = call string.Substring() call string.Substring() call string.Substring() call string.Substring() call string.Substring() + else = = call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if != && != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt string = call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) if ! decl_stmt Spring.Core.IO.IResource = if != return return call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() call IResourceLoader.GetResource() StringBuilder decl string int char decl string private private decl_stmt System.Text.StringBuilder = new if decl_stmt string = decl_stmt int = if > throw new decl_stmt char = for = < - ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) decl_stmt string = for = < - ++ call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if > -= return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) else if if > return - else return else if != && != call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) if if > call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) - else call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) - return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) int decl string private private decl_stmt string = decl_stmt int = for < && ++ return