Spring.Testing.Ado System.Data using NUnit.Framework using Rhino.Mocks using Spring.Core.IO using Spring.Data using Spring.Data.Common using Spring.Data.Core using Spring.Transaction.Support using class attribute Spring.Testing.Ado.SimpleAdoTestUtilsTests MockRepository IAdoOperations public public = new = < IResource public public decl_stmt Spring.Core.IO.IResource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IResource public public decl_stmt Spring.Core.IO.IResource = new call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IResource public public decl_stmt Spring.Core.IO.IResource = new call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IResource public public decl_stmt Spring.Core.IO.IResource = new call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IResource public public decl_stmt Spring.Core.IO.IResource = new call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call IAdoOperations.ExecuteNonQuery() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbConnection IDbTransaction IDbProvider DefaultTransactionDefinition AdoTemplate IDbCommand IPlatformTransaction public public decl_stmt Spring.Data.Common.IDbProvider = call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() call MockRepository.DynamicMock() typeof decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < decl_stmt System.Data.IDbCommand = < decl_stmt Spring.Transaction.Support.DefaultTransactionDefinition = new call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() = = = = call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbCommand.ExecuteNonQuery() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call System.Data.IDbTransaction.Commit() call IDbCommand.Dispose() call IDbCommand.Dispose() call IDbCommand.Dispose() call IDbCommand.Dispose() call IDbCommand.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt Spring.Testing.Ado.IPlatformTransaction = call Spring.Testing.Ado.IPlatformTransaction.Commit() call Spring.Testing.Ado.IPlatformTransaction.Commit() call Spring.Testing.Ado.IPlatformTransaction.Commit() call Spring.Testing.Ado.IPlatformTransaction.Commit() call Spring.Testing.Ado.IPlatformTransaction.Commit() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IDbTransaction IPlatformTransaction IDbProvider DefaultTransactionDefinition AdoTemplate IDbConnection public public decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < decl_stmt System.Data.IDbTransaction = < decl_stmt Spring.Transaction.Support.DefaultTransactionDefinition = new call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.Open() call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbConnection.BeginTransaction(IsolationLevel) call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call System.Data.IDbTransaction.Rollback() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call IDbConnection.Dispose() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.AdoTemplate = new decl_stmt Spring.Testing.Ado.IPlatformTransaction = call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call IPlatformTransaction.Dispose() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()