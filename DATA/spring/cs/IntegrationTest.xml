Spring.Services.WindowsService System using System.IO using System.Net using System.Net.Sockets using System.Reflection using System.Threading using NUnit.Framework using Spring.Services.WindowsService.Common using Spring.Services.WindowsService.Common.Deploy using Spring.Services.WindowsService.Common.Deploy.FileSystem using Spring.Threading using Spring.Util using class attribute Spring.Services.WindowsService.IntegrationTest string SyncedDeployer Latch FileSystemDeployLocation string ISpringAssembliesDeployer DeployManager public public try catch = call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() call Spring.Threading.Latch.Release() public public public public return public public = new = new call FileSystemDeployLocation.StartWatching() call FileSystemDeployLocation.StartWatching() call FileSystemDeployLocation.StartWatching() call FileSystemDeployLocation.StartWatching() call FileSystemDeployLocation.StartWatching() = new = new = new call DeployManager.Start() call DeployManager.Start() call DeployManager.Start() call DeployManager.Start() call DeployManager.Start() public public if != call DeployManager.Stop() call DeployManager.Stop() call DeployManager.Stop() call DeployManager.Stop() call DeployManager.Stop() call FileSystemDeployLocation.Dispose() call FileSystemDeployLocation.Dispose() call FileSystemDeployLocation.Dispose() call FileSystemDeployLocation.Dispose() call FileSystemDeployLocation.Dispose() String string = public = public using = new using = decl_stmt string = decl_stmt System.String = call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) call System.String.IndexOf(String,int,StringComparison) != - string string string public public decl_stmt string = using = where decl_stmt string = decl_stmt string = string string decl string string private private decl_stmt string = decl_stmt string = decl_stmt string = foreach in decl_stmt string = call Latch.Attempt() call Latch.Attempt() call Latch.Attempt() call Latch.Attempt() call Latch.Attempt() * return String Int32 decl byte private private decl_stmt byte = new decl_stmt System.String = decl_stmt Int32 = = return decl byte private private decl_stmt byte = +