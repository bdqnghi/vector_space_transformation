Spring.Core.TypeConversion System using System.ComponentModel using System.Globalization using Spring.Util using class Spring.Core.TypeConversion.CustomNumberConverter super super TypeConverter NumberFormatInfo Type bool public override public override if == typeof string return return string public override public override if is string decl_stmt string = as string if ! && = if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return else if call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) call System.Type.Equals(Object) typeof return return