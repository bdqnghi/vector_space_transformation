Spring.Objects.Factory.Support System using System.Collections using NUnit.Framework using Spring.Context.Support using Spring.Objects.Factory.Config using Spring.Objects.Factory.Xml using class attribute Spring.Objects.Factory.Support.ObjectDefinitionBuilderTests IObjectDefinitionFactory public public = new ObjectDefinitionBuilder RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = as typeof ObjectDefinitionBuilder RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = as typeof ObjectDefinitionBuilder ChildObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof decl_stmt Spring.Objects.Factory.Support.ChildObjectDefinition = as typeof ObjectDefinitionBuilder RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = as typeof ObjectDefinitionBuilder RootObjectDefinition public public decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = as typeof ObjectDefinitionBuilder RootObjectDefinition decl string public public decl_stmt string = new decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.SetSingleton(bool) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.SetSingleton(bool) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.SetSingleton(bool) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.SetSingleton(bool) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.SetSingleton(bool) foreach in call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddDependsOn(string) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddDependsOn(string) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddDependsOn(string) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddDependsOn(string) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddDependsOn(string) decl_stmt Spring.Objects.Factory.Support.RootObjectDefinition = as typeof call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() call RootObjectDefinition.PropertyValues() IList ObjectDefinitionBuilder IObjectDefinitionFactory GenericApplicationContext TestObject public public decl_stmt Spring.Context.Support.GenericApplicationContext = new decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionFactory = new decl_stmt Spring.Objects.Factory.Support.ObjectDefinitionBuilder = typeof call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() = typeof decl_stmt System.Collections.Generic.IList = new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) call System.Collections.Generic.IList.Add(Object) new call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call Spring.Objects.Factory.Support.ObjectDefinitionBuilder.AddPropertyValue(string,object) call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() call GenericApplicationContext.RegisterObjectDefinition() decl_stmt Spring.Data.NHibernate.TestObject = call GenericApplicationContext.GetObject() call GenericApplicationContext.GetObject() call GenericApplicationContext.GetObject() call GenericApplicationContext.GetObject() call GenericApplicationContext.GetObject() as GenericApplicationContext IObjectDefinitionReader public public decl_stmt Spring.Context.Support.GenericApplicationContext = new decl_stmt Spring.Objects.Factory.Support.IObjectDefinitionReader = new call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call Spring.Objects.Factory.Support.IObjectDefinitionReader.LoadObjectDefinitions(IResource) call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh() call GenericApplicationContext.Refresh()