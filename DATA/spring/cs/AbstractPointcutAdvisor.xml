Spring.Aop.Support System using AopAlliance.Aop using Spring.Core using class attribute Spring.Aop.Support.AbstractPointcutAdvisor super super IPointcutAdvisor super IOrdered int return = throw new + AbstractPointcutAdvisor public override public override if ! is return if return decl_stmt Spring.Aop.Support.AbstractPointcutAdvisor = if != return if == && == return == && == else if == return == && call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() else if == return == && call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() else return call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() call AbstractPointcutAdvisor.Advice() && call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() call AbstractPointcutAdvisor.Pointcut() public override public override return + * == : + * == : + *