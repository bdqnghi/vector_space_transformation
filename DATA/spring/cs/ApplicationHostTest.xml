Spring.Services.WindowsService.Common System using System.Reflection using DotNetMock.Dynamic using NUnit.Framework using Spring.Objects.Factory.Config using Spring.Services.WindowsService.Common using class attribute Spring.Services.WindowsService.Common.ApplicationHostTest ApplicationHost IDynamicMock IConfigurableListableObjectFactory ConstructorInfo BindingFlags private private decl_stmt BindingFlags = | | decl_stmt System.Reflection.ConstructorInfo = typeof new typeof call IConfigurableListableObjectFactory.GetType() call IConfigurableListableObjectFactory.GetType() call IConfigurableListableObjectFactory.GetType() call IConfigurableListableObjectFactory.GetType() call IConfigurableListableObjectFactory.GetType() return call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) call System.Reflection.ConstructorInfo.Invoke(Object) new public public = new typeof = = public public call IDynamicMock.Verify() call IDynamicMock.Verify() call IDynamicMock.Verify() call IDynamicMock.Verify() call IDynamicMock.Verify() public public call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() public public call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() call ApplicationHost.Start() call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call IDynamicMock.Expect() call ApplicationHost.Stop() call ApplicationHost.Stop() call ApplicationHost.Stop() call ApplicationHost.Stop() call ApplicationHost.Stop() public public call ApplicationHost.InitializeLifetimeService() call ApplicationHost.InitializeLifetimeService() call ApplicationHost.InitializeLifetimeService() call ApplicationHost.InitializeLifetimeService() call ApplicationHost.InitializeLifetimeService()