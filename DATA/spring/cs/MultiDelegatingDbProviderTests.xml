Spring.Data.Common System using System.Collections using System.Data using System.Data.Common using NUnit.Framework using Rhino.Mocks using Spring.Dao using Spring.Threading using class attribute Spring.Data.Common.MultiDelegatingDbProviderTests MockRepository public public = new MultiDelegatingDbProvider typeof public typeof public decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() IDictionary MultiDelegatingDbProvider public public try decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() catch IDictionary MultiDelegatingDbProvider public public try decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() catch MultiDelegatingDbProvider IDictionary IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() try catch finally MultiDelegatingDbProvider IDictionary IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() try = catch finally MultiDelegatingDbProvider IDictionary IDbProvider IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() = = try finally MultiDelegatingDbProvider IDictionary IDbProvider IDbProvider public public decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.IDbProvider = = decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() = try finally IDbDataAdapter Exception IDbMetadata IDbProvider IDictionary IDbCommand IDbConnection MultiDelegatingDbProvider DbException DbCommandBuilder IDbDataParameter public public decl_stmt Spring.Data.Common.IDbProvider = < decl_stmt System.Data.IDbConnection = < call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() call Spring.Data.Common.IDbProvider.CreateConnection() decl_stmt System.Data.IDbCommand = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() call Spring.Data.Common.IDbProvider.CreateCommand() decl_stmt System.Data.IDbDataParameter = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call Spring.Data.Common.IDbProvider.CreateParameter() call Spring.Data.Common.IDbProvider.CreateParameter() call Spring.Data.Common.IDbProvider.CreateParameter() call Spring.Data.Common.IDbProvider.CreateParameter() call Spring.Data.Common.IDbProvider.CreateParameter() decl_stmt System.Data.IDbDataAdapter = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call Spring.Data.Common.IDbProvider.CreateDataAdapter() call Spring.Data.Common.IDbProvider.CreateDataAdapter() call Spring.Data.Common.IDbProvider.CreateDataAdapter() call Spring.Data.Common.IDbProvider.CreateDataAdapter() call Spring.Data.Common.IDbProvider.CreateDataAdapter() decl_stmt System.Data.Common.DbCommandBuilder = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof call Spring.Data.Common.IDbProvider.CreateCommandBuilder() call Spring.Data.Common.IDbProvider.CreateCommandBuilder() call Spring.Data.Common.IDbProvider.CreateCommandBuilder() call Spring.Data.Common.IDbProvider.CreateCommandBuilder() call Spring.Data.Common.IDbProvider.CreateCommandBuilder() call Spring.Data.Common.IDbProvider.CreateParameterName(string) call Spring.Data.Common.IDbProvider.CreateParameterName(string) call Spring.Data.Common.IDbProvider.CreateParameterName(string) call Spring.Data.Common.IDbProvider.CreateParameterName(string) call Spring.Data.Common.IDbProvider.CreateParameterName(string) call Spring.Data.Common.IDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.IDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.IDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.IDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.IDbProvider.CreateParameterNameForCollection(string) decl_stmt Spring.Data.Common.IDbMetadata = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt System.Exception = new call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) call Spring.Data.Common.IDbProvider.ExtractError(Exception) decl_stmt DbException = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof decl_stmt Spring.Data.Common.MultiDelegatingDbProvider = new decl_stmt System.Collections.Generic.IDictionary = new call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) call System.Collections.Generic.IDictionary.Add(TKey,TValue) = = call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call Spring.Data.Common.MultiDelegatingDbProvider.AfterPropertiesSet() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call Spring.Data.Common.MultiDelegatingDbProvider.CreateConnection() call Spring.Data.Common.MultiDelegatingDbProvider.CreateConnection() call Spring.Data.Common.MultiDelegatingDbProvider.CreateConnection() call Spring.Data.Common.MultiDelegatingDbProvider.CreateConnection() call Spring.Data.Common.MultiDelegatingDbProvider.CreateConnection() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommand() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommand() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommand() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommand() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommand() call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateDataAdapter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateDataAdapter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateDataAdapter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateDataAdapter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateDataAdapter() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommandBuilder() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommandBuilder() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommandBuilder() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommandBuilder() call Spring.Data.Common.MultiDelegatingDbProvider.CreateCommandBuilder() as call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterName(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterName(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterName(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterName(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterName(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.MultiDelegatingDbProvider.CreateParameterNameForCollection(string) call Spring.Data.Common.MultiDelegatingDbProvider.ExtractError(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.ExtractError(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.ExtractError(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.ExtractError(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.ExtractError(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call Spring.Data.Common.MultiDelegatingDbProvider.IsDataAccessException(Exception) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll()