Spring.Remoting System using System.Runtime.Remoting.Lifetime using NUnit.Framework using Spring.Context using Spring.Context.Support using Spring.Remoting.Support using class attribute Spring.Remoting.CaoExporterTests super super BaseRemotingTestFixture CaoExporter typeof public typeof public decl_stmt Spring.Remoting.CaoExporter = new call Spring.Remoting.CaoExporter.AfterPropertiesSet() call Spring.Remoting.CaoExporter.AfterPropertiesSet() call Spring.Remoting.CaoExporter.AfterPropertiesSet() call Spring.Remoting.CaoExporter.AfterPropertiesSet() call Spring.Remoting.CaoExporter.AfterPropertiesSet() MarshalByRefObject IApplicationContext ICaoRemoteFactory public public decl_stmt Spring.Context.IApplicationContext = new decl_stmt Spring.Remoting.Support.ICaoRemoteFactory = typeof as decl_stmt System.MarshalByRefObject = call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) as MarshalByRefObject IApplicationContext ICaoRemoteFactory ILease public public decl_stmt Spring.Context.IApplicationContext = new decl_stmt Spring.Remoting.Support.ICaoRemoteFactory = typeof as decl_stmt System.MarshalByRefObject = call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) call Spring.Remoting.Support.ICaoRemoteFactory.GetObject(object) as decl_stmt System.Runtime.Remoting.Lifetime.ILease = call System.MarshalByRefObject.GetLifetimeService() call System.MarshalByRefObject.GetLifetimeService() call System.MarshalByRefObject.GetLifetimeService() call System.MarshalByRefObject.GetLifetimeService() call System.MarshalByRefObject.GetLifetimeService()