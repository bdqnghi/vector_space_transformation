Spring.Aop.Framework.DynamicProxy System using System.Reflection using NUnit.Framework using Spring.Aop.Interceptor using Spring.Objects using class attribute Spring.Aop.Framework.DynamicProxy.DecoratorAopProxyTests super super AbstractAopProxyTests object protected override protected override = decl_stmt object = return protected override protected override return new public override public override IAopProxy SealedTestObject AdvisedSupport typeof public typeof public decl_stmt SealedTestObject = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new = decl_stmt Spring.Aop.Framework.IAopProxy = IAopProxy NonPublicTestObject AdvisedSupport typeof public typeof public decl_stmt NonPublicTestObject = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new = decl_stmt Spring.Aop.Framework.IAopProxy = TestObject AdvisedSupport ITestObject object IAopProxy TestObject public public decl_stmt Spring.Data.NHibernate.TestObject = new = decl_stmt Spring.Aop.Framework.AdvisedSupport = new = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() is is decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = decl_stmt Spring.Data.NHibernate.TestObject = NopInterceptor DoesNotImplementInterfaceTestObject DoesNotImplementInterfaceTestObject AdvisedSupport public public decl_stmt DoesNotImplementInterfaceTestObject = new = decl_stmt Spring.Aop.Interceptor.NopInterceptor = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new = call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) decl_stmt DoesNotImplementInterfaceTestObject = as = NopInterceptor DoesNotImplementInterfaceTestObject DoesNotImplementInterfaceTestObject AdvisedSupport public public decl_stmt DoesNotImplementInterfaceTestObject = new = decl_stmt Spring.Aop.Interceptor.NopInterceptor = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new = call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) decl_stmt DoesNotImplementInterfaceTestObject = as call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() = call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() NopInterceptor DoesNotImplementInterfaceTestObject DoesNotImplementInterfaceTestObject AdvisedSupport public public decl_stmt DoesNotImplementInterfaceTestObject = new = decl_stmt Spring.Aop.Interceptor.NopInterceptor = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new = call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) decl_stmt DoesNotImplementInterfaceTestObject = as call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() call DoesNotImplementInterfaceTestObject.GetName() = NopInterceptor DoesNotImplementInterfaceTestObject DoesNotImplementInterfaceTestObject AdvisedSupport public public decl_stmt DoesNotImplementInterfaceTestObject = new = decl_stmt Spring.Aop.Interceptor.NopInterceptor = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new = call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) decl_stmt DoesNotImplementInterfaceTestObject = as NopInterceptor ITestObject TestObject AdvisedSupport public public decl_stmt Spring.Data.NHibernate.TestObject = new = decl_stmt Spring.Aop.Interceptor.NopInterceptor = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) call Spring.Aop.Framework.AdvisedSupport.AddAdvice(int,IAdvice) decl_stmt Spring.Aop.Framework.AutoProxy.ITestObject = as = typeof = public override typeof = public override typeof = public override typeof = public override MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() typeof MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() call MethodInfo.GetCustomAttributes() MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() typeof MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() call MethodInfo.GetParameters() MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() typeof MarkerClass IAopProxy decl object AdvisedSupport MethodInfo object public public decl_stmt MarkerClass = new decl_stmt Spring.Aop.Framework.AdvisedSupport = new new typeof = = decl_stmt Spring.Aop.Framework.IAopProxy = decl_stmt object = call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() call IAopProxy.GetProxy() decl_stmt System.Reflection.MethodInfo = call object.GetType() call object.GetType() call object.GetType() call object.GetType() call object.GetType() decl_stmt object = call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() call MethodInfo.ReturnTypeCustomAttributes() return = return = protected virtual protected virtual return public public return