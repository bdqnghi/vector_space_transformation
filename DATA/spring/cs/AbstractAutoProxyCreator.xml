Spring.Aop.Framework.AutoProxy System using System.Collections using System.Collections.Generic using System.Linq using System.Reflection using System.Runtime.Remoting using AopAlliance.Aop using Common.Logging using Spring.Aop.Framework.Adapter using Spring.Aop.Target using Spring.Collections using Spring.Core using Spring.Objects using Spring.Objects.Factory using Spring.Objects.Factory.Config using class Spring.Aop.Framework.AutoProxy.AbstractAutoProxyCreator super super ProxyConfig super IInstantiationAwareObjectPostProcessor super IObjectFactoryAware super IOrdered ISet bool decl IList ISet decl IList IObjectFactory IList ISet IAdvisorAdapterRegistry ILog decl string bool int = = = = return = object decl IList Type public virtual public virtual if call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) return decl_stmt System.Type = : decl_stmt object = if call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) return if region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return if region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return decl_stmt System.Collections.Generic.IList < = if != call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return new call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return public virtual public virtual return return = return = protected virtual protected virtual return protected virtual protected virtual protected virtual protected virtual return typeof || typeof || typeof || typeof ITargetSourceCreator ITargetSource protected virtual protected virtual if != && != && call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) call Spring.Objects.Factory.IObjectFactory.ContainsObject(string) for = < ++ decl_stmt Spring.Aop.Framework.AutoProxy.ITargetSourceCreator = decl_stmt Spring.Aop.ITargetSource = call ITargetSourceCreator.GetTargetSource() call ITargetSourceCreator.GetTargetSource() call ITargetSourceCreator.GetTargetSource() call ITargetSourceCreator.GetTargetSource() call ITargetSourceCreator.GetTargetSource() if != if call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() return return decl IList decl Type object ProxyFactory protected virtual protected virtual < decl_stmt Spring.Data.NHibernate.Bytecode.ProxyFactory = call ProxyFactory.CopyFrom() call ProxyFactory.CopyFrom() call ProxyFactory.CopyFrom() call ProxyFactory.CopyFrom() call ProxyFactory.CopyFrom() decl_stmt object = if ! decl_stmt System.Type = foreach in call ProxyFactory.AddInterface() call ProxyFactory.AddInterface() call ProxyFactory.AddInterface() call ProxyFactory.AddInterface() call ProxyFactory.AddInterface() decl_stmt System.Collections.Generic.IList < = foreach in if is call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() call ProxyFactory.AddIntroduction() else call ProxyFactory.AddAdvisor() call ProxyFactory.AddAdvisor() call ProxyFactory.AddAdvisor() call ProxyFactory.AddAdvisor() call ProxyFactory.AddAdvisor() = = return call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) call Spring.Data.NHibernate.Bytecode.ProxyFactory.GetProxy(object,ISessionImplementor) protected virtual protected virtual return new decl IList decl List int decl List int protected virtual < protected virtual < < decl_stmt System.Collections.Generic.IList < = decl_stmt System.Collections.Generic.List < = new < if != call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() if != if call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() call decl List.InsertRange() < else call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() < if decl_stmt int = != : decl_stmt int = != : call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() call ILog.Info() decl_stmt System.Collections.Generic.List < = new < for = < ++ call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() return protected virtual protected virtual return + + decl List object private < private < decl_stmt System.Collections.Generic.List < = new < foreach in decl_stmt object = call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) call Spring.Objects.Factory.IObjectFactory.GetObject(string) if is call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() call decl List.AddRange() else call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() call IAdvisorAdapterRegistry.Wrap() return ITargetSource object decl IList public public decl_stmt object = if ! call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) if call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) || call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) call Spring.Collections.ISet.Contains(object) return if region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return if region region if call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() call ILog.Debug() endregion call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) return decl_stmt Spring.Aop.ITargetSource = if != call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) call Spring.Collections.ISet.Add(object) decl_stmt System.Collections.Generic.IList < = return return public public return public public < return