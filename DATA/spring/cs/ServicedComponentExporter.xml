Spring.EnterpriseServices System using System.Collections using System.EnterpriseServices using System.Reflection using System.Reflection.Emit using Spring.Core.TypeResolution using Spring.Objects.Factory using Spring.Proxy using class Spring.EnterpriseServices.ServicedComponentExporter super super IInitializingObject super IObjectNameAware string decl string string IList IDictionary return = return = return = return = public public = private private if == throw new Type IProxyTypeBuilder public public decl_stmt Spring.Proxy.IProxyTypeBuilder if = new else = new = = if != && > = = = decl_stmt System.Type = call Spring.Proxy.IProxyTypeBuilder.BuildProxyType() call Spring.Proxy.IProxyTypeBuilder.BuildProxyType() call Spring.Proxy.IProxyTypeBuilder.BuildProxyType() call Spring.Proxy.IProxyTypeBuilder.BuildProxyType() call Spring.Proxy.IProxyTypeBuilder.BuildProxyType() return protected override protected override MethodAttributes ILGenerator ConstructorBuilder protected override protected override decl_stmt MethodAttributes = | | | decl_stmt System.Reflection.Emit.ConstructorBuilder = decl_stmt System.Reflection.Emit.ILGenerator = call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ConstructorBuilder.GetILGenerator(int) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) call System.Reflection.Emit.ILGenerator.Emit(OpCode,sbyte) protected override protected override return new protected override protected override return protected override protected override return protected override protected override FieldInfo public override public override decl_stmt System.Reflection.FieldInfo = | call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType() call FieldInfo.FieldType()