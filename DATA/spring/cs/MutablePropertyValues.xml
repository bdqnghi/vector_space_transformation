Spring.Objects System using System.Collections using System.Collections.Generic using System.Globalization using System.Text using Spring.Util using class attribute Spring.Objects.MutablePropertyValues super super IPropertyValues decl List return public public new PropertyValue public public for = < ++ decl_stmt Spring.Objects.PropertyValue = if call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() call PropertyValue.Name() = = return call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() call decl List.Add() IMergable object object private private decl_stmt object = decl_stmt Spring.Objects.IMergable = as if != if decl_stmt object = call IMergable.Merge() call IMergable.Merge() call IMergable.Merge() call IMergable.Merge() call IMergable.Merge() return new return public public < if != foreach < in new public public < if != foreach in public public call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() call decl List.Remove() public public public public = string public public decl_stmt string = foreach in if return return public public return != PropertyValue MutablePropertyValues public public decl_stmt Spring.Objects.MutablePropertyValues = new if == return foreach in decl_stmt Spring.Objects.PropertyValue = if == call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) else if ! call Spring.Objects.PropertyValue.Equals(object) call Spring.Objects.PropertyValue.Equals(object) call Spring.Objects.PropertyValue.Equals(object) call Spring.Objects.PropertyValue.Equals(object) call Spring.Objects.PropertyValue.Equals(object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) call Spring.Objects.MutablePropertyValues.Add(string,object) return public public return StringBuilder decl IList public override public override decl_stmt System.Collections.Generic.IList < = decl_stmt System.Text.StringBuilder = new call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) call System.Text.StringBuilder.Append(byte) return call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int) call System.Text.StringBuilder.ToString(int,int)