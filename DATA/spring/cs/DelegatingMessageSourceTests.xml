Spring.Context.Support System using System.Globalization using NUnit.Framework using Rhino.Mocks using class attribute Spring.Context.Support.DelegatingMessageSourceTests MockRepository IMessageSource string return public public = new = < DelegatingMessageSource public public decl_stmt Spring.Context.Support.DelegatingMessageSource = new DelegatingMessageSource public public decl_stmt Spring.Context.Support.DelegatingMessageSource = new DelegatingMessageSource string string public public decl_stmt string const const = decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource string string public public decl_stmt string const const = decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource string string public public decl_stmt string const const = new decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource string string public public decl_stmt string const const = new decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource string string public public decl_stmt string const const = decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IMessageSourceResolvable string string DelegatingMessageSource public public decl_stmt string const const = decl_stmt Spring.Context.IMessageSourceResolvable = < decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource IMessageSourceResolvable typeof public typeof public decl_stmt Spring.Context.IMessageSourceResolvable = new new new decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource IMessageSourceResolvable typeof public typeof public decl_stmt Spring.Context.IMessageSourceResolvable = new new new decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) call Spring.Context.Support.DelegatingMessageSource.GetMessage(string) DelegatingMessageSource string string public public decl_stmt string const const = decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = string call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) DelegatingMessageSource string string public public decl_stmt string const const = decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt string = string call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) call Spring.Context.Support.DelegatingMessageSource.GetResourceObject(string,CultureInfo) DelegatingMessageSource public public object decl_stmt Spring.Context.Support.DelegatingMessageSource = new call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() DelegatingMessageSource typeof public typeof public decl_stmt Spring.Context.Support.DelegatingMessageSource = new call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources() call DelegatingMessageSource.ApplyResources()