Spring.Data.Core System using System.EnterpriseServices using NUnit.Framework using Rhino.Mocks using Spring.Data.Support using Spring.Transaction using Spring.Transaction.Support using class attribute Spring.Data.Core.ServiceDomainTransactionManagerTests MockRepository public public = new IServiceDomainAdapter TransactionTemplate ServiceDomainPlatformTransactionManager SimpleServiceConfig public public region region region region decl_stmt Spring.Data.Support.IServiceDomainAdapter = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() decl_stmt Spring.Data.Support.SimpleServiceConfig = new call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.ServiceDomainPlatformTransactionManager = new decl_stmt Spring.Transaction.Support.TransactionTemplate = new = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private return IServiceDomainAdapter TransactionTemplate ServiceDomainPlatformTransactionManager Exception SimpleServiceConfig public public region region region region decl_stmt Spring.Data.Support.IServiceDomainAdapter = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() decl_stmt Spring.Data.Support.SimpleServiceConfig = new call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.ServiceDomainPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new ! decl_stmt System.Exception = new try call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new catch ! call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() IServiceDomainAdapter TransactionTemplate ServiceDomainPlatformTransactionManager SimpleServiceConfig public public region region region region decl_stmt Spring.Data.Support.IServiceDomainAdapter = call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() call MockRepository.CreateMock() typeof using call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() call MockRepository.Ordered() decl_stmt Spring.Data.Support.SimpleServiceConfig = new call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) = = call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.Enter(SimpleServiceConfig) call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call Spring.Data.Support.IServiceDomainAdapter.SetAbort() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call Spring.Data.Support.IServiceDomainAdapter.SetComplete() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() call IServiceDomainAdapter.Leave() endregion call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() call MockRepository.ReplayAll() decl_stmt Spring.Data.Core.ServiceDomainPlatformTransactionManager = new = decl_stmt Spring.Transaction.Support.TransactionTemplate = new = call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) call Spring.Transaction.Support.TransactionTemplate.Execute(TransactionDelegate) new call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() call MockRepository.VerifyAll() private private = = = = if = = return public public throw public public new return private private return