Spring.Objects.Support System using NUnit.Framework using Spring.Core using class attribute Spring.Objects.Support.PropertyComparatorTests typeof public typeof public new ISortDefinition TestObject int TestObject PropertyComparator public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Objects.Support.PropertyComparator = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt int = call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) < ISortDefinition TestObject int TestObject PropertyComparator public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Objects.Support.PropertyComparator = new decl_stmt Spring.Data.NHibernate.TestObject = new = new decl_stmt Spring.Data.NHibernate.TestObject = new = new decl_stmt int = call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) < ISortDefinition TestObject int TestObject PropertyComparator public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Objects.Support.PropertyComparator = new decl_stmt Spring.Data.NHibernate.TestObject = new = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt int = call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) > ISortDefinition TestObject int TestObject PropertyComparator typeof public typeof public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Objects.Support.PropertyComparator = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt int = call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) == ISortDefinition decl TestObject TestObject TestObject decl TestObject TestObject public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new for = < ++ ISortDefinition decl TestObject TestObject TestObject decl TestObject TestObject public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new for = < ++ ISortDefinition decl TestObject TestObject TestObject decl TestObject TestObject public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new decl_stmt Spring.Data.NHibernate.TestObject = new for = < ++ typeof public typeof public ISortDefinition PropertyComparator Funk public public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Funk = new decl_stmt Spring.Objects.Support.PropertyComparator = new call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) - call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) call Spring.Objects.Support.PropertyComparator.Compare(object,object) ISortDefinition ISortDefinition PropertyComparator = public = public decl_stmt Spring.Objects.Support.ISortDefinition = new decl_stmt Spring.Objects.Support.PropertyComparator = new decl_stmt Spring.Objects.Support.ISortDefinition = return return =