org.springframework.messaging.handler java.util.Collection import java.util.Iterator import class super super implements decl AbstractMessageCondition public public if == return if != && == decl_stmt org.springframework.messaging.handler.AbstractMessageCondition < = < return call decl AbstractMessageCondition.getContent() call decl AbstractMessageCondition.getContent() call decl AbstractMessageCondition.getContent() call decl AbstractMessageCondition.getContent() call decl AbstractMessageCondition.getContent() return public public return StringBuilder Object public public decl_stmt java.lang.StringBuilder = new for < = decl_stmt java.lang.Object = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()