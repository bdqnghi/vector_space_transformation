org.springframework.remoting.rmi java.io.IOException import java.lang.reflect.InvocationTargetException import java.net.MalformedURLException import java.net.URL import java.net.URLConnection import java.net.URLStreamHandler import java.rmi.Naming import java.rmi.NotBoundException import java.rmi.Remote import java.rmi.RemoteException import java.rmi.registry.LocateRegistry import java.rmi.registry.Registry import java.rmi.server.RMIClientSocketFactory import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.springframework.aop.support.AopUtils import org.springframework.remoting.RemoteConnectFailureException import org.springframework.remoting.RemoteInvocationFailureException import org.springframework.remoting.RemoteLookupFailureException import org.springframework.remoting.support.RemoteInvocationBasedAccessor import org.springframework.remoting.support.RemoteInvocationUtils import class org.springframework.remoting.rmi.RmiClientInterceptor super super extends super implements Remote boolean RMIClientSocketFactory boolean Object boolean public public = public public = public public = public public = public public Remote boolean public public throws if decl_stmt Remote = if if instanceof + + else if != decl_stmt boolean = + + + + + ! : + if = String String URL Remote String Registry int protected protected throws try decl_stmt Remote = if != decl_stmt java.net.URL = new new decl_stmt java.lang.String = call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() if != && ! throw new + + decl_stmt java.lang.String = call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() call java.net.URL.getHost() decl_stmt int = call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() call java.net.URL.getPort() decl_stmt java.lang.String = call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() call java.net.URL.getPath() if != && call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.rmi.registry.Registry = = call Registry.lookup() call Registry.lookup() call Registry.lookup() call Registry.lookup() call Registry.lookup() else = if + + return catch throw new + + catch throw new + + catch throw new protected protected throws if ! || && ! return != : else synchronized if == = return Remote public public throws decl_stmt Remote = try return catch return catch if return else throw protected protected return String private private throws if decl_stmt java.lang.String = + + if else if return else throw Remote protected protected throws decl_stmt Remote = synchronized = = if = return RemoteException Throwable Throwable protected protected throws if instanceof try return catch throw catch decl_stmt java.lang.Throwable = throw catch throw new + + + + else try return catch decl_stmt java.lang.Throwable = if instanceof decl_stmt java.rmi.RemoteException = throw else throw protected protected throws if return + + return protected protected throws throw new