org.springframework.util.concurrent java.util.concurrent.CancellationException import java.util.concurrent.ExecutionException import java.util.concurrent.TimeUnit import java.util.concurrent.TimeoutException import org.junit.Before import org.junit.Test import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import static static org.mockito.Mockito.any import static static org.mockito.Mockito.* import class annotation org.springframework.util.concurrent.SettableListenableFutureTests decl SettableListenableFuture public public = new < public public call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isCancelled() call decl SettableListenableFuture.isCancelled() call decl SettableListenableFuture.isCancelled() call decl SettableListenableFuture.isCancelled() call decl SettableListenableFuture.isCancelled() String boolean public public throws decl_stmt java.lang.String = decl_stmt boolean = call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() public public call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() Throwable boolean public public throws decl_stmt java.lang.Throwable = new decl_stmt boolean = call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() try call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() catch decl String String public public decl_stmt java.lang.String = decl_stmt java.lang.String final final final = new call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() new < public public = public public call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() public public = public public decl String String public public decl_stmt java.lang.String = decl_stmt java.lang.String final final final = new call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() new < public public = public public call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() public public = public public decl Throwable Throwable public public decl_stmt java.lang.Throwable = new decl_stmt java.lang.Throwable final final final = new call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() new < public public public public = call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() public public public public = decl Throwable Throwable public public decl_stmt java.lang.Throwable = new decl_stmt java.lang.Throwable final final final = new call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() new < public public public public = call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() new public public public public = public public throws call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() String String public public throws decl_stmt java.lang.String final final = new new public public try call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() catch throw new decl_stmt java.lang.String = call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() public public try call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() catch throw new public public throws try call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() catch String String public public throws decl_stmt java.lang.String final final = new new public public try call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() catch throw new decl_stmt java.lang.String = call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() public public try call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() catch throw new boolean boolean public public decl_stmt boolean = call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() decl_stmt boolean = call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() public public call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() call decl SettableListenableFuture.isDone() InterruptableSettableListenableFuture public public decl_stmt InterruptableSettableListenableFuture = new call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() InterruptableSettableListenableFuture public public decl_stmt InterruptableSettableListenableFuture = new call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.cancel() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() call InterruptableSettableListenableFuture.calledInterruptTask() boolean boolean public public decl_stmt boolean = call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() decl_stmt boolean = call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() boolean boolean public public decl_stmt boolean = call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() decl_stmt boolean = call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() new boolean boolean public public decl_stmt boolean = call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() new decl_stmt boolean = call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() public public throws call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() try call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() catch public public throws new new public public try call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() catch throw new try call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() call decl SettableListenableFuture.get() catch public public try call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() catch throw new ListenableFutureCallback public public decl_stmt ListenableFutureCallback = call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() call decl SettableListenableFuture.set() ListenableFutureCallback public public decl_stmt ListenableFutureCallback = call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.addCallback() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.cancel() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() call decl SettableListenableFuture.setException() new protected protected = return