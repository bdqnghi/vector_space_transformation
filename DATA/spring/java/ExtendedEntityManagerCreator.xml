org.springframework.orm.jpa java.io.Serializable import java.lang.reflect.InvocationHandler import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.LinkedHashSet import java.util.Map import java.util.Set import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import javax.persistence.EntityTransaction import javax.persistence.TransactionRequiredException import javax.persistence.spi.PersistenceUnitInfo import javax.persistence.spi.PersistenceUnitTransactionType import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.Ordered import org.springframework.dao.DataAccessException import org.springframework.dao.support.PersistenceExceptionTranslator import org.springframework.transaction.support.ResourceHolderSynchronization import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.CollectionUtils import class org.springframework.orm.jpa.ExtendedEntityManagerCreator public static public static return public static public static return public static public static return public static public static return public static public static < return EntityManagerFactory EntityManagerFactoryInfo EntityManager public static public static < if instanceof decl_stmt org.springframework.orm.jpa.EntityManagerFactoryInfo = decl_stmt EntityManagerFactory = call org.springframework.orm.jpa.EntityManagerFactoryInfo.getNativeEntityManagerFactory() call org.springframework.orm.jpa.EntityManagerFactoryInfo.getNativeEntityManagerFactory() call org.springframework.orm.jpa.EntityManagerFactoryInfo.getNativeEntityManagerFactory() call org.springframework.orm.jpa.EntityManagerFactoryInfo.getNativeEntityManagerFactory() call org.springframework.orm.jpa.EntityManagerFactoryInfo.getNativeEntityManagerFactory() decl_stmt EntityManager = ! call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() : call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() return else decl_stmt EntityManager = ! : return JpaDialect Boolean PersistenceUnitInfo private static private static decl_stmt org.springframework.orm.jpa.JpaDialect = decl_stmt PersistenceUnitInfo = decl_stmt java.lang.Boolean = != call PersistenceUnitInfo.getTransactionType() call PersistenceUnitInfo.getTransactionType() call PersistenceUnitInfo.getTransactionType() call PersistenceUnitInfo.getTransactionType() call PersistenceUnitInfo.getTransactionType() == : return decl Set private static private static < extends extends decl_stmt java.util.Set < < = new < < if != call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() else call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return != : call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new < call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() new private private try return catch return decl Class ExtendedEntityManagerSynchronization public public throws if return == else if return else if return else if decl_stmt java.lang.Class < = < if == return else if call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() return else if if return else if if throw new decl_stmt ExtendedEntityManagerSynchronization = if != = return else if if throw new else if return else if if ! return if && try return catch throw private private if try catch if ! + else throw else if if ! && ! else if ! else throw new EntityTransaction ExtendedEntityManagerSynchronization private private decl_stmt EntityTransaction = call EntityTransaction.begin() call EntityTransaction.begin() call EntityTransaction.begin() call EntityTransaction.begin() call EntityTransaction.begin() if + + + decl_stmt ExtendedEntityManagerSynchronization = new public public return - protected protected try catch throw protected protected return public public try catch throw public public try if != try catch throw finally if DataAccessException private private decl_stmt DataAccessException = != : return != :