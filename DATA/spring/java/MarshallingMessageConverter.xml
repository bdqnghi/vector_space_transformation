org.springframework.jms.support.converter java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.IOException import java.io.StringReader import java.io.StringWriter import javax.jms.BytesMessage import javax.jms.JMSException import javax.jms.Message import javax.jms.Session import javax.jms.TextMessage import javax.xml.transform.Result import javax.xml.transform.Source import javax.xml.transform.stream.StreamResult import javax.xml.transform.stream.StreamSource import org.springframework.beans.factory.InitializingBean import org.springframework.oxm.Marshaller import org.springframework.oxm.Unmarshaller import org.springframework.oxm.XmlMappingException import org.springframework.util.Assert import class org.springframework.jms.support.converter.MarshallingMessageConverter super super implements Marshaller Unmarshaller MessageType public public = public public = public public = public public public public throws try switch case return case return default: return catch throw new + + catch throw new + + TextMessage BytesMessage public public throws try if instanceof decl_stmt org.springframework.web.socket.TextMessage = return else if instanceof decl_stmt BytesMessage = return else return catch throw new + catch throw new + StringWriter Result protected protected throws decl_stmt StringWriter = new decl_stmt javax.naming.spi.Result = new call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) return call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() BytesMessage ByteArrayOutputStream StreamResult protected protected throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt StreamResult = new call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) decl_stmt BytesMessage = call BytesMessage.writeBytes() call BytesMessage.writeBytes() call BytesMessage.writeBytes() call BytesMessage.writeBytes() call BytesMessage.writeBytes() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() return protected protected throws throw new + + Source protected protected throws decl_stmt Source = new new return call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() StreamSource decl byte ByteArrayInputStream protected protected throws decl_stmt byte = new int decl_stmt ByteArrayInputStream = new decl_stmt StreamSource = new return call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() protected protected throws throw new + +