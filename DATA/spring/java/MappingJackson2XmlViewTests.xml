org.springframework.web.servlet.view.xml java.io.IOException import java.util.Date import java.util.HashMap import java.util.Map import java.util.TreeMap import com.fasterxml.jackson.annotation.JsonView import com.fasterxml.jackson.core.JsonGenerator import com.fasterxml.jackson.databind.JavaType import com.fasterxml.jackson.databind.JsonMappingException import com.fasterxml.jackson.databind.JsonSerializer import com.fasterxml.jackson.databind.SerializerProvider import com.fasterxml.jackson.databind.annotation.JsonSerialize import com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig import com.fasterxml.jackson.databind.ser.BeanSerializerFactory import com.fasterxml.jackson.databind.ser.SerializerFactory import com.fasterxml.jackson.dataformat.xml.XmlMapper import org.junit.Before import org.junit.Test import org.mozilla.javascript.Context import org.mozilla.javascript.ContextFactory import org.mozilla.javascript.ScriptableObject import org.springframework.http.MediaType import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.validation.BindingResult import org.springframework.web.servlet.View import static static org.junit.Assert.* import static static org.mockito.Mockito.* import class org.springframework.web.servlet.view.xml.MappingJackson2XmlViewTests ScriptableObject Context MockHttpServletRequest MockHttpServletResponse MappingJackson2XmlView public public = new = new = = call Context.initStandardObjects() call Context.initStandardObjects() call Context.initStandardObjects() call Context.initStandardObjects() call Context.initStandardObjects() = new public public call MappingJackson2XmlView.isExposePathVariables() call MappingJackson2XmlView.isExposePathVariables() call MappingJackson2XmlView.isExposePathVariables() call MappingJackson2XmlView.isExposePathVariables() call MappingJackson2XmlView.isExposePathVariables() decl Map String public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() decl Map public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() decl Map public public throws call MappingJackson2XmlView.setDisableCaching() call MappingJackson2XmlView.setDisableCaching() call MappingJackson2XmlView.setDisableCaching() call MappingJackson2XmlView.setDisableCaching() call MappingJackson2XmlView.setDisableCaching() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) Object decl Map public public throws decl_stmt java.lang.Object = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() > call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() Object decl Map public public throws decl_stmt java.lang.Object = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() > call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() XmlMapper Object decl Map SerializerFactory String public public throws decl_stmt SerializerFactory = new decl_stmt XmlMapper = new call XmlMapper.setSerializerFactory() call XmlMapper.setSerializerFactory() call XmlMapper.setSerializerFactory() call XmlMapper.setSerializerFactory() call XmlMapper.setSerializerFactory() call MappingJackson2XmlView.setObjectMapper() call MappingJackson2XmlView.setObjectMapper() call MappingJackson2XmlView.setObjectMapper() call MappingJackson2XmlView.setObjectMapper() call MappingJackson2XmlView.setObjectMapper() decl_stmt java.lang.Object = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl Map String public public throws call MappingJackson2XmlView.setModelKey() call MappingJackson2XmlView.setModelKey() call MappingJackson2XmlView.setModelKey() call MappingJackson2XmlView.setModelKey() call MappingJackson2XmlView.setModelKey() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) decl Map = public = public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() String Object decl Map public public throws decl_stmt java.lang.Object = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.setUpdateContentLength() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() call MappingJackson2XmlView.render() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() > call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) Object private private throws decl_stmt java.lang.Object = call Context.evaluateString() call Context.evaluateString() call Context.evaluateString() call Context.evaluateString() call Context.evaluateString() + call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() + call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() public public return public public return public public return public public return new public public return public public return public public return public public return public public = public public throws public < public < throws if == return new else return