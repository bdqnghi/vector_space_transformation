org.springframework.context.support java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStreamReader import java.io.PrintStream import java.io.StringWriter import java.util.Arrays import java.util.List import java.util.Map import org.junit.Test import org.springframework.aop.support.AopUtils import org.springframework.beans.TypeMismatchException import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.BeanFactoryUtils import org.springframework.beans.factory.CannotLoadBeanClassException import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.ApplicationListener import org.springframework.context.MessageSource import org.springframework.core.io.ClassPathResource import org.springframework.core.io.FileSystemResource import org.springframework.core.io.Resource import org.springframework.tests.sample.beans.ResourceTestBean import org.springframework.util.FileCopyUtils import org.springframework.util.ObjectUtils import static static org.junit.Assert.* import class org.springframework.context.support.ClassPathXmlApplicationContextTests String String String String String String String String String String String String String String String String String String String ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext Service public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.configuration.Service = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() ClassPathXmlApplicationContext Service public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() decl_stmt org.springframework.context.annotation.configuration.Service = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() call Service.isProperlyDestroyed() ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() ClassPathXmlApplicationContext public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new new try call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() call ClassPathXmlApplicationContext.refresh() catch new call ClassPathXmlApplicationContext.isActive() call ClassPathXmlApplicationContext.isActive() call ClassPathXmlApplicationContext.isActive() call ClassPathXmlApplicationContext.isActive() call ClassPathXmlApplicationContext.isActive() ByteArrayOutputStream String private private throws decl_stmt java.io.ByteArrayOutputStream = new new decl_stmt java.lang.String = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() try call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() catch call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() instanceof call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() new call ClassPathXmlApplicationContext.getBeansOfType() call ClassPathXmlApplicationContext.getBeansOfType() call ClassPathXmlApplicationContext.getBeansOfType() call ClassPathXmlApplicationContext.getBeansOfType() call ClassPathXmlApplicationContext.getBeansOfType() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() AutowiredService AutowiredService ClassPathXmlApplicationContext Service Service MessageSource public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt org.springframework.context.MessageSource = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt org.springframework.context.annotation.configuration.Service = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() decl_stmt org.springframework.context.annotation.configuration.Service = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() call org.springframework.context.annotation.configuration.Service.getMessageSource() decl_stmt org.springframework.context.support.AutowiredService = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() decl_stmt org.springframework.context.support.AutowiredService = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call AutowiredService.getMessageSource() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext decl List Service public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt org.springframework.context.annotation.configuration.Service = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() decl_stmt java.util.List < = call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call org.springframework.context.annotation.configuration.Service.getResources() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() new new call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() new new call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() ClassPathXmlApplicationContext ClassPathXmlApplicationContext public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new new call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() Object Object ClassPathXmlApplicationContext Object ClassPathXmlApplicationContext decl String public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new new call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.containsBean() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.isSingleton() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() call ClassPathXmlApplicationContext.getType() decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt java.lang.String = call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() = call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.getAliases() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() Object Object ClassPathXmlApplicationContext Object ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new new decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() Object Object ClassPathXmlApplicationContext public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt java.lang.Object = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl Map decl String private private decl_stmt java.lang.String = = = = decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() ResourceTestBean StringWriter ClassPathXmlApplicationContext ResourceTestBean public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new public public if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return new return decl_stmt org.springframework.tests.sample.beans.ResourceTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt org.springframework.tests.sample.beans.ResourceTestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() instanceof decl_stmt StringWriter = new new call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() = new new call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() = new new call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call org.springframework.tests.sample.beans.ResourceTestBean.getResource() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() = new new call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call org.springframework.tests.sample.beans.ResourceTestBean.getInputStream() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() public public if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return new return GenericApplicationContext XmlBeanDefinitionReader public public decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() GenericApplicationContext XmlBeanDefinitionReader public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call GenericApplicationContext.setClassLoader() call GenericApplicationContext.setClassLoader() call GenericApplicationContext.setClassLoader() call GenericApplicationContext.setClassLoader() call GenericApplicationContext.setClassLoader() decl_stmt org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() GenericApplicationContext XmlBeanDefinitionReader public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call GenericApplicationContext.setId() call GenericApplicationContext.setId() call GenericApplicationContext.setId() call GenericApplicationContext.setId() call GenericApplicationContext.setId() call GenericApplicationContext.setDisplayName() call GenericApplicationContext.setDisplayName() call GenericApplicationContext.setDisplayName() call GenericApplicationContext.setDisplayName() call GenericApplicationContext.setDisplayName() decl_stmt org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getId() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.getDisplayName() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close() call GenericApplicationContext.close()