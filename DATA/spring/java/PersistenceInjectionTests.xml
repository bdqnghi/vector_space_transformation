org.springframework.orm.jpa.support java.io.Serializable import java.lang.reflect.InvocationHandler import java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.HashMap import java.util.Map import java.util.Properties import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import javax.persistence.PersistenceContext import javax.persistence.PersistenceContextType import javax.persistence.PersistenceProperty import javax.persistence.PersistenceUnit import org.hibernate.ejb.HibernateEntityManager import org.junit.Ignore import org.junit.Test import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.support.GenericApplicationContext import org.springframework.orm.jpa.AbstractEntityManagerFactoryBeanTests import org.springframework.orm.jpa.DefaultJpaDialect import org.springframework.orm.jpa.EntityManagerFactoryInfo import org.springframework.orm.jpa.EntityManagerHolder import org.springframework.stereotype.Repository import org.springframework.tests.context.SimpleMapScope import org.springframework.tests.mock.jndi.ExpectedLookupTemplate import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class annotation org.springframework.orm.jpa.support.PersistenceInjectionTests super super extends DefaultPrivatePersistenceContextField GenericApplicationContext FactoryBeanWithPersistenceContextField public public throws = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPrivatePersistenceContextField = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt FactoryBeanWithPersistenceContextField = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() + DefaultVendorSpecificPrivatePersistenceContextField GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultVendorSpecificPrivatePersistenceContextField = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() EntityManager GenericApplicationContext DefaultPublicPersistenceContextSetter public public throws decl_stmt EntityManager = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceContextSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() GenericApplicationContext EntityManager SpecificPublicPersistenceContextSetter EntityManagerFactory public public throws decl_stmt EntityManagerFactory = decl_stmt EntityManager = call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt SpecificPublicPersistenceContextSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() call SpecificPublicPersistenceContextSetter.getEntityManager() DefaultPublicPersistenceContextSetter EntityManager DefaultPrivatePersistenceContextField GenericApplicationContext public public decl_stmt EntityManager = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPrivatePersistenceContextField = new call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() decl_stmt DefaultPublicPersistenceContextSetter = new call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getAutowireCapableBeanFactory() RootBeanDefinition SimpleMapScope Object SimpleMapScope DummyInvocationHandler DefaultPublicPersistenceContextSetter GenericApplicationContext public public throws decl_stmt DummyInvocationHandler = new decl_stmt java.lang.Object = new decl_stmt org.springframework.context.support.GenericApplicationContext = new decl_stmt org.springframework.tests.context.SimpleMapScope = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceContextSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt org.springframework.tests.context.SimpleMapScope = call org.springframework.tests.context.SimpleMapScope.close() call org.springframework.tests.context.SimpleMapScope.close() call org.springframework.tests.context.SimpleMapScope.close() call org.springframework.tests.context.SimpleMapScope.close() call org.springframework.tests.context.SimpleMapScope.close() = DefaultPublicPersistenceContextSetter EntityManager GenericApplicationContext EntityManagerFactoryWithInfo public public throws decl_stmt EntityManager = call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt EntityManagerFactoryWithInfo = call EntityManagerFactoryWithInfo.getNativeEntityManagerFactory() call EntityManagerFactoryWithInfo.getNativeEntityManagerFactory() call EntityManagerFactoryWithInfo.getNativeEntityManagerFactory() call EntityManagerFactoryWithInfo.getNativeEntityManagerFactory() call EntityManagerFactoryWithInfo.getNativeEntityManagerFactory() call EntityManagerFactoryWithInfo.getJpaDialect() call EntityManagerFactoryWithInfo.getJpaDialect() call EntityManagerFactoryWithInfo.getJpaDialect() call EntityManagerFactoryWithInfo.getJpaDialect() call EntityManagerFactoryWithInfo.getJpaDialect() new call EntityManagerFactoryWithInfo.getEntityManagerInterface() call EntityManagerFactoryWithInfo.getEntityManagerInterface() call EntityManagerFactoryWithInfo.getEntityManagerInterface() call EntityManagerFactoryWithInfo.getEntityManagerInterface() call EntityManagerFactoryWithInfo.getEntityManagerInterface() call EntityManagerFactoryWithInfo.getBeanClassLoader() call EntityManagerFactoryWithInfo.getBeanClassLoader() call EntityManagerFactoryWithInfo.getBeanClassLoader() call EntityManagerFactoryWithInfo.getBeanClassLoader() call EntityManagerFactoryWithInfo.getBeanClassLoader() call EntityManagerFactoryWithInfo.createEntityManager() call EntityManagerFactoryWithInfo.createEntityManager() call EntityManagerFactoryWithInfo.createEntityManager() call EntityManagerFactoryWithInfo.createEntityManager() call EntityManagerFactoryWithInfo.createEntityManager() decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceContextSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() RootBeanDefinition EntityManager DefaultPublicPersistenceContextSetter GenericApplicationContext public public decl_stmt EntityManager = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceContextSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() DefaultPrivatePersistenceUnitField GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPrivatePersistenceUnitField = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() DefaultPublicPersistenceUnitSetter GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceUnitSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() RootBeanDefinition GenericApplicationContext DefaultPublicPersistenceUnitSetter EntityManagerFactory public public decl_stmt EntityManagerFactory = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceUnitSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() GenericApplicationContext DefaultPublicPersistenceUnitSetter EntityManagerFactory RootBeanDefinition DefaultPublicPersistenceUnitSetterNamedPerson public public decl_stmt EntityManagerFactory = decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.registerAlias(String,String) call org.springframework.context.support.GenericApplicationContext.registerAlias(String,String) call org.springframework.context.support.GenericApplicationContext.registerAlias(String,String) call org.springframework.context.support.GenericApplicationContext.registerAlias(String,String) call org.springframework.context.support.GenericApplicationContext.registerAlias(String,String) decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceUnitSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt DefaultPublicPersistenceUnitSetterNamedPerson = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() GenericApplicationContext DefaultPublicPersistenceUnitSetter EntityManagerFactoryWithInfo RootBeanDefinition DefaultPublicPersistenceUnitSetterNamedPerson public public decl_stmt EntityManagerFactoryWithInfo = call EntityManagerFactoryWithInfo.getPersistenceUnitName() call EntityManagerFactoryWithInfo.getPersistenceUnitName() call EntityManagerFactoryWithInfo.getPersistenceUnitName() call EntityManagerFactoryWithInfo.getPersistenceUnitName() call EntityManagerFactoryWithInfo.getPersistenceUnitName() decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() call org.springframework.context.support.GenericApplicationContext.getDefaultListableBeanFactory() decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt DefaultPublicPersistenceUnitSetter = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt DefaultPublicPersistenceUnitSetterNamedPerson = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() DefaultListableBeanFactory ExpectedLookupTemplate EntityManager PersistenceAnnotationBeanPostProcessor DefaultPublicPersistenceUnitSetter DefaultPublicPersistenceContextSetter DefaultPrivatePersistenceContextField DefaultPublicPersistenceUnitSetterNamedPerson EntityManagerFactoryWithInfo decl Map public public decl_stmt EntityManager = decl_stmt EntityManagerFactoryWithInfo = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPublicPersistenceUnitSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceUnitSetterNamedPerson = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPrivatePersistenceContextField = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceContextSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory ExpectedLookupTemplate PersistenceAnnotationBeanPostProcessor DefaultPublicPersistenceUnitSetter DefaultPublicPersistenceUnitSetterNamedPerson EntityManagerFactoryWithInfo decl Map public public decl_stmt EntityManagerFactoryWithInfo = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPublicPersistenceUnitSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceUnitSetterNamedPerson = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory ExpectedLookupTemplate PersistenceAnnotationBeanPostProcessor DefaultPublicPersistenceUnitSetter DefaultPublicPersistenceUnitSetterNamedPerson decl Map public public decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceUnits(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPublicPersistenceUnitSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceUnitSetterNamedPerson = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory DefaultPrivatePersistenceContextField PersistenceAnnotationBeanPostProcessor ExpectedLookupTemplate EntityManager EntityManager EntityManager DefaultPublicPersistenceContextSetter DefaultPrivatePersistenceContextFieldNamedPerson decl Map decl Map public public decl_stmt EntityManager = decl_stmt EntityManager = decl_stmt EntityManager = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPrivatePersistenceContextField = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPrivatePersistenceContextFieldNamedPerson = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceContextSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory DefaultPrivatePersistenceContextField PersistenceAnnotationBeanPostProcessor ExpectedLookupTemplate EntityManager EntityManager EntityManager DefaultPublicPersistenceContextSetter DefaultPrivatePersistenceContextFieldNamedPerson decl Map decl Map public public decl_stmt EntityManager = decl_stmt EntityManager = decl_stmt EntityManager = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call PersistenceAnnotationBeanPostProcessor.setDefaultPersistenceUnitName() call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPrivatePersistenceContextField = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPrivatePersistenceContextFieldNamedPerson = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceContextSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) DefaultListableBeanFactory DefaultPrivatePersistenceContextField PersistenceAnnotationBeanPostProcessor ExpectedLookupTemplate EntityManager EntityManager DefaultPublicPersistenceContextSetter decl Map decl Map public public decl_stmt EntityManager = decl_stmt EntityManager = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.tests.mock.jndi.ExpectedLookupTemplate = new call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() call ExpectedLookupTemplate.addObject() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setExtendedPersistenceContexts(Map) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.setJndiTemplate(Object) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt DefaultPrivatePersistenceContextField = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt DefaultPublicPersistenceContextSetter = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) PersistenceAnnotationBeanPostProcessor public public decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new try call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) new catch PersistenceAnnotationBeanPostProcessor public public decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new try call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) new catch PersistenceAnnotationBeanPostProcessor public public decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new try call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) new catch EntityManager PersistenceAnnotationBeanPostProcessor DefaultPrivatePersistenceContextFieldExtended public public decl_stmt EntityManager = decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new decl_stmt DefaultPrivatePersistenceContextFieldExtended = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) EntityManager PersistenceAnnotationBeanPostProcessor DefaultPrivatePersistenceContextFieldExtendedWithProps Properties public public decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt EntityManager = decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new decl_stmt DefaultPrivatePersistenceContextFieldExtendedWithProps = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) EntityManager DefaultPrivatePersistenceContextFieldWithProperties PersistenceAnnotationBeanPostProcessor Properties public public decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt EntityManager = call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() new call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new decl_stmt DefaultPrivatePersistenceContextFieldWithProperties = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() EntityManager DefaultPrivatePersistenceContextFieldWithProperties DefaultPrivatePersistenceContextField PersistenceAnnotationBeanPostProcessor Properties public public decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt EntityManager = call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() new call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new decl_stmt DefaultPrivatePersistenceContextFieldWithProperties = new decl_stmt DefaultPrivatePersistenceContextField = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() try new call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() finally EntityManager DefaultPrivatePersistenceContextFieldWithProperties DefaultPrivatePersistenceContextField PersistenceAnnotationBeanPostProcessor Properties public public decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt EntityManager = call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() call EntityManager.getDelegate() new call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() call EntityManager.isOpen() decl_stmt org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor = new decl_stmt DefaultPrivatePersistenceContextFieldWithProperties = new decl_stmt DefaultPrivatePersistenceContextField = new call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor.postProcessPropertyValues(PropertyValues,PropertyDescriptor,Object,String) call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() call DefaultPrivatePersistenceContextField.em() try new call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() call DefaultPrivatePersistenceContextFieldWithProperties.em() finally protected protected return public public throws return public public return public public return = public = public if != throw new = public public return = = public = = public public public if != throw new = public public return = public = public = public public return public public public public public public throws if return if = return if return throw new