org.springframework.web.servlet.tags.form java.beans.PropertyEditor import java.io.StringReader import java.util.ArrayList import java.util.Collections import java.util.HashMap import java.util.List import java.util.Map import javax.servlet.http.HttpServletRequest import javax.servlet.jsp.tagext.BodyTag import javax.servlet.jsp.tagext.Tag import org.dom4j.Document import org.dom4j.Element import org.dom4j.Node import org.dom4j.io.SAXReader import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockPageContext import org.springframework.tests.sample.beans.TestBean import org.springframework.validation.BeanPropertyBindingResult import org.springframework.validation.BindingResult import org.springframework.validation.Errors import org.springframework.web.servlet.support.BindStatus import org.springframework.web.servlet.support.RequestContext import org.springframework.web.servlet.tags.RequestContextAwareTag import static static org.junit.Assert.* import class annotation org.springframework.web.servlet.tags.form.OptionsTagTests super super extends SelectTag OptionsTag String protected protected = new protected protected return new = new protected protected return new public public return call SelectTag.setPageContext() call SelectTag.setPageContext() call SelectTag.setPageContext() call SelectTag.setPageContext() call SelectTag.setPageContext() protected protected return new protected protected return new public public return Element Element int SAXReader String Document List public public throws new decl_stmt int = decl_stmt java.lang.String = = + + decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() decl_stmt java.util.List = call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() decl_stmt javax.swing.text.Element = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() Element String String Element int SAXReader String Document List public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = new decl_stmt int = decl_stmt java.lang.String = = + + decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() decl_stmt java.util.List = call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() decl_stmt javax.swing.text.Element = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() BeanPropertyBindingResult TestBean PropertyEditor Element Element int SAXReader String Document List decl List public public throws decl_stmt java.beans.PropertyEditor = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) new decl_stmt org.springframework.validation.BeanPropertyBindingResult = new call org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor() call org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor() call org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor() call org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor() call org.springframework.validation.BeanPropertyBindingResult.getPropertyAccessor() new decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt int = decl_stmt java.lang.String = = + + decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() decl_stmt java.util.List = call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() decl_stmt javax.swing.text.Element = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() call Element.attribute() Element int SAXReader String Document List public public throws new decl_stmt int = decl_stmt java.lang.String = = + + decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() decl_stmt java.util.List = call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() Element int SAXReader String Document List public public throws decl_stmt int = decl_stmt java.lang.String = decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() decl_stmt java.util.List = call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() Element int Node SAXReader String BeanWithEnum Document Node public public throws decl_stmt BeanWithEnum = new call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() decl_stmt int = = decl_stmt java.lang.String = decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() decl_stmt sun.tools.tree.Node = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() decl_stmt sun.tools.tree.Node = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() Element int Node SAXReader String BeanWithEnum Document Node public public throws decl_stmt BeanWithEnum = new call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() call BeanWithEnum.setTestEnum() decl_stmt int = = decl_stmt java.lang.String = decl_stmt SAXReader = new decl_stmt javax.swing.text.Document = call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() call SAXReader.read() new decl_stmt javax.swing.text.Element = call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Document.getRootElement() call Element.elements() call Element.elements() call Element.elements() call Element.elements() call Element.elements() decl_stmt sun.tools.tree.Node = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() decl_stmt sun.tools.tree.Node = call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Node.getText() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() call Element.selectSingleNode() TestBean List protected protected decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setName(String) call org.springframework.tests.sample.beans.TestBean.setCountry(String) call org.springframework.tests.sample.beans.TestBean.setCountry(String) call org.springframework.tests.sample.beans.TestBean.setCountry(String) call org.springframework.tests.sample.beans.TestBean.setCountry(String) call org.springframework.tests.sample.beans.TestBean.setCountry(String) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) call org.springframework.tests.sample.beans.TestBean.setMyFloat(Float) new decl_stmt java.util.List = new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) call java.util.List.add(String) new Map MockPageContext RequestContext protected protected decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) + decl_stmt org.springframework.mock.web.MockPageContext = decl_stmt org.springframework.web.servlet.support.RequestContext = new call org.springframework.mock.web.MockPageContext.getRequest() call org.springframework.mock.web.MockPageContext.getRequest() call org.springframework.mock.web.MockPageContext.getRequest() call org.springframework.mock.web.MockPageContext.getRequest() call org.springframework.mock.web.MockPageContext.getRequest() call org.springframework.mock.web.MockPageContext.setAttribute(String,Object,int) call org.springframework.mock.web.MockPageContext.setAttribute(String,Object,int) call org.springframework.mock.web.MockPageContext.setAttribute(String,Object,int) call org.springframework.mock.web.MockPageContext.setAttribute(String,Object,int) call org.springframework.mock.web.MockPageContext.setAttribute(String,Object,int)