org.springframework.test.context.web javax.servlet.ServletContext import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.config.ConfigurableListableBeanFactory import org.springframework.context.ApplicationContext import org.springframework.context.ConfigurableApplicationContext import org.springframework.core.Conventions import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.mock.web.MockHttpServletRequest import org.springframework.mock.web.MockHttpServletResponse import org.springframework.mock.web.MockServletContext import org.springframework.test.context.TestContext import org.springframework.test.context.TestExecutionListener import org.springframework.test.context.support.AbstractTestExecutionListener import org.springframework.test.context.support.DependencyInjectionTestExecutionListener import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.request.RequestAttributes import org.springframework.web.context.request.RequestContextHolder import org.springframework.web.context.request.ServletWebRequest import class org.springframework.test.context.web.ServletTestExecutionListener super super extends String Log String String String public final public final return public public throws public public throws public public throws if if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() private private return || private private return ConfigurableListableBeanFactory ApplicationContext MockServletContext WebApplicationContext MockHttpServletRequest ConfigurableApplicationContext ServletContext ServletWebRequest MockHttpServletResponse private private if ! || return decl_stmt org.springframework.context.ApplicationContext = if instanceof decl_stmt org.springframework.web.context.WebApplicationContext = decl_stmt ServletContext = call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() call WebApplicationContext.getServletContext() if ! instanceof throw new if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt org.springframework.mock.web.MockServletContext = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.context.request.ServletWebRequest = new if instanceof decl_stmt org.springframework.context.ConfigurableApplicationContext = decl_stmt org.springframework.beans.factory.config.ConfigurableListableBeanFactory = call ConfigurableApplicationContext.getBeanFactory() call ConfigurableApplicationContext.getBeanFactory() call ConfigurableApplicationContext.getBeanFactory() call ConfigurableApplicationContext.getBeanFactory() call ConfigurableApplicationContext.getBeanFactory() call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object) call org.springframework.beans.factory.config.ConfigurableListableBeanFactory.registerResolvableDependency(Class,Object)