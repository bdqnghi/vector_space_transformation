org.springframework.core.io.support java.io.File import java.io.IOException import java.lang.reflect.InvocationHandler import java.lang.reflect.Method import java.net.JarURLConnection import java.net.MalformedURLException import java.net.URISyntaxException import java.net.URL import java.net.URLClassLoader import java.net.URLConnection import java.util.Arrays import java.util.Collections import java.util.Enumeration import java.util.LinkedHashSet import java.util.Set import java.util.jar.JarEntry import java.util.jar.JarFile import java.util.zip.ZipException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.io.DefaultResourceLoader import org.springframework.core.io.FileSystemResource import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.UrlResource import org.springframework.core.io.VfsResource import org.springframework.util.AntPathMatcher import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.PathMatcher import org.springframework.util.ReflectionUtils import org.springframework.util.ResourceUtils import org.springframework.util.StringUtils import class org.springframework.core.io.support.PathMatchingResourcePatternResolver super super implements Log ResourceLoader PathMatcher Method public public return public public return public public = public public return public public return int public public throws if if return else return else decl_stmt int = + if return else return new String decl Set protected protected throws decl_stmt java.lang.String = if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.util.Set < = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + return call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() URL decl Enumeration decl Set ClassLoader protected < protected < throws decl_stmt java.util.Set < = new < decl_stmt java.lang.ClassLoader = decl_stmt java.util.Enumeration < = != call java.lang.ClassLoader.getResources(String) call java.lang.ClassLoader.getResources(String) call java.lang.ClassLoader.getResources(String) call java.lang.ClassLoader.getResources(String) call java.lang.ClassLoader.getResources(String) : while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.net.URL = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if return protected protected return new UrlResource protected protected < if instanceof try for : if try decl_stmt org.springframework.core.io.UrlResource = new + + if call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + if == if != try catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + UrlResource String protected protected < try decl_stmt java.lang.String = for : try if decl_stmt org.springframework.core.io.UrlResource = new + + + if call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() call UrlResource.exists() catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + decl Resource String String decl Set protected protected throws decl_stmt java.lang.String = decl_stmt java.lang.String = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() decl_stmt org.springframework.core.io.Resource = decl_stmt java.util.Set < = new < for : = if call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() else if call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() else call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + return call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() call decl Set.toArray() new call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() int int protected protected decl_stmt int = + decl_stmt int = while > && = - + if == = return URL protected protected throws if != decl_stmt java.net.URL = if call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() call java.net.URL.getProtocol() return new return protected protected throws return decl Set JarEntry String JarURLConnection boolean String int JarFile String String JarEntry String URLConnection protected < protected < throws decl_stmt sun.net.www.URLConnection = decl_stmt java.util.jar.JarFile decl_stmt java.lang.String decl_stmt java.lang.String decl_stmt boolean if instanceof decl_stmt sun.net.www.protocol.jar.JarURLConnection = = call sun.net.www.protocol.jar.JarURLConnection.getJarFile() call sun.net.www.protocol.jar.JarURLConnection.getJarFile() call sun.net.www.protocol.jar.JarURLConnection.getJarFile() call sun.net.www.protocol.jar.JarURLConnection.getJarFile() call sun.net.www.protocol.jar.JarURLConnection.getJarFile() = call sun.net.www.protocol.jar.JarURLConnection.getJarFileURL() call sun.net.www.protocol.jar.JarURLConnection.getJarFileURL() call sun.net.www.protocol.jar.JarURLConnection.getJarFileURL() call sun.net.www.protocol.jar.JarURLConnection.getJarFileURL() call sun.net.www.protocol.jar.JarURLConnection.getJarFileURL() decl_stmt java.util.jar.JarEntry = call sun.net.www.protocol.jar.JarURLConnection.getJarEntry() call sun.net.www.protocol.jar.JarURLConnection.getJarEntry() call sun.net.www.protocol.jar.JarURLConnection.getJarEntry() call sun.net.www.protocol.jar.JarURLConnection.getJarEntry() call sun.net.www.protocol.jar.JarURLConnection.getJarEntry() = != call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() : = ! call sun.net.www.protocol.jar.JarURLConnection.getUseCaches() call sun.net.www.protocol.jar.JarURLConnection.getUseCaches() call sun.net.www.protocol.jar.JarURLConnection.getUseCaches() call sun.net.www.protocol.jar.JarURLConnection.getUseCaches() call sun.net.www.protocol.jar.JarURLConnection.getUseCaches() else decl_stmt java.lang.String = try decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if != - = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + = else = new = = = catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return try if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + if ! && ! call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) = + decl_stmt java.util.Set < = new < for < = call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() decl_stmt java.util.jar.JarEntry = decl_stmt java.lang.String = call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() if call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return finally if call JarFile.close() call JarFile.close() call JarFile.close() call JarFile.close() call JarFile.close() protected protected throws if try return new catch return new else return new File protected < protected < throws decl_stmt File try = catch if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + return return decl Set decl Set protected < protected < throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + decl_stmt java.util.Set < = decl_stmt java.util.Set < = new < call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new return String decl Set protected < protected < throws if ! if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return if ! if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + return if ! if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + return decl_stmt java.lang.String = if ! += = + decl_stmt java.util.Set < = new < return decl File String protected protected < throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + decl_stmt File = if == if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + return for : decl_stmt java.lang.String = if && + if ! if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + else if PatternVirtualFileVisitor Object public static < public static < throws decl_stmt java.lang.Object = decl_stmt PatternVirtualFileVisitor = new return call PatternVirtualFileVisitor.getResources() call PatternVirtualFileVisitor.getResources() call PatternVirtualFileVisitor.getResources() call PatternVirtualFileVisitor.getResources() call PatternVirtualFileVisitor.getResources() String public public throws decl_stmt java.lang.String = if == if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return == else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return else if return else if return else if return throw new + public public if new public public return public < public < return public public return public public return + + +