org.springframework.jca.context javax.resource.NotSupportedException import javax.resource.ResourceException import javax.resource.spi.ActivationSpec import javax.resource.spi.BootstrapContext import javax.resource.spi.ResourceAdapter import javax.resource.spi.ResourceAdapterInternalException import javax.resource.spi.endpoint.MessageEndpointFactory import javax.transaction.xa.XAResource import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.ConfigurableApplicationContext import org.springframework.core.env.ConfigurableEnvironment import org.springframework.core.env.StandardEnvironment import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import class org.springframework.jca.context.SpringContextResourceAdapter super super implements String Log String ConfigurableApplicationContext String public public = protected protected return protected protected return new public public throws if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + = ResourceAdapterApplicationContext decl String protected protected decl_stmt org.springframework.jca.context.ResourceAdapterApplicationContext = new call ResourceAdapterApplicationContext.setClassLoader() call ResourceAdapterApplicationContext.setClassLoader() call ResourceAdapterApplicationContext.setClassLoader() call ResourceAdapterApplicationContext.setClassLoader() call ResourceAdapterApplicationContext.setClassLoader() decl_stmt java.lang.String = if != call ResourceAdapterApplicationContext.refresh() call ResourceAdapterApplicationContext.refresh() call ResourceAdapterApplicationContext.refresh() call ResourceAdapterApplicationContext.refresh() call ResourceAdapterApplicationContext.refresh() return protected protected new public public call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() public public throws throw new public public public public throws return public public return instanceof && public public return