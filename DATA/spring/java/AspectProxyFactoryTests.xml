org.springframework.aop.aspectj.annotation java.io.Serializable import java.util.Arrays import org.apache.commons.logging.LogFactory import org.aspectj.lang.ProceedingJoinPoint import org.aspectj.lang.annotation.Around import org.aspectj.lang.annotation.Aspect import org.junit.Test import test.aop.PerThisAspect import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import class org.springframework.aop.aspectj.annotation.AspectProxyFactoryTests AspectJProxyFactory = public = public decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) TestBean ITestBean AspectJProxyFactory public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() * call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() ITestBean ITestBean AspectJProxyFactory AspectJProxyFactory TestBean TestBean public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() AspectJProxyFactory = public = public throws decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) new ITestBean ITestBean AspectJProxyFactory public public throws decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() decl_stmt org.springframework.scheduling.annotation.ITestBean = call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() int TestBean MultiplyReturnValue ITestBean AspectJProxyFactory ITestBean public public throws decl_stmt MultiplyReturnValue = new decl_stmt int = call MultiplyReturnValue.setMultiple() call MultiplyReturnValue.setMultiple() call MultiplyReturnValue.setMultiple() call MultiplyReturnValue.setMultiple() call MultiplyReturnValue.setMultiple() decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) call org.springframework.tests.sample.beans.TestBean.setAge(int) decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() * call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() * call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() AspectJProxyFactory = public = public throws decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) new ITestBean AspectJProxyFactory public public throws decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() ITestBean AspectJProxyFactory public public throws decl_stmt org.springframework.aop.aspectj.annotation.AspectJProxyFactory = new new call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.addAspect(Class) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call org.springframework.aop.aspectj.annotation.AspectJProxyFactory.getProxy() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() call ITestBean.doWithVarargs() public public return public public = public < extends extends public < extends extends return public public throws return public public throws return