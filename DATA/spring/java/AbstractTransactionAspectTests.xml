org.springframework.transaction.interceptor java.lang.reflect.Method import org.junit.Test import org.springframework.dao.OptimisticLockingFailureException import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.MockCallbackPreferringTransactionManager import org.springframework.transaction.NoTransactionException import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionStatus import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.UnexpectedRollbackException import org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.transaction.interceptor.AbstractTransactionAspectTests Method Method Method ITestBean PlatformTransactionManager TestBean TransactionAttributeSource public public throws decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.transaction.interceptor.TransactionAttributeSource = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() TransactionStatus PlatformTransactionManager MapTransactionAttributeSource TransactionAttribute ITestBean TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() TransactionAttribute ITestBean MockCallbackPreferringTransactionManager TestBean MapTransactionAttributeSource public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.MockCallbackPreferringTransactionManager = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() TransactionAttribute ITestBean MockCallbackPreferringTransactionManager TestBean MapTransactionAttributeSource public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.MockCallbackPreferringTransactionManager = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = try call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) new catch call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call MockCallbackPreferringTransactionManager.getDefinition() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() call org.springframework.transaction.MockCallbackPreferringTransactionManager.getStatus() TransactionStatus PlatformTransactionManager TransactionAttribute ITestBean MapTransactionAttributeSource MapTransactionAttributeSource TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = new call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) TransactionStatus PlatformTransactionManager MapTransactionAttributeSource TransactionAttribute ITestBean TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() TransactionStatus PlatformTransactionManager TestBean ITestBean MapTransactionAttributeSource TransactionAttribute ITestBean TestBean String TransactionInfo public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt java.lang.String final final = decl_stmt org.springframework.tests.sample.beans.TestBean = new public public throws decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() decl_stmt org.springframework.tests.sample.beans.TestBean = new public public decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() return decl_stmt org.springframework.scheduling.annotation.ITestBean = decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) TransactionInfo public public throws decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() TransactionInfo public public decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() return Method PlatformTransactionManager TestBean ITestBean MapTransactionAttributeSource TransactionAttribute ITestBean TransactionInfo TransactionStatus TestBean String TransactionAttribute TransactionStatus Method public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute final final = new decl_stmt org.springframework.transaction.interceptor.TransactionAttribute final final = new decl_stmt com.sun.jdi.Method = decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt java.lang.String final final = decl_stmt org.springframework.tests.sample.beans.TestBean = new public public throws decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() decl_stmt org.springframework.tests.sample.beans.TestBean = new public public decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() return decl_stmt org.springframework.scheduling.annotation.ITestBean = decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) TransactionInfo public public throws decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() TransactionInfo public public decl_stmt TransactionInfo = call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.hasTransaction() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() call TransactionInfo.getTransactionAttribute() return public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new public public throws new TransactionStatus PlatformTransactionManager MapTransactionAttributeSource TransactionAttribute ITestBean Method TransactionSystemException TestBean protected protected final final final final throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new public public == return decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt org.springframework.transaction.TransactionSystemException = new if if else decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = try call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) call org.springframework.scheduling.annotation.ITestBean.exceptional(Throwable) catch if else if ! if else public public == return TransactionStatus PlatformTransactionManager String MapTransactionAttributeSource TransactionAttribute ITestBean TransactionStatus Method TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt org.springframework.transaction.PlatformTransactionManager = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt java.lang.String final final = decl_stmt org.springframework.tests.sample.beans.TestBean = new public public decl_stmt org.springframework.transaction.TransactionStatus = call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() return decl_stmt org.springframework.scheduling.annotation.ITestBean = call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() TransactionStatus public public decl_stmt org.springframework.transaction.TransactionStatus = call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() call TransactionStatus.setRollbackOnly() return PlatformTransactionManager MapTransactionAttributeSource TransactionAttribute ITestBean Method CannotCreateTransactionException TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt CannotCreateTransactionException = new call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt org.springframework.tests.sample.beans.TestBean = new public public throw new decl_stmt org.springframework.scheduling.annotation.ITestBean = try call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() catch == public public throw new TransactionStatus PlatformTransactionManager String MapTransactionAttributeSource TransactionAttribute ITestBean Method UnexpectedRollbackException TestBean public public throws decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = new decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.MapTransactionAttributeSource = new call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) call org.springframework.transaction.interceptor.MapTransactionAttributeSource.register(Method,TransactionAttribute) decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.TransactionStatus = call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() call PlatformTransactionManager.getTransaction() decl_stmt UnexpectedRollbackException = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.scheduling.annotation.ITestBean = decl_stmt java.lang.String = try call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) call org.springframework.scheduling.annotation.ITestBean.setName(String) catch == call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() == protected protected try if ! catch if protected protected throws return new