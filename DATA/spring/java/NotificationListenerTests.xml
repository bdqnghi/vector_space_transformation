org.springframework.jmx.export java.util.HashMap import java.util.Map import javax.management.Attribute import javax.management.AttributeChangeNotification import javax.management.MalformedObjectNameException import javax.management.Notification import javax.management.NotificationFilter import javax.management.NotificationListener import javax.management.ObjectName import org.junit.Test import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.jmx.AbstractMBeanServerTests import org.springframework.jmx.JmxTestBean import org.springframework.jmx.access.NotificationListenerRegistrar import org.springframework.jmx.export.naming.SelfNaming import org.springframework.jmx.support.ObjectNameManager import static static org.junit.Assert.* import class org.springframework.jmx.export.NotificationListenerTests super super extends MBeanExporter ObjectName Map String CountingAttributeChangeNotificationListener JmxTestBean decl Map public public throws decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter ObjectName Map String CountingAttributeChangeNotificationListener JmxTestBean decl Map public public throws decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter String String Object CountingAttributeChangeNotificationListener JmxTestBean decl Map NotificationListenerBean public public throws decl_stmt java.lang.String = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt java.lang.Object = new decl_stmt org.springframework.jmx.export.NotificationListenerBean = new call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setMappedObjectName() call NotificationListenerBean.setMappedObjectName() call NotificationListenerBean.setMappedObjectName() call NotificationListenerBean.setMappedObjectName() call NotificationListenerBean.setMappedObjectName() call NotificationListenerBean.setHandback() call NotificationListenerBean.setHandback() call NotificationListenerBean.setHandback() call NotificationListenerBean.setHandback() call NotificationListenerBean.setHandback() decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) new decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getLastHandback() call CountingAttributeChangeNotificationListener.getLastHandback() call CountingAttributeChangeNotificationListener.getLastHandback() call CountingAttributeChangeNotificationListener.getLastHandback() call CountingAttributeChangeNotificationListener.getLastHandback() MBeanExporter ObjectName String NotificationListenerBean CountingAttributeChangeNotificationListener JmxTestBean decl Map public public throws decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt org.springframework.jmx.export.NotificationListenerBean = new call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) new decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter ObjectName NotificationListenerBean CountingAttributeChangeNotificationListener JmxTestBean decl Map String String AttributeChangeNotification public public throws decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt org.springframework.jmx.export.NotificationListenerBean = new call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationListener() call NotificationListenerBean.setNotificationFilter() call NotificationListenerBean.setNotificationFilter() call NotificationListenerBean.setNotificationFilter() call NotificationListenerBean.setNotificationFilter() call NotificationListenerBean.setNotificationFilter() new public public if instanceof decl_stmt javax.management.AttributeChangeNotification = return call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() else return decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) call org.springframework.jmx.export.MBeanExporter.setNotificationListeners(NotificationListenerBean) new decl_stmt java.lang.String = decl_stmt java.lang.String = new new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() AttributeChangeNotification public public if instanceof decl_stmt javax.management.AttributeChangeNotification = return call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() else return public public try new catch MBeanExporter Map ObjectName String DefaultListableBeanFactory CountingAttributeChangeNotificationListener decl Map SelfNamingTestBean public public throws decl_stmt java.lang.String = decl_stmt ObjectName = decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map = new decl_stmt CountingAttributeChangeNotificationListener = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter Map ObjectName String DefaultListableBeanFactory CountingAttributeChangeNotificationListener decl Map SelfNamingTestBean public public throws decl_stmt java.lang.String = decl_stmt ObjectName = decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map = new decl_stmt CountingAttributeChangeNotificationListener = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter Map ObjectName String DefaultListableBeanFactory CountingAttributeChangeNotificationListener decl Map SelfNamingTestBean public public throws decl_stmt java.lang.String = decl_stmt ObjectName = decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map = new decl_stmt CountingAttributeChangeNotificationListener = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter Map ObjectName String DefaultListableBeanFactory CountingAttributeChangeNotificationListener decl Map SelfNamingTestBean public public throws decl_stmt java.lang.String = decl_stmt ObjectName = decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map = new decl_stmt CountingAttributeChangeNotificationListener = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter Map SelfNamingTestBean SelfNamingTestBean DefaultListableBeanFactory CountingAttributeChangeNotificationListener String String decl Map ObjectName ObjectName public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt ObjectName = decl_stmt ObjectName = decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt SelfNamingTestBean = new call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() call SelfNamingTestBean.setObjectName() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerSingleton(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map = new decl_stmt CountingAttributeChangeNotificationListener = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setNotificationListenerMappings(Map) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) call org.springframework.jmx.export.MBeanExporter.setBeanFactory(BeanFactory) new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() new new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter ObjectName String CountingAttributeChangeNotificationListener JmxTestBean NotificationListenerRegistrar decl Map public public throws decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt org.springframework.jmx.access.NotificationListenerRegistrar = new call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setMappedObjectName() call NotificationListenerRegistrar.setMappedObjectName() call NotificationListenerRegistrar.setMappedObjectName() call NotificationListenerRegistrar.setMappedObjectName() call NotificationListenerRegistrar.setMappedObjectName() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() MBeanExporter ObjectName String CountingAttributeChangeNotificationListener JmxTestBean decl Map JmxTestBean NotificationListenerRegistrar ObjectName public public throws decl_stmt ObjectName = decl_stmt ObjectName = decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt org.springframework.jmx.JmxTestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() call ObjectName.getCanonicalName() decl_stmt org.springframework.jmx.export.MBeanExporter = new call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call MBeanExporter.setServer() call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) call org.springframework.jmx.export.MBeanExporter.setBeans(Map) decl_stmt CountingAttributeChangeNotificationListener = new decl_stmt org.springframework.jmx.access.NotificationListenerRegistrar = new call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call org.springframework.jmx.access.NotificationListenerRegistrar.setServer(MBeanServerConnection) call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setNotificationListener() call NotificationListenerRegistrar.setMappedObjectNames() call NotificationListenerRegistrar.setMappedObjectNames() call NotificationListenerRegistrar.setMappedObjectNames() call NotificationListenerRegistrar.setMappedObjectNames() call NotificationListenerRegistrar.setMappedObjectNames() new call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() call org.springframework.jmx.access.NotificationListenerRegistrar.afterPropertiesSet() decl_stmt java.lang.String = new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() call NotificationListenerRegistrar.destroy() new call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() call CountingAttributeChangeNotificationListener.getCount() Integer int AttributeChangeNotification String public public if instanceof decl_stmt javax.management.AttributeChangeNotification = decl_stmt java.lang.String = call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() call javax.management.AttributeChangeNotification.getAttributeName() decl_stmt java.lang.Integer = if != decl_stmt int = call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() + new else new Integer public public decl_stmt java.lang.Integer = return == : call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() call java.lang.Integer.intValue() public public return public public = public public throws return public public = public public return