org.springframework.core.io.support java.io.IOException import java.lang.reflect.Constructor import java.net.URL import java.util.ArrayList import java.util.Arrays import java.util.Enumeration import java.util.List import java.util.Properties import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.annotation.AnnotationAwareOrderComparator import org.springframework.core.io.UrlResource import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import org.springframework.util.StringUtils import class org.springframework.core.io.support.SpringFactoriesLoader Log String decl List ClassLoader decl List public static < < public static < < < decl_stmt java.lang.ClassLoader = if == = decl_stmt java.util.List < = if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + + decl_stmt java.util.List < = new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return URL String decl List decl Enumeration Properties String public static < public static < < decl_stmt java.lang.String = try decl_stmt java.util.Enumeration < = != : decl_stmt java.util.List < = new < while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.net.URL = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.util.Properties = new decl_stmt java.lang.String = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return catch throw new + + + + decl Class decl Constructor private static < private static < < try decl_stmt java.lang.Class < = if ! throw new + + + + decl_stmt java.lang.reflect.Constructor < = call decl Class.getDeclaredConstructor() call decl Class.getDeclaredConstructor() call decl Class.getDeclaredConstructor() call decl Class.getDeclaredConstructor() call decl Class.getDeclaredConstructor() return call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() call decl Constructor.newInstance() catch throw new +