org.springframework.web.socket.sockjs.client java.net.URI import java.net.URISyntaxException import java.util.ArrayList import java.util.List import org.junit.Before import org.junit.Test import org.mockito.ArgumentCaptor import org.springframework.http.HttpHeaders import org.springframework.http.HttpStatus import org.springframework.util.concurrent.ListenableFutureCallback import org.springframework.web.client.HttpServerErrorException import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketHttpHeaders import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.sockjs.client.TestTransport.XhrTestTransport import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertTrue import static static org.mockito.BDDMockito.any import static static org.mockito.BDDMockito.given import static static org.mockito.BDDMockito.mock import static static org.mockito.BDDMockito.times import static static org.mockito.BDDMockito.verify import static static org.mockito.BDDMockito.verifyNoMoreInteractions import static static org.mockito.BDDMockito.when import class org.springframework.web.socket.sockjs.client.SockJsClientTests String decl ListenableFutureCallback XhrTestTransport InfoReceiver WebSocketHandler SockJsClient TestTransport decl List public public = = new = new decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() = new = WebSocketSession public public throws decl_stmt org.springframework.web.socket.WebSocketSession = public public throws public public throws decl ArgumentCaptor WebSocketHttpHeaders HttpHeaders public public throws decl_stmt ArgumentCaptor < = decl_stmt org.springframework.web.socket.WebSocketHttpHeaders = new call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) new decl_stmt org.springframework.http.HttpHeaders = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) = call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.size() call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) call org.springframework.http.HttpHeaders.getFirst(String) decl ArgumentCaptor WebSocketHttpHeaders public public throws decl_stmt ArgumentCaptor < = decl_stmt org.springframework.web.socket.WebSocketHttpHeaders = new call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) call org.springframework.web.socket.WebSocketHttpHeaders.set(String,String) new call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() public public throws public public throws HttpServerErrorException public public throws decl_stmt HttpServerErrorException = new decl ArgumentCaptor private < private < decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() + + + + + return