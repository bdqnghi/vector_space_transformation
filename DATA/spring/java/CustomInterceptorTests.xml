org.springframework.cache.config java.io.IOException import java.util.Map import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.cache.CacheManager import org.springframework.cache.CacheTestUtils import org.springframework.cache.annotation.EnableCaching import org.springframework.cache.interceptor.CacheInterceptor import org.springframework.cache.interceptor.CacheOperationInvoker import org.springframework.cache.interceptor.CacheOperationSource import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import static static org.junit.Assert.* import class org.springframework.cache.config.CustomInterceptorTests decl CacheableService ConfigurableApplicationContext public public = new = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() public public call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() CacheInterceptor decl Map public public decl_stmt java.util.Map < = call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call ConfigurableApplicationContext.getBeansOfType() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl_stmt org.springframework.cache.interceptor.CacheInterceptor = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call CacheInterceptor.getClass() call CacheInterceptor.getClass() call CacheInterceptor.getClass() call CacheInterceptor.getClass() call CacheInterceptor.getClass() Object public public decl_stmt java.lang.Object = call decl CacheableService.throwUnchecked() call decl CacheableService.throwUnchecked() call decl CacheableService.throwUnchecked() call decl CacheableService.throwUnchecked() call decl CacheableService.throwUnchecked() public public try call decl CacheableService.throwChecked() call decl CacheableService.throwChecked() call decl CacheableService.throwChecked() call decl CacheableService.throwChecked() call decl CacheableService.throwChecked() catch catch + public public return public < public < return new CacheInterceptor public public decl_stmt org.springframework.cache.interceptor.CacheInterceptor = new call CacheInterceptor.setCacheManager() call CacheInterceptor.setCacheManager() call CacheInterceptor.setCacheManager() call CacheInterceptor.setCacheManager() call CacheInterceptor.setCacheManager() call CacheInterceptor.setCacheOperationSources() call CacheInterceptor.setCacheOperationSources() call CacheInterceptor.setCacheOperationSources() call CacheInterceptor.setCacheOperationSources() call CacheInterceptor.setCacheOperationSources() return Throwable protected protected try return catch decl_stmt java.lang.Throwable = if call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() call Throwable.getClass() == return else throw new new