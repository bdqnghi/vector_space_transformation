org.springframework.ui.velocity java.io.File import java.io.IOException import java.util.HashMap import java.util.Map import java.util.Properties import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.apache.velocity.app.VelocityEngine import org.apache.velocity.exception.VelocityException import org.apache.velocity.runtime.RuntimeConstants import org.apache.velocity.runtime.log.CommonsLogLogChute import org.springframework.core.io.DefaultResourceLoader import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.support.PropertiesLoaderUtils import org.springframework.util.CollectionUtils import org.springframework.util.StringUtils import class annotation org.springframework.ui.velocity.VelocityEngineFactory boolean ResourceLoader Resource boolean Log decl Map String public public = public public public public < if != public public = public public = protected protected return public public = protected protected return public public = VelocityEngine decl Map public public throws decl_stmt VelocityEngine = decl_stmt java.util.Map < = new < if != if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + if ! call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() call decl Map.putAll() if != if call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() new for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.setProperty() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() call VelocityEngine.init() return protected protected throws return new StringBuilder String Resource File decl String protected protected if try decl_stmt java.lang.StringBuilder = new decl_stmt java.lang.String = for = < ++ decl_stmt java.lang.String = decl_stmt org.springframework.core.io.Resource = decl_stmt File = call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() + call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() if < - call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() protected protected protected protected throws