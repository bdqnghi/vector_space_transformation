org.springframework.core.env org.springframework.core.convert.ConversionException import org.springframework.util.ClassUtils import class org.springframework.core.env.PropertySourcesPropertyResolver super super extends PropertySources public public if != for < : if return return public public return public < public < < return protected protected return boolean decl Class Object protected < protected < < decl_stmt boolean = if if != for < : if decl_stmt java.lang.Object = if != decl_stmt java.lang.Class < = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() if && instanceof = if call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() if ! throw new call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() call decl Class.getSimpleName() return if return boolean decl Class Object decl Class public < < public < < < decl_stmt boolean = if if != for < : if decl_stmt java.lang.Object = if != if decl_stmt java.lang.Class < if instanceof try = catch throw new else if instanceof = < else = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() if ! throw new decl_stmt java.lang.Class < = < return if return