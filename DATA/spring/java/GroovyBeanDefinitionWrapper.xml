org.springframework.beans.factory.groovy java.util.ArrayList import java.util.Collection import java.util.List import groovy.lang.GroovyObjectSupport import org.springframework.beans.BeanWrapper import org.springframework.beans.BeanWrapperImpl import org.springframework.beans.factory.config.AutowireCapableBeanFactory import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.BeanDefinitionHolder import org.springframework.beans.factory.config.ConstructorArgumentValues import org.springframework.beans.factory.config.RuntimeBeanReference import org.springframework.beans.factory.support.AbstractBeanDefinition import org.springframework.beans.factory.support.GenericBeanDefinition import org.springframework.util.CollectionUtils import class org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper super super extends decl Collection String String String String AbstractBeanDefinition decl List String decl Class String String BeanWrapper String String String public public return public public = public public if == = return AbstractBeanDefinition ConstructorArgumentValues protected protected decl_stmt org.springframework.beans.factory.support.AbstractBeanDefinition = new call org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClass(Class) call org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClass(Class) call org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClass(Class) call org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClass(Class) call org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClass(Class) if ! decl_stmt org.springframework.beans.factory.config.ConstructorArgumentValues = new for : call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) if != call AbstractBeanDefinition.setParentName() call AbstractBeanDefinition.setParentName() call AbstractBeanDefinition.setParentName() call AbstractBeanDefinition.setParentName() call AbstractBeanDefinition.setParentName() = new return public public = = public public return new public public if == throw new if instanceof = else if instanceof = else if instanceof = public public if instanceof = return public public if return else if call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() return return AbstractBeanDefinition List ConstructorArgumentValues public public if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) else decl_stmt org.springframework.beans.factory.support.AbstractBeanDefinition = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) else if call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) else if call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) else if call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) call org.springframework.beans.factory.support.AbstractBeanDefinition.setAutowireMode(int) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && instanceof decl_stmt org.springframework.beans.factory.config.ConstructorArgumentValues = new decl_stmt java.util.List = for : call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(Object,String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) call org.springframework.beans.factory.support.AbstractBeanDefinition.setConstructorArgumentValues(ConstructorArgumentValues) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(String) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(String) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call org.springframework.beans.factory.support.AbstractBeanDefinition.setInitMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setInitMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setInitMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setInitMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setInitMethodName(String) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) if != call org.springframework.beans.factory.support.AbstractBeanDefinition.setDestroyMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setDestroyMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setDestroyMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setDestroyMethodName(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setDestroyMethodName(String) else if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call org.springframework.beans.factory.support.AbstractBeanDefinition.setScope(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setScope(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setScope(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setScope(String) call org.springframework.beans.factory.support.AbstractBeanDefinition.setScope(String) : else if else