org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.AnnotatedElement import java.lang.reflect.Method import java.util.Arrays import java.util.List import org.springframework.context.EmbeddedValueResolverAware import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.stereotype.Controller import org.springframework.util.Assert import org.springframework.util.CollectionUtils import org.springframework.util.StringValueResolver import org.springframework.web.accept.ContentNegotiationManager import org.springframework.web.bind.annotation.CrossOrigin import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.annotation.RequestMethod import org.springframework.web.cors.CorsConfiguration import org.springframework.web.method.HandlerMethod import org.springframework.web.servlet.mvc.condition.AbstractRequestCondition import org.springframework.web.servlet.mvc.condition.CompositeRequestCondition import org.springframework.web.servlet.mvc.condition.RequestCondition import org.springframework.web.servlet.mvc.method.RequestMappingInfo import org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping import class org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping super super extends super implements boolean boolean boolean decl RequestMappingInfo StringValueResolver ContentNegotiationManager public public = public public = = || public public = public public = public public = public public = new public public return public public return public public return public public return public < public < return protected protected < return || RequestMappingInfo RequestMappingInfo protected protected < decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = if != decl_stmt org.springframework.web.servlet.mvc.method.RequestMappingInfo = if != = call RequestMappingInfo.combine() call RequestMappingInfo.combine() call RequestMappingInfo.combine() call RequestMappingInfo.combine() call RequestMappingInfo.combine() return RequestMapping decl RequestCondition private private decl_stmt RequestMapping = decl_stmt org.springframework.web.servlet.mvc.condition.RequestCondition < = instanceof < < : return != : protected < protected < < return protected < protected < return protected protected < return decl String protected protected if == return else decl_stmt java.lang.String = new for = < ++ = return CrossOrigin HandlerMethod CorsConfiguration CrossOrigin protected protected decl_stmt org.springframework.web.method.HandlerMethod = decl_stmt CrossOrigin = call org.springframework.web.method.HandlerMethod.getBeanType() call org.springframework.web.method.HandlerMethod.getBeanType() call org.springframework.web.method.HandlerMethod.getBeanType() call org.springframework.web.method.HandlerMethod.getBeanType() call org.springframework.web.method.HandlerMethod.getBeanType() decl_stmt CrossOrigin = if == && == return decl_stmt org.springframework.web.cors.CorsConfiguration = new if call org.springframework.web.cors.CorsConfiguration.getAllowedOrigins() call org.springframework.web.cors.CorsConfiguration.getAllowedOrigins() call org.springframework.web.cors.CorsConfiguration.getAllowedOrigins() call org.springframework.web.cors.CorsConfiguration.getAllowedOrigins() call org.springframework.web.cors.CorsConfiguration.getAllowedOrigins() call org.springframework.web.cors.CorsConfiguration.setAllowedOrigins(List) call org.springframework.web.cors.CorsConfiguration.setAllowedOrigins(List) call org.springframework.web.cors.CorsConfiguration.setAllowedOrigins(List) call org.springframework.web.cors.CorsConfiguration.setAllowedOrigins(List) call org.springframework.web.cors.CorsConfiguration.setAllowedOrigins(List) if call CorsConfiguration.getAllowedMethods() call CorsConfiguration.getAllowedMethods() call CorsConfiguration.getAllowedMethods() call CorsConfiguration.getAllowedMethods() call CorsConfiguration.getAllowedMethods() for : call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) call org.springframework.web.cors.CorsConfiguration.addAllowedMethod(String) if call org.springframework.web.cors.CorsConfiguration.getAllowedHeaders() call org.springframework.web.cors.CorsConfiguration.getAllowedHeaders() call org.springframework.web.cors.CorsConfiguration.getAllowedHeaders() call org.springframework.web.cors.CorsConfiguration.getAllowedHeaders() call org.springframework.web.cors.CorsConfiguration.getAllowedHeaders() call org.springframework.web.cors.CorsConfiguration.setAllowedHeaders(List) call org.springframework.web.cors.CorsConfiguration.setAllowedHeaders(List) call org.springframework.web.cors.CorsConfiguration.setAllowedHeaders(List) call org.springframework.web.cors.CorsConfiguration.setAllowedHeaders(List) call org.springframework.web.cors.CorsConfiguration.setAllowedHeaders(List) if call org.springframework.web.cors.CorsConfiguration.getAllowCredentials() call org.springframework.web.cors.CorsConfiguration.getAllowCredentials() call org.springframework.web.cors.CorsConfiguration.getAllowCredentials() call org.springframework.web.cors.CorsConfiguration.getAllowCredentials() call org.springframework.web.cors.CorsConfiguration.getAllowCredentials() == call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) call org.springframework.web.cors.CorsConfiguration.setAllowCredentials(Boolean) if call org.springframework.web.cors.CorsConfiguration.getMaxAge() call org.springframework.web.cors.CorsConfiguration.getMaxAge() call org.springframework.web.cors.CorsConfiguration.getMaxAge() call org.springframework.web.cors.CorsConfiguration.getMaxAge() call org.springframework.web.cors.CorsConfiguration.getMaxAge() == call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) call org.springframework.web.cors.CorsConfiguration.setMaxAge(Long) return String private private if == return for : call decl RequestMappingInfo.addAllowedOrigin() call decl RequestMappingInfo.addAllowedOrigin() call decl RequestMappingInfo.addAllowedOrigin() call decl RequestMappingInfo.addAllowedOrigin() call decl RequestMappingInfo.addAllowedOrigin() for : call decl RequestMappingInfo.addAllowedMethod() call decl RequestMappingInfo.addAllowedMethod() call decl RequestMappingInfo.addAllowedMethod() call decl RequestMappingInfo.addAllowedMethod() call decl RequestMappingInfo.addAllowedMethod() for : call decl RequestMappingInfo.addAllowedHeader() call decl RequestMappingInfo.addAllowedHeader() call decl RequestMappingInfo.addAllowedHeader() call decl RequestMappingInfo.addAllowedHeader() call decl RequestMappingInfo.addAllowedHeader() for : call decl RequestMappingInfo.addExposedHeader() call decl RequestMappingInfo.addExposedHeader() call decl RequestMappingInfo.addExposedHeader() call decl RequestMappingInfo.addExposedHeader() call decl RequestMappingInfo.addExposedHeader() decl_stmt java.lang.String = if call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() else if call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() call decl RequestMappingInfo.setAllowCredentials() else if ! call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() throw new + + + if >= && call decl RequestMappingInfo.getMaxAge() call decl RequestMappingInfo.getMaxAge() call decl RequestMappingInfo.getMaxAge() call decl RequestMappingInfo.getMaxAge() call decl RequestMappingInfo.getMaxAge() == call decl RequestMappingInfo.setMaxAge() call decl RequestMappingInfo.setMaxAge() call decl RequestMappingInfo.setMaxAge() call decl RequestMappingInfo.setMaxAge() call decl RequestMappingInfo.setMaxAge() private private return != :