org.springframework.web.socket.config.annotation org.springframework.beans.factory.config.CustomScopeConfigurer import org.springframework.context.annotation.Bean import org.springframework.http.converter.json.Jackson2ObjectMapperBuilder import org.springframework.messaging.converter.MappingJackson2MessageConverter import org.springframework.messaging.simp.SimpSessionScope import org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler import org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler import org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler import org.springframework.messaging.simp.user.SimpUserRegistry import org.springframework.messaging.simp.user.UserSessionRegistryAdapter import org.springframework.web.servlet.HandlerMapping import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.config.WebSocketMessageBrokerStats import org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory import org.springframework.web.socket.messaging.DefaultSimpUserRegistry import org.springframework.web.socket.messaging.SubProtocolWebSocketHandler import org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler import class org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport super super extends WebSocketTransportRegistration protected protected return new decl org protected protected decl_stmt org.springframework.messaging.simp.user.UserSessionRegistry = if != return new return new WebSocketHandler WebMvcStompEndpointRegistry public public decl_stmt org.springframework.web.socket.WebSocketHandler = decl_stmt org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry = new call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.setApplicationContext(ApplicationContext) call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.setApplicationContext(ApplicationContext) call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.setApplicationContext(ApplicationContext) call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.setApplicationContext(ApplicationContext) call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.setApplicationContext(ApplicationContext) return call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.getHandlerMapping() call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.getHandlerMapping() call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.getHandlerMapping() call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.getHandlerMapping() call org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry.getHandlerMapping() public public return new protected protected for : = return protected final protected final if == = new return protected protected CustomScopeConfigurer public static public static decl_stmt org.springframework.beans.factory.config.CustomScopeConfigurer = new call org.springframework.beans.factory.config.CustomScopeConfigurer.addScope(String,Scope) call org.springframework.beans.factory.config.CustomScopeConfigurer.addScope(String,Scope) call org.springframework.beans.factory.config.CustomScopeConfigurer.addScope(String,Scope) call org.springframework.beans.factory.config.CustomScopeConfigurer.addScope(String,Scope) call org.springframework.beans.factory.config.CustomScopeConfigurer.addScope(String,Scope) new return AbstractBrokerMessageHandler StompBrokerRelayMessageHandler WebSocketMessageBrokerStats public public decl_stmt org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler = decl_stmt org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler = instanceof : decl_stmt org.springframework.web.socket.config.WebSocketMessageBrokerStats = new call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setSubProtocolWebSocketHandler(SubProtocolWebSocketHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setSubProtocolWebSocketHandler(SubProtocolWebSocketHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setSubProtocolWebSocketHandler(SubProtocolWebSocketHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setSubProtocolWebSocketHandler(SubProtocolWebSocketHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setSubProtocolWebSocketHandler(SubProtocolWebSocketHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setStompBrokerRelay(StompBrokerRelayMessageHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setStompBrokerRelay(StompBrokerRelayMessageHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setStompBrokerRelay(StompBrokerRelayMessageHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setStompBrokerRelay(StompBrokerRelayMessageHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setStompBrokerRelay(StompBrokerRelayMessageHandler) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setInboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setInboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setInboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setInboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setInboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setOutboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setOutboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setOutboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setOutboundChannelExecutor(ThreadPoolTaskExecutor) call org.springframework.web.socket.config.WebSocketMessageBrokerStats.setOutboundChannelExecutor(ThreadPoolTaskExecutor) call WebSocketMessageBrokerStats.setSockJsTaskScheduler() call WebSocketMessageBrokerStats.setSockJsTaskScheduler() call WebSocketMessageBrokerStats.setSockJsTaskScheduler() call WebSocketMessageBrokerStats.setSockJsTaskScheduler() call WebSocketMessageBrokerStats.setSockJsTaskScheduler() return MappingJackson2MessageConverter protected protected decl_stmt org.springframework.jms.support.converter.MappingJackson2MessageConverter = call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setObjectMapper(ObjectMapper) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setObjectMapper(ObjectMapper) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setObjectMapper(ObjectMapper) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setObjectMapper(ObjectMapper) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setObjectMapper(ObjectMapper) return