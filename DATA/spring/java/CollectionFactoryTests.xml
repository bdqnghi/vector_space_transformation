org.springframework.core java.util.ArrayList import java.util.Collection import java.util.EnumMap import java.util.EnumSet import java.util.HashMap import java.util.HashSet import java.util.LinkedHashMap import java.util.LinkedHashSet import java.util.List import java.util.Map import java.util.NavigableMap import java.util.NavigableSet import java.util.Set import java.util.SortedMap import java.util.SortedSet import java.util.TreeMap import java.util.TreeSet import org.junit.Test import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.springframework.core.CollectionFactory.* import class org.springframework.core.CollectionFactoryTests decl Collection public public decl_stmt java.util.Collection < = try call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() catch decl Collection public public decl_stmt java.util.Collection < = try call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() catch decl Map decl EnumMap public public decl_stmt java.util.EnumMap < = new <> call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() decl_stmt java.util.Map < = try call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch decl Map public public decl_stmt java.util.Map < = try call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch decl Map public public decl_stmt java.util.Map < = try call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() catch decl Collection public public decl_stmt java.util.Collection < = new < call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() decl Collection decl HashSet public public decl_stmt java.util.HashSet < = new < call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() call decl HashSet.add() decl_stmt java.util.Collection < = call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() decl Collection public public decl_stmt java.util.Collection < = call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() decl Collection public public decl_stmt java.util.Collection < = call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() call decl Collection.size() decl Map public public decl_stmt java.util.Map < = new < call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl Map decl Map public public decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl Map public public decl_stmt java.util.Map < = new < call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() decl Map decl EnumMap public public decl_stmt java.util.EnumMap < = new < call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() call decl EnumMap.put() decl_stmt java.util.Map < = call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() public public public public = public = public = public = public = public = public public public public public = public = public = public = public = public = public