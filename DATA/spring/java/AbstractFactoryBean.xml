org.springframework.beans.factory.config java.lang.reflect.InvocationHandler import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Proxy import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.SimpleTypeConverter import org.springframework.beans.TypeConverter import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.DisposableBean import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.FactoryBeanNotInitializedException import org.springframework.beans.factory.InitializingBean import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.ReflectionUtils import class super super implements boolean BeanFactory T ClassLoader T boolean Log public public = public public return public public = public public = protected protected return BeanFactory protected protected decl_stmt org.springframework.beans.factory.BeanFactory = if instanceof return else return new public public throws if = = = public final public final throws if return : else return private private throws if == throw new + if == = new return private private throws if ! throw new return public public throws if decl Class protected < protected < decl_stmt java.lang.Class < = return != && call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() call decl Class.isInterface() new <