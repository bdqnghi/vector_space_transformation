org.springframework.orm.hibernate3 org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Session import org.springframework.transaction.support.TransactionSynchronizationManager import class annotation org.springframework.orm.hibernate3.HibernateInterceptor super super extends super implements boolean public public = boolean Session Object SessionHolder FlushMode public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.orm.hibernate4.SessionHolder = decl_stmt boolean = != && call org.springframework.orm.hibernate4.SessionHolder.containsSession(Session) call org.springframework.orm.hibernate4.SessionHolder.containsSession(Session) call org.springframework.orm.hibernate4.SessionHolder.containsSession(Session) call org.springframework.orm.hibernate4.SessionHolder.containsSession(Session) call org.springframework.orm.hibernate4.SessionHolder.containsSession(Session) if else if != call org.springframework.orm.hibernate4.SessionHolder.addSession(Session) call org.springframework.orm.hibernate4.SessionHolder.addSession(Session) call org.springframework.orm.hibernate4.SessionHolder.addSession(Session) call org.springframework.orm.hibernate4.SessionHolder.addSession(Session) call org.springframework.orm.hibernate4.SessionHolder.addSession(Session) else new decl_stmt FlushMode = try = decl_stmt java.lang.Object = return catch if throw else throw finally if if != call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() else if == || call org.springframework.orm.hibernate4.SessionHolder.doesNotHoldNonDefaultSession() call org.springframework.orm.hibernate4.SessionHolder.doesNotHoldNonDefaultSession() call org.springframework.orm.hibernate4.SessionHolder.doesNotHoldNonDefaultSession() call org.springframework.orm.hibernate4.SessionHolder.doesNotHoldNonDefaultSession() call org.springframework.orm.hibernate4.SessionHolder.doesNotHoldNonDefaultSession() protected protected return