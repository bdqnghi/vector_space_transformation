org.springframework.web.socket java.util.ArrayList import java.util.Collections import java.util.LinkedHashMap import java.util.List import java.util.Locale import java.util.Map import org.springframework.util.Assert import org.springframework.util.CollectionUtils import org.springframework.util.LinkedCaseInsensitiveMap import org.springframework.util.StringUtils import class org.springframework.web.socket.WebSocketExtension String decl Map public public return public < public < return decl List public static < public static < if == || ! return else decl_stmt java.util.List < = new < for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return String decl Map String int String decl String String private static private static + decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.util.Map < = if > = new < - for = < ++ decl_stmt java.lang.String = decl_stmt int = call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) if != - decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) decl_stmt java.lang.String = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return new WebSocketExtension public public if == return if == || != return decl_stmt org.springframework.web.socket.WebSocketExtension = if ! call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return if ! call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() call decl Map.equals() return return int public public decl_stmt int = call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() call java.lang.String.hashCode() = * + call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() call decl Map.hashCode() return StringBuilder public public decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) for : call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()