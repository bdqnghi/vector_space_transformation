org.springframework.orm.hibernate3.support org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Session import org.hibernate.SessionFactory import org.springframework.beans.factory.InitializingBean import org.springframework.dao.DataAccessResourceFailureException import org.springframework.transaction.support.TransactionSynchronizationManager import class annotation org.springframework.orm.hibernate3.support.OpenSessionInterceptor super super implements SessionFactory public public = public public return public public if == throw new Session SessionFactory public public throws decl_stmt SessionFactory = if ! decl_stmt sun.security.pkcs11.Session = try new return finally else return Session protected protected throws try decl_stmt sun.security.pkcs11.Session = call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() call Session.setFlushMode() return catch throw new