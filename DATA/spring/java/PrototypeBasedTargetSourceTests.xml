org.springframework.aop.target org.junit.Test import org.springframework.aop.TargetSource import org.springframework.beans.MutablePropertyValues import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.tests.sample.beans.SerializablePerson import org.springframework.tests.sample.beans.TestBean import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import class org.springframework.aop.target.PrototypeBasedTargetSourceTests RootBeanDefinition MutablePropertyValues TargetSource TestTargetSource DefaultListableBeanFactory RootBeanDefinition MutablePropertyValues SingletonTargetSource public public throws decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() decl_stmt org.springframework.beans.MutablePropertyValues = new decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setPropertyValues() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() call RootBeanDefinition.setScope() decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt TestTargetSource = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.aop.TargetSource = instanceof decl_stmt org.springframework.aop.target.SingletonTargetSource = call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() public public throws return public public throws