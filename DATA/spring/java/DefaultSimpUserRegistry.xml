org.springframework.web.socket.messaging java.security.Principal import java.util.HashSet import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import org.springframework.context.ApplicationEvent import org.springframework.context.event.SmartApplicationListener import org.springframework.core.Ordered import org.springframework.messaging.Message import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.user.DestinationUserNameProvider import org.springframework.messaging.simp.user.SimpSession import org.springframework.messaging.simp.user.SimpSubscription import org.springframework.messaging.simp.user.SimpSubscriptionMatcher import org.springframework.messaging.simp.user.SimpUser import org.springframework.messaging.simp.user.SimpUserRegistry import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.util.Assert import class org.springframework.web.socket.messaging.DefaultSimpUserRegistry super super implements Object decl Map decl Map public public return public public < extends extends return String decl Message String LocalSimpUser SimpMessageHeaderAccessor String LocalSimpSession LocalSimpUser String AbstractSubProtocolEvent String public public decl_stmt org.springframework.web.socket.messaging.AbstractSubProtocolEvent = decl_stmt org.springframework.messaging.Message < = call org.springframework.web.socket.messaging.AbstractSubProtocolEvent.getMessage() call org.springframework.web.socket.messaging.AbstractSubProtocolEvent.getMessage() call org.springframework.web.socket.messaging.AbstractSubProtocolEvent.getMessage() call org.springframework.web.socket.messaging.AbstractSubProtocolEvent.getMessage() call org.springframework.web.socket.messaging.AbstractSubProtocolEvent.getMessage() decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = decl_stmt java.lang.String = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSessionId(Map) if instanceof decl_stmt LocalSimpSession = if != decl_stmt java.lang.String = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() decl_stmt java.lang.String = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getDestination() call LocalSimpSession.addSubscription() call LocalSimpSession.addSubscription() call LocalSimpSession.addSubscription() call LocalSimpSession.addSubscription() call LocalSimpSession.addSubscription() else if instanceof decl_stmt java.security.Principal = call AbstractSubProtocolEvent.getUser() call AbstractSubProtocolEvent.getUser() call AbstractSubProtocolEvent.getUser() call AbstractSubProtocolEvent.getUser() call AbstractSubProtocolEvent.getUser() if == return decl_stmt java.lang.String = call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() if instanceof = synchronized decl_stmt LocalSimpUser = if == = new decl_stmt LocalSimpSession = new call LocalSimpUser.addSession() call LocalSimpUser.addSession() call LocalSimpUser.addSession() call LocalSimpUser.addSession() call LocalSimpUser.addSession() else if instanceof synchronized decl_stmt LocalSimpSession = if != decl_stmt LocalSimpUser = call LocalSimpSession.getUser() call LocalSimpSession.getUser() call LocalSimpSession.getUser() call LocalSimpSession.getUser() call LocalSimpSession.getUser() call LocalSimpUser.removeSession() call LocalSimpUser.removeSession() call LocalSimpUser.removeSession() call LocalSimpUser.removeSession() call LocalSimpUser.removeSession() if ! call LocalSimpUser.hasSessions() call LocalSimpUser.hasSessions() call LocalSimpUser.hasSessions() call LocalSimpUser.hasSessions() call LocalSimpUser.hasSessions() call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() call LocalSimpUser.getName() else if instanceof decl_stmt LocalSimpSession = if != decl_stmt java.lang.String = call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call org.springframework.messaging.simp.SimpMessageHeaderAccessor.getSubscriptionId() call LocalSimpSession.removeSubscription() call LocalSimpSession.removeSubscription() call LocalSimpSession.removeSubscription() call LocalSimpSession.removeSubscription() call LocalSimpSession.removeSubscription() public public < return public public return public < public < return new < decl Set public < public < decl_stmt java.util.Set < = new < for : for : if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return public public return + public public return public public return ! public public return != : public < public < return new < public public if == return if == || ! instanceof return return public public return public public return + + + public public return public public return public < public < return new < new public public return public public if == return if == || ! instanceof return return public public return + + + public public return public public return public public return public public return * + SimpSubscription public public if == return if == || ! instanceof return decl_stmt org.springframework.messaging.simp.user.SimpSubscription = return call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() && call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() public public return +