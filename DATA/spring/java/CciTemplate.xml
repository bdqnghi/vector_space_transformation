org.springframework.jca.cci.core java.sql.SQLException import javax.resource.NotSupportedException import javax.resource.ResourceException import javax.resource.cci.Connection import javax.resource.cci.ConnectionFactory import javax.resource.cci.ConnectionSpec import javax.resource.cci.IndexedRecord import javax.resource.cci.Interaction import javax.resource.cci.InteractionSpec import javax.resource.cci.MappedRecord import javax.resource.cci.Record import javax.resource.cci.RecordFactory import javax.resource.cci.ResultSet import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.dao.DataAccessException import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jca.cci.CannotCreateRecordException import org.springframework.jca.cci.CciOperationNotSupportedException import org.springframework.jca.cci.InvalidResultSetAccessException import org.springframework.jca.cci.RecordTypeNotSupportedException import org.springframework.jca.cci.connection.ConnectionFactoryUtils import org.springframework.jca.cci.connection.NotSupportedRecordFactory import org.springframework.util.Assert import class org.springframework.jca.cci.core.CciTemplate super super implements Log ConnectionFactory RecordCreator ConnectionSpec public public = public public return public public = public public return public public = public public return public public if == throw new CciTemplate public public decl_stmt org.springframework.jca.cci.core.CciTemplate = new call org.springframework.jca.cci.core.CciTemplate.setConnectionFactory(ConnectionFactory) call org.springframework.jca.cci.core.CciTemplate.setConnectionFactory(ConnectionFactory) call org.springframework.jca.cci.core.CciTemplate.setConnectionFactory(ConnectionFactory) call org.springframework.jca.cci.core.CciTemplate.setConnectionFactory(ConnectionFactory) call org.springframework.jca.cci.core.CciTemplate.setConnectionFactory(ConnectionFactory) call org.springframework.jca.cci.core.CciTemplate.setConnectionSpec(ConnectionSpec) call org.springframework.jca.cci.core.CciTemplate.setConnectionSpec(ConnectionSpec) call org.springframework.jca.cci.core.CciTemplate.setConnectionSpec(ConnectionSpec) call org.springframework.jca.cci.core.CciTemplate.setConnectionSpec(ConnectionSpec) call org.springframework.jca.cci.core.CciTemplate.setConnectionSpec(ConnectionSpec) call org.springframework.jca.cci.core.CciTemplate.setOutputRecordCreator(RecordCreator) call org.springframework.jca.cci.core.CciTemplate.setOutputRecordCreator(RecordCreator) call org.springframework.jca.cci.core.CciTemplate.setOutputRecordCreator(RecordCreator) call org.springframework.jca.cci.core.CciTemplate.setOutputRecordCreator(RecordCreator) call org.springframework.jca.cci.core.CciTemplate.setOutputRecordCreator(RecordCreator) return Connection public < public < < throws decl_stmt sun.rmi.transport.Connection = try return catch throw new catch throw new catch throw new finally Interaction public < public < final final final < throws return new < public public throws decl_stmt Interaction = try return finally Interaction public public throws decl_stmt Interaction = try return finally public public throws return new public public throws public public throws return new public < public < < throws return public < public < < throws return RecordFactory Record protected < protected < final final final final final final final final final < throws return new < public public throws decl_stmt Record = try if != || != if == decl_stmt RecordFactory = = else = return != : finally if instanceof RecordFactory Record public public throws decl_stmt Record = try if != || != if == decl_stmt RecordFactory = = else = return != : finally if instanceof RecordFactory public public throws try decl_stmt RecordFactory = return call RecordFactory.createIndexedRecord() call RecordFactory.createIndexedRecord() call RecordFactory.createIndexedRecord() call RecordFactory.createIndexedRecord() call RecordFactory.createIndexedRecord() catch throw new catch throw new RecordFactory public public throws try decl_stmt RecordFactory = return call RecordFactory.createMappedRecord() call RecordFactory.createMappedRecord() call RecordFactory.createMappedRecord() call RecordFactory.createMappedRecord() call RecordFactory.createMappedRecord() catch throw new catch throw new RecordFactory protected protected throws try decl_stmt RecordFactory = return catch throw new catch throw new protected protected throws try return call ConnectionFactory.getRecordFactory() call ConnectionFactory.getRecordFactory() call ConnectionFactory.getRecordFactory() call ConnectionFactory.getRecordFactory() call ConnectionFactory.getRecordFactory() catch return new private private if != try catch call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() catch call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() private private if != try catch call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() catch call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() public public return