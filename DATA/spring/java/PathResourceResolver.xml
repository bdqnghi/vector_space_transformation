org.springframework.web.servlet.resource java.io.IOException import java.net.URLDecoder import java.util.Arrays import java.util.List import javax.servlet.http.HttpServletRequest import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.core.io.UrlResource import org.springframework.util.StringUtils import org.springframework.web.context.support.ServletContextResource import class org.springframework.web.servlet.resource.PathResourceResolver super super extends decl Resource public public = public public return protected protected < extends extends return protected protected < extends extends return && != : Resource private private < extends extends for : try if + decl_stmt org.springframework.core.io.Resource = if != if + return else if + catch return Resource protected protected throws decl_stmt org.springframework.core.io.Resource = if call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() && call org.springframework.core.io.Resource.isReadable() call org.springframework.core.io.Resource.isReadable() call org.springframework.core.io.Resource.isReadable() call org.springframework.core.io.Resource.isReadable() call org.springframework.core.io.Resource.isReadable() if return else if + + + + call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() + + + + + + return protected protected throws if return if != for : if return return String String private private throws if != return decl_stmt java.lang.String decl_stmt java.lang.String if instanceof = = else if instanceof = = else if instanceof = = else = = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return = call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) || call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() call java.lang.String.isEmpty() : + if ! call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) return if call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) if if + return return