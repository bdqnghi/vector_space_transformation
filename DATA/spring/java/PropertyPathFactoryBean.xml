org.springframework.beans.factory.config org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.BeanWrapper import org.springframework.beans.BeansException import org.springframework.beans.PropertyAccessorFactory import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.BeanFactoryUtils import org.springframework.beans.factory.BeanNameAware import org.springframework.beans.factory.FactoryBean import org.springframework.util.StringUtils import class org.springframework.beans.factory.config.PropertyPathFactoryBean super super implements BeanFactory String String String decl Class Log BeanWrapper public public = public public = public public = public public < = public public = Object int public public = if != && != throw new if == && == if != throw new decl_stmt int = if == - throw new + + + = = + else if == throw new if == && decl_stmt java.lang.Object = = = Object BeanWrapper public public throws decl_stmt org.springframework.beans.BeanWrapper = if != if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() && != && instanceof && call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + + + + + else decl_stmt java.lang.Object = = return call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() public < public < return public public return