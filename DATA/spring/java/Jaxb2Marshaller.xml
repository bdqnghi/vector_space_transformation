org.springframework.oxm.jaxb java.awt.Image import java.io.ByteArrayInputStream import java.io.IOException import java.io.InputStream import java.io.OutputStream import java.io.StringReader import java.io.UnsupportedEncodingException import java.lang.reflect.GenericArrayType import java.lang.reflect.ParameterizedType import java.lang.reflect.Type import java.math.BigDecimal import java.math.BigInteger import java.net.URI import java.net.URISyntaxException import java.net.URLDecoder import java.net.URLEncoder import java.util.Arrays import java.util.Calendar import java.util.Date import java.util.Map import java.util.UUID import javax.activation.DataHandler import javax.activation.DataSource import javax.xml.XMLConstants import javax.xml.bind.JAXBContext import javax.xml.bind.JAXBElement import javax.xml.bind.JAXBException import javax.xml.bind.MarshalException import javax.xml.bind.Marshaller import javax.xml.bind.UnmarshalException import javax.xml.bind.Unmarshaller import javax.xml.bind.ValidationEventHandler import javax.xml.bind.ValidationException import javax.xml.bind.annotation.XmlRootElement import javax.xml.bind.annotation.adapters.XmlAdapter import javax.xml.bind.attachment.AttachmentMarshaller import javax.xml.bind.attachment.AttachmentUnmarshaller import javax.xml.datatype.Duration import javax.xml.datatype.XMLGregorianCalendar import javax.xml.namespace.QName import javax.xml.stream.XMLEventReader import javax.xml.stream.XMLEventWriter import javax.xml.stream.XMLStreamReader import javax.xml.stream.XMLStreamWriter import javax.xml.transform.Result import javax.xml.transform.Source import javax.xml.transform.dom.DOMSource import javax.xml.transform.sax.SAXSource import javax.xml.transform.stax.StAXSource import javax.xml.transform.stream.StreamSource import javax.xml.validation.Schema import javax.xml.validation.SchemaFactory import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.w3c.dom.ls.LSResourceResolver import org.xml.sax.EntityResolver import org.xml.sax.InputSource import org.xml.sax.SAXException import org.xml.sax.XMLReader import org.xml.sax.helpers.XMLReaderFactory import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.InitializingBean import org.springframework.core.annotation.AnnotationUtils import org.springframework.core.io.Resource import org.springframework.oxm.GenericMarshaller import org.springframework.oxm.GenericUnmarshaller import org.springframework.oxm.MarshallingFailureException import org.springframework.oxm.UncategorizedMappingException import org.springframework.oxm.UnmarshallingFailureException import org.springframework.oxm.ValidationFailureException import org.springframework.oxm.XmlMappingException import org.springframework.oxm.mime.MimeContainer import org.springframework.oxm.mime.MimeMarshaller import org.springframework.oxm.mime.MimeUnmarshaller import org.springframework.oxm.support.SaxResourceUtils import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.FileCopyUtils import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import org.springframework.util.xml.StaxUtils import class org.springframework.oxm.jaxb.Jaxb2Marshaller super super implements boolean decl Marshaller String boolean decl Resource decl Map LSResourceResolver EntityResolver boolean boolean String Log decl Listener decl Map Schema boolean String boolean JAXBContext Object decl String ValidationEventHandler decl Unmarshaller ClassLoader decl Map decl Class decl Listener public public = public public = public public return public public < = public < public < return public public = public public return public public < = public public < = public public < = public public = public public = public public = public public < = public public = new public public = public public = public public = public public = public public = public public = public public = public public < = public public = public public return public public = if public public return public public = boolean boolean boolean public public throws decl_stmt boolean = decl_stmt boolean = ! decl_stmt boolean = ! if && || || && throw new + if ! && ! && ! throw new + if ! if ! = public public if != return synchronized if == try if = else if ! = else if ! = catch throw return private private throws if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + if != if != return else return else if != return else return private private throws if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + if != return else return ClassPathJaxb2TypeScanner private private throws if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + decl_stmt org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner = new if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + decl_stmt org.springframework.oxm.jaxb.ClassPathJaxb2TypeScanner = new if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + = if != return else return decl Source InputSource SchemaFactory XMLReader private private throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + decl_stmt Source = new decl_stmt XMLReader = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() for = < ++ + + decl_stmt InputSource = = new decl_stmt SchemaFactory = if != call SchemaFactory.setResourceResolver() call SchemaFactory.setResourceResolver() call SchemaFactory.setResourceResolver() call SchemaFactory.setResourceResolver() call SchemaFactory.setResourceResolver() return call SchemaFactory.newSchema() call SchemaFactory.newSchema() call SchemaFactory.newSchema() call SchemaFactory.newSchema() call SchemaFactory.newSchema() public public < return && || decl Class Type ParameterizedType GenericArrayType decl Class public public if instanceof decl_stmt java.lang.reflect.ParameterizedType = if == call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() && call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() == decl_stmt org.springframework.asm.Type = call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() if instanceof decl_stmt java.lang.Class < = < return call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() && == call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() call decl Class.getComponentType() || || || else if instanceof decl_stmt java.lang.reflect.GenericArrayType = return == call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() else if instanceof decl_stmt java.lang.Class < = < return return String decl String private private < if && == return if decl_stmt java.lang.String = decl_stmt java.lang.String = for : if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return return else if ! return return private private < return == || == || == || == || == || == || == private private < return == || || || || || || == || || || == || == || == public public throws Marshaller public public throws try decl_stmt org.springframework.oxm.Marshaller = if && != call Marshaller.setAttachmentMarshaller() call Marshaller.setAttachmentMarshaller() call Marshaller.setAttachmentMarshaller() call Marshaller.setAttachmentMarshaller() call Marshaller.setAttachmentMarshaller() new if else call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) catch throw XMLStreamWriter XMLEventWriter private private throws decl_stmt XMLStreamWriter = if != else decl_stmt XMLEventWriter = if != else throw new Marshaller protected protected try decl_stmt org.springframework.oxm.Marshaller = return catch throw protected protected throws if != for : if != if != if != for < : if != public public throws return Unmarshaller public public throws = try decl_stmt org.springframework.oxm.Unmarshaller = if && != call Unmarshaller.setAttachmentUnmarshaller() call Unmarshaller.setAttachmentUnmarshaller() call Unmarshaller.setAttachmentUnmarshaller() call Unmarshaller.setAttachmentUnmarshaller() call Unmarshaller.setAttachmentUnmarshaller() new if return else if != return call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() else return call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() call Unmarshaller.unmarshal() catch if ! throw new + + throw catch throw XMLEventReader XMLStreamReader protected protected throws decl_stmt XMLStreamReader = if != return != : else decl_stmt XMLEventReader = if != return != : else throw new InputSource StreamSource String SAXSource XMLReader private private if || instanceof return decl_stmt XMLReader = decl_stmt InputSource = if instanceof decl_stmt SAXSource = = call SAXSource.getXMLReader() call SAXSource.getXMLReader() call SAXSource.getXMLReader() call SAXSource.getXMLReader() call SAXSource.getXMLReader() = call SAXSource.getInputSource() call SAXSource.getInputSource() call SAXSource.getInputSource() call SAXSource.getInputSource() call SAXSource.getInputSource() else if instanceof decl_stmt StreamSource = if call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() != = new call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() call StreamSource.getInputStream() else if call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() != = new call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() call StreamSource.getReader() else = new call StreamSource.getSystemId() call StreamSource.getSystemId() call StreamSource.getSystemId() call StreamSource.getSystemId() call StreamSource.getSystemId() try if == = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() ! decl_stmt java.lang.String = call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() if ! call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() call XMLReader.setEntityResolver() return new catch call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return Unmarshaller protected protected try decl_stmt org.springframework.oxm.Unmarshaller = return catch throw protected protected throws if != for : if != if != if != for < : if != protected protected if instanceof return new else if instanceof return new else if instanceof return new else return new ByteArrayDataSource public public decl_stmt ByteArrayDataSource = new return new String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = + + + + try = catch return + URI private private try decl_stmt java.net.URI = new return call java.net.URI.getHost() call java.net.URI.getHost() call java.net.URI.getHost() call java.net.URI.getHost() call java.net.URI.getHost() catch return String public public decl_stmt java.lang.String = + + return public public return DataHandler public public try decl_stmt DataHandler = return call DataHandler.getInputStream() call DataHandler.getInputStream() call DataHandler.getInputStream() call DataHandler.getInputStream() call DataHandler.getInputStream() catch throw new public public if = call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() try = catch = + + return public public return public public throws return new public public throws throw new public public return public public return public public return new new