org.springframework.core java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.ObjectInputStream import java.io.ObjectOutputStream import java.lang.reflect.Constructor import java.lang.reflect.GenericArrayType import java.lang.reflect.Method import java.lang.reflect.ParameterizedType import java.lang.reflect.Type import java.lang.reflect.TypeVariable import java.lang.reflect.WildcardType import java.util.ArrayList import java.util.List import org.junit.Test import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import class org.springframework.core.SerializableTypeWrapperTests Type public public throws decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type Method public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type decl Constructor public public throws decl_stmt java.lang.reflect.Constructor < = decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type public public throws decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type public public throws decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type public public throws decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() Type public public throws decl_stmt org.springframework.asm.Type = call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() call org.springframework.asm.Type.toString() GenericArrayType public public throws decl_stmt java.lang.reflect.GenericArrayType = call GenericArrayType.toString() call GenericArrayType.toString() call GenericArrayType.toString() call GenericArrayType.toString() call GenericArrayType.toString() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() call GenericArrayType.getGenericComponentType() ParameterizedType public public throws decl_stmt java.lang.reflect.ParameterizedType = call ParameterizedType.toString() call ParameterizedType.toString() call ParameterizedType.toString() call ParameterizedType.toString() call ParameterizedType.toString() call java.lang.reflect.ParameterizedType.getOwnerType() call java.lang.reflect.ParameterizedType.getOwnerType() call java.lang.reflect.ParameterizedType.getOwnerType() call java.lang.reflect.ParameterizedType.getOwnerType() call java.lang.reflect.ParameterizedType.getOwnerType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call java.lang.reflect.ParameterizedType.getRawType() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() decl TypeVariable public public throws decl_stmt java.lang.reflect.TypeVariable < = < call decl TypeVariable.toString() call decl TypeVariable.toString() call decl TypeVariable.toString() call decl TypeVariable.toString() call decl TypeVariable.toString() call decl TypeVariable.getBounds() call decl TypeVariable.getBounds() call decl TypeVariable.getBounds() call decl TypeVariable.getBounds() call decl TypeVariable.getBounds() WildcardType ParameterizedType public public throws decl_stmt java.lang.reflect.ParameterizedType = decl_stmt java.lang.reflect.WildcardType = call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call ParameterizedType.getActualTypeArguments() call WildcardType.toString() call WildcardType.toString() call WildcardType.toString() call WildcardType.toString() call WildcardType.toString() call java.lang.reflect.WildcardType.getLowerBounds() call java.lang.reflect.WildcardType.getLowerBounds() call java.lang.reflect.WildcardType.getLowerBounds() call java.lang.reflect.WildcardType.getLowerBounds() call java.lang.reflect.WildcardType.getLowerBounds() call WildcardType.getUpperBounds() call WildcardType.getUpperBounds() call WildcardType.getUpperBounds() call WildcardType.getUpperBounds() call WildcardType.getUpperBounds() ByteArrayOutputStream ObjectInputStream ObjectOutputStream private private throws decl_stmt java.io.ByteArrayOutputStream = new decl_stmt ObjectOutputStream = new call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.writeObject() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() call ObjectOutputStream.close() decl_stmt ObjectInputStream = new new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject() call ObjectInputStream.readObject()