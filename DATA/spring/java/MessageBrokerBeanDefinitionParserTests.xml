org.springframework.web.socket.config java.util.ArrayList import java.util.Arrays import java.util.Collection import java.util.Collections import java.util.List import java.util.Map import org.hamcrest.Matchers import org.junit.Test import org.springframework.beans.DirectFieldAccessor import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.config.CustomScopeConfigurer import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.core.MethodParameter import org.springframework.core.io.ClassPathResource import org.springframework.messaging.Message import org.springframework.messaging.MessageHandler import org.springframework.messaging.converter.ByteArrayMessageConverter import org.springframework.messaging.converter.CompositeMessageConverter import org.springframework.messaging.converter.ContentTypeResolver import org.springframework.messaging.converter.DefaultContentTypeResolver import org.springframework.messaging.converter.MappingJackson2MessageConverter import org.springframework.messaging.converter.MessageConverter import org.springframework.messaging.converter.StringMessageConverter import org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler import org.springframework.messaging.simp.SimpMessagingTemplate import org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler import org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler import org.springframework.messaging.simp.user.DefaultUserDestinationResolver import org.springframework.messaging.simp.user.MultiServerUserRegistry import org.springframework.messaging.simp.user.SimpUserRegistry import org.springframework.messaging.simp.user.UserDestinationMessageHandler import org.springframework.messaging.simp.user.UserDestinationResolver import org.springframework.messaging.simp.user.UserRegistryMessageHandler import org.springframework.messaging.support.AbstractSubscribableChannel import org.springframework.messaging.support.ChannelInterceptor import org.springframework.messaging.support.ImmutableMessageChannelInterceptor import org.springframework.mock.web.test.MockServletContext import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler import org.springframework.util.MimeTypeUtils import org.springframework.validation.Errors import org.springframework.validation.Validator import org.springframework.web.HttpRequestHandler import org.springframework.web.context.support.GenericWebApplicationContext import org.springframework.web.servlet.HandlerMapping import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator import org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator import org.springframework.web.socket.handler.TestWebSocketSession import org.springframework.web.socket.handler.WebSocketHandlerDecorator import org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory import org.springframework.web.socket.messaging.DefaultSimpUserRegistry import org.springframework.web.socket.messaging.StompSubProtocolErrorHandler import org.springframework.web.socket.messaging.StompSubProtocolHandler import org.springframework.web.socket.messaging.SubProtocolHandler import org.springframework.web.socket.messaging.SubProtocolWebSocketHandler import org.springframework.web.socket.server.HandshakeHandler import org.springframework.web.socket.server.HandshakeInterceptor import org.springframework.web.socket.server.support.OriginHandshakeInterceptor import org.springframework.web.socket.server.support.WebSocketHttpRequestHandler import org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler import org.springframework.web.socket.sockjs.transport.TransportType import org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService import org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import class org.springframework.web.socket.config.MessageBrokerBeanDefinitionParserTests GenericWebApplicationContext String WebSocketHandler decl Map HandshakeHandler decl List WebSocketSession WebSocketTransportHandler SockJsHttpRequestHandler UserDestinationResolver DirectFieldAccessor HttpRequestHandler decl Collection StompSubProtocolHandler SimpUserRegistry DefaultSockJsService decl List SubProtocolWebSocketHandler UserDestinationMessageHandler ThreadPoolTaskScheduler HandlerMapping SimpleBrokerMessageHandler DefaultUserDestinationResolver SimpleUrlHandlerMapping WebSocketHttpRequestHandler public public throws decl_stmt org.springframework.web.portlet.HandlerMapping = decl_stmt org.springframework.web.servlet.handler.SimpleUrlHandlerMapping = call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() decl_stmt org.springframework.web.HttpRequestHandler = call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() decl_stmt org.springframework.web.socket.server.support.WebSocketHttpRequestHandler = decl_stmt org.springframework.web.socket.server.HandshakeHandler = call WebSocketHttpRequestHandler.getHandshakeHandler() call WebSocketHttpRequestHandler.getHandshakeHandler() call WebSocketHttpRequestHandler.getHandshakeHandler() call WebSocketHttpRequestHandler.getHandshakeHandler() call WebSocketHttpRequestHandler.getHandshakeHandler() instanceof decl_stmt java.util.List < = call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getHandshakeInterceptors() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getHandshakeInterceptors() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getHandshakeInterceptors() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getHandshakeInterceptors() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getHandshakeInterceptors() decl_stmt org.springframework.web.socket.WebSocketSession = new call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() decl_stmt org.springframework.web.socket.WebSocketHandler = call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() = = = decl_stmt org.springframework.web.socket.messaging.SubProtocolWebSocketHandler = call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSubProtocols() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSubProtocols() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSubProtocols() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSubProtocols() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSubProtocols() * call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() * call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() decl_stmt java.util.Map < = call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() decl_stmt org.springframework.web.socket.messaging.StompSubProtocolHandler = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() * call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getErrorHandler() new = call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() decl_stmt org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler = = call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() decl_stmt org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService = call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() decl_stmt org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler = call DefaultSockJsService.getTransportHandlers() call DefaultSockJsService.getTransportHandlers() call DefaultSockJsService.getTransportHandlers() call DefaultSockJsService.getTransportHandlers() call DefaultSockJsService.getTransportHandlers() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call WebSocketTransportHandler.getHandshakeHandler() call DefaultSockJsService.shouldSuppressCors() call DefaultSockJsService.shouldSuppressCors() call DefaultSockJsService.shouldSuppressCors() call DefaultSockJsService.shouldSuppressCors() call DefaultSockJsService.shouldSuppressCors() decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = call DefaultSockJsService.getTaskScheduler() call DefaultSockJsService.getTaskScheduler() call DefaultSockJsService.getTaskScheduler() call DefaultSockJsService.getTaskScheduler() call DefaultSockJsService.getTaskScheduler() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() = call DefaultSockJsService.getHandshakeInterceptors() call DefaultSockJsService.getHandshakeInterceptors() call DefaultSockJsService.getHandshakeInterceptors() call DefaultSockJsService.getHandshakeInterceptors() call DefaultSockJsService.getHandshakeInterceptors() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() call DefaultSockJsService.getAllowedOrigins() decl_stmt org.springframework.messaging.simp.user.SimpUserRegistry = call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() decl_stmt org.springframework.messaging.simp.user.UserDestinationResolver = decl_stmt org.springframework.messaging.simp.user.DefaultUserDestinationResolver = call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() decl_stmt org.springframework.messaging.simp.user.UserDestinationMessageHandler = decl_stmt org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler = decl_stmt java.util.Collection < = call SimpleBrokerMessageHandler.getDestinationPrefixes() call SimpleBrokerMessageHandler.getDestinationPrefixes() call SimpleBrokerMessageHandler.getDestinationPrefixes() call SimpleBrokerMessageHandler.getDestinationPrefixes() call SimpleBrokerMessageHandler.getDestinationPrefixes() new < call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() new call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() decl_stmt java.util.List < < extends extends = < extends extends > * = * = < extends extends > try catch decl_stmt org.springframework.beans.DirectFieldAccessor = new call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getSubscriptionRegistry() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getSubscriptionRegistry() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getSubscriptionRegistry() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getSubscriptionRegistry() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getSubscriptionRegistry() decl_stmt java.lang.String = new call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() SimpUserRegistry UserRegistryMessageHandler UserDestinationResolver WebSocketMessageBrokerStats String WebSocketHandler StompBrokerRelayMessageHandler SimpleUrlHandlerMapping HttpRequestHandler decl List UserDestinationMessageHandler String HandlerMapping String String SockJsHttpRequestHandler DefaultUserDestinationResolver public public decl_stmt org.springframework.web.portlet.HandlerMapping = decl_stmt org.springframework.web.servlet.handler.SimpleUrlHandlerMapping = call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() decl_stmt org.springframework.web.HttpRequestHandler = call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() call SimpleUrlHandlerMapping.getUrlMap() decl_stmt org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler = decl_stmt org.springframework.web.socket.WebSocketHandler = call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() call org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.getSockJsService() decl_stmt org.springframework.messaging.simp.user.UserDestinationResolver = decl_stmt org.springframework.messaging.simp.user.DefaultUserDestinationResolver = call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() call org.springframework.messaging.simp.user.DefaultUserDestinationResolver.getDestinationPrefix() decl_stmt org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler = call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getClientPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemLogin() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemPasscode() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayPort() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayPort() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayPort() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayPort() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getRelayPort() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getVirtualHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getVirtualHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getVirtualHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getVirtualHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getVirtualHost() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatReceiveInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatReceiveInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatReceiveInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatReceiveInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatReceiveInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatSendInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatSendInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatSendInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatSendInterval() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemHeartbeatSendInterval() call StompBrokerRelayMessageHandler.getDestinationPrefixes() call StompBrokerRelayMessageHandler.getDestinationPrefixes() call StompBrokerRelayMessageHandler.getDestinationPrefixes() call StompBrokerRelayMessageHandler.getDestinationPrefixes() call StompBrokerRelayMessageHandler.getDestinationPrefixes() decl_stmt java.util.List < < extends extends = < extends extends > * = * = < extends extends > try catch decl_stmt java.lang.String = decl_stmt org.springframework.messaging.simp.user.UserDestinationMessageHandler = call org.springframework.messaging.simp.user.UserDestinationMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserDestinationMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserDestinationMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserDestinationMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserDestinationMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() = decl_stmt org.springframework.messaging.simp.user.UserRegistryMessageHandler = call org.springframework.messaging.simp.user.UserRegistryMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserRegistryMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserRegistryMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserRegistryMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.user.UserRegistryMessageHandler.getBroadcastDestination() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.getSystemSubscriptions() decl_stmt org.springframework.messaging.simp.user.SimpUserRegistry = call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() call SimpUserRegistry.getClass() decl_stmt java.lang.String = decl_stmt org.springframework.web.socket.config.WebSocketMessageBrokerStats = decl_stmt java.lang.String = call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() decl_stmt java.lang.String = + + + + + + + call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) + + call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) DirectFieldAccessor MessageConverter String SimpMessagingTemplate SimpAnnotationMethodMessageHandler ContentTypeResolver decl List CompositeMessageConverter public public decl_stmt org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler = decl_stmt org.springframework.jms.support.converter.MessageConverter = call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getMessageConverter() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getMessageConverter() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getMessageConverter() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getMessageConverter() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getMessageConverter() instanceof decl_stmt org.springframework.messaging.converter.CompositeMessageConverter = decl_stmt org.springframework.messaging.simp.SimpMessagingTemplate = call org.springframework.messaging.simp.SimpMessagingTemplate.getUserDestinationPrefix() call org.springframework.messaging.simp.SimpMessagingTemplate.getUserDestinationPrefix() call org.springframework.messaging.simp.SimpMessagingTemplate.getUserDestinationPrefix() call org.springframework.messaging.simp.SimpMessagingTemplate.getUserDestinationPrefix() call org.springframework.messaging.simp.SimpMessagingTemplate.getUserDestinationPrefix() decl_stmt java.util.List < = call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.springframework.messaging.converter.ContentTypeResolver = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt org.springframework.beans.DirectFieldAccessor = new decl_stmt java.lang.String = new call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() call DirectFieldAccessor.getPropertyValue() decl List Validator SimpAnnotationMethodMessageHandler public public decl_stmt org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler = decl_stmt org.springframework.validation.Validator = call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getValidator() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getValidator() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getValidator() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getValidator() call org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler.getValidator() decl_stmt java.util.List < < extends extends = < extends extends > = = < extends extends > public public * * decl List decl List SimpAnnotationMethodMessageHandler public public decl_stmt org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler = decl_stmt java.util.List < = call SimpAnnotationMethodMessageHandler.getCustomArgumentResolvers() call SimpAnnotationMethodMessageHandler.getCustomArgumentResolvers() call SimpAnnotationMethodMessageHandler.getCustomArgumentResolvers() call SimpAnnotationMethodMessageHandler.getCustomArgumentResolvers() call SimpAnnotationMethodMessageHandler.getCustomArgumentResolvers() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call SimpAnnotationMethodMessageHandler.getArgumentResolvers() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call SimpAnnotationMethodMessageHandler.getCustomReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getCustomReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getCustomReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getCustomReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getCustomReturnValueHandlers() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call SimpAnnotationMethodMessageHandler.getReturnValueHandlers() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() CompositeMessageConverter public public decl_stmt org.springframework.messaging.converter.CompositeMessageConverter = call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() CompositeMessageConverter public public decl_stmt org.springframework.messaging.converter.CompositeMessageConverter = call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() call org.springframework.messaging.converter.CompositeMessageConverter.getConverters() MessageHandler decl List AbstractSubscribableChannel private private < < extends extends decl_stmt org.springframework.messaging.support.AbstractSubscribableChannel = for < extends extends : decl_stmt org.springframework.messaging.MessageHandler = + call org.springframework.messaging.support.AbstractSubscribableChannel.hasSubscription(MessageHandler) call org.springframework.messaging.support.AbstractSubscribableChannel.hasSubscription(MessageHandler) call org.springframework.messaging.support.AbstractSubscribableChannel.hasSubscription(MessageHandler) call org.springframework.messaging.support.AbstractSubscribableChannel.hasSubscription(MessageHandler) call org.springframework.messaging.support.AbstractSubscribableChannel.hasSubscription(MessageHandler) decl_stmt java.util.List < = call AbstractSubscribableChannel.getInterceptors() call AbstractSubscribableChannel.getInterceptors() call AbstractSubscribableChannel.getInterceptors() call AbstractSubscribableChannel.getInterceptors() call AbstractSubscribableChannel.getInterceptors() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - ThreadPoolTaskExecutor private private decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor = + call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getCorePoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getCorePoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getCorePoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getCorePoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getCorePoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getMaxPoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getMaxPoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getMaxPoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getMaxPoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getMaxPoolSize() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getKeepAliveSeconds() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getKeepAliveSeconds() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getKeepAliveSeconds() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getKeepAliveSeconds() call org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.getKeepAliveSeconds() ClassPathResource XmlBeanDefinitionReader private private decl_stmt org.springframework.beans.factory.xml.XmlBeanDefinitionReader = new decl_stmt org.springframework.core.io.ClassPathResource = new call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) call org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(Resource) new private private return instanceof :