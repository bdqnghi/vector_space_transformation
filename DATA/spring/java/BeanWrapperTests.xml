org.springframework.beans java.util.Collections import java.util.Map import java.util.Optional import org.junit.Test import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.beans.BeanWrapperTests super super extends protected protected return new GetterBean BeanWrapper public public decl_stmt GetterBean = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() GetterBean BeanWrapper public public decl_stmt GetterBean = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setExtractOldValueForEditor() call BeanWrapper.setExtractOldValueForEditor() call BeanWrapper.setExtractOldValueForEditor() call BeanWrapper.setExtractOldValueForEditor() call BeanWrapper.setExtractOldValueForEditor() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() call GetterBean.getName() String MutablePropertyValues TestBean String BeanWrapper public public decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.lang.String = decl_stmt java.lang.String = try decl_stmt org.springframework.beans.BeanWrapper = decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) new call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) new call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) new call BeanWrapper.setPropertyValues() call BeanWrapper.setPropertyValues() call BeanWrapper.setPropertyValues() call BeanWrapper.setPropertyValues() call BeanWrapper.setPropertyValues() catch == call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() call org.springframework.tests.sample.beans.TestBean.getAge() == TestBean BeanWrapper public public decl_stmt org.springframework.tests.sample.beans.TestBean = new try decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() catch TypedReadOnlyMap TypedReadOnlyMapClient BeanWrapper public public decl_stmt TypedReadOnlyMap = new new decl_stmt TypedReadOnlyMapClient = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() BeanWrapper IntelliBean public public decl_stmt IntelliBean = new decl_stmt org.springframework.beans.BeanWrapper = try call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() catch BeanWrapper IntelliBean public public decl_stmt IntelliBean = new decl_stmt org.springframework.beans.BeanWrapper = try call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() catch PropertyTypeMismatch BeanWrapper public public decl_stmt PropertyTypeMismatch = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call PropertyTypeMismatch.getObject() call PropertyTypeMismatch.getObject() call PropertyTypeMismatch.getObject() call PropertyTypeMismatch.getObject() call PropertyTypeMismatch.getObject() == call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() TestBean BeanWrapper public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() call BeanWrapper.getPropertyDescriptor() TestBean GetterWithOptional BeanWrapper public public decl_stmt GetterWithOptional = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() < call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() < call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() GetterWithOptional BeanWrapper public public decl_stmt GetterWithOptional = new decl_stmt org.springframework.beans.BeanWrapper = call BeanWrapper.setAutoGrowNestedPaths() call BeanWrapper.setAutoGrowNestedPaths() call BeanWrapper.setAutoGrowNestedPaths() call BeanWrapper.setAutoGrowNestedPaths() call BeanWrapper.setAutoGrowNestedPaths() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call BeanWrapper.setPropertyValue() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.value() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call GetterWithOptional.getObject() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() call BeanWrapper.getPropertyValue() public public = public public if == throw new return public public public public public public public public public public public public public public = public public return != : public public = public < public < return