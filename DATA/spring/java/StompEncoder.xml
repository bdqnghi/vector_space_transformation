org.springframework.messaging.simp.stomp java.io.ByteArrayOutputStream import java.io.DataOutputStream import java.io.IOException import java.util.Arrays import java.util.List import java.util.Map import java.util.Map.Entry import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.messaging.Message import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.support.NativeMessageHeaderAccessor import org.springframework.util.Assert import class org.springframework.messaging.simp.stomp.StompEncoder byte Log byte public public < return ByteArrayOutputStream StompCommand DataOutputStream public public < try decl_stmt java.io.ByteArrayOutputStream = new + decl_stmt DataOutputStream = new if if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() else decl_stmt StompCommand = + call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call StompCommand.toString() call StompCommand.toString() call StompCommand.toString() call StompCommand.toString() call StompCommand.toString() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() call DataOutputStream.write() byte return call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() catch throw new + boolean decl List int decl Map decl byte private private < throws decl_stmt java.util.Map < < = < < if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + + if == return decl_stmt boolean = != && != for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt byte = if && continue decl_stmt java.util.List < = if && = for : if decl_stmt int = String private private decl_stmt java.lang.String = : return call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) StringBuilder char private private decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt char = if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else if == call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) else call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() private private throws