org.springframework.beans.factory java.text.DateFormat import java.text.ParseException import java.text.SimpleDateFormat import java.util.Collections import java.util.Date import java.util.HashSet import java.util.Iterator import java.util.Set import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.Before import org.junit.Test import org.springframework.beans.PropertyEditorRegistrar import org.springframework.beans.PropertyEditorRegistry import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.beans.propertyeditors.CustomDateEditor import org.springframework.core.io.Resource import org.springframework.tests.Assume import org.springframework.tests.TestGroup import static static org.junit.Assert.* import static static org.springframework.tests.TestResourceUtils.* import class org.springframework.beans.factory.ConcurrentBeanFactoryTests SimpleDateFormat Throwable Resource decl Set BeanFactory Date Log DefaultListableBeanFactory public public throws decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new new call DefaultListableBeanFactory.addPropertyEditorRegistrar() call DefaultListableBeanFactory.addPropertyEditorRegistrar() call DefaultListableBeanFactory.addPropertyEditorRegistrar() call DefaultListableBeanFactory.addPropertyEditorRegistrar() call DefaultListableBeanFactory.addPropertyEditorRegistrar() new public public new call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() = public public new call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() call java.text.SimpleDateFormat.clone() public public for = < ++ TestRun public public for = < ++ decl_stmt TestRun = new call TestRun.setDaemon() call TestRun.setDaemon() call TestRun.setDaemon() call TestRun.setDaemon() call TestRun.setDaemon() call Throwable.add() call Throwable.add() call Throwable.add() call Throwable.add() call Throwable.add() for < = new < decl_stmt TestRun = call TestRun.start() call TestRun.start() call TestRun.start() call TestRun.start() call TestRun.start() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call Throwable.size() call Throwable.size() call Throwable.size() call Throwable.size() call Throwable.size() + synchronized while ! call Throwable.isEmpty() call Throwable.isEmpty() call Throwable.isEmpty() call Throwable.isEmpty() call Throwable.isEmpty() && == try call Throwable.wait() call Throwable.wait() call Throwable.wait() call Throwable.wait() call Throwable.wait() catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Throwable.size() call Throwable.size() call Throwable.size() call Throwable.size() call Throwable.size() + if != ConcurrentBean ConcurrentBean private private decl_stmt ConcurrentBean = call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() decl_stmt ConcurrentBean = call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() call decl Set.getBean() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() call ConcurrentBean.getDate() public public try for = < ++ catch = finally synchronized call Throwable.remove() call Throwable.remove() call Throwable.remove() call Throwable.remove() call Throwable.remove() call Throwable.notifyAll() call Throwable.notifyAll() call Throwable.notifyAll() call Throwable.notifyAll() call Throwable.notifyAll() public public return public public =