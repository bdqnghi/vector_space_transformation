org.springframework.transaction.aspectj java.lang.reflect.Method import org.springframework.tests.transaction.CallCountingTransactionManager import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource import org.springframework.transaction.interceptor.TransactionAspectSupport import org.springframework.transaction.interceptor.TransactionAttribute import class annotation org.springframework.transaction.aspectj.TransactionAspectTests super super extends CallCountingTransactionManager ClassWithPrivateAnnotatedMember ClassWithProtectedAnnotatedMember TransactionalAnnotationOnlyOnClassWithNoInterface MethodAnnotationOnClassWithNoInterface public public = public public = public public = public public = protected protected return new public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.transaction.aspectj.ClassWithProtectedAnnotatedMember.doInTransaction() call org.springframework.transaction.aspectj.ClassWithProtectedAnnotatedMember.doInTransaction() call org.springframework.transaction.aspectj.ClassWithProtectedAnnotatedMember.doInTransaction() call org.springframework.transaction.aspectj.ClassWithProtectedAnnotatedMember.doInTransaction() call org.springframework.transaction.aspectj.ClassWithProtectedAnnotatedMember.doInTransaction() public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call ClassWithPrivateAnnotatedMember.doSomething() call ClassWithPrivateAnnotatedMember.doSomething() call ClassWithPrivateAnnotatedMember.doSomething() call ClassWithPrivateAnnotatedMember.doSomething() call ClassWithPrivateAnnotatedMember.doSomething() public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.transaction.aspectj.TransactionalAnnotationOnlyOnClassWithNoInterface.nonTransactionalMethod() call org.springframework.transaction.aspectj.TransactionalAnnotationOnlyOnClassWithNoInterface.nonTransactionalMethod() call org.springframework.transaction.aspectj.TransactionalAnnotationOnlyOnClassWithNoInterface.nonTransactionalMethod() call org.springframework.transaction.aspectj.TransactionalAnnotationOnlyOnClassWithNoInterface.nonTransactionalMethod() call org.springframework.transaction.aspectj.TransactionalAnnotationOnlyOnClassWithNoInterface.nonTransactionalMethod() public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.transaction.aspectj.MethodAnnotationOnClassWithNoInterface.echo(Throwable) call org.springframework.transaction.aspectj.MethodAnnotationOnClassWithNoInterface.echo(Throwable) call org.springframework.transaction.aspectj.MethodAnnotationOnClassWithNoInterface.echo(Throwable) call org.springframework.transaction.aspectj.MethodAnnotationOnClassWithNoInterface.echo(Throwable) call org.springframework.transaction.aspectj.MethodAnnotationOnClassWithNoInterface.echo(Throwable) public public throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() new Exception public public throws decl_stmt Exception final final = new try new public public throws return call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() catch public public throws return call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() RuntimeException public public throws decl_stmt RuntimeException final final = new try new public public throws return call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() catch public public throws return call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() call TransactionalAnnotationOnlyOnClassWithNoInterface.echo() Exception public public throws decl_stmt Exception final final = new try new public public throws return new catch public public throws return new Exception public public throws decl_stmt Exception final final = new try new public public throws return new catch public public throws return new Exception public public throws decl_stmt Exception final final = new new public public throws return new public public throws return new AnnotationTransactionAttributeSource Method TransactionAttribute public public throws decl_stmt org.springframework.transaction.annotation.AnnotationTransactionAttributeSource = new decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.transaction.interceptor.TransactionAttribute = call AnnotationTransactionAttributeSource.getTransactionAttribute() call AnnotationTransactionAttributeSource.getTransactionAttribute() call AnnotationTransactionAttributeSource.getTransactionAttribute() call AnnotationTransactionAttributeSource.getTransactionAttribute() call AnnotationTransactionAttributeSource.getTransactionAttribute() Exception public public throws decl_stmt Exception final final = new new public public throws return new public public throws return new protected protected throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() try finally : : protected protected throws call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() call org.springframework.tests.transaction.CallCountingTransactionManager.clear() try catch if == + finally public public throws if != throw return public public