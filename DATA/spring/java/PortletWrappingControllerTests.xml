org.springframework.web.portlet.mvc java.io.IOException import javax.portlet.ActionRequest import javax.portlet.ActionResponse import javax.portlet.Portlet import javax.portlet.PortletConfig import javax.portlet.PortletException import javax.portlet.RenderRequest import javax.portlet.RenderResponse import org.junit.Before import org.junit.Test import org.springframework.beans.BeansException import org.springframework.beans.MutablePropertyValues import org.springframework.mock.web.portlet.MockActionRequest import org.springframework.mock.web.portlet.MockActionResponse import org.springframework.mock.web.portlet.MockPortletConfig import org.springframework.mock.web.portlet.MockPortletContext import org.springframework.mock.web.portlet.MockRenderRequest import org.springframework.mock.web.portlet.MockRenderResponse import org.springframework.web.portlet.context.ConfigurablePortletApplicationContext import org.springframework.web.portlet.context.StaticPortletApplicationContext import static static org.junit.Assert.* import class org.springframework.web.portlet.mvc.PortletWrappingControllerTests String String String PortletWrappingController String ConfigurablePortletApplicationContext MockPortletConfig public public decl_stmt org.springframework.web.portlet.context.ConfigurablePortletApplicationContext = new decl_stmt org.springframework.mock.web.portlet.MockPortletConfig = new new call org.springframework.web.portlet.context.ConfigurablePortletApplicationContext.setPortletConfig(PortletConfig) call org.springframework.web.portlet.context.ConfigurablePortletApplicationContext.setPortletConfig(PortletConfig) call org.springframework.web.portlet.context.ConfigurablePortletApplicationContext.setPortletConfig(PortletConfig) call org.springframework.web.portlet.context.ConfigurablePortletApplicationContext.setPortletConfig(PortletConfig) call org.springframework.web.portlet.context.ConfigurablePortletApplicationContext.setPortletConfig(PortletConfig) call ConfigurablePortletApplicationContext.refresh() call ConfigurablePortletApplicationContext.refresh() call ConfigurablePortletApplicationContext.refresh() call ConfigurablePortletApplicationContext.refresh() call ConfigurablePortletApplicationContext.refresh() = call ConfigurablePortletApplicationContext.getBean() call ConfigurablePortletApplicationContext.getBean() call ConfigurablePortletApplicationContext.getBean() call ConfigurablePortletApplicationContext.getBean() call ConfigurablePortletApplicationContext.getBean() MockActionRequest MockActionResponse public public throws decl_stmt org.springframework.mock.web.portlet.MockActionRequest = new decl_stmt org.springframework.mock.web.portlet.MockActionResponse = new call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() MockRenderResponse public public throws decl_stmt org.springframework.mock.web.portlet.MockRenderResponse = new call PortletWrappingController.handleRenderRequest() call PortletWrappingController.handleRenderRequest() call PortletWrappingController.handleRenderRequest() call PortletWrappingController.handleRenderRequest() call PortletWrappingController.handleRenderRequest() new call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() call MockRenderResponse.getContentAsString() = public = public throws call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() new new PortletWrappingController = public = public throws decl_stmt org.springframework.web.portlet.mvc.PortletWrappingController = new call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() PortletWrappingController = public = public throws decl_stmt org.springframework.web.portlet.mvc.PortletWrappingController = new call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() PortletWrappingController = public = public throws decl_stmt org.springframework.web.portlet.mvc.PortletWrappingController final final = new call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.destroy() call org.springframework.web.portlet.mvc.PortletWrappingController.destroy() call org.springframework.web.portlet.mvc.PortletWrappingController.destroy() call org.springframework.web.portlet.mvc.PortletWrappingController.destroy() call org.springframework.web.portlet.mvc.PortletWrappingController.destroy() MockActionRequest MockActionResponse public public throws decl_stmt org.springframework.mock.web.portlet.MockActionRequest = new decl_stmt org.springframework.mock.web.portlet.MockActionResponse = new call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() PortletWrappingController MockActionRequest String MockActionResponse public public throws decl_stmt java.lang.String final final = decl_stmt org.springframework.mock.web.portlet.MockActionRequest = new decl_stmt org.springframework.mock.web.portlet.MockActionResponse = new decl_stmt org.springframework.web.portlet.mvc.PortletWrappingController = new call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setPortletClass(Class) call org.springframework.web.portlet.mvc.PortletWrappingController.setUseSharedPortletConfig(boolean) call org.springframework.web.portlet.mvc.PortletWrappingController.setUseSharedPortletConfig(boolean) call org.springframework.web.portlet.mvc.PortletWrappingController.setUseSharedPortletConfig(boolean) call org.springframework.web.portlet.mvc.PortletWrappingController.setUseSharedPortletConfig(boolean) call org.springframework.web.portlet.mvc.PortletWrappingController.setUseSharedPortletConfig(boolean) call org.springframework.web.portlet.mvc.PortletWrappingController.setBeanName(String) call org.springframework.web.portlet.mvc.PortletWrappingController.setBeanName(String) call org.springframework.web.portlet.mvc.PortletWrappingController.setBeanName(String) call org.springframework.web.portlet.mvc.PortletWrappingController.setBeanName(String) call org.springframework.web.portlet.mvc.PortletWrappingController.setBeanName(String) call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call org.springframework.web.portlet.mvc.PortletWrappingController.afterPropertiesSet() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call MockActionRequest.setParameter() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call PortletWrappingController.handleActionRequest() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() call MockActionResponse.getRenderParameter() public public = public public throws if != else if != else throw new public public throws public public return public public throw new MutablePropertyValues public public throws decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object)