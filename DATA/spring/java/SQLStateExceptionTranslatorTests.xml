org.springframework.jdbc.support java.sql.SQLException import org.junit.Test import org.springframework.jdbc.BadSqlGrammarException import org.springframework.jdbc.UncategorizedSQLException import static static org.junit.Assert.* import class org.springframework.jdbc.support.SQLStateExceptionTranslatorTests SQLStateSQLExceptionTranslator String SQLException public public decl_stmt java.sql.SQLException = new try throw catch call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call SQLException.equals() call SQLException.equals() call SQLException.equals() call SQLException.equals() call SQLException.equals() SQLException public public decl_stmt java.sql.SQLException = new try throw catch call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call SQLException.equals() call SQLException.equals() call SQLException.equals() call SQLException.equals() call SQLException.equals() SQLException public public decl_stmt java.sql.SQLException = new = new = new private private try throw catch call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object)