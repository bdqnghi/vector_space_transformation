org.springframework.cache.jcache.interceptor java.lang.annotation.Annotation import java.lang.reflect.Method import javax.cache.annotation.CacheInvocationParameter import javax.cache.annotation.CacheMethodDetails import org.junit.Test import org.springframework.cache.jcache.AbstractJCacheTests import org.springframework.core.annotation.AnnotationUtils import org.springframework.util.Assert import org.springframework.util.ReflectionUtils import static static org.junit.Assert.* import class super super extends SampleObject O public public decl_stmt O = call O.getCacheName() call O.getCacheName() call O.getCacheName() call O.getCacheName() call O.getCacheName() + call O.getMethod() call O.getMethod() call O.getMethod() call O.getMethod() call O.getMethod() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getCacheAnnotation() call O.getCacheAnnotation() call O.getCacheAnnotation() call O.getCacheAnnotation() call O.getCacheAnnotation() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getAnnotations() call O.getCacheResolver() call O.getCacheResolver() call O.getCacheResolver() call O.getCacheResolver() call O.getCacheResolver() protected protected < + + + Method A protected < extends extends < protected < extends extends < < < < decl_stmt com.sun.jdi.Method = + + decl_stmt org.springframework.expression.spel.spr10210.A = call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) call com.sun.jdi.Method.getAnnotation(Class) return new < Object private static private static decl_stmt java.lang.Object = return != call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() :