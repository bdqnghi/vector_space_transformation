org.springframework.ejb.access java.rmi.ConnectException import java.rmi.RemoteException import javax.ejb.CreateException import javax.ejb.EJBHome import javax.ejb.EJBObject import javax.naming.Context import javax.naming.NamingException import org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.jndi.JndiTemplate import org.springframework.remoting.RemoteAccessException import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptorTests SlsbHome Context private private throws decl_stmt org.springframework.ejb.access.SlsbHome = call SlsbHome.create() call SlsbHome.create() call SlsbHome.create() call SlsbHome.create() call SlsbHome.create() decl_stmt sun.tools.tree.Context = call sun.tools.tree.Context.lookup(Name) call sun.tools.tree.Context.lookup(Name) call sun.tools.tree.Context.lookup(Name) call sun.tools.tree.Context.lookup(Name) call sun.tools.tree.Context.lookup(Name) + return SimpleRemoteSlsbInvokerInterceptor private private final final throws decl_stmt org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor = call SimpleRemoteSlsbInvokerInterceptor.setJndiTemplate() call SimpleRemoteSlsbInvokerInterceptor.setJndiTemplate() call SimpleRemoteSlsbInvokerInterceptor.setJndiTemplate() call SimpleRemoteSlsbInvokerInterceptor.setJndiTemplate() call SimpleRemoteSlsbInvokerInterceptor.setJndiTemplate() new protected protected return call SimpleRemoteSlsbInvokerInterceptor.setResourceRef() call SimpleRemoteSlsbInvokerInterceptor.setResourceRef() call SimpleRemoteSlsbInvokerInterceptor.setResourceRef() call SimpleRemoteSlsbInvokerInterceptor.setResourceRef() call SimpleRemoteSlsbInvokerInterceptor.setResourceRef() call SimpleRemoteSlsbInvokerInterceptor.setJndiName() call SimpleRemoteSlsbInvokerInterceptor.setJndiName() call SimpleRemoteSlsbInvokerInterceptor.setJndiName() call SimpleRemoteSlsbInvokerInterceptor.setJndiName() call SimpleRemoteSlsbInvokerInterceptor.setJndiName() return protected protected return protected protected return new ProxyFactory protected protected < throws decl_stmt org.springframework.aop.framework.ProxyFactory = new new <