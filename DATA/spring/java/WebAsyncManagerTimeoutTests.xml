org.springframework.web.context.request.async java.util.concurrent.Callable import javax.servlet.AsyncEvent import javax.servlet.DispatcherType import org.junit.Before import org.junit.Test import org.springframework.core.task.AsyncTaskExecutor import org.springframework.mock.web.test.MockAsyncContext import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.web.context.request.NativeWebRequest import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import static static org.springframework.web.context.request.async.CallableProcessingInterceptor.* import class org.springframework.web.context.request.async.WebAsyncManagerTimeoutTests MockHttpServletRequest AsyncEvent StandardServletAsyncWebRequest WebAsyncManager MockHttpServletResponse AsyncTaskExecutor public public = new = new = new decl_stmt org.springframework.core.task.AsyncTaskExecutor = = StubCallable CallableProcessingInterceptor public public throws decl_stmt StubCallable = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() StubCallable decl WebAsyncTask public public throws decl_stmt StubCallable = new decl_stmt org.springframework.web.context.request.async.WebAsyncTask < = new < call decl WebAsyncTask.onTimeout() call decl WebAsyncTask.onTimeout() call decl WebAsyncTask.onTimeout() call decl WebAsyncTask.onTimeout() call decl WebAsyncTask.onTimeout() new < public public throws return public public throws return StubCallable CallableProcessingInterceptor public public throws decl_stmt StubCallable = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() StubCallable Exception CallableProcessingInterceptor public public throws decl_stmt StubCallable = new decl_stmt Exception = new decl_stmt org.springframework.web.context.request.async.CallableProcessingInterceptor = call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() call CallableProcessingInterceptor.handleTimeout() decl DeferredResult DeferredResultProcessingInterceptor public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = call org.springframework.web.context.request.async.DeferredResultProcessingInterceptor.handleTimeout(NativeWebRequest,DeferredResult) call org.springframework.web.context.request.async.DeferredResultProcessingInterceptor.handleTimeout(NativeWebRequest,DeferredResult) call org.springframework.web.context.request.async.DeferredResultProcessingInterceptor.handleTimeout(NativeWebRequest,DeferredResult) call org.springframework.web.context.request.async.DeferredResultProcessingInterceptor.handleTimeout(NativeWebRequest,DeferredResult) call org.springframework.web.context.request.async.DeferredResultProcessingInterceptor.handleTimeout(NativeWebRequest,DeferredResult) decl DeferredResult AsyncEvent public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt AsyncEvent = decl DeferredResult AsyncEvent public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult final final final < = new < call decl DeferredResult.onTimeout() call decl DeferredResult.onTimeout() call decl DeferredResult.onTimeout() call decl DeferredResult.onTimeout() call decl DeferredResult.onTimeout() new public public call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() decl_stmt AsyncEvent = public public decl DeferredResult DeferredResultProcessingInterceptor AsyncEvent public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = new public < public < < throws return decl_stmt AsyncEvent = public < public < < throws return decl DeferredResult Exception DeferredResultProcessingInterceptor AsyncEvent public public throws decl_stmt org.springframework.web.context.request.async.DeferredResult < = new < decl_stmt Exception final final = new decl_stmt org.springframework.web.context.request.async.DeferredResultProcessingInterceptor = new public < public < < throws throw decl_stmt AsyncEvent = public < public < < throws throw public public throws return