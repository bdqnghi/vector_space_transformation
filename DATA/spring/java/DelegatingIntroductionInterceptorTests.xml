org.springframework.aop.support java.io.Serializable import org.aopalliance.intercept.MethodInterceptor import org.junit.Test import org.springframework.aop.IntroductionAdvisor import org.springframework.aop.IntroductionInterceptor import org.springframework.aop.framework.ProxyFactory import org.springframework.tests.TimeStamped import org.springframework.tests.aop.interceptor.SerializableNopInterceptor import org.springframework.tests.sample.beans.INestedTestBean import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.NestedTestBean import org.springframework.tests.sample.beans.Person import org.springframework.tests.sample.beans.SerializablePerson import org.springframework.tests.sample.beans.TestBean import org.springframework.util.SerializationTestUtils import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.aop.support.DelegatingIntroductionInterceptorTests = public = public throws new TestBean TimeStamped ProxyFactory long TimeStamped public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new ! instanceof decl_stmt org.springframework.aop.framework.ProxyFactory = new decl_stmt org.springframework.tests.TimeStamped = decl_stmt long = call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new new decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == TestBean SubTimeStamped ProxyFactory long TimeStamped public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new ! instanceof decl_stmt org.springframework.aop.framework.ProxyFactory = new decl_stmt org.springframework.tests.TimeStamped = decl_stmt long = call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new new decl_stmt SubTimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call SubTimeStamped.getTimeStamp() call SubTimeStamped.getTimeStamp() call SubTimeStamped.getTimeStamp() call SubTimeStamped.getTimeStamp() call SubTimeStamped.getTimeStamp() == TestBean TimeStamped ProxyFactory long TimeStamped public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new ! instanceof decl_stmt org.springframework.aop.framework.ProxyFactory = new decl_stmt org.springframework.tests.TimeStamped = decl_stmt long = call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new new decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) ! instanceof call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == DelegatingIntroductionInterceptor ProxyFactory long TimeStamped TestBean public public throws decl_stmt long final final = class class implements implements implements implements public public throws public public return decl_stmt org.springframework.aop.support.DelegatingIntroductionInterceptor = new new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == public public throws public public return TestBean TimeStamped Object DelegatingIntroductionInterceptor ProxyFactory long IntroductionAdvisor public public throws decl_stmt long final final = extends extends implements implements implements implements public public throws public public return decl_stmt org.springframework.aop.support.DelegatingIntroductionInterceptor = new decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.aop.framework.ProxyFactory = new decl_stmt org.springframework.aop.IntroductionAdvisor = new call IntroductionAdvisor.isPerInstance() call IntroductionAdvisor.isPerInstance() call IntroductionAdvisor.isPerInstance() call IntroductionAdvisor.isPerInstance() call IntroductionAdvisor.isPerInstance() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) ! instanceof ! instanceof call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == call DelegatingIntroductionInterceptor.suppressInterface() call DelegatingIntroductionInterceptor.suppressInterface() call DelegatingIntroductionInterceptor.suppressInterface() call DelegatingIntroductionInterceptor.suppressInterface() call DelegatingIntroductionInterceptor.suppressInterface() = new call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new decl_stmt java.lang.Object = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) ! instanceof public public throws public public return TestBean ProxyFactory TimeStamped TimeStamped public public throws decl_stmt org.springframework.tests.sample.beans.TestBean = new ! instanceof decl_stmt org.springframework.aop.framework.ProxyFactory = new decl_stmt org.springframework.tests.TimeStamped = new call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new new public public throw new decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call org.springframework.tests.sample.beans.TestBean.toString() call org.springframework.tests.sample.beans.TestBean.toString() call org.springframework.tests.sample.beans.TestBean.toString() call org.springframework.tests.sample.beans.TestBean.toString() call org.springframework.tests.sample.beans.TestBean.toString() call TimeStamped.toString() call TimeStamped.toString() call TimeStamped.toString() call TimeStamped.toString() call TimeStamped.toString() public public throw new NestedTestBean ITestBean String ProxyFactory INestedTestBean TestBean public public decl_stmt org.springframework.tests.sample.beans.NestedTestBean = new decl_stmt java.lang.String = call org.springframework.tests.sample.beans.NestedTestBean.setCompany(String) call org.springframework.tests.sample.beans.NestedTestBean.setCompany(String) call org.springframework.tests.sample.beans.NestedTestBean.setCompany(String) call org.springframework.tests.sample.beans.NestedTestBean.setCompany(String) call org.springframework.tests.sample.beans.NestedTestBean.setCompany(String) decl_stmt org.springframework.tests.sample.beans.TestBean = new public public return decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() new decl_stmt org.springframework.tests.sample.beans.INestedTestBean = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call INestedTestBean.getCompany() call INestedTestBean.getCompany() call INestedTestBean.getCompany() call INestedTestBean.getCompany() call INestedTestBean.getCompany() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() public public return SerializablePerson Person String TimeStamped ProxyFactory Person long public public throws decl_stmt org.springframework.tests.sample.beans.SerializablePerson = new decl_stmt java.lang.String = call org.springframework.tests.sample.beans.SerializablePerson.setName(String) call org.springframework.tests.sample.beans.SerializablePerson.setName(String) call org.springframework.tests.sample.beans.SerializablePerson.setName(String) call org.springframework.tests.sample.beans.SerializablePerson.setName(String) call org.springframework.tests.sample.beans.SerializablePerson.setName(String) decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() decl_stmt long = decl_stmt org.springframework.tests.TimeStamped = new call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() new decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() call org.springframework.test.context.junit4.orm.domain.Person.getName() DelegatingIntroductionInterceptor ProxyFactory long TimeStamped TestBean public public throws decl_stmt long final final = extends extends implements implements public public return decl_stmt org.springframework.aop.support.DelegatingIntroductionInterceptor = new decl_stmt org.springframework.tests.sample.beans.TestBean = new + decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() call ProxyFactory.addAdvisor() new decl_stmt org.springframework.tests.TimeStamped = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() call TimeStamped.getTimeStamp() == public public return public public return public public return