org.springframework.http.client java.io.Closeable import java.io.IOException import java.net.URI import org.apache.http.client.HttpClient import org.apache.http.client.config.RequestConfig import org.apache.http.client.methods.Configurable import org.apache.http.client.methods.HttpEntityEnclosingRequestBase import org.apache.http.client.methods.HttpGet import org.apache.http.client.methods.HttpHead import org.apache.http.client.methods.HttpOptions import org.apache.http.client.methods.HttpPatch import org.apache.http.client.methods.HttpPost import org.apache.http.client.methods.HttpPut import org.apache.http.client.methods.HttpTrace import org.apache.http.client.methods.HttpUriRequest import org.apache.http.client.protocol.HttpClientContext import org.apache.http.impl.client.HttpClients import org.apache.http.protocol.HttpContext import org.springframework.beans.factory.DisposableBean import org.springframework.http.HttpMethod import org.springframework.util.Assert import class org.springframework.http.client.HttpComponentsClientHttpRequestFactory super super implements boolean RequestConfig HttpClient public public = public public return public public >= = private private if public public = public public >= = private private if public public = HttpUriRequest HttpClient RequestConfig HttpContext public public throws decl_stmt sun.net.www.http.HttpClient = != decl_stmt HttpUriRequest = decl_stmt HttpContext = if == = if call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() == decl_stmt RequestConfig = if instanceof = if == = if != call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() if return new else return new private private return != : RequestConfig protected protected if instanceof decl_stmt RequestConfig = return return int decl RequestConfig int decl Builder protected protected if == return decl_stmt org.springframework.web.servlet.mvc.method.Builder = decl_stmt int = if >= call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() decl_stmt int = if >= call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() decl_stmt int = if >= call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() return call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() protected protected switch case return new case return new case return new case return new case return new case return new case return new case return new default: throw new + protected protected protected protected return public public throws if instanceof public public return