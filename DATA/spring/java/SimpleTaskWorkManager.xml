org.springframework.jca.work javax.resource.spi.work.ExecutionContext import javax.resource.spi.work.Work import javax.resource.spi.work.WorkAdapter import javax.resource.spi.work.WorkCompletedException import javax.resource.spi.work.WorkEvent import javax.resource.spi.work.WorkException import javax.resource.spi.work.WorkListener import javax.resource.spi.work.WorkManager import javax.resource.spi.work.WorkRejectedException import org.springframework.core.task.AsyncTaskExecutor import org.springframework.core.task.SimpleAsyncTaskExecutor import org.springframework.core.task.SyncTaskExecutor import org.springframework.core.task.TaskExecutor import org.springframework.core.task.TaskRejectedException import org.springframework.core.task.TaskTimeoutException import org.springframework.util.Assert import class org.springframework.jca.work.SimpleTaskWorkManager super super implements TaskExecutor AsyncTaskExecutor public public = public public = public public throws public public throws != public public throws return public public throws != return public public throws public public throws != WorkListener WorkException boolean DelegatingWorkAdapter long protected protected throws if != && != throw new + decl_stmt WorkListener = if == = new decl_stmt boolean = instanceof decl_stmt DelegatingWorkAdapter = new ! try if else catch decl_stmt WorkException = new + call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() new throw catch decl_stmt WorkException = new + call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() call WorkListener.workRejected() new throw catch decl_stmt WorkException = new + call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() call WorkException.setErrorCode() throw if call WorkListener.workAccepted() call WorkListener.workAccepted() call WorkListener.workAccepted() call WorkListener.workAccepted() call WorkListener.workAccepted() new if decl_stmt long = synchronized try while ! call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() call DelegatingWorkAdapter.monitor() catch return - else return public public if new synchronized = new try catch new new throw catch new new throw new public public