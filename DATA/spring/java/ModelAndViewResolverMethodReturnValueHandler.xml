org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.Method import java.util.List import org.springframework.core.MethodParameter import org.springframework.ui.ExtendedModelMap import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.method.annotation.ModelAttributeMethodProcessor import org.springframework.web.method.support.HandlerMethodReturnValueHandler import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.ModelAndView import org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver import class org.springframework.web.servlet.mvc.method.annotation.ModelAndViewResolverMethodReturnValueHandler super super implements decl List ModelAttributeMethodProcessor public public return ExtendedModelMap ModelAndView Method decl Class public public throws if != for : decl_stmt java.lang.Class < = decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.ui.ExtendedModelMap = decl_stmt org.springframework.web.portlet.ModelAndView = if != call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() if ! call org.springframework.web.portlet.ModelAndView.isReference() call org.springframework.web.portlet.ModelAndView.isReference() call org.springframework.web.portlet.ModelAndView.isReference() call org.springframework.web.portlet.ModelAndView.isReference() call org.springframework.web.portlet.ModelAndView.isReference() call org.springframework.web.portlet.ModelAndView.getView() call org.springframework.web.portlet.ModelAndView.getView() call org.springframework.web.portlet.ModelAndView.getView() call org.springframework.web.portlet.ModelAndView.getView() call org.springframework.web.portlet.ModelAndView.getView() return if else throw new + + +