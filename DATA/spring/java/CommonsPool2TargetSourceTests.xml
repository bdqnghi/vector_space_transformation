org.springframework.aop.target java.util.NoSuchElementException import org.junit.After import org.junit.Before import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.aop.framework.Advised import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.xml.XmlBeanDefinitionReader import org.springframework.context.support.StaticApplicationContext import org.springframework.core.io.ClassPathResource import org.springframework.tests.sample.beans.Person import org.springframework.tests.sample.beans.SerializablePerson import org.springframework.tests.sample.beans.SideEffectBean import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import class org.springframework.aop.target.CommonsPool2TargetSourceTests ExpectedException int DefaultListableBeanFactory public public throws = new new new + public public SideEffectBean private private decl_stmt org.springframework.tests.sample.beans.SideEffectBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() + call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() public public public public SideEffectBean PoolingConfig public public decl_stmt org.springframework.tests.sample.beans.SideEffectBean = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() call org.springframework.tests.sample.beans.SideEffectBean.getCount() decl_stmt org.springframework.aop.target.PoolingConfig = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call SideEffectBean.doWork() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() call PoolingConfig.getMaxSize() SingletonTargetSource CommonsPool2TargetSource public public throws decl_stmt org.springframework.aop.target.CommonsPool2TargetSource = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.aop.target.SingletonTargetSource = call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() call org.springframework.aop.target.SingletonTargetSource.getTarget() instanceof Person Person public public throws decl_stmt org.springframework.test.context.junit4.orm.domain.Person = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) instanceof decl_stmt org.springframework.test.context.junit4.orm.domain.Person = instanceof call org.springframework.test.context.junit4.orm.domain.Person.setAge(long) call org.springframework.test.context.junit4.orm.domain.Person.setAge(long) call org.springframework.test.context.junit4.orm.domain.Person.setAge(long) call org.springframework.test.context.junit4.orm.domain.Person.setAge(long) call org.springframework.test.context.junit4.orm.domain.Person.setAge(long) call org.springframework.test.context.junit4.orm.domain.Person.getAge() call org.springframework.test.context.junit4.orm.domain.Person.getAge() call org.springframework.test.context.junit4.orm.domain.Person.getAge() call org.springframework.test.context.junit4.orm.domain.Person.getAge() call org.springframework.test.context.junit4.orm.domain.Person.getAge() CommonsPool2TargetSource decl Object int Object public public throws decl_stmt int = decl_stmt org.springframework.aop.target.CommonsPool2TargetSource = new call CommonsPool2TargetSource.setMaxSize() call CommonsPool2TargetSource.setMaxSize() call CommonsPool2TargetSource.setMaxSize() call CommonsPool2TargetSource.setMaxSize() call CommonsPool2TargetSource.setMaxSize() call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) decl_stmt java.lang.Object = new for = < ++ decl_stmt java.lang.Object = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() = try call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() catch call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() for = < ++ call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) CommonsPool2TargetSource Advised int decl Object Object public public throws decl_stmt org.springframework.aop.framework.Advised = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) decl_stmt org.springframework.aop.target.CommonsPool2TargetSource = call org.springframework.aop.framework.Advised.getTargetSource() call org.springframework.aop.framework.Advised.getTargetSource() call org.springframework.aop.framework.Advised.getTargetSource() call org.springframework.aop.framework.Advised.getTargetSource() call org.springframework.aop.framework.Advised.getTargetSource() decl_stmt int = call CommonsPool2TargetSource.getMaxSize() call CommonsPool2TargetSource.getMaxSize() call CommonsPool2TargetSource.getMaxSize() call CommonsPool2TargetSource.getMaxSize() call CommonsPool2TargetSource.getMaxSize() decl_stmt java.lang.Object = new for = < ++ decl_stmt java.lang.Object = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() = try call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() catch call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() for = < ++ call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) CommonsPool2TargetSource public public decl_stmt org.springframework.aop.target.CommonsPool2TargetSource = new call org.springframework.aop.target.CommonsPool2TargetSource.setBlockWhenExhausted(boolean) call org.springframework.aop.target.CommonsPool2TargetSource.setBlockWhenExhausted(boolean) call org.springframework.aop.target.CommonsPool2TargetSource.setBlockWhenExhausted(boolean) call org.springframework.aop.target.CommonsPool2TargetSource.setBlockWhenExhausted(boolean) call org.springframework.aop.target.CommonsPool2TargetSource.setBlockWhenExhausted(boolean) call org.springframework.aop.target.CommonsPool2TargetSource.isBlockWhenExhausted() call org.springframework.aop.target.CommonsPool2TargetSource.isBlockWhenExhausted() call org.springframework.aop.target.CommonsPool2TargetSource.isBlockWhenExhausted() call org.springframework.aop.target.CommonsPool2TargetSource.isBlockWhenExhausted() call org.springframework.aop.target.CommonsPool2TargetSource.isBlockWhenExhausted() CommonsPool2TargetSource Object Object public public throws decl_stmt org.springframework.aop.target.CommonsPool2TargetSource = new call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) call org.springframework.aop.target.CommonsPool2TargetSource.setMaxWait(long) decl_stmt java.lang.Object = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() decl_stmt java.lang.Object = call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() call CommonsPool2TargetSource.getTarget() instanceof instanceof call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) call org.springframework.aop.target.CommonsPool2TargetSource.releaseTarget(Object) StaticApplicationContext String private private decl_stmt java.lang.String = decl_stmt org.springframework.context.support.StaticApplicationContext = new call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerPrototype(String,Class,MutablePropertyValues)