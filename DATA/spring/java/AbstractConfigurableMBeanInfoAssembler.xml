org.springframework.jmx.export.assembler java.util.ArrayList import java.util.Collection import java.util.HashMap import java.util.List import java.util.Map import javax.management.modelmbean.ModelMBeanNotificationInfo import org.springframework.jmx.export.metadata.JmxMetadataUtils import org.springframework.jmx.export.metadata.ManagedNotification import org.springframework.util.StringUtils import class org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler super super extends decl ModelMBeanNotificationInfo decl Map ManagedNotification decl ModelMBeanNotificationInfo public public decl_stmt ModelMBeanNotificationInfo = new for = < ++ decl_stmt org.springframework.jmx.export.metadata.ManagedNotification = = = public public < for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl ModelMBeanNotificationInfo protected protected decl_stmt ModelMBeanNotificationInfo = if = if == = return != : new ManagedNotification decl Collection decl List private private if instanceof decl_stmt org.springframework.jmx.export.metadata.ManagedNotification = return new else if instanceof decl_stmt java.util.Collection < = < decl_stmt java.util.List < = new < for : if ! instanceof throw new decl_stmt org.springframework.jmx.export.metadata.ManagedNotification = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() else throw new