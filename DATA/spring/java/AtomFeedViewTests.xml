org.springframework.web.servlet.view.feed java.util.ArrayList import java.util.Iterator import java.util.LinkedHashMap import java.util.List import java.util.Map import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import com.rometools.rome.feed.atom.Content import com.rometools.rome.feed.atom.Entry import com.rometools.rome.feed.atom.Feed import org.junit.Before import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import static static org.custommonkey.xmlunit.XMLAssert.* import static static org.custommonkey.xmlunit.XMLUnit.* import static static org.junit.Assert.assertEquals import class org.springframework.web.servlet.view.feed.AtomFeedViewTests AbstractAtomFeedView public public throws = new String decl Map MockHttpServletRequest MockHttpServletResponse public public throws decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call AbstractAtomFeedView.render() call AbstractAtomFeedView.render() call AbstractAtomFeedView.render() call AbstractAtomFeedView.render() call AbstractAtomFeedView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() decl_stmt java.lang.String = + + + + call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() protected protected Content Entry String decl List protected < protected < throws decl_stmt java.util.List < = new < for = decl_stmt java.lang.String = decl_stmt Entry = new call Entry.setTitle() call Entry.setTitle() call Entry.setTitle() call Entry.setTitle() call Entry.setTitle() decl_stmt javax.swing.text.Content = new call Content.setValue() call Content.setValue() call Content.setValue() call Content.setValue() call Content.setValue() call Entry.setSummary() call Entry.setSummary() call Entry.setSummary() call Entry.setSummary() call Entry.setSummary() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return