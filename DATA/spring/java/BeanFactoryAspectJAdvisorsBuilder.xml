org.springframework.aop.aspectj.annotation java.util.Collections import java.util.HashMap import java.util.LinkedList import java.util.List import java.util.Map import org.aspectj.lang.reflect.PerClauseKind import org.springframework.aop.Advisor import org.springframework.beans.factory.BeanFactoryUtils import org.springframework.beans.factory.ListableBeanFactory import org.springframework.util.Assert import class org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder decl Map AspectJAdvisorFactory decl List decl Map ListableBeanFactory decl List decl List AspectMetadata decl Class MetadataAwareAspectInstanceFactory decl String decl List decl List public < public < decl_stmt java.util.List < = synchronized = if == decl_stmt java.util.List < = new < = new < decl_stmt java.lang.String = for : if ! continue decl_stmt java.lang.Class < = if == continue if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.springframework.aop.aspectj.annotation.AspectMetadata = new if call org.springframework.aop.aspectj.annotation.AspectMetadata.getAjType() call org.springframework.aop.aspectj.annotation.AspectMetadata.getAjType() call org.springframework.aop.aspectj.annotation.AspectMetadata.getAjType() call org.springframework.aop.aspectj.annotation.AspectMetadata.getAjType() call org.springframework.aop.aspectj.annotation.AspectMetadata.getAjType() == decl_stmt org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory = new decl_stmt java.util.List < = if else call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if throw new + + decl_stmt org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory = new call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() = return if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() return decl_stmt java.util.List < = new < for : decl_stmt java.util.List < = if != call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else decl_stmt org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory = call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return protected protected return