org.springframework.web.servlet.view java.util.HashMap import java.util.Locale import java.util.Map import java.util.Properties import java.util.concurrent.atomic.AtomicInteger import javax.servlet.RequestDispatcher import javax.servlet.ServletContext import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletResponse import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import javax.servlet.jsp.jstl.core.Config import javax.servlet.jsp.jstl.fmt.LocalizationContext import org.junit.Test import org.springframework.beans.MutablePropertyValues import org.springframework.beans.PropertyValue import org.springframework.beans.factory.BeanDefinitionStoreException import org.springframework.context.ApplicationContextException import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockRequestDispatcher import org.springframework.mock.web.test.MockServletContext import org.springframework.tests.sample.beans.TestBean import org.springframework.web.context.support.ServletContextResource import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.View import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver import org.springframework.web.servlet.i18n.FixedLocaleResolver import org.springframework.web.servlet.support.RequestContext import org.springframework.web.servlet.theme.FixedThemeResolver import static static org.junit.Assert.* import class org.springframework.web.servlet.view.ViewResolverTests BeanNameViewResolver StaticWebApplicationContext MutablePropertyValues MutablePropertyValues View public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) call org.springframework.beans.MutablePropertyValues.addPropertyValue(PropertyValue) new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() decl_stmt org.springframework.web.servlet.view.BeanNameViewResolver = new call BeanNameViewResolver.setApplicationContext() call BeanNameViewResolver.setApplicationContext() call BeanNameViewResolver.setApplicationContext() call BeanNameViewResolver.setApplicationContext() call BeanNameViewResolver.setApplicationContext() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.View = call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.BeanNameViewResolver.resolveViewName(String,Locale) call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() UrlBasedViewResolver public public decl_stmt org.springframework.web.servlet.view.UrlBasedViewResolver = new try call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) catch UrlBasedViewResolver public public throws decl_stmt org.springframework.web.servlet.view.UrlBasedViewResolver = new call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) UrlBasedViewResolver public public throws decl_stmt org.springframework.web.servlet.view.UrlBasedViewResolver = new call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) call org.springframework.web.servlet.view.UrlBasedViewResolver.setViewClass(Class) public public throws new public public throws new StaticWebApplicationContext HttpServletRequest Map TestBean HttpServletResponse View private private throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.View = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt HttpServletRequest = new call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() decl_stmt HttpServletResponse = new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new decl_stmt java.util.Map = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() instanceof = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() StaticWebApplicationContext View private private throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.View = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() Map MockHttpServletRequest StaticWebApplicationContext InternalResourceViewResolver Properties MockServletContext Map Map TestBean HttpServletResponse View public public throws decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) new call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt java.util.Map = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) new call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) new call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) call java.util.Map.get(Object) decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt HttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt java.util.Map = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) == call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) new call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) Map MockHttpServletRequest StaticWebApplicationContext InternalResourceViewResolver Properties MockServletContext HttpServletResponse View public public throws decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext final final = new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) new call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setExposeContextBeansAsAttributes() call InternalResourceViewResolver.setExposeContextBeansAsAttributes() call InternalResourceViewResolver.setExposeContextBeansAsAttributes() call InternalResourceViewResolver.setExposeContextBeansAsAttributes() call InternalResourceViewResolver.setExposeContextBeansAsAttributes() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new public public return new public public == new call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() decl_stmt HttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) new public public return new public public == new public public == new Map MockHttpServletRequest StaticWebApplicationContext InternalResourceViewResolver Properties MockServletContext HttpServletResponse View public public throws decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext final final = new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() call InternalResourceViewResolver.setAttributes() decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) new call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setAttributesMap() call InternalResourceViewResolver.setExposedContextBeanNames() call InternalResourceViewResolver.setExposedContextBeanNames() call InternalResourceViewResolver.setExposedContextBeanNames() call InternalResourceViewResolver.setExposedContextBeanNames() call InternalResourceViewResolver.setExposedContextBeanNames() new call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new public public return new public public == new call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() decl_stmt HttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) new public public return new public public == new public public == new LocalizationContext Locale MockHttpServletRequest StaticWebApplicationContext InternalResourceViewResolver MockServletContext Map TestBean HttpServletResponse View public public throws decl_stmt java.util.Locale = ! : decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt HttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt java.util.Map = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) == decl_stmt LocalizationContext = call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() LocalizationContext Locale MockHttpServletRequest StaticWebApplicationContext InternalResourceViewResolver MockServletContext Map TestBean HttpServletResponse View public public throws decl_stmt java.util.Locale = ! : decl_stmt org.springframework.mock.web.MockServletContext = new call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.addMessage() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt HttpServletResponse = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new decl_stmt java.util.Map = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) == decl_stmt LocalizationContext = call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() call LocalizationContext.getResourceBundle() View View HttpServletRequest StaticWebApplicationContext HttpServletResponse XmlViewResolver ServletContext TestBean TestBean Map public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.tests.sample.beans.TestBean = call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() decl_stmt org.springframework.web.servlet.view.XmlViewResolver = new call XmlViewResolver.setLocation() call XmlViewResolver.setLocation() call XmlViewResolver.setLocation() call XmlViewResolver.setLocation() call XmlViewResolver.setLocation() new call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt org.springframework.web.servlet.View = call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() decl_stmt ServletContext = new decl_stmt java.util.Map = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt HttpServletRequest = new decl_stmt HttpServletResponse = new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() = new = new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() new call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call org.springframework.tests.sample.beans.TestBean.equals(Object) call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() call HttpServletRequest.getAttribute() XmlViewResolver StaticWebApplicationContext public public decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new protected protected return call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.XmlViewResolver = new try call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call org.springframework.web.servlet.view.XmlViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.XmlViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.XmlViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.XmlViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.XmlViewResolver.afterPropertiesSet() catch protected protected return XmlViewResolver StaticWebApplicationContext public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new protected protected return call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.XmlViewResolver = new call XmlViewResolver.setCache() call XmlViewResolver.setCache() call XmlViewResolver.setCache() call XmlViewResolver.setCache() call XmlViewResolver.setCache() try call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() call XmlViewResolver.setApplicationContext() catch + try call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() call XmlViewResolver.resolveViewName() catch protected protected return View InternalResourceViewResolver StaticWebApplicationContext View public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() decl_stmt org.springframework.web.servlet.View = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() if != call InternalResourceViewResolver.removeFromCache() call InternalResourceViewResolver.removeFromCache() call InternalResourceViewResolver.removeFromCache() call InternalResourceViewResolver.removeFromCache() call InternalResourceViewResolver.removeFromCache() = call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() call InternalResourceViewResolver.resolveViewName() if == AtomicInteger AbstractCachingViewResolver public public throws decl_stmt java.util.concurrent.atomic.AtomicInteger final final = new decl_stmt org.springframework.web.servlet.view.AbstractCachingViewResolver = new protected protected throws call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() call java.util.concurrent.atomic.AtomicInteger.incrementAndGet() return call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.setCacheUnresolved(boolean) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(String,Locale) call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() call java.util.concurrent.atomic.AtomicInteger.intValue() protected protected throws return public public if ! instanceof throw new +