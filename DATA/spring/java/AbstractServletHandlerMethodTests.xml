org.springframework.web.servlet.mvc.method.annotation javax.servlet.ServletException import org.junit.After import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.ApplicationContextInitializer import org.springframework.mock.web.test.MockServletConfig import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.support.GenericWebApplicationContext import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver import org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.method.annotation.AbstractServletHandlerMethodTests DispatcherServlet public public = protected protected return protected protected final final final < throws return decl Class RootBeanDefinition GenericWebApplicationContext decl Class decl Class protected protected final final final < final final final < throws decl_stmt org.springframework.web.context.support.GenericWebApplicationContext final final = new = new protected protected for < : call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt java.lang.Class < = decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() decl_stmt java.lang.Class < = call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new decl_stmt java.lang.Class < = call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new = call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new = call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() call GenericWebApplicationContext.registerBeanDefinition() new if != call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() call GenericWebApplicationContext.refresh() return call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() call DispatcherServlet.init() new return decl Class decl Class RootBeanDefinition decl Class protected protected for < : new decl_stmt java.lang.Class < = decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() decl_stmt java.lang.Class < = new decl_stmt java.lang.Class < = new = new = new if != return