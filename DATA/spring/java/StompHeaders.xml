org.springframework.messaging.simp.stomp java.io.Serializable import java.util.Collection import java.util.Collections import java.util.LinkedHashMap import java.util.LinkedList import java.util.List import java.util.Map import java.util.Set import org.springframework.util.Assert import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MimeType import org.springframework.util.MimeTypeUtils import org.springframework.util.MultiValueMap import org.springframework.util.StringUtils import class org.springframework.messaging.simp.stomp.StompHeaders super super implements String String String String String String String decl Map String String String String String String String long String public public ! ! String public public decl_stmt java.lang.String = return : public public String public public decl_stmt java.lang.String = return != : - public public public public return public public public public return public public public public return public public public public return String public public decl_stmt java.lang.String = + + >= && >= + String decl String public public decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = return new decl long public public decl_stmt long = return != && != && != public public public public return public public public public return public public public public return public public public public return public public public public return public public public public return public public public public return public public public public return decl List public public decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() return != call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : decl List public public decl_stmt java.util.List < = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl List public public decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() public public < for < : decl LinkedHashMap public < public < decl_stmt java.util.LinkedHashMap < = new < for < < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() call decl LinkedHashMap.put() return public public return public public return public public return public public return public < public < return public < public < < return public < public < return public public < extends extends extends extends extends < public public public < public < return public < < public < < return public < < < public < < < return StompHeaders public public if == return if ! instanceof return decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = return public public return public public return public static public static < < return new