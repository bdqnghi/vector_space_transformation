org.springframework.context.event org.junit.Test import org.springframework.context.ApplicationContext import org.springframework.context.ApplicationEvent import org.springframework.context.ApplicationListener import org.springframework.context.Lifecycle import org.springframework.context.support.StaticApplicationContext import static static org.junit.Assert.* import class org.springframework.context.event.LifecycleEventTests LifecycleListener StaticApplicationContext LifecycleTestBean public public decl_stmt org.springframework.context.support.StaticApplicationContext = new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.context.support.LifecycleTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt LifecycleListener = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getStartedCount() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() LifecycleListener StaticApplicationContext LifecycleTestBean public public decl_stmt org.springframework.context.support.StaticApplicationContext = new call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call org.springframework.context.support.StaticApplicationContext.registerSingleton(String,Class,MutablePropertyValues) call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.context.support.LifecycleTestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() decl_stmt LifecycleListener = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call StaticApplicationContext.start() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call StaticApplicationContext.stop() call StaticApplicationContext.stop() call StaticApplicationContext.stop() call StaticApplicationContext.stop() call StaticApplicationContext.stop() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call org.springframework.context.support.LifecycleTestBean.isRunning() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getStoppedCount() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() call LifecycleListener.getApplicationContext() public public if instanceof = ++ else if instanceof = ++ public public return public public return public public return public public return public public = public public =