org.springframework.orm.jdo javax.jdo.JDODataStoreException import javax.jdo.JDOException import javax.jdo.JDOFatalDataStoreException import javax.jdo.JDOFatalUserException import javax.jdo.JDOObjectNotFoundException import javax.jdo.JDOOptimisticVerificationException import javax.jdo.JDOUserException import javax.jdo.PersistenceManager import javax.jdo.PersistenceManagerFactory import javax.jdo.Query import javax.sql.DataSource import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.Ordered import org.springframework.dao.DataAccessException import org.springframework.dao.DataAccessResourceFailureException import org.springframework.jdbc.datasource.DataSourceUtils import org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator import org.springframework.jdbc.support.SQLExceptionTranslator import org.springframework.jdbc.support.SQLStateSQLExceptionTranslator import org.springframework.transaction.support.ResourceHolderSynchronization import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.Assert import class org.springframework.orm.jdo.PersistenceManagerFactoryUtils int Log static static if instanceof return new else return new public static public static throws try return catch throw new PersistenceManagerHolder PersistenceManager public static public static throws decl_stmt org.springframework.orm.jdo.PersistenceManagerHolder = if != if ! call PersistenceManagerHolder.isSynchronizedWithTransaction() call PersistenceManagerHolder.isSynchronizedWithTransaction() call PersistenceManagerHolder.isSynchronizedWithTransaction() call PersistenceManagerHolder.isSynchronizedWithTransaction() call PersistenceManagerHolder.isSynchronizedWithTransaction() && call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() new return call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() if ! && ! throw new + call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt PersistenceManager = if call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() = new call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() call PersistenceManagerHolder.setSynchronizedWithTransaction() new return PersistenceManagerHolder public static public static if == return decl_stmt org.springframework.orm.jdo.PersistenceManagerHolder = return != && == call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() call org.springframework.orm.jdo.PersistenceManagerHolder.getPersistenceManager() PersistenceManagerHolder int public static public static throws decl_stmt org.springframework.orm.jdo.PersistenceManagerHolder = if != && call PersistenceManagerHolder.hasTimeout() call PersistenceManagerHolder.hasTimeout() call PersistenceManagerHolder.hasTimeout() call PersistenceManagerHolder.hasTimeout() call PersistenceManagerHolder.hasTimeout() && decl_stmt int = int call PersistenceManagerHolder.getTimeToLiveInMillis() call PersistenceManagerHolder.getTimeToLiveInMillis() call PersistenceManagerHolder.getTimeToLiveInMillis() call PersistenceManagerHolder.getTimeToLiveInMillis() call PersistenceManagerHolder.getTimeToLiveInMillis() public static public static if instanceof throw new if instanceof throw new if instanceof return new if instanceof return new if instanceof return new if instanceof return new return new public static public static try catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() public static public static throws if == return if ! call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() public public return public public try catch throw protected protected return protected protected return ! protected protected