org.springframework.context.support org.springframework.beans.factory.BeanCreationNotAllowedException import org.springframework.beans.factory.DisposableBean import org.springframework.context.ApplicationContext import org.springframework.context.ApplicationContextAware import org.springframework.context.MessageSource import org.springframework.context.MessageSourceAware import org.springframework.core.io.Resource import org.springframework.util.Assert import class org.springframework.context.support.Service super super implements ApplicationContext MessageSource decl Resource boolean public public = public public if != throw new = public public return public public = public public return Thread public public = decl_stmt java.lang.Thread = new public public call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof try call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() = catch call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() try call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) call java.lang.Thread.join(long,int) catch public public call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() instanceof try call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() = catch public public return