org.springframework.core.convert.support java.util.Arrays import java.util.List import java.util.stream.Stream import org.junit.Before import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.core.convert.ConversionFailedException import org.springframework.core.convert.ConverterNotFoundException import org.springframework.core.convert.TypeDescriptor import org.springframework.core.convert.converter.Converter import static static org.hamcrest.CoreMatchers.* import static static org.hamcrest.core.Is.is import static static org.junit.Assert.* import class org.springframework.core.convert.support.StreamConverterTests ExpectedException GenericConversionService StreamConverter public public new new new decl List TypeDescriptor Object decl Stream public public throws new decl_stmt Stream < = decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = instanceof decl_stmt java.util.List < = < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl Long TypeDescriptor Object decl Stream public public throws new decl_stmt Stream < = decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt java.lang.Long = decl List TypeDescriptor Object decl Stream public public throws decl_stmt Stream < = decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = instanceof decl_stmt java.util.List < = < call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() TypeDescriptor decl Stream public public throws decl_stmt Stream < = decl_stmt org.springframework.core.convert.TypeDescriptor = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectCause() call ExpectedException.expectCause() call ExpectedException.expectCause() call ExpectedException.expectCause() call ExpectedException.expectCause() decl Stream TypeDescriptor Object decl List public public throws new decl_stmt java.util.List < = decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = instanceof decl_stmt Stream < = < call decl Stream.mapToInt() call decl Stream.mapToInt() call decl Stream.mapToInt() call decl Stream.mapToInt() call decl Stream.mapToInt() decl Stream TypeDescriptor decl Integer Object public public throws decl_stmt java.lang.Integer = new new < public public return == decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = instanceof decl_stmt Stream < = < call decl Stream.filter() call decl Stream.filter() call decl Stream.filter() call decl Stream.filter() call decl Stream.filter() public public return == decl Stream StringBuilder TypeDescriptor Object decl List public public throws decl_stmt java.util.List < = decl_stmt org.springframework.core.convert.TypeDescriptor = new decl_stmt java.lang.Object = instanceof decl_stmt Stream < = < decl_stmt java.lang.StringBuilder = new call decl Stream.forEach() call decl Stream.forEach() call decl Stream.forEach() call decl Stream.forEach() call decl Stream.forEach() :: call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() public public throws new new public public throws call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() new new new