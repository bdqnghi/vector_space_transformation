org.springframework.transaction.jta java.io.IOException import java.io.ObjectInputStream import java.io.Serializable import java.util.List import java.util.Properties import javax.naming.NamingException import javax.transaction.HeuristicMixedException import javax.transaction.HeuristicRollbackException import javax.transaction.InvalidTransactionException import javax.transaction.NotSupportedException import javax.transaction.RollbackException import javax.transaction.Status import javax.transaction.SystemException import javax.transaction.Transaction import javax.transaction.TransactionManager import javax.transaction.TransactionSynchronizationRegistry import javax.transaction.UserTransaction import org.springframework.beans.factory.InitializingBean import org.springframework.jndi.JndiTemplate import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.HeuristicCompletionException import org.springframework.transaction.IllegalTransactionStateException import org.springframework.transaction.InvalidIsolationLevelException import org.springframework.transaction.NestedTransactionNotSupportedException import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionSuspensionNotSupportedException import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.UnexpectedRollbackException import org.springframework.transaction.support.AbstractPlatformTransactionManager import org.springframework.transaction.support.DefaultTransactionStatus import org.springframework.transaction.support.TransactionSynchronization import org.springframework.util.Assert import org.springframework.util.StringUtils import class annotation org.springframework.transaction.jta.JtaTransactionManager super super extends super implements String boolean JndiTemplate boolean boolean UserTransaction TransactionSynchronizationRegistry decl String String boolean String boolean String boolean String TransactionManager public public = public public return public public = new public public return public public = public public return public public = public public = public public = public public = public public return public public = public public = public public = public public return public public = public public = public public = public public throws protected protected throws if == if = = else = if == && = if == if = else = if == && = if == && != = protected protected throws if != if + else throw new + if != if + else protected protected if == if = else = if == && = if != if + protected protected if instanceof return else return new protected protected throws try if + + return catch throw new + + protected protected throws try if + + return catch throw new + + protected protected throws try if + + return catch throw new + + protected protected throws return protected protected throws return protected protected throws return UserTransaction String protected protected decl_stmt java.lang.String = try decl_stmt UserTransaction = if + + = return catch if + + return TransactionManager protected protected if instanceof if + + return for : try decl_stmt TransactionManager = if + + return catch if + + return TransactionSynchronizationRegistry String protected protected throws if decl_stmt java.lang.String = try decl_stmt TransactionSynchronizationRegistry = if + + return catch if + + if instanceof return if instanceof return return UserTransaction protected protected decl_stmt UserTransaction = if == throw new + if ! = != : return protected protected return new JtaTransactionObject protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try return call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() != catch throw new protected protected return JtaTransactionObject protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try catch throw new catch throw new catch throw new int protected protected throws decl_stmt int = protected protected throws if ! && != throw new + protected protected throws if > JtaTransactionObject protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try return catch throw new protected protected throws if == throw new + return JtaTransactionObject protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try catch throw new catch throw new catch throw new protected protected throws if == throw new + protected protected return JtaTransactionObject int protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try decl_stmt int = call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() if == throw new if == try call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() catch if + throw new call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() catch throw new catch throw new catch throw new catch throw new catch throw new JtaTransactionObject int protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try decl_stmt int = call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() if != try call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() catch if == if + else throw new catch throw new JtaTransactionObject int protected protected decl_stmt org.springframework.transaction.jta.JtaTransactionObject = if try decl_stmt int = call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() if != && != call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() call JtaTransactionObject.getUserTransaction() catch throw new catch throw new JtaTransactionObject protected protected < decl_stmt org.springframework.transaction.jta.JtaTransactionObject = try catch throw new catch if instanceof || instanceof + + + + else + + + + Transaction int protected protected < throws decl_stmt int = if == throw new if == throw new if != new else if != decl_stmt Transaction = if == throw new call Transaction.registerSynchronization() call Transaction.registerSynchronization() call Transaction.registerSynchronization() call Transaction.registerSynchronization() call Transaction.registerSynchronization() new else + + TransactionManager public public throws decl_stmt TransactionManager = != if >= call TransactionManager.setTransactionTimeout() call TransactionManager.setTransactionTimeout() call TransactionManager.setTransactionTimeout() call TransactionManager.setTransactionTimeout() call TransactionManager.setTransactionTimeout() call TransactionManager.begin() call TransactionManager.begin() call TransactionManager.begin() call TransactionManager.begin() call TransactionManager.begin() return new public public return private private throws = new