org.springframework.beans java.io.ByteArrayOutputStream import java.io.IOException import java.util.Collections import java.util.HashSet import java.util.Iterator import java.util.Properties import java.util.Set import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.Test import static static org.junit.Assert.* import class org.springframework.beans.ConcurrentBeanWrapperTests Log decl Set Throwable public public for = < ++ TestRun Thread public public for = < ++ decl_stmt TestRun = new call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.lang.Thread = new call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.setDaemon(boolean) call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call java.lang.Thread.start() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + synchronized while ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() && == try catch call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() + if != call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() call java.lang.Throwable.getMessage() ByteArrayOutputStream Properties TestBean BeanWrapperImpl String private static private static decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.util.Properties = call Properties.size() call Properties.size() call Properties.size() call Properties.size() call Properties.size() != for < = call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() call Properties.entrySet() if > decl_stmt java.io.ByteArrayOutputStream = new try call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) call java.util.Properties.store(Writer,String) catch decl_stmt java.lang.String = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() decl_stmt org.springframework.beans.BeanWrapperImpl = new call BeanWrapperImpl.setPropertyValue() call BeanWrapperImpl.setPropertyValue() call BeanWrapperImpl.setPropertyValue() call BeanWrapperImpl.setPropertyValue() call BeanWrapperImpl.setPropertyValue() call TestBean.getProperties() call TestBean.getProperties() call TestBean.getProperties() call TestBean.getProperties() call TestBean.getProperties() public public try for = < ++ catch = finally synchronized public public return public public =