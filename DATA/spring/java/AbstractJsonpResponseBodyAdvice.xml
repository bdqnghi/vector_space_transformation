org.springframework.web.servlet.mvc.method.annotation java.util.regex.Pattern import javax.servlet.http.HttpServletRequest import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.MethodParameter import org.springframework.http.MediaType import org.springframework.http.converter.json.MappingJacksonValue import org.springframework.http.server.ServerHttpRequest import org.springframework.http.server.ServerHttpResponse import org.springframework.http.server.ServletServerHttpRequest import org.springframework.util.Assert import org.springframework.util.ObjectUtils import class org.springframework.web.servlet.mvc.method.annotation.AbstractJsonpResponseBodyAdvice super super extends Pattern Log decl String HttpServletRequest MediaType String protected protected decl_stmt HttpServletRequest = for : decl_stmt java.lang.String = call HttpServletRequest.getParameter() call HttpServletRequest.getParameter() call HttpServletRequest.getParameter() call HttpServletRequest.getParameter() call HttpServletRequest.getParameter() if != if ! if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + continue decl_stmt org.springframework.http.MediaType = break protected protected return call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) protected protected return new