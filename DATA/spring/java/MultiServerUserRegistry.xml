org.springframework.messaging.simp.user java.net.InetAddress import java.net.UnknownHostException import java.util.HashMap import java.util.HashSet import java.util.Iterator import java.util.Map import java.util.Set import java.util.UUID import java.util.concurrent.ConcurrentHashMap import org.springframework.context.ApplicationEvent import org.springframework.context.event.SmartApplicationListener import org.springframework.core.Ordered import org.springframework.messaging.Message import org.springframework.messaging.converter.MessageConverter import org.springframework.util.Assert import org.springframework.util.ObjectUtils import class annotation org.springframework.messaging.simp.user.MultiServerUserRegistry super super implements SessionLookup SimpUserRegistry decl Map String boolean String private static private static decl_stmt java.lang.String try = catch = return + + public public return : public public < extends extends return && public public < return && public public if SimpUser public public for : decl_stmt org.springframework.messaging.simp.user.SimpUser = if != return return decl Set public < public < decl_stmt java.util.Set < = new < for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return decl Set public < public < decl_stmt java.util.Set < = new < for : call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() return return new UserRegistrySnapshot < decl_stmt UserRegistrySnapshot = if != && ! call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.init() call UserRegistrySnapshot.init() call UserRegistrySnapshot.init() call UserRegistrySnapshot.init() call UserRegistrySnapshot.init() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() call UserRegistrySnapshot.getId() decl Map long decl Iterator decl_stmt long = decl_stmt java.util.Iterator < < = while call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() call decl Iterator.hasNext() decl_stmt java.util.Map < = call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() call decl Iterator.next() if call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Map.getValue() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() call decl Iterator.remove() public public return + + + + public public = public public return public public < = public < public < return public public return > public public = + for : decl Set public < public < decl_stmt java.util.Set < = new < for : for : for : if call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() return public public return + + + public public = public public return public public if != return ! return ! public public if != return for : if return return public public < decl Map public < public < if != decl_stmt java.util.Map < = return new < call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() return new < private private = for : private private < for : public public return == || instanceof && public public return public public return + + + public public = public public return public public = public public return public public < public < public < return new < private private for : public public return == || instanceof && public public return public public return + + + public public = public public return public public = public public return public public = public public return SimpSubscription public public if == return if ! instanceof return decl_stmt org.springframework.messaging.simp.user.SimpSubscription = return call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() call org.springframework.messaging.simp.user.SimpSubscription.getSession() && call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() call SimpSubscription.getId() public public return * + public public return + decl Map TransferSimpUser SimpUser public < public < decl_stmt java.util.Map < = new < decl_stmt org.springframework.messaging.simp.user.SimpUser = call org.springframework.messaging.simp.user.SimpUserRegistry.getUser(String) call org.springframework.messaging.simp.user.SimpUserRegistry.getUser(String) call org.springframework.messaging.simp.user.SimpUserRegistry.getUser(String) call org.springframework.messaging.simp.user.SimpUserRegistry.getUser(String) call org.springframework.messaging.simp.user.SimpUserRegistry.getUser(String) if != for : call SimpUser.getSessions() call SimpUser.getSessions() call SimpUser.getSessions() call SimpUser.getSessions() call SimpUser.getSessions() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() for : call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() decl_stmt TransferSimpUser = if != call TransferSimpUser.addSessions() call TransferSimpUser.addSessions() call TransferSimpUser.addSessions() call TransferSimpUser.addSessions() call TransferSimpUser.addSessions() return