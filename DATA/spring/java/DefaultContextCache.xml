org.springframework.test.context.cache java.util.ArrayList import java.util.Collections import java.util.HashSet import java.util.LinkedHashMap import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.atomic.AtomicInteger import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.context.ApplicationContext import org.springframework.context.ConfigurableApplicationContext import org.springframework.core.style.ToStringCreator import org.springframework.test.annotation.DirtiesContext.HierarchyMode import org.springframework.test.context.MergedContextConfiguration import org.springframework.util.Assert import class org.springframework.test.context.cache.DefaultContextCache super super implements Log AtomicInteger decl Map int AtomicInteger decl Map public public return ApplicationContext public public decl_stmt org.springframework.context.ApplicationContext = if == else return decl Set MergedContextConfiguration MergedContextConfiguration public public decl_stmt org.springframework.test.context.MergedContextConfiguration = decl_stmt org.springframework.test.context.MergedContextConfiguration = call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() while != decl_stmt java.util.Set < = if == = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() = = call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() MergedContextConfiguration decl List public public decl_stmt org.springframework.test.context.MergedContextConfiguration = if == while call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() != = call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() call org.springframework.test.context.MergedContextConfiguration.getParent() decl_stmt java.util.List < = new < for : for < : for : if decl Set ApplicationContext private private < decl_stmt java.util.Set < = if != for : decl_stmt org.springframework.context.ApplicationContext = if instanceof public public return public public return public public return public public return public public return public public synchronized public public synchronized public public synchronized public public if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + public public return new protected protected < if > return