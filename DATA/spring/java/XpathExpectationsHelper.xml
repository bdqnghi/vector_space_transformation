org.springframework.test.util java.io.ByteArrayInputStream import java.util.Collections import java.util.Map import javax.xml.namespace.QName import javax.xml.parsers.DocumentBuilder import javax.xml.parsers.DocumentBuilderFactory import javax.xml.xpath.XPath import javax.xml.xpath.XPathConstants import javax.xml.xpath.XPathExpression import javax.xml.xpath.XPathExpressionException import javax.xml.xpath.XPathFactory import org.hamcrest.Matcher import org.w3c.dom.Document import org.w3c.dom.Node import org.w3c.dom.NodeList import org.xml.sax.InputSource import org.springframework.util.CollectionUtils import org.springframework.util.StringUtils import org.springframework.util.xml.SimpleNamespaceContext import static static org.hamcrest.MatcherAssert.* import static static org.springframework.test.util.AssertionErrors.* import class org.springframework.test.util.XpathExpectationsHelper XPathExpression String boolean XPath SimpleNamespaceContext private private < throws decl_stmt org.springframework.util.xml.SimpleNamespaceContext = new call org.springframework.util.xml.SimpleNamespaceContext.setBindings(Map) call org.springframework.util.xml.SimpleNamespaceContext.setBindings(Map) call org.springframework.util.xml.SimpleNamespaceContext.setBindings(Map) call org.springframework.util.xml.SimpleNamespaceContext.setBindings(Map) call org.springframework.util.xml.SimpleNamespaceContext.setBindings(Map) != : > decl_stmt XPath = call XPath.setNamespaceContext() call XPath.setNamespaceContext() call XPath.setNamespaceContext() call XPath.setNamespaceContext() call XPath.setNamespaceContext() return call XPath.compile() call XPath.compile() call XPath.compile() call XPath.compile() call XPath.compile() protected protected return Node Document public public final final final < super super throws decl_stmt javax.swing.text.Document = decl_stmt sun.tools.tree.Node = + InputSource DocumentBuilder DocumentBuilderFactory protected protected throws decl_stmt DocumentBuilderFactory = call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() call DocumentBuilderFactory.setNamespaceAware() decl_stmt DocumentBuilder = call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() call DocumentBuilderFactory.newDocumentBuilder() decl_stmt InputSource = new new if call InputSource.setEncoding() call InputSource.setEncoding() call InputSource.setEncoding() call InputSource.setEncoding() call InputSource.setEncoding() return call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() call DocumentBuilder.parse() protected < protected < < throws return Node Document public public throws decl_stmt javax.swing.text.Document = decl_stmt sun.tools.tree.Node = + + != Node Document public public throws decl_stmt javax.swing.text.Document = decl_stmt sun.tools.tree.Node = + + == Document NodeList public public < throws decl_stmt javax.swing.text.Document = decl_stmt NodeList = + call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() Document NodeList public public throws decl_stmt javax.swing.text.Document = decl_stmt NodeList = + call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() call NodeList.getLength() Document String public public < super super throws decl_stmt javax.swing.text.Document = decl_stmt java.lang.String = + Document String public public throws decl_stmt javax.swing.text.Document = decl_stmt java.lang.String = + Document Double public public < super super throws decl_stmt javax.swing.text.Document = decl_stmt java.lang.Double = + Document Double public public throws decl_stmt javax.swing.text.Document = decl_stmt java.lang.Double = + Document String public public throws decl_stmt javax.swing.text.Document = decl_stmt java.lang.String = +