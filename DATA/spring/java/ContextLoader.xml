org.springframework.web.context java.io.IOException import java.util.ArrayList import java.util.List import java.util.Map import java.util.Properties import java.util.concurrent.ConcurrentHashMap import javax.servlet.ServletContext import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.BeanUtils import org.springframework.beans.factory.access.BeanFactoryLocator import org.springframework.beans.factory.access.BeanFactoryReference import org.springframework.context.ApplicationContext import org.springframework.context.ApplicationContextException import org.springframework.context.ApplicationContextInitializer import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.access.ContextSingletonBeanFactoryLocator import org.springframework.core.GenericTypeResolver import org.springframework.core.annotation.AnnotationAwareOrderComparator import org.springframework.core.env.ConfigurableEnvironment import org.springframework.core.io.ClassPathResource import org.springframework.core.io.support.PropertiesLoaderUtils import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import class org.springframework.web.context.ContextLoader String BeanFactoryReference String Properties WebApplicationContext String String decl List String String WebApplicationContext String String decl Map String public public < if != for < : < long ApplicationContext long ClassLoader ConfigurableWebApplicationContext Log public public if != throw new + decl_stmt sun.rmi.runtime.Log = if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() decl_stmt long = try if == = if instanceof decl_stmt org.springframework.web.context.ConfigurableWebApplicationContext = if ! call ConfigurableWebApplicationContext.isActive() call ConfigurableWebApplicationContext.isActive() call ConfigurableWebApplicationContext.isActive() call ConfigurableWebApplicationContext.isActive() call ConfigurableWebApplicationContext.isActive() if call ConfigurableWebApplicationContext.getParent() call ConfigurableWebApplicationContext.getParent() call ConfigurableWebApplicationContext.getParent() call ConfigurableWebApplicationContext.getParent() call ConfigurableWebApplicationContext.getParent() == decl_stmt org.springframework.context.ApplicationContext = call ConfigurableWebApplicationContext.setParent() call ConfigurableWebApplicationContext.setParent() call ConfigurableWebApplicationContext.setParent() call ConfigurableWebApplicationContext.setParent() call ConfigurableWebApplicationContext.setParent() decl_stmt java.lang.ClassLoader = if == = else if != call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() decl_stmt long = - call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + + return catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() throw catch call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() throw decl Class protected protected decl_stmt java.lang.Class < = if ! throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() + + + return String protected < protected < decl_stmt java.lang.String = if != try return catch throw new + + else = call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) try return catch throw new + + String String ConfigurableEnvironment protected protected if decl_stmt java.lang.String = if != else + decl_stmt java.lang.String = if != decl_stmt org.springframework.core.env.ConfigurableEnvironment = if instanceof decl List decl Class protected protected decl_stmt java.util.List < < < = for < < : decl_stmt java.lang.Class < = if != && ! call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() call decl Class.isInstance() throw new + + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() for < : String String decl List protected < < < protected < < < decl_stmt java.util.List < < < = new < < < decl_stmt java.lang.String = if != for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt java.lang.String = if != for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl Class private < < private < < try decl_stmt java.lang.Class < = return < < catch throw new + + BeanFactoryLocator Log ApplicationContext String String protected protected decl_stmt org.springframework.context.ApplicationContext = decl_stmt java.lang.String = decl_stmt java.lang.String = if != decl_stmt org.springframework.beans.factory.access.BeanFactoryLocator = decl_stmt sun.rmi.runtime.Log = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + = call BeanFactoryLocator.useBeanFactory() call BeanFactoryLocator.useBeanFactory() call BeanFactoryLocator.useBeanFactory() call BeanFactoryLocator.useBeanFactory() call BeanFactoryLocator.useBeanFactory() = return ClassLoader public public try if instanceof finally decl_stmt java.lang.ClassLoader = if == = else if != call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() call decl Map.remove() if != ClassLoader WebApplicationContext public static public static decl_stmt java.lang.ClassLoader = if != decl_stmt org.springframework.web.context.WebApplicationContext = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if != return return