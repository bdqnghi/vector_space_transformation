org.springframework.http.converter java.io.IOException import java.nio.charset.Charset import org.junit.Before import org.junit.Test import org.springframework.http.HttpHeaders import org.springframework.http.MediaType import org.springframework.http.MockHttpInputMessage import org.springframework.http.MockHttpOutputMessage import static static org.junit.Assert.* import class org.springframework.http.converter.StringHttpMessageConverterTests MockHttpOutputMessage Charset StringHttpMessageConverter MediaType public public = new = new public public public public String MockHttpInputMessage String public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MockHttpInputMessage = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() decl_stmt java.lang.String = String HttpHeaders Charset public public throws decl_stmt java.nio.charset.Charset = decl_stmt java.lang.String = decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() String HttpHeaders public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.HttpHeaders = call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() String HttpHeaders MediaType public public throws decl_stmt java.lang.String = decl_stmt org.springframework.http.MediaType = new decl_stmt org.springframework.http.HttpHeaders = call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call org.springframework.http.HttpHeaders.getContentType() call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getContentLength() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset() call org.springframework.http.HttpHeaders.getAcceptCharset()