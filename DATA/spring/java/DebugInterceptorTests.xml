org.springframework.aop.interceptor org.aopalliance.intercept.MethodInvocation import org.apache.commons.logging.Log import org.junit.Test import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.aop.interceptor.DebugInterceptorTests DebugInterceptor MethodInvocation Log public public throws decl_stmt org.aopalliance.intercept.MethodInvocation = decl_stmt sun.rmi.runtime.Log = call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() decl_stmt org.springframework.aop.interceptor.DebugInterceptor = new call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() DebugInterceptor IllegalArgumentException MethodInvocation Log public public throws decl_stmt org.aopalliance.intercept.MethodInvocation = decl_stmt IllegalArgumentException = new call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() call MethodInvocation.proceed() decl_stmt sun.rmi.runtime.Log = call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() decl_stmt org.springframework.aop.interceptor.DebugInterceptor = new try call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() call DebugInterceptor.invoke() catch private private protected protected return