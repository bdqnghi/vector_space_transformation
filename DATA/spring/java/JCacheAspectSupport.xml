org.springframework.cache.jcache.interceptor java.lang.annotation.Annotation import java.lang.reflect.Method import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.aop.framework.AopProxyUtils import org.springframework.beans.factory.InitializingBean import org.springframework.cache.interceptor.AbstractCacheInvoker import org.springframework.cache.interceptor.BasicOperation import org.springframework.cache.interceptor.CacheOperationInvocationContext import org.springframework.cache.interceptor.CacheOperationInvoker import org.springframework.util.Assert import class org.springframework.cache.jcache.interceptor.JCacheAspectSupport super super extends super implements CacheResultInterceptor CachePutInterceptor CacheRemoveEntryInterceptor JCacheOperationSource CacheRemoveAllInterceptor boolean Log public public = public public return public public != + != = new = new = new = new = decl Class decl JCacheOperation decl CacheOperationInvocationContext protected protected if decl_stmt java.lang.Class < = decl_stmt org.springframework.cache.jcache.interceptor.JCacheOperation < = if != decl_stmt org.springframework.cache.interceptor.CacheOperationInvocationContext < = return return private < private < < return new < < decl Class private < private < decl_stmt java.lang.Class < = if == && != = return CacheOperationInvoker BasicOperation private private < decl_stmt org.springframework.cache.interceptor.CacheOperationInvoker = new decl_stmt org.springframework.cache.interceptor.BasicOperation = if instanceof return call org.springframework.cache.jcache.interceptor.CacheResultInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheResultInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheResultInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheResultInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheResultInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) < else if instanceof return call org.springframework.cache.jcache.interceptor.CachePutInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CachePutInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CachePutInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CachePutInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CachePutInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) < else if instanceof return call org.springframework.cache.jcache.interceptor.CacheRemoveEntryInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveEntryInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveEntryInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveEntryInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveEntryInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) < else if instanceof return call org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) call org.springframework.cache.jcache.interceptor.CacheRemoveAllInterceptor.invoke(CacheOperationInvocationContext,CacheOperationInvoker) < else throw new + protected protected return public public throws return