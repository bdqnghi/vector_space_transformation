org.springframework.expression.spel java.util.ArrayList import java.util.Iterator import java.util.LinkedHashSet import java.util.List import java.util.Map import java.util.Set import java.util.TreeMap import org.junit.Test import org.springframework.expression.EvaluationContext import org.springframework.expression.Expression import org.springframework.expression.ExpressionParser import org.springframework.expression.TypedValue import org.springframework.expression.spel.standard.SpelExpressionParser import org.springframework.expression.spel.support.StandardEvaluationContext import static static org.junit.Assert.* import class org.springframework.expression.spel.SelectionAndProjectionTests decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl Integer Expression Object EvaluationContext TypedValue public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt org.springframework.expression.TypedValue = new call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() decl_stmt java.lang.Integer = new new new new new Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl Integer Expression Object EvaluationContext TypedValue public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt org.springframework.expression.TypedValue = new call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() decl_stmt java.lang.Integer = new new new new new Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof ExpressionParser Expression EvaluationContext decl Map public public decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt org.springframework.expression.ExpressionParser = new decl_stmt org.springframework.expression.Expression = call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) decl_stmt java.util.Map < = < call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() call decl Map.containsKey() ExpressionParser Expression EvaluationContext decl Map public public decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt org.springframework.expression.ExpressionParser = new decl_stmt org.springframework.expression.Expression = call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) decl_stmt java.util.Map < = < call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() ExpressionParser Expression EvaluationContext decl Map public public decl_stmt org.springframework.expression.EvaluationContext = new new decl_stmt org.springframework.expression.ExpressionParser = new decl_stmt org.springframework.expression.Expression = call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) call org.springframework.expression.ExpressionParser.parseExpression(String) decl_stmt java.util.Map < = < call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl List Expression Object EvaluationContext public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() instanceof decl_stmt java.util.List < = < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl Number Expression Object EvaluationContext TypedValue public public throws decl_stmt org.springframework.expression.Expression = new decl_stmt org.springframework.expression.EvaluationContext = new call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) call org.springframework.expression.EvaluationContext.setVariable(String,Object) decl_stmt java.lang.Object = call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call org.springframework.expression.Expression.getValue() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() decl_stmt org.springframework.expression.TypedValue = new call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() decl_stmt java.lang.Number = new new public < public < return public < public < return public < public < return new < public < public < return public < public < return public public return public public return public < public < return public public return decl List static < static < decl_stmt java.util.List < = new < for = < ++ call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new + return decl Set static < static < decl_stmt java.util.Set < = new < for = < ++ call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() new + return decl Set static < static < decl_stmt java.util.Set final final final < = return new < public < public < return call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() public < public < return decl IntegerTestBean static static decl_stmt IntegerTestBean = new for = < ++ if == = new else = new + return public public return