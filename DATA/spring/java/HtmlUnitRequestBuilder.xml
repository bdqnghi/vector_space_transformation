org.springframework.test.web.servlet.htmlunit java.io.UnsupportedEncodingException import java.net.URL import java.net.URLDecoder import java.util.ArrayList import java.util.Enumeration import java.util.List import java.util.Locale import java.util.Map import java.util.Map.Entry import java.util.Set import java.util.StringTokenizer import java.util.regex.Matcher import java.util.regex.Pattern import javax.servlet.ServletContext import javax.servlet.http.Cookie import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpSession import com.gargoylesoftware.htmlunit.CookieManager import com.gargoylesoftware.htmlunit.WebClient import com.gargoylesoftware.htmlunit.WebRequest import com.gargoylesoftware.htmlunit.util.NameValuePair import org.springframework.beans.Mergeable import org.springframework.http.MediaType import org.springframework.mock.web.MockHttpServletRequest import org.springframework.mock.web.MockHttpSession import org.springframework.test.web.servlet.RequestBuilder import org.springframework.test.web.servlet.SmartRequestBuilder import org.springframework.test.web.servlet.request.RequestPostProcessor import org.springframework.util.Assert import org.springframework.util.ObjectUtils import org.springframework.web.util.UriComponents import org.springframework.web.util.UriComponentsBuilder import class org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder super super implements RequestBuilder String SmartRequestBuilder decl Map RequestPostProcessor WebRequest Pattern WebClient String String MockHttpServletRequest UriComponents public public decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt org.springframework.web.util.UriComponents = decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call UriComponents.getPath() call UriComponents.getPath() call UriComponents.getPath() call UriComponents.getPath() call UriComponents.getPath() call org.springframework.mock.web.MockHttpServletRequest.setServerName(String) call org.springframework.mock.web.MockHttpServletRequest.setServerName(String) call org.springframework.mock.web.MockHttpServletRequest.setServerName(String) call org.springframework.mock.web.MockHttpServletRequest.setServerName(String) call org.springframework.mock.web.MockHttpServletRequest.setServerName(String) call UriComponents.getHost() call UriComponents.getHost() call UriComponents.getHost() call UriComponents.getHost() call UriComponents.getHost() call org.springframework.mock.web.MockHttpServletRequest.setCharacterEncoding(String) call org.springframework.mock.web.MockHttpServletRequest.setCharacterEncoding(String) call org.springframework.mock.web.MockHttpServletRequest.setCharacterEncoding(String) call org.springframework.mock.web.MockHttpServletRequest.setCharacterEncoding(String) call org.springframework.mock.web.MockHttpServletRequest.setCharacterEncoding(String) call org.springframework.mock.web.MockHttpServletRequest.setProtocol(String) call org.springframework.mock.web.MockHttpServletRequest.setProtocol(String) call org.springframework.mock.web.MockHttpServletRequest.setProtocol(String) call org.springframework.mock.web.MockHttpServletRequest.setProtocol(String) call org.springframework.mock.web.MockHttpServletRequest.setProtocol(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call org.springframework.mock.web.MockHttpServletRequest.setQueryString(String) call UriComponents.getQuery() call UriComponents.getQuery() call UriComponents.getQuery() call UriComponents.getQuery() call UriComponents.getQuery() call org.springframework.mock.web.MockHttpServletRequest.setScheme(String) call org.springframework.mock.web.MockHttpServletRequest.setScheme(String) call org.springframework.mock.web.MockHttpServletRequest.setScheme(String) call org.springframework.mock.web.MockHttpServletRequest.setScheme(String) call org.springframework.mock.web.MockHttpServletRequest.setScheme(String) call org.springframework.web.util.UriComponents.getScheme() call org.springframework.web.util.UriComponents.getScheme() call org.springframework.web.util.UriComponents.getScheme() call org.springframework.web.util.UriComponents.getScheme() call org.springframework.web.util.UriComponents.getScheme() return private private if != = if != = return String MockHttpServletRequest decl Cookie String String String decl Enumeration decl Enumeration decl Map decl String decl Enumeration HttpSession decl Enumeration private private if == return decl_stmt org.springframework.mock.web.MockHttpServletRequest = decl_stmt HttpSession = call org.springframework.mock.web.MockHttpServletRequest.getSession(boolean) call org.springframework.mock.web.MockHttpServletRequest.getSession(boolean) call org.springframework.mock.web.MockHttpServletRequest.getSession(boolean) call org.springframework.mock.web.MockHttpServletRequest.getSession(boolean) call org.springframework.mock.web.MockHttpServletRequest.getSession(boolean) if != decl_stmt java.util.Enumeration < = call HttpSession.getAttributeNames() call HttpSession.getAttributeNames() call HttpSession.getAttributeNames() call HttpSession.getAttributeNames() call HttpSession.getAttributeNames() while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.lang.Object = call HttpSession.getAttribute() call HttpSession.getAttribute() call HttpSession.getAttribute() call HttpSession.getAttribute() call HttpSession.getAttribute() decl_stmt java.util.Enumeration < = call org.springframework.mock.web.MockHttpServletRequest.getHeaderNames() call org.springframework.mock.web.MockHttpServletRequest.getHeaderNames() call org.springframework.mock.web.MockHttpServletRequest.getHeaderNames() call org.springframework.mock.web.MockHttpServletRequest.getHeaderNames() call org.springframework.mock.web.MockHttpServletRequest.getHeaderNames() while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.util.Enumeration < = call org.springframework.mock.web.MockHttpServletRequest.getHeaders(String) call org.springframework.mock.web.MockHttpServletRequest.getHeaders(String) call org.springframework.mock.web.MockHttpServletRequest.getHeaders(String) call org.springframework.mock.web.MockHttpServletRequest.getHeaders(String) call org.springframework.mock.web.MockHttpServletRequest.getHeaders(String) while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.util.Map < = call org.springframework.mock.web.MockHttpServletRequest.getParameterMap() call org.springframework.mock.web.MockHttpServletRequest.getParameterMap() call org.springframework.mock.web.MockHttpServletRequest.getParameterMap() call org.springframework.mock.web.MockHttpServletRequest.getParameterMap() call org.springframework.mock.web.MockHttpServletRequest.getParameterMap() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt Cookie = call org.springframework.mock.web.MockHttpServletRequest.getCookies() call org.springframework.mock.web.MockHttpServletRequest.getCookies() call org.springframework.mock.web.MockHttpServletRequest.getCookies() call org.springframework.mock.web.MockHttpServletRequest.getCookies() call org.springframework.mock.web.MockHttpServletRequest.getCookies() if ! decl_stmt java.util.Enumeration < = call org.springframework.mock.web.MockHttpServletRequest.getAttributeNames() call org.springframework.mock.web.MockHttpServletRequest.getAttributeNames() call org.springframework.mock.web.MockHttpServletRequest.getAttributeNames() call org.springframework.mock.web.MockHttpServletRequest.getAttributeNames() call org.springframework.mock.web.MockHttpServletRequest.getAttributeNames() while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) public public = public public = decl String String private private decl_stmt java.lang.String = if != decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) String private private decl_stmt java.lang.String = if == return try call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) catch throw new String private private decl_stmt java.lang.String = == : decl List private private if == decl_stmt java.util.List < = if call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() else + call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() else if ! throw new + + decl List String String decl Cookie String StringTokenizer decl Set private private decl_stmt java.util.List < = new < decl_stmt java.lang.String = if != decl_stmt java.util.StringTokenizer = new while call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) if ! call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() call java.util.StringTokenizer.hasMoreTokens() throw new + + + decl_stmt java.lang.String = call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) call java.util.StringTokenizer.nextToken(String) new decl_stmt java.util.Set < = for : new decl_stmt Cookie = if != for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() private private < if String private private decl_stmt java.lang.String = if == return return private private return private private for < : MockHttpSession private private final final decl_stmt org.springframework.mock.web.MockHttpSession synchronized = if == = new call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) synchronized else call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) call org.springframework.mock.web.MockHttpSession.setNew(boolean) return private private private private private private return new + String decl String private private decl_stmt java.lang.String = if == else decl_stmt java.lang.String = call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) call java.lang.String.split(String) for = - >= -- String String private private for < < : decl_stmt java.lang.String = decl_stmt java.lang.String = for : = != : for : private private try return catch throw new Matcher String String String private private decl_stmt java.util.regex.Matcher = call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) call java.util.regex.Pattern.matcher(CharSequence) if ! call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() call java.util.regex.Matcher.matches() throw new + decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) if == = decl_stmt java.lang.String = call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) call java.util.regex.Matcher.group(int) if == = return new private private String private private decl_stmt java.lang.String = if = private private if int int private private decl_stmt int = if == - decl_stmt int = else URL UriComponentsBuilder private private decl_stmt java.net.URL = decl_stmt org.springframework.web.util.UriComponentsBuilder = call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() call java.net.URL.toExternalForm() return call org.springframework.web.util.UriComponentsBuilder.build(boolean) call org.springframework.web.util.UriComponentsBuilder.build(boolean) call org.springframework.web.util.UriComponentsBuilder.build(boolean) call org.springframework.web.util.UriComponentsBuilder.build(boolean) call org.springframework.web.util.UriComponentsBuilder.build(boolean) public public return public public if == return if instanceof = if instanceof = return String HttpSession HtmlUnitMockHttpSession public public decl_stmt HttpSession = if == && decl_stmt HtmlUnitMockHttpSession = new call HtmlUnitMockHttpSession.setNew() call HtmlUnitMockHttpSession.setNew() call HtmlUnitMockHttpSession.setNew() call HtmlUnitMockHttpSession.setNew() call HtmlUnitMockHttpSession.setNew() decl_stmt java.lang.String = call HtmlUnitMockHttpSession.getId() call HtmlUnitMockHttpSession.getId() call HtmlUnitMockHttpSession.getId() call HtmlUnitMockHttpSession.getId() call HtmlUnitMockHttpSession.getId() synchronized = return public public return public public public public synchronized private private return