org.springframework.jndi java.util.Hashtable import java.util.Properties import javax.naming.Context import javax.naming.InitialContext import javax.naming.NameNotFoundException import javax.naming.NamingException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.util.CollectionUtils import class org.springframework.jndi.JndiTemplate Properties Log public public = public public return Context public < public < < throws decl_stmt sun.tools.tree.Context = try return finally public public throws return public public if != try catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl Hashtable Properties protected protected throws decl_stmt java.util.Hashtable < = decl_stmt java.util.Properties = if != = new < call Properties.size() call Properties.size() call Properties.size() call Properties.size() call Properties.size() return new Object public public final final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return new < public public throws decl_stmt java.lang.Object = if == throw new + + return Object public public throws decl_stmt java.lang.Object = if == throw new + + return Object public < public < < throws decl_stmt java.lang.Object = if != && ! throw new != call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() : return public public final final final final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + new < public public throws return public public throws return public public final final final final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + new < public public throws return public public throws return public public final final throws if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + new < public public throws return public public throws return