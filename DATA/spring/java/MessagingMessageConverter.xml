org.springframework.jms.support.converter javax.jms.JMSException import javax.jms.Session import org.springframework.beans.factory.InitializingBean import org.springframework.jms.support.JmsHeaderMapper import org.springframework.jms.support.SimpleJmsHeaderMapper import org.springframework.messaging.Message import org.springframework.messaging.MessageHeaders import org.springframework.messaging.core.AbstractMessagingTemplate import org.springframework.util.Assert import class org.springframework.jms.support.converter.MessagingMessageConverter super super implements MessageConverter JmsHeaderMapper public public = public public = public public decl javax decl Message Object MessageHeaders public public throws if ! instanceof throw new + + + + decl_stmt org.springframework.messaging.Message < = < decl_stmt org.springframework.messaging.MessageHeaders = call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() decl_stmt java.lang.Object = != call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) call org.springframework.messaging.MessageHeaders.get(Object,Class) : decl_stmt org.springframework.messaging.Message = call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() return public public throws if == return return new protected protected throws return protected protected throws return protected protected throws return private private return public public if == try = catch throw new + + return public public if == = return