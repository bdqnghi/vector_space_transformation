org.springframework.test.context.support org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.io.ClassPathResource import org.springframework.core.style.ToStringCreator import org.springframework.test.context.TestPropertySource import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.ResourceUtils import class org.springframework.test.context.support.TestPropertySourceAttributes decl String boolean boolean Log decl String decl Class < < return return return return return public public return new call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() ClassPathResource String String String private static private static < decl_stmt java.lang.String = + decl_stmt java.lang.String = + decl_stmt org.springframework.core.io.ClassPathResource = new if call org.springframework.core.io.ClassPathResource.exists() call org.springframework.core.io.ClassPathResource.exists() call org.springframework.core.io.ClassPathResource.exists() call org.springframework.core.io.ClassPathResource.exists() call org.springframework.core.io.ClassPathResource.exists() if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() return else decl_stmt java.lang.String = + + call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() throw new