org.springframework.context.annotation.configuration java.util.Arrays import java.util.Collections import java.util.List import java.util.Set import javax.inject.Provider import org.junit.Test import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.FactoryBean import org.springframework.beans.factory.InjectionPoint import org.springframework.beans.factory.ListableBeanFactory import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.annotation.Autowired import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor import org.springframework.beans.factory.annotation.Qualifier import org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver import org.springframework.beans.factory.annotation.Required import org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor import org.springframework.beans.factory.annotation.Value import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.BeanFactoryPostProcessor import org.springframework.beans.factory.config.BeanPostProcessor import org.springframework.beans.factory.config.ConfigurableListableBeanFactory import org.springframework.beans.factory.config.DependencyDescriptor import org.springframework.beans.factory.config.ListFactoryBean import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer import org.springframework.beans.factory.parsing.BeanDefinitionParsingException import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.ApplicationListener import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.AnnotationConfigUtils import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.ConfigurationClassPostProcessor import org.springframework.context.annotation.Scope import org.springframework.context.event.ContextRefreshedEvent import org.springframework.context.support.GenericApplicationContext import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.context.annotation.configuration.ConfigurationClassProcessingTests RequiredAnnotationBeanPostProcessor DefaultListableBeanFactory ConfigurationClassPostProcessor String private private < decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new for < : decl_stmt java.lang.String = call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) new decl_stmt org.springframework.context.annotation.ConfigurationClassPostProcessor = new call org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(BeanDefinitionRegistry) call org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(BeanDefinitionRegistry) call org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(BeanDefinitionRegistry) call org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(BeanDefinitionRegistry) call org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(BeanDefinitionRegistry) call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() call ConfigurationClassPostProcessor.postProcessBeanFactory() decl_stmt org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call org.springframework.beans.factory.support.DefaultListableBeanFactory.freezeConfiguration() call org.springframework.beans.factory.support.DefaultListableBeanFactory.freezeConfiguration() call org.springframework.beans.factory.support.DefaultListableBeanFactory.freezeConfiguration() call org.springframework.beans.factory.support.DefaultListableBeanFactory.freezeConfiguration() call org.springframework.beans.factory.support.DefaultListableBeanFactory.freezeConfiguration() return GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() try call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() catch BeanFactory decl String public public decl_stmt org.springframework.beans.factory.BeanFactory = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt java.lang.String = call org.springframework.beans.factory.BeanFactory.getAliases(String) call org.springframework.beans.factory.BeanFactory.getAliases(String) call org.springframework.beans.factory.BeanFactory.getAliases(String) call org.springframework.beans.factory.BeanFactory.getAliases(String) call org.springframework.beans.factory.BeanFactory.getAliases(String) for : call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) try call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) catch GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() GenericApplicationContext public public decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = public = public String BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt java.lang.String = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) String BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.getType(String) call org.springframework.beans.factory.BeanFactory.isTypeMatch(String,Class) call org.springframework.beans.factory.BeanFactory.isTypeMatch(String,Class) call org.springframework.beans.factory.BeanFactory.isTypeMatch(String,Class) call org.springframework.beans.factory.BeanFactory.isTypeMatch(String,Class) call org.springframework.beans.factory.BeanFactory.isTypeMatch(String,Class) decl_stmt java.lang.String = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl String ListableBeanFactory public public decl_stmt org.springframework.beans.factory.ListableBeanFactory = call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.getType() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.isTypeMatch() call ListableBeanFactory.getBean() call ListableBeanFactory.getBean() call ListableBeanFactory.getBean() call ListableBeanFactory.getBean() call ListableBeanFactory.getBean() instanceof decl_stmt java.lang.String = call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) = call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) = call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) = call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) call org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(ResolvableType) ITestBean TestBean ITestBean BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.tests.sample.beans.TestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.tests.sample.beans.TestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() call org.springframework.scheduling.annotation.ITestBean.getSpouse() AutowiredAnnotationBeanPostProcessor AdaptiveInjectionPoints DefaultListableBeanFactory public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = decl_stmt org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) call org.springframework.beans.factory.support.DefaultListableBeanFactory.setAutowireCandidateResolver(AutowireCandidateResolver) new call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() call DefaultListableBeanFactory.addBeanPostProcessor() decl_stmt AdaptiveInjectionPoints = call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(Class,Object) call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint1() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() call AdaptiveInjectionPoints.adaptiveInjectionPoint2() ITestBean ITestBean AnnotationConfigApplicationContext SpousyTestBean TestBean RootBeanDefinition public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = new call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call RootBeanDefinition.getPropertyValues() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.registerBeanDefinition() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.tests.sample.beans.TestBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.ITestBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.ITestBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.tests.sample.beans.TestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() call org.springframework.scheduling.annotation.ITestBean.getName() decl_stmt SpousyTestBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() = public = public return = public = public return = public = public return = public < = public < return public final public final return new public public return public public return ListFactoryBean public < public < decl_stmt org.springframework.beans.factory.config.ListFactoryBean = new call ListFactoryBean.setSourceList() call ListFactoryBean.setSourceList() call ListFactoryBean.setSourceList() call ListFactoryBean.setSourceList() call ListFactoryBean.setSourceList() return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) return TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) return public public return new public public return new public public return new String public public return new decl_stmt java.lang.String = + public public = public public if instanceof + return public public return public public return public public = public public if instanceof + return public public return public public return BeanDefinition public public return new public public decl_stmt org.springframework.beans.factory.config.BeanDefinition = call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() + BeanDefinition public public decl_stmt org.springframework.beans.factory.config.BeanDefinition = call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() + public public return new public public public public =