org.springframework.messaging.support java.nio.charset.Charset import java.util.ArrayList import java.util.Arrays import java.util.HashMap import java.util.List import java.util.Map import java.util.UUID import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageHeaders import org.springframework.util.Assert import org.springframework.util.IdGenerator import org.springframework.util.MimeType import org.springframework.util.MimeTypeUtils import org.springframework.util.ObjectUtils import org.springframework.util.PatternMatchUtils import org.springframework.util.StringUtils import class org.springframework.messaging.support.MessageHeaderAccessor Charset decl MimeType IdGenerator boolean boolean boolean MutableMessageHeaders Log protected protected < return new public public = public public public public return protected protected = public public return = = public public if ! return public public return new public < public < return new < public public return public public if throw new + + if ! = if != else protected protected if != && != if || if ! instanceof || instanceof throw new + + public public if == public public if && ! decl List public public decl_stmt java.util.List < = new < for : if if call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() for : decl List private < private < < decl_stmt java.util.List < = new < if != for : call MutableMessageHeaders.keySet() call MutableMessageHeaders.keySet() call MutableMessageHeaders.keySet() call MutableMessageHeaders.keySet() call MutableMessageHeaders.keySet() if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return public public < if != for < : if ! public public < if != for < : if ! protected protected return || Object public public decl_stmt java.lang.Object = if == return return instanceof : call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() Object public public decl_stmt java.lang.Object = if == return return instanceof : call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() public public Object public public decl_stmt java.lang.Object = if == return return instanceof : call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() call java.lang.Object.toString() public public public public public public return public public public public public public return public public return + + public public return + + decl byte Charset String protected protected if instanceof decl_stmt java.lang.String = return call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < + : + call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + else if instanceof decl_stmt byte = if decl_stmt java.nio.charset.Charset = = != : return < + new : + new + else return + + else decl_stmt java.lang.String = return call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() call java.lang.String.length() < + : + Charset decl byte protected protected if instanceof return + else if instanceof decl_stmt byte = if decl_stmt java.nio.charset.Charset = = != : return + new else return + + else return + protected protected for : if return return public public return + + + public static < extends extends public static < extends extends < < return MessageHeaderAccessor MutableMessageHeaders public static < extends extends public static < extends extends < if instanceof decl_stmt MutableMessageHeaders = decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() if call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() call MessageHeaderAccessor.getClass() return return MessageHeaderAccessor MutableMessageHeaders public static public static < if instanceof decl_stmt MutableMessageHeaders = decl_stmt org.springframework.messaging.support.MessageHeaderAccessor = call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() call MutableMessageHeaders.getMessageHeaderAccessor() if != return call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() call org.springframework.messaging.support.MessageHeaderAccessor.isMutable() : call org.springframework.messaging.support.MessageHeaderAccessor.createAccessor(Message) call org.springframework.messaging.support.MessageHeaderAccessor.createAccessor(Message) call org.springframework.messaging.support.MessageHeaderAccessor.createAccessor(Message) call org.springframework.messaging.support.MessageHeaderAccessor.createAccessor(Message) call org.springframework.messaging.support.MessageHeaderAccessor.createAccessor(Message) return new public public return public < public < ! return public public = public public return ! IdGenerator UUID public public if ! return if == decl_stmt org.springframework.util.IdGenerator = != : decl_stmt java.util.UUID = call IdGenerator.generateId() call IdGenerator.generateId() call IdGenerator.generateId() call IdGenerator.generateId() call IdGenerator.generateId() if != && != if == if