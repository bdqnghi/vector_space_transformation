org.springframework.oxm.castor java.io.ByteArrayInputStream import java.io.IOException import java.io.StringReader import java.util.concurrent.atomic.AtomicReference import javax.xml.transform.sax.SAXSource import javax.xml.transform.stream.StreamSource import org.junit.Ignore import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.oxm.AbstractUnmarshallerTests import org.springframework.oxm.MarshallingException import org.xml.sax.InputSource import org.xml.sax.XMLReader import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.oxm.castor.CastorUnmarshallerTests super super extends String String ClassPathResource CastorMarshaller protected protected throws decl_stmt org.springframework.oxm.castor.CastorMarshaller = new decl_stmt org.springframework.core.io.ClassPathResource = new call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() return Flights protected protected decl_stmt org.springframework.oxm.jibx.Flights = call Flights.getFlightCount() call Flights.getFlightCount() call Flights.getFlightCount() call Flights.getFlightCount() call Flights.getFlightCount() call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) Flight protected protected decl_stmt org.springframework.oxm.xstream.Flight = call Flight.getNumber() call Flight.getNumber() call Flight.getNumber() call Flight.getNumber() call Flight.getNumber() StreamSource CastorMarshaller Object public public throws decl_stmt org.springframework.oxm.castor.CastorMarshaller = new call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) new call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() decl_stmt StreamSource = new new decl_stmt java.lang.Object = call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() String OrderItem CastorMarshaller Order public public throws decl_stmt org.springframework.oxm.castor.CastorMarshaller = new call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) call org.springframework.oxm.castor.CastorMarshaller.setMappingLocation(Resource) new call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) call org.springframework.oxm.castor.CastorMarshaller.setTargetClasses(Class) new call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() call org.springframework.oxm.castor.CastorMarshaller.afterPropertiesSet() decl_stmt java.lang.String = + + + decl_stmt Order = call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() new new call Order.getOrderItemCount() call Order.getOrderItemCount() call Order.getOrderItemCount() call Order.getOrderItemCount() call Order.getOrderItemCount() decl_stmt OrderItem = call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() = call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call Order.getOrderItem() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getId() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() call OrderItem.getQuantity() Object public public throws decl_stmt java.lang.Object = Object public public throws decl_stmt java.lang.Object = Object public public throws decl_stmt java.lang.Object = = public = public throws Object public public throws decl_stmt java.lang.Object = = public = public throws Flights Object public public throws decl_stmt org.springframework.oxm.jibx.Flights = new decl_stmt java.lang.Object = Flights Object public public throws decl_stmt org.springframework.oxm.jibx.Flights = new call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() new new decl_stmt java.lang.Object = Flights Object public public throws decl_stmt org.springframework.oxm.jibx.Flights = new call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() call Flights.setFlight() new new decl_stmt java.lang.Object = call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) call org.springframework.oxm.jibx.Flights.getFlight(int) CastorMarshaller decl AtomicReference public public throws decl_stmt java.util.concurrent.atomic.AtomicReference final final final < = new < decl_stmt org.springframework.oxm.castor.CastorMarshaller = new protected protected call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() return call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() new call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() new call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() protected protected return CastorMarshaller decl AtomicReference public public throws decl_stmt java.util.concurrent.atomic.AtomicReference final final final < = new < decl_stmt org.springframework.oxm.castor.CastorMarshaller = new protected protected call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() return call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() new new call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call decl AtomicReference.set() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setSupportDtd() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.setProcessExternalEntities() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() call CastorMarshaller.unmarshal() new new call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() call decl AtomicReference.get() protected protected return private private throws return StreamSource private private throws decl_stmt StreamSource = new new return