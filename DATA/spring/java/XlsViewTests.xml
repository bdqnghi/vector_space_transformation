org.springframework.web.servlet.view.document java.io.ByteArrayInputStream import java.util.HashMap import java.util.Map import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.apache.poi.hssf.usermodel.HSSFWorkbook import org.apache.poi.ss.usermodel.Cell import org.apache.poi.ss.usermodel.Row import org.apache.poi.ss.usermodel.Sheet import org.apache.poi.ss.usermodel.Workbook import org.apache.poi.xssf.usermodel.XSSFWorkbook import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.web.servlet.View import static static org.junit.Assert.* import class org.springframework.web.servlet.view.document.XlsViewTests MockHttpServletRequest MockHttpServletResponse Cell View Sheet Workbook Row public public throws decl_stmt org.springframework.web.servlet.View = new protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) new < decl_stmt Workbook = new new call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() decl_stmt Sheet = call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() decl_stmt com.sun.rowset.internal.Row = call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() decl_stmt Cell = call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() Cell Sheet Row protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() Cell View Sheet Workbook Row public public throws decl_stmt org.springframework.web.servlet.View = new protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) new < decl_stmt Workbook = new new call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() decl_stmt Sheet = call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() decl_stmt com.sun.rowset.internal.Row = call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() decl_stmt Cell = call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() Cell Sheet Row protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() Cell View Sheet Workbook Row public public throws decl_stmt org.springframework.web.servlet.View = new protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) new < decl_stmt Workbook = new new call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() call Workbook.getSheetName() decl_stmt Sheet = call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() call Workbook.getSheet() decl_stmt com.sun.rowset.internal.Row = call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() call Sheet.getRow() decl_stmt Cell = call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Row.getCell() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() call Cell.getStringCellValue() Cell Sheet Row protected protected < throws decl_stmt Sheet = decl_stmt com.sun.rowset.internal.Row = call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() call Sheet.createRow() decl_stmt Cell = call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Row.createCell() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue() call Cell.setCellValue()