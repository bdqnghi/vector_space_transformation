org.springframework.web.servlet.mvc.method.annotation java.util.HashMap import java.util.Map import java.util.concurrent.CompletionStage import java.util.function.BiFunction import org.springframework.core.MethodParameter import org.springframework.lang.UsesJava8 import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.concurrent.ListenableFuture import org.springframework.util.concurrent.ListenableFutureCallback import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.async.DeferredResult import org.springframework.web.context.request.async.WebAsyncUtils import org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler import org.springframework.web.method.support.ModelAndViewContainer import class org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler super super implements decl Map public < < public < < return private private < for < : if return return public public return != public public return != && != DeferredResultAdapter decl DeferredResult public public throws if == return decl_stmt org.springframework.web.servlet.mvc.method.annotation.DeferredResultAdapter = decl_stmt org.springframework.web.context.request.async.DeferredResult < = call DeferredResultAdapter.adaptToDeferredResult() call DeferredResultAdapter.adaptToDeferredResult() call DeferredResultAdapter.adaptToDeferredResult() call DeferredResultAdapter.adaptToDeferredResult() call DeferredResultAdapter.adaptToDeferredResult() public < public < return < decl DeferredResult public < public < decl_stmt org.springframework.web.context.request.async.DeferredResult final final final < = new < < new < public public call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() public public call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() return public public public public decl CompletionStage decl DeferredResult public < public < decl_stmt org.springframework.web.context.request.async.DeferredResult final final final < = new < decl_stmt CompletionStage < = < call decl CompletionStage.handle() call decl CompletionStage.handle() call decl CompletionStage.handle() call decl CompletionStage.handle() call decl CompletionStage.handle() new < public public if != call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() call decl DeferredResult.setErrorResult() else call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() call decl DeferredResult.setResult() return return public public if != else return