org.springframework.web.socket.messaging static static org.junit.Assert.* import static static org.mockito.Mockito.* import java.net.URI import java.nio.charset.Charset import java.util.concurrent.ScheduledFuture import org.junit.Before import org.junit.Test import org.mockito.ArgumentCaptor import org.mockito.Mock import org.mockito.MockitoAnnotations import org.springframework.messaging.Message import org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession import org.springframework.messaging.simp.stomp.StompCommand import org.springframework.messaging.simp.stomp.StompHeaderAccessor import org.springframework.messaging.simp.stomp.StompHeaders import org.springframework.messaging.simp.stomp.StompSessionHandler import org.springframework.messaging.support.MessageBuilder import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.messaging.tcp.TcpConnection import org.springframework.scheduling.TaskScheduler import org.springframework.util.MimeTypeUtils import org.springframework.util.concurrent.SettableListenableFuture import org.springframework.web.socket.BinaryMessage import org.springframework.web.socket.CloseStatus import org.springframework.web.socket.PongMessage import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.client.WebSocketClient import class org.springframework.web.socket.messaging.WebSocketStompClientTests TaskScheduler TestWebSocketStompClient WebSocketSession decl ArgumentCaptor decl SettableListenableFuture Charset ConnectionHandlingStompSession WebSocketClient public public throws decl_stmt org.springframework.web.socket.client.WebSocketClient = = new = = new <> call org.springframework.web.socket.client.WebSocketClient.doHandshake(WebSocketHandler,WebSocketHttpHeaders,URI) call org.springframework.web.socket.client.WebSocketClient.doHandshake(WebSocketHandler,WebSocketHttpHeaders,URI) call org.springframework.web.socket.client.WebSocketClient.doHandshake(WebSocketHandler,WebSocketHttpHeaders,URI) call org.springframework.web.socket.client.WebSocketClient.doHandshake(WebSocketHandler,WebSocketHttpHeaders,URI) call org.springframework.web.socket.client.WebSocketClient.doHandshake(WebSocketHandler,WebSocketHttpHeaders,URI) IllegalStateException public public throws decl_stmt IllegalStateException = new public public throws IllegalStateException public public throws decl_stmt IllegalStateException = new public public throws StompHeaders String decl Message decl ArgumentCaptor StompHeaderAccessor public public throws decl_stmt java.lang.String = new decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.messaging.Message < = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) new call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() StompHeaders WebSocketHandler String String decl ArgumentCaptor decl Message StompHeaderAccessor public public throws decl_stmt org.springframework.web.socket.WebSocketHandler = decl_stmt java.lang.String = call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) new decl_stmt java.lang.String = call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.WebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) new decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.messaging.Message < = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) new call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() StompHeaders String decl Message decl ArgumentCaptor StompHeaderAccessor public public throws decl_stmt java.lang.String = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.messaging.Message < = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call StompHeaderAccessor.toNativeHeaderMap() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaderAccessor.getCommand() call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) call org.springframework.messaging.simp.stomp.StompHeaders.getFirst(String) new call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() call decl Message.getPayload() public public throws new decl ArgumentCaptor TextMessage StompHeaderAccessor decl byte public public throws decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) decl_stmt byte = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.TextMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() call TextMessage.getPayload() BinaryMessage decl ArgumentCaptor StompHeaderAccessor decl byte public public throws decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setDestination(String) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) call org.springframework.messaging.simp.stomp.StompHeaderAccessor.setContentType(MimeType) decl_stmt byte = call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() call StompHeaderAccessor.getMessageHeaders() decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.BinaryMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() new call BinaryMessage.getPayload() call BinaryMessage.getPayload() call BinaryMessage.getPayload() call BinaryMessage.getPayload() call BinaryMessage.getPayload() WebSocketStompClient StompHeaders public public throws decl_stmt org.springframework.web.socket.messaging.WebSocketStompClient = new new call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) new call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() WebSocketStompClient StompHeaders public public throws decl_stmt org.springframework.web.socket.messaging.WebSocketStompClient = new call org.springframework.web.socket.messaging.WebSocketStompClient.setTaskScheduler(TaskScheduler) call org.springframework.web.socket.messaging.WebSocketStompClient.setTaskScheduler(TaskScheduler) call org.springframework.web.socket.messaging.WebSocketStompClient.setTaskScheduler(TaskScheduler) call org.springframework.web.socket.messaging.WebSocketStompClient.setTaskScheduler(TaskScheduler) call org.springframework.web.socket.messaging.WebSocketStompClient.setTaskScheduler(TaskScheduler) new call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() call WebSocketStompClient.getDefaultHeartbeat() decl_stmt org.springframework.messaging.simp.stomp.StompHeaders = call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) new call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() call org.springframework.messaging.simp.stomp.StompHeaders.getHeartbeat() WebSocketStompClient public public throws decl_stmt org.springframework.web.socket.messaging.WebSocketStompClient = new call WebSocketStompClient.setDefaultHeartbeat() call WebSocketStompClient.setDefaultHeartbeat() call WebSocketStompClient.setDefaultHeartbeat() call WebSocketStompClient.setDefaultHeartbeat() call WebSocketStompClient.setDefaultHeartbeat() new try call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) call org.springframework.web.socket.messaging.WebSocketStompClient.processConnectHeaders(StompHeaders) catch decl TcpConnection long Runnable public public throws decl_stmt org.springframework.messaging.tcp.TcpConnection < = decl_stmt java.lang.Runnable = decl_stmt long = call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() decl TcpConnection long Runnable public public throws decl_stmt org.springframework.messaging.tcp.TcpConnection < = decl_stmt java.lang.Runnable = decl_stmt long = call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() decl TcpConnection long Runnable public public throws decl_stmt org.springframework.messaging.tcp.TcpConnection < = decl_stmt java.lang.Runnable = decl_stmt long = call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() decl TcpConnection long Runnable public public throws decl_stmt org.springframework.messaging.tcp.TcpConnection < = decl_stmt java.lang.Runnable = decl_stmt long = call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() decl TcpConnection ScheduledFuture public public throws decl_stmt org.springframework.messaging.tcp.TcpConnection < = decl_stmt ScheduledFuture = call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onReadInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() call decl TcpConnection.onWriteInactivity() WebSocketHandler private private decl_stmt org.springframework.web.socket.WebSocketHandler = return WebSocketHandler private < private < throws decl_stmt org.springframework.web.socket.WebSocketHandler = call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() return < decl ArgumentCaptor Runnable private private throws decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() / if > decl_stmt java.lang.Runnable = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() call Runnable.run() if > else public public = protected protected return