org.springframework.jmx.export javax.management.MBeanServer import javax.management.ObjectName import org.junit.Test import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.jmx.support.ObjectNameManager import static static org.junit.Assert.* import class org.springframework.jmx.export.LazyInitMBeanTests ObjectName ClassPathXmlApplicationContext String MBeanServer public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() call ClassPathXmlApplicationContext.getBeanFactory() try decl_stmt MBeanServer = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt ObjectName = decl_stmt java.lang.String = call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() call MBeanServer.getAttribute() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close()