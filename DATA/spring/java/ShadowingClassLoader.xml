org.springframework.instrument.classloading java.io.IOException import java.io.InputStream import java.lang.instrument.ClassFileTransformer import java.lang.instrument.IllegalClassFormatException import java.net.URL import java.util.Enumeration import java.util.HashMap import java.util.LinkedList import java.util.List import java.util.Map import org.springframework.core.DecoratingClassLoader import org.springframework.util.Assert import org.springframework.util.FileCopyUtils import org.springframework.util.StringUtils import class org.springframework.instrument.classloading.ShadowingClassLoader super super extends ClassLoader decl Map decl String decl List public public public public decl Class public < public < throws if decl_stmt java.lang.Class < = if != return return else return private private return ! && ! && protected protected return ! String String decl byte int InputStream decl Class private < private < throws decl_stmt java.lang.String = + decl_stmt java.io.InputStream = if == throw new try decl_stmt byte = = decl_stmt java.lang.Class < = if call decl Class.getPackage() call decl Class.getPackage() call decl Class.getPackage() call decl Class.getPackage() call decl Class.getPackage() == decl_stmt int = if != - decl_stmt java.lang.String = return catch throw new + + String decl byte private private decl_stmt java.lang.String = try for : decl_stmt byte = = != : return catch throw new public public return public public return public < public < throws return