org.springframework.remoting.httpinvoker java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import java.util.Locale import java.util.zip.GZIPInputStream import org.apache.http.Header import org.apache.http.HttpResponse import org.apache.http.NoHttpResponseException import org.apache.http.StatusLine import org.apache.http.client.HttpClient import org.apache.http.client.config.RequestConfig import org.apache.http.client.methods.Configurable import org.apache.http.client.methods.HttpPost import org.apache.http.config.Registry import org.apache.http.config.RegistryBuilder import org.apache.http.conn.socket.ConnectionSocketFactory import org.apache.http.conn.socket.PlainConnectionSocketFactory import org.apache.http.conn.ssl.SSLConnectionSocketFactory import org.apache.http.entity.ByteArrayEntity import org.apache.http.impl.client.HttpClientBuilder import org.apache.http.impl.conn.PoolingHttpClientConnectionManager import org.springframework.context.i18n.LocaleContext import org.springframework.context.i18n.LocaleContextHolder import org.springframework.remoting.support.RemoteInvocationResult import org.springframework.util.Assert import org.springframework.util.StringUtils import class org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor super super extends RequestConfig int int int HttpClient PoolingHttpClientConnectionManager decl Registry private static private static decl_stmt java.rmi.registry.Registry < = > decl_stmt PoolingHttpClientConnectionManager = new call PoolingHttpClientConnectionManager.setMaxTotal() call PoolingHttpClientConnectionManager.setMaxTotal() call PoolingHttpClientConnectionManager.setMaxTotal() call PoolingHttpClientConnectionManager.setMaxTotal() call PoolingHttpClientConnectionManager.setMaxTotal() call PoolingHttpClientConnectionManager.setDefaultMaxPerRoute() call PoolingHttpClientConnectionManager.setDefaultMaxPerRoute() call PoolingHttpClientConnectionManager.setDefaultMaxPerRoute() call PoolingHttpClientConnectionManager.setDefaultMaxPerRoute() call PoolingHttpClientConnectionManager.setDefaultMaxPerRoute() return public public = public public return public public >= = private private if public public = public public >= = private private if private private return != : InputStream HttpResponse HttpPost protected protected throws decl_stmt HttpPost = try decl_stmt HttpResponse = decl_stmt java.io.InputStream = return finally call HttpPost.releaseConnection() call HttpPost.releaseConnection() call HttpPost.releaseConnection() call HttpPost.releaseConnection() call HttpPost.releaseConnection() Locale LocaleContext RequestConfig HttpPost protected protected throws decl_stmt HttpPost = new decl_stmt RequestConfig = if != call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() call HttpPost.setConfig() decl_stmt org.springframework.context.i18n.LocaleContext = if != decl_stmt java.util.Locale = call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() if != call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() if call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() call HttpPost.addHeader() return RequestConfig HttpClient protected protected decl_stmt sun.net.www.http.HttpClient = if instanceof decl_stmt RequestConfig = return return int decl RequestConfig int decl Builder private private if == return decl_stmt org.springframework.web.servlet.mvc.method.Builder = decl_stmt int = if >= call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() call decl RequestConfig.setConnectTimeout() decl_stmt int = if >= call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() call decl RequestConfig.setConnectionRequestTimeout() decl_stmt int = if >= call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() call decl RequestConfig.setSocketTimeout() return call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() call decl RequestConfig.build() ByteArrayEntity protected protected throws decl_stmt ByteArrayEntity = new call ByteArrayEntity.setContentType() call ByteArrayEntity.setContentType() call ByteArrayEntity.setContentType() call ByteArrayEntity.setContentType() call ByteArrayEntity.setContentType() protected protected throws return call HttpClient.execute() call HttpClient.execute() call HttpClient.execute() call HttpClient.execute() call HttpClient.execute() StatusLine protected protected throws decl_stmt StatusLine = if call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() >= throw new + call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() call StatusLine.getStatusCode() + + call StatusLine.getReasonPhrase() call StatusLine.getReasonPhrase() call StatusLine.getReasonPhrase() call StatusLine.getReasonPhrase() call StatusLine.getReasonPhrase() + protected protected throws if return new else return Header protected protected decl_stmt Header = return != && call Header.getValue() call Header.getValue() call Header.getValue() call Header.getValue() call Header.getValue() != && call Header.getValue() call Header.getValue() call Header.getValue() call Header.getValue() call Header.getValue()