org.springframework.test.context.testng javax.annotation.Resource import org.testng.annotations.AfterClass import org.testng.annotations.AfterMethod import org.testng.annotations.BeforeClass import org.testng.annotations.BeforeMethod import org.testng.annotations.Test import org.springframework.beans.factory.BeanNameAware import org.springframework.beans.factory.InitializingBean import org.springframework.beans.factory.annotation.Autowired import org.springframework.test.context.ContextConfiguration import org.springframework.test.context.transaction.AfterTransaction import org.springframework.test.context.transaction.BeforeTransaction import org.springframework.tests.sample.beans.Employee import org.springframework.tests.sample.beans.Pet import org.springframework.transaction.annotation.Propagation import org.springframework.transaction.annotation.Transactional import static static org.springframework.test.transaction.TransactionTestUtils.* import static static org.testng.Assert.* import class annotation org.springframework.test.context.testng.ConcreteTransactionalTestNGSpringContextTests super super extends super implements String int String int Pet String int Employee boolean Long int String String String int int private private return private private return public public throws = public public = protected protected = protected protected = private private + + private private final final + + = = = = Employee = = decl_stmt org.springframework.tests.sample.beans.Employee = call Employee.getName() call Employee.getName() call Employee.getName() call Employee.getName() call Employee.getName() = = = = = = call org.springframework.tests.sample.beans.Pet.getName() call org.springframework.tests.sample.beans.Pet.getName() call org.springframework.tests.sample.beans.Pet.getName() call org.springframework.tests.sample.beans.Pet.getName() call org.springframework.tests.sample.beans.Pet.getName() = = call Employee.getName() call Employee.getName() call Employee.getName() call Employee.getName() call Employee.getName() = = = = throws ++ if ++ : throws ++ if ++ :