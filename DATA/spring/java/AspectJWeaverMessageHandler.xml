org.springframework.aop.aspectj org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.aspectj.bridge.AbortException import org.aspectj.bridge.IMessage import org.aspectj.bridge.IMessage.Kind import org.aspectj.bridge.IMessageHandler import class org.springframework.aop.aspectj.AspectJWeaverMessageHandler super super implements Log String Kind public public throws decl_stmt Kind = if == if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() return else if == || == if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() return else if == if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return else if == if call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.isErrorEnabled() call Log.error() call Log.error() call Log.error() call Log.error() call Log.error() return else if == if call Log.isFatalEnabled() call Log.isFatalEnabled() call Log.isFatalEnabled() call Log.isFatalEnabled() call Log.isFatalEnabled() call Log.fatal() call Log.fatal() call Log.fatal() call Log.fatal() call Log.fatal() return return private private return + public public return public public public public