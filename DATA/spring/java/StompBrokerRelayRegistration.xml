org.springframework.messaging.simp.config org.springframework.messaging.MessageChannel import org.springframework.messaging.SubscribableChannel import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler import org.springframework.util.Assert import class org.springframework.messaging.simp.config.StompBrokerRelayRegistration super super extends String String Long String int String String boolean String String String Long public public = return public public = return public public = return public public = return public public = return public public = return public public = return public public = return public public = return public public = return public public = return protected protected return public public = return protected protected return StompBrokerRelayMessageHandler protected protected decl_stmt org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler = new call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayPort(int) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayPort(int) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayPort(int) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayPort(int) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setRelayPort(int) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setClientPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemLogin(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemPasscode(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemPasscode(String) if != call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval(long) if != call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval(long) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval(long) if != call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setVirtualHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setVirtualHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setVirtualHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setVirtualHost(String) call org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.setVirtualHost(String) call StompBrokerRelayMessageHandler.setAutoStartup() call StompBrokerRelayMessageHandler.setAutoStartup() call StompBrokerRelayMessageHandler.setAutoStartup() call StompBrokerRelayMessageHandler.setAutoStartup() call StompBrokerRelayMessageHandler.setAutoStartup() return