org.springframework.http.client java.io.IOException import java.net.URI import org.apache.http.client.HttpClient import org.apache.http.client.config.RequestConfig import org.apache.http.client.methods.Configurable import org.apache.http.client.methods.HttpUriRequest import org.apache.http.client.protocol.HttpClientContext import org.apache.http.impl.client.CloseableHttpClient import org.apache.http.impl.nio.client.CloseableHttpAsyncClient import org.apache.http.impl.nio.client.HttpAsyncClients import org.apache.http.nio.client.HttpAsyncClient import org.apache.http.protocol.HttpContext import org.springframework.beans.factory.InitializingBean import org.springframework.http.HttpMethod import org.springframework.util.Assert import class org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory super super extends super implements CloseableHttpAsyncClient public public = public public return public public CloseableHttpAsyncClient private private decl_stmt CloseableHttpAsyncClient = if ! call CloseableHttpAsyncClient.isRunning() call CloseableHttpAsyncClient.isRunning() call CloseableHttpAsyncClient.isRunning() call CloseableHttpAsyncClient.isRunning() call CloseableHttpAsyncClient.isRunning() call CloseableHttpAsyncClient.start() call CloseableHttpAsyncClient.start() call CloseableHttpAsyncClient.start() call CloseableHttpAsyncClient.start() call CloseableHttpAsyncClient.start() HttpUriRequest HttpAsyncClient RequestConfig HttpContext public public throws decl_stmt HttpAsyncClient = decl_stmt HttpUriRequest = decl_stmt HttpContext = if == = if call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() call HttpContext.getAttribute() == decl_stmt RequestConfig = if instanceof = if == = if != call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() call HttpContext.setAttribute() return new public public throws try finally