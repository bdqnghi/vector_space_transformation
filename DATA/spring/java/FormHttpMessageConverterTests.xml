org.springframework.http.converter java.io.ByteArrayInputStream import java.io.IOException import java.io.InputStream import java.io.StringReader import java.nio.charset.Charset import java.util.List import javax.xml.transform.Source import javax.xml.transform.stream.StreamSource import org.apache.commons.fileupload.FileItem import org.apache.commons.fileupload.FileItemFactory import org.apache.commons.fileupload.FileUpload import org.apache.commons.fileupload.RequestContext import org.apache.commons.fileupload.disk.DiskFileItemFactory import org.junit.Before import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.http.HttpEntity import org.springframework.http.HttpHeaders import org.springframework.http.MediaType import org.springframework.http.MockHttpInputMessage import org.springframework.http.MockHttpOutputMessage import org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertNull import static static org.junit.Assert.assertThat import static static org.junit.Assert.assertTrue import static static org.mockito.BDDMockito.never import static static org.mockito.BDDMockito.verify import class org.springframework.http.converter.FormHttpMessageConverterTests Charset FormHttpMessageConverter public public = new public public new new public public new new new String Charset decl List MockHttpInputMessage decl MultiValueMap public public throws decl_stmt java.lang.String = decl_stmt java.nio.charset.Charset = decl_stmt org.springframework.http.MockHttpInputMessage = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() new decl_stmt org.springframework.util.MultiValueMap < = call decl MultiValueMap.size() call decl MultiValueMap.size() call decl MultiValueMap.size() call decl MultiValueMap.size() call decl MultiValueMap.size() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() decl_stmt java.util.List < = call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl MultiValueMap.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() decl MultiValueMap MockHttpOutputMessage public public throws decl_stmt org.springframework.util.MultiValueMap < = new < call decl MultiValueMap.set() call decl MultiValueMap.set() call decl MultiValueMap.set() call decl MultiValueMap.set() call decl MultiValueMap.set() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.http.MockHttpOutputMessage = new call org.springframework.http.MockHttpOutputMessage.getBodyAsString(Charset) call org.springframework.http.MockHttpOutputMessage.getBodyAsString(Charset) call org.springframework.http.MockHttpOutputMessage.getBodyAsString(Charset) call org.springframework.http.MockHttpOutputMessage.getBodyAsString(Charset) call org.springframework.http.MockHttpOutputMessage.getBodyAsString(Charset) new call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() Source FileItemFactory FileUpload MediaType RequestContext Resource decl HttpEntity FileItem decl MultiValueMap HttpHeaders MockHttpOutputMessage Resource decl List public public throws decl_stmt org.springframework.util.MultiValueMap < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.core.io.Resource = new call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.core.io.Resource = new public public return call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt Source = new new decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) decl_stmt org.springframework.http.HttpEntity < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.http.MockHttpOutputMessage = new new decl_stmt org.springframework.http.MediaType final final = call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() decl_stmt FileItemFactory = new decl_stmt FileUpload = new decl_stmt org.springframework.web.servlet.support.RequestContext = new decl_stmt java.util.List < = call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt FileItem = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getName() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() call FileItem.getSize() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call FileItem.getContentType() call org.springframework.http.MockHttpOutputMessage.getBody() call org.springframework.http.MockHttpOutputMessage.getBody() call org.springframework.http.MockHttpOutputMessage.getBody() call org.springframework.http.MockHttpOutputMessage.getBody() call org.springframework.http.MockHttpOutputMessage.getBody() public public return FileItemFactory FileUpload MediaType RequestContext MockHttpOutputMessage decl HttpEntity FileItem decl MultiValueMap HttpHeaders decl List MyBean public public throws decl_stmt org.springframework.context.annotation.MyBean = new call MyBean.setString() call MyBean.setString() call MyBean.setString() call MyBean.setString() call MyBean.setString() decl_stmt org.springframework.util.MultiValueMap < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) decl_stmt org.springframework.http.HttpEntity < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() decl_stmt org.springframework.http.MockHttpOutputMessage = new new decl_stmt org.springframework.http.MediaType final final = call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call org.springframework.http.MockHttpOutputMessage.getHeaders() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() call MediaType.getParameter() decl_stmt FileItemFactory = new decl_stmt FileUpload = new decl_stmt org.springframework.web.servlet.support.RequestContext = new decl_stmt java.util.List < = call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call FileUpload.parseRequest() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl_stmt FileItem = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() = call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.isFormField() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getFieldName() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() call FileItem.getString() MediaType public public decl_stmt org.springframework.http.MediaType = return != && call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() != call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() call MediaType.getCharset() : MediaType public public decl_stmt org.springframework.http.MediaType = return != call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) call org.springframework.http.MediaType.toString(Collection) : public public return public public throws return new public public return public public =