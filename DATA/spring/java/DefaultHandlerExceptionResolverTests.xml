org.springframework.web.servlet.mvc.support java.lang.reflect.Method import java.util.Collections import org.junit.Before import org.junit.Test import org.springframework.beans.ConversionNotSupportedException import org.springframework.beans.TypeMismatchException import org.springframework.core.MethodParameter import org.springframework.http.MediaType import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.HttpMessageNotWritableException import org.springframework.http.server.ServletServerHttpRequest import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.tests.sample.beans.TestBean import org.springframework.validation.BeanPropertyBindingResult import org.springframework.validation.BindException import org.springframework.web.HttpMediaTypeNotSupportedException import org.springframework.web.HttpRequestMethodNotSupportedException import org.springframework.web.bind.MethodArgumentNotValidException import org.springframework.web.bind.MissingPathVariableException import org.springframework.web.bind.MissingServletRequestParameterException import org.springframework.web.bind.ServletRequestBindingException import org.springframework.web.multipart.support.MissingServletRequestPartException import org.springframework.web.servlet.ModelAndView import org.springframework.web.servlet.NoHandlerFoundException import org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolverTests MockHttpServletRequest DefaultHandlerExceptionResolver MockHttpServletResponse public public = new = new = new call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) NoSuchRequestHandlingMethodException ModelAndView public public decl_stmt org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() HttpRequestMethodNotSupportedException ModelAndView public public decl_stmt org.springframework.web.HttpRequestMethodNotSupportedException = new new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) HttpMediaTypeNotSupportedException ModelAndView public public decl_stmt org.springframework.web.HttpMediaTypeNotSupportedException = new new new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) ModelAndView MethodParameter Method MissingPathVariableException public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new decl_stmt org.springframework.web.bind.MissingPathVariableException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() MissingServletRequestParameterException ModelAndView public public decl_stmt org.springframework.web.bind.MissingServletRequestParameterException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() String ServletRequestBindingException ModelAndView public public decl_stmt java.lang.String = decl_stmt ServletRequestBindingException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() TypeMismatchException ModelAndView public public decl_stmt org.springframework.beans.TypeMismatchException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() HttpMessageNotReadableException ModelAndView public public decl_stmt HttpMessageNotReadableException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() HttpMessageNotWritableException ModelAndView public public decl_stmt HttpMessageNotWritableException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() BeanPropertyBindingResult MethodParameter MethodArgumentNotValidException ModelAndView public public throws decl_stmt org.springframework.validation.BeanPropertyBindingResult = new new call BeanPropertyBindingResult.rejectValue() call BeanPropertyBindingResult.rejectValue() call BeanPropertyBindingResult.rejectValue() call BeanPropertyBindingResult.rejectValue() call BeanPropertyBindingResult.rejectValue() decl_stmt org.springframework.core.MethodParameter = new decl_stmt org.springframework.web.bind.MethodArgumentNotValidException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() MissingServletRequestPartException ModelAndView public public throws decl_stmt org.springframework.web.multipart.support.MissingServletRequestPartException = new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() call org.springframework.mock.web.MockHttpServletResponse.getErrorMessage() BindException ModelAndView public public throws decl_stmt org.springframework.validation.BindException = new new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() ServletServerHttpRequest NoHandlerFoundException ModelAndView public public throws decl_stmt org.springframework.http.server.ServletServerHttpRequest = new new decl_stmt org.springframework.web.servlet.NoHandlerFoundException = new call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getMethod() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getServletRequest() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() call org.springframework.http.server.ServletServerHttpRequest.getHeaders() decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() ConversionNotSupportedException ModelAndView public public throws decl_stmt ConversionNotSupportedException = new new new decl_stmt org.springframework.web.portlet.ModelAndView = call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call DefaultHandlerExceptionResolver.resolveException() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.web.portlet.ModelAndView.isEmpty() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) public public