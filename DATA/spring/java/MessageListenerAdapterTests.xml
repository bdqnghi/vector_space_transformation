org.springframework.jms.listener.adapter java.io.ByteArrayInputStream import java.io.Serializable import javax.jms.BytesMessage import javax.jms.IllegalStateException import javax.jms.InvalidDestinationException import javax.jms.JMSException import javax.jms.Message import javax.jms.MessageProducer import javax.jms.ObjectMessage import javax.jms.Queue import javax.jms.QueueSender import javax.jms.QueueSession import javax.jms.Session import javax.jms.TextMessage import org.junit.Test import org.mockito.invocation.InvocationOnMock import org.mockito.stubbing.Answer import org.springframework.jms.support.converter.MessageConversionException import org.springframework.jms.support.converter.SimpleMessageConverter import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jms.listener.adapter.MessageListenerAdapterTests String String String SerializableObject Integer TextMessage MessageListenerAdapter MessageContentsDelegate public public throws decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() decl_stmt org.springframework.jms.listener.adapter.MessageContentsDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) MessageListenerAdapter BytesMessage decl byte MessageContentsDelegate ByteArrayInputStream public public throws decl_stmt BytesMessage = call BytesMessage.getBodyLength() call BytesMessage.getBodyLength() call BytesMessage.getBodyLength() call BytesMessage.getBodyLength() call BytesMessage.getBodyLength() new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call BytesMessage.readBytes() call BytesMessage.readBytes() call BytesMessage.readBytes() call BytesMessage.readBytes() call BytesMessage.readBytes() new < public public throws decl_stmt byte = decl_stmt ByteArrayInputStream = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) return call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() decl_stmt org.springframework.jms.listener.adapter.MessageContentsDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl byte ByteArrayInputStream public public throws decl_stmt byte = decl_stmt ByteArrayInputStream = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) return call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() call ByteArrayInputStream.read() MessageListenerAdapter MessageContentsDelegate ObjectMessage public public throws decl_stmt ObjectMessage = call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() decl_stmt org.springframework.jms.listener.adapter.MessageContentsDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) MessageListenerAdapter MessageContentsDelegate ObjectMessage public public throws decl_stmt ObjectMessage = call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() call ObjectMessage.getObject() decl_stmt org.springframework.jms.listener.adapter.MessageContentsDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) TextMessage MessageListenerAdapter MessageDelegate public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.jms.listener.adapter.MessageDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) TextMessage StubMessageListenerAdapter public public throws decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() decl_stmt org.springframework.jms.listener.adapter.StubMessageListenerAdapter = new call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() TextMessage StubMessageListenerAdapter public public throws decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() decl_stmt org.springframework.jms.listener.adapter.StubMessageListenerAdapter = new call StubMessageListenerAdapter.setDefaultListenerMethod() call StubMessageListenerAdapter.setDefaultListenerMethod() call StubMessageListenerAdapter.setDefaultListenerMethod() call StubMessageListenerAdapter.setDefaultListenerMethod() call StubMessageListenerAdapter.setDefaultListenerMethod() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.onMessage() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() call StubMessageListenerAdapter.wasCalled() IllegalArgumentException MessageListenerAdapter ListenerExecutionFailedException MessageDelegate TextMessage Throwable public public throws decl_stmt IllegalArgumentException final final = new decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.jms.listener.adapter.MessageDelegate = decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new protected protected instanceof decl_stmt ListenerExecutionFailedException = decl_stmt java.lang.Throwable = call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) ListenerExecutionFailedException Throwable protected protected instanceof decl_stmt ListenerExecutionFailedException = decl_stmt java.lang.Throwable = call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() call ListenerExecutionFailedException.getCause() MessageListenerAdapter public public throws decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() call MessageListenerAdapter.getMessageConverter() instanceof MessageListenerAdapter public public throws decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDelegate() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDelegate() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDelegate() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDelegate() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDelegate() MessageListenerAdapter public public throws decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDefaultListenerMethod() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDefaultListenerMethod() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDefaultListenerMethod() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDefaultListenerMethod() call org.springframework.jms.listener.adapter.MessageListenerAdapter.getDefaultListenerMethod() TextMessage MessageListenerAdapter ResponsiveMessageDelegate public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) Queue MessageListenerAdapter TextMessage Session ResponsiveMessageDelegate TextMessage QueueSender public public throws decl_stmt java.util.Queue = decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() decl_stmt org.springframework.web.socket.TextMessage = decl_stmt QueueSender = decl_stmt sun.security.pkcs11.Session = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new protected protected return call MessageListenerAdapter.setDefaultResponseDestination() call MessageListenerAdapter.setDefaultResponseDestination() call MessageListenerAdapter.setDefaultResponseDestination() call MessageListenerAdapter.setDefaultResponseDestination() call MessageListenerAdapter.setDefaultResponseDestination() call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) protected protected return Queue MessageListenerAdapter TextMessage Session MessageProducer ResponsiveMessageDelegate TextMessage public public throws decl_stmt java.util.Queue = decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSMessageID() call TextMessage.getJMSMessageID() call TextMessage.getJMSMessageID() call TextMessage.getJMSMessageID() call TextMessage.getJMSMessageID() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() decl_stmt org.springframework.web.socket.TextMessage = decl_stmt MessageProducer = decl_stmt sun.security.pkcs11.Session = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter = new protected protected return call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) protected protected return QueueSession MessageListenerAdapter TextMessage ResponsiveMessageDelegate TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage final final = call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() decl_stmt org.springframework.web.socket.TextMessage = decl_stmt QueueSession final final = call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected return try call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) catch protected protected return Queue MessageListenerAdapter TextMessage QueueSession MessageProducer ResponsiveMessageDelegate TextMessage public public throws decl_stmt java.util.Queue = decl_stmt org.springframework.web.socket.TextMessage final final = call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() decl_stmt org.springframework.web.socket.TextMessage = decl_stmt MessageProducer = new decl_stmt QueueSession final final = call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createTextMessage() call QueueSession.createProducer() call QueueSession.createProducer() call QueueSession.createProducer() call QueueSession.createProducer() call QueueSession.createProducer() decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected return try call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) catch protected protected return MessageListenerAdapter TextMessage QueueSession ResponsiveMessageDelegate public public throws decl_stmt org.springframework.web.socket.TextMessage final final = decl_stmt QueueSession final final = decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = new decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected return try call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) catch protected protected return TextMessage MessageListenerAdapter public public throws decl_stmt org.springframework.web.socket.TextMessage final final = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected instanceof call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) protected protected instanceof TextMessage MessageListenerAdapter public public throws decl_stmt org.springframework.web.socket.TextMessage final final = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected instanceof protected protected return call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.setDefaultListenerMethod(String) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) protected protected instanceof protected protected return Session MessageListenerAdapter TextMessage ResponsiveMessageDelegate public public throws decl_stmt org.springframework.web.socket.TextMessage final final = decl_stmt sun.security.pkcs11.Session final final = decl_stmt org.springframework.jms.listener.adapter.ResponsiveMessageDelegate = call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) call org.springframework.jms.listener.adapter.ResponsiveMessageDelegate.handleMessage(MapMessage) decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected return call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() try call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) catch protected protected return Queue MessageListenerAdapter TextMessage Session ResponsiveJmsTextMessageReturningMessageDelegate QueueSender TextMessage public public throws decl_stmt java.util.Queue = decl_stmt org.springframework.web.socket.TextMessage final final = call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSCorrelationID() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() call TextMessage.getJMSReplyTo() decl_stmt org.springframework.web.socket.TextMessage = decl_stmt QueueSender = decl_stmt sun.security.pkcs11.Session = call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.ResponsiveJmsTextMessageReturningMessageDelegate = call ResponsiveJmsTextMessageReturningMessageDelegate.handleMessage() call ResponsiveJmsTextMessageReturningMessageDelegate.handleMessage() call ResponsiveJmsTextMessageReturningMessageDelegate.handleMessage() call ResponsiveJmsTextMessageReturningMessageDelegate.handleMessage() call ResponsiveJmsTextMessageReturningMessageDelegate.handleMessage() decl_stmt org.springframework.jms.listener.adapter.MessageListenerAdapter final final = new protected protected return call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call MessageListenerAdapter.setMessageConverter() call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) call org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(Message,Session) protected protected return