org.springframework.http.client java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import java.io.OutputStream import java.net.URI import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import org.junit.Before import org.junit.Test import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.http.HttpRequest import org.springframework.http.HttpStatus import org.springframework.http.client.support.HttpRequestWrapper import static static org.junit.Assert.* import class org.springframework.http.client.InterceptingClientHttpRequestFactoryTests ResponseMock InterceptingClientHttpRequestFactory RequestMock RequestFactoryMock public public throws = new = new = new ClientHttpRequest decl List ClientHttpResponse public public throws decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ClientHttpRequest decl List ClientHttpResponse public public throws decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new public public throws return call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new decl_stmt org.springframework.http.client.ClientHttpResponse = call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() public public throws return String HttpHeaders ClientHttpRequestInterceptor ClientHttpRequest String public public throws decl_stmt java.lang.String final final = decl_stmt java.lang.String final final = decl_stmt org.springframework.http.client.ClientHttpRequestInterceptor = new public public throws return new public public decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) return = new public public throws return = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() HttpHeaders public public throws return new public public decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) return HttpHeaders public public decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) call org.springframework.http.HttpHeaders.set(String,String) return public public throws return URI ClientHttpRequestInterceptor ClientHttpRequest public public throws decl_stmt java.net.URI final final = new decl_stmt org.springframework.http.client.ClientHttpRequestInterceptor = new public public throws return new public public return = new public public throws return = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() public public throws return new public public return public public return public public throws return HttpMethod ClientHttpRequest ClientHttpRequestInterceptor public public throws decl_stmt HttpMethod final final = decl_stmt org.springframework.http.client.ClientHttpRequestInterceptor = new public public throws return new public public return = new public public throws return = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() public public throws return new public public return public public return public public throws return ClientHttpRequestInterceptor decl byte ClientHttpRequest public public throws decl_stmt byte final final final = decl_stmt org.springframework.http.client.ClientHttpRequestInterceptor = new public public throws return = new decl_stmt org.springframework.http.client.ClientHttpRequest = call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() call InterceptingClientHttpRequestFactory.createRequest() new call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call ClientHttpRequest.execute() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() call RequestMock.body() public public throws return public public throws = return public public throws call RequestMock.setURI() call RequestMock.setURI() call RequestMock.setURI() call RequestMock.setURI() call RequestMock.setURI() call RequestMock.setMethod() call RequestMock.setMethod() call RequestMock.setMethod() call RequestMock.setMethod() call RequestMock.setMethod() return public public return public public = public public return public public = public public return public public throws return public public throws = return public public throws return public public throws return public public throws return public public return public public throws return public public