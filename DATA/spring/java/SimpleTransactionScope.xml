org.springframework.transaction.support java.util.HashMap import java.util.LinkedHashMap import java.util.Map import org.springframework.beans.factory.ObjectFactory import org.springframework.beans.factory.config.Scope import class org.springframework.transaction.support.SimpleTransactionScope super super implements ScopedObjectsHolder Object public public < decl_stmt ScopedObjectsHolder = if == = new new decl_stmt java.lang.Object = call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() if == = call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() return ScopedObjectsHolder public public decl_stmt ScopedObjectsHolder = if != call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() return call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() call ScopedObjectsHolder.scopedInstances() else return ScopedObjectsHolder public public decl_stmt ScopedObjectsHolder = if != call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() call ScopedObjectsHolder.destructionCallbacks() public public return public public return public public public public public public for :