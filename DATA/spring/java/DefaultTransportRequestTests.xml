org.springframework.web.socket.sockjs.client java.io.IOException import java.net.URI import java.util.Date import java.util.concurrent.ExecutionException import org.junit.Before import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.mockito.ArgumentCaptor import org.springframework.http.HttpHeaders import org.springframework.scheduling.TaskScheduler import org.springframework.util.concurrent.ListenableFutureCallback import org.springframework.util.concurrent.SettableListenableFuture import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec import org.springframework.web.socket.sockjs.transport.TransportType import static static org.junit.Assert.* import static static org.mockito.Mockito.* import class org.springframework.web.socket.sockjs.client.DefaultTransportRequestTests ExpectedException TestTransport decl SettableListenableFuture Jackson2SockJsMessageCodec decl ListenableFutureCallback TestTransport public public throws = = new <> = new = new WebSocketSession DefaultTransportRequest public public throws decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) decl_stmt org.springframework.web.socket.WebSocketSession = DefaultTransportRequest DefaultTransportRequest public public throws decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) new new DefaultTransportRequest decl ArgumentCaptor DefaultTransportRequest Runnable TaskScheduler public public throws decl_stmt org.springframework.scheduling.TaskScheduler = decl_stmt java.lang.Runnable = decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = decl_stmt org.springframework.web.socket.sockjs.client.DefaultTransportRequest = call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setFallbackRequest(DefaultTransportRequest) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.setTimeoutScheduler(TaskScheduler) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.addTimeoutTask(Runnable) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.addTimeoutTask(Runnable) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.addTimeoutTask(Runnable) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.addTimeoutTask(Runnable) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.addTimeoutTask(Runnable) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) call org.springframework.web.socket.sockjs.client.DefaultTransportRequest.connect(WebSocketHandler,SettableListenableFuture) decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() SockJsUrlInfo protected protected throws decl_stmt org.springframework.web.socket.sockjs.client.SockJsUrlInfo = new new return new new new