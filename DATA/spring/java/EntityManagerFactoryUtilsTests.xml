org.springframework.orm.jpa javax.persistence.EntityExistsException import javax.persistence.EntityManager import javax.persistence.EntityManagerFactory import javax.persistence.EntityNotFoundException import javax.persistence.NoResultException import javax.persistence.NonUniqueResultException import javax.persistence.OptimisticLockException import javax.persistence.PersistenceException import javax.persistence.TransactionRequiredException import org.junit.Test import org.springframework.dao.DataAccessException import org.springframework.dao.DataIntegrityViolationException import org.springframework.dao.EmptyResultDataAccessException import org.springframework.dao.IncorrectResultSizeDataAccessException import org.springframework.dao.InvalidDataAccessApiUsageException import org.springframework.transaction.support.TransactionSynchronizationManager import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.orm.jpa.EntityManagerFactoryUtilsTests EntityManagerFactory public public try catch decl_stmt EntityManagerFactory = EntityManager EntityManagerFactory public public throws try decl_stmt EntityManagerFactory = decl_stmt EntityManager = call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() call EntityManagerFactory.createEntityManager() finally DataAccessException IllegalStateException public public decl_stmt IllegalStateException = new decl_stmt DataAccessException = call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() instanceof IllegalArgumentException DataAccessException public public decl_stmt IllegalArgumentException = new decl_stmt DataAccessException = call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() call DataAccessException.getCause() instanceof UnsupportedOperationException public public decl_stmt UnsupportedOperationException = new OptimisticLockException TransactionRequiredException PersistenceException EntityExistsException NoResultException NonUniqueResultException EntityNotFoundException public public decl_stmt EntityNotFoundException = new decl_stmt NoResultException = new decl_stmt NonUniqueResultException = new decl_stmt OptimisticLockException = new decl_stmt EntityExistsException = new decl_stmt TransactionRequiredException = new decl_stmt PersistenceException = new