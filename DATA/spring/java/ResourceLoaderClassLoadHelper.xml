org.springframework.scheduling.quartz java.io.IOException import java.io.InputStream import java.net.URL import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.quartz.spi.ClassLoadHelper import org.springframework.core.io.DefaultResourceLoader import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import class org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper super super implements Log ResourceLoader public public if == = if == = new public < public < throws return public < < extends extends public < < extends extends < throws return < extends extends Resource public public decl_stmt org.springframework.core.io.Resource = if call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() try return call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() call Resource.getURL() catch if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + return else return Resource public public decl_stmt org.springframework.core.io.Resource = if call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() call org.springframework.core.io.Resource.exists() try return call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() catch if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + return else return public public return