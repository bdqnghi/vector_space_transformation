org.springframework.scheduling.annotation java.util.Collection import java.util.concurrent.Executor import org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler import org.springframework.beans.factory.annotation.Autowired import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.ImportAware import org.springframework.core.annotation.AnnotationAttributes import org.springframework.core.type.AnnotationMetadata import org.springframework.util.CollectionUtils import class annotation org.springframework.scheduling.annotation.AbstractAsyncConfiguration super super implements AnnotationAttributes AsyncUncaughtExceptionHandler Executor public public = if == throw new + AsyncConfigurer = = < if return if > throw new decl_stmt org.springframework.scheduling.annotation.AsyncConfigurer = = call AsyncConfigurer.getAsyncExecutor() call AsyncConfigurer.getAsyncExecutor() call AsyncConfigurer.getAsyncExecutor() call AsyncConfigurer.getAsyncExecutor() call AsyncConfigurer.getAsyncExecutor() = call org.springframework.scheduling.annotation.AsyncConfigurer.getAsyncUncaughtExceptionHandler() call org.springframework.scheduling.annotation.AsyncConfigurer.getAsyncUncaughtExceptionHandler() call org.springframework.scheduling.annotation.AsyncConfigurer.getAsyncUncaughtExceptionHandler() call org.springframework.scheduling.annotation.AsyncConfigurer.getAsyncUncaughtExceptionHandler() call org.springframework.scheduling.annotation.AsyncConfigurer.getAsyncUncaughtExceptionHandler()