org.springframework.jms.connection java.lang.reflect.Method import java.util.HashMap import java.util.LinkedList import java.util.List import java.util.Map import javax.jms.Connection import javax.jms.ConnectionFactory import javax.jms.JMSException import javax.jms.Session import javax.jms.TransactionInProgressException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.transaction.support.ResourceHolderSupport import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.Assert import org.springframework.util.CollectionUtils import org.springframework.util.ReflectionUtils import class org.springframework.jms.connection.JmsResourceHolder super super extends ConnectionFactory decl List boolean decl List decl Map Log public final public final return public final public final ! if ! public final public final decl List public final public final ! if ! if != decl_stmt java.util.List < = if == = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() public public return public public return ! : public public < extends extends return public public return ! : public public < extends extends return decl List public public < extends extends decl_stmt java.util.List < = if != = return Method Object Method public public throws for : try catch catch if != try decl_stmt com.sun.jdi.Method = decl_stmt java.lang.Object = while != if return try decl_stmt com.sun.jdi.Method = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() = catch = catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + throw public public for : try catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() for :