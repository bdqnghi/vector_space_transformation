org.springframework.messaging java.io.IOException import java.io.ObjectInputStream import java.io.ObjectOutputStream import java.io.Serializable import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.Set import java.util.UUID import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.util.AlternativeJdkIdGenerator import org.springframework.util.IdGenerator import class org.springframework.messaging.MessageHeaders super super implements String String decl Map UUID IdGenerator String Log String String long IdGenerator protected < protected < return protected static protected static return != : public public return public public return public public return public public return Object public < public < < decl_stmt java.lang.Object = if == return if ! call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() throw new + + + + + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() + return public public return public public return public < < public < < return public public return public public return public < public < return public public return public < public < return public public throw new public public < extends extends extends extends throw new public public throw new public public throw new decl Set private private throws decl_stmt java.util.Set < = new < for < : if ! instanceof call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() if call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + new private private throws public public return == || instanceof && public public return public public return