org.springframework.http.client java.io.IOException import java.net.URI import java.util.List import java.util.Map import org.apache.http.HttpEntity import org.apache.http.HttpEntityEnclosingRequest import org.apache.http.HttpResponse import org.apache.http.client.HttpClient import org.apache.http.client.methods.HttpUriRequest import org.apache.http.entity.ByteArrayEntity import org.apache.http.protocol.HTTP import org.apache.http.protocol.HttpContext import org.springframework.http.HttpHeaders import org.springframework.http.HttpMethod import org.springframework.util.StringUtils import class org.springframework.http.client.HttpComponentsClientHttpRequest super super extends HttpUriRequest HttpContext HttpClient public public return public public return return HttpResponse HttpEntityEnclosingRequest HttpEntity protected protected throws if instanceof decl_stmt HttpEntityEnclosingRequest = decl_stmt org.springframework.http.HttpEntity = new call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() call HttpEntityEnclosingRequest.setEntity() decl_stmt HttpResponse = return new String String static static for < < : decl_stmt java.lang.String = if decl_stmt java.lang.String = call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() else if ! && ! for : call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader() call HttpUriRequest.addHeader()