org.springframework.util.xml java.io.ByteArrayInputStream import java.io.InputStream import javax.xml.stream.XMLInputFactory import javax.xml.stream.XMLStreamException import javax.xml.transform.Transformer import javax.xml.transform.TransformerFactory import javax.xml.transform.dom.DOMResult import javax.xml.transform.sax.SAXSource import org.junit.Before import org.junit.Test import org.mockito.invocation.InvocationOnMock import org.mockito.stubbing.Answer import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.tests.MockitoUtils import org.springframework.tests.MockitoUtils.InvocationArgumentsAdapter import org.w3c.dom.Node import org.xml.sax.Attributes import org.xml.sax.ContentHandler import org.xml.sax.InputSource import org.xml.sax.Locator import org.xml.sax.XMLReader import org.xml.sax.ext.LexicalHandler import org.xml.sax.helpers.AttributesImpl import org.xml.sax.helpers.XMLReaderFactory import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.util.xml.AbstractStaxXMLReaderTestCase ContentHandler XMLInputFactory XMLReader public public throws = = = call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() AbstractStaxXMLReader ContentHandler public public throws call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() new decl_stmt org.springframework.util.xml.AbstractStaxXMLReader = decl_stmt java.net.ContentHandler = call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) new AbstractStaxXMLReader ContentHandler public public throws call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() new decl_stmt org.springframework.util.xml.AbstractStaxXMLReader = decl_stmt java.net.ContentHandler = call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) new AbstractStaxXMLReader ContentHandler public public throws call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.setFeature() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() new decl_stmt org.springframework.util.xml.AbstractStaxXMLReader = decl_stmt java.net.ContentHandler = call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call org.springframework.util.xml.AbstractStaxXMLReader.setFeature(String,boolean) call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call AbstractStaxXMLReader.setContentHandler() call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) new String Transformer AbstractStaxXMLReader SAXSource DOMResult Node public public throws decl_stmt java.lang.String = decl_stmt Transformer = decl_stmt org.springframework.util.xml.AbstractStaxXMLReader = new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt SAXSource = new new decl_stmt DOMResult = new call Transformer.transform() call Transformer.transform() call Transformer.transform() call Transformer.transform() call Transformer.transform() decl_stmt sun.tools.tree.Node = call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call DOMResult.getNode() call Node.getTextContent() call Node.getTextContent() call Node.getTextContent() call Node.getTextContent() call Node.getTextContent() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() call Node.getNextSibling() AbstractStaxXMLReader Resource LexicalHandler LexicalHandler public public throws decl_stmt org.springframework.core.io.Resource = new decl_stmt LexicalHandler = call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setContentHandler() call XMLReader.setProperty() call XMLReader.setProperty() call XMLReader.setProperty() call XMLReader.setProperty() call XMLReader.setProperty() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() call XMLReader.parse() new call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() call XMLInputFactory.setProperty() decl_stmt LexicalHandler = new < public public throws return = decl_stmt org.springframework.util.xml.AbstractStaxXMLReader = call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call AbstractStaxXMLReader.setProperty() call AbstractStaxXMLReader.setProperty() call AbstractStaxXMLReader.setProperty() call AbstractStaxXMLReader.setProperty() call AbstractStaxXMLReader.setProperty() call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) call org.springframework.util.xml.AbstractStaxXMLReader.parse(String) new public public throws return = LexicalHandler private private throws decl_stmt LexicalHandler = new return private private return ContentHandler protected final protected final throws decl_stmt java.net.ContentHandler = new new new < public public throws = new return return public public throws = new return protected < protected < new new new public public for = < ++ if instanceof = return public public if == && instanceof && instanceof && instanceof return new new return public public for = < ++ if instanceof = new return decl char decl char public public throws decl_stmt char = decl_stmt char = new = return public public return boolean Attributes public public decl_stmt java.util.jar.Attributes = if != call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() return for = < call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() call Attributes.getLength() ++ decl_stmt boolean = for = < ++ if call Attributes.getURI() call Attributes.getURI() call Attributes.getURI() call Attributes.getURI() call Attributes.getURI() && call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() call Attributes.getQName() && call Attributes.getType() call Attributes.getType() call Attributes.getType() call Attributes.getType() call Attributes.getType() && call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) call java.util.jar.Attributes.getValue(Name) = break if ! return return