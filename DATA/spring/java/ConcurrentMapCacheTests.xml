org.springframework.cache.concurrent java.util.ArrayList import java.util.Arrays import java.util.List import java.util.concurrent.ConcurrentHashMap import java.util.concurrent.ConcurrentMap import org.junit.Before import org.junit.Test import org.springframework.cache.AbstractCacheTests import org.springframework.core.serializer.support.SerializationDelegate import static static org.junit.Assert.* import class org.springframework.cache.concurrent.ConcurrentMapCacheTests super super extends ConcurrentMapCache decl ConcurrentMap public public throws = new < = new call org.springframework.cache.concurrent.ConcurrentMapCache.clear() call org.springframework.cache.concurrent.ConcurrentMapCache.clear() call org.springframework.cache.concurrent.ConcurrentMapCache.clear() call org.springframework.cache.concurrent.ConcurrentMapCache.clear() call org.springframework.cache.concurrent.ConcurrentMapCache.clear() protected protected return protected < protected < return public public decl List decl List ConcurrentMapCache Object public public decl_stmt org.springframework.cache.concurrent.ConcurrentMapCache = call org.springframework.cache.concurrent.ConcurrentMapCache.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCache.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCache.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCache.isStoreByValue() call org.springframework.cache.concurrent.ConcurrentMapCache.isStoreByValue() decl_stmt java.lang.Object = decl_stmt java.util.List < = new <> call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() call decl List.remove() decl_stmt java.util.List < = < call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() ConcurrentMapCache public public decl_stmt org.springframework.cache.concurrent.ConcurrentMapCache = call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) call org.springframework.cache.concurrent.ConcurrentMapCache.put(Object,Object) ConcurrentMapCache String public public decl_stmt org.springframework.cache.concurrent.ConcurrentMapCache = decl_stmt java.lang.String = call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() call ConcurrentMapCache.get() private private return new new