org.springframework.web.method.annotation java.beans.PropertyEditor import java.util.Collection import java.util.List import java.util.Map import javax.servlet.http.HttpServletRequest import org.springframework.beans.BeanUtils import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.core.MethodParameter import org.springframework.core.convert.ConversionService import org.springframework.core.convert.TypeDescriptor import org.springframework.core.convert.converter.Converter import org.springframework.util.StringUtils import org.springframework.web.bind.MissingServletRequestParameterException import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.RequestParam import org.springframework.web.bind.annotation.RequestPart import org.springframework.web.bind.annotation.ValueConstants import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.method.support.UriComponentsContributor import org.springframework.web.multipart.MultipartException import org.springframework.web.multipart.MultipartFile import org.springframework.web.multipart.MultipartHttpServletRequest import org.springframework.web.multipart.MultipartResolver import org.springframework.web.multipart.support.MissingServletRequestPartException import org.springframework.web.multipart.support.MultipartResolutionDelegate import org.springframework.web.util.UriComponentsBuilder import org.springframework.web.util.WebUtils import class org.springframework.web.method.annotation.RequestParamMethodArgumentResolver super super extends super implements TypeDescriptor boolean String public public if if decl_stmt java.lang.String = return else return else if return = if return else if return else return RequestParam protected protected decl_stmt RequestParam = return != new : new decl List decl String Object Object HttpServletRequest MultipartHttpServletRequest protected protected throws decl_stmt HttpServletRequest = decl_stmt org.springframework.web.multipart.MultipartHttpServletRequest = decl_stmt java.lang.Object = if != return decl_stmt java.lang.Object = if != decl_stmt java.util.List < = call MultipartHttpServletRequest.getFiles() call MultipartHttpServletRequest.getFiles() call MultipartHttpServletRequest.getFiles() call MultipartHttpServletRequest.getFiles() call MultipartHttpServletRequest.getFiles() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() == call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : if == decl_stmt java.lang.String = if != = == : return HttpServletRequest protected protected throws decl_stmt HttpServletRequest = if if ! throw new else throw new else throw new decl Class String RequestParam public public < decl_stmt java.lang.Class < = if || == || call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() return decl_stmt RequestParam = decl_stmt java.lang.String = == || call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() : call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() if == else if instanceof for : < = else new protected protected if == return else if instanceof return else if != return else return