org.springframework.beans.factory.config java.util.Collections import java.util.Enumeration import java.util.Properties import java.util.Set import java.util.concurrent.ConcurrentHashMap import org.springframework.beans.BeansException import org.springframework.beans.PropertyValue import org.springframework.beans.factory.BeanInitializationException import class org.springframework.beans.factory.config.PropertyOverrideConfigurer super super extends String boolean decl Set String public public = public public = String String protected protected throws for < = decl_stmt java.lang.String = try catch decl_stmt java.lang.String = + + if ! throw new if int String String protected protected throws decl_stmt int = if == - throw new + + + + decl_stmt java.lang.String = decl_stmt java.lang.String = + if + + + + BeanDefinition PropertyValue protected protected decl_stmt org.springframework.beans.factory.config.BeanDefinition = while call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() != = call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() call org.springframework.beans.factory.config.BeanDefinition.getOriginatingBeanDefinition() decl_stmt org.springframework.beans.PropertyValue = new call org.springframework.beans.PropertyValue.setOptional(boolean) call org.springframework.beans.PropertyValue.setOptional(boolean) call org.springframework.beans.PropertyValue.setOptional(boolean) call org.springframework.beans.PropertyValue.setOptional(boolean) call org.springframework.beans.PropertyValue.setOptional(boolean) call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() public public return