org.springframework.test.context.junit4.rules java.lang.reflect.Field import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.ClassRule import org.junit.rules.MethodRule import org.junit.runners.model.FrameworkMethod import org.junit.runners.model.Statement import org.springframework.test.context.TestContextManager import org.springframework.test.context.junit4.statements.ProfileValueChecker import org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks import org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks import org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks import org.springframework.test.context.junit4.statements.SpringFailOnTimeout import org.springframework.test.context.junit4.statements.SpringRepeat import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import class org.springframework.test.context.junit4.rules.SpringMethodRule super super implements Log TestContextManager decl Class Statement public public if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + decl_stmt java.lang.Class < = decl_stmt org.springframework.test.context.TestContextManager = decl_stmt sun.tools.tree.Statement = = = = = = = return private private return new private private return new private private return new private private return new private private return new private private return new Field private static private static < decl_stmt com.sun.jdi.Field = for : if && = break if == throw new + if ! call Field.isAnnotationPresent() call Field.isAnnotationPresent() call Field.isAnnotationPresent() call Field.isAnnotationPresent() call Field.isAnnotationPresent() throw new + return