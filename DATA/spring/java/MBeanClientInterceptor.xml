org.springframework.jmx.access java.beans.PropertyDescriptor import java.io.IOException import java.lang.reflect.Array import java.lang.reflect.Method import java.net.MalformedURLException import java.util.Arrays import java.util.Collection import java.util.HashMap import java.util.Map import javax.management.Attribute import javax.management.InstanceNotFoundException import javax.management.IntrospectionException import javax.management.JMException import javax.management.JMX import javax.management.MBeanAttributeInfo import javax.management.MBeanException import javax.management.MBeanInfo import javax.management.MBeanOperationInfo import javax.management.MBeanServerConnection import javax.management.MBeanServerInvocationHandler import javax.management.MalformedObjectNameException import javax.management.ObjectName import javax.management.OperationsException import javax.management.ReflectionException import javax.management.RuntimeErrorException import javax.management.RuntimeMBeanException import javax.management.RuntimeOperationsException import javax.management.openmbean.CompositeData import javax.management.openmbean.TabularData import javax.management.remote.JMXServiceURL import org.aopalliance.intercept.MethodInterceptor import org.aopalliance.intercept.MethodInvocation import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.BeanUtils import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.DisposableBean import org.springframework.beans.factory.InitializingBean import org.springframework.core.CollectionFactory import org.springframework.core.GenericCollectionTypeResolver import org.springframework.core.MethodParameter import org.springframework.jmx.support.JmxUtils import org.springframework.jmx.support.ObjectNameManager import org.springframework.util.ClassUtils import org.springframework.util.ReflectionUtils import org.springframework.util.StringUtils import class org.springframework.jmx.access.MBeanClientInterceptor super super implements boolean ClassLoader decl Map ObjectName decl Map decl Class MBeanServerConnection MBeanServerConnection decl Map decl Map MBeanServerInvocationHandler JMXServiceURL boolean Log String boolean ConnectorDelegate Object public public = public public throws = new public public < = public < public < return public public = public public = public public = public public throws = public public = public public < = protected final < protected final < return public public = public public if != && throw new + if public public synchronized if != = else = = = if = new != && else MBeanInfo decl MBeanAttributeInfo decl MBeanOperationInfo private private throws try decl_stmt MBeanInfo = decl_stmt javax.management.MBeanAttributeInfo = call MBeanInfo.getAttributes() call MBeanInfo.getAttributes() call MBeanInfo.getAttributes() call MBeanInfo.getAttributes() call MBeanInfo.getAttributes() = new < for : decl_stmt javax.management.MBeanOperationInfo = call MBeanInfo.getOperations() call MBeanInfo.getOperations() call MBeanInfo.getOperations() call MBeanInfo.getOperations() call MBeanInfo.getOperations() = new < for : new catch throw new catch throw new + + catch throw new + + catch throw new + + catch throw new + + protected protected synchronized return != public public throws synchronized if ! try return catch return catch return String protected protected throws if decl_stmt java.lang.String = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() else if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() return else throw RuntimeException Method PropertyDescriptor Object protected protected throws decl_stmt com.sun.jdi.Method = try decl_stmt java.lang.Object = if != = else decl_stmt java.beans.PropertyDescriptor = if != = else = return new - catch throw catch throw catch throw catch decl_stmt RuntimeException = if instanceof throw else if instanceof throw else throw catch if throw else throw new catch if throw else throw new catch if throw else throw new MBeanAttributeInfo String private private throws decl_stmt java.lang.String = decl_stmt javax.management.MBeanAttributeInfo = if == throw new + + if if call javax.management.MBeanAttributeInfo.isReadable() call javax.management.MBeanAttributeInfo.isReadable() call javax.management.MBeanAttributeInfo.isReadable() call javax.management.MBeanAttributeInfo.isReadable() call javax.management.MBeanAttributeInfo.isReadable() return else throw new + + else if if call javax.management.MBeanAttributeInfo.isWritable() call javax.management.MBeanAttributeInfo.isWritable() call javax.management.MBeanAttributeInfo.isWritable() call javax.management.MBeanAttributeInfo.isWritable() call javax.management.MBeanAttributeInfo.isWritable() new return else throw new + + else throw new + + MBeanOperationInfo MethodCacheKey decl String private private throws decl_stmt MethodCacheKey = new decl_stmt javax.management.MBeanOperationInfo = if == throw new + + decl_stmt java.lang.String = synchronized = if == = return Method decl Class decl Class decl TabularData protected protected decl_stmt java.lang.Class < = try if == return if return if instanceof decl_stmt com.sun.jdi.Method = call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() return else if instanceof decl_stmt CompositeData = if call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() return else if decl_stmt java.lang.Class < = if != return else if instanceof decl_stmt com.sun.jdi.Method = call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() return else if instanceof decl_stmt javax.management.openmbean.TabularData = if call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() call decl Class.isArray() return else if decl_stmt java.lang.Class < = if != return throw new + + + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() + catch throw new + call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() + + + decl Class Object Method private private < throws decl_stmt java.lang.Class < = decl_stmt com.sun.jdi.Method = call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() call decl Class.getMethod() decl_stmt java.lang.Object = for = < ++ return Method decl Collection private < private < < < throws decl_stmt com.sun.jdi.Method = decl_stmt java.util.Collection < = for = < ++ call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() call decl Collection.add() return public public MethodCacheKey public public if == return decl_stmt MethodCacheKey = return && public public return public public return + + + int public public decl_stmt int = if != return if < return - if > return for = < ++ = if != return return