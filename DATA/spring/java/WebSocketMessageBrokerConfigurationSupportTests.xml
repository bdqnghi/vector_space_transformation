org.springframework.web.socket.config.annotation static static org.junit.Assert.* import static static org.mockito.Mockito.* import java.util.ArrayList import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.ScheduledThreadPoolExecutor import org.junit.Test import org.springframework.context.ApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.messaging.Message import org.springframework.messaging.MessageHandler import org.springframework.messaging.handler.annotation.MessageMapping import org.springframework.messaging.handler.annotation.SendTo import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.annotation.SubscribeMapping import org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler import org.springframework.messaging.simp.config.MessageBrokerRegistry import org.springframework.messaging.simp.stomp.StompCommand import org.springframework.messaging.simp.stomp.StompHeaderAccessor import org.springframework.messaging.simp.user.UserDestinationMessageHandler import org.springframework.messaging.support.AbstractSubscribableChannel import org.springframework.messaging.support.ChannelInterceptor import org.springframework.messaging.support.ExecutorSubscribableChannel import org.springframework.messaging.support.ImmutableMessageChannelInterceptor import org.springframework.scheduling.TaskScheduler import org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler import org.springframework.stereotype.Controller import org.springframework.web.servlet.HandlerMapping import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.config.WebSocketMessageBrokerStats import org.springframework.web.socket.handler.TestWebSocketSession import org.springframework.web.socket.handler.WebSocketHandlerDecorator import org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory import org.springframework.web.socket.messaging.StompSubProtocolHandler import org.springframework.web.socket.messaging.StompTextMessageBuilder import org.springframework.web.socket.messaging.SubProtocolHandler import org.springframework.web.socket.messaging.SubProtocolWebSocketHandler import org.springframework.web.socket.server.support.WebSocketHttpRequestHandler import class org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupportTests decl Map ApplicationContext SimpleUrlHandlerMapping public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.web.servlet.handler.SimpleUrlHandlerMapping = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() call SimpleUrlHandlerMapping.getOrder() decl_stmt java.util.Map < = call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() SubProtocolWebSocketHandler decl List TestWebSocketSession TextMessage decl Message ApplicationContext StompHeaderAccessor TestChannel public public throws decl_stmt org.springframework.context.ApplicationContext = decl_stmt TestChannel = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt org.springframework.web.socket.messaging.SubProtocolWebSocketHandler = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt java.util.List < = call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - decl_stmt org.springframework.web.socket.handler.TestWebSocketSession = new call org.springframework.web.socket.handler.TestWebSocketSession.setOpen(boolean) call org.springframework.web.socket.handler.TestWebSocketSession.setOpen(boolean) call org.springframework.web.socket.handler.TestWebSocketSession.setOpen(boolean) call org.springframework.web.socket.handler.TestWebSocketSession.setOpen(boolean) call org.springframework.web.socket.handler.TestWebSocketSession.setOpen(boolean) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.afterConnectionEstablished(WebSocketSession) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.afterConnectionEstablished(WebSocketSession) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.afterConnectionEstablished(WebSocketSession) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.afterConnectionEstablished(WebSocketSession) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.afterConnectionEstablished(WebSocketSession) decl_stmt org.springframework.web.socket.TextMessage = call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.handleMessage(WebSocketSession,WebSocketMessage) decl_stmt org.springframework.messaging.Message < = call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() call TestChannel.messages() decl_stmt org.springframework.messaging.simp.stomp.StompHeaderAccessor = call StompHeaderAccessor.isMutable() call StompHeaderAccessor.isMutable() call StompHeaderAccessor.isMutable() call StompHeaderAccessor.isMutable() call StompHeaderAccessor.isMutable() call StompHeaderAccessor.getMessageType() call StompHeaderAccessor.getMessageType() call StompHeaderAccessor.getMessageType() call StompHeaderAccessor.getMessageType() call StompHeaderAccessor.getMessageType() call StompHeaderAccessor.getDestination() call StompHeaderAccessor.getDestination() call StompHeaderAccessor.getDestination() call StompHeaderAccessor.getDestination() call StompHeaderAccessor.getDestination() decl List ApplicationContext TestChannel decl Set public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt TestChannel = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt java.util.Set < = call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() decl_stmt java.util.List < = call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl List ApplicationContext TestChannel decl Set public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt TestChannel = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt java.util.Set < = call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() call TestChannel.getSubscribers() decl_stmt java.util.List < = call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call TestChannel.getInterceptors() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() - call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() SubProtocolWebSocketHandler decl Map ApplicationContext StompSubProtocolHandler public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.web.socket.messaging.SubProtocolWebSocketHandler = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() * call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getSendBufferSizeLimit() * call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() call SubProtocolWebSocketHandler.getSendTimeLimit() decl_stmt java.util.Map < = call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() call org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.getProtocolHandlerMap() decl_stmt org.springframework.web.socket.messaging.StompSubProtocolHandler = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() * call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() call org.springframework.web.socket.messaging.StompSubProtocolHandler.getMessageSizeLimit() SimpleBrokerMessageHandler ThreadPoolTaskScheduler ApplicationContext String ScheduledThreadPoolExecutor public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt java.lang.String = decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt java.util.concurrent.ScheduledThreadPoolExecutor = call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ThreadPoolTaskScheduler.getScheduledThreadPoolExecutor() call ScheduledThreadPoolExecutor.getCorePoolSize() call ScheduledThreadPoolExecutor.getCorePoolSize() call ScheduledThreadPoolExecutor.getCorePoolSize() call ScheduledThreadPoolExecutor.getCorePoolSize() call ScheduledThreadPoolExecutor.getCorePoolSize() call ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy() call ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy() call ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy() call ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy() call ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy() decl_stmt org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getTaskScheduler() new call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() call org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.getHeartbeatValue() String WebSocketMessageBrokerStats ApplicationContext String String public public decl_stmt org.springframework.context.ApplicationContext = decl_stmt java.lang.String = decl_stmt org.springframework.web.socket.config.WebSocketMessageBrokerStats = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt java.lang.String = call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() call org.springframework.web.socket.config.WebSocketMessageBrokerStats.toString() decl_stmt java.lang.String = + + + + + + + call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) call java.lang.String.replace(char,char) + + call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) call java.lang.String.matches(String) WebSocketSession WebSocketHandler ApplicationContext SimpleUrlHandlerMapping WebSocketHttpRequestHandler public public throws decl_stmt org.springframework.context.ApplicationContext = decl_stmt org.springframework.web.socket.WebSocketHandler = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt org.springframework.web.servlet.handler.SimpleUrlHandlerMapping = call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() call ApplicationContext.getBean() decl_stmt org.springframework.web.socket.server.support.WebSocketHttpRequestHandler = call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() call SimpleUrlHandlerMapping.getHandlerMap() = call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() call org.springframework.web.socket.server.support.WebSocketHttpRequestHandler.getWebSocketHandler() decl_stmt org.springframework.web.socket.WebSocketSession = new call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call WebSocketHandler.afterConnectionEstablished() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() call org.springframework.web.socket.WebSocketSession.getAttributes() AnnotationConfigApplicationContext private private < decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() return public public return public public return public public return new public public public public * * * public public new TestChannel public public decl_stmt TestChannel = new call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() return TestChannel public public decl_stmt TestChannel = new call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() return TestChannel public public decl_stmt TestChannel = new call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() call TestChannel.setInterceptors() return protected protected protected protected new public public return new public public throws public public return new public public throws public public throws public public < return