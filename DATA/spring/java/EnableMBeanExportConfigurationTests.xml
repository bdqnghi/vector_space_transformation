org.springframework.jmx.export.annotation javax.management.MBeanServer import javax.management.ObjectName import org.junit.After import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.ComponentScan import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.EnableMBeanExport import org.springframework.context.annotation.Lazy import org.springframework.context.annotation.MBeanExportConfiguration import org.springframework.context.annotation.Scope import org.springframework.context.annotation.ScopedProxyMode import org.springframework.jmx.export.MBeanExporterTests import org.springframework.jmx.export.TestDynamicMBean import org.springframework.jmx.export.metadata.InvalidMetadataException import org.springframework.jmx.support.MBeanServerFactoryBean import org.springframework.jmx.support.ObjectNameManager import org.springframework.jmx.support.RegistrationPolicy import org.springframework.mock.env.MockEnvironment import static static org.junit.Assert.* import class org.springframework.jmx.export.annotation.EnableMBeanExportConfigurationTests ExpectedException AnnotationConfigApplicationContext public public if != public public throws private private < = new public public throws public public new public public new public public throws AnnotationConfigApplicationContext MockEnvironment public public throws decl_stmt org.springframework.mock.env.MockEnvironment = new call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() call MockEnvironment.setProperty() decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.setEnvironment(ConfigurableEnvironment) call org.springframework.context.annotation.AnnotationConfigApplicationContext.setEnvironment(ConfigurableEnvironment) call org.springframework.context.annotation.AnnotationConfigApplicationContext.setEnvironment(ConfigurableEnvironment) call org.springframework.context.annotation.AnnotationConfigApplicationContext.setEnvironment(ConfigurableEnvironment) call org.springframework.context.annotation.AnnotationConfigApplicationContext.setEnvironment(ConfigurableEnvironment) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() = MBeanServer public public throws try decl_stmt MBeanServer = finally MBeanServer public public throws decl_stmt MBeanServer = MBeanServer private private throws decl_stmt MBeanServer = String ObjectName private private throws decl_stmt ObjectName = decl_stmt java.lang.String = public public throws return new AnnotationTestBean public public decl_stmt org.springframework.jmx.export.annotation.AnnotationTestBean = new call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) return public public throws return new AnnotationTestBean = public = public decl_stmt org.springframework.jmx.export.annotation.AnnotationTestBean = new call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) return public public throws return new AnnotationTestBean public public decl_stmt org.springframework.jmx.export.annotation.AnnotationTestBean = new call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) return public public return new public public throws return new AnnotationTestBean = public = public decl_stmt org.springframework.jmx.export.annotation.AnnotationTestBean = new call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setName(String) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) call org.springframework.jmx.export.annotation.AnnotationTestBean.setAge(int) return = public = public throws return new = public = public return new decl MBeanExporterTests = public = public decl_stmt org.springframework.test.context.junit4.orm.domain.Person = new call decl MBeanExporterTests.setName() call decl MBeanExporterTests.setName() call decl MBeanExporterTests.setName() call decl MBeanExporterTests.setName() call decl MBeanExporterTests.setName() return public public throws return public public throws return new public public throws return new public public return new public public return public public = public public throws return new PackagePrivateTestBeanExtension public public decl_stmt PackagePrivateTestBeanExtension = new call PackagePrivateTestBeanExtension.setName() call PackagePrivateTestBeanExtension.setName() call PackagePrivateTestBeanExtension.setName() call PackagePrivateTestBeanExtension.setName() call PackagePrivateTestBeanExtension.setName() return public public throws return new public public return new public public public public return public public = public public return