org.springframework.core.convert java.lang.annotation.Annotation import java.lang.reflect.AnnotatedElement import java.lang.reflect.Field import java.lang.reflect.Method import java.util.LinkedHashMap import java.util.Map import org.springframework.core.GenericTypeResolver import org.springframework.core.MethodParameter import org.springframework.util.ConcurrentReferenceHashMap import org.springframework.util.ObjectUtils import org.springframework.util.ReflectionUtils import org.springframework.util.StringUtils import class org.springframework.core.convert.Property String Method MethodParameter Method decl Map decl Annotation decl Class public < public < return public public return public < public < return public public return public public return return if == = return int private private if != decl_stmt int = if != - += else = if == - throw new += return else decl_stmt int = + if == - throw new return MethodParameter MethodParameter decl Class decl Class private private decl_stmt org.springframework.core.MethodParameter = decl_stmt org.springframework.core.MethodParameter = if == if == throw new return if != decl_stmt java.lang.Class < = call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() decl_stmt java.lang.Class < = call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() call org.springframework.core.MethodParameter.getParameterType() if ! call decl Class.equals() call decl Class.equals() call decl Class.equals() call decl Class.equals() call decl Class.equals() && call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() call decl Class.isAssignableFrom() return return private private if == return return new - private private if == return return new private private return decl Annotation decl Map private private decl_stmt java.text.Annotation = call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() if == decl_stmt java.util.Map < < extends extends = new < < extends extends = call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() new call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return private private < < extends extends if != for : Field String decl Class private private decl_stmt java.lang.String = if ! return decl_stmt java.lang.Class < = decl_stmt com.sun.jdi.Field = if == = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) if == = call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) + call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) call java.lang.String.substring(int) return private < private < if != return else return Property public public if == return if ! instanceof return decl_stmt org.springframework.core.convert.Property = return && && && public public return * +