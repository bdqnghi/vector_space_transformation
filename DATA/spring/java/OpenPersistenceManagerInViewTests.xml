org.springframework.orm.jdo.support java.io.IOException import javax.jdo.PersistenceManager import javax.jdo.PersistenceManagerFactory import javax.servlet.FilterChain import javax.servlet.ServletException import javax.servlet.ServletRequest import javax.servlet.ServletResponse import org.junit.Test import org.springframework.mock.web.test.MockFilterConfig import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.mock.web.test.PassThroughFilterChain import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.web.context.WebApplicationContext import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.context.support.StaticWebApplicationContext import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.orm.jdo.support.OpenPersistenceManagerInViewTests MockServletContext PersistenceManagerFactory MockHttpServletRequest OpenPersistenceManagerInViewInterceptor PersistenceManager public public throws decl_stmt PersistenceManagerFactory = decl_stmt PersistenceManager = decl_stmt org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor = new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.setPersistenceManagerFactory(PersistenceManagerFactory) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.setPersistenceManagerFactory(PersistenceManagerFactory) decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.preHandle(WebRequest) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.postHandle(WebRequest,ModelMap) new call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) call org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor.afterCompletion(WebRequest,Exception) new FilterChain FilterChain PersistenceManagerFactory PersistenceManager MockFilterConfig MockHttpServletRequest StaticWebApplicationContext OpenPersistenceManagerInViewFilter PersistenceManagerFactory MockFilterConfig OpenPersistenceManagerInViewFilter MockServletContext MockHttpServletResponse FilterChain PersistenceManager public public throws decl_stmt PersistenceManagerFactory final final = decl_stmt PersistenceManager = call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt PersistenceManagerFactory final final = decl_stmt PersistenceManager = call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() call PersistenceManagerFactory.getPersistenceManager() decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.mock.web.MockFilterConfig = new call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() decl_stmt org.springframework.mock.web.MockFilterConfig = new call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.web.context.support.StaticWebApplicationContext.getServletContext() call org.springframework.mock.web.MockFilterConfig.addInitParameter(String,String) call org.springframework.mock.web.MockFilterConfig.addInitParameter(String,String) call org.springframework.mock.web.MockFilterConfig.addInitParameter(String,String) call org.springframework.mock.web.MockFilterConfig.addInitParameter(String,String) call org.springframework.mock.web.MockFilterConfig.addInitParameter(String,String) decl_stmt org.springframework.orm.jdo.support.OpenPersistenceManagerInViewFilter final final = new call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() decl_stmt org.springframework.orm.jdo.support.OpenPersistenceManagerInViewFilter final final = new call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() call OpenPersistenceManagerInViewFilter.init() decl_stmt FilterChain final final = new public public decl_stmt FilterChain final final = new public public throws call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() decl_stmt FilterChain = new call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call OpenPersistenceManagerInViewFilter.doFilter() call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call StaticWebApplicationContext.close() call StaticWebApplicationContext.close() call StaticWebApplicationContext.close() call StaticWebApplicationContext.close() call StaticWebApplicationContext.close() public public public public throws