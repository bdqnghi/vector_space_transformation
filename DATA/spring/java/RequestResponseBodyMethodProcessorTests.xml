org.springframework.web.servlet.mvc.method.annotation java.io.ByteArrayOutputStream import java.io.OutputStream import java.io.Serializable import java.lang.reflect.Method import java.lang.reflect.Type import java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import com.fasterxml.jackson.annotation.JsonTypeInfo import com.fasterxml.jackson.annotation.JsonTypeName import com.fasterxml.jackson.annotation.JsonView import org.junit.Before import org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.aop.target.SingletonTargetSource import org.springframework.core.MethodParameter import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.http.HttpEntity import org.springframework.http.HttpInputMessage import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.ResponseEntity import org.springframework.http.converter.ByteArrayHttpMessageConverter import org.springframework.http.converter.HttpMessageConverter import org.springframework.http.converter.HttpMessageNotReadableException import org.springframework.http.converter.ResourceHttpMessageConverter import org.springframework.http.converter.StringHttpMessageConverter import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter import org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter import org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.util.MultiValueMap import org.springframework.validation.beanvalidation.LocalValidatorFactoryBean import org.springframework.web.accept.ContentNegotiationManagerFactoryBean import org.springframework.web.bind.WebDataBinder import org.springframework.web.bind.annotation.RequestBody import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.annotation.ResponseBody import org.springframework.web.bind.annotation.RestController import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.HandlerMethod import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.ModelAndView import org.springframework.web.servlet.view.json.MappingJackson2JsonView import org.springframework.web.util.WebUtils import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertFalse import static static org.junit.Assert.assertNotNull import static static org.junit.Assert.assertNull import static static org.junit.Assert.assertTrue import class annotation org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests ModelAndViewContainer NativeWebRequest ValidatingBinderFactory MockHttpServletResponse MethodParameter MethodParameter MockHttpServletRequest MethodParameter MethodParameter MethodParameter Method public public throws decl_stmt com.sun.jdi.Method = = new = new = new = new = new - = new = new call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) call org.springframework.mock.web.MockHttpServletRequest.setMethod(String) = new = new = new String decl List decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.util.List < = < call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() String decl MultiValueMap decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt org.springframework.util.MultiValueMap < = < call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() call decl MultiValueMap.getFirst() String SimpleBean decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt org.springframework.context.annotation4.SimpleBean = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() String String decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.String = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) decl List RequestResponseBodyMethodProcessor = public = public throws new decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) decl List String decl List RequestResponseBodyMethodProcessor public public throws new decl_stmt java.util.List < < = new decl_stmt java.util.List < = new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.String = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) Method String MethodParameter decl List HandlerMethod RequestResponseBodyMethodProcessor SimpleBean public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt org.springframework.context.annotation4.SimpleBean = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() RequestResponseBodyMethodProcessor HttpMessageConverter decl List String MethodParameter HttpMessageConverter HandlerMethod Method SimpleBean public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt java.util.List < < = new <> decl_stmt org.springframework.http.converter.HttpMessageConverter = new decl_stmt org.springframework.http.converter.HttpMessageConverter = new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt org.springframework.context.annotation4.SimpleBean = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() call org.springframework.context.annotation4.SimpleBean.getName() decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() MethodParameter RequestResponseBodyMethodProcessor decl List Method public public throws decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new - decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) new call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() decl List RequestResponseBodyMethodProcessor public public throws decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) MethodParameter RequestResponseBodyMethodProcessor ClassPathResource Method decl List public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new - decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt org.springframework.core.io.ClassPathResource = new call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() MethodParameter Method RequestResponseBodyMethodProcessor = public = public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new - decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new <> call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() call RequestResponseBodyMethodProcessor.writeWithMessageConverters() new ContentNegotiationManagerFactoryBean RequestResponseBodyMethodProcessor public public throws decl_stmt org.springframework.web.accept.ContentNegotiationManagerFactoryBean = new call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.addMediaType(String,MediaType) call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.addMediaType(String,MediaType) call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.addMediaType(String,MediaType) call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.addMediaType(String,MediaType) call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.addMediaType(String,MediaType) new call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.afterPropertiesSet() call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.afterPropertiesSet() call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.afterPropertiesSet() call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.afterPropertiesSet() call org.springframework.web.accept.ContentNegotiationManagerFactoryBean.afterPropertiesSet() decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new call ContentNegotiationManagerFactoryBean.getObject() call ContentNegotiationManagerFactoryBean.getObject() call ContentNegotiationManagerFactoryBean.getObject() call ContentNegotiationManagerFactoryBean.getObject() call ContentNegotiationManagerFactoryBean.getObject() MethodParameter RequestResponseBodyMethodProcessor Method decl List public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new - decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) MethodParameter RequestResponseBodyMethodProcessor Method decl List public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.core.MethodParameter = new - decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.supportsReturnType(MethodParameter) MethodParameter Method String decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method String decl List Object HandlerMethod HttpEntityMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method String decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method String decl List Object HandlerMethod HttpEntityMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) Method String MethodParameter decl List HandlerMethod RequestResponseBodyMethodProcessor JacksonViewBean public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new decl_stmt JacksonViewBean = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() Method String MethodParameter decl List HandlerMethod HttpEntityMethodProcessor decl HttpEntity public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new new decl_stmt org.springframework.http.HttpEntity < = < call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() Method String MethodParameter decl List HandlerMethod RequestResponseBodyMethodProcessor JacksonViewBean public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new new decl_stmt JacksonViewBean = call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView1() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithView2() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() call JacksonViewBean.getWithoutView() Method String MethodParameter decl List HandlerMethod HttpEntityMethodProcessor decl HttpEntity public public throws decl_stmt java.lang.String = call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() call org.springframework.web.method.HandlerMethod.getMethodParameters() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor = new new decl_stmt org.springframework.http.HttpEntity < = < call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory) call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() call decl HttpEntity.getBody() MethodParameter Method String decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method String decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method String decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) decl_stmt java.lang.String = call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) MethodParameter Method decl List Object HandlerMethod RequestResponseBodyMethodProcessor public public throws decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.web.method.HandlerMethod = new new decl_stmt org.springframework.core.MethodParameter = call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() call org.springframework.web.method.HandlerMethod.getReturnType() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor = new decl_stmt java.lang.Object = new call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) call org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(Object,MethodParameter,ModelAndViewContainer,NativeWebRequest) String private private throws decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) if + + else + + = new = new = new < < return return return public public public public return public public = public public return public public = LocalValidatorFactoryBean WebDataBinder public public decl_stmt org.springframework.validation.beanvalidation.LocalValidatorFactoryBean = new call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() call org.springframework.validation.beanvalidation.LocalValidatorFactoryBean.afterPropertiesSet() decl_stmt org.springframework.web.bind.WebDataBinder = new call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() call WebDataBinder.setValidator() return public public return public public return public public return public public return public public = public public return public public = public public return public public = public public return public public = JacksonViewBean public public decl_stmt JacksonViewBean = new call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() return JacksonViewBean ModelAndView public < public < decl_stmt JacksonViewBean = new call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView1() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithView2() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() call JacksonViewBean.setWithoutView() decl_stmt org.springframework.web.portlet.ModelAndView = new new call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) call org.springframework.web.portlet.ModelAndView.addObject(String,Object) return new <> public public return public public < return decl List public < public < decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new return SimpleBean public public decl_stmt org.springframework.context.annotation4.SimpleBean = new call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) return SimpleBean SimpleBean public < public < decl_stmt org.springframework.context.annotation4.SimpleBean = new call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) decl_stmt org.springframework.context.annotation4.SimpleBean = new call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call SimpleBean.setId() call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) call org.springframework.context.annotation4.SimpleBean.setName(String) return = public = public return public public < extends extends extends < return public public < extends extends extends < return public public < extends extends extends < return public public < extends extends extends < return