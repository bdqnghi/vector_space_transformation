org.springframework.beans.factory.annotation java.lang.annotation.Annotation import java.lang.reflect.Method import java.util.LinkedHashSet import java.util.Map import java.util.Set import org.springframework.beans.SimpleTypeConverter import org.springframework.beans.TypeConverter import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.config.BeanDefinitionHolder import org.springframework.beans.factory.config.DependencyDescriptor import org.springframework.beans.factory.support.AutowireCandidateQualifier import org.springframework.beans.factory.support.AutowireCandidateResolver import org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.core.MethodParameter import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.core.annotation.AnnotationAttributes import org.springframework.core.annotation.AnnotationUtils import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.util.ObjectUtils import org.springframework.util.StringUtils import class org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver super super extends decl Set decl Class public public < extends extends public public < extends extends = MethodParameter Method boolean public public decl_stmt boolean = if && != = if decl_stmt org.springframework.core.MethodParameter = if != decl_stmt com.sun.jdi.Method = call org.springframework.core.MethodParameter.getMethod() call org.springframework.core.MethodParameter.getMethod() call org.springframework.core.MethodParameter.getMethod() call org.springframework.core.MethodParameter.getMethod() call org.springframework.core.MethodParameter.getMethod() if == || == call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() call com.sun.jdi.Method.getReturnType() = call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() return decl Class boolean boolean boolean SimpleTypeConverter decl Class protected protected if return decl_stmt SimpleTypeConverter = new for : decl_stmt java.lang.Class < extends extends = decl_stmt boolean = decl_stmt boolean = if if ! = else = if decl_stmt boolean = for : call decl Class.getAnnotations() call decl Class.getAnnotations() call decl Class.getAnnotations() call decl Class.getAnnotations() call decl Class.getAnnotations() decl_stmt java.lang.Class < extends extends = if = if && || ! return if && ! return return protected protected < extends extends for < extends extends : if || return return RootBeanDefinition AutowireCandidateQualifier String Annotation RootBeanDefinition decl Class Object Object decl Map decl Class protected protected decl_stmt java.lang.Class < extends extends = decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = decl_stmt org.springframework.beans.factory.support.AutowireCandidateQualifier = call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() if == = call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() call RootBeanDefinition.getQualifier() if == decl_stmt java.text.Annotation = if == decl_stmt org.springframework.beans.factory.support.RootBeanDefinition = if != = if == if != try decl_stmt java.lang.Class < = if != = catch if == && call RootBeanDefinition.hasBeanClass() call RootBeanDefinition.hasBeanClass() call RootBeanDefinition.hasBeanClass() call RootBeanDefinition.hasBeanClass() call RootBeanDefinition.hasBeanClass() = call RootBeanDefinition.getBeanClass() call RootBeanDefinition.getBeanClass() call RootBeanDefinition.getBeanClass() call RootBeanDefinition.getBeanClass() call RootBeanDefinition.getBeanClass() if != && call java.text.Annotation.equals(Object) call java.text.Annotation.equals(Object) call java.text.Annotation.equals(Object) call java.text.Annotation.equals(Object) call java.text.Annotation.equals(Object) return decl_stmt java.util.Map < = if call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() call decl Map.isEmpty() && == return for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() decl_stmt java.lang.String = decl_stmt java.lang.Object = decl_stmt java.lang.Object = if != = call AutowireCandidateQualifier.getAttribute() call AutowireCandidateQualifier.getAttribute() call AutowireCandidateQualifier.getAttribute() call AutowireCandidateQualifier.getAttribute() call AutowireCandidateQualifier.getAttribute() if == = call RootBeanDefinition.getAttribute() call RootBeanDefinition.getAttribute() call RootBeanDefinition.getAttribute() call RootBeanDefinition.getAttribute() call RootBeanDefinition.getAttribute() if == && call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) && instanceof && continue if == && != = if != = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() if ! call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) return return Method protected protected < extends extends decl_stmt com.sun.jdi.Method = return != : MethodParameter Object public public decl_stmt java.lang.Object = if == decl_stmt org.springframework.core.MethodParameter = if != = call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() call MethodParameter.getMethodAnnotations() return AnnotationAttributes protected protected decl_stmt org.springframework.core.annotation.AnnotationAttributes = if != return return Object protected protected decl_stmt java.lang.Object = if == throw new return