org.springframework.scheduling.annotation java.lang.reflect.Method import java.util.concurrent.CountDownLatch import java.util.concurrent.ExecutionException import java.util.concurrent.Executor import java.util.concurrent.Future import java.util.concurrent.TimeUnit import org.junit.Test import org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler import org.springframework.aop.support.AopUtils import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.support.RootBeanDefinition import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.support.GenericXmlApplicationContext import org.springframework.context.support.StaticApplicationContext import org.springframework.core.io.ClassPathResource import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor import org.springframework.util.ReflectionUtils import org.springframework.util.concurrent.ListenableFuture import static static org.junit.Assert.* import class org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessorTests Object ConfigurableApplicationContext public public decl_stmt org.springframework.context.ConfigurableApplicationContext = new decl_stmt java.lang.Object = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() Thread ITestBean ConfigurableApplicationContext Thread public public decl_stmt org.springframework.context.ConfigurableApplicationContext = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() ITestBean Thread BeanDefinition ConfigurableApplicationContext ThreadPoolTaskExecutor public public decl_stmt org.springframework.beans.factory.config.BeanDefinition = new decl_stmt org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor = new call ThreadPoolTaskExecutor.setThreadNamePrefix() call ThreadPoolTaskExecutor.setThreadNamePrefix() call ThreadPoolTaskExecutor.setThreadNamePrefix() call ThreadPoolTaskExecutor.setThreadNamePrefix() call ThreadPoolTaskExecutor.setThreadNamePrefix() call ThreadPoolTaskExecutor.afterPropertiesSet() call ThreadPoolTaskExecutor.afterPropertiesSet() call ThreadPoolTaskExecutor.afterPropertiesSet() call ThreadPoolTaskExecutor.afterPropertiesSet() call ThreadPoolTaskExecutor.afterPropertiesSet() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() decl_stmt org.springframework.context.ConfigurableApplicationContext = decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() call org.springframework.context.ConfigurableApplicationContext.close() BeanDefinition BeanDefinition StaticApplicationContext BeanDefinition ITestBean Thread public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.scheduling.annotation.ITestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() BeanDefinition BeanDefinition StaticApplicationContext BeanDefinition ITestBean BeanDefinition Thread public public decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() decl_stmt org.springframework.scheduling.annotation.ITestBean = call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call StaticApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() call StaticApplicationContext.close() ITestBean Method TestableAsyncUncaughtExceptionHandler GenericXmlApplicationContext Thread public public decl_stmt org.springframework.context.support.GenericXmlApplicationContext = new call org.springframework.context.support.GenericXmlApplicationContext.load(Class,String) call org.springframework.context.support.GenericXmlApplicationContext.load(Class,String) call org.springframework.context.support.GenericXmlApplicationContext.load(Class,String) call org.springframework.context.support.GenericXmlApplicationContext.load(Class,String) call org.springframework.context.support.GenericXmlApplicationContext.load(Class,String) new call GenericXmlApplicationContext.refresh() call GenericXmlApplicationContext.refresh() call GenericXmlApplicationContext.refresh() call GenericXmlApplicationContext.refresh() call GenericXmlApplicationContext.refresh() decl_stmt org.springframework.scheduling.annotation.ITestBean = call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.test() call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) call org.springframework.scheduling.annotation.ITestBean.await(long) decl_stmt java.lang.Thread = call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call org.springframework.scheduling.annotation.ITestBean.getThread() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() call java.lang.Thread.getName() decl_stmt org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler = call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call GenericXmlApplicationContext.getBean() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) decl_stmt com.sun.jdi.Method = call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call GenericXmlApplicationContext.close() call GenericXmlApplicationContext.close() call GenericXmlApplicationContext.close() call GenericXmlApplicationContext.close() call GenericXmlApplicationContext.close() ITestBean TestableAsyncUncaughtExceptionHandler ConfigurableApplicationContext decl Future public public decl_stmt org.springframework.context.ConfigurableApplicationContext = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() decl_stmt java.util.concurrent.Future < = call org.springframework.scheduling.annotation.ITestBean.failWithFuture() call org.springframework.scheduling.annotation.ITestBean.failWithFuture() call org.springframework.scheduling.annotation.ITestBean.failWithFuture() call org.springframework.scheduling.annotation.ITestBean.failWithFuture() call org.springframework.scheduling.annotation.ITestBean.failWithFuture() ITestBean TestableAsyncUncaughtExceptionHandler ConfigurableApplicationContext decl Future public public decl_stmt org.springframework.context.ConfigurableApplicationContext = new decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() decl_stmt org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() decl_stmt java.util.concurrent.Future < = call org.springframework.scheduling.annotation.ITestBean.failWithListenableFuture() call org.springframework.scheduling.annotation.ITestBean.failWithListenableFuture() call org.springframework.scheduling.annotation.ITestBean.failWithListenableFuture() call org.springframework.scheduling.annotation.ITestBean.failWithListenableFuture() call org.springframework.scheduling.annotation.ITestBean.failWithListenableFuture() private private < try catch + catch BeanDefinition ITestBean Method TestableAsyncUncaughtExceptionHandler ConfigurableApplicationContext public public decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() decl_stmt org.springframework.context.ConfigurableApplicationContext = decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.await(long) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) BeanDefinition ITestBean Method TestableAsyncUncaughtExceptionHandler ConfigurableApplicationContext public public decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() call org.springframework.beans.factory.config.BeanDefinition.getPropertyValues() new decl_stmt org.springframework.context.ConfigurableApplicationContext = decl_stmt org.springframework.scheduling.annotation.ITestBean = call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.isCalled() try call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call ITestBean.failWithVoid() call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) call org.springframework.scheduling.annotation.TestableAsyncUncaughtExceptionHandler.assertCalledWith(Method,Class) catch BeanDefinition StaticApplicationContext private private decl_stmt org.springframework.context.support.StaticApplicationContext = new decl_stmt org.springframework.beans.factory.config.BeanDefinition = new call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.registerBeanDefinition() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() call StaticApplicationContext.refresh() return public public return public public = public < public < throw new public < public < throw new public public throw new public public try catch public public public public return new public public return public public return new