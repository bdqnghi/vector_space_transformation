org.springframework.web.servlet.view java.util.Locale import java.util.Map import java.util.MissingResourceException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import org.junit.Before import org.junit.Test import org.springframework.beans.factory.BeanIsAbstractException import org.springframework.core.io.Resource import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.support.ServletContextResource import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.View import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.junit.Assume.* import class org.springframework.web.servlet.view.ResourceBundleViewResolverTests StaticWebApplicationContext String ResourceBundleViewResolver public public throws call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() protected protected return public public throws try call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() catch try call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() catch InternalResourceView decl Map View public public throws decl_stmt org.springframework.web.servlet.View = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() decl_stmt org.springframework.web.servlet.view.InternalResourceView = call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() decl_stmt java.util.Map < = call InternalResourceView.getStaticAttributes() call InternalResourceView.getStaticAttributes() call InternalResourceView.getStaticAttributes() call InternalResourceView.getStaticAttributes() call InternalResourceView.getStaticAttributes() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call decl Map.get() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() InternalResourceView View public public throws decl_stmt org.springframework.web.servlet.View = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() decl_stmt org.springframework.web.servlet.view.InternalResourceView = call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() InternalResourceView ResourceBundleViewResolver View public public throws decl_stmt org.springframework.web.servlet.view.ResourceBundleViewResolver = new call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call ResourceBundleViewResolver.setCache() call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setDefaultParentView(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setLocalesToInitialize(Locale) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setLocalesToInitialize(Locale) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setLocalesToInitialize(Locale) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setLocalesToInitialize(Locale) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setLocalesToInitialize(Locale) new call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() call ResourceBundleViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.View = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() decl_stmt org.springframework.web.servlet.view.InternalResourceView = call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getUrl() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() call InternalResourceView.getContentType() View View public public throws call ResourceBundleViewResolver.isCache() call ResourceBundleViewResolver.isCache() call ResourceBundleViewResolver.isCache() call ResourceBundleViewResolver.isCache() call ResourceBundleViewResolver.isCache() decl_stmt org.springframework.web.servlet.View = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() decl_stmt org.springframework.web.servlet.View = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() public public throws call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() TestView public public throws decl_stmt TestView = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() = call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call TestView.getBeanName() call TestView.getBeanName() call TestView.getBeanName() call TestView.getBeanName() call TestView.getBeanName() = public = public throws call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call org.springframework.web.servlet.view.ResourceBundleViewResolver.setBasename(String) call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() call ResourceBundleViewResolver.resolveViewName() public public if ! instanceof throw new + protected protected < protected protected ++