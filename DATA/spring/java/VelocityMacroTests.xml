org.springframework.web.servlet.view.velocity java.util.HashMap import java.util.Map import javax.servlet.ServletException import javax.servlet.http.HttpServletResponse import org.apache.velocity.Template import org.apache.velocity.app.VelocityEngine import org.apache.velocity.context.Context import org.junit.Before import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.tests.sample.beans.TestBean import org.springframework.util.StringUtils import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver import org.springframework.web.servlet.support.BindStatus import org.springframework.web.servlet.support.RequestContext import org.springframework.web.servlet.theme.FixedThemeResolver import org.springframework.web.servlet.view.DummyMacroRequestContext import static static org.junit.Assert.* import class org.springframework.web.servlet.view.velocity.VelocityMacroTests MockHttpServletRequest StaticWebApplicationContext MockHttpServletResponse String VelocityConfig Template public public throws = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new decl_stmt Template final final = new decl_stmt org.springframework.web.servlet.view.velocity.VelocityConfig = new public public return new call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.getDefaultListableBeanFactory() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() = new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) new = new public public return new BindStatus decl Map VelocityView RequestContext public public throws decl_stmt org.springframework.web.servlet.view.velocity.VelocityView = new protected protected instanceof decl_stmt org.springframework.web.servlet.support.RequestContext = decl_stmt org.springframework.web.servlet.support.BindStatus = call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() BindStatus RequestContext protected protected instanceof decl_stmt org.springframework.web.servlet.support.RequestContext = decl_stmt org.springframework.web.servlet.support.BindStatus = call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.RequestContext.getBindStatus(String,boolean) call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getExpression() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() call org.springframework.web.servlet.support.BindStatus.getValue() decl Map String VelocityView public public decl_stmt java.lang.String final final = decl_stmt org.springframework.web.servlet.view.velocity.VelocityView = new protected protected call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setApplicationContext() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() try call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() catch instanceof protected protected VelocityConfigurer VelocityEngine decl Map decl Map decl String decl Map DummyMacroRequestContext String decl Map TestBean VelocityView public public throws decl_stmt org.springframework.web.servlet.view.DummyMacroRequestContext = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.view.velocity.VelocityConfigurer = new call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() decl_stmt VelocityEngine = call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.view.velocity.VelocityView = new call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() decl_stmt java.lang.String = for = < ++ if + if + if + if + if + if + if + if + if + if + if + if + if + if + if + if + if + if + if + VelocityConfigurer VelocityEngine decl Map TestBean decl Map decl String decl Map DummyMacroRequestContext String decl Map TestBean VelocityView public public throws decl_stmt org.springframework.web.servlet.view.DummyMacroRequestContext = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setMessageMap(Map) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setThemeMessageMap(Map) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) call org.springframework.web.servlet.view.DummyMacroRequestContext.setContextPath(String) decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.tests.sample.beans.TestBean = new call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setSpouse(ITestBean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setJedi(boolean) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) call org.springframework.tests.sample.beans.TestBean.setStringArray(String) new call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.view.velocity.VelocityConfigurer = new call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() call VelocityConfigurer.setPreferFileSystemAccess() decl_stmt VelocityEngine = call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() call VelocityConfigurer.createVelocityEngine() decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.web.servlet.view.velocity.VelocityView = new call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setBeanName() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call VelocityView.setUrl() call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call org.springframework.web.servlet.view.velocity.VelocityView.setEncoding(String) call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call VelocityView.setExposeSpringMacroHelpers() call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call org.springframework.web.servlet.view.velocity.VelocityView.setVelocityEngine(VelocityEngine) call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() call VelocityView.render() decl_stmt java.lang.String = call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() decl_stmt java.lang.String = for = < ++ if + if + if + if + if + if + if + if + if + if + if + if +