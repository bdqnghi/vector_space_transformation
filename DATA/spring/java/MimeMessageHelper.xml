org.springframework.mail.javamail java.io.File import java.io.IOException import java.io.InputStream import java.io.OutputStream import java.io.UnsupportedEncodingException import java.util.Date import javax.activation.DataHandler import javax.activation.DataSource import javax.activation.FileDataSource import javax.activation.FileTypeMap import javax.mail.BodyPart import javax.mail.Message import javax.mail.MessagingException import javax.mail.internet.AddressException import javax.mail.internet.InternetAddress import javax.mail.internet.MimeBodyPart import javax.mail.internet.MimeMessage import javax.mail.internet.MimeMultipart import javax.mail.internet.MimePart import javax.mail.internet.MimeUtility import org.springframework.core.io.InputStreamSource import org.springframework.core.io.Resource import org.springframework.util.Assert import class org.springframework.mail.javamail.MimeMessageHelper MimeMultipart String FileTypeMap MimeMultipart MimeMessage String int String int boolean String String String int String int String String public final public final return MimeMultipart MimeMultipart MimeMultipart MimeMultipart MimeBodyPart protected protected throws switch case break case decl_stmt MimeMultipart = new call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() break case decl_stmt MimeMultipart = new call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() break case decl_stmt MimeMultipart = new call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() call MimeMessage.setContent() decl_stmt MimeMultipart = new decl_stmt MimeBodyPart = new call MimeBodyPart.setContent() call MimeBodyPart.setContent() call MimeBodyPart.setContent() call MimeBodyPart.setContent() call MimeBodyPart.setContent() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() break default: throw new protected final protected final = = public final public final return != private private throws if ! throw new + + public final public final throws return public final public final throws return protected protected if instanceof return return public public return ConfigurableMimeFileTypeMap protected protected if instanceof decl_stmt FileTypeMap = if != return decl_stmt org.springframework.mail.javamail.ConfigurableMimeFileTypeMap = new call ConfigurableMimeFileTypeMap.afterPropertiesSet() call ConfigurableMimeFileTypeMap.afterPropertiesSet() call ConfigurableMimeFileTypeMap.afterPropertiesSet() call ConfigurableMimeFileTypeMap.afterPropertiesSet() call ConfigurableMimeFileTypeMap.afterPropertiesSet() return public public = != : public public return public public = public public return protected protected throws if protected protected throws for : public public throws public public throws public public throws != new : new public public throws new public public throws InternetAddress public public throws decl_stmt InternetAddress = != new : new public public throws public public throws public public throws decl InternetAddress public public throws decl_stmt InternetAddress = new for = < ++ = public public throws public public throws public public throws != new : new public public throws public public throws public public throws decl InternetAddress public public throws decl_stmt InternetAddress = new for = < ++ = public public throws public public throws public public throws != new : new public public throws public public throws public public throws decl InternetAddress public public throws decl_stmt InternetAddress = new for = < ++ = public public throws public public throws public public throws != new : new InternetAddress decl InternetAddress private private throws decl_stmt InternetAddress = if != throw new decl_stmt InternetAddress = try return != new call InternetAddress.getAddress() call InternetAddress.getAddress() call InternetAddress.getAddress() call InternetAddress.getAddress() call InternetAddress.getAddress() call InternetAddress.getPersonal() call InternetAddress.getPersonal() call InternetAddress.getPersonal() call InternetAddress.getPersonal() call InternetAddress.getPersonal() : catch throw new public public throws public public throws public public throws if != else public public throws MimePart public public throws decl_stmt MimePart if = else = if else MimeBodyPart MimeMultipart MimeBodyPart public public throws decl_stmt MimeMultipart = new decl_stmt MimeBodyPart = new call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() decl_stmt MimeBodyPart = new call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() MimeMultipart MimeBodyPart BodyPart MimeBodyPart private private throws decl_stmt MimeMultipart = decl_stmt MimeBodyPart = for = < call MimeMultipart.getCount() call MimeMultipart.getCount() call MimeMultipart.getCount() call MimeMultipart.getCount() call MimeMultipart.getCount() ++ decl_stmt BodyPart = call MimeMultipart.getBodyPart() call MimeMultipart.getBodyPart() call MimeMultipart.getBodyPart() call MimeMultipart.getBodyPart() call MimeMultipart.getBodyPart() if call BodyPart.getFileName() call BodyPart.getFileName() call BodyPart.getFileName() call BodyPart.getFileName() call BodyPart.getFileName() == = if == decl_stmt MimeBodyPart = new call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() call MimeMultipart.addBodyPart() = return private private throws if != else private private throws if != + + else MimeBodyPart public public throws decl_stmt MimeBodyPart = new call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setHeader() call MimeBodyPart.setHeader() call MimeBodyPart.setHeader() call MimeBodyPart.setHeader() call MimeBodyPart.setHeader() + + call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() new FileDataSource public public throws decl_stmt FileDataSource = new call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() String public public throws decl_stmt java.lang.String = DataSource public public throws if instanceof && throw new + decl_stmt javax.sql.DataSource = MimeBodyPart public public throws try decl_stmt MimeBodyPart = new call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setDisposition() call MimeBodyPart.setFileName() call MimeBodyPart.setFileName() call MimeBodyPart.setFileName() call MimeBodyPart.setFileName() call MimeBodyPart.setFileName() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() call MimeBodyPart.setDataHandler() new catch throw new FileDataSource public public throws decl_stmt FileDataSource = new call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() call FileDataSource.setFileTypeMap() String public public throws decl_stmt java.lang.String = DataSource public public throws if instanceof && throw new + decl_stmt javax.sql.DataSource = protected protected final final final final final final return new public public throws return public public throw new public public return public public return public public throws return public public throw new public public return public public return