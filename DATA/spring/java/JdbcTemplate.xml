org.springframework.jdbc.core java.lang.reflect.InvocationHandler import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Proxy import java.sql.BatchUpdateException import java.sql.CallableStatement import java.sql.Connection import java.sql.PreparedStatement import java.sql.ResultSet import java.sql.SQLException import java.sql.SQLWarning import java.sql.Statement import java.util.ArrayList import java.util.Collection import java.util.Collections import java.util.HashMap import java.util.LinkedHashMap import java.util.List import java.util.Map import javax.sql.DataSource import org.springframework.dao.DataAccessException import org.springframework.dao.InvalidDataAccessApiUsageException import org.springframework.dao.support.DataAccessUtils import org.springframework.jdbc.SQLWarningException import org.springframework.jdbc.datasource.ConnectionProxy import org.springframework.jdbc.datasource.DataSourceUtils import org.springframework.jdbc.support.JdbcAccessor import org.springframework.jdbc.support.JdbcUtils import org.springframework.jdbc.support.KeyHolder import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor import org.springframework.jdbc.support.rowset.SqlRowSet import org.springframework.util.Assert import org.springframework.util.LinkedCaseInsensitiveMap import org.springframework.util.StringUtils import class org.springframework.jdbc.core.JdbcTemplate super super extends super implements boolean String int int boolean NativeJdbcExtractor int boolean boolean String public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return public public = public public return Connection Connection public < public < < throws decl_stmt sun.rmi.transport.Connection = try decl_stmt sun.rmi.transport.Connection = if != = else = return catch = throw finally protected protected return new < , new