org.springframework.test.web java.util.Collections import java.util.Comparator import java.util.HashSet import java.util.List import java.util.Map import java.util.Set import org.springframework.util.ObjectUtils import org.springframework.web.servlet.ModelAndView import static static org.springframework.test.util.AssertionErrors.* import class org.springframework.test.web.ModelAndViewAssert Object public static < public static < < != != decl_stmt java.lang.Object = + + != + + + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() + call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() return List public static public static != decl_stmt java.util.List = + call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() + + + == call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() + + public static public static != != + + Object public static public static != decl_stmt java.lang.Object = + + + + call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) StringBuilder Object Object public static public static < != != if ! decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() decl_stmt java.lang.StringBuilder = new for : decl_stmt java.lang.Object = decl_stmt java.lang.Object = if ! call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.Object.equals(Object) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() call StringBuilder.length() != call java.lang.StringBuilder.insert(int,char,int,int) call java.lang.StringBuilder.insert(int,char,int,int) call java.lang.StringBuilder.insert(int,char,int,int) call java.lang.StringBuilder.insert(int,char,int,int) call java.lang.StringBuilder.insert(int,char,int,int) call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() List public static public static != decl_stmt java.util.List = + call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() + + + == call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() call java.util.List.size() if != else + + public static public static != + + + + decl Set private static private static < < decl_stmt java.util.Set < = new < call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > for : = new < call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.addAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() call decl Set.removeAll() if call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() > for :