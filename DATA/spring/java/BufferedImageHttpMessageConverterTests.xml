org.springframework.http.converter java.awt.image.BufferedImage import java.io.ByteArrayInputStream import java.io.IOException import javax.imageio.ImageIO import org.junit.Before import org.junit.Test import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.http.MediaType import org.springframework.http.MockHttpInputMessage import org.springframework.http.MockHttpOutputMessage import org.springframework.util.FileCopyUtils import static static org.junit.Assert.* import class org.springframework.http.converter.BufferedImageHttpMessageConverterTests BufferedImageHttpMessageConverter public public = new public public call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canRead(Class,MediaType) new public public call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) new call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.canWrite(Class,MediaType) new decl byte Resource MockHttpInputMessage BufferedImage public public throws decl_stmt org.springframework.core.io.Resource = new decl_stmt byte = call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() decl_stmt org.springframework.http.MockHttpInputMessage = new call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() call org.springframework.http.MockHttpInputMessage.getHeaders() new decl_stmt java.awt.image.BufferedImage = call org.springframework.http.converter.BufferedImageHttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.BufferedImageHttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.BufferedImageHttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.BufferedImageHttpMessageConverter.read(Class,HttpInputMessage) call org.springframework.http.converter.BufferedImageHttpMessageConverter.read(Class,HttpInputMessage) call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) BufferedImage Resource MediaType BufferedImage MockHttpOutputMessage public public throws decl_stmt org.springframework.core.io.Resource = new decl_stmt java.awt.image.BufferedImage = call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() decl_stmt org.springframework.http.MockHttpOutputMessage = new decl_stmt org.springframework.http.MediaType = new call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() > decl_stmt java.awt.image.BufferedImage = new call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) BufferedImage Resource MediaType BufferedImage MockHttpOutputMessage public public throws decl_stmt org.springframework.core.io.Resource = new decl_stmt org.springframework.http.MediaType = new call org.springframework.http.converter.BufferedImageHttpMessageConverter.setDefaultContentType(MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.setDefaultContentType(MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.setDefaultContentType(MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.setDefaultContentType(MediaType) call org.springframework.http.converter.BufferedImageHttpMessageConverter.setDefaultContentType(MediaType) decl_stmt java.awt.image.BufferedImage = call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() decl_stmt org.springframework.http.MockHttpOutputMessage = new call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() call BufferedImageHttpMessageConverter.write() new call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call MockHttpOutputMessage.getWrittenHeaders() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() > decl_stmt java.awt.image.BufferedImage = new call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call org.springframework.http.MockHttpOutputMessage.getBodyAsBytes() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getHeight() call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver) call java.awt.image.BufferedImage.getWidth(ImageObserver)