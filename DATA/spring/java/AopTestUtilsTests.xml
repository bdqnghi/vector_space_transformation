org.springframework.test.util org.junit.Test import org.springframework.aop.framework.ProxyFactory import org.springframework.aop.support.AopUtils import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.springframework.test.util.AopTestUtils.* import class org.springframework.test.util.AopTestUtilsTests FooImpl = public = public Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = = public = public Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = Foo public public decl_stmt org.springframework.beans.Foo = ProxyFactory Foo private private decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() call ProxyFactory.addInterface() decl_stmt org.springframework.beans.Foo = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) return ProxyFactory Foo private private decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() call ProxyFactory.setProxyTargetClass() decl_stmt org.springframework.beans.Foo = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) return