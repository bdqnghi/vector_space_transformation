org.springframework.util static static org.junit.Assert.* import java.io.ByteArrayOutputStream import java.io.IOException import java.io.InputStream import org.junit.Before import org.junit.Test import class org.springframework.util.FastByteArrayOutputStreamTests decl byte FastByteArrayOutputStream int public public throws = new = public public throws int public public throws decl_stmt int = public public throws for = < ++ new public public throws public public throws = public = public throws public public throws ByteArrayOutputStream public public throws decl_stmt java.io.ByteArrayOutputStream = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() = public = public throws public public throws public public throws InputStream public public throws decl_stmt java.io.InputStream = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) int decl byte InputStream public public throws decl_stmt java.io.InputStream = decl_stmt byte = new call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() decl_stmt int = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() InputStream public public throws decl_stmt java.io.InputStream = call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) call java.io.InputStream.read(byte) - call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() InputStream public public throws decl_stmt java.io.InputStream = call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call java.io.InputStream.skip(long) call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() call InputStream.available() StringBuilder String InputStream public public throws decl_stmt java.lang.StringBuilder = new decl_stmt java.io.InputStream = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() StringBuilder String InputStream public public throws decl_stmt java.lang.StringBuilder = new for = < ++ decl_stmt java.io.InputStream = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) decl_stmt java.lang.String = call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() private private