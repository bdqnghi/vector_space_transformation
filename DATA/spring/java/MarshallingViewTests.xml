org.springframework.web.servlet.view.xml java.util.HashMap import java.util.LinkedHashMap import java.util.Map import javax.xml.bind.JAXBElement import javax.xml.namespace.QName import javax.xml.transform.stream.StreamResult import org.junit.Before import org.junit.Test import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.oxm.Marshaller import org.springframework.validation.BeanPropertyBindingResult import org.springframework.validation.BindingResult import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.web.servlet.view.xml.MarshallingViewTests Marshaller MarshallingView public public throws = = new public public call MarshallingView.getContentType() call MarshallingView.getContentType() call MarshallingView.getContentType() call MarshallingView.getContentType() call MarshallingView.getContentType() public public call MarshallingView.isExposePathVariables() call MarshallingView.isExposePathVariables() call MarshallingView.isExposePathVariables() call MarshallingView.isExposePathVariables() call MarshallingView.isExposePathVariables() public public new MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse String public public throws decl_stmt java.lang.String = decl_stmt java.lang.String = call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new < new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call org.springframework.oxm.Marshaller.marshal(Object,Result) call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new try call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() catch call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse public public throws decl_stmt java.lang.String = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new try call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() catch call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) call org.springframework.web.servlet.view.xml.MarshallingView.setModelKey(String) decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() try call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() catch MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() + new call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() call org.springframework.mock.web.MockHttpServletResponse.getContentLength() MockHttpServletRequest decl Map String MockHttpServletResponse Object public public throws decl_stmt java.lang.Object = new decl_stmt java.lang.String = decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() call Marshaller.supports() try call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() call MarshallingView.render() catch