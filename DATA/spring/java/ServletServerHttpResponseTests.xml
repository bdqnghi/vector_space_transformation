org.springframework.http.server java.nio.charset.Charset import java.util.Collections import java.util.List import org.junit.Before import org.junit.Test import org.springframework.http.HttpHeaders import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.util.FileCopyUtils import static static org.junit.Assert.assertArrayEquals import static static org.junit.Assert.assertEquals import static static org.junit.Assert.assertTrue import class org.springframework.http.server.ServletServerHttpResponseTests ServletServerHttpResponse MockHttpServletResponse public public throws = new = new public public throws call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.http.server.ServletServerHttpResponse.setStatusCode(HttpStatus) call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() String HttpHeaders String decl List String public public throws decl_stmt org.springframework.http.HttpHeaders = call org.springframework.http.server.ServletServerHttpResponse.getHeaders() call org.springframework.http.server.ServletServerHttpResponse.getHeaders() call org.springframework.http.server.ServletServerHttpResponse.getHeaders() call org.springframework.http.server.ServletServerHttpResponse.getHeaders() call org.springframework.http.server.ServletServerHttpResponse.getHeaders() decl_stmt java.lang.String = decl_stmt java.lang.String = call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) decl_stmt java.lang.String = call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) new call org.springframework.http.server.ServletServerHttpResponse.close() call org.springframework.http.server.ServletServerHttpResponse.close() call org.springframework.http.server.ServletServerHttpResponse.close() call org.springframework.http.server.ServletServerHttpResponse.close() call org.springframework.http.server.ServletServerHttpResponse.close() call org.springframework.mock.web.MockHttpServletResponse.getHeaderNames() call org.springframework.mock.web.MockHttpServletResponse.getHeaderNames() call org.springframework.mock.web.MockHttpServletResponse.getHeaderNames() call org.springframework.mock.web.MockHttpServletResponse.getHeaderNames() call org.springframework.mock.web.MockHttpServletResponse.getHeaderNames() decl_stmt java.util.List < = call org.springframework.mock.web.MockHttpServletResponse.getHeaders(String) call org.springframework.mock.web.MockHttpServletResponse.getHeaders(String) call org.springframework.mock.web.MockHttpServletResponse.getHeaders(String) call org.springframework.mock.web.MockHttpServletResponse.getHeaders(String) call org.springframework.mock.web.MockHttpServletResponse.getHeaders(String) call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call decl List.contains() call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getHeader(String) call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getContentType() call org.springframework.mock.web.MockHttpServletResponse.getCharacterEncoding() call org.springframework.mock.web.MockHttpServletResponse.getCharacterEncoding() call org.springframework.mock.web.MockHttpServletResponse.getCharacterEncoding() call org.springframework.mock.web.MockHttpServletResponse.getCharacterEncoding() call org.springframework.mock.web.MockHttpServletResponse.getCharacterEncoding() String String public public decl_stmt java.lang.String = decl_stmt java.lang.String = = new decl byte public public throws decl_stmt byte = call org.springframework.http.server.ServletServerHttpResponse.getBody() call org.springframework.http.server.ServletServerHttpResponse.getBody() call org.springframework.http.server.ServletServerHttpResponse.getBody() call org.springframework.http.server.ServletServerHttpResponse.getBody() call org.springframework.http.server.ServletServerHttpResponse.getBody() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray() call org.springframework.mock.web.MockHttpServletResponse.getContentAsByteArray()