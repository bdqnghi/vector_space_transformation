org.springframework.web.context.support java.io.IOException import java.util.Enumeration import java.util.LinkedHashSet import java.util.Set import java.util.jar.JarEntry import java.util.jar.JarFile import javax.servlet.ServletContext import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.UrlResource import org.springframework.core.io.support.PathMatchingResourcePatternResolver import org.springframework.util.ResourceUtils import org.springframework.util.StringUtils import class org.springframework.web.context.support.ServletContextResourcePatternResolver super super extends Log ServletContextResource ServletContext String decl Set protected < protected < throws if instanceof decl_stmt org.springframework.web.context.support.ServletContextResource = decl_stmt ServletContext = call org.springframework.web.context.support.ServletContextResource.getServletContext() call org.springframework.web.context.support.ServletContextResource.getServletContext() call org.springframework.web.context.support.ServletContextResource.getServletContext() call org.springframework.web.context.support.ServletContextResource.getServletContext() call org.springframework.web.context.support.ServletContextResource.getServletContext() decl_stmt java.lang.String = call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() + decl_stmt java.util.Set < = new < call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() call org.springframework.web.context.support.ServletContextResource.getPath() return else return boolean String String decl Set int String int protected protected < throws decl_stmt java.util.Set < = if != decl_stmt boolean = decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = if > && + < = = + for : if ! decl_stmt int = if != - = if && || <= if != && decl_stmt java.lang.String = if != if new String JarEntry JarFile private private < if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + try decl_stmt java.util.jar.JarFile = new try for < = call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() call java.util.jar.JarFile.entries() decl_stmt java.util.jar.JarEntry = decl_stmt java.lang.String = call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() call JarEntry.getName() if new + + + finally call JarFile.close() call JarFile.close() call JarFile.close() call JarFile.close() call JarFile.close() catch if call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.isWarnEnabled() call Log.warn() call Log.warn() call Log.warn() call Log.warn() call Log.warn() + +