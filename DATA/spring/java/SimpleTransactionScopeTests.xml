org.springframework.transaction.support java.util.HashSet import java.util.Set import org.junit.Test import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.support.GenericBeanDefinition import org.springframework.context.support.GenericApplicationContext import org.springframework.tests.sample.beans.DerivedTestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.tests.transaction.CallCountingTransactionManager import static static org.junit.Assert.* import class org.springframework.transaction.support.SimpleTransactionScopeTests GenericApplicationContext GenericBeanDefinition GenericBeanDefinition DerivedTestBean TestBean DerivedTestBean DerivedTestBean public public throws decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() try call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() catch instanceof try call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() catch instanceof decl_stmt org.springframework.tests.sample.beans.TestBean = decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = try = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() finally call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() try call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() catch instanceof try call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() catch instanceof TestBean TransactionTemplate TransactionTemplate DerivedTestBean CallCountingTransactionManager GenericBeanDefinition DerivedTestBean GenericApplicationContext GenericBeanDefinition DerivedTestBean decl Set decl Set DerivedTestBean public public throws decl_stmt org.springframework.context.support.GenericApplicationContext = new call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() new decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call GenericBeanDefinition.setPrimary() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.beans.factory.support.GenericBeanDefinition = new call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setBeanClass() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call GenericBeanDefinition.setScope() call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(String,BeanDefinition) call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() decl_stmt org.springframework.tests.transaction.CallCountingTransactionManager = new decl_stmt org.springframework.transaction.support.TransactionTemplate = new decl_stmt java.util.Set < = new < call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) decl_stmt org.springframework.tests.sample.beans.TestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.context.support.GenericApplicationContext.getBeanFactory() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() decl_stmt java.util.Set < = new < decl_stmt org.springframework.transaction.support.TransactionTemplate = new call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call TransactionTemplate.setPropagationBehavior() call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) call org.springframework.transaction.support.TransactionTemplate.execute(TransactionCallback) decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() return call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() call org.springframework.tests.sample.beans.DerivedTestBean.wasDestroyed() return call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator()