org.springframework.web.socket.messaging java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.util.List import java.util.concurrent.CopyOnWriteArrayList import java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import org.junit.Test import org.junit.runner.RunWith import org.junit.runners.Parameterized import org.junit.runners.Parameterized.Parameters import org.springframework.beans.factory.annotation.Autowired import org.springframework.context.annotation.Bean import org.springframework.context.annotation.ComponentScan import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.Scope import org.springframework.context.annotation.ScopedProxyMode import org.springframework.messaging.handler.annotation.MessageExceptionHandler import org.springframework.messaging.handler.annotation.MessageMapping import org.springframework.messaging.simp.annotation.SendToUser import org.springframework.messaging.simp.annotation.SubscribeMapping import org.springframework.messaging.simp.config.MessageBrokerRegistry import org.springframework.messaging.simp.stomp.StompCommand import org.springframework.messaging.support.AbstractSubscribableChannel import org.springframework.messaging.support.ExecutorSubscribableChannel import org.springframework.stereotype.Controller import org.springframework.web.socket.AbstractWebSocketIntegrationTests import org.springframework.web.socket.JettyWebSocketTestServer import org.springframework.web.socket.TextMessage import org.springframework.web.socket.TomcatWebSocketTestServer import org.springframework.web.socket.UndertowTestServer import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.client.jetty.JettyWebSocketClient import org.springframework.web.socket.client.standard.StandardWebSocketClient import org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer import org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration import org.springframework.web.socket.config.annotation.StompEndpointRegistry import org.springframework.web.socket.handler.TextWebSocketHandler import org.springframework.web.socket.server.HandshakeHandler import static static org.junit.Assert.* import static static org.springframework.web.socket.messaging.StompTextMessageBuilder.* import class annotation org.springframework.web.socket.messaging.StompWebSocketIntegrationTests super super extends long = public static = public static return new new new new new new new protected < protected < return new < , TextMessage WebSocketSession SimpleController public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.web.socket.WebSocketSession = new decl_stmt SimpleController = try call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() call SimpleController.latch() finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() WebSocketSession TestClientWebSocketHandler TextMessage TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt TestClientWebSocketHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = try call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() WebSocketSession TextMessage String TestClientWebSocketHandler TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt TestClientWebSocketHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = try call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() decl_stmt java.lang.String = call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() + call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() String TextMessage WebSocketSession String TestClientWebSocketHandler public public throws decl_stmt java.lang.String = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt TestClientWebSocketHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = try call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() decl_stmt java.lang.String = call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() + call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) + call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() TestClientWebSocketHandler String WebSocketSession TextMessage TextMessage String public public throws decl_stmt java.lang.String = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt TestClientWebSocketHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = try call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() decl_stmt java.lang.String = call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() WebSocketSession TestClientWebSocketHandler TextMessage TextMessage String public public throws decl_stmt org.springframework.web.socket.TextMessage = decl_stmt org.springframework.web.socket.TextMessage = decl_stmt TestClientWebSocketHandler = new decl_stmt org.springframework.web.socket.WebSocketSession = try call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() call TestClientWebSocketHandler.latch() decl_stmt java.lang.String = call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call TestClientWebSocketHandler.actual() call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.contains(CharSequence) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) call java.lang.String.endsWith(String) finally call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() call org.springframework.web.socket.WebSocketSession.close() public public public public throw new public public return + public public return + public public return public public return public public return public public throws for : protected protected throws public public public public = = public = = public return new public public return new public public return new