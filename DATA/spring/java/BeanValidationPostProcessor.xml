org.springframework.validation.beanvalidation java.util.Iterator import java.util.Set import javax.validation.ConstraintViolation import javax.validation.Validation import javax.validation.Validator import javax.validation.ValidatorFactory import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanInitializationException import org.springframework.beans.factory.InitializingBean import org.springframework.beans.factory.config.BeanPostProcessor import class org.springframework.validation.beanvalidation.BeanValidationPostProcessor super super implements boolean Validator public public = public public = public public = public public if == = public public throws if ! return public public throws if return decl ConstraintViolation StringBuilder decl Set protected protected decl_stmt java.util.Set < < = if ! call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() call decl Set.isEmpty() decl_stmt java.lang.StringBuilder = new for < < = call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() call decl Set.iterator() decl_stmt ConstraintViolation < = call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call decl ConstraintViolation.getPropertyPath() call decl ConstraintViolation.getPropertyPath() call decl ConstraintViolation.getPropertyPath() call decl ConstraintViolation.getPropertyPath() call decl ConstraintViolation.getPropertyPath() call decl ConstraintViolation.getMessage() call decl ConstraintViolation.getMessage() call decl ConstraintViolation.getMessage() call decl ConstraintViolation.getMessage() call decl ConstraintViolation.getMessage() if call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) throw new call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString()