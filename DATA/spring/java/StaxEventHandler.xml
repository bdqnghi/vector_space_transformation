org.springframework.util.xml java.util.ArrayList import java.util.List import java.util.Map import javax.xml.namespace.QName import javax.xml.stream.Location import javax.xml.stream.XMLEventFactory import javax.xml.stream.XMLEventWriter import javax.xml.stream.XMLStreamException import javax.xml.stream.events.Attribute import javax.xml.stream.events.Namespace import org.xml.sax.Attributes import org.xml.sax.Locator import org.xml.sax.ext.LexicalHandler import class org.springframework.util.xml.StaxEventHandler super super extends XMLEventWriter XMLEventFactory public public if != new protected protected throws protected protected throws decl List decl List protected protected < throws decl_stmt java.util.List < = decl_stmt java.util.List < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() String String decl List private < private < < decl_stmt java.util.List < = new < for < : decl_stmt java.lang.String = decl_stmt java.lang.String = call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return QName decl List private < private < decl_stmt java.util.List < = new < for = < ++ decl_stmt QName = if ! call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return decl List protected protected < throws decl_stmt java.util.List < = call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() call decl List.iterator() protected protected throws protected protected throws protected protected throws protected protected throws protected protected throws protected protected throws protected protected throws public public return public public return public public return - public public return public public return