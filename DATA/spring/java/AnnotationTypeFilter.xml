org.springframework.core.type.filter java.lang.annotation.Annotation import java.lang.annotation.Inherited import org.springframework.core.annotation.AnnotationUtils import org.springframework.core.type.AnnotationMetadata import org.springframework.core.type.classreading.MetadataReader import org.springframework.util.ClassUtils import class org.springframework.core.type.filter.AnnotationTypeFilter super super extends decl Class boolean AnnotationMetadata protected protected decl_stmt org.springframework.core.type.AnnotationMetadata = return call org.springframework.core.type.AnnotationMetadata.hasAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasAnnotation(String) || && call org.springframework.core.type.AnnotationMetadata.hasMetaAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasMetaAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasMetaAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasMetaAnnotation(String) call org.springframework.core.type.AnnotationMetadata.hasMetaAnnotation(String) protected protected return protected protected return decl Class protected protected if return else if try decl_stmt java.lang.Class < = return : call decl Class.getAnnotation() call decl Class.getAnnotation() call decl Class.getAnnotation() call decl Class.getAnnotation() call decl Class.getAnnotation() != catch return