org.springframework.web.servlet.resource java.util.ArrayList import java.util.HashMap import java.util.List import java.util.Map import org.hamcrest.Matchers import org.junit.Before import org.junit.Test import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockServletContext import org.springframework.web.context.support.AnnotationConfigWebApplicationContext import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping import static static org.junit.Assert.* import class org.springframework.web.servlet.resource.ResourceUrlProviderTests ResourceHttpRequestHandler decl Map decl List ResourceUrlProvider public public throws new new String public public decl_stmt java.lang.String = String MockHttpServletRequest public public decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setContextPath(String) call org.springframework.mock.web.MockHttpServletRequest.setContextPath(String) call org.springframework.mock.web.MockHttpServletRequest.setContextPath(String) call org.springframework.mock.web.MockHttpServletRequest.setContextPath(String) call org.springframework.mock.web.MockHttpServletRequest.setContextPath(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) decl_stmt java.lang.String = decl List String decl Map VersionResourceResolver public public decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt org.springframework.web.servlet.resource.VersionResourceResolver = new call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt java.lang.String = decl List String ResourceHttpRequestHandler decl Map VersionResourceResolver public public throws decl_stmt org.springframework.web.servlet.resource.ResourceHttpRequestHandler = new call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setLocations(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setLocations(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setLocations(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setLocations(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setLocations(List) decl_stmt java.util.Map < = new <> call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() new decl_stmt org.springframework.web.servlet.resource.VersionResourceResolver = new call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) call org.springframework.web.servlet.resource.VersionResourceResolver.setStrategyMap(Map) decl_stmt java.util.List < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setResourceResolvers(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setResourceResolvers(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setResourceResolvers(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setResourceResolvers(List) call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.setResourceResolvers(List) decl_stmt java.lang.String = ResourceUrlProvider AnnotationConfigWebApplicationContext public public throws decl_stmt org.springframework.web.context.support.AnnotationConfigWebApplicationContext = new call AnnotationConfigWebApplicationContext.setServletContext() call AnnotationConfigWebApplicationContext.setServletContext() call AnnotationConfigWebApplicationContext.setServletContext() call AnnotationConfigWebApplicationContext.setServletContext() call AnnotationConfigWebApplicationContext.setServletContext() new call org.springframework.web.context.support.AnnotationConfigWebApplicationContext.register(Class) call org.springframework.web.context.support.AnnotationConfigWebApplicationContext.register(Class) call org.springframework.web.context.support.AnnotationConfigWebApplicationContext.register(Class) call org.springframework.web.context.support.AnnotationConfigWebApplicationContext.register(Class) call org.springframework.web.context.support.AnnotationConfigWebApplicationContext.register(Class) call AnnotationConfigWebApplicationContext.refresh() call AnnotationConfigWebApplicationContext.refresh() call AnnotationConfigWebApplicationContext.refresh() call AnnotationConfigWebApplicationContext.refresh() call AnnotationConfigWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.resource.ResourceUrlProvider = call AnnotationConfigWebApplicationContext.getBean() call AnnotationConfigWebApplicationContext.getBean() call AnnotationConfigWebApplicationContext.getBean() call AnnotationConfigWebApplicationContext.getBean() call AnnotationConfigWebApplicationContext.getBean() call org.springframework.web.servlet.resource.ResourceUrlProvider.getHandlerMap() call org.springframework.web.servlet.resource.ResourceUrlProvider.getHandlerMap() call org.springframework.web.servlet.resource.ResourceUrlProvider.getHandlerMap() call org.springframework.web.servlet.resource.ResourceUrlProvider.getHandlerMap() call org.springframework.web.servlet.resource.ResourceUrlProvider.getHandlerMap() call org.springframework.web.servlet.resource.ResourceUrlProvider.isAutodetect() call org.springframework.web.servlet.resource.ResourceUrlProvider.isAutodetect() call org.springframework.web.servlet.resource.ResourceUrlProvider.isAutodetect() call org.springframework.web.servlet.resource.ResourceUrlProvider.isAutodetect() call org.springframework.web.servlet.resource.ResourceUrlProvider.isAutodetect() ResourceHttpRequestHandler decl HashMap SimpleUrlHandlerMapping public public decl_stmt org.springframework.web.servlet.resource.ResourceHttpRequestHandler = new decl_stmt HashMap < = new <> call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() call decl HashMap.put() decl_stmt org.springframework.web.servlet.handler.SimpleUrlHandlerMapping = new call org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.setUrlMap(Map) call org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.setUrlMap(Map) call org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.setUrlMap(Map) call org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.setUrlMap(Map) call org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.setUrlMap(Map) return public public return new