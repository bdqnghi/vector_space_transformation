org.springframework.messaging.simp.stomp java.nio.charset.Charset import java.util.Arrays import java.util.Collections import java.util.List import java.util.Map import java.util.Set import java.util.concurrent.atomic.AtomicLong import org.springframework.messaging.Message import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.support.MessageHeaderAccessor import org.springframework.util.Assert import org.springframework.util.MimeType import org.springframework.util.MimeTypeUtils import org.springframework.util.StringUtils import class org.springframework.messaging.simp.stomp.StompHeaderAccessor super super extends String String String String String String String String String String String String AtomicLong String String String String String String String decl long StompCommand String if == return decl_stmt java.lang.String = if != = if != decl_stmt StompCommand = if = if != else if || = if != else if if != if != protected protected < return decl Map < < < < decl_stmt java.util.Map < < = < < return != : , < > public public + if == else if ! throw new + return StompCommand String public public + decl_stmt StompCommand = if == || else if ! throw new + if == decl_stmt java.lang.String = + + call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() call java.util.concurrent.atomic.AtomicLong.getAndIncrement() public public return public public return == String decl String public public decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = return new public public String public < public < decl_stmt java.lang.String = return != : > public public public public return public public public public public public String SimpMessageType private private decl_stmt java.lang.String = if != if != && else decl_stmt SimpMessageType = if || public public if return return public public public public new public public public public return public public public public return public public public public return public public String private private decl_stmt java.lang.String = if != && ! new StompPasscode public public decl_stmt StompPasscode = return != : public public public public return public public public public return public public return public public public public return public public public public return public public public public if return + + + + else if return + + else if return + + + else if return + != + : + else if return + + else if return + != + : + else return StringBuilder StompCommand public public if return + decl_stmt StompCommand = if == return decl_stmt java.lang.StringBuilder = new call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call StompCommand.name() call StompCommand.name() call StompCommand.name() call StompCommand.name() call StompCommand.name() if != call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) if call StompCommand.isBodyAllowed() call StompCommand.isBodyAllowed() call StompCommand.isBodyAllowed() call StompCommand.isBodyAllowed() call StompCommand.isBodyAllowed() call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) call java.lang.StringBuilder.append(boolean) return call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() call java.lang.StringBuilder.toString() private private return + String Charset decl byte private private decl_stmt byte = decl_stmt java.lang.String = != + : if == || == || ! return decl_stmt java.nio.charset.Charset = = != : return < + + new : + + new + public static public static return new public static public static < < return new public static public static return new public static public static < return new public static public static < return StompPasscode public static public static < decl_stmt StompPasscode = return != : decl List String public static public static < < if decl_stmt java.util.List < = decl_stmt java.lang.String = != call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() : return return public public return