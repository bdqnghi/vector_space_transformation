org.springframework.web.servlet.config.annotation java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import org.springframework.beans.factory.BeanFactoryUtils import org.springframework.beans.factory.BeanInitializationException import org.springframework.context.ApplicationContext import org.springframework.core.Ordered import org.springframework.util.CollectionUtils import org.springframework.util.ObjectUtils import org.springframework.web.accept.ContentNegotiationManager import org.springframework.web.servlet.View import org.springframework.web.servlet.ViewResolver import org.springframework.web.servlet.view.BeanNameViewResolver import org.springframework.web.servlet.view.ContentNegotiatingViewResolver import org.springframework.web.servlet.view.InternalResourceViewResolver import org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer import org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver import org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer import org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver import org.springframework.web.servlet.view.script.ScriptTemplateConfigurer import org.springframework.web.servlet.view.script.ScriptTemplateViewResolver import org.springframework.web.servlet.view.tiles3.TilesConfigurer import org.springframework.web.servlet.view.tiles3.TilesViewResolver import class org.springframework.web.servlet.config.annotation.ViewResolverRegistry ContentNegotiatingViewResolver decl List ContentNegotiationManager Integer ApplicationContext protected protected = protected protected = public public return != || ! public public public public decl List private private = != : if != if ! if ! decl_stmt java.util.List < = new < call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else = new public public return InternalResourceViewResolver public public decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new call InternalResourceViewResolver.setPrefix() call InternalResourceViewResolver.setPrefix() call InternalResourceViewResolver.setPrefix() call InternalResourceViewResolver.setPrefix() call InternalResourceViewResolver.setPrefix() call InternalResourceViewResolver.setSuffix() call InternalResourceViewResolver.setSuffix() call InternalResourceViewResolver.setSuffix() call InternalResourceViewResolver.setSuffix() call InternalResourceViewResolver.setSuffix() return new TilesRegistration public public if != && ! throw new + + decl_stmt TilesRegistration = new call TilesRegistration.getViewResolver() call TilesRegistration.getViewResolver() call TilesRegistration.getViewResolver() call TilesRegistration.getViewResolver() call TilesRegistration.getViewResolver() return FreeMarkerRegistration public public if != && ! throw new + + + decl_stmt FreeMarkerRegistration = new call FreeMarkerRegistration.getViewResolver() call FreeMarkerRegistration.getViewResolver() call FreeMarkerRegistration.getViewResolver() call FreeMarkerRegistration.getViewResolver() call FreeMarkerRegistration.getViewResolver() return VelocityRegistration public public if != && ! throw new + + + decl_stmt VelocityRegistration = new call VelocityRegistration.getViewResolver() call VelocityRegistration.getViewResolver() call VelocityRegistration.getViewResolver() call VelocityRegistration.getViewResolver() call VelocityRegistration.getViewResolver() return GroovyMarkupRegistration public public if != && ! throw new + + + decl_stmt GroovyMarkupRegistration = new call GroovyMarkupRegistration.getViewResolver() call GroovyMarkupRegistration.getViewResolver() call GroovyMarkupRegistration.getViewResolver() call GroovyMarkupRegistration.getViewResolver() call GroovyMarkupRegistration.getViewResolver() return ScriptRegistration public public if != && ! throw new + + + decl_stmt ScriptRegistration = new call ScriptRegistration.getViewResolver() call ScriptRegistration.getViewResolver() call ScriptRegistration.getViewResolver() call ScriptRegistration.getViewResolver() call ScriptRegistration.getViewResolver() return BeanNameViewResolver public public decl_stmt org.springframework.web.servlet.view.BeanNameViewResolver = new public public if instanceof throw new + public public = protected protected < return ! protected protected return != : protected < protected < if != return > else return