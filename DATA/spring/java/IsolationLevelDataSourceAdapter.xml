org.springframework.jdbc.datasource java.sql.Connection import java.sql.SQLException import org.springframework.core.Constants import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.support.DefaultTransactionDefinition import org.springframework.transaction.support.TransactionSynchronizationManager import class org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter super super extends Integer Constants public final public final throws if == || ! throw new call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) public public if ! call org.springframework.core.Constants.getValues(String) call org.springframework.core.Constants.getValues(String) call org.springframework.core.Constants.getValues(String) call org.springframework.core.Constants.getValues(String) call org.springframework.core.Constants.getValues(String) throw new = != : protected protected return Boolean Integer Connection protected protected throws decl_stmt sun.rmi.transport.Connection = decl_stmt java.lang.Boolean = if != call sun.rmi.transport.Connection.setReadOnly(boolean) call sun.rmi.transport.Connection.setReadOnly(boolean) call sun.rmi.transport.Connection.setReadOnly(boolean) call sun.rmi.transport.Connection.setReadOnly(boolean) call sun.rmi.transport.Connection.setReadOnly(boolean) decl_stmt java.lang.Integer = if != call sun.rmi.transport.Connection.setTransactionIsolation(int) call sun.rmi.transport.Connection.setTransactionIsolation(int) call sun.rmi.transport.Connection.setTransactionIsolation(int) call sun.rmi.transport.Connection.setTransactionIsolation(int) call sun.rmi.transport.Connection.setTransactionIsolation(int) return Integer protected protected decl_stmt java.lang.Integer = if == = return boolean protected protected decl_stmt boolean = return :