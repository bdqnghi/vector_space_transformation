org.springframework.ui.freemarker java.io.File import java.io.IOException import java.util.ArrayList import java.util.Arrays import java.util.LinkedList import java.util.List import java.util.Map import java.util.Properties import freemarker.cache.FileTemplateLoader import freemarker.cache.MultiTemplateLoader import freemarker.cache.TemplateLoader import freemarker.template.Configuration import freemarker.template.SimpleHash import freemarker.template.TemplateException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.core.io.DefaultResourceLoader import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.support.PropertiesLoaderUtils import org.springframework.util.CollectionUtils import class org.springframework.ui.freemarker.FreeMarkerConfigurationFactory ResourceLoader decl List String decl Map Properties boolean decl String Resource Log decl List decl List public public = public public = public public < = public public = public public = public public = public public = new public public = public public = protected protected return public public = protected protected return decl List TemplateLoader Configuration Properties public public throws decl_stmt Configuration = decl_stmt java.util.Properties = new if != if call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.isInfoEnabled() call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() + if != call Properties.putAll() call Properties.putAll() call Properties.putAll() call Properties.putAll() call Properties.putAll() if ! call Properties.isEmpty() call Properties.isEmpty() call Properties.isEmpty() call Properties.isEmpty() call Properties.isEmpty() call Configuration.setSettings() call Configuration.setSettings() call Configuration.setSettings() call Configuration.setSettings() call Configuration.setSettings() if ! call Configuration.setAllSharedVariables() call Configuration.setAllSharedVariables() call Configuration.setAllSharedVariables() call Configuration.setAllSharedVariables() call Configuration.setAllSharedVariables() new call Configuration.getObjectWrapper() call Configuration.getObjectWrapper() call Configuration.getObjectWrapper() call Configuration.getObjectWrapper() call Configuration.getObjectWrapper() if != call Configuration.setDefaultEncoding() call Configuration.setDefaultEncoding() call Configuration.setDefaultEncoding() call Configuration.setDefaultEncoding() call Configuration.setDefaultEncoding() decl_stmt java.util.List < = new < if != call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() if != for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if != call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() decl_stmt TemplateLoader = if != call Configuration.setTemplateLoader() call Configuration.setTemplateLoader() call Configuration.setTemplateLoader() call Configuration.setTemplateLoader() call Configuration.setTemplateLoader() return protected protected throws return new Resource File protected protected if try decl_stmt org.springframework.core.io.Resource = decl_stmt File = call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() call org.springframework.core.io.Resource.getFile() if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() call File.getAbsolutePath() + return new catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return new else call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() return new protected protected < int decl TemplateLoader protected protected < decl_stmt int = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() switch case call Log.info() call Log.info() call Log.info() call Log.info() call Log.info() return case return call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() default: decl_stmt TemplateLoader = call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new return new protected protected throws