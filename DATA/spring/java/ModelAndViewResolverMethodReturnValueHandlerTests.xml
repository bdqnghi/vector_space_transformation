org.springframework.web.servlet.mvc.method.annotation java.lang.reflect.Method import java.util.ArrayList import java.util.List import org.junit.Before import org.junit.Test import org.springframework.core.MethodParameter import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.tests.sample.beans.TestBean import org.springframework.ui.ExtendedModelMap import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.context.request.ServletWebRequest import org.springframework.web.method.support.ModelAndViewContainer import org.springframework.web.servlet.ModelAndView import org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver import static static org.junit.Assert.* import class org.springframework.web.servlet.mvc.method.annotation.ModelAndViewResolverMethodReturnValueHandlerTests decl List ModelAndViewResolverMethodReturnValueHandler ServletWebRequest ModelAndViewContainer public public = new < = new = new = new new MethodParameter TestBean public public throws decl_stmt org.springframework.core.MethodParameter = new - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt org.springframework.tests.sample.beans.TestBean = new call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() call ModelAndViewContainer.isRequestHandled() MethodParameter = public = public throws decl_stmt org.springframework.core.MethodParameter = new - call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() MethodParameter public public throws decl_stmt org.springframework.core.MethodParameter = new - call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call org.springframework.web.method.support.ModelAndViewContainer.getView() call org.springframework.web.method.support.ModelAndViewContainer.getView() call org.springframework.web.method.support.ModelAndViewContainer.getView() call org.springframework.web.method.support.ModelAndViewContainer.getView() call org.springframework.web.method.support.ModelAndViewContainer.getView() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getViewName() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() call org.springframework.web.method.support.ModelAndViewContainer.getModel() MethodParameter = public = public throws decl_stmt org.springframework.core.MethodParameter = new - call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() MethodParameter public public throws decl_stmt org.springframework.core.MethodParameter = new - call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() call ModelAndViewResolverMethodReturnValueHandler.handleReturnValue() new call org.springframework.web.method.support.ModelAndViewContainer.containsAttribute(String) call org.springframework.web.method.support.ModelAndViewContainer.containsAttribute(String) call org.springframework.web.method.support.ModelAndViewContainer.containsAttribute(String) call org.springframework.web.method.support.ModelAndViewContainer.containsAttribute(String) call org.springframework.web.method.support.ModelAndViewContainer.containsAttribute(String) private private return private private return public public if != && return new else return