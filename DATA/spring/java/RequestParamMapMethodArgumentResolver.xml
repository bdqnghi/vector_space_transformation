org.springframework.web.method.annotation java.util.LinkedHashMap import java.util.Map import org.springframework.core.MethodParameter import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MultiValueMap import org.springframework.util.StringUtils import org.springframework.web.bind.annotation.RequestParam import org.springframework.web.bind.support.WebDataBinderFactory import org.springframework.web.context.request.NativeWebRequest import org.springframework.web.method.support.HandlerMethodArgumentResolver import org.springframework.web.method.support.ModelAndViewContainer import class org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver super super implements RequestParam public public decl_stmt RequestParam = if != if return ! call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() call RequestParam.name() return decl Map decl Class decl Map public public throws decl_stmt java.lang.Class < = decl_stmt java.util.Map < = if decl_stmt org.springframework.util.MultiValueMap < = new < call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() for : call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() call decl Map.add() return else decl_stmt java.util.Map < = new < call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() for < : call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() call decl Map.entrySet() if > call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() return