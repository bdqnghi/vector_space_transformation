org.springframework.cache.transaction java.util.concurrent.Callable import org.springframework.cache.Cache import org.springframework.transaction.support.TransactionSynchronizationAdapter import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.util.Assert import class org.springframework.cache.transaction.TransactionAwareCacheDecorator super super implements Cache public public return public public return public public return public < public < < return public < public < < return public public final final final final if new public public call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) else public public call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) call org.springframework.cache.Cache.put(Object,Object) public public final final final final return public public final final if new public public call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) else public public call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) call org.springframework.cache.Cache.evict(Object) public public if new public public call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() else public public call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear() call org.springframework.cache.Cache.clear()