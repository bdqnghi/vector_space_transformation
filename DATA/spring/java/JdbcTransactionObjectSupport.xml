org.springframework.jdbc.datasource java.sql.SQLException import java.sql.Savepoint import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.transaction.CannotCreateTransactionException import org.springframework.transaction.NestedTransactionNotSupportedException import org.springframework.transaction.SavepointManager import org.springframework.transaction.TransactionException import org.springframework.transaction.TransactionSystemException import org.springframework.transaction.TransactionUsageException import org.springframework.transaction.support.SmartTransactionObject import class org.springframework.jdbc.datasource.JdbcTransactionObjectSupport super super implements Log Integer ConnectionHolder boolean public public = public public return public public return != public public = public public return public public = public public return public public ConnectionHolder public public throws decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = try if ! call org.springframework.jdbc.datasource.ConnectionHolder.supportsSavepoints() call org.springframework.jdbc.datasource.ConnectionHolder.supportsSavepoints() call org.springframework.jdbc.datasource.ConnectionHolder.supportsSavepoints() call org.springframework.jdbc.datasource.ConnectionHolder.supportsSavepoints() call org.springframework.jdbc.datasource.ConnectionHolder.supportsSavepoints() throw new return call org.springframework.jdbc.datasource.ConnectionHolder.createSavepoint() call org.springframework.jdbc.datasource.ConnectionHolder.createSavepoint() call org.springframework.jdbc.datasource.ConnectionHolder.createSavepoint() call org.springframework.jdbc.datasource.ConnectionHolder.createSavepoint() call org.springframework.jdbc.datasource.ConnectionHolder.createSavepoint() catch throw new ConnectionHolder public public throws decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = try call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() catch throw new ConnectionHolder public public throws decl_stmt org.springframework.jdbc.datasource.ConnectionHolder = try call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() call org.springframework.jdbc.datasource.ConnectionHolder.getConnection() catch call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() protected protected throws if ! throw new if ! throw new return