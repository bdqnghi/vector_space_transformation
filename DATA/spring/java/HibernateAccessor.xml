org.springframework.orm.hibernate3 java.sql.SQLException import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.hibernate.FlushMode import org.hibernate.HibernateException import org.hibernate.Interceptor import org.hibernate.JDBCException import org.hibernate.Session import org.hibernate.SessionFactory import org.hibernate.exception.GenericJDBCException import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.InitializingBean import org.springframework.core.Constants import org.springframework.dao.DataAccessException import org.springframework.jdbc.support.SQLExceptionTranslator import class annotation org.springframework.orm.hibernate3.HibernateAccessor super super implements BeanFactory int int SQLExceptionTranslator SessionFactory decl String int int int SQLExceptionTranslator Log int Constants Object public public = public public return public public = public public = public public throws if instanceof if == throw new return return public public = public public return public public call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) call org.springframework.core.Constants.asNumber(String) public public = public public return public public = new public public = public public return public public = public public if == throw new FlushMode protected protected if == if decl_stmt FlushMode = if ! call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() call FlushMode.lessThan() return else else if == if decl_stmt FlushMode = if ! call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() return else else if == if decl_stmt FlushMode = if call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() || call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() return else else if == if decl_stmt FlushMode = if ! call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() call FlushMode.equals() return else return protected protected throws if == || ! && != call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() public public if != && instanceof return else if == return return protected protected return + SQLExceptionTranslator protected protected decl_stmt org.springframework.jdbc.support.SQLExceptionTranslator = if == = return call SQLExceptionTranslator.translate() call SQLExceptionTranslator.translate() call SQLExceptionTranslator.translate() call SQLExceptionTranslator.translate() call SQLExceptionTranslator.translate() protected synchronized protected synchronized if == = return decl String protected protected decl_stmt java.lang.String = if != for : decl String protected protected decl_stmt java.lang.String = if != for :