org.springframework.context.event java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import java.util.ArrayList import java.util.Arrays import java.util.LinkedHashSet import java.util.List import java.util.Set import java.util.concurrent.CountDownLatch import java.util.concurrent.TimeUnit import org.junit.After import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.aop.framework.Advised import org.springframework.aop.support.AopUtils import org.springframework.beans.factory.BeanCreationException import org.springframework.beans.factory.BeanInitializationException import org.springframework.beans.factory.ObjectFactory import org.springframework.beans.factory.annotation.Autowired import org.springframework.context.ConfigurableApplicationContext import org.springframework.context.PayloadApplicationEvent import org.springframework.context.annotation.AnnotationConfigApplicationContext import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.context.annotation.Import import org.springframework.context.annotation.Scope import org.springframework.context.annotation.ScopedProxyMode import org.springframework.context.event.test.AbstractIdentifiable import org.springframework.context.event.test.AnotherTestEvent import org.springframework.context.event.test.EventCollector import org.springframework.context.event.test.GenericEventPojo import org.springframework.context.event.test.Identifiable import org.springframework.context.event.test.TestEvent import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.core.annotation.AliasFor import org.springframework.core.annotation.Order import org.springframework.scheduling.annotation.Async import org.springframework.scheduling.annotation.EnableAsync import org.springframework.stereotype.Component import org.springframework.util.Assert import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import class org.springframework.context.event.AnnotationDrivenEventListenerTests ExpectedException EventCollector ConfigurableApplicationContext CountDownLatch public public if != TestEventListener TestEvent public public decl_stmt TestEvent = new decl_stmt TestEventListener = TestEventListener TestEvent public public = new decl_stmt TestEvent = new decl_stmt TestEventListener = = MetaAnnotationListenerTestBean TestEvent public public decl_stmt MetaAnnotationListenerTestBean = decl_stmt TestEvent = new ContextEventListener decl List decl List public public decl_stmt ContextEventListener = decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() decl_stmt java.util.List < = call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() TestEventListener AnotherTestEvent ReplyEventListener public public decl_stmt AnotherTestEvent = new decl_stmt ReplyEventListener = decl_stmt TestEventListener = new call AnotherTestEvent.getId() call AnotherTestEvent.getId() call AnotherTestEvent.getId() call AnotherTestEvent.getId() call AnotherTestEvent.getId() TestEventListener AnotherTestEvent ReplyEventListener public public decl_stmt AnotherTestEvent = new decl_stmt ReplyEventListener = decl_stmt TestEventListener = TestEventListener AnotherTestEvent ReplyEventListener public public decl_stmt AnotherTestEvent = new new decl_stmt ReplyEventListener = decl_stmt TestEventListener = TestEventListener AnotherTestEvent ReplyEventListener decl Set public public decl_stmt java.util.Set < = new <> call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt AnotherTestEvent = new decl_stmt ReplyEventListener = decl_stmt TestEventListener = TestEventListener AnotherTestEvent ReplyEventListener public public decl_stmt AnotherTestEvent = new decl_stmt ReplyEventListener = decl_stmt TestEventListener = SimpleService TestEvent public public throws decl_stmt org.springframework.context.event.SimpleService = instanceof call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() new call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() decl_stmt TestEvent = new call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() call SimpleService.getId() AnnotatedSimpleService TestEvent public public throws decl_stmt AnnotatedSimpleService = instanceof call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() new call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() decl_stmt TestEvent = new call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() call AnnotatedSimpleService.getId() CglibProxyTestBean TestEvent public public throws decl_stmt CglibProxyTestBean = call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() new call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() decl_stmt TestEvent = new call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() call CglibProxyTestBean.getId() public public throws try catch instanceof CustomScope CustomScopeTestBean TestEvent public public throws decl_stmt CustomScope = new decl_stmt CustomScopeTestBean = call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() new call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() = new = call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() decl_stmt TestEvent = new call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() call CustomScopeTestBean.getId() try = new catch instanceof AsyncEventListener String AnotherTestEvent public public throws decl_stmt java.lang.String = decl_stmt AnotherTestEvent = new decl_stmt AsyncEventListener = SimpleService String AnotherTestEvent public public throws decl_stmt java.lang.String = decl_stmt AnotherTestEvent = new decl_stmt org.springframework.context.event.SimpleService = SimpleService String AnotherTestEvent public public throws decl_stmt java.lang.String = decl_stmt AnotherTestEvent = new decl_stmt org.springframework.context.event.SimpleService = ExceptionEventListener TestEvent public public decl_stmt TestEvent = new decl_stmt ExceptionEventListener = try catch ExceptionEventListener AnotherTestEvent public public throws decl_stmt AnotherTestEvent = new decl_stmt ExceptionEventListener = TestEventListener public public decl_stmt TestEventListener = TestEventListener public public decl_stmt TestEventListener = TestEventListener AnotherTestEvent ReplyEventListener public public decl_stmt AnotherTestEvent = new decl_stmt ReplyEventListener = decl_stmt TestEventListener = GenericEventListener public public decl_stmt GenericEventListener = ResolvableTypeEventListener decl GenericEventPojo public public decl_stmt ResolvableTypeEventListener = decl_stmt org.springframework.context.event.test.GenericEventPojo < = new <> ResolvableTypeEventListener decl GenericEventPojo public public decl_stmt ResolvableTypeEventListener = decl_stmt org.springframework.context.event.test.GenericEventPojo < = new <> TestEventListener long TestEvent public public decl_stmt long = decl_stmt TestEvent = new decl_stmt TestEventListener = TestEventListener TestEvent long public public decl_stmt long = decl_stmt TestEvent = new decl_stmt TestEventListener = OrderedTestListener public public decl_stmt OrderedTestListener = call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() call OrderedTestListener.order() decl List private private < decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() decl List private private < decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() AnnotationConfigApplicationContext private private < decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() = private private return call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() call ConfigurableApplicationContext.getBean() public public return new public public return new public public return new public public return new protected protected public public public public public public public public public public public public return String public public if == return else if instanceof decl_stmt java.lang.String = if call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return else return new return public public if throw new public public if throw new public public ! public public public public ! public public public public ! public public public public private private public public public public < public public < = public = public = public = public public public public public public public - public - public public public public public < if == = return public public return public public public public return public public return