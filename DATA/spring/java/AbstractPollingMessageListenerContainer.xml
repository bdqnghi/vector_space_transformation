org.springframework.jms.listener javax.jms.Connection import javax.jms.Destination import javax.jms.JMSException import javax.jms.Message import javax.jms.MessageConsumer import javax.jms.Session import org.springframework.jms.connection.ConnectionFactoryUtils import org.springframework.jms.connection.JmsResourceHolder import org.springframework.jms.connection.SingleConnectionFactory import org.springframework.jms.support.JmsUtils import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionStatus import org.springframework.transaction.support.DefaultTransactionDefinition import org.springframework.transaction.support.ResourceTransactionManager import org.springframework.transaction.support.TransactionSynchronizationManager import org.springframework.transaction.support.TransactionSynchronizationUtils import class org.springframework.jms.listener.AbstractPollingMessageListenerContainer super super extends long MessageListenerContainerResourceFactory DefaultTransactionDefinition boolean Boolean long PlatformTransactionManager public public = public public = protected final protected final return public public public public public public = protected protected return public public if ! && instanceof && ! if == Destination protected protected throws decl_stmt javax.print.attribute.standard.Destination = if == = return TransactionStatus boolean protected protected throws if != decl_stmt org.springframework.transaction.TransactionStatus = decl_stmt boolean try = catch throw catch throw catch throw return else return Session MessageConsumer Connection boolean MessageConsumer Session boolean Message Connection protected protected throws decl_stmt sun.rmi.transport.Connection = decl_stmt sun.security.pkcs11.Session = decl_stmt MessageConsumer = try decl_stmt sun.security.pkcs11.Session = decl_stmt boolean = if == = = != if == decl_stmt sun.rmi.transport.Connection if = else = = call Connection.start() call Connection.start() call Connection.start() call Connection.start() call Connection.start() = = decl_stmt MessageConsumer = if == = = decl_stmt org.springframework.messaging.Message = if != if + call Message.getClass() call Message.getClass() call Message.getClass() call Message.getClass() call Message.getClass() + + + + : + + + decl_stmt boolean = ! && && ! if new try catch if != if + if instanceof throw finally if return else if + + + : + + + if return finally JmsResourceHolder protected protected if ! return decl_stmt org.springframework.jms.connection.JmsResourceHolder = return == || instanceof || ! call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) call org.springframework.jms.connection.JmsResourceHolder.containsSession(Session) Session protected protected if == decl_stmt sun.security.pkcs11.Session = = ! call Session.getClass() call Session.getClass() call Session.getClass() call Session.getClass() call Session.getClass() return private private try catch throw catch throw protected protected throws return < : protected protected protected protected protected protected return protected protected return public public return public public return Connection public public throws if decl_stmt sun.rmi.transport.Connection = return new else return public public throws return public public return