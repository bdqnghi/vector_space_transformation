org.springframework.transaction.interceptor java.io.Serializable import java.util.Properties import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.aop.framework.ProxyFactory import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.transaction.PlatformTransactionManager import org.springframework.transaction.TransactionDefinition import org.springframework.transaction.TransactionException import org.springframework.transaction.TransactionStatus import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.transaction.interceptor.TransactionInterceptorTests super super extends ExpectedException ProxyFactory TransactionInterceptor protected protected throws decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = new call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() return call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) ProxyFactory TransactionInterceptor protected protected decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = new call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() return call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) PlatformTransactionManager Properties TransactionInterceptor public public throws decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call TransactionInterceptor.setTransactionAttributes() call TransactionInterceptor.setTransactionAttributes() call TransactionInterceptor.setTransactionAttributes() call TransactionInterceptor.setTransactionAttributes() call TransactionInterceptor.setTransactionAttributes() decl_stmt org.springframework.transaction.PlatformTransactionManager = new call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() = call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() instanceof call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() PlatformTransactionManager Properties CompositeTransactionAttributeSource TransactionInterceptor NameMatchTransactionAttributeSource NameMatchTransactionAttributeSource public public throws decl_stmt org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) decl_stmt org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource = new = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) call org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.setProperties(Properties) decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = new call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() call TransactionInterceptor.setTransactionAttributeSources() new decl_stmt org.springframework.transaction.PlatformTransactionManager = new call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() = call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() call TransactionInterceptor.getTransactionManager() instanceof call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() instanceof decl_stmt org.springframework.transaction.interceptor.CompositeTransactionAttributeSource = call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call TransactionInterceptor.getTransactionAttributeSource() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() instanceof call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() call CompositeTransactionAttributeSource.getTransactionAttributeSources() instanceof TransactionInterceptor PlatformTransactionManager public public decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() new TransactionInterceptor PlatformTransactionManager public public decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() TransactionInterceptor BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() DefaultTransactionAttribute TransactionInterceptor BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() PlatformTransactionManager TransactionInterceptor PlatformTransactionManager DefaultTransactionAttribute BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() PlatformTransactionManager DefaultTransactionAttribute TransactionInterceptor BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() DefaultTransactionAttribute TransactionInterceptor PlatformTransactionManager BeanFactory public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() PlatformTransactionManager BeanFactory DefaultTransactionAttribute PlatformTransactionManager TransactionInterceptor PlatformTransactionManager public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) call org.springframework.transaction.interceptor.DefaultTransactionAttribute.setQualifier(String) decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() PlatformTransactionManager BeanFactory DefaultTransactionAttribute PlatformTransactionManager TransactionInterceptor PlatformTransactionManager public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.PlatformTransactionManager = decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() PlatformTransactionManager BeanFactory DefaultTransactionAttribute PlatformTransactionManager TransactionInterceptor PlatformTransactionManager public public decl_stmt org.springframework.beans.factory.BeanFactory = decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = decl_stmt org.springframework.transaction.PlatformTransactionManager = call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) call org.springframework.beans.factory.BeanFactory.getBean(String) decl_stmt org.springframework.transaction.interceptor.DefaultTransactionAttribute = new decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() decl_stmt org.springframework.transaction.PlatformTransactionManager = call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() call TransactionInterceptor.determineTransactionManager() TransactionInterceptor private private decl_stmt org.springframework.transaction.interceptor.TransactionInterceptor = new if != call TransactionInterceptor.setBeanFactory() call TransactionInterceptor.setBeanFactory() call TransactionInterceptor.setBeanFactory() call TransactionInterceptor.setBeanFactory() call TransactionInterceptor.setBeanFactory() if != call TransactionInterceptor.setTransactionManagerBeanName() call TransactionInterceptor.setTransactionManagerBeanName() call TransactionInterceptor.setTransactionManagerBeanName() call TransactionInterceptor.setTransactionManagerBeanName() call TransactionInterceptor.setTransactionManagerBeanName() if != call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionManager() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() call TransactionInterceptor.setTransactionAttributeSource() new call TransactionInterceptor.afterPropertiesSet() call TransactionInterceptor.afterPropertiesSet() call TransactionInterceptor.afterPropertiesSet() call TransactionInterceptor.afterPropertiesSet() call TransactionInterceptor.afterPropertiesSet() return private private return private private return private private return PlatformTransactionManager private private decl_stmt org.springframework.transaction.PlatformTransactionManager = return public public throws throw new public public throws throw new public public throws throw new