org.springframework.web.context.support org.junit.Test import org.springframework.core.env.ConfigurableEnvironment import org.springframework.core.env.MutablePropertySources import org.springframework.core.env.PropertySource import org.springframework.core.env.StandardEnvironment import org.springframework.tests.mock.jndi.SimpleNamingContextBuilder import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import class org.springframework.web.context.support.StandardServletEnvironmentTests MutablePropertySources ConfigurableEnvironment public public throws decl_stmt org.springframework.core.env.ConfigurableEnvironment = new decl_stmt org.springframework.core.env.MutablePropertySources = call org.springframework.core.env.ConfigurableEnvironment.getPropertySources() call org.springframework.core.env.ConfigurableEnvironment.getPropertySources() call org.springframework.core.env.ConfigurableEnvironment.getPropertySources() call org.springframework.core.env.ConfigurableEnvironment.getPropertySources() call org.springframework.core.env.ConfigurableEnvironment.getPropertySources() call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.precedenceOf(PropertySource) call org.springframework.core.env.MutablePropertySources.size() call org.springframework.core.env.MutablePropertySources.size() call org.springframework.core.env.MutablePropertySources.size() call org.springframework.core.env.MutablePropertySources.size() call org.springframework.core.env.MutablePropertySources.size()