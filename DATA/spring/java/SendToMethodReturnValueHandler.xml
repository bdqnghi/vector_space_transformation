org.springframework.messaging.simp.annotation.support java.lang.annotation.Annotation import java.security.Principal import java.util.Map import org.springframework.core.MethodParameter import org.springframework.core.annotation.AnnotatedElementUtils import org.springframework.core.annotation.AnnotationUtils import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageHeaders import org.springframework.messaging.handler.DestinationPatternsMessageCondition import org.springframework.messaging.handler.annotation.SendTo import org.springframework.messaging.handler.annotation.support.DestinationVariableMethodArgumentResolver import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessageSendingOperations import org.springframework.messaging.simp.SimpMessageType import org.springframework.messaging.simp.SimpMessagingTemplate import org.springframework.messaging.simp.annotation.SendToUser import org.springframework.messaging.simp.user.DestinationUserNameProvider import org.springframework.messaging.support.MessageHeaderInitializer import org.springframework.util.Assert import org.springframework.util.ObjectUtils import org.springframework.util.PropertyPlaceholderHelper import org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver import org.springframework.util.StringUtils import class org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler super super implements String String PropertyPlaceholderHelper boolean MessageHeaderInitializer SimpMessageSendingOperations public public = public public return public public = public public return public public = public public return public public if || || || return return ! SendToUser boolean MessageHeaders String String PlaceholderResolver SendTo decl String public public < throws if == return decl_stmt org.springframework.messaging.MessageHeaders = decl_stmt java.lang.String = decl_stmt org.springframework.util.PlaceholderResolver = decl_stmt SendToUser = if != decl_stmt boolean = call SendToUser.broadcast() call SendToUser.broadcast() call SendToUser.broadcast() call SendToUser.broadcast() call SendToUser.broadcast() decl_stmt java.lang.String = if == if == throw new = = decl_stmt java.lang.String = for : = if else else decl_stmt SendTo = decl_stmt java.lang.String = for : = SendToUser SendToUser private private decl_stmt SendToUser = if != && ! call SendToUser.value() call SendToUser.value() call SendToUser.value() call SendToUser.value() call SendToUser.value() return decl_stmt SendToUser = if != && ! call SendToUser.value() call SendToUser.value() call SendToUser.value() call SendToUser.value() call SendToUser.value() return return != : SendTo private private decl_stmt SendTo = if != && ! call SendTo.value() call SendTo.value() call SendTo.value() call SendTo.value() call SendTo.value() return else return String decl Map private private decl_stmt java.lang.String = decl_stmt java.util.Map < = < return new Principal protected protected < decl_stmt java.security.Principal = if != return instanceof : call java.security.Principal.getName() call java.security.Principal.getName() call java.security.Principal.getName() call java.security.Principal.getName() call java.security.Principal.getName() return String String decl String protected protected < if != decl_stmt java.lang.String = if ! return decl_stmt java.lang.String = decl_stmt java.lang.String = if ! throw new + return call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) call java.lang.String.startsWith(String,int) new + : new + + SimpMessageHeaderAccessor private private decl_stmt org.springframework.messaging.simp.SimpMessageHeaderAccessor = if != if != call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call org.springframework.messaging.simp.SimpMessageHeaderAccessor.setSessionId(String) call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setHeader() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() call SimpMessageHeaderAccessor.setLeaveMutable() return call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() call SimpMessageHeaderAccessor.getMessageHeaders() public public return + + public public return != :