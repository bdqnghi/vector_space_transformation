org.springframework.ejb.access java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import javax.ejb.CreateException import javax.ejb.EJBLocalHome import javax.ejb.EJBLocalObject import javax.naming.NamingException import org.aopalliance.intercept.MethodInvocation import class org.springframework.ejb.access.LocalSlsbInvokerInterceptor super super extends boolean Method Throwable Method Object public public throws decl_stmt java.lang.Object = try = decl_stmt com.sun.jdi.Method = if call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() return call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) else decl_stmt com.sun.jdi.Method = call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call Object.getClass() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() return call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch decl_stmt java.lang.Throwable = if + + if instanceof throw new + + else throw catch throw new + + catch throw new + + + + finally if instanceof protected protected throws if return if ! instanceof = return return protected protected throws return protected protected Object protected protected throws if decl_stmt java.lang.Object = if + return protected protected if != && ! try catch