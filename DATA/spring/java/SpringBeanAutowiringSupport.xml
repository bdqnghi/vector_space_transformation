org.springframework.web.context.support javax.servlet.ServletContext import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor import org.springframework.util.Assert import org.springframework.util.ClassUtils import org.springframework.web.context.ContextLoader import org.springframework.web.context.WebApplicationContext import class org.springframework.web.context.support.SpringBeanAutowiringSupport Log WebApplicationContext AutowiredAnnotationBeanPostProcessor public static public static decl_stmt org.springframework.web.context.WebApplicationContext = if != decl_stmt org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) else if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + WebApplicationContext AutowiredAnnotationBeanPostProcessor public static public static decl_stmt org.springframework.web.context.WebApplicationContext = decl_stmt org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor = new call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.setBeanFactory(BeanFactory) call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call WebApplicationContext.getAutowireCapableBeanFactory() call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object) call org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(Object)