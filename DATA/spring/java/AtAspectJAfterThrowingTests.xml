org.springframework.aop.aspectj.autoproxy java.io.IOException import org.aspectj.lang.annotation.AfterThrowing import org.aspectj.lang.annotation.Aspect import org.junit.Test import org.springframework.aop.support.AopUtils import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.tests.sample.beans.ITestBean import static static org.junit.Assert.* import class org.springframework.aop.aspectj.autoproxy.AtAspectJAfterThrowingTests ITestBean ClassPathXmlApplicationContext ExceptionHandlingAspect public public throws decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new + decl_stmt org.springframework.scheduling.annotation.ITestBean = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() decl_stmt ExceptionHandlingAspect = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() try call org.springframework.scheduling.annotation.ITestBean.unreliableFileOperation() call org.springframework.scheduling.annotation.ITestBean.unreliableFileOperation() call org.springframework.scheduling.annotation.ITestBean.unreliableFileOperation() call org.springframework.scheduling.annotation.ITestBean.unreliableFileOperation() call org.springframework.scheduling.annotation.ITestBean.unreliableFileOperation() catch