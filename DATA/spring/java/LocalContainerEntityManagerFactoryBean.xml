org.springframework.orm.jpa javax.persistence.EntityManagerFactory import javax.persistence.PersistenceException import javax.persistence.SharedCacheMode import javax.persistence.ValidationMode import javax.persistence.spi.PersistenceProvider import javax.persistence.spi.PersistenceUnitInfo import javax.sql.DataSource import org.springframework.beans.BeanUtils import org.springframework.context.ResourceLoaderAware import org.springframework.context.weaving.LoadTimeWeaverAware import org.springframework.core.io.ResourceLoader import org.springframework.instrument.classloading.LoadTimeWeaver import org.springframework.jdbc.datasource.lookup.SingleDataSourceLookup import org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager import org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager import org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor import org.springframework.orm.jpa.persistenceunit.SmartPersistenceUnitInfo import org.springframework.util.ClassUtils import class annotation org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean super super extends super implements PersistenceUnitManager PersistenceUnitInfo DefaultPersistenceUnitManager public public = public public public public public public public public public public public public public public new public public new public public public public public public EntityManagerFactory String decl Class PersistenceUnitManager PersistenceProvider JpaVendorAdapter protected protected throws decl_stmt org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager = if == = = decl_stmt org.springframework.orm.jpa.JpaVendorAdapter = if != && instanceof call org.springframework.orm.jpa.JpaVendorAdapter.getPersistenceProviderRootPackage() call org.springframework.orm.jpa.JpaVendorAdapter.getPersistenceProviderRootPackage() call org.springframework.orm.jpa.JpaVendorAdapter.getPersistenceProviderRootPackage() call org.springframework.orm.jpa.JpaVendorAdapter.getPersistenceProviderRootPackage() call org.springframework.orm.jpa.JpaVendorAdapter.getPersistenceProviderRootPackage() decl_stmt PersistenceProvider = if == decl_stmt java.lang.String = if == throw new + decl_stmt java.lang.Class < = = if + + decl_stmt EntityManagerFactory = call PersistenceProvider.createContainerEntityManagerFactory() call PersistenceProvider.createContainerEntityManagerFactory() call PersistenceProvider.createContainerEntityManagerFactory() call PersistenceProvider.createContainerEntityManagerFactory() call PersistenceProvider.createContainerEntityManagerFactory() return protected protected if != return call org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager.obtainPersistenceUnitInfo(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager.obtainPersistenceUnitInfo(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager.obtainPersistenceUnitInfo(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager.obtainPersistenceUnitInfo(String) call org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager.obtainPersistenceUnitInfo(String) else return call PersistenceUnitManager.obtainDefaultPersistenceUnitInfo() call PersistenceUnitManager.obtainDefaultPersistenceUnitInfo() call PersistenceUnitManager.obtainDefaultPersistenceUnitInfo() call PersistenceUnitManager.obtainDefaultPersistenceUnitInfo() call PersistenceUnitManager.obtainDefaultPersistenceUnitInfo() protected protected public public return public public if != return return public public if != return != : return != :