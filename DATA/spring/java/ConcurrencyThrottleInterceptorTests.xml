org.springframework.aop.interceptor org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.junit.Test import org.springframework.aop.framework.Advised import org.springframework.aop.framework.ProxyFactory import org.springframework.tests.sample.beans.DerivedTestBean import org.springframework.tests.sample.beans.ITestBean import org.springframework.tests.sample.beans.TestBean import org.springframework.util.SerializationTestUtils import static static org.junit.Assert.* import class org.springframework.aop.interceptor.ConcurrencyThrottleInterceptorTests Log int int ITestBean ProxyFactory Advised ITestBean DerivedTestBean ConcurrencyThrottleInterceptor ConcurrencyThrottleInterceptor public public throws decl_stmt org.springframework.tests.sample.beans.DerivedTestBean = new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() new decl_stmt org.springframework.aop.interceptor.ConcurrencyThrottleInterceptor = new call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() decl_stmt org.springframework.scheduling.annotation.ITestBean = decl_stmt org.springframework.aop.framework.Advised = decl_stmt org.springframework.aop.interceptor.ConcurrencyThrottleInterceptor = call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call org.springframework.aop.framework.Advised.getAdvisors() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call ConcurrencyThrottleInterceptor.getConcurrencyLimit() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() call org.springframework.scheduling.annotation.ITestBean.getAge() public public public public decl Thread TestBean ConcurrencyThrottleInterceptor ProxyFactory ITestBean private private decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt org.springframework.aop.framework.ProxyFactory = new call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() call ProxyFactory.setInterfaces() new decl_stmt org.springframework.aop.interceptor.ConcurrencyThrottleInterceptor = new call ConcurrencyThrottleInterceptor.setConcurrencyLimit() call ConcurrencyThrottleInterceptor.setConcurrencyLimit() call ConcurrencyThrottleInterceptor.setConcurrencyLimit() call ConcurrencyThrottleInterceptor.setConcurrencyLimit() call ConcurrencyThrottleInterceptor.setConcurrencyLimit() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.addAdvice() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() call ProxyFactory.setTarget() decl_stmt org.springframework.scheduling.annotation.ITestBean = call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) call org.springframework.aop.framework.ProxyFactory.getProxy(TargetSource) decl_stmt java.lang.Thread = new for = < ++ = new for = < / ++ try catch = new == new : new for = < ++ try catch public public if != try catch if == call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() else catch if == call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() else catch else for = < ++ call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug()