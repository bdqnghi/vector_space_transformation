org.springframework.expression.spel.ast java.sql.Time import java.text.SimpleDateFormat import java.util.Date import java.util.Locale import org.junit.Test import org.springframework.core.convert.converter.Converter import org.springframework.core.convert.support.GenericConversionService import org.springframework.expression.TypedValue import org.springframework.expression.spel.ExpressionState import org.springframework.expression.spel.SpelEvaluationException import org.springframework.expression.spel.support.StandardEvaluationContext import org.springframework.expression.spel.support.StandardTypeConverter import static static org.junit.Assert.* import class org.springframework.expression.spel.ast.OpPlusTests = public = public new - ExpressionState OpPlus StringLiteral = public = public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) IntLiteral LongLiteral TypedValue ExpressionState OpPlus RealLiteral public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.RealLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call RealLiteral.getLiteralValue() call RealLiteral.getLiteralValue() call RealLiteral.getLiteralValue() call RealLiteral.getLiteralValue() call RealLiteral.getLiteralValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() decl_stmt org.springframework.expression.spel.ast.IntLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.spel.ast.IntLiteral.getLiteralValue() call org.springframework.expression.spel.ast.IntLiteral.getLiteralValue() call org.springframework.expression.spel.ast.IntLiteral.getLiteralValue() call org.springframework.expression.spel.ast.IntLiteral.getLiteralValue() call org.springframework.expression.spel.ast.IntLiteral.getLiteralValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() decl_stmt org.springframework.expression.spel.ast.LongLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.spel.ast.LongLiteral.getLiteralValue() call org.springframework.expression.spel.ast.LongLiteral.getLiteralValue() call org.springframework.expression.spel.ast.LongLiteral.getLiteralValue() call org.springframework.expression.spel.ast.LongLiteral.getLiteralValue() call org.springframework.expression.spel.ast.LongLiteral.getLiteralValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() IntLiteral ExpressionState TypedValue IntLiteral OpPlus public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.RealLiteral = new - decl_stmt org.springframework.expression.spel.ast.RealLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() + call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() decl_stmt org.springframework.expression.spel.ast.LongLiteral = new - decl_stmt org.springframework.expression.spel.ast.LongLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() + call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() decl_stmt org.springframework.expression.spel.ast.IntLiteral = new - decl_stmt org.springframework.expression.spel.ast.IntLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() + call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() StringLiteral ExpressionState TypedValue StringLiteral OpPlus public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() StringLiteral ExpressionState TypedValue LongLiteral OpPlus public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.LongLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() LongLiteral ExpressionState TypedValue StringLiteral OpPlus public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt org.springframework.expression.spel.ast.LongLiteral = new - decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() TypedValue ExpressionState OpPlus Time VariableReference StringLiteral public public decl_stmt org.springframework.expression.spel.ExpressionState = new new decl_stmt java.sql.Time = new new decl_stmt org.springframework.expression.spel.ast.VariableReference = new - call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() + call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() StandardEvaluationContext SimpleDateFormat OpPlus VariableReference ExpressionState TypedValue Time GenericConversionService StringLiteral public public decl_stmt java.text.SimpleDateFormat final final = new decl_stmt org.springframework.core.convert.support.GenericConversionService = new call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) call org.springframework.core.convert.support.GenericConversionService.addConverter(GenericConverter) new < public public return call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) decl_stmt org.springframework.expression.spel.support.StandardEvaluationContext = new call org.springframework.expression.spel.support.StandardEvaluationContext.setTypeConverter(TypeConverter) call org.springframework.expression.spel.support.StandardEvaluationContext.setTypeConverter(TypeConverter) call org.springframework.expression.spel.support.StandardEvaluationContext.setTypeConverter(TypeConverter) call org.springframework.expression.spel.support.StandardEvaluationContext.setTypeConverter(TypeConverter) call org.springframework.expression.spel.support.StandardEvaluationContext.setTypeConverter(TypeConverter) new decl_stmt org.springframework.expression.spel.ExpressionState = new decl_stmt java.sql.Time = new new decl_stmt org.springframework.expression.spel.ast.VariableReference = new - call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) call org.springframework.expression.spel.ast.VariableReference.setValue(ExpressionState,Object) decl_stmt org.springframework.expression.spel.ast.StringLiteral = new - decl_stmt org.springframework.expression.spel.ast.OpPlus = new - decl_stmt org.springframework.expression.TypedValue = call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.spel.ast.OpPlus.getValueInternal(ExpressionState) call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call org.springframework.expression.TypedValue.getTypeDescriptor() call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) call java.text.SimpleDateFormat.format(Date,StringBuffer,FieldDelegate) + call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() call TypedValue.getValue() public public return