org.springframework.jms.connection java.lang.reflect.InvocationHandler import java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.lang.reflect.Proxy import java.util.ArrayList import java.util.List import javax.jms.Connection import javax.jms.ConnectionFactory import javax.jms.JMSException import javax.jms.QueueConnection import javax.jms.QueueConnectionFactory import javax.jms.QueueSession import javax.jms.Session import javax.jms.TopicConnection import javax.jms.TopicConnectionFactory import javax.jms.TopicSession import javax.jms.TransactionInProgressException import org.springframework.util.Assert import class org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy super super implements ConnectionFactory boolean public final public final = protected protected return public public = protected protected return Connection public public throws decl_stmt sun.rmi.transport.Connection = return Connection public public throws decl_stmt sun.rmi.transport.Connection = return QueueConnection public public throws if ! instanceof throw new decl_stmt QueueConnection = return QueueConnection public public throws if ! instanceof throw new decl_stmt QueueConnection = return TopicConnection public public throws if ! instanceof throw new decl_stmt TopicConnection = return TopicConnection public public throws if ! instanceof throw new decl_stmt TopicConnection = return decl List protected protected decl_stmt java.util.List < < = new < < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() new TopicSession public public throws if return == else if return else if == decl_stmt sun.security.pkcs11.Session = if != return else if == decl_stmt QueueSession = if != return else if == decl_stmt TopicSession = if != return try return catch throw decl List private private decl_stmt java.util.List < < = new < < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if instanceof call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() return call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() call decl List.toArray() new < call decl List.size() call decl List.size() call decl List.size() call decl List.size() call decl List.size() new public public throws if return == else if return else if throw new else if throw new else if return else if return try return catch throw