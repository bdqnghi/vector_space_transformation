org.springframework.jms.core java.io.Writer import java.util.HashMap import java.util.Map import javax.jms.Destination import javax.jms.JMSException import javax.jms.MessageFormatException import javax.jms.MessageNotWriteableException import javax.jms.Session import javax.jms.TextMessage import org.hamcrest.core.StringContains import org.junit.Before import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.mockito.ArgumentCaptor import org.mockito.BDDMockito import org.mockito.Captor import org.mockito.Mock import org.mockito.MockitoAnnotations import org.mockito.invocation.InvocationOnMock import org.mockito.stubbing.Answer import org.springframework.jms.InvalidDestinationException import org.springframework.jms.MessageNotReadableException import org.springframework.jms.StubTextMessage import org.springframework.jms.support.converter.MessageConverter import org.springframework.jms.support.converter.SimpleMessageConverter import org.springframework.jms.support.destination.DestinationResolutionException import org.springframework.messaging.Message import org.springframework.messaging.MessagingException import org.springframework.messaging.converter.GenericMessageConverter import org.springframework.messaging.support.MessageBuilder import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jms.core.JmsMessagingTemplateTests ExpectedException decl ArgumentCaptor JmsTemplate JmsMessagingTemplate public public = new public public call org.springframework.jms.core.JmsMessagingTemplate.getJmsTemplate() call org.springframework.jms.core.JmsMessagingTemplate.getJmsTemplate() call org.springframework.jms.core.JmsMessagingTemplate.getJmsTemplate() call org.springframework.jms.core.JmsMessagingTemplate.getJmsTemplate() call org.springframework.jms.core.JmsMessagingTemplate.getJmsTemplate() decl Message Destination public public decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl Message public public decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl Message Destination public public decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl Message public public call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl Message public public decl_stmt org.springframework.messaging.Message < = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) decl Message JmsMessagingTemplate public public decl_stmt org.springframework.jms.core.JmsMessagingTemplate = new call org.springframework.jms.core.JmsMessagingTemplate.setJmsTemplate(JmsTemplate) call org.springframework.jms.core.JmsMessagingTemplate.setJmsTemplate(JmsTemplate) call org.springframework.jms.core.JmsMessagingTemplate.setJmsTemplate(JmsTemplate) call org.springframework.jms.core.JmsMessagingTemplate.setJmsTemplate(JmsTemplate) call org.springframework.jms.core.JmsMessagingTemplate.setJmsTemplate(JmsTemplate) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.afterPropertiesSet() call org.springframework.jms.core.JmsMessagingTemplate.afterPropertiesSet() call org.springframework.jms.core.JmsMessagingTemplate.afterPropertiesSet() call org.springframework.jms.core.JmsMessagingTemplate.afterPropertiesSet() call org.springframework.jms.core.JmsMessagingTemplate.afterPropertiesSet() decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() TextMessage Destination public public throws decl_stmt javax.print.attribute.standard.Destination = new call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.TextMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() TextMessage public public throws call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.TextMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() TextMessage Destination public public throws decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.TextMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() TextMessage public public throws call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.web.socket.TextMessage = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() public public throws call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) public public throws call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) new public public throws throw new call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() call ExpectedException.expectMessage() new call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() public public throws throw new decl Map Destination public public throws decl_stmt javax.print.attribute.standard.Destination = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl Map public public throws decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call org.springframework.jms.core.JmsMessagingTemplate.convertAndSend(String,Object,Map) call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl jms Destination decl javax public public decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) decl jms decl javax public public decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) decl jms Destination decl javax public public decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) decl jms decl javax public public call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) public public call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) Destination decl javax decl jms public public decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) decl javax decl jms public public decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) Destination decl javax decl jms public public decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) decl javax decl jms public public call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) decl javax decl jms public public decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call JmsMessagingTemplate.setMessageConverter() call JmsMessagingTemplate.setMessageConverter() call JmsMessagingTemplate.setMessageConverter() call JmsMessagingTemplate.setMessageConverter() call JmsMessagingTemplate.setMessageConverter() new decl_stmt java.lang.Integer = call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) decl javax public public decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) public public call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) call org.springframework.jms.core.JmsMessagingTemplate.receiveAndConvert(Class) decl javax Destination decl Message decl jms public public decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) decl javax decl Message decl jms public public decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) decl javax Destination decl Message decl jms public public decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) decl javax decl Message decl jms public public call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt org.springframework.messaging.Message < = call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) decl Message public public decl_stmt org.springframework.messaging.Message < = call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) decl jms Destination decl javax public public throws decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) decl jms decl javax public public throws decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) decl jms Destination decl javax public public throws decl_stmt javax.print.attribute.standard.Destination = new call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() call JmsMessagingTemplate.setDefaultDestination() decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) decl jms decl javax public public throws call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) call org.springframework.jms.core.JmsMessagingTemplate.setDefaultDestinationName(String) decl_stmt org.springframework.messaging.Message = call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) call org.springframework.jms.core.JmsTemplate.sendAndReceive(Destination,MessageCreator) decl_stmt java.lang.String = call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) public public throws call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) call org.springframework.jms.core.JmsMessagingTemplate.convertSendAndReceive(String,Object,Class,MessagePostProcessor) decl Message MessageConverter public public throws decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.jms.support.converter.MessageConverter = call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) decl javax decl jms public public throws decl_stmt org.springframework.messaging.Message = decl_stmt org.springframework.jms.support.converter.MessageConverter = call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call org.springframework.jms.core.JmsTemplate.receive(String) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) public public throws call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) Destination public public decl_stmt javax.print.attribute.standard.Destination = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) Destination public public decl_stmt javax.print.attribute.standard.Destination = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) call org.springframework.jms.core.JmsMessagingTemplate.receive(String) decl Message MessageConverter public public throws decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.jms.support.converter.MessageConverter = call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) decl Message MessageConverter public public throws decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.jms.support.converter.MessageConverter = call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call org.springframework.jms.core.JmsMessagingTemplate.setJmsMessageConverter(MessageConverter) call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) call org.springframework.jms.core.JmsMessagingTemplate.send(Message) public public call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) Destination public public decl_stmt javax.print.attribute.standard.Destination = new call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) call org.springframework.jms.core.JmsMessagingTemplate.sendAndReceive(Message) MessageCreator private private new < public public throws decl_stmt org.springframework.jms.core.MessageCreator = call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() return MessageCreator public public throws decl_stmt org.springframework.jms.core.MessageCreator = call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() call MessageCreator.createMessage() return private < private < return private < private < return StubTextMessage private private try decl_stmt org.springframework.jms.StubTextMessage = new call org.springframework.jms.StubTextMessage.setStringProperty(String,String) call org.springframework.jms.StubTextMessage.setStringProperty(String,String) call org.springframework.jms.StubTextMessage.setStringProperty(String,String) call org.springframework.jms.StubTextMessage.setStringProperty(String,String) call org.springframework.jms.StubTextMessage.setStringProperty(String,String) return catch throw new private private return TextMessage private private try decl_stmt org.springframework.web.socket.TextMessage = call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getText() call TextMessage.getStringProperty() call TextMessage.getStringProperty() call TextMessage.getStringProperty() call TextMessage.getStringProperty() call TextMessage.getStringProperty() catch throw new private private < decl javax Session protected protected throws decl_stmt sun.security.pkcs11.Session = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() > new < public public throws return new decl_stmt org.springframework.messaging.Message = > return public public throws return new