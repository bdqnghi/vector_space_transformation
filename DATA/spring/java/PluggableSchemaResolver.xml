org.springframework.beans.factory.xml java.io.FileNotFoundException import java.io.IOException import java.util.Map import java.util.Properties import java.util.concurrent.ConcurrentHashMap import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.xml.sax.EntityResolver import org.xml.sax.InputSource import org.springframework.core.io.ClassPathResource import org.springframework.core.io.Resource import org.springframework.core.io.support.PropertiesLoaderUtils import org.springframework.util.Assert import org.springframework.util.CollectionUtils import class org.springframework.beans.factory.xml.PluggableSchemaResolver super super implements decl Map Log String ClassLoader String String Resource InputSource public public throws if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + + + if != decl_stmt java.lang.String = if != decl_stmt org.springframework.core.io.Resource = new try decl_stmt InputSource = new call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call Resource.getInputStream() call InputSource.setPublicId() call InputSource.setPublicId() call InputSource.setPublicId() call InputSource.setPublicId() call InputSource.setPublicId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() call InputSource.setSystemId() if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + return catch if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + return decl Map Properties private < private < if == synchronized if == if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + try decl_stmt java.util.Properties = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + decl_stmt java.util.Map < = new < call Properties.size() call Properties.size() call Properties.size() call Properties.size() call Properties.size() = catch throw new + + return public public return +