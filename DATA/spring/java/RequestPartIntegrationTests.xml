org.springframework.web.servlet.mvc.method.annotation java.net.URI import java.nio.charset.Charset import java.util.ArrayList import java.util.Collections import java.util.List import java.util.Map import java.util.Optional import javax.servlet.MultipartConfigElement import org.eclipse.jetty.server.Connector import org.eclipse.jetty.server.NetworkConnector import org.eclipse.jetty.server.Server import org.eclipse.jetty.servlet.ServletContextHandler import org.eclipse.jetty.servlet.ServletHolder import org.junit.AfterClass import org.junit.Assert import org.junit.Before import org.junit.BeforeClass import org.junit.Test import org.springframework.context.annotation.Bean import org.springframework.context.annotation.Configuration import org.springframework.core.io.ClassPathResource import org.springframework.http.HttpEntity import org.springframework.http.HttpHeaders import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.RequestEntity import org.springframework.http.ResponseEntity import org.springframework.http.client.HttpComponentsClientHttpRequestFactory import org.springframework.http.converter.ByteArrayHttpMessageConverter import org.springframework.http.converter.HttpMessageConverter import org.springframework.http.converter.ResourceHttpMessageConverter import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter import org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter import org.springframework.stereotype.Controller import org.springframework.util.LinkedMultiValueMap import org.springframework.util.MimeTypeUtils import org.springframework.util.MultiValueMap import org.springframework.web.bind.annotation.RequestMapping import org.springframework.web.bind.annotation.RequestPart import org.springframework.web.client.RestTemplate import org.springframework.web.context.support.AnnotationConfigWebApplicationContext import org.springframework.web.multipart.MultipartFile import org.springframework.web.multipart.MultipartResolver import org.springframework.web.multipart.commons.CommonsMultipartResolver import org.springframework.web.multipart.support.StandardServletMultipartResolver import org.springframework.web.servlet.DispatcherServlet import org.springframework.web.servlet.config.annotation.EnableWebMvc import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter import static static org.junit.Assert.* import static static org.springframework.web.bind.annotation.RequestMethod.* import class org.springframework.web.servlet.mvc.method.annotation.RequestPartIntegrationTests RestTemplate String Server ServletHolder NetworkConnector decl Connector ServletContextHandler ServletHolder decl Class public static public static throws = new decl_stmt ServletContextHandler = new call ServletContextHandler.setContextPath() call ServletContextHandler.setContextPath() call ServletContextHandler.setContextPath() call ServletContextHandler.setContextPath() call ServletContextHandler.setContextPath() decl_stmt java.lang.Class < = decl_stmt ServletHolder = new call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() = decl_stmt ServletHolder = new call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call decl Class.getName() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.setInitParameter() call ServletHolder.getRegistration() call ServletHolder.getRegistration() call ServletHolder.getRegistration() call ServletHolder.getRegistration() call ServletHolder.getRegistration() new call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call ServletContextHandler.addServlet() call Server.setHandler() call Server.setHandler() call Server.setHandler() call Server.setHandler() call Server.setHandler() call Server.start() call Server.start() call Server.start() call Server.start() call Server.start() decl_stmt Connector = call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() call Server.getConnectors() decl_stmt NetworkConnector = = + call NetworkConnector.getLocalPort() call NetworkConnector.getLocalPort() call NetworkConnector.getLocalPort() call NetworkConnector.getLocalPort() call NetworkConnector.getLocalPort() ByteArrayHttpMessageConverter decl List AllEncompassingFormHttpMessageConverter public public decl_stmt org.springframework.http.converter.ByteArrayHttpMessageConverter = new call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() decl_stmt java.util.List < < = new <> call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new decl_stmt AllEncompassingFormHttpMessageConverter = new call AllEncompassingFormHttpMessageConverter.setPartConverters() call AllEncompassingFormHttpMessageConverter.setPartConverters() call AllEncompassingFormHttpMessageConverter.setPartConverters() call AllEncompassingFormHttpMessageConverter.setPartConverters() call AllEncompassingFormHttpMessageConverter.setPartConverters() = new new call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) call org.springframework.web.client.RestTemplate.setMessageConverters(List) public static public static throws if != call Server.stop() call Server.stop() call Server.stop() call Server.stop() call Server.stop() public public throws + + public public throws + + ByteArrayHttpMessageConverter String decl RequestEntity String decl Map decl ResponseEntity decl byte public public throws decl_stmt byte = decl_stmt java.lang.String = new decl_stmt java.util.Map < = decl_stmt java.lang.String = + + + + + + + + + + decl_stmt org.springframework.http.RequestEntity < = new + new call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) call java.lang.String.getBytes(Charset) decl_stmt org.springframework.http.converter.ByteArrayHttpMessageConverter = new call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() call ByteArrayHttpMessageConverter.setSupportedMediaTypes() decl_stmt org.springframework.http.ResponseEntity < = call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call org.springframework.web.client.RestTemplate.exchange(RequestEntity,Class) call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() call decl ResponseEntity.getStatusCode() HttpHeaders decl MultiValueMap URI private private decl_stmt org.springframework.util.MultiValueMap < = new < call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() new < new call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() new call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() new < new decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) call org.springframework.http.HttpHeaders.setContentType(MediaType) new call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() call decl MultiValueMap.add() new < new byte decl_stmt java.net.URI = call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) call org.springframework.web.client.RestTemplate.postForLocation(String,Object,Object) + + call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) call java.net.URI.toString(String,String,String,String,String,int,String,String,String) public public return new public public return new public public return new String HttpHeaders = = = public < = = = public < = = < = = = = = = = new byte decl_stmt java.lang.String = + + + decl_stmt org.springframework.http.HttpHeaders = new call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) call org.springframework.http.HttpHeaders.setLocation(URI) return new < = = = public < = = = public < return public public return public public =