org.springframework.context.annotation java.io.IOException import java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import java.util.HashSet import example.scannable.CustomComponent import example.scannable.CustomStereotype import example.scannable.DefaultNamedComponent import example.scannable.FooService import example.scannable.MessageBean import example.scannable.ScopedProxyTestBean import example.scannable_implicitbasepackage.ComponentScanAnnotatedConfigWithImplicitBasePackage import example.scannable_implicitbasepackage.ConfigurableComponent import example.scannable_scoped.CustomScopeAnnotationBean import example.scannable_scoped.MyScope import org.junit.Test import org.springframework.aop.support.AopUtils import org.springframework.beans.BeansException import org.springframework.beans.factory.BeanClassLoaderAware import org.springframework.beans.factory.BeanFactory import org.springframework.beans.factory.BeanFactoryAware import org.springframework.beans.factory.annotation.CustomAutowireConfigurer import org.springframework.beans.factory.config.BeanDefinition import org.springframework.beans.factory.config.ConfigurableBeanFactory import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.beans.factory.support.DefaultListableBeanFactory import org.springframework.context.EnvironmentAware import org.springframework.context.ResourceLoaderAware import org.springframework.context.annotation.ComponentScan.Filter import org.springframework.context.annotation.ComponentScanParserTests.KustomAnnotationAutowiredBean import org.springframework.context.annotation.componentscan.simple.ClassWithNestedComponents import org.springframework.context.annotation.componentscan.simple.SimpleComponent import org.springframework.context.support.GenericApplicationContext import org.springframework.core.env.ConfigurableEnvironment import org.springframework.core.env.Environment import org.springframework.core.io.ResourceLoader import org.springframework.core.type.classreading.MetadataReader import org.springframework.core.type.classreading.MetadataReaderFactory import org.springframework.core.type.filter.TypeFilter import org.springframework.tests.context.SimpleMapScope import org.springframework.util.SerializationTestUtils import static static org.hamcrest.CoreMatchers.* import static static org.junit.Assert.* import static static org.springframework.beans.factory.support.BeanDefinitionBuilder.* import class annotation org.springframework.context.annotation.ComponentScanAnnotationIntegrationTests AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.scan(String) call org.springframework.context.annotation.AnnotationConfigApplicationContext.scan(String) call org.springframework.context.annotation.AnnotationConfigApplicationContext.scan(String) call org.springframework.context.annotation.AnnotationConfigApplicationContext.scan(String) call org.springframework.context.annotation.AnnotationConfigApplicationContext.scan(String) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() + call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() + call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() + call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() call AnnotationConfigApplicationContext.containsBeanDefinition() + call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() DefaultListableBeanFactory GenericApplicationContext public public decl_stmt org.springframework.beans.factory.support.DefaultListableBeanFactory = new call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) call org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String,BeanDefinition) decl_stmt org.springframework.context.support.GenericApplicationContext = new call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.refresh() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.getBean() call GenericApplicationContext.containsBeanDefinition() call GenericApplicationContext.containsBeanDefinition() call GenericApplicationContext.containsBeanDefinition() call GenericApplicationContext.containsBeanDefinition() call GenericApplicationContext.containsBeanDefinition() + call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() call GenericApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() KustomAnnotationAutowiredBean AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getDefaultListableBeanFactory() call AnnotationConfigApplicationContext.getDefaultListableBeanFactory() call AnnotationConfigApplicationContext.getDefaultListableBeanFactory() call AnnotationConfigApplicationContext.getDefaultListableBeanFactory() call AnnotationConfigApplicationContext.getDefaultListableBeanFactory() decl_stmt KustomAnnotationAutowiredBean = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call KustomAnnotationAutowiredBean.getDependency() call KustomAnnotationAutowiredBean.getDependency() call KustomAnnotationAutowiredBean.getDependency() call KustomAnnotationAutowiredBean.getDependency() call KustomAnnotationAutowiredBean.getDependency() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() call AnnotationConfigApplicationContext.getEnvironment() FooService AnnotationConfigApplicationContext FooService public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() new call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.cache.config.FooService = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) decl_stmt org.springframework.cache.config.FooService = call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) call org.springframework.cache.config.FooService.foo(int) FooService AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() new call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.cache.config.FooService = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() FooService AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() call AnnotationConfigApplicationContext.getBeanFactory() new call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() decl_stmt org.springframework.cache.config.FooService = call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() public public throws = public public = public public = public public = public public return