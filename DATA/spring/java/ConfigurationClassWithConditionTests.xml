org.springframework.context.annotation java.lang.annotation.ElementType import java.lang.annotation.Retention import java.lang.annotation.RetentionPolicy import java.lang.annotation.Target import java.util.Map import org.junit.Rule import org.junit.Test import org.junit.rules.ExpectedException import org.springframework.beans.factory.NoSuchBeanDefinitionException import org.springframework.beans.factory.support.BeanDefinitionRegistry import org.springframework.core.annotation.AnnotationAttributes import org.springframework.core.type.AnnotatedTypeMetadata import org.springframework.core.type.AnnotationMetadata import org.springframework.stereotype.Component import static static org.hamcrest.Matchers.* import static static org.junit.Assert.* import class annotation org.springframework.context.annotation.ConfigurationClassWithConditionTests ExpectedException AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() call AnnotationConfigApplicationContext.containsBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call ExpectedException.expect() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() call AnnotationConfigApplicationContext.getBean() AnnotationConfigApplicationContext public public throws decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call org.springframework.context.annotation.AnnotationConfigApplicationContext.register(Class) call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() call AnnotationConfigApplicationContext.refresh() AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() decl Map AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new decl_stmt java.util.Map < = call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() decl Map AnnotationConfigApplicationContext public public decl_stmt org.springframework.context.annotation.AnnotationConfigApplicationContext = new decl_stmt java.util.Map < = call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call AnnotationConfigApplicationContext.getBeansOfType() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.size() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() call decl Map.keySet() public public return new public public return new public public return new public public return new public public return ! public public return public public return AnnotationAttributes public public decl_stmt org.springframework.core.annotation.AnnotationAttributes = call org.springframework.core.annotation.AnnotationAttributes.getString(String) call org.springframework.core.annotation.AnnotationAttributes.getString(String) call org.springframework.core.annotation.AnnotationAttributes.getString(String) call org.springframework.core.annotation.AnnotationAttributes.getString(String) call org.springframework.core.annotation.AnnotationAttributes.getString(String) return public public return public public return public public return new public public public public return new public public return new public public return new public public return new = public = public return new = public = public return new