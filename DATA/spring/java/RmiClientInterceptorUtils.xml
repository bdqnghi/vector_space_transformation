org.springframework.remoting.rmi java.lang.reflect.InvocationTargetException import java.lang.reflect.Method import java.net.SocketException import java.rmi.ConnectException import java.rmi.ConnectIOException import java.rmi.NoSuchObjectException import java.rmi.RemoteException import java.rmi.StubNotFoundException import java.rmi.UnknownHostException import org.aopalliance.intercept.MethodInvocation import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.omg.CORBA.COMM_FAILURE import org.omg.CORBA.CompletionStatus import org.omg.CORBA.NO_RESPONSE import org.omg.CORBA.SystemException import org.springframework.remoting.RemoteAccessException import org.springframework.remoting.RemoteConnectFailureException import org.springframework.remoting.RemoteProxyFailureException import org.springframework.util.ReflectionUtils import class org.springframework.remoting.rmi.RmiClientInterceptorUtils Log Method Method public static public static throws decl_stmt com.sun.jdi.Method = try if call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() call com.sun.jdi.Method.getDeclaringClass() return call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) else decl_stmt com.sun.jdi.Method = call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getName() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() call com.sun.jdi.Method.getParameterTypes() return call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) call com.sun.jdi.Method.invoke(Object,Object) catch throw catch throw new + catch throw new + public static public static if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if return new else return new public static public static return public static public static if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + if return else if return new + + else return new + + public static public static return instanceof || instanceof || instanceof || instanceof || instanceof || instanceof || private static private static return instanceof || instanceof && ==