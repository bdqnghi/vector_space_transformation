org.springframework.messaging.simp.user static static org.junit.Assert.* import static static org.mockito.Mockito.* import java.util.Arrays import java.util.Collections import java.util.HashSet import java.util.concurrent.ScheduledFuture import org.junit.Before import org.junit.Test import org.mockito.ArgumentCaptor import org.mockito.Mock import org.mockito.Mockito import org.mockito.MockitoAnnotations import org.springframework.messaging.Message import org.springframework.messaging.MessageChannel import org.springframework.messaging.MessageHeaders import org.springframework.messaging.converter.MappingJackson2MessageConverter import org.springframework.messaging.converter.MessageConverter import org.springframework.messaging.simp.SimpMessageHeaderAccessor import org.springframework.messaging.simp.SimpMessagingTemplate import org.springframework.messaging.simp.broker.BrokerAvailabilityEvent import org.springframework.scheduling.TaskScheduler import class org.springframework.messaging.simp.user.UserRegistryMessageHandlerTests MultiServerUserRegistry TaskScheduler MessageConverter UserRegistryMessageHandler SimpUserRegistry MessageChannel SimpMessagingTemplate public public throws = new decl_stmt org.springframework.messaging.simp.SimpMessagingTemplate = new call SimpMessagingTemplate.setMessageConverter() call SimpMessagingTemplate.setMessageConverter() call SimpMessagingTemplate.setMessageConverter() call SimpMessagingTemplate.setMessageConverter() call SimpMessagingTemplate.setMessageConverter() = = new = new Runnable public public throws decl_stmt java.lang.Runnable = ScheduledFuture BrokerAvailabilityEvent public public throws decl_stmt ScheduledFuture = decl_stmt org.springframework.messaging.simp.broker.BrokerAvailabilityEvent = new = new decl HashSet TestSimpUser TestSimpUser MessageHeaders decl ArgumentCaptor MultiServerUserRegistry decl Message public public throws decl_stmt org.springframework.messaging.simp.user.TestSimpUser = new decl_stmt org.springframework.messaging.simp.user.TestSimpUser = new call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) new call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) new decl_stmt java.util.HashSet < = new <> decl_stmt ArgumentCaptor < = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() decl_stmt org.springframework.messaging.Message < = call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() decl_stmt org.springframework.messaging.MessageHeaders = call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() call decl Message.getHeaders() decl_stmt org.springframework.messaging.simp.user.MultiServerUserRegistry = new call org.springframework.messaging.simp.user.MultiServerUserRegistry.addRemoteRegistryDto(Message,MessageConverter,long) call org.springframework.messaging.simp.user.MultiServerUserRegistry.addRemoteRegistryDto(Message,MessageConverter,long) call org.springframework.messaging.simp.user.MultiServerUserRegistry.addRemoteRegistryDto(Message,MessageConverter,long) call org.springframework.messaging.simp.user.MultiServerUserRegistry.addRemoteRegistryDto(Message,MessageConverter,long) call org.springframework.messaging.simp.user.MultiServerUserRegistry.addRemoteRegistryDto(Message,MessageConverter,long) call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUser() decl HashSet TestSimpUser TestSimpUser MultiServerUserRegistry decl Message SimpUserRegistry public public throws decl_stmt org.springframework.messaging.simp.user.TestSimpUser = new decl_stmt org.springframework.messaging.simp.user.TestSimpUser = new call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) new call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) new decl_stmt java.util.HashSet < = new <> decl_stmt org.springframework.messaging.simp.user.SimpUserRegistry = call SimpUserRegistry.getUsers() call SimpUserRegistry.getUsers() call SimpUserRegistry.getUsers() call SimpUserRegistry.getUsers() call SimpUserRegistry.getUsers() decl_stmt org.springframework.messaging.simp.user.MultiServerUserRegistry = new decl_stmt org.springframework.messaging.Message < = call org.springframework.messaging.simp.user.MultiServerUserRegistry.getLocalRegistryDto() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getLocalRegistryDto() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getLocalRegistryDto() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getLocalRegistryDto() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getLocalRegistryDto() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() call org.springframework.messaging.simp.user.MultiServerUserRegistry.getUsers() decl Message TestSimpUser public public throws decl_stmt org.springframework.messaging.simp.user.TestSimpUser = new call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) call org.springframework.messaging.simp.user.TestSimpUser.addSessions(TestSimpSession) new decl_stmt org.springframework.messaging.Message < = BrokerAvailabilityEvent decl ArgumentCaptor private private decl_stmt org.springframework.messaging.simp.broker.BrokerAvailabilityEvent = new decl_stmt ArgumentCaptor < extends extends = call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() call decl ArgumentCaptor.capture() return call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue() call decl ArgumentCaptor.getValue()