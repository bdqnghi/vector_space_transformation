org.springframework.web.servlet.view java.util.ArrayList import java.util.Arrays import java.util.Collections import java.util.List import java.util.Locale import java.util.Map import java.util.Set import org.junit.After import org.junit.Before import org.junit.Test import org.springframework.http.MediaType import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.web.accept.ContentNegotiationManager import org.springframework.web.accept.FixedContentNegotiationStrategy import org.springframework.web.accept.HeaderContentNegotiationStrategy import org.springframework.web.accept.MappingMediaTypeFileExtensionResolver import org.springframework.web.accept.ParameterContentNegotiationStrategy import org.springframework.web.accept.PathExtensionContentNegotiationStrategy import org.springframework.web.context.request.RequestContextHolder import org.springframework.web.context.request.ServletRequestAttributes import org.springframework.web.context.support.StaticWebApplicationContext import org.springframework.web.servlet.HandlerMapping import org.springframework.web.servlet.View import org.springframework.web.servlet.ViewResolver import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.web.servlet.view.ContentNegotiatingViewResolverTests ContentNegotiatingViewResolver MockHttpServletRequest StaticWebApplicationContext public public decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() = new call ContentNegotiatingViewResolver.setApplicationContext() call ContentNegotiatingViewResolver.setApplicationContext() call ContentNegotiatingViewResolver.setApplicationContext() call ContentNegotiatingViewResolver.setApplicationContext() call ContentNegotiatingViewResolver.setApplicationContext() = new new public public decl Set decl List public public throws decl_stmt java.util.Set < = call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setAttribute(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt java.util.List < = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getMediaTypes(HttpServletRequest) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getMediaTypes(HttpServletRequest) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getMediaTypes(HttpServletRequest) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getMediaTypes(HttpServletRequest) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.getMediaTypes(HttpServletRequest) new call decl List.get() call decl List.get() call decl List.get() call decl List.get() call decl List.get() Locale ViewResolver View String View public public throws call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() String Locale MappingMediaTypeFileExtensionResolver decl Map ContentNegotiationManager View ViewResolver View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt java.util.Map < = decl_stmt org.springframework.web.accept.MappingMediaTypeFileExtensionResolver = new decl_stmt org.springframework.web.accept.ContentNegotiationManager = new new call org.springframework.web.accept.ContentNegotiationManager.addFileExtensionResolvers(MediaTypeFileExtensionResolver) call org.springframework.web.accept.ContentNegotiationManager.addFileExtensionResolvers(MediaTypeFileExtensionResolver) call org.springframework.web.accept.ContentNegotiationManager.addFileExtensionResolvers(MediaTypeFileExtensionResolver) call org.springframework.web.accept.ContentNegotiationManager.addFileExtensionResolvers(MediaTypeFileExtensionResolver) call org.springframework.web.accept.ContentNegotiationManager.addFileExtensionResolvers(MediaTypeFileExtensionResolver) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() String Locale decl Map View ViewResolver ParameterContentNegotiationStrategy View public public throws call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) decl_stmt java.util.Map < = decl_stmt org.springframework.web.accept.ParameterContentNegotiationStrategy = new call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) new decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() ViewResolver ViewResolver String Locale FixedContentNegotiationStrategy View MediaType View View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.http.MediaType = new decl_stmt org.springframework.web.accept.FixedContentNegotiationStrategy = new call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) new decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() ViewResolver ViewResolver String Locale View View View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() View String Locale View ViewResolver ViewResolver View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) new new decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() Locale ViewResolver View String View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() new call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) call org.springframework.mock.web.MockHttpServletRequest.getAttribute(String) ViewResolver ViewResolver String Locale View View decl List View View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() ViewResolver ViewResolver String Locale View View View public public throws call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() ViewResolver ViewResolver String Locale View decl Map View PathExtensionContentNegotiationStrategy View View decl List public public throws call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) decl_stmt java.util.Map < = decl_stmt org.springframework.web.accept.PathExtensionContentNegotiationStrategy = new call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) new decl_stmt org.springframework.web.servlet.ViewResolver = decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = decl_stmt java.util.List < = new < call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() + call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() Locale ViewResolver View String View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() StaticWebApplicationContext UrlBasedViewResolver String Locale View View View ViewResolver public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) call org.springframework.mock.web.MockHttpServletRequest.setRequestURI(String) decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.UrlBasedViewResolver = new call UrlBasedViewResolver.setApplicationContext() call UrlBasedViewResolver.setApplicationContext() call UrlBasedViewResolver.setApplicationContext() call UrlBasedViewResolver.setApplicationContext() call UrlBasedViewResolver.setApplicationContext() decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) > decl_stmt org.springframework.web.servlet.View = decl_stmt org.springframework.web.servlet.View = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setDefaultViews(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call View.getClass() call View.getClass() call View.getClass() call View.getClass() call View.getClass() Locale ViewResolver View String View public public throws call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() String Locale View ViewResolver MockHttpServletResponse View public public throws call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode(boolean) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode(boolean) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode(boolean) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode(boolean) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setUseNotAcceptableStatusCode(boolean) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) call org.springframework.mock.web.MockHttpServletRequest.addHeader(String,Object) decl_stmt org.springframework.web.servlet.ViewResolver = call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt org.springframework.web.servlet.View = decl_stmt java.lang.String = decl_stmt java.util.Locale = call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call ViewResolver.resolveViewName() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() call View.getContentType() decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.web.servlet.View.render(Map,HttpServletRequest,HttpServletResponse) call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() StaticWebApplicationContext String Locale FixedContentNegotiationStrategy View InternalResourceViewResolver public public throws decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) new call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt org.springframework.web.servlet.view.InternalResourceViewResolver = new call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setApplicationContext() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call InternalResourceViewResolver.setViewClass() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setViewResolvers(List) new < decl_stmt org.springframework.web.accept.FixedContentNegotiationStrategy = new call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.setContentNegotiationManager(ContentNegotiationManager) new call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() call org.springframework.web.servlet.view.ContentNegotiatingViewResolver.afterPropertiesSet() decl_stmt java.lang.String = decl_stmt java.util.Locale = decl_stmt org.springframework.web.servlet.View = call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName() call ContentNegotiatingViewResolver.resolveViewName()