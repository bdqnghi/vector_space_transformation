org.springframework.web.servlet.mvc.multiaction org.junit.Test import java.io.IOException import java.sql.SQLException import java.util.HashMap import java.util.Map import java.util.Properties import javax.servlet.ServletException import javax.servlet.http.HttpServletRequest import javax.servlet.http.HttpServletResponse import javax.servlet.http.HttpSession import static static org.junit.Assert.* import org.springframework.beans.FatalBeanException import org.springframework.context.ApplicationContextException import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockHttpSession import org.springframework.tests.sample.beans.TestBean import org.springframework.web.HttpSessionRequiredException import org.springframework.web.bind.ServletRequestBindingException import org.springframework.web.servlet.ModelAndView import class org.springframework.web.servlet.mvc.multiaction.MultiActionControllerTests public public throws String HttpServletRequest MultiActionController private private throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt HttpServletRequest = new decl_stmt java.lang.String = call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() public public throws String HttpServletRequest InternalPathMethodNameResolver MultiActionController private private throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver = new if != call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setPrefix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setPrefix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setPrefix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setPrefix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setPrefix(String) if != call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setSuffix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setSuffix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setSuffix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setSuffix(String) call org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver.setSuffix(String) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setMethodNameResolver(MethodNameResolver) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setMethodNameResolver(MethodNameResolver) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setMethodNameResolver(MethodNameResolver) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setMethodNameResolver(MethodNameResolver) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setMethodNameResolver(MethodNameResolver) decl_stmt HttpServletRequest = new decl_stmt java.lang.String = call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() call MultiActionController.getMethodNameResolver() ParameterMethodNameResolver MockHttpServletRequest public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new try call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) catch = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) try call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) catch = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) try call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) catch ParameterMethodNameResolver MockHttpServletRequest public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver = new call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setParamName(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setParamName(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setParamName(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setParamName(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setParamName(String) decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) Properties MockHttpServletRequest ParameterMethodNameResolver public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver = new call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setMethodParamNames(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setMethodParamNames(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setMethodParamNames(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setMethodParamNames(String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setMethodParamNames(String) new decl_stmt java.util.Properties = new call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call Properties.setProperty() call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setLogicalMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setLogicalMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setLogicalMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setLogicalMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.setLogicalMappings(Properties) decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) ParameterMethodNameResolver MockHttpServletRequest public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver = new call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() call ParameterMethodNameResolver.setDefaultMethodName() decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) = new call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) call org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver.getHandlerMethodName(HttpServletRequest) TestMaController PropertiesMethodNameResolver HttpServletRequest Properties ModelAndView HttpServletResponse public public throws decl_stmt TestMaController = new decl_stmt HttpServletRequest = new decl_stmt HttpServletResponse = new decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver = new call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == = new = new = new = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == TestMaController PropertiesMethodNameResolver HttpServletRequest Properties ModelAndView HttpServletResponse public public throws decl_stmt TestMaController = new decl_stmt HttpServletRequest = new decl_stmt HttpServletResponse = new decl_stmt java.util.Properties = new call Properties.put() call Properties.put() call Properties.put() call Properties.put() call Properties.put() decl_stmt org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver = new call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver.setMappings(Properties) call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == = new call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() call TestMaController.setMethodNameResolver() = new = new try = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() catch call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == MultiActionController ModelAndView HttpServletRequest TestDelegate HttpServletResponse public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt TestDelegate = new call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setDelegate(Object) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setDelegate(Object) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setDelegate(Object) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setDelegate(Object) call org.springframework.web.servlet.mvc.multiaction.MultiActionController.setDelegate(Object) decl_stmt HttpServletRequest = new decl_stmt HttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() ModelAndView MockHttpServletRequest HttpServletResponse TestMaController public public throws decl_stmt TestMaController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) new decl_stmt HttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == = new = new try call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() catch ModelAndView MockHttpServletRequest HttpServletResponse TestMaController public public throws decl_stmt TestMaController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) decl_stmt HttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == ModelAndView MockHttpServletRequest HttpServletResponse TestMaController public public throws decl_stmt TestMaController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.addParameter(String,String) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) call org.springframework.mock.web.MockHttpServletRequest.setSession(HttpSession) new decl_stmt HttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() call TestMaController.getInvokedMethods() == = new = new try call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() catch ModelAndView HttpServletRequest HttpServletResponse TestMaController public public throws decl_stmt HttpServletRequest = new decl_stmt HttpServletResponse = new decl_stmt TestMaController = new try call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() catch = new = new = new decl_stmt org.springframework.web.portlet.ModelAndView = call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call TestMaController.handleRequest() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() HttpServletRequest HttpServletResponse private private throws decl_stmt HttpServletRequest = new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() decl_stmt HttpServletResponse = new try catch private private throws new public public throws new new new new new long MockHttpServletRequest TestMaController public public throws decl_stmt TestMaController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt long = call TestMaController.getLastModified() call TestMaController.getLastModified() call TestMaController.getLastModified() call TestMaController.getLastModified() call TestMaController.getLastModified() == - long MockHttpServletRequest LastModController public public throws decl_stmt LastModController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt long = call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() == call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() call LastModController.getLastModified() HttpServletRequest HttpServletResponse private private throws decl_stmt HttpServletRequest = new call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() call HttpServletRequest.setAttribute() decl_stmt HttpServletResponse = new return ModelAndView TestMaController public public throws decl_stmt TestMaController = new decl_stmt org.springframework.web.portlet.ModelAndView = new call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() new = new = new call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() = new call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() new new new new = new = new call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() = new call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() call TestMaController.wasInvoked() new new Map ModelAndView MockHttpServletRequest MultiActionController MockHttpServletResponse public public throws decl_stmt java.util.Map = new call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) call java.util.Map.put(K,V) decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() call org.springframework.web.portlet.ModelAndView.getModel() Map ModelAndView MockHttpServletRequest MultiActionController MockHttpServletResponse public public throws decl_stmt java.util.Map = new decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) call java.util.Map.containsKey(Object) Map MockHttpServletRequest MultiActionController MockHttpServletResponse public public throws decl_stmt java.util.Map = new decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() call org.springframework.mock.web.MockHttpServletResponse.getStatus() MultiActionController MockHttpServletRequest MockHttpServletResponse ModelAndView public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() MultiActionController MockHttpServletRequest MockHttpServletResponse ModelAndView public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() call org.springframework.mock.web.MockHttpServletResponse.getContentAsString() MultiActionController MockHttpServletRequest MockHttpServletResponse ModelAndView public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() MultiActionController MockHttpServletRequest MockHttpServletResponse ModelAndView public public throws decl_stmt org.springframework.web.servlet.mvc.multiaction.MultiActionController = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt org.springframework.web.portlet.ModelAndView = call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call MultiActionController.handleRequest() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.hasView() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() call org.springframework.web.portlet.ModelAndView.getViewName() public public public public return new String public public decl_stmt java.lang.String = if == == else call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) call java.lang.String.equals(Object) return new public public != return new public public != return new public public return new Throwable public public throws decl_stmt java.lang.Throwable = if != throw else return new public public return != public public return public public = return new public public return new public public return new public public return public public return new public public return new public public public public return new public public return public public return public public throw new public public return public public public public throw new public public throws public public return public public throw new public public throws return