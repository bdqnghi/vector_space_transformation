org.springframework.web.context.support java.io.IOException import java.util.Collections import java.util.HashMap import java.util.HashSet import java.util.Map import java.util.Set import org.junit.Test import org.springframework.beans.MutablePropertyValues import org.springframework.beans.factory.BeanCreationException import org.springframework.core.io.Resource import org.springframework.mock.web.test.MockServletContext import org.springframework.tests.sample.beans.TestBean import static static org.junit.Assert.* import class org.springframework.web.context.support.ServletContextSupportTests MockServletContext MutablePropertyValues StaticWebApplicationContext Object public public decl_stmt org.springframework.mock.web.MockServletContext = new call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) call org.springframework.mock.web.MockServletContext.setAttribute(String,Object) decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt java.lang.Object = call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() MockServletContext MutablePropertyValues StaticWebApplicationContext public public decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() try call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() catch instanceof MockServletContext MutablePropertyValues StaticWebApplicationContext Object public public decl_stmt org.springframework.mock.web.MockServletContext = new call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) call org.springframework.mock.web.MockServletContext.addInitParameter(String,String) decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() decl_stmt java.lang.Object = call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() call StaticWebApplicationContext.getBean() MockServletContext MutablePropertyValues StaticWebApplicationContext public public decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.StaticWebApplicationContext = new call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) call org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(ServletContext) decl_stmt org.springframework.beans.MutablePropertyValues = new call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call org.springframework.beans.MutablePropertyValues.add(String,Object) call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() call StaticWebApplicationContext.registerSingleton() try call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() call StaticWebApplicationContext.refresh() catch instanceof MockServletContext decl Map ServletContextAttributeExporter TestBean public public decl_stmt org.springframework.tests.sample.beans.TestBean = new decl_stmt java.util.Map < = new < call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() call decl Map.put() decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.ServletContextAttributeExporter = new call ServletContextAttributeExporter.setAttributes() call ServletContextAttributeExporter.setAttributes() call ServletContextAttributeExporter.setAttributes() call ServletContextAttributeExporter.setAttributes() call ServletContextAttributeExporter.setAttributes() call org.springframework.web.context.support.ServletContextAttributeExporter.setServletContext(ServletContext) call org.springframework.web.context.support.ServletContextAttributeExporter.setServletContext(ServletContext) call org.springframework.web.context.support.ServletContextAttributeExporter.setServletContext(ServletContext) call org.springframework.web.context.support.ServletContextAttributeExporter.setServletContext(ServletContext) call org.springframework.web.context.support.ServletContextAttributeExporter.setServletContext(ServletContext) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) call org.springframework.mock.web.MockServletContext.getAttribute(String) MockServletContext ServletContextResourceLoader public public decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.web.context.support.ServletContextResourceLoader = new call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() call ServletContextResourceLoader.getResource() MockServletContext decl Set decl Set ServletContextResourcePatternResolver decl Resource public public throws decl_stmt java.util.Set final final final < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.springframework.mock.web.MockServletContext = new public < public < if return return decl_stmt org.springframework.web.context.support.ServletContextResourcePatternResolver = new decl_stmt org.springframework.core.io.Resource = call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() decl_stmt java.util.Set < = new < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() public < public < if return return decl Set MockServletContext decl Set ServletContextResourcePatternResolver decl Resource public public throws decl_stmt java.util.Set final final final < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.springframework.mock.web.MockServletContext = new public < public < if return if return if return return decl_stmt org.springframework.web.context.support.ServletContextResourcePatternResolver = new decl_stmt org.springframework.core.io.Resource = call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() decl_stmt java.util.Set < = new < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() public < public < if return if return if return return decl Set decl Set ServletContextResourcePatternResolver decl Set MockServletContext decl Resource public public throws decl_stmt java.util.Set final final final < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt java.util.Set final final final < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.springframework.mock.web.MockServletContext = new public < public < if return if return if return if return return decl_stmt org.springframework.web.context.support.ServletContextResourcePatternResolver = new decl_stmt org.springframework.core.io.Resource = call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() decl_stmt java.util.Set < = new < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() public < public < if return if return if return if return return MockServletContext decl Set decl Set ServletContextResourcePatternResolver decl Resource public public throws decl_stmt java.util.Set final final final < = new < call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() decl_stmt org.springframework.mock.web.MockServletContext = new public < public < if return return decl_stmt org.springframework.web.context.support.ServletContextResourcePatternResolver = new decl_stmt org.springframework.core.io.Resource = call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() call ServletContextResourcePatternResolver.getResources() decl_stmt java.util.Set < = new < for : call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.add() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.size() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() call decl Set.contains() public < public < if return return