org.springframework.test.web.client.response java.io.IOException import java.io.InputStream import java.io.UnsupportedEncodingException import java.net.URI import org.springframework.core.io.Resource import org.springframework.http.HttpHeaders import org.springframework.http.HttpStatus import org.springframework.http.MediaType import org.springframework.http.client.ClientHttpRequest import org.springframework.http.client.ClientHttpResponse import org.springframework.mock.http.client.MockClientHttpResponse import org.springframework.test.web.client.ResponseCreator import org.springframework.util.Assert import class org.springframework.test.web.client.response.DefaultResponseCreator super super implements decl byte Resource HttpStatus HttpHeaders MockClientHttpResponse InputStream public public throws decl_stmt org.springframework.mock.http.client.MockClientHttpResponse if != decl_stmt java.io.InputStream = = new else = new call MockClientHttpResponse.getHeaders() call MockClientHttpResponse.getHeaders() call MockClientHttpResponse.getHeaders() call MockClientHttpResponse.getHeaders() call MockClientHttpResponse.getHeaders() return public public try = call decl byte.getBytes() call decl byte.getBytes() call decl byte.getBytes() call decl byte.getBytes() call decl byte.getBytes() catch throw new return public public = return public public = return public public if != return public public return public public for : call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() call org.springframework.http.HttpHeaders.keySet() for : call org.springframework.http.HttpHeaders.get(Object) call org.springframework.http.HttpHeaders.get(Object) call org.springframework.http.HttpHeaders.get(Object) call org.springframework.http.HttpHeaders.get(Object) call org.springframework.http.HttpHeaders.get(Object) return