org.springframework.web.socket.sockjs.client java.io.ByteArrayOutputStream import java.net.URI import java.nio.ByteBuffer import java.util.Enumeration import org.eclipse.jetty.client.HttpClient import org.eclipse.jetty.client.api.ContentResponse import org.eclipse.jetty.client.api.Request import org.eclipse.jetty.client.api.Response import org.eclipse.jetty.client.util.StringContentProvider import org.eclipse.jetty.http.HttpFields import org.eclipse.jetty.http.HttpMethod import org.springframework.context.Lifecycle import org.springframework.http.HttpHeaders import org.springframework.http.HttpStatus import org.springframework.http.ResponseEntity import org.springframework.util.Assert import org.springframework.util.concurrent.SettableListenableFuture import org.springframework.web.client.HttpServerErrorException import org.springframework.web.socket.CloseStatus import org.springframework.web.socket.TextMessage import org.springframework.web.socket.WebSocketHandler import org.springframework.web.socket.WebSocketSession import org.springframework.web.socket.sockjs.SockJsException import org.springframework.web.socket.sockjs.SockJsTransportFailureException import org.springframework.web.socket.sockjs.frame.SockJsFrame import class org.springframework.web.socket.sockjs.client.JettyXhrTransport super super extends super implements HttpClient public public return public public try if ! catch throw new + public public try if catch throw new + public public return SockJsResponseListener HttpHeaders protected protected < decl_stmt org.springframework.http.HttpHeaders = decl_stmt SockJsResponseListener = new Request private private if + decl_stmt sun.net.httpserver.Request = call Request.send() call Request.send() call Request.send() call Request.send() call Request.send() protected < protected < return public < public < return Request HttpStatus HttpHeaders ContentResponse protected < protected < decl_stmt sun.net.httpserver.Request = if != call Request.content() call Request.content() call Request.content() call Request.content() call Request.content() new decl_stmt ContentResponse try = call Request.send() call Request.send() call Request.send() call Request.send() call Request.send() catch throw new + decl_stmt HttpStatus = call ContentResponse.getStatus() call ContentResponse.getStatus() call ContentResponse.getStatus() call ContentResponse.getStatus() call ContentResponse.getStatus() decl_stmt org.springframework.http.HttpHeaders = call ContentResponse.getHeaders() call ContentResponse.getHeaders() call ContentResponse.getHeaders() call ContentResponse.getHeaders() call ContentResponse.getHeaders() return call ContentResponse.getContent() call ContentResponse.getContent() call ContentResponse.getContent() call ContentResponse.getContent() call ContentResponse.getContent() != new < call ContentResponse.getContentAsString() call ContentResponse.getContentAsString() call ContentResponse.getContentAsString() call ContentResponse.getContentAsString() call ContentResponse.getContentAsString() : new < private static private static for : for : HttpHeaders decl Enumeration decl Enumeration String String private static private static decl_stmt org.springframework.http.HttpHeaders = new decl_stmt java.util.Enumeration < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() decl_stmt java.util.Enumeration < = while call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() call decl Enumeration.hasMoreElements() decl_stmt java.lang.String = call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call decl Enumeration.nextElement() call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) call org.springframework.http.HttpHeaders.add(String,String) return HttpStatus public public if != decl_stmt HttpStatus = new public public if + int public public while if if new return if == break decl_stmt int = if == else String decl byte private private decl_stmt byte = decl_stmt java.lang.String = new if + if ! new public public if > if public public if return if else new