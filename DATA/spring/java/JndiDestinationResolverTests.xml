org.springframework.jms.support.destination javax.jms.Destination import javax.jms.Session import javax.naming.NamingException import org.junit.Test import org.springframework.jms.StubTopic import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jms.support.destination.JndiDestinationResolverTests String Destination Destination Session JndiDestinationResolver public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.support.destination.JndiDestinationResolver = new decl_stmt javax.print.attribute.standard.Destination = call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() Destination Session CountingCannedJndiDestinationResolver public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt CountingCannedJndiDestinationResolver = new call CountingCannedJndiDestinationResolver.setCache() call CountingCannedJndiDestinationResolver.setCache() call CountingCannedJndiDestinationResolver.setCache() call CountingCannedJndiDestinationResolver.setCache() call CountingCannedJndiDestinationResolver.setCache() decl_stmt javax.print.attribute.standard.Destination = call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() = call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.resolveDestinationName() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() call CountingCannedJndiDestinationResolver.getCallCount() Destination DestinationResolver Session JndiDestinationResolver public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.support.destination.DestinationResolver = call DestinationResolver.resolveDestinationName() call DestinationResolver.resolveDestinationName() call DestinationResolver.resolveDestinationName() call DestinationResolver.resolveDestinationName() call DestinationResolver.resolveDestinationName() decl_stmt org.springframework.jms.support.destination.JndiDestinationResolver = new protected < protected < < throws throw new call org.springframework.jms.support.destination.JndiDestinationResolver.setFallbackToDynamicDestination(boolean) call org.springframework.jms.support.destination.JndiDestinationResolver.setFallbackToDynamicDestination(boolean) call org.springframework.jms.support.destination.JndiDestinationResolver.setFallbackToDynamicDestination(boolean) call org.springframework.jms.support.destination.JndiDestinationResolver.setFallbackToDynamicDestination(boolean) call org.springframework.jms.support.destination.JndiDestinationResolver.setFallbackToDynamicDestination(boolean) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) decl_stmt javax.print.attribute.standard.Destination = call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() protected < protected < < throws throw new DestinationResolver Session JndiDestinationResolver public public throws decl_stmt sun.security.pkcs11.Session final final = decl_stmt org.springframework.jms.support.destination.DestinationResolver = decl_stmt org.springframework.jms.support.destination.JndiDestinationResolver final final = new protected < protected < < throws throw new call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) call org.springframework.jms.support.destination.JndiDestinationResolver.setDynamicDestinationResolver(DestinationResolver) try call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() call JndiDestinationResolver.resolveDestinationName() catch protected < protected < < throws throw new protected < protected < < throws if = return public public return protected < protected < < throws ++ return