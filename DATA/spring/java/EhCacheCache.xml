org.springframework.cache.ehcache java.util.concurrent.Callable import net.sf.ehcache.Ehcache import net.sf.ehcache.Element import net.sf.ehcache.Status import org.springframework.cache.Cache import org.springframework.cache.support.SimpleValueWrapper import org.springframework.util.Assert import class org.springframework.cache.ehcache.EhCacheCache super super implements Ehcache public final public final return public final public final return Element public public decl_stmt javax.swing.text.Element = return Element public < public < < decl_stmt javax.swing.text.Element = if != return call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() else try = if != return call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() else return finally T private < private < < decl_stmt T try = catch throw new return Object Element public < public < < decl_stmt javax.swing.text.Element = decl_stmt java.lang.Object = != call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() call Element.getObjectValue() : if != && != && ! throw new + + + return public public new Element public public decl_stmt javax.swing.text.Element = new return public public public public private private return private private return != new :