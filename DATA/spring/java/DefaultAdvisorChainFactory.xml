org.springframework.aop.framework java.io.Serializable import java.lang.reflect.Method import java.util.ArrayList import java.util.Arrays import java.util.List import org.aopalliance.intercept.Interceptor import org.aopalliance.intercept.MethodInterceptor import org.springframework.aop.Advisor import org.springframework.aop.IntroductionAdvisor import org.springframework.aop.MethodMatcher import org.springframework.aop.PointcutAdvisor import org.springframework.aop.framework.adapter.AdvisorAdapterRegistry import org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry import org.springframework.aop.support.MethodMatchers import class annotation org.springframework.aop.framework.DefaultAdvisorChainFactory super super implements MethodMatcher decl Interceptor PointcutAdvisor AdvisorAdapterRegistry decl List boolean IntroductionAdvisor decl Class public < public < < decl_stmt java.util.List < = new < decl_stmt java.lang.Class < = != : decl_stmt boolean = decl_stmt org.springframework.aop.framework.adapter.AdvisorAdapterRegistry = for : if instanceof decl_stmt org.springframework.aop.PointcutAdvisor = if || call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() decl_stmt org.aopalliance.intercept.MethodInterceptor = call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() decl_stmt org.springframework.aop.MethodMatcher = call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() call PointcutAdvisor.getPointcut() if if call org.springframework.aop.MethodMatcher.isRuntime() call org.springframework.aop.MethodMatcher.isRuntime() call org.springframework.aop.MethodMatcher.isRuntime() call org.springframework.aop.MethodMatcher.isRuntime() call org.springframework.aop.MethodMatcher.isRuntime() for : call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() new else call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else if instanceof decl_stmt org.springframework.aop.IntroductionAdvisor = if || call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() decl_stmt Interceptor = call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() else decl_stmt Interceptor = call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call AdvisorAdapterRegistry.getInterceptors() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() call decl List.addAll() return IntroductionAdvisor Advisor private static private static < for = < ++ decl_stmt org.springframework.aop.Advisor = if instanceof decl_stmt org.springframework.aop.IntroductionAdvisor = if call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() call org.springframework.aop.IntroductionAdvisor.getClassFilter() return return