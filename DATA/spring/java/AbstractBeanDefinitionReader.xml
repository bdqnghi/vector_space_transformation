org.springframework.beans.factory.support java.io.IOException import java.util.Set import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.beans.factory.BeanDefinitionStoreException import org.springframework.core.env.Environment import org.springframework.core.env.EnvironmentCapable import org.springframework.core.env.StandardEnvironment import org.springframework.core.io.Resource import org.springframework.core.io.ResourceLoader import org.springframework.core.io.support.PathMatchingResourcePatternResolver import org.springframework.core.io.support.ResourcePatternResolver import org.springframework.util.Assert import class org.springframework.beans.factory.support.AbstractBeanDefinitionReader super super implements Environment BeanNameGenerator ResourceLoader ClassLoader BeanDefinitionRegistry Log public final public final return public final public final return public public = public public return public public = public public return public public = public public return public public = != : new public public return int public public throws decl_stmt int = for : += return public public throws return int ResourceLoader Resource decl Resource public public < throws decl_stmt org.springframework.core.io.ResourceLoader = if == throw new + + if instanceof try decl_stmt org.springframework.core.io.Resource = decl_stmt int = if != for : if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + return catch throw new + + else decl_stmt org.springframework.core.io.Resource = call ResourceLoader.getResource() call ResourceLoader.getResource() call ResourceLoader.getResource() call ResourceLoader.getResource() call ResourceLoader.getResource() decl_stmt int = if != if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + return int public public throws decl_stmt int = for : += return