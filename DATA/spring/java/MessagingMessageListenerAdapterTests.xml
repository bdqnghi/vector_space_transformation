org.springframework.jms.listener.adapter java.lang.reflect.Method import java.util.ArrayList import java.util.List import javax.jms.Destination import javax.jms.JMSException import javax.jms.MessageProducer import javax.jms.Queue import javax.jms.Session import javax.jms.TextMessage import javax.jms.Topic import com.fasterxml.jackson.annotation.JsonView import org.junit.Before import org.junit.Test import org.springframework.beans.factory.support.StaticListableBeanFactory import org.springframework.jms.StubTextMessage import org.springframework.jms.support.JmsHeaders import org.springframework.jms.support.converter.MappingJackson2MessageConverter import org.springframework.jms.support.converter.MessageConverter import org.springframework.jms.support.converter.MessageType import org.springframework.messaging.Message import org.springframework.messaging.converter.MessageConversionException import org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory import org.springframework.messaging.support.MessageBuilder import org.springframework.util.ReflectionUtils import static static org.junit.Assert.* import static static org.mockito.BDDMockito.* import class org.springframework.jms.listener.adapter.MessagingMessageListenerAdapterTests SampleBean Destination DefaultMessageHandlerMethodFactory public public Destination MessagingMessageListenerAdapter Session decl Message decl javax public public throws decl_stmt javax.print.attribute.standard.Destination = new decl_stmt org.springframework.messaging.Message < = decl_stmt sun.security.pkcs11.Session = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() new decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = decl_stmt org.springframework.messaging.Message = call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call decl javax.getStringProperty() call decl javax.getStringProperty() call decl javax.getStringProperty() call decl javax.getStringProperty() call decl javax.getStringProperty() call decl javax.getJMSType() call decl javax.getJMSType() call decl javax.getJMSType() call decl javax.getJMSType() call decl javax.getJMSType() call decl javax.getJMSReplyTo() call decl javax.getJMSReplyTo() call decl javax.getJMSReplyTo() call decl javax.getJMSReplyTo() call decl javax.getJMSReplyTo() decl Message decl javax decl jms public public decl_stmt org.springframework.messaging.Message = new decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = try call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() catch catch decl Message decl javax decl jms public public decl_stmt org.springframework.messaging.Message = new decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = try call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() call decl Message.onMessage() catch catch Session decl jms decl javax decl Message public public throws decl_stmt org.springframework.messaging.Message = decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.support.converter.MessageConverter = call decl Message.fromMessage() call decl Message.fromMessage() call decl Message.fromMessage() call decl Message.fromMessage() call decl Message.fromMessage() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call Session.setMessageConverter() call Session.setMessageConverter() call Session.setMessageConverter() call Session.setMessageConverter() call Session.setMessageConverter() call Session.onMessage() call Session.onMessage() call Session.onMessage() call Session.onMessage() call Session.onMessage() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() call SampleBean.simples() MessagingMessageListenerAdapter decl javax Session decl Message MessageConverter public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt org.springframework.jms.support.converter.MessageConverter = call MessageConverter.toMessage() call MessageConverter.toMessage() call MessageConverter.toMessage() call MessageConverter.toMessage() call MessageConverter.toMessage() new decl_stmt org.springframework.messaging.Message < = decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() decl_stmt org.springframework.messaging.Message = call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() call MessagingMessageListenerAdapter.buildMessage() MessagingMessageListenerAdapter MessageProducer Session Queue TextMessage public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt java.util.Queue = call Session.createQueue() call Session.createQueue() call Session.createQueue() call Session.createQueue() call Session.createQueue() decl_stmt MessageProducer = decl_stmt org.springframework.web.socket.TextMessage = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) MessagingMessageListenerAdapter MessageProducer Session Topic TextMessage public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt Topic = call Session.createTopic() call Session.createTopic() call Session.createTopic() call Session.createTopic() call Session.createTopic() decl_stmt MessageProducer = decl_stmt org.springframework.web.socket.TextMessage = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) MessagingMessageListenerAdapter Session MessageProducer TextMessage public public throws decl_stmt sun.security.pkcs11.Session = decl_stmt MessageProducer = decl_stmt org.springframework.web.socket.TextMessage = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) MessagingMessageListenerAdapter MessageProducer Session Queue TextMessage public public throws decl_stmt java.util.Queue = decl_stmt sun.security.pkcs11.Session = decl_stmt MessageProducer = decl_stmt org.springframework.web.socket.TextMessage = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = TextMessage public public throws decl_stmt org.springframework.web.socket.TextMessage = MappingJackson2MessageConverter MessagingMessageListenerAdapter Session MessageProducer TextMessage Queue public public throws decl_stmt java.util.Queue = decl_stmt sun.security.pkcs11.Session = decl_stmt MessageProducer = decl_stmt org.springframework.web.socket.TextMessage = call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createTextMessage() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() call Session.createProducer() decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = decl_stmt org.springframework.jms.support.converter.MappingJackson2MessageConverter = new call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setTargetType(MessageType) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setTargetType(MessageType) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setTargetType(MessageType) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setTargetType(MessageType) call org.springframework.jms.support.converter.MappingJackson2MessageConverter.setTargetType(MessageType) call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setMessageConverter() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call MessagingMessageListenerAdapter.setDefaultResponseDestination() call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.onMessage(javax,jms,Message,Session) return Method protected protected decl_stmt com.sun.jdi.Method = return MessagingMessageListenerAdapter protected protected decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = new call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) return MessagingMessageListenerAdapter Method protected protected final final decl_stmt com.sun.jdi.Method = decl_stmt org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter = new protected protected return call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter.setHandlerMethod(InvocableHandlerMethod) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.createInvocableHandlerMethod(Object,Method) return protected protected return private private call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.setBeanFactory(BeanFactory) new call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() call org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory.afterPropertiesSet() public public < public < public < < return public < public < < return public < public < < return public < public < < return public < public < < return new <> public < public < < return public < public < < return public public < return private private return new public public throw new public public throw new public public return public public = public public return public public = public public return public public =