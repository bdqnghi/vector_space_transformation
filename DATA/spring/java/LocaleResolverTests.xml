org.springframework.web.servlet.i18n java.util.Locale import java.util.TimeZone import org.junit.Test import org.springframework.context.i18n.LocaleContext import org.springframework.context.i18n.SimpleLocaleContext import org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext import org.springframework.context.i18n.TimeZoneAwareLocaleContext import org.springframework.mock.web.test.MockHttpServletRequest import org.springframework.mock.web.test.MockHttpServletResponse import org.springframework.mock.web.test.MockServletContext import org.springframework.web.servlet.LocaleContextResolver import org.springframework.web.servlet.LocaleResolver import static static org.junit.Assert.* import class org.springframework.web.servlet.i18n.LocaleResolverTests public public new public public new public public new public public new LocaleContextResolver Locale LocaleContext MockHttpServletRequest MockServletContext MockHttpServletResponse private private decl_stmt org.springframework.mock.web.MockServletContext = new decl_stmt org.springframework.mock.web.MockHttpServletRequest = new call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) call org.springframework.mock.web.MockHttpServletRequest.addPreferredLocale(Locale) decl_stmt org.springframework.mock.web.MockHttpServletResponse = new decl_stmt java.util.Locale = try if ! = catch if if instanceof decl_stmt org.springframework.web.servlet.LocaleContextResolver = decl_stmt org.springframework.context.i18n.LocaleContext = call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) if call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() else call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() instanceof if instanceof try call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() new if ! = call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() if instanceof else call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() new = call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() instanceof call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() call LocaleContextResolver.setLocaleContext() new = call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call org.springframework.web.servlet.LocaleContextResolver.resolveLocaleContext(HttpServletRequest) call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() instanceof if instanceof call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() call LocaleContext.getLocale() catch if