org.springframework.instrument.classloading java.lang.instrument.ClassFileTransformer import java.security.ProtectionDomain import org.junit.Test import static static org.junit.Assert.* import class org.springframework.instrument.classloading.ReflectiveLoadTimeWeaverTests = public = public new = public = public new JustAddTransformerClassLoader ReflectiveLoadTimeWeaver public public decl_stmt JustAddTransformerClassLoader = new decl_stmt org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver = new call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.addTransformer(ClassFileTransformer) call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.addTransformer(ClassFileTransformer) call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.addTransformer(ClassFileTransformer) call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.addTransformer(ClassFileTransformer) call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.addTransformer(ClassFileTransformer) new public public < return call JustAddTransformerClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call JustAddTransformerClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call JustAddTransformerClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call JustAddTransformerClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call JustAddTransformerClassLoader.getNumTimesGetThrowawayClassLoaderCalled() public public < return = public = public new new ReflectiveLoadTimeWeaver ClassLoader public public decl_stmt org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver = new new decl_stmt java.lang.ClassLoader = call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() TotallyCompliantClassLoader ClassLoader ReflectiveLoadTimeWeaver public public decl_stmt TotallyCompliantClassLoader = new decl_stmt org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver = new decl_stmt java.lang.ClassLoader = call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver.getThrowawayClassLoader() call TotallyCompliantClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call TotallyCompliantClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call TotallyCompliantClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call TotallyCompliantClassLoader.getNumTimesGetThrowawayClassLoaderCalled() call TotallyCompliantClassLoader.getNumTimesGetThrowawayClassLoaderCalled() public public return public public ++ public public return public public ++ return