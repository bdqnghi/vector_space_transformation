org.springframework.scripting.jruby org.junit.After import org.junit.Test import org.springframework.aop.framework.Advised import org.springframework.aop.support.AopUtils import org.springframework.context.support.ClassPathXmlApplicationContext import org.springframework.scripting.Messenger import org.springframework.tests.aop.advice.CountingBeforeAdvice import org.springframework.util.MBeanTestUtils import static static org.junit.Assert.* import class org.springframework.scripting.jruby.AdvisedJRubyScriptFactoryTests String String decl Class String public public throws Messenger ClassPathXmlApplicationContext CountingBeforeAdvice public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new try decl_stmt org.springframework.scripting.Messenger = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() instanceof decl_stmt org.springframework.tests.aop.advice.CountingBeforeAdvice = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() Messenger ClassPathXmlApplicationContext CountingBeforeAdvice public public decl_stmt org.springframework.context.support.ClassPathXmlApplicationContext = new try decl_stmt org.springframework.scripting.Messenger = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() instanceof decl_stmt org.springframework.tests.aop.advice.CountingBeforeAdvice = call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call ClassPathXmlApplicationContext.getBean() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call Messenger.getMessage() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() call CountingBeforeAdvice.getCalls() finally call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close() call ClassPathXmlApplicationContext.close()