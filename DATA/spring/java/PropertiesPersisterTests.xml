org.springframework.util java.io.ByteArrayInputStream import java.io.ByteArrayOutputStream import java.io.IOException import java.io.StringReader import java.io.StringWriter import java.util.Properties import org.junit.Test import static static org.junit.Assert.* import class org.springframework.util.PropertiesPersisterTests String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = String String Properties public public throws decl_stmt java.lang.String = decl_stmt java.util.Properties = decl_stmt java.lang.String = DefaultPropertiesPersister Properties private private throws decl_stmt org.springframework.util.DefaultPropertiesPersister = new decl_stmt java.util.Properties = new if call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) new else call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) call org.springframework.util.DefaultPropertiesPersister.load(Properties,Reader) new call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) call java.util.Properties.getProperty(String) return String StringWriter DefaultPropertiesPersister ByteArrayOutputStream private private throws decl_stmt org.springframework.util.DefaultPropertiesPersister = new decl_stmt java.lang.String = if decl_stmt StringWriter = new call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) = call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() call StringWriter.toString() else decl_stmt java.io.ByteArrayOutputStream = new call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) call org.springframework.util.DefaultPropertiesPersister.store(Properties,OutputStream,String) = new call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() call ByteArrayOutputStream.toByteArray() if != call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) != - return