org.springframework.web.servlet.resource java.util.ArrayList import java.util.Collections import java.util.Comparator import java.util.LinkedHashMap import java.util.List import java.util.Map import javax.servlet.http.HttpServletRequest import org.apache.commons.logging.Log import org.apache.commons.logging.LogFactory import org.springframework.context.ApplicationContext import org.springframework.context.ApplicationListener import org.springframework.context.event.ContextRefreshedEvent import org.springframework.core.annotation.AnnotationAwareOrderComparator import org.springframework.util.AntPathMatcher import org.springframework.util.PathMatcher import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping import org.springframework.web.util.UrlPathHelper import class org.springframework.web.servlet.resource.ResourceUrlProvider super super implements Log UrlPathHelper decl Map boolean PathMatcher public public = public public return public public = public public return public public < if != = public < public < return public public return public public if if && call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() if ! = decl Map Object decl List ResourceHttpRequestHandler protected protected call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() decl_stmt java.util.Map < = decl_stmt java.util.List < = new < call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() call decl Map.values() for : for : decl_stmt java.lang.Object = if instanceof decl_stmt org.springframework.web.servlet.resource.ResourceHttpRequestHandler = if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + + + call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() + + + call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() String String int String int String public final public final if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + decl_stmt int = decl_stmt int = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = decl_stmt java.lang.String = return != + + : String String private private decl_stmt java.lang.String = decl_stmt java.lang.String = return call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) call java.lang.String.indexOf(String,int) int private private decl_stmt int = return > : String String ResourceResolverChain String ResourceHttpRequestHandler decl List decl Comparator public final public final if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + decl_stmt java.util.List < = new < for : if call decl List.add() call decl List.add() call decl List.add() call decl List.add() call decl List.add() if ! call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() call decl List.isEmpty() decl_stmt java.util.Comparator < = for : decl_stmt java.lang.String = decl_stmt java.lang.String = if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + decl_stmt org.springframework.web.servlet.resource.ResourceHttpRequestHandler = decl_stmt org.springframework.web.servlet.resource.ResourceResolverChain = new call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResourceResolvers() decl_stmt java.lang.String = call ResourceResolverChain.resolveUrlPath() call ResourceResolverChain.resolveUrlPath() call ResourceResolverChain.resolveUrlPath() call ResourceResolverChain.resolveUrlPath() call ResourceResolverChain.resolveUrlPath() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() call org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getLocations() if == continue if call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.isTraceEnabled() call Log.trace() call Log.trace() call Log.trace() call Log.trace() call Log.trace() + + return + if call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.isDebugEnabled() call Log.debug() call Log.debug() call Log.debug() call Log.debug() call Log.debug() + + return